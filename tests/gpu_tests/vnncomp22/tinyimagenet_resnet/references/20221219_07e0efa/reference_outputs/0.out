Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: instances.csv
  results_file: out.txt
  root_path: ../../vnncomp2022_benchmarks/benchmarks/cifar100_tinyimagenet_resnet
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: merge_bn
data:
  start: 75
  end: 76
  select_instance: null
  num_outputs: 200
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: TinyImageNet
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 256
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.25
    iteration: 20
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.05
    lr_beta: 0.1
    lr_decay: 0.98
    optimizer: adam
    iteration: 5
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 10000
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: false
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 7
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 10
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 00:20:30 2022 on diablo.cs.ucla.edu
customized start/end sample from instance 75 to 76 in instances.csv
Internal results will be saved to a-b-crown_[instances]_start=75_end=76_iter=5_b=256_timeout=360_branching=kfsb-max-7_lra-init=0.25_lra=0.05_lrb=0.1_PGD=skip_cplex_cuts=False_initial_max_domains=10000.npz.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx onnx/TinyImageNet_resnet_medium.onnx
Using vnnlib vnnlib/TinyImageNet_resnet_medium_prop_idx_4183_sidx_730_eps_0.0039.vnnlib
Precompiled vnnlib file found at ../../vnncomp2022_benchmarks/benchmarks/cifar100_tinyimagenet_resnet/vnnlib/TinyImageNet_resnet_medium_prop_idx_4183_sidx_730_eps_0.0039.vnnlib.compiled
Loading onnx ../../vnncomp2022_benchmarks/benchmarks/cifar100_tinyimagenet_resnet/onnx/TinyImageNet_resnet_medium.onnx wih quirks {}
Onnx optimization with flag: merge_bn
Found existed optimized onnx model at ../../vnncomp2022_benchmarks/benchmarks/cifar100_tinyimagenet_resnet/onnx/TinyImageNet_resnet_medium.onnx.optimized
Model prediction is: tensor([[-48.96245193, -41.84916306, -43.22867584, -37.26539230, -42.41588974,
         -33.74946213, -29.17095184, -34.93138885, -37.27022934, -44.89703369,
         -36.23125458, -40.70712280, -46.76036835, -37.24354172, -38.56678009,
         -30.38514328, -35.77635574, -43.33392334, -41.36572266, -41.33423233,
         -42.66328430, -38.28625870, -47.38159943, -50.74755859, -39.18838882,
         -42.78311157, -42.06320190, -36.26544952, -43.92737579, -37.82156754,
         -36.95807648, -39.63823700, -39.25932693, -40.64210129, -37.08115387,
         -46.22766113, -37.41521835, -38.74702835, -41.19254684, -47.50352859,
         -42.23517609, -38.52185440, -38.85233307, -41.46572876, -46.13969803,
         -49.06187439, -44.63264465, -40.48711777, -36.72414398, -43.41844177,
         -44.34620285, -40.39298630, -48.52366257, -41.67699814, -37.55050659,
         -32.16638947, -46.98056030, -45.48302078, -46.70468521, -33.69355774,
         -33.44624329, -42.86656189, -34.00085449, -30.70234299, -31.90902710,
         -36.37807465, -46.28406143, -30.05976295, -31.33143616, -35.67920303,
         -35.79720688, -44.21152115, -29.64691734, -25.60146332, -41.53871155,
         -21.68544388, -38.98377228, -30.18086624, -26.95459747, -37.38483810,
         -30.24887276, -42.84693527, -48.25752258, -34.21525192, -36.69345474,
         -35.29444504, -35.03619766, -20.10329056, -32.96392059, -31.65377426,
         -36.00435638, -55.08924103, -35.21063232, -42.90870285, -33.89883423,
         -43.88257217, -44.77166748, -44.52236557, -40.50318146, -36.22980499,
         -30.74397850, -39.37062454, -37.74164581, -35.05020142, -26.56411934,
         -34.80356598, -31.05794525, -41.38970184, -38.73483658, -31.27875710,
         -26.60844040, -41.17437363, -38.54306030, -31.53397179, -41.22713852,
         -45.28290176, -37.11436081, -13.36777878, -41.67531586, -35.60533142,
         -37.05653763, -41.91803360, -35.51452637, -30.85328865, -49.71817017,
         -32.78477859, -38.65879822, -27.54367828, -25.70880318, -40.38442993,
         -27.05718231, -27.51876450, -39.53288269, -38.97758484, -32.14861298,
         -30.62784386, -33.87557220, -39.59855270, -32.75841522, -23.04721069,
         -39.80014038, -20.64662743, -35.69609833, -24.97539520, -31.91172600,
         -36.44450760, -40.26949692, -36.32550430, -35.44742584, -32.04455185,
         -30.70738602, -22.71039963, -39.36690140, -30.83471298, -35.15029526,
         -14.65929985, -29.53542709, -38.48392868, -35.70727921, -38.94684982,
         -31.49138832, -37.82547379, -43.74998856, -38.19274902, -42.00492096,
         -46.42121506, -35.19087982, -37.05065918, -31.45709419, -35.74375153,
         -43.10026932, -43.07632828, -28.05554962, -36.57267761, -30.04645348,
         -29.14936829, -37.38367844, -35.08927917, -36.21087265, -33.12870026,
         -37.63295746, -28.95899773, -34.33067703, -33.83725739, -22.35802460,
         -38.49137878, -29.86592674, -31.65887833, -30.43900108, -28.86582184,
         -35.72374725, -30.17511559, -39.73111725, -30.37339020, -46.09392166,
         -44.29032898, -51.80622101, -47.43177032, -45.71535873, -32.93479156]],
       device='cuda:0')
layer /86 using sparse-features alpha with shape [602]; unstable size 602; total size 46656 (torch.Size([1, 64, 27, 27]))
layer /86 start_node /input.4 using sparse-spec alpha with unstable size 348 total_size 25088 output_shape (128, 14, 14)
layer /86 start_node /input.8 using sparse-spec alpha with unstable size 184 total_size 25088 output_shape (128, 14, 14)
layer /86 start_node /input.12 using sparse-spec alpha with unstable size 2 total_size 25088 output_shape (128, 14, 14)
layer /86 start_node /input.16 using sparse-spec alpha with unstable size 14 total_size 25088 output_shape (128, 14, 14)
layer /86 start_node /input.20 using sparse-spec alpha with unstable size 41 total_size 6272 output_shape torch.Size([128, 7, 7])
layer /86 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /86 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /88 using sparse-features alpha with shape [348]; unstable size 348; total size 25088 (torch.Size([1, 128, 14, 14]))
layer /88 start_node /input.8 using sparse-spec alpha with unstable size 184 total_size 25088 output_shape (128, 14, 14)
layer /88 start_node /input.12 using sparse-spec alpha with unstable size 2 total_size 25088 output_shape (128, 14, 14)
layer /88 start_node /input.16 using sparse-spec alpha with unstable size 14 total_size 25088 output_shape (128, 14, 14)
layer /88 start_node /input.20 using sparse-spec alpha with unstable size 41 total_size 6272 output_shape torch.Size([128, 7, 7])
layer /88 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /88 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /93 using sparse-features alpha with shape [184]; unstable size 184; total size 25088 (torch.Size([1, 128, 14, 14]))
layer /93 start_node /input.12 using sparse-spec alpha with unstable size 2 total_size 25088 output_shape (128, 14, 14)
layer /93 start_node /input.16 using sparse-spec alpha with unstable size 14 total_size 25088 output_shape (128, 14, 14)
layer /93 start_node /input.20 using sparse-spec alpha with unstable size 41 total_size 6272 output_shape (128, 7, 7)
layer /93 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /93 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /97 using sparse-features alpha with shape [2]; unstable size 2; total size 25088 (torch.Size([1, 128, 14, 14]))
layer /97 start_node /input.16 using sparse-spec alpha with unstable size 14 total_size 25088 output_shape (128, 14, 14)
layer /97 start_node /input.20 using sparse-spec alpha with unstable size 41 total_size 6272 output_shape (128, 7, 7)
layer /97 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /97 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /101 using sparse-features alpha with shape [14]; unstable size 14; total size 25088 (torch.Size([1, 128, 14, 14]))
layer /101 start_node /input.20 using sparse-spec alpha with unstable size 41 total_size 6272 output_shape (128, 7, 7)
layer /101 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /101 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /105 using sparse-features alpha with shape [41]; unstable size 41; total size 6272 (torch.Size([1, 128, 7, 7]))
layer /105 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /105 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /110 using sparse-features alpha with shape [0]; unstable size 0; total size 6272 (torch.Size([1, 128, 7, 7]))
layer /110 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /110 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /114 using sparse-features alpha with shape [0]; unstable size 0; total size 6272 (torch.Size([1, 128, 7, 7]))
layer /114 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /114 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /118 using sparse-features alpha with shape [0]; unstable size 0; total size 6272 (torch.Size([1, 128, 7, 7]))
layer /118 start_node /input.36 using sparse-spec alpha with unstable size 24 total_size 200 output_shape torch.Size([200])
layer /118 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
layer /123 using sparse-features alpha with shape [24]; unstable size 24; total size 200 (torch.Size([1, 200]))
layer /123 start_node /124 using full alpha with unstable size None total_size 199 output_shape 199
Optimizable variables initialized.
initial CROWN bounds: tensor([[33.68939972, 26.11459351, 27.69079781, 21.75756454, 26.91806793,
         18.57636642, 13.89554787, 19.77242661, 22.02064514, 29.25729942,
         20.98386955, 25.13532448, 31.49347687, 22.00488663, 23.26870918,
         15.36602783, 20.55864334, 27.96408463, 25.74357224, 25.87100983,
         27.18584442, 23.08366966, 31.69840050, 35.51769257, 24.14122009,
         27.56288147, 26.88289452, 21.07951355, 28.55609131, 22.51689148,
         21.74121857, 24.42540741, 23.98963165, 25.23181534, 21.76580238,
         30.73563194, 21.74188232, 23.28364754, 25.72996140, 31.74401283,
         26.66788673, 22.83921814, 23.50053787, 26.17566681, 30.61293602,
         33.55812454, 29.28996849, 25.17551994, 21.38105011, 27.94367599,
         28.57819748, 24.82568741, 33.17484665, 26.17560959, 22.23537827,
         16.80966568, 31.38588715, 30.04267120, 31.22615242, 18.28832436,
         17.84897614, 27.39001465, 18.53797531, 15.34325027, 16.87352180,
         21.27002144, 30.68884087, 15.09684753, 16.25037384, 20.59088707,
         20.48203850, 28.62885094, 14.76709938, 10.52014923, 26.31550598,
          6.75382996, 23.57596207, 15.06655502, 11.93385124, 22.17297745,
         15.39185047, 27.40052795, 32.93172455, 19.55748367, 21.27517128,
         19.65781784, 20.11336136,  5.37971926, 18.01631165, 16.72829056,
         20.61153603, 38.90096283, 19.95695496, 27.86340332, 18.46984100,
         28.08684921, 29.27545547, 29.18133926, 25.48852921, 21.18298340,
         15.58984375, 24.03200912, 22.41757393, 20.01086807, 11.54491425,
         19.41162491, 15.92366600, 25.96090126, 23.50675964, 16.25041199,
         11.65284634, 25.81360245, 23.38307953, 16.48819160, 25.83143616,
         29.50167847, 21.73149109, 26.47661018, 20.12231827, 21.94514847,
         26.44147873, 20.14315796, 15.85054779, 34.11467361, 17.75515366,
         23.17482376, 12.76262283, 11.00308418, 25.03531647, 12.15100193,
         12.61635208, 24.25502586, 23.33177376, 16.84504700, 15.43313885,
         18.98144150, 24.27729416, 17.59521675,  7.84774208, 24.82973099,
          5.57573318, 20.36332321, 10.21789169, 16.75121880, 21.12199974,
         24.81682587, 21.28206062, 20.12047577, 16.80126953, 15.59459400,
          7.93674850, 24.16506958, 15.71120644, 19.68096924, -0.05848026,
         14.53600597, 22.73871994, 20.21331215, 23.64722061, 16.32605743,
         22.46365738, 28.21509171, 23.10883522, 26.53202438, 30.54419327,
         19.69244385, 21.57897377, 16.25617790, 20.71684074, 27.68420982,
         27.82137680, 13.12901402, 21.12597656, 15.14241123, 14.34588814,
         22.30264854, 20.03869820, 21.11935425, 18.26247787, 22.47456360,
         14.13917160, 19.27684021, 18.81869316,  7.73804760, 23.43349838,
         15.09265995, 16.91329384, 15.51664162, 14.14919281, 20.81590462,
         15.22370815, 24.79155922, 15.76826954, 30.59079361, 28.88528442,
         36.01218796, 31.60521507, 29.79783630, 17.89438438]], device='cuda:0') None
best_l after optimization: 4339.6796875 with beta sum per layer: []
alpha/beta optimization time: 10.370590448379517
initial alpha-CROWN bounds: tensor([[ 3.37245483e+01,  2.61814823e+01,  2.77421303e+01,  2.18049068e+01,
          2.69638939e+01,  1.86152878e+01,  1.39421921e+01,  1.98138695e+01,
          2.20564537e+01,  2.93192444e+01,  2.10281487e+01,  2.51849976e+01,
          3.15392799e+01,  2.20495529e+01,  2.33201828e+01,  1.54053955e+01,
          2.05979557e+01,  2.80144424e+01,  2.58015347e+01,  2.59150963e+01,
          2.72319107e+01,  2.31190205e+01,  3.17591286e+01,  3.55539665e+01,
          2.41815605e+01,  2.76112576e+01,  2.69208031e+01,  2.11168823e+01,
          2.85974827e+01,  2.25629330e+01,  2.17819061e+01,  2.44727955e+01,
          2.40381145e+01,  2.52777653e+01,  2.18038692e+01,  3.07805271e+01,
          2.17871628e+01,  2.33325272e+01,  2.57899895e+01,  3.17939205e+01,
          2.67217636e+01,  2.28891392e+01,  2.35442543e+01,  2.62149239e+01,
          3.06554756e+01,  3.36119308e+01,  2.93384399e+01,  2.52233315e+01,
          2.14243317e+01,  2.79936180e+01,  2.86286449e+01,  2.48855839e+01,
          3.32178383e+01,  2.62236919e+01,  2.22811298e+01,  1.68498802e+01,
          3.14455872e+01,  3.00919819e+01,  3.12739162e+01,  1.83405190e+01,
          1.79006901e+01,  2.74476852e+01,  1.85883904e+01,  1.53817348e+01,
          1.69089108e+01,  2.13147202e+01,  3.07402687e+01,  1.51317215e+01,
          1.62882195e+01,  2.06285038e+01,  2.05220032e+01,  2.86819973e+01,
          1.47998943e+01,  1.05564613e+01,  2.63572273e+01,  6.78883791e+00,
          2.36241913e+01,  1.51046047e+01,  1.19736586e+01,  2.22244778e+01,
          1.54199038e+01,  2.74517441e+01,  3.29710045e+01,  1.95921364e+01,
          2.13203430e+01,  1.97099419e+01,  2.01417027e+01,  5.41129875e+00,
          1.80483818e+01,  1.67621002e+01,  2.06743011e+01,  3.89629669e+01,
          1.99975605e+01,  2.79049530e+01,  1.85186691e+01,  2.81507645e+01,
          2.93211784e+01,  2.92201576e+01,  2.55255966e+01,  2.12184868e+01,
          1.56367292e+01,  2.40793266e+01,  2.24727135e+01,  2.00538197e+01,
          1.15900974e+01,  1.94548302e+01,  1.59655437e+01,  2.60089340e+01,
          2.35449657e+01,  1.62861252e+01,  1.16860180e+01,  2.58743782e+01,
          2.34257374e+01,  1.65230751e+01,  2.58712387e+01,  2.95559216e+01,
          2.17716599e+01,  2.65307808e+01,  2.01851597e+01,  2.19833584e+01,
          2.64918785e+01,  2.01867886e+01,  1.58895798e+01,  3.41659126e+01,
          1.77941818e+01,  2.32197189e+01,  1.27970362e+01,  1.10431719e+01,
          2.50886250e+01,  1.21884689e+01,  1.26535921e+01,  2.42973232e+01,
          2.33917046e+01,  1.68875980e+01,  1.54789314e+01,  1.90138340e+01,
          2.43332024e+01,  1.76336021e+01,  7.90158319e+00,  2.48613167e+01,
          5.61619377e+00,  2.04063358e+01,  1.02533932e+01,  1.67987232e+01,
          2.11669140e+01,  2.48652878e+01,  2.13229427e+01,  2.01759148e+01,
          1.68644371e+01,  1.56262922e+01,  7.96913147e+00,  2.42191200e+01,
          1.57511892e+01,  1.97345428e+01, -2.01520920e-02,  1.45666447e+01,
          2.28001328e+01,  2.02782707e+01,  2.36881866e+01,  1.63788567e+01,
          2.25103798e+01,  2.82621727e+01,  2.31516075e+01,  2.65852356e+01,
          3.06045685e+01,  1.97524300e+01,  2.16340160e+01,  1.63076096e+01,
          2.07516575e+01,  2.77325706e+01,  2.78633938e+01,  1.31736565e+01,
          2.11772270e+01,  1.51884766e+01,  1.43827152e+01,  2.23423805e+01,
          2.00763855e+01,  2.11609459e+01,  1.82954407e+01,  2.25145607e+01,
          1.41748857e+01,  1.93186913e+01,  1.88634567e+01,  7.76525974e+00,
          2.34669800e+01,  1.51301489e+01,  1.69584103e+01,  1.55554314e+01,
          1.41794424e+01,  2.08490086e+01,  1.52579384e+01,  2.48260632e+01,
          1.57965975e+01,  3.06426144e+01,  2.89337349e+01,  3.60756760e+01,
          3.16646156e+01,  2.98575115e+01,  1.79372711e+01]], device='cuda:0')
Worst class: (+ rhs) -0.02015209197998047
Total VNNLIB file length: 199, max property batch size: 10000, total number of batches: 1
lA shape: [torch.Size([1, 199, 64, 27, 27]), torch.Size([1, 199, 128, 14, 14]), torch.Size([1, 199, 128, 14, 14]), torch.Size([1, 199, 128, 14, 14]), torch.Size([1, 199, 128, 14, 14]), torch.Size([1, 199, 128, 7, 7]), torch.Size([1, 199, 128, 7, 7]), torch.Size([1, 199, 128, 7, 7]), torch.Size([1, 199, 128, 7, 7]), torch.Size([1, 199, 200])]

Properties batch 0, size 199
Remaining timeout: 182.24090719223022
##### Instance 0 first 10 spec matrices: [[[-1.  0.  0. ...  0.  0.  0.]]

 [[ 0. -1.  0. ...  0.  0.  0.]]

 [[ 0.  0. -1. ...  0.  0.  0.]]

 ...

 [[ 0.  0.  0. ...  0.  0.  0.]]

 [[ 0.  0.  0. ...  0.  0.  0.]]

 [[ 0.  0.  0. ...  0.  0.  0.]]]
thresholds: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.] ######
Initial alpha-CROWN verified for spec index [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 155 156 157 158 159 160 161 162
 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198] with bound tensor([33.72454834, 26.18148232, 27.74213028, 21.80490685, 26.96389389,
        18.61528778, 13.94219208, 19.81386948, 22.05645370, 29.31924438,
        21.02814865, 25.18499756, 31.53927994, 22.04955292, 23.32018280,
        15.40539551, 20.59795570, 28.01444244, 25.80153465, 25.91509628,
        27.23191071, 23.11902046, 31.75912857, 35.55396652, 24.18156052,
        27.61125755, 26.92080307, 21.11688232, 28.59748268, 22.56293297,
        21.78190613, 24.47279549, 24.03811455, 25.27776527, 21.80386925,
        30.78052711, 21.78716278, 23.33252716, 25.78998947, 31.79392052,
        26.72176361, 22.88913918, 23.54425430, 26.21492386, 30.65547562,
        33.61193085, 29.33843994, 25.22333145, 21.42433167, 27.99361801,
        28.62864494, 24.88558388, 33.21783829, 26.22369194, 22.28112984,
        16.84988022, 31.44558716, 30.09198189, 31.27391624, 18.34051895,
        17.90069008, 27.44768524, 18.58839035, 15.38173485, 16.90891075,
        21.31472015, 30.74026871, 15.13172150, 16.28821945, 20.62850380,
        20.52200317, 28.68199730, 14.79989433, 10.55646133, 26.35722733,
         6.78883791, 23.62419128, 15.10460472, 11.97365856, 22.22447777,
        15.41990376, 27.45174408, 32.97100449, 19.59213638, 21.32034302,
        19.70994186, 20.14170265,  5.41129875, 18.04838181, 16.76210022,
        20.67430115, 38.96296692, 19.99756050, 27.90495300, 18.51866913,
        28.15076447, 29.32117844, 29.22015762, 25.52559662, 21.21848679,
        15.63672924, 24.07932663, 22.47271347, 20.05381966, 11.59009743,
        19.45483017, 15.96554375, 26.00893402, 23.54496574, 16.28612518,
        11.68601799, 25.87437820, 23.42573738, 16.52307510, 25.87123871,
        29.55592155, 21.77165985, 26.53078079, 20.18515968, 21.98335838,
        26.49187851, 20.18678856, 15.88957977, 34.16591263, 17.79418182,
        23.21971893, 12.79703617, 11.04317188, 25.08862495, 12.18846893,
        12.65359211, 24.29732323, 23.39170456, 16.88759804, 15.47893143,
        19.01383400, 24.33320236, 17.63360214,  7.90158319, 24.86131668,
         5.61619377, 20.40633583, 10.25339317, 16.79872322, 21.16691399,
        24.86528778, 21.32294273, 20.17591476, 16.86443710, 15.62629223,
         7.96913147, 24.21912003, 15.75118923, 19.73454285, 14.56664467,
        22.80013275, 20.27827072, 23.68818665, 16.37885666, 22.51037979,
        28.26217270, 23.15160751, 26.58523560, 30.60456848, 19.75242996,
        21.63401604, 16.30760956, 20.75165749, 27.73257065, 27.86339378,
        13.17365646, 21.17722702, 15.18847656, 14.38271523, 22.34238052,
        20.07638550, 21.16094589, 18.29544067, 22.51456070, 14.17488575,
        19.31869125, 18.86345673,  7.76525974, 23.46697998, 15.13014889,
        16.95841026, 15.55543137, 14.17944241, 20.84900856, 15.25793839,
        24.82606316, 15.79659748, 30.64261436, 28.93373489, 36.07567596,
        31.66461563, 29.85751152, 17.93727112], device='cuda:0')./home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/model.py:154: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  "Using experimental implementation that allows 'batch_size > 1'."
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/utils.py:21: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  return value.ndim == 0 or value.shape == torch.Size([1])
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/add.py:34: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  elif all(x == 1 for x in input[0].shape):
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/branching_domains.py:970: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7)

Remaining spec index [154] with bounds tensor([[-0.02015209]], device='cuda:0') need to verify.
Model prediction is: tensor([-48.96245193, -41.84916306, -43.22867584, -37.26539230, -42.41588974,
        -33.74946213, -29.17095184, -34.93138885, -37.27022934, -44.89703369,
        -36.23125458, -40.70712280, -46.76036835, -37.24354172, -38.56678009,
        -30.38514328, -35.77635574, -43.33392334, -41.36572266, -41.33423233,
        -42.66328430, -38.28625870, -47.38159943, -50.74755859, -39.18838882,
        -42.78311157, -42.06320190, -36.26544952, -43.92737579, -37.82156754,
        -36.95807648, -39.63823700, -39.25932693, -40.64210129, -37.08115387,
        -46.22766113, -37.41521835, -38.74702835, -41.19254684, -47.50352859,
        -42.23517609, -38.52185440, -38.85233307, -41.46572876, -46.13969803,
        -49.06187439, -44.63264465, -40.48711777, -36.72414398, -43.41844177,
        -44.34620285, -40.39298630, -48.52366257, -41.67699814, -37.55050659,
        -32.16638947, -46.98056030, -45.48302078, -46.70468521, -33.69355774,
        -33.44624329, -42.86656189, -34.00085449, -30.70234299, -31.90902710,
        -36.37807465, -46.28406143, -30.05976295, -31.33143616, -35.67920303,
        -35.79720688, -44.21152115, -29.64691734, -25.60146332, -41.53871155,
        -21.68544388, -38.98377228, -30.18086624, -26.95459747, -37.38483810,
        -30.24887276, -42.84693527, -48.25752258, -34.21525192, -36.69345474,
        -35.29444504, -35.03619766, -20.10329056, -32.96392059, -31.65377426,
        -36.00435638, -55.08924103, -35.21063232, -42.90870285, -33.89883423,
        -43.88257217, -44.77166748, -44.52236557, -40.50318146, -36.22980499,
        -30.74397850, -39.37062454, -37.74164581, -35.05020142, -26.56411934,
        -34.80356598, -31.05794525, -41.38970184, -38.73483658, -31.27875710,
        -26.60844040, -41.17437363, -38.54306030, -31.53397179, -41.22713852,
        -45.28290176, -37.11436081, -13.36777878, -41.67531586, -35.60533142,
        -37.05653763, -41.91803360, -35.51452637, -30.85328865, -49.71817017,
        -32.78477859, -38.65879822, -27.54367828, -25.70880318, -40.38442993,
        -27.05718231, -27.51876450, -39.53288269, -38.97758484, -32.14861298,
        -30.62784386, -33.87557220, -39.59855270, -32.75841522, -23.04721069,
        -39.80014038, -20.64662743, -35.69609833, -24.97539520, -31.91172600,
        -36.44450760, -40.26949692, -36.32550430, -35.44742584, -32.04455185,
        -30.70738602, -22.71039963, -39.36690140, -30.83471298, -35.15029526,
        -14.65929985, -29.53542709, -38.48392868, -35.70727921, -38.94684982,
        -31.49138832, -37.82547379, -43.74998856, -38.19274902, -42.00492096,
        -46.42121506, -35.19087982, -37.05065918, -31.45709419, -35.74375153,
        -43.10026932, -43.07632828, -28.05554962, -36.57267761, -30.04645348,
        -29.14936829, -37.38367844, -35.08927917, -36.21087265, -33.12870026,
        -37.63295746, -28.95899773, -34.33067703, -33.83725739, -22.35802460,
        -38.49137878, -29.86592674, -31.65887833, -30.43900108, -28.86582184,
        -35.72374725, -30.17511559, -39.73111725, -30.37339020, -46.09392166,
        -44.29032898, -51.80622101, -47.43177032, -45.71535873, -32.93479156],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /86 start_node /124 with alignment adjustment
setting alpha for layer /88 start_node /124 with alignment adjustment
setting alpha for layer /93 start_node /124 with alignment adjustment
setting alpha for layer /97 start_node /124 with alignment adjustment
setting alpha for layer /101 start_node /124 with alignment adjustment
setting alpha for layer /105 start_node /124 with alignment adjustment
setting alpha for layer /110 start_node /124 with alignment adjustment
setting alpha for layer /114 start_node /124 with alignment adjustment
setting alpha for layer /118 start_node /124 with alignment adjustment
setting alpha for layer /123 start_node /124 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 64, 27, 27]), torch.Size([1, 1, 128, 14, 14]), torch.Size([1, 1, 128, 14, 14]), torch.Size([1, 1, 128, 14, 14]), torch.Size([1, 1, 128, 14, 14]), torch.Size([1, 1, 128, 7, 7]), torch.Size([1, 1, 128, 7, 7]), torch.Size([1, 1, 128, 7, 7]), torch.Size([1, 1, 128, 7, 7]), torch.Size([1, 1, 200])]
c shape: torch.Size([1, 1, 200])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.02015209]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/124']
Keeping slopes for these layers: ['/124']
layer 0 name BoundConv(name="/input") size torch.Size([46656]) unstable 602
layer 1 name BoundConv(name="/input.4") size torch.Size([25088]) unstable 347
layer 2 name BoundConv(name="/input.8") size torch.Size([25088]) unstable 182
layer 3 name BoundConv(name="/input.12") size torch.Size([25088]) unstable 2
layer 4 name BoundConv(name="/input.16") size torch.Size([25088]) unstable 14
layer 5 name BoundConv(name="/input.20") size torch.Size([6272]) unstable 40
layer 6 name BoundConv(name="/input.24") size torch.Size([6272]) unstable 0
layer 7 name BoundConv(name="/input.28") size torch.Size([6272]) unstable 0
layer 8 name BoundConv(name="/input.32") size torch.Size([6272]) unstable 0
layer 9 name BoundLinear(name="/input.36") size torch.Size([200]) unstable 23
-----------------
# of unstable neurons: 1210
-----------------

batch:  torch.Size([1, 64, 27, 27]) pre split depth:  4
batch:  torch.Size([1, 64, 27, 27]) post split depth:  4
splitting decisions: 
split level 0: [9, 33] 
split level 1: [9, 133] 
split level 2: [9, 9] 
split level 3: [9, 99] 
(16, 3, 56, 56) torch.Size([16, 1, 200]) torch.Size([16, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.00012493133544921875
Tensors transferred: lA=2.6290M alpha=0.0371M beta=0.0001M
This batch time : update_bounds func: 0.0395	 prepare: 0.0058	 bound: 0.0266	 transfer: 0.0059	 finalize: 0.0011
Accumulated time: update_bounds func: 0.0395	 prepare: 0.0058	 bound: 0.0266	 transfer: 0.0059	 finalize: 0.0011
batch bounding time:  0.03953242301940918
length of domains: 0
Total time: 0.6106	 pickout: 0.0024	 decision: 0.5628	 get_bound: 0.0435	 add_domain: 0.0018
Accumulated time:	 pickout: 0.0024	 decision: 0.5628	 get_bound: 0.0435	 add_domain: 0.0018
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
16 domains visited
Cumulative time: 1.929710865020752

Result: safe in 20.6374 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 20.637233832282035, max time: 20.63744020462036
mean time for verified SAFE instances (total 1): 20.63744020462036, max time: 20.63744020462036
safe (total 1), index: [0]
