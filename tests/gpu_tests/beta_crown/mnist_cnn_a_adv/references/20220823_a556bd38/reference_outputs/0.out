Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: null
  root_path: ''
model:
  path: mnist_cnn_a_adv.model
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_cnn_4layer
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 2
  end: 3
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: MNIST_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.3
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 180
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 15:56:41 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(1, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=1568, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Shape: torch.Size([200, 1, 28, 28]) torch.Size([200]) torch.Size([200])
X range: tensor(1.) tensor(0.) tensor(0.13397828)
############################
saving results to Verified_ret_[mnist_cnn_4layer]_start=2_end=3_iter=20_b=1024_timeout=180_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False_multiclass=allclass_domain.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.07500000298023224, initialization=uniform, GAMA=False
model output: tensor([[-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
         -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847]],
       device='cuda:0')
pgd prediction: tensor([[[-5.32456923, -6.19018650, -3.97614932, -3.18251848,  2.28202677,
          -2.89118004, -3.66556787, -1.61363065, -2.15189981,  3.05461431],
         [-5.32456923, -6.19018650, -3.97614932, -3.18251848,  2.28202677,
          -2.89118004, -3.66556787, -1.61363065, -2.15189981,  3.05461431]]],
       device='cuda:0')
pgd attack margin tensor([[[8.37918377, 9.24480057, 7.03076363, 6.23713303, 0.77258754,
          5.94579411, 6.72018242, 4.66824484, 5.20651436]]], device='cuda:0')
number of violation:  0
Attack finished in 1.2409 seconds.
pgd attack failed
Model prediction is: tensor([[-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
         -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [1253]; unstable size 1253; total size 3136 (torch.Size([1, 16, 14, 14]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 215 total_size 1568 output_shape (32, 7, 7)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /16 using full alpha with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 1568 (torch.Size([1, 32, 7, 7]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [32]; unstable size 32; total size 100 (torch.Size([1, 100]))
layer /15 start_node /16 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-4.13440752, -3.38971043, -5.10830784, -5.27857733, -1.55458450,
         -6.75541735, -6.69561052, -4.95646667, -4.35540295]], device='cuda:0') None
best_l after optimization: -21.14734649658203 with beta sum per layer: []
alpha/beta optimization time: 5.565567255020142
initial alpha-CROWN bounds: tensor([[-1.58136511, -0.55232811, -2.50153613, -2.61712551, -0.84469497,
         -3.68043900, -3.41780043, -3.44438791, -2.50767040]], device='cuda:0')
Worst class: (+ rhs) -3.680438995361328
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 14, 14]), torch.Size([1, 9, 32, 7, 7]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 169.5553319454193
##### [0] Spec matrix: [[[-1.  0.  0.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-1.58136511]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.58136511]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 22] 
split level 1: [2, 83] 
split level 2: [2, 67] 
split level 3: [1, 563] 
split level 4: [2, 85] 
split level 5: [2, 41] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])

all verified at 2th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.0011355876922607422
Tensors transferred: pre=0.5864M lA=0.0046M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.4453	 prepare: 0.0051	 bound: 0.4370	 transfer: 0.0016	 finalize: 0.0014
Accumulated time: update_bounds func: 0.4453	 prepare: 0.0051	 bound: 0.4370	 transfer: 0.0016	 finalize: 0.0014
batch bounding time:  0.4453260898590088
length of domains: 0
Total time: 0.8904	 pickout: 0.0010	 decision: 0.4351	 get_bound: 0.4529	 add_domain: 0.0013
Accumulated time:	 pickout: 0.0010	 decision: 0.4351	 get_bound: 0.4529	 add_domain: 0.0013
No domains left, verification finished!
64 domains visited
Cumulative time: 0.9402050971984863


Properties batch 1, size 1
Remaining timeout: 168.48609399795532
##### [0] Spec matrix: [[[ 0. -1.  0.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-0.55232811]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.55232811]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 47] 
split level 1: [2, 67] 
split level 2: [2, 79] 
split level 3: [2, 78] 
split level 4: [1, 655] 
split level 5: [2, 41] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010967254638671875
Tensors transferred: pre=0.5864M lA=0.2932M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.0167	 prepare: 0.0050	 bound: 0.0085	 transfer: 0.0017	 finalize: 0.0014
Accumulated time: update_bounds func: 0.4620	 prepare: 0.0101	 bound: 0.4455	 transfer: 0.0033	 finalize: 0.0028
batch bounding time:  0.01671576499938965
length of domains: 0
Total time: 0.0607	 pickout: 0.0009	 decision: 0.0343	 get_bound: 0.0244	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0009	 decision: 0.0343	 get_bound: 0.0244	 add_domain: 0.0011
No domains left, verification finished!
64 domains visited
Cumulative time: 0.06594085693359375


Properties batch 2, size 1
Remaining timeout: 168.31839442253113
##### [0] Spec matrix: [[[ 0.  0. -1.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-2.50153613]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-2.50153613]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 22] 
split level 1: [1, 905] 
split level 2: [2, 67] 
split level 3: [2, 38] 
split level 4: [2, 47] 
split level 5: [2, 41] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.01103067398071289
Tensors transferred: pre=0.5864M lA=0.0367M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2458	 prepare: 0.0068	 bound: 0.2359	 transfer: 0.0016	 finalize: 0.0013
Accumulated time: update_bounds func: 0.7078	 prepare: 0.0168	 bound: 0.6815	 transfer: 0.0049	 finalize: 0.0041
batch bounding time:  0.24587035179138184
Current worst splitting domains lb-rhs (depth):
-0.34100 (6), -0.29078 (6), -0.28677 (6), -0.23426 (6), -0.17127 (6), -0.14340 (6), -0.11730 (6), -0.00315 (6), 
length of domains: 8
Total time: 0.2913	 pickout: 0.0009	 decision: 0.0344	 get_bound: 0.2535	 add_domain: 0.0026
Accumulated time:	 pickout: 0.0009	 decision: 0.0344	 get_bound: 0.2535	 add_domain: 0.0026
Current (lb-rhs): -0.34099555015563965
56 domains visited
Cumulative time: 0.2965695858001709

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([8, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [1, 415] [2, 83] [2, 83] [1, 415] [2, 83] [2, 83] [2, 11] [2, 83] 
split level 1: [2, 83] [2, 11] [1, 414] [1, 414] [2, 11] [1, 415] [2, 83] [1, 414] 
split level 2: [1, 414] [1, 414] [1, 612] [2, 83] [1, 414] [1, 414] [1, 414] [1, 612] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.00010371208190917969
Tensors transferred: pre=0.5864M lA=0.2932M alpha=0.1831M beta=0.0006M
This batch time : update_bounds func: 0.0159	 prepare: 0.0059	 bound: 0.0067	 transfer: 0.0017	 finalize: 0.0015
Accumulated time: update_bounds func: 0.7237	 prepare: 0.0227	 bound: 0.6881	 transfer: 0.0066	 finalize: 0.0057
batch bounding time:  0.015926837921142578
length of domains: 0
Total time: 0.0450	 pickout: 0.0009	 decision: 0.0209	 get_bound: 0.0220	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0018	 decision: 0.0553	 get_bound: 0.2755	 add_domain: 0.0037
No domains left, verification finished!
120 domains visited
Cumulative time: 0.34187936782836914


Properties batch 3, size 1
Remaining timeout: 167.87633419036865
##### [0] Spec matrix: [[[ 0.  0.  0. -1.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-2.61712551]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-2.61712551]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 83] 
split level 1: [2, 22] 
split level 2: [2, 67] 
split level 3: [2, 38] 
split level 4: [2, 78] 
split level 5: [2, 41] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 53 / 64 = 0.828125
pruning-in-iteration extra time: 0.011039018630981445
Tensors transferred: pre=0.5864M lA=0.0504M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2381	 prepare: 0.0048	 bound: 0.2301	 transfer: 0.0016	 finalize: 0.0014
Accumulated time: update_bounds func: 0.9617	 prepare: 0.0275	 bound: 0.9182	 transfer: 0.0082	 finalize: 0.0070
batch bounding time:  0.23811078071594238
Current worst splitting domains lb-rhs (depth):
-1.00949 (6), -0.84983 (6), -0.80104 (6), -0.62303 (6), -0.38782 (6), -0.34356 (6), -0.28103 (6), -0.20739 (6), -0.14469 (6), -0.07919 (6), -0.07624 (6), 
length of domains: 11
Total time: 0.2835	 pickout: 0.0009	 decision: 0.0343	 get_bound: 0.2457	 add_domain: 0.0027
Accumulated time:	 pickout: 0.0009	 decision: 0.0343	 get_bound: 0.2457	 add_domain: 0.0027
Current (lb-rhs): -1.0094876289367676
53 domains visited
Cumulative time: 0.28879857063293457

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([11, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([11, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [2, 79] [1, 430] [2, 85] [1, 415] [2, 79] [1, 905] [1, 430] [2, 85] [1, 905] [1, 414] 
split level 1: [1, 414] [2, 85] [2, 79] [1, 905] [2, 85] [2, 79] [2, 85] [2, 79] [1, 415] [2, 79] 
split level 2: [1, 905] [2, 79] [1, 1207] [1, 414] [1, 414] [1, 414] [2, 79] [1, 1207] [1, 414] [2, 85] 
regular batch size: 2*44, diving batch size 1*0
(88, 1, 28, 28) torch.Size([88, 1, 10]) torch.Size([88, 1])
pruning_in_iteration open status: True
ratio of positive domain = 79 / 88 = 0.8977272727272727
pruning-in-iteration extra time: 0.011020660400390625
Tensors transferred: pre=0.8063M lA=0.0412M alpha=0.2518M beta=0.0010M
This batch time : update_bounds func: 0.2438	 prepare: 0.0076	 bound: 0.2320	 transfer: 0.0019	 finalize: 0.0020
Accumulated time: update_bounds func: 1.2055	 prepare: 0.0352	 bound: 1.1502	 transfer: 0.0101	 finalize: 0.0090
batch bounding time:  0.24380922317504883
Current worst splitting domains lb-rhs (depth):
-0.43257 (9), -0.22136 (9), -0.21072 (9), -0.18619 (9), -0.11681 (9), -0.09045 (9), -0.03338 (9), -0.01426 (9), -0.01104 (9), 
length of domains: 9
Total time: 0.2783	 pickout: 0.0009	 decision: 0.0224	 get_bound: 0.2520	 add_domain: 0.0029
Accumulated time:	 pickout: 0.0018	 decision: 0.0567	 get_bound: 0.4978	 add_domain: 0.0056
Current (lb-rhs): -0.4325733184814453
132 domains visited
Cumulative time: 0.5674624443054199

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([9, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([9, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [2, 45] [2, 45] [2, 45] [2, 45] [2, 45] [2, 45] [2, 45] [2, 45] [2, 45] 
split level 1: [1, 414] [1, 414] [1, 414] [1, 414] [1, 414] [1, 430] [1, 430] [1, 414] [1, 414] 
split level 2: [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 905] [1, 905] [1, 1207] [1, 1207] 
regular batch size: 2*36, diving batch size 1*0
(72, 1, 28, 28) torch.Size([72, 1, 10]) torch.Size([72, 1])

all verified at 12th iter
pruning_in_iteration open status: True
ratio of positive domain = 72 / 72 = 1.0
pruning-in-iteration extra time: 0.006705045700073242
Tensors transferred: pre=0.6597M lA=0.0046M alpha=0.2060M beta=0.0008M
This batch time : update_bounds func: 0.1565	 prepare: 0.0062	 bound: 0.1470	 transfer: 0.0017	 finalize: 0.0015
Accumulated time: update_bounds func: 1.3619	 prepare: 0.0414	 bound: 1.2972	 transfer: 0.0118	 finalize: 0.0105
batch bounding time:  0.15652775764465332
length of domains: 0
Total time: 0.1872	 pickout: 0.0009	 decision: 0.0215	 get_bound: 0.1636	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0027	 decision: 0.0782	 get_bound: 0.6614	 add_domain: 0.0067
No domains left, verification finished!
204 domains visited
Cumulative time: 0.7549843788146973


Properties batch 4, size 1
Remaining timeout: 167.01917910575867
##### [0] Spec matrix: [[[ 0.  0.  0.  0. -1.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-0.84469497]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.84469497]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 47] 
split level 1: [2, 45] 
split level 2: [1, 1046] 
split level 3: [2, 11] 
split level 4: [1, 556] 
split level 5: [1, 655] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 61 / 64 = 0.953125
pruning-in-iteration extra time: 0.010991573333740234
Tensors transferred: pre=0.5864M lA=0.0137M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2424	 prepare: 0.0055	 bound: 0.2337	 transfer: 0.0016	 finalize: 0.0013
Accumulated time: update_bounds func: 1.6043	 prepare: 0.0469	 bound: 1.5309	 transfer: 0.0134	 finalize: 0.0118
batch bounding time:  0.24246549606323242
Current worst splitting domains lb-rhs (depth):
-0.05023 (6), -0.01941 (6), -0.00145 (6), 
length of domains: 3
Total time: 0.2878	 pickout: 0.0009	 decision: 0.0344	 get_bound: 0.2501	 add_domain: 0.0025
Accumulated time:	 pickout: 0.0009	 decision: 0.0344	 get_bound: 0.2501	 add_domain: 0.0025
Current (lb-rhs): -0.050230979919433594
61 domains visited
Cumulative time: 0.2931690216064453

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([3, 16, 14, 14]) pre split depth:  5
batch:  torch.Size([3, 16, 14, 14]) post split depth:  5
splitting decisions: 
split level 0: [1, 648] [2, 33] [1, 648] 
split level 1: [1, 606] [1, 606] [1, 65] 
split level 2: [1, 65] [1, 648] [1, 1038] 
split level 3: [1, 1038] [1, 65] [1, 606] 
split level 4: [1, 647] [1, 647] [1, 647] 
regular batch size: 2*48, diving batch size 1*0
(96, 1, 28, 28) torch.Size([96, 1, 10]) torch.Size([96, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 0.00010371208190917969
Tensors transferred: pre=0.8796M lA=0.4398M alpha=0.2747M beta=0.0011M
This batch time : update_bounds func: 0.0200	 prepare: 0.0085	 bound: 0.0071	 transfer: 0.0021	 finalize: 0.0020
Accumulated time: update_bounds func: 1.6243	 prepare: 0.0554	 bound: 1.5380	 transfer: 0.0156	 finalize: 0.0139
batch bounding time:  0.02006363868713379
length of domains: 0
Total time: 0.0643	 pickout: 0.0011	 decision: 0.0308	 get_bound: 0.0313	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0019	 decision: 0.0652	 get_bound: 0.2814	 add_domain: 0.0036
No domains left, verification finished!
157 domains visited
Cumulative time: 0.3577556610107422


Properties batch 5, size 1
Remaining timeout: 166.55785012245178
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-3.68043900]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-3.68043900]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 38] 
split level 1: [2, 83] 
split level 2: [2, 79] 
split level 3: [1, 1194] 
split level 4: [2, 81] 
split level 5: [2, 41] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 37 / 64 = 0.578125
pruning-in-iteration extra time: 0.011098146438598633
Tensors transferred: pre=0.5864M lA=0.1237M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2467	 prepare: 0.0050	 bound: 0.2385	 transfer: 0.0017	 finalize: 0.0013
Accumulated time: update_bounds func: 1.8710	 prepare: 0.0604	 bound: 1.7766	 transfer: 0.0173	 finalize: 0.0152
batch bounding time:  0.24675393104553223
Current worst splitting domains lb-rhs (depth):
-1.90501 (6), -1.75534 (6), -1.66149 (6), -1.63072 (6), -1.53561 (6), -1.52647 (6), -1.39924 (6), -1.29460 (6), -1.13393 (6), -1.02113 (6), -0.98098 (6), -0.96338 (6), -0.85438 (6), -0.83096 (6), -0.78604 (6), -0.68942 (6), -0.64993 (6), -0.63391 (6), -0.62311 (6), -0.54942 (6), 
length of domains: 27
Total time: 0.2933	 pickout: 0.0009	 decision: 0.0346	 get_bound: 0.2544	 add_domain: 0.0035
Accumulated time:	 pickout: 0.0009	 decision: 0.0346	 get_bound: 0.2544	 add_domain: 0.0035
Current (lb-rhs): -1.9050121307373047
37 domains visited
Cumulative time: 0.29851508140563965

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([27, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([27, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [1, 410] [2, 67] [1, 430] [2, 85] [1, 410] [2, 85] [1, 430] [2, 85] [1, 430] [2, 85] 
regular batch size: 2*27, diving batch size 1*0
(54, 1, 28, 28) torch.Size([54, 1, 10]) torch.Size([54, 1])
pruning_in_iteration open status: True
ratio of positive domain = 15 / 54 = 0.2777777777777778
pruning-in-iteration extra time: 0.011028051376342773
Tensors transferred: pre=0.4948M lA=0.1787M alpha=0.1545M beta=0.0004M
This batch time : update_bounds func: 0.2402	 prepare: 0.0052	 bound: 0.2320	 transfer: 0.0016	 finalize: 0.0012
Accumulated time: update_bounds func: 2.1112	 prepare: 0.0656	 bound: 2.0086	 transfer: 0.0189	 finalize: 0.0164
batch bounding time:  0.24025273323059082
Current worst splitting domains lb-rhs (depth):
-1.61319 (7), -1.58588 (7), -1.39890 (7), -1.33631 (7), -1.26894 (7), -1.24950 (7), -1.19296 (7), -1.12869 (7), -1.12452 (7), -1.07101 (7), -1.03034 (7), -0.99098 (7), -0.87969 (7), -0.86972 (7), -0.85197 (7), -0.79459 (7), -0.77263 (7), -0.72725 (7), -0.71427 (7), -0.70638 (7), 
length of domains: 39
Total time: 0.2685	 pickout: 0.0010	 decision: 0.0232	 get_bound: 0.2403	 add_domain: 0.0040
Accumulated time:	 pickout: 0.0019	 decision: 0.0577	 get_bound: 0.4947	 add_domain: 0.0075
Current (lb-rhs): -1.6131906509399414
52 domains visited
Cumulative time: 0.56736159324646

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([39, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([39, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [1, 430] [2, 67] [2, 85] [2, 85] [2, 85] [2, 85] [1, 430] [2, 85] [1, 430] [1, 430] 
regular batch size: 2*39, diving batch size 1*0
(78, 1, 28, 28) torch.Size([78, 1, 10]) torch.Size([78, 1])
pruning_in_iteration open status: True
ratio of positive domain = 27 / 78 = 0.34615384615384615
pruning-in-iteration extra time: 0.011341094970703125
Tensors transferred: pre=0.7147M lA=0.2337M alpha=0.2232M beta=0.0007M
This batch time : update_bounds func: 0.2460	 prepare: 0.0069	 bound: 0.2351	 transfer: 0.0020	 finalize: 0.0019
Accumulated time: update_bounds func: 2.3572	 prepare: 0.0725	 bound: 2.2437	 transfer: 0.0209	 finalize: 0.0183
batch bounding time:  0.24604177474975586
Current worst splitting domains lb-rhs (depth):
-1.48832 (8), -1.29881 (8), -1.26682 (8), -1.21140 (8), -1.11135 (8), -1.01907 (8), -1.01005 (8), -0.94514 (8), -0.94470 (8), -0.89626 (8), -0.88074 (8), -0.87541 (8), -0.87319 (8), -0.75900 (8), -0.74121 (8), -0.72797 (8), -0.65358 (8), -0.64003 (8), -0.60483 (8), -0.60408 (8), 
length of domains: 51
Total time: 0.2768	 pickout: 0.0011	 decision: 0.0250	 get_bound: 0.2461	 add_domain: 0.0046
Accumulated time:	 pickout: 0.0030	 decision: 0.0828	 get_bound: 0.7408	 add_domain: 0.0121
Current (lb-rhs): -1.4883227348327637
79 domains visited
Cumulative time: 0.8445901870727539

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([51, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([51, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [2, 67] [2, 67] [1, 410] [2, 67] [1, 410] [2, 67] [2, 67] [2, 67] [1, 410] [2, 67] 
regular batch size: 2*51, diving batch size 1*0
(102, 1, 28, 28) torch.Size([102, 1, 10]) torch.Size([102, 1])
pruning_in_iteration open status: True
ratio of positive domain = 51 / 102 = 0.5
pruning-in-iteration extra time: 0.011055231094360352
Tensors transferred: pre=0.9346M lA=0.2337M alpha=0.2918M beta=0.0011M
This batch time : update_bounds func: 0.2477	 prepare: 0.0084	 bound: 0.2345	 transfer: 0.0023	 finalize: 0.0023
Accumulated time: update_bounds func: 2.6050	 prepare: 0.0809	 bound: 2.4782	 transfer: 0.0232	 finalize: 0.0206
batch bounding time:  0.2477860450744629
Current worst splitting domains lb-rhs (depth):
-1.11101 (9), -1.10734 (9), -1.09544 (9), -1.05976 (9), -0.88237 (9), -0.85930 (9), -0.80371 (9), -0.77514 (9), -0.76257 (9), -0.70700 (9), -0.70270 (9), -0.69887 (9), -0.68924 (9), -0.65386 (9), -0.63249 (9), -0.58915 (9), -0.56096 (9), -0.55710 (9), -0.53630 (9), -0.50261 (9), 
length of domains: 51
Total time: 0.2815	 pickout: 0.0023	 decision: 0.0262	 get_bound: 0.2478	 add_domain: 0.0052
Accumulated time:	 pickout: 0.0052	 decision: 0.1090	 get_bound: 0.9886	 add_domain: 0.0173
Current (lb-rhs): -1.1110129356384277
130 domains visited
Cumulative time: 1.1264820098876953

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([51, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([51, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] 
regular batch size: 2*51, diving batch size 1*0
(102, 1, 28, 28) torch.Size([102, 1, 10]) torch.Size([102, 1])
pruning_in_iteration open status: True
ratio of positive domain = 58 / 102 = 0.5686274509803921
pruning-in-iteration extra time: 0.011116504669189453
Tensors transferred: pre=0.9346M lA=0.2016M alpha=0.2918M beta=0.0012M
This batch time : update_bounds func: 0.2476	 prepare: 0.0083	 bound: 0.2346	 transfer: 0.0022	 finalize: 0.0022
Accumulated time: update_bounds func: 2.8525	 prepare: 0.0892	 bound: 2.7128	 transfer: 0.0254	 finalize: 0.0228
batch bounding time:  0.24762320518493652
Current worst splitting domains lb-rhs (depth):
-0.99071 (10), -0.90763 (10), -0.88312 (10), -0.76196 (10), -0.71456 (10), -0.67906 (10), -0.63253 (10), -0.61676 (10), -0.61387 (10), -0.56666 (10), -0.48326 (10), -0.47241 (10), -0.46084 (10), -0.44587 (10), -0.43301 (10), -0.38137 (10), -0.36957 (10), -0.36838 (10), -0.35464 (10), -0.33637 (10), 
length of domains: 44
Total time: 0.2792	 pickout: 0.0011	 decision: 0.0257	 get_bound: 0.2477	 add_domain: 0.0047
Accumulated time:	 pickout: 0.0064	 decision: 0.1347	 get_bound: 1.2362	 add_domain: 0.0220
Current (lb-rhs): -0.9907126426696777
188 domains visited
Cumulative time: 1.4061787128448486

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([44, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([44, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [2, 45] [2, 45] [2, 47] [2, 67] [2, 45] [1, 410] [2, 47] [2, 45] [2, 47] [2, 45] 
regular batch size: 2*44, diving batch size 1*0
(88, 1, 28, 28) torch.Size([88, 1, 10]) torch.Size([88, 1])
pruning_in_iteration open status: True
ratio of positive domain = 54 / 88 = 0.6136363636363636
pruning-in-iteration extra time: 0.011057615280151367
Tensors transferred: pre=0.8063M lA=0.1604M alpha=0.2518M beta=0.0010M
This batch time : update_bounds func: 0.2444	 prepare: 0.0073	 bound: 0.2329	 transfer: 0.0021	 finalize: 0.0019
Accumulated time: update_bounds func: 3.0969	 prepare: 0.0966	 bound: 2.9457	 transfer: 0.0274	 finalize: 0.0247
batch bounding time:  0.24441862106323242
Current worst splitting domains lb-rhs (depth):
-0.89440 (11), -0.76460 (11), -0.73969 (11), -0.66857 (11), -0.57716 (11), -0.53931 (11), -0.52583 (11), -0.47036 (11), -0.46732 (11), -0.46407 (11), -0.36306 (11), -0.33070 (11), -0.32548 (11), -0.30861 (11), -0.28677 (11), -0.20726 (11), -0.20618 (11), -0.15298 (11), -0.14868 (11), -0.14732 (11), 
length of domains: 34
Total time: 0.2751	 pickout: 0.0011	 decision: 0.0256	 get_bound: 0.2445	 add_domain: 0.0039
Accumulated time:	 pickout: 0.0075	 decision: 0.1603	 get_bound: 1.4807	 add_domain: 0.0258
Current (lb-rhs): -0.8944015502929688
242 domains visited
Cumulative time: 1.681640625

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([34, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([34, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [1, 410] [1, 410] [2, 45] [1, 410] [2, 45] [1, 410] [2, 45] [2, 45] [2, 45] [2, 45] 
regular batch size: 2*34, diving batch size 1*0
(68, 1, 28, 28) torch.Size([68, 1, 10]) torch.Size([68, 1])
pruning_in_iteration open status: True
ratio of positive domain = 39 / 68 = 0.5735294117647058
pruning-in-iteration extra time: 0.011037588119506836
Tensors transferred: pre=0.6231M lA=0.1329M alpha=0.1945M beta=0.0008M
This batch time : update_bounds func: 0.2437	 prepare: 0.0061	 bound: 0.2342	 transfer: 0.0018	 finalize: 0.0016
Accumulated time: update_bounds func: 3.3406	 prepare: 0.1026	 bound: 3.1799	 transfer: 0.0292	 finalize: 0.0263
batch bounding time:  0.24375295639038086
Current worst splitting domains lb-rhs (depth):
-0.62081 (12), -0.52795 (12), -0.52429 (12), -0.50428 (12), -0.48644 (12), -0.44228 (12), -0.43159 (12), -0.34268 (12), -0.33919 (12), -0.28912 (12), -0.26000 (12), -0.23473 (12), -0.22440 (12), -0.20129 (12), -0.18199 (12), -0.17830 (12), -0.13699 (12), -0.12427 (12), -0.11558 (12), -0.10361 (12), 
length of domains: 29
Total time: 0.2723	 pickout: 0.0011	 decision: 0.0237	 get_bound: 0.2438	 add_domain: 0.0038
Accumulated time:	 pickout: 0.0086	 decision: 0.1840	 get_bound: 1.7245	 add_domain: 0.0296
Current (lb-rhs): -0.6208071708679199
281 domains visited
Cumulative time: 1.9543311595916748

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([29, 16, 14, 14]) pre split depth:  1
batch:  torch.Size([29, 16, 14, 14]) post split depth:  1
splitting decisions: 
split level 0: [2, 78] [2, 78] [2, 78] [2, 78] [2, 78] [2, 78] [2, 78] [2, 78] [2, 78] [2, 78] 
regular batch size: 2*29, diving batch size 1*0
(58, 1, 28, 28) torch.Size([58, 1, 10]) torch.Size([58, 1])
pruning_in_iteration open status: True
ratio of positive domain = 39 / 58 = 0.6724137931034483
pruning-in-iteration extra time: 0.011048078536987305
Tensors transferred: pre=0.5314M lA=0.0870M alpha=0.1659M beta=0.0007M
This batch time : update_bounds func: 0.2405	 prepare: 0.0054	 bound: 0.2322	 transfer: 0.0016	 finalize: 0.0012
Accumulated time: update_bounds func: 3.5811	 prepare: 0.1080	 bound: 3.4121	 transfer: 0.0308	 finalize: 0.0275
batch bounding time:  0.2405712604522705
Current worst splitting domains lb-rhs (depth):
-0.41320 (13), -0.39440 (13), -0.37215 (13), -0.34937 (13), -0.30563 (13), -0.30241 (13), -0.23022 (13), -0.21338 (13), -0.21042 (13), -0.20672 (13), -0.16318 (13), -0.13407 (13), -0.11487 (13), -0.10732 (13), -0.10357 (13), -0.07890 (13), -0.07430 (13), -0.04518 (13), -0.02317 (13), 
length of domains: 19
Total time: 0.2684	 pickout: 0.0010	 decision: 0.0230	 get_bound: 0.2406	 add_domain: 0.0037
Accumulated time:	 pickout: 0.0096	 decision: 0.2070	 get_bound: 1.9651	 add_domain: 0.0333
Current (lb-rhs): -0.41319751739501953
320 domains visited
Cumulative time: 2.223071575164795

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([19, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([19, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [1, 263] [1, 263] [1, 263] [1, 414] [1, 263] [1, 263] [1, 263] [1, 414] [1, 263] [1, 263] 
split level 1: [1, 414] [1, 414] [1, 414] [1, 263] [1, 414] [1, 414] [1, 1207] [1, 263] [1, 414] [1, 414] 
regular batch size: 2*38, diving batch size 1*0
(76, 1, 28, 28) torch.Size([76, 1, 10]) torch.Size([76, 1])
pruning_in_iteration open status: True
ratio of positive domain = 65 / 76 = 0.8552631578947368
pruning-in-iteration extra time: 0.01100778579711914
Tensors transferred: pre=0.6964M lA=0.0504M alpha=0.2174M beta=0.0011M
This batch time : update_bounds func: 0.2404	 prepare: 0.0064	 bound: 0.2305	 transfer: 0.0018	 finalize: 0.0016
Accumulated time: update_bounds func: 3.8215	 prepare: 0.1144	 bound: 3.6426	 transfer: 0.0326	 finalize: 0.0291
batch bounding time:  0.2404496669769287
Current worst splitting domains lb-rhs (depth):
-0.08133 (15), -0.08075 (15), -0.06894 (15), -0.06117 (15), -0.05975 (15), -0.04701 (15), -0.04275 (15), -0.03346 (15), -0.03044 (15), -0.02650 (15), -0.02468 (15), 
length of domains: 11
Total time: 0.2725	 pickout: 0.0010	 decision: 0.0228	 get_bound: 0.2458	 add_domain: 0.0029
Accumulated time:	 pickout: 0.0106	 decision: 0.2298	 get_bound: 2.2109	 add_domain: 0.0362
Current (lb-rhs): -0.08133172988891602
385 domains visited
Cumulative time: 2.496039390563965

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([11, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([11, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [1, 1195] [1, 1195] [1, 1195] [1, 1195] [1, 1195] [1, 1195] [1, 1195] [1, 1195] [1, 1195] [1, 1195] 
split level 1: [1, 269] [1, 269] [1, 269] [1, 269] [1, 269] [1, 269] [1, 269] [1, 269] [1, 269] [1, 269] 
split level 2: [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] 
regular batch size: 2*44, diving batch size 1*0
(88, 1, 28, 28) torch.Size([88, 1, 10]) torch.Size([88, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 88 / 88 = 1.0
pruning-in-iteration extra time: 0.00010442733764648438
Tensors transferred: pre=0.8063M lA=0.4032M alpha=0.2518M beta=0.0015M
This batch time : update_bounds func: 0.0179	 prepare: 0.0073	 bound: 0.0066	 transfer: 0.0020	 finalize: 0.0018
Accumulated time: update_bounds func: 3.8394	 prepare: 0.1217	 bound: 3.6493	 transfer: 0.0347	 finalize: 0.0309
batch bounding time:  0.017958879470825195
length of domains: 0
Total time: 0.0508	 pickout: 0.0012	 decision: 0.0216	 get_bound: 0.0269	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0118	 decision: 0.2514	 get_bound: 2.2378	 add_domain: 0.0374
No domains left, verification finished!
473 domains visited
Cumulative time: 2.5471324920654297


Properties batch 6, size 1
Remaining timeout: 163.9069697856903
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0. -1.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-3.41780043]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-3.41780043]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 47] 
split level 1: [2, 79] 
split level 2: [2, 67] 
split level 3: [2, 41] 
split level 4: [2, 38] 
split level 5: [1, 410] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 48 / 64 = 0.75
pruning-in-iteration extra time: 0.011049032211303711
Tensors transferred: pre=0.5864M lA=0.0733M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2421	 prepare: 0.0049	 bound: 0.2341	 transfer: 0.0017	 finalize: 0.0013
Accumulated time: update_bounds func: 4.0815	 prepare: 0.1266	 bound: 3.8834	 transfer: 0.0363	 finalize: 0.0322
batch bounding time:  0.24216651916503906
Current worst splitting domains lb-rhs (depth):
-0.84792 (6), -0.79163 (6), -0.66334 (6), -0.55998 (6), -0.55191 (6), -0.54126 (6), -0.46786 (6), -0.46308 (6), -0.45244 (6), -0.33075 (6), -0.32954 (6), -0.28170 (6), -0.26037 (6), -0.20132 (6), -0.15400 (6), -0.10232 (6), 
length of domains: 16
Total time: 0.2878	 pickout: 0.0008	 decision: 0.0343	 get_bound: 0.2498	 add_domain: 0.0029
Accumulated time:	 pickout: 0.0008	 decision: 0.0343	 get_bound: 0.2498	 add_domain: 0.0029
Current (lb-rhs): -0.8479204177856445
48 domains visited
Cumulative time: 0.29308104515075684

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([16, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([16, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [2, 83] [2, 83] [2, 83] [2, 83] [2, 83] [2, 83] [2, 83] [2, 83] [2, 83] [2, 83] 
split level 1: [1, 1194] [1, 661] [1, 1194] [2, 85] [1, 1194] [1, 661] [1, 1194] [2, 85] [1, 1194] [1, 661] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 58 / 64 = 0.90625
pruning-in-iteration extra time: 0.011122465133666992
Tensors transferred: pre=0.5864M lA=0.0275M alpha=0.1831M beta=0.0005M
This batch time : update_bounds func: 0.2415	 prepare: 0.0059	 bound: 0.2324	 transfer: 0.0016	 finalize: 0.0014
Accumulated time: update_bounds func: 4.3231	 prepare: 0.1325	 bound: 4.1158	 transfer: 0.0379	 finalize: 0.0336
batch bounding time:  0.24156928062438965
Current worst splitting domains lb-rhs (depth):
-0.18205 (8), -0.13327 (8), -0.10761 (8), -0.10121 (8), -0.08053 (8), -0.01981 (8), 
length of domains: 6
Total time: 0.2713	 pickout: 0.0010	 decision: 0.0223	 get_bound: 0.2458	 add_domain: 0.0023
Accumulated time:	 pickout: 0.0018	 decision: 0.0566	 get_bound: 0.4956	 add_domain: 0.0052
Current (lb-rhs): -0.1820530891418457
106 domains visited
Cumulative time: 0.5647375583648682

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 16, 14, 14]) pre split depth:  4
batch:  torch.Size([6, 16, 14, 14]) post split depth:  4
splitting decisions: 
split level 0: [2, 75] [2, 75] [2, 75] [2, 75] [2, 75] [2, 75] 
split level 1: [2, 85] [2, 85] [2, 85] [2, 85] [2, 85] [2, 85] 
split level 2: [1, 655] [1, 1194] [1, 655] [1, 1194] [1, 655] [1, 655] 
split level 3: [1, 661] [1, 655] [1, 661] [1, 655] [1, 661] [1, 661] 
regular batch size: 2*48, diving batch size 1*0
(96, 1, 28, 28) torch.Size([96, 1, 10]) torch.Size([96, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 96 / 96 = 1.0
pruning-in-iteration extra time: 0.00011205673217773438
Tensors transferred: pre=0.8796M lA=0.4398M alpha=0.2747M beta=0.0011M
This batch time : update_bounds func: 0.0193	 prepare: 0.0078	 bound: 0.0072	 transfer: 0.0021	 finalize: 0.0019
Accumulated time: update_bounds func: 4.3424	 prepare: 0.1404	 bound: 4.1230	 transfer: 0.0401	 finalize: 0.0356
batch bounding time:  0.019372940063476562
length of domains: 0
Total time: 0.0584	 pickout: 0.0009	 decision: 0.0264	 get_bound: 0.0300	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0027	 decision: 0.0830	 get_bound: 0.5256	 add_domain: 0.0063
No domains left, verification finished!
202 domains visited
Cumulative time: 0.6234719753265381


Properties batch 7, size 1
Remaining timeout: 163.17687964439392
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  0. -1.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-3.44438791]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-3.44438791]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 78] 
split level 1: [2, 22] 
split level 2: [2, 11] 
split level 3: [2, 67] 
split level 4: [1, 1052] 
split level 5: [2, 38] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 44 / 64 = 0.6875
pruning-in-iteration extra time: 0.011055946350097656
Tensors transferred: pre=0.5864M lA=0.0916M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2419	 prepare: 0.0050	 bound: 0.2338	 transfer: 0.0017	 finalize: 0.0013
Accumulated time: update_bounds func: 4.5843	 prepare: 0.1453	 bound: 4.3567	 transfer: 0.0418	 finalize: 0.0369
batch bounding time:  0.24192428588867188
Current worst splitting domains lb-rhs (depth):
-1.14641 (6), -1.04272 (6), -1.02655 (6), -1.02551 (6), -0.80529 (6), -0.74768 (6), -0.70367 (6), -0.63620 (6), -0.56284 (6), -0.55623 (6), -0.53429 (6), -0.40727 (6), -0.38545 (6), -0.23123 (6), -0.22460 (6), -0.22339 (6), -0.17624 (6), -0.15386 (6), -0.03608 (6), -0.01302 (6), 
length of domains: 20
Total time: 0.2880	 pickout: 0.0008	 decision: 0.0344	 get_bound: 0.2495	 add_domain: 0.0031
Accumulated time:	 pickout: 0.0008	 decision: 0.0344	 get_bound: 0.2495	 add_domain: 0.0031
Current (lb-rhs): -1.1464099884033203
44 domains visited
Cumulative time: 0.2937018871307373

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([20, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([20, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [1, 415] [1, 415] [1, 415] [1, 415] [1, 618] [1, 415] [1, 415] [1, 415] [1, 415] [1, 415] 
split level 1: [1, 618] [1, 905] [1, 618] [1, 905] [1, 1059] [1, 618] [1, 905] [1, 905] [1, 618] [1, 905] 
regular batch size: 2*40, diving batch size 1*0
(80, 1, 28, 28) torch.Size([80, 1, 10]) torch.Size([80, 1])
pruning_in_iteration open status: True
ratio of positive domain = 65 / 80 = 0.8125
pruning-in-iteration extra time: 0.011056661605834961
Tensors transferred: pre=0.7330M lA=0.0687M alpha=0.2289M beta=0.0006M
This batch time : update_bounds func: 0.2488	 prepare: 0.0066	 bound: 0.2386	 transfer: 0.0018	 finalize: 0.0016
Accumulated time: update_bounds func: 4.8331	 prepare: 0.1520	 bound: 4.5953	 transfer: 0.0436	 finalize: 0.0385
batch bounding time:  0.24889492988586426
Current worst splitting domains lb-rhs (depth):
-0.61648 (8), -0.55304 (8), -0.48646 (8), -0.44990 (8), -0.38579 (8), -0.35877 (8), -0.32046 (8), -0.28255 (8), -0.22940 (8), -0.17099 (8), -0.14784 (8), -0.12493 (8), -0.08536 (8), -0.07553 (8), -0.06431 (8), 
length of domains: 15
Total time: 0.2815	 pickout: 0.0010	 decision: 0.0232	 get_bound: 0.2541	 add_domain: 0.0032
Accumulated time:	 pickout: 0.0018	 decision: 0.0576	 get_bound: 0.5036	 add_domain: 0.0063
Current (lb-rhs): -0.6164813041687012
109 domains visited
Cumulative time: 0.5755374431610107

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([15, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([15, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [1, 415] [1, 661] [1, 661] [1, 612] [1, 618] [1, 661] [1, 415] [1, 661] [1, 661] [1, 661] 
split level 1: [1, 612] [1, 612] [1, 1059] [1, 1059] [1, 612] [1, 612] [1, 612] [1, 612] [1, 1059] [1, 905] 
regular batch size: 2*30, diving batch size 1*0
(60, 1, 28, 28) torch.Size([60, 1, 10]) torch.Size([60, 1])
pruning_in_iteration open status: True
ratio of positive domain = 50 / 60 = 0.8333333333333334
pruning-in-iteration extra time: 0.011047840118408203
Tensors transferred: pre=0.5498M lA=0.0458M alpha=0.1717M beta=0.0006M
This batch time : update_bounds func: 0.2388	 prepare: 0.0053	 bound: 0.2305	 transfer: 0.0016	 finalize: 0.0013
Accumulated time: update_bounds func: 5.0719	 prepare: 0.1573	 bound: 4.8258	 transfer: 0.0452	 finalize: 0.0398
batch bounding time:  0.2388758659362793
Current worst splitting domains lb-rhs (depth):
-0.36247 (10), -0.21554 (10), -0.20204 (10), -0.16875 (10), -0.06653 (10), -0.05128 (10), -0.04732 (10), -0.03960 (10), -0.01763 (10), -0.01169 (10), 
length of domains: 10
Total time: 0.2684	 pickout: 0.0010	 decision: 0.0218	 get_bound: 0.2430	 add_domain: 0.0027
Accumulated time:	 pickout: 0.0028	 decision: 0.0795	 get_bound: 0.7466	 add_domain: 0.0090
Current (lb-rhs): -0.362468957901001
159 domains visited
Cumulative time: 0.8443357944488525

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([10, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([10, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [2, 47] [1, 73] [2, 47] [2, 47] [2, 47] [2, 47] [2, 47] [2, 47] [2, 47] [2, 47] 
split level 1: [1, 1059] [1, 612] [1, 661] [1, 1059] [1, 1059] [1, 905] [1, 1059] [1, 661] [1, 1059] [1, 905] 
split level 2: [1, 906] [1, 414] [1, 414] [1, 906] [1, 906] [1, 563] [1, 906] [1, 414] [1, 906] [1, 563] 
regular batch size: 2*40, diving batch size 1*0
(80, 1, 28, 28) torch.Size([80, 1, 10]) torch.Size([80, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 80 / 80 = 1.0
pruning-in-iteration extra time: 0.00010466575622558594
Tensors transferred: pre=0.7330M lA=0.3665M alpha=0.2289M beta=0.0011M
This batch time : update_bounds func: 0.0173	 prepare: 0.0068	 bound: 0.0068	 transfer: 0.0019	 finalize: 0.0017
Accumulated time: update_bounds func: 5.0892	 prepare: 0.1640	 bound: 4.8326	 transfer: 0.0471	 finalize: 0.0415
batch bounding time:  0.017359495162963867
length of domains: 0
Total time: 0.0491	 pickout: 0.0009	 decision: 0.0217	 get_bound: 0.0253	 add_domain: 0.0012
Accumulated time:	 pickout: 0.0037	 decision: 0.1012	 get_bound: 0.7719	 add_domain: 0.0101
No domains left, verification finished!
239 domains visited
Cumulative time: 0.8936994075775146


Properties batch 8, size 1
Remaining timeout: 162.1803514957428
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  0.  0. -1.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-2.50767040]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.09819508, -6.96150398, -3.54694819, -2.57888794,  1.44313431,
        -2.92855453, -6.18936014, -0.67647600, -1.08281958,  3.70497847],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 14, 14]), torch.Size([1, 1, 32, 7, 7]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-2.50767040]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/16']
Keeping slopes for these layers: ['/16']
layer 0 size torch.Size([3136]) unstable 1253
layer 1 size torch.Size([1568]) unstable 191
layer 2 size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1469
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 14, 14]) pre split depth:  6
batch:  torch.Size([1, 16, 14, 14]) post split depth:  6
splitting decisions: 
split level 0: [2, 47] 
split level 1: [2, 83] 
split level 2: [2, 38] 
split level 3: [2, 67] 
split level 4: [2, 22] 
split level 5: [2, 85] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 55 / 64 = 0.859375
pruning-in-iteration extra time: 0.011111021041870117
Tensors transferred: pre=0.5864M lA=0.0412M alpha=0.1831M beta=0.0004M
This batch time : update_bounds func: 0.2372	 prepare: 0.0049	 bound: 0.2290	 transfer: 0.0018	 finalize: 0.0013
Accumulated time: update_bounds func: 5.3264	 prepare: 0.1689	 bound: 5.0616	 transfer: 0.0489	 finalize: 0.0428
batch bounding time:  0.23722028732299805
Current worst splitting domains lb-rhs (depth):
-1.20450 (6), -0.94723 (6), -0.52386 (6), -0.43300 (6), -0.40863 (6), -0.37067 (6), -0.13964 (6), -0.06461 (6), -0.05157 (6), 
length of domains: 9
Total time: 0.2825	 pickout: 0.0009	 decision: 0.0342	 get_bound: 0.2449	 add_domain: 0.0025
Accumulated time:	 pickout: 0.0009	 decision: 0.0342	 get_bound: 0.2449	 add_domain: 0.0025
Current (lb-rhs): -1.2045044898986816
55 domains visited
Cumulative time: 0.28771448135375977

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([9, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([9, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [1, 430] [1, 430] [1, 430] [1, 415] [2, 41] [1, 430] [2, 41] [2, 41] [1, 430] 
split level 1: [1, 415] [2, 41] [2, 41] [1, 414] [1, 430] [2, 41] [1, 430] [1, 430] [2, 41] 
split level 2: [1, 414] [1, 414] [1, 1207] [1, 905] [1, 414] [1, 414] [1, 1207] [1, 1207] [1, 410] 
regular batch size: 2*36, diving batch size 1*0
(72, 1, 28, 28) torch.Size([72, 1, 10]) torch.Size([72, 1])
pruning_in_iteration open status: True
ratio of positive domain = 59 / 72 = 0.8194444444444444
pruning-in-iteration extra time: 0.01099705696105957
Tensors transferred: pre=0.6597M lA=0.0641M alpha=0.2060M beta=0.0007M
This batch time : update_bounds func: 0.2409	 prepare: 0.0062	 bound: 0.2313	 transfer: 0.0017	 finalize: 0.0016
Accumulated time: update_bounds func: 5.5673	 prepare: 0.1751	 bound: 5.2928	 transfer: 0.0507	 finalize: 0.0444
batch bounding time:  0.24098896980285645
Current worst splitting domains lb-rhs (depth):
-0.74549 (9), -0.65041 (9), -0.55670 (9), -0.48399 (9), -0.42495 (9), -0.32985 (9), -0.32133 (9), -0.24902 (9), -0.24303 (9), -0.23262 (9), -0.17683 (9), -0.16313 (9), -0.15163 (9), 
length of domains: 13
Total time: 0.2732	 pickout: 0.0009	 decision: 0.0215	 get_bound: 0.2478	 add_domain: 0.0029
Accumulated time:	 pickout: 0.0018	 decision: 0.0557	 get_bound: 0.4927	 add_domain: 0.0054
Current (lb-rhs): -0.7454893589019775
114 domains visited
Cumulative time: 0.5612244606018066

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([13, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([13, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [1, 415] [2, 81] [2, 81] [2, 81] [2, 81] [2, 81] [1, 268] [1, 415] [2, 81] [1, 415] 
split level 1: [2, 81] [1, 1198] [1, 1198] [1, 414] [1, 1207] [1, 268] [2, 81] [2, 81] [1, 1198] [2, 81] 
regular batch size: 2*26, diving batch size 1*0
(52, 1, 28, 28) torch.Size([52, 1, 10]) torch.Size([52, 1])
pruning_in_iteration open status: True
ratio of positive domain = 32 / 52 = 0.6153846153846154
pruning-in-iteration extra time: 0.01125645637512207
Tensors transferred: pre=0.4765M lA=0.0962M alpha=0.1488M beta=0.0005M
This batch time : update_bounds func: 0.2425	 prepare: 0.0051	 bound: 0.2338	 transfer: 0.0024	 finalize: 0.0011
Accumulated time: update_bounds func: 5.8099	 prepare: 0.1801	 bound: 5.5266	 transfer: 0.0531	 finalize: 0.0456
batch bounding time:  0.24257850646972656
Current worst splitting domains lb-rhs (depth):
-0.51053 (11), -0.41923 (11), -0.38139 (11), -0.33738 (11), -0.32582 (11), -0.29898 (11), -0.23397 (11), -0.19606 (11), -0.19033 (11), -0.18049 (11), -0.17645 (11), -0.14789 (11), -0.14672 (11), -0.09191 (11), -0.09126 (11), -0.08503 (11), -0.06646 (11), -0.05054 (11), -0.03468 (11), -0.02501 (11), 
length of domains: 20
Total time: 0.2727	 pickout: 0.0010	 decision: 0.0218	 get_bound: 0.2462	 add_domain: 0.0037
Accumulated time:	 pickout: 0.0027	 decision: 0.0775	 get_bound: 0.7389	 add_domain: 0.0090
Current (lb-rhs): -0.5105338096618652
146 domains visited
Cumulative time: 0.8342525959014893

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([20, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([20, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [1, 415] [1, 1198] [1, 1198] [1, 415] [1, 1198] [1, 1198] [1, 415] [1, 415] [1, 415] [1, 415] 
split level 1: [2, 79] [2, 79] [2, 79] [2, 79] [2, 79] [2, 79] [1, 1207] [1, 1198] [1, 1198] [2, 79] 
regular batch size: 2*40, diving batch size 1*0
(80, 1, 28, 28) torch.Size([80, 1, 10]) torch.Size([80, 1])
pruning_in_iteration open status: True
ratio of positive domain = 64 / 80 = 0.8
pruning-in-iteration extra time: 0.011211395263671875
Tensors transferred: pre=0.7330M lA=0.0733M alpha=0.2289M beta=0.0011M
This batch time : update_bounds func: 0.2465	 prepare: 0.0070	 bound: 0.2352	 transfer: 0.0024	 finalize: 0.0018
Accumulated time: update_bounds func: 6.0563	 prepare: 0.1872	 bound: 5.7618	 transfer: 0.0555	 finalize: 0.0474
batch bounding time:  0.246565580368042
Current worst splitting domains lb-rhs (depth):
-0.36133 (13), -0.30940 (13), -0.20580 (13), -0.18113 (13), -0.16633 (13), -0.12161 (13), -0.08577 (13), -0.06287 (13), -0.05677 (13), -0.05454 (13), -0.05185 (13), -0.04227 (13), -0.02463 (13), -0.01475 (13), -0.01082 (13), -0.00913 (13), 
length of domains: 16
Total time: 0.2804	 pickout: 0.0011	 decision: 0.0239	 get_bound: 0.2521	 add_domain: 0.0034
Accumulated time:	 pickout: 0.0038	 decision: 0.1014	 get_bound: 0.9910	 add_domain: 0.0124
Current (lb-rhs): -0.3613290786743164
210 domains visited
Cumulative time: 1.115065336227417

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([16, 16, 14, 14]) pre split depth:  2
batch:  torch.Size([16, 16, 14, 14]) post split depth:  2
splitting decisions: 
split level 0: [1, 415] [1, 415] [2, 79] [1, 415] [1, 1059] [2, 79] [1, 1059] [2, 79] [2, 79] [2, 79] 
split level 1: [1, 618] [1, 618] [1, 1207] [1, 618] [2, 79] [1, 1207] [1, 1207] [1, 1207] [1, 1207] [1, 1207] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.011257648468017578
Tensors transferred: pre=0.5864M lA=0.0367M alpha=0.1831M beta=0.0010M
This batch time : update_bounds func: 0.2396	 prepare: 0.0058	 bound: 0.2306	 transfer: 0.0016	 finalize: 0.0014
Accumulated time: update_bounds func: 6.2960	 prepare: 0.1930	 bound: 5.9924	 transfer: 0.0571	 finalize: 0.0488
batch bounding time:  0.23966240882873535
Current worst splitting domains lb-rhs (depth):
-0.16351 (15), -0.11196 (15), -0.08565 (15), -0.08563 (15), -0.08255 (15), -0.06859 (15), -0.03400 (15), -0.02433 (15), 
length of domains: 8
Total time: 0.2706	 pickout: 0.0010	 decision: 0.0227	 get_bound: 0.2442	 add_domain: 0.0026
Accumulated time:	 pickout: 0.0048	 decision: 0.1241	 get_bound: 1.2352	 add_domain: 0.0151
Current (lb-rhs): -0.1635148525238037
266 domains visited
Cumulative time: 1.3860645294189453

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 16, 14, 14]) pre split depth:  3
batch:  torch.Size([8, 16, 14, 14]) post split depth:  3
splitting decisions: 
split level 0: [1, 1059] [1, 1059] [1, 277] [1, 277] [1, 1059] [1, 1059] [1, 1059] [1, 914] 
split level 1: [1, 277] [1, 277] [1, 905] [1, 725] [1, 725] [1, 725] [1, 914] [1, 1207] 
split level 2: [1, 725] [1, 725] [1, 725] [1, 905] [1, 277] [1, 277] [1, 1207] [1, 277] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])

all verified at 11th iter
pruning_in_iteration open status: True
ratio of positive domain = 64 / 64 = 1.0
pruning-in-iteration extra time: 0.006163597106933594
Tensors transferred: pre=0.5864M lA=0.0046M alpha=0.1831M beta=0.0011M
This batch time : update_bounds func: 0.1424	 prepare: 0.0056	 bound: 0.1338	 transfer: 0.0016	 finalize: 0.0013
Accumulated time: update_bounds func: 6.4384	 prepare: 0.1986	 bound: 6.1262	 transfer: 0.0587	 finalize: 0.0501
batch bounding time:  0.14249110221862793
length of domains:/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/batch_branch_and_bound.py:420: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7), np.inf
 0
Total time: 0.1721	 pickout: 0.0009	 decision: 0.0208	 get_bound: 0.1492	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0058	 decision: 0.1449	 get_bound: 1.3844	 add_domain: 0.0162
No domains left, verification finished!
330 domains visited
Cumulative time: 1.558772087097168

Result: safe in 19.4836 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time (bab) [total:1]: 9.038748264312744
mean time [1] 19.48361825942993 max time 19.48361825942993
safe (total 1): [0]
