Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_6_200
  path: mnist_6_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 43
  end: 44
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    _tmp_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Wed Sep 14 16:23:22 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_6_200]_start=43_end=44_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-42.90721130, -53.32341766, -49.96341324, -53.90112305, -52.48913193,
         -44.01448441, -57.07033539, -57.98386765, -60.98963928]],
       device='cuda:0') None
best_l after optimization: -358.883056640625 with beta sum per layer: []
alpha/beta optimization time: 6.157019376754761
initial alpha-CROWN bounds: tensor([[-30.06584740, -39.78733444, -39.30331039, -39.73000336, -40.51801682,
         -34.00349808, -44.91165543, -44.81174088, -45.75164032]],
       device='cuda:0')
Worst class: (+ rhs) -45.75164031982422
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.63940144,  1.80271637,  7.01665449,  0.65871990, -0.22974399,
          -2.23512220, -0.08393238,  1.53723550, -0.39483911, -2.36826992],
         [-2.63940144,  1.80271637,  7.01665449,  0.65871990, -0.22974399,
          -2.23512220, -0.08393238,  1.53723550, -0.39483911, -2.36826992]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.65605545, 5.21393824, 6.35793447, 7.24639845, 9.25177670,
          7.10058689, 5.47941875, 7.41149378, 9.38492393]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6397 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_53', 'lay4_43', 'lay4_40', 'lay4_165', 'lay4_58', 'lay4_77', 'lay4_144', 'lay4_91', 'lay4_141', 'lay4_121', 'lay4_166', 'lay4_185', 'lay4_174', 'lay4_189', 'lay4_85', 'lay4_14', 'lay4_142', 'lay4_112', 'lay4_116', 'lay4_65', 'lay4_52', 'lay4_137', 'lay4_86', 'lay4_47', 'lay4_38', 'lay4_7', 'lay4_123', 'lay4_0', 'lay4_115', 'lay4_180', 'lay4_67', 'lay4_131', 'lay4_107', 'lay4_101', 'lay4_130', 'lay4_78', 'lay4_134', 'lay4_83', 'lay4_95', 'lay4_22', 'lay4_182', 'lay4_9', 'lay4_125', 'lay4_187', 'lay4_178', 'lay4_13', 'lay4_127', 'lay4_147', 'lay4_191', 'lay4_49', 'lay4_11', 'lay4_109', 'lay4_76', 'lay4_126', 'lay4_16', 'lay4_73', 'lay4_160', 'lay4_74', 'lay4_150', 'lay4_79', 'lay4_70', 'lay4_183', 'lay4_103', 'lay4_3', 'lay4_161', 'lay4_75', 'lay4_62', 'lay4_162', 'lay4_186', 'lay4_192', 'lay4_98', 'lay4_113', 'lay4_170', 'lay4_61', 'lay4_156', 'lay4_39', 'lay4_154', 'lay4_89', 'lay4_80', 'lay4_69', 'lay4_129', 'lay4_146', 'lay4_81', 'lay4_145', 'lay4_31', 'lay4_190', 'lay4_87', 'lay4_188', 'lay4_138', 'lay4_63', 'lay4_2', 'lay4_4', 'lay4_128'] filter: 1.0
PGD done for relu layer 1
<frozen importlib._bootstrap>:219: RuntimeWarning: numpy.ufunc size changed, may indicate binary incompatibility. Expected 216 from C header, got 232 from PyObject
/home/zhouxingshi/miniconda3/envs/zshi/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/zhouxingshi/gputest/CROWN-GENERAL_release/complete_verifier/utils.py:622: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_121, [-inf,inf]=>[-0.6628096062064036,0.10043466105768366] (2,-1; 2,-1), time: 2.1831s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-0.3501480264948014,0.29813998383907914] (2,-1; 2,-1), time: 4.4890s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_185, [-inf,inf]=>[-0.3872397633341028,0.26511094317611456] (2,-1; 2,-1), time: 4.5759s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_189, [-inf,inf]=>[-0.3188711664786961,0.4017046443144505] (2,-1; 2,-1), time: 5.1298s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_144, [-inf,inf]=>[-0.36672780754648243,0.3538674359230122] (2,-1; 2,-1), time: 5.2339s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-0.3717372780592025,0.3265590333334793] (2,-1; 2,-1), time: 5.7290s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-0.28489697720721624,0.4316842387878231] (2,-1; 2,-1), time: 6.0776s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-0.43430723209406535,0.2761077109710255] (2,-1; 2,-1), time: 6.2543s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_14, [-inf,inf]=>[-0.6727912906493133,0.04688451613398673] (2,-1; 2,-1), time: 6.3196s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_174, [-inf,inf]=>[-0.6782204913979616,0.13550232133464463] (2,-1; 2,-1), time: 6.4837s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4244s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_141, [-inf,inf]=>[-0.3259965996059029,0.38474534192846305] (2,-1; 2,-1), time: 6.7699s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-0.1965543869368042,0.5018044703400648] (2,-1; 2,-1), time: 6.7996s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_165, [-inf,inf]=>[-0.46327630328394037,0.39114351874857833] (2,-1; 2,-1), time: 7.0380s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.2900085992966971,0.32788307278526274] (2,-1; 2,-1), time: 5.0224s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_166, [-inf,inf]=>[1e-05,0.6706048759991233] (15,-1; 2,-1), time: 7.6255s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.46314549969765884,0.3007826386237902] (2,-1; 2,-1), time: 8.4932s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_107, [-inf,inf]=>[-inf,-0.004086047123982087] (-1,-1; 2,-1), time: 0.3787s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_116, [-inf,inf]=>[-0.5527841328418935,0.09997713919494387] (2,-1; 2,-1), time: 4.3089s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5147360299536183,0.2157174289390761] (2,-1; 2,-1), time: 5.2436s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-0.14321991663287842,0.6297895085729547] (2,-1; 2,-1), time: 4.8857s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3981s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-0.33265324296354204,0.36383241542725064] (2,-1; 2,-1), time: 4.6668s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-0.2668093639323954,0.3336202606050185] (2,-1; 2,-1), time: 4.8862s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_131, [-inf,inf]=>[-0.28429291832975984,0.4236117982875949] (2,-1; 2,-1), time: 4.3315s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.4788303066113676,0.16250178766128312] (2,-1; 2,-1), time: 5.8079s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_130, [-inf,inf]=>[-0.6815271334444969,0.057541581177719] (2,-1; 2,-1), time: 3.4279s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-0.44228755238044537,0.1392260429716157] (2,-1; 2,-1), time: 6.0803s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.2288476241140025,0.5173550335490977] (2,-1; 2,-1), time: 6.0274s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3251s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_123, [-inf,inf]=>[-0.1452058889856503,0.5064887862651806] (2,-1; 2,-1), time: 6.2264s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2906s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[1e-05,0.6190913322004487] (15,-1; 2,-1), time: 4.1224s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.31276885689725953,0.23787104923238447] (2,-1; 2,-1), time: 8.6612s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.4473125303595776,0.22144101322583054] (2,-1; 2,-1), time: 6.0223s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3716s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2462s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2998s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[1e-05,0.7872748898888382] (15,-1; 2,-1), time: 3.8340s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.2650983091941671,0.4501121899197976] (2,-1; 2,-1), time: 5.1918s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4183007554405509,0.20654822383158167] (2,-1; 2,-1), time: 16.2047s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.04419449843141671,0.5444415060135972] (2,-1; 2,-1), time: 5.2762s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_22, [-inf,inf]=>[-0.113844771382567,0.7381571181622617] (2,-1; 2,-1), time: 5.4184s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-0.38455935024889526,0.2372412449821032] (2,-1; 2,-1), time: 4.4325s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_109, [-inf,inf]=>[1e-05,0.8334357895545093] (15,-1; 2,-1), time: 4.3815s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.8671s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2986s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.5785147185353038,0.25539546468122176] (2,-1; 2,-1), time: 6.0702s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3606s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_191, [-inf,inf]=>[-0.09193680319155903,0.4176537259336889] (2,-1; 2,-1), time: 5.4590s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.3733996479659203,0.33976581272487394] (2,-1; 2,-1), time: 5.9910s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.3072390457775232,0.5167452462210397] (2,-1; 2,-1), time: 6.3345s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_16, [-inf,inf]=>[-0.258951922616182,0.44719077285013253] (2,-1; 2,-1), time: 4.7896s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3756s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.43494262072741435,0.19173050291751148] (2,-1; 2,-1), time: 13.3285s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_126, [-inf,inf]=>[-0.48083265533280584,0.2237143794010355] (2,-1; 2,-1), time: 5.7402s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-0.10019033656136528,0.6008096608349326] (2,-1; 2,-1), time: 6.3415s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3782s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_73, [-inf,inf]=>[-0.507904674424578,0.18149376213826757] (2,-1; 2,-1), time: 4.8328s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.14414917318932063,0.43925009792559794] (9,-1; 2,-1), time: 15.5182s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4440s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.11347197622966962,0.6434394805671841] (2,-1; 2,-1), time: 5.1548s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_150, [-inf,inf]=>[-0.608362210196786,0.1372265631634488] (2,-1; 2,-1), time: 4.6486s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3539s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.5844827875888896,0.18538391271862903] (2,-1; 2,-1), time: 4.7376s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.08970103197695431,0.5903807761708776] (2,-1; 2,-1), time: 4.6910s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_161, [-inf,inf]=>[-0.5539393682620973,0.07828327006998013] (2,-1; 2,-1), time: 5.5706s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3325s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_183, [-inf,inf]=>[-0.41722398356653917,0.19935492828105383] (2,-1; 2,-1), time: 6.4475s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[-0.71002964377072,0.026163378971916444] (2,-1; 2,-1), time: 6.0507s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3524s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_113, [-inf,inf]=>[-0.5932548273805719,0.07565635554945714] (2,-1; 2,-1), time: 4.4582s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_170, [-inf,inf]=>[-0.5173984859572365,0.10341986669071743] (2,-1; 2,-1), time: 4.3569s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2680s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_160, [-inf,inf]=>[-0.5594997515877348,0.15122446047541155] (2,-1; 2,-1), time: 8.7101s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-0.2832994652930669,0.3357014504292885] (2,-1; 2,-1), time: 7.6225s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-0.17109124354861202,0.5704896046284164] (2,-1; 2,-1), time: 3.5602s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3951s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-0.2680744994148015,0.4173927183375113] (2,-1; 2,-1), time: 5.7877s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.4380015546965305,0.46553408837770816] (2,-1; 2,-1), time: 5.5698s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.4489191917842867,0.21249199886581427] (2,-1; 2,-1), time: 4.3918s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.3867099171439929,0.29320097723154315] (2,-1; 2,-1), time: 6.0238s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_154, [-inf,inf]=>[-0.1698304931888312,0.4588622612856302] (2,-1; 2,-1), time: 5.9656s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_146, [-inf,inf]=>[1e-05,0.8718313707069968] (15,-1; 2,-1), time: 3.6506s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[1e-05,0.8767264561542946] (15,-1; 2,-1), time: 2.7237s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[1e-05,0.7120976564268149] (15,-1; 2,-1), time: 3.7685s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_188, [-inf,inf]=>[1e-05,0.6664628459898603] (15,-1; 2,-1), time: 4.0890s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.09112713601044253,0.6858573889012827] (2,-1; 2,-1), time: 4.0737s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.16379769589179066,0.47416579980360385] (2,-1; 2,-1), time: 5.8795s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_31, [-inf,inf]=>[-0.5780595321532245,0.052395616823170205] (2,-1; 2,-1), time: 5.2864s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_2, [-inf,inf]=>[-0.010714938102084053,0.7801718248019396] (2,-1; 2,-1), time: 4.7662s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.07592355077025145,0.6339288361862246] (2,-1; 2,-1), time: 6.6945s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.6614939757795032,0.044825397277639775] (9,-1; 2,-1), time: 16.1920s, #vars: 1295, #constrs: 565, improved: True
PGD done for relu layer 2
MIP improved 93 nodes out of 93 unstable nodes, lb improved 21.341110229492188, ub improved 17.867347717285156, time 35.6368
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_28', 'lay6_139', 'lay6_93', 'lay6_170', 'lay6_152', 'lay6_191', 'lay6_168', 'lay6_67', 'lay6_33', 'lay6_181', 'lay6_24', 'lay6_123', 'lay6_188', 'lay6_32', 'lay6_177', 'lay6_195', 'lay6_133', 'lay6_18', 'lay6_106', 'lay6_159', 'lay6_110', 'lay6_3', 'lay6_15', 'lay6_107', 'lay6_26', 'lay6_122', 'lay6_30', 'lay6_50', 'lay6_49', 'lay6_141', 'lay6_112', 'lay6_192', 'lay6_87', 'lay6_29', 'lay6_70', 'lay6_69', 'lay6_101', 'lay6_136', 'lay6_183', 'lay6_151', 'lay6_175', 'lay6_196', 'lay6_113', 'lay6_169', 'lay6_153', 'lay6_162', 'lay6_197', 'lay6_72', 'lay6_7', 'lay6_108', 'lay6_174', 'lay6_9', 'lay6_117', 'lay6_148', 'lay6_98', 'lay6_77', 'lay6_128', 'lay6_21', 'lay6_2', 'lay6_166', 'lay6_80', 'lay6_48', 'lay6_64', 'lay6_103', 'lay6_124', 'lay6_39', 'lay6_73', 'lay6_186', 'lay6_86', 'lay6_37', 'lay6_92', 'lay6_88', 'lay6_163', 'lay6_173', 'lay6_53', 'lay6_189', 'lay6_150', 'lay6_142', 'lay6_99', 'lay6_10', 'lay6_105', 'lay6_11', 'lay6_55', 'lay6_59', 'lay6_193', 'lay6_75', 'lay6_171', 'lay6_96', 'lay6_129', 'lay6_91', 'lay6_165', 'lay6_194', 'lay6_180', 'lay6_138', 'lay6_42', 'lay6_178', 'lay6_60', 'lay6_65', 'lay6_6', 'lay6_118', 'lay6_76', 'lay6_102', 'lay6_54', 'lay6_16', 'lay6_12', 'lay6_61', 'lay6_111', 'lay6_43', 'lay6_146', 'lay6_132', 'lay6_120', 'lay6_78', 'lay6_121', 'lay6_36', 'lay6_187', 'lay6_135', 'lay6_131', 'lay6_167', 'lay6_68', 'lay6_160', 'lay6_51', 'lay6_35', 'lay6_27', 'lay6_176', 'lay6_74', 'lay6_8', 'lay6_172', 'lay6_94', 'lay6_58', 'lay6_140', 'lay6_134', 'lay6_119', 'lay6_157', 'lay6_144', 'lay6_46'] filter: 1.0
Solving MIP for lay6_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4093s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4300s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4258s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4276s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4847s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6283s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3665s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4887s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3241s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3351s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3705s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1899s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4986s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9076s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3409s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3209s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5502s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.2366s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6856s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.1040s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3677s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3623s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.9699s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.8025s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[1e-05,1.5164887473907067] (15,-1; 9,-1), time: 15.7704s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.5815179937354333,0.33339942466629] (9,-1; 9,-1), time: 30.0199s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_188, [-inf,inf]=>[-0.9029632109033905,0.11591689209843989] (9,-1; 9,-1), time: 30.0125s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-0.8259071314826596,0.07889554445013136] (9,-1; 9,-1), time: 30.0152s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-0.6854469636583763,0.18831102627229815] (9,-1; 9,-1), time: 30.0289s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_177, [-inf,inf]=>[-0.9060549818360212,0.1890057492544879] (9,-1; 9,-1), time: 30.0618s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3662s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4304s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-0.07602444294144592,0.8636041249437876] (9,-1; 9,-1), time: 30.0252s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3589s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-0.2852738412942344,0.7218731455434073] (9,-1; 9,-1), time: 30.1840s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1926s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.8938061461528609,0.10788894184718457] (9,-1; 9,-1), time: 30.0102s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3444s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-0.8367867358659326,0.008811205177926206] (9,-1; 9,-1), time: 30.0338s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2591s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.7048741298600871,0.21070291185814122] (9,-1; 9,-1), time: 30.5798s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4148s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0762s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5022884441297678,0.34216411394469864] (9,-1; 9,-1), time: 30.0116s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.8497266179260163,0.060777634670470385] (9,-1; 9,-1), time: 30.0347s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3285s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3440s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0374s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3473s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4050s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-0.8855411830974137,0.04441148820568197] (9,-1; 9,-1), time: 30.0207s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_175, [-inf,inf]=>[1e-05,1.0627191998311778] (15,-1; 9,-1), time: 16.1337s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-0.7804635643598323,0.26344794600980703] (9,-1; 9,-1), time: 30.8720s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.4063s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3512s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7082s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[1e-05,1.1637518504097204] (15,-1; 9,-1), time: 17.5273s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.2574s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4072s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_151, [-inf,inf]=>[-0.7966437309589264,0.0279972579454441] (9,-1; 9,-1), time: 30.3026s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3714s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2637s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_153, [-inf,inf]=>[-0.6577276000538824,0.29401639571076577] (9,-1; 9,-1), time: 30.0122s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_169, [-inf,inf]=>[-0.3524997773138933,0.4947990449308373] (9,-1; 9,-1), time: 30.0297s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.866627892937581,0.1765635026553167] (9,-1; 9,-1), time: 30.0796s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3444s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_174, [-inf,inf]=>[-0.3598017828511332,0.42370229352089694] (9,-1; 9,-1), time: 30.0804s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-0.7168323822212926,0.16121132425361842] (9,-1; 9,-1), time: 30.0207s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1957s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-0.7782354533519995,0.20584354631849594] (9,-1; 9,-1), time: 30.0788s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-0.4162234208376432,0.4116939044544422] (9,-1; 9,-1), time: 30.1448s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3369s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_128, [-inf,inf]=>[-0.33589393079247215,0.435362677993649] (9,-1; 9,-1), time: 30.5216s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3231s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-0.6035513449338035,0.1892805136616122] (9,-1; 9,-1), time: 30.2971s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-0.8749733138710694,0.2228285560187157] (9,-1; 9,-1), time: 30.0919s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9473s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3919s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-0.5711365934187363,0.34997319919751946] (9,-1; 9,-1), time: 30.2633s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.24332864225632578,0.4859301055816158] (9,-1; 9,-1), time: 30.0317s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4620s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-0.6794621339635669,0.3177555593822435] (9,-1; 9,-1), time: 30.0337s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[1e-05,1.511087921360126] (15,-1; 9,-1), time: 15.3654s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[1e-05,1.0738031785233066] (15,-1; 9,-1), time: 16.8144s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_171, [-inf,inf]=>[1e-05,0.8432011802449906] (15,-1; 9,-1), time: 16.5608s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-0.7339653577857598,0.060394633827372736] (9,-1; 9,-1), time: 30.0122s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5626s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_193, [-inf,inf]=>[1e-05,1.0779301960139283] (15,-1; 9,-1), time: 21.7096s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.40094977220320227,0.405339807675165] (9,-1; 9,-1), time: 30.0141s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2360s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_142, [-inf,inf]=>[-0.6134280853635188,0.337751376814591] (9,-1; 9,-1), time: 30.0122s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[1e-05,1.0246879344798088] (15,-1; 9,-1), time: 21.7430s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3575s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[1e-05,0.8396191571417441] (15,-1; 9,-1), time: 23.2939s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.3339798549379811,0.5604873950860797] (9,-1; 9,-1), time: 30.3807s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3664s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.07693360050597901,0.7491465027088198] (9,-1; 9,-1), time: 30.0656s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_165, [-inf,inf]=>[-0.836266259157915,0.2075048702030693] (9,-1; 9,-1), time: 30.0176s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,1.1912157329571704] (15,-1; 9,-1), time: 15.8819s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3467s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.5054369141930704,0.35925642816223174] (9,-1; 9,-1), time: 30.0160s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.4466734037876489,0.35619246201903104] (9,-1; 9,-1), time: 30.0169s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[1e-05,0.8413660921002606] (15,-1; 9,-1), time: 23.3691s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.44802659227407143,0.3958861011206721] (9,-1; 9,-1), time: 30.0245s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_146, [-inf,inf]=>[1e-05,1.527781615035596] (15,-1; 9,-1), time: 15.4125s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[1e-05,1.2063917979780305] (15,-1; 9,-1), time: 16.0602s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4234s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3449s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3026s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[1e-05,1.170192632528738] (15,-1; 9,-1), time: 15.3721s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4342s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-0.22259289011676317,0.5668292634244896] (9,-1; 9,-1), time: 30.0115s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_121, [-inf,inf]=>[1e-05,1.2544728674584276] (15,-1; 9,-1), time: 17.2689s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[1e-05,1.5792407566919662] (15,-1; 9,-1), time: 15.7302s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[1e-05,1.2016058638658689] (15,-1; 9,-1), time: 15.4400s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.8987074472157784,0.0673539339258781] (9,-1; 9,-1), time: 30.5752s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.13194867294435014,0.7344535906985735] (9,-1; 9,-1), time: 30.3924s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4274s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-0.32199103649542393,0.5834869599074471] (9,-1; 9,-1), time: 30.0417s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4128s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.5477430942144969,0.24349499084635112] (9,-1; 9,-1), time: 30.5879s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5470s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-0.4771540534626026,0.4181776680906407] (9,-1; 9,-1), time: 30.0211s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[1e-05,1.0811990595105894] (15,-1; 9,-1), time: 15.3299s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[1e-05,0.9162069788697639] (15,-1; 9,-1), time: 17.3946s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8465376215544567] (15,-1; 9,-1), time: 16.0531s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-0.06816845472568424,0.7138781290059911] (9,-1; 9,-1), time: 30.2647s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_134, [-inf,inf]=>[1e-05,0.8900149701322927] (15,-1; 9,-1), time: 15.9475s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.7200197688630534] (15,-1; 9,-1), time: 15.3582s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.32442295596479936,0.5153512522075452] (9,-1; 9,-1), time: 30.4614s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.6591157311449161,0.23817711623020638] (9,-1; 9,-1), time: 30.0219s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.11870155223328725,0.710868540594304] (9,-1; 9,-1), time: 30.0326s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.6520676315505531,0.27146845805129505] (9,-1; 9,-1), time: 30.4276s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_140, [-inf,inf]=>[-0.8576678386773456,0.08074433499054966] (9,-1; 9,-1), time: 30.9807s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-0.11675382650720946,0.9289756335155797] (9,-1; 9,-1), time: 30.4014s, #vars: 1627, #constrs: 963, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(166, 1), (86, -1), (107, -1), (101, 1), (134, -1), (83, 1), (182, -1), (125, -1), (13, -1), (127, -1), (147, -1), (49, -1), (109, 1), (79, -1), (103, -1), (186, -1), (192, -1), (156, -1), (89, -1), (146, 1), (81, -1), (145, -1), (190, -1), (188, 1), (138, 1), (4, -1), (128, 1)]
best_l after optimization: -56.77808380126953 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 6.095318078994751
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.88704586, -8.60269547, -6.20999718, -6.80165100, -4.35184860,
         -5.73463678, -8.62711906, -6.60946369, -5.95362473]], device='cuda:0') None
MIP improved 135 nodes out of 135 unstable nodes, lb improved 39.136863708496094, ub improved 56.79904556274414, time 142.5925
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_45', 'lay8_0', 'lay8_65', 'lay8_85', 'lay8_98', 'lay8_130', 'lay8_183', 'lay8_180', 'lay8_49', 'lay8_119', 'lay8_86', 'lay8_175', 'lay8_112', 'lay8_128', 'lay8_188', 'lay8_16', 'lay8_185', 'lay8_167', 'lay8_156', 'lay8_184', 'lay8_187', 'lay8_140', 'lay8_57', 'lay8_7', 'lay8_127', 'lay8_174', 'lay8_55', 'lay8_181', 'lay8_83', 'lay8_158', 'lay8_19', 'lay8_159', 'lay8_171', 'lay8_97', 'lay8_58', 'lay8_77', 'lay8_43', 'lay8_24', 'lay8_20', 'lay8_62', 'lay8_149', 'lay8_195', 'lay8_133', 'lay8_22', 'lay8_59', 'lay8_48', 'lay8_121', 'lay8_92', 'lay8_178', 'lay8_25', 'lay8_73', 'lay8_111', 'lay8_104', 'lay8_179', 'lay8_69', 'lay8_27', 'lay8_196', 'lay8_165', 'lay8_144', 'lay8_94', 'lay8_146', 'lay8_8', 'lay8_54', 'lay8_154', 'lay8_84', 'lay8_33', 'lay8_37', 'lay8_56', 'lay8_150', 'lay8_145', 'lay8_17', 'lay8_23', 'lay8_36', 'lay8_78', 'lay8_60', 'lay8_101', 'lay8_6', 'lay8_134', 'lay8_90', 'lay8_157', 'lay8_1', 'lay8_147', 'lay8_67', 'lay8_88', 'lay8_26', 'lay8_192', 'lay8_162', 'lay8_42', 'lay8_61', 'lay8_31', 'lay8_155', 'lay8_63', 'lay8_129', 'lay8_115', 'lay8_81', 'lay8_70', 'lay8_64', 'lay8_74', 'lay8_169', 'lay8_172', 'lay8_95', 'lay8_47', 'lay8_39', 'lay8_138', 'lay8_139', 'lay8_82', 'lay8_2', 'lay8_118', 'lay8_160', 'lay8_199', 'lay8_173', 'lay8_89', 'lay8_21', 'lay8_194', 'lay8_186', 'lay8_35', 'lay8_163', 'lay8_72', 'lay8_52', 'lay8_120', 'lay8_117', 'lay8_110', 'lay8_107', 'lay8_53', 'lay8_13', 'lay8_143', 'lay8_109', 'lay8_168', 'lay8_11', 'lay8_161', 'lay8_75', 'lay8_93', 'lay8_68', 'lay8_80', 'lay8_113', 'lay8_151', 'lay8_9', 'lay8_152', 'lay8_38', 'lay8_50', 'lay8_190', 'lay8_15', 'lay8_148', 'lay8_79', 'lay8_137', 'lay8_182', 'lay8_100', 'lay8_142', 'lay8_132', 'lay8_96', 'lay8_76', 'lay8_108', 'lay8_164', 'lay8_176', 'lay8_177', 'lay8_5', 'lay8_126', 'lay8_123', 'lay8_153', 'lay8_189', 'lay8_105', 'lay8_198', 'lay8_191', 'lay8_4', 'lay8_18', 'lay8_41', 'lay8_91', 'lay8_12', 'lay8_87', 'lay8_166', 'lay8_3', 'lay8_46', 'lay8_66', 'lay8_122', 'lay8_102', 'lay8_125', 'lay8_114', 'lay8_44', 'lay8_170', 'lay8_34', 'lay8_14', 'lay8_32', 'lay8_51', 'lay8_193', 'lay8_103', 'lay8_99', 'lay8_71', 'lay8_28', 'lay8_116', 'lay8_141', 'lay8_30', 'lay8_40', 'lay8_124', 'lay8_197', 'lay8_106', 'lay8_136', 'lay8_10', 'lay8_29', 'lay8_131', 'lay8_135'] filter: 1.0
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4772s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4834s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4830s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5271s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6084s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6161s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6522s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6489s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7102s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5007s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5173s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5777s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5851s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5306s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6379s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5177s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0992s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4579s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0689s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2275s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.3333s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.4886s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6001s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4775s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4500s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4482s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4587s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.013093916499619] (15,-1; 9,-1), time: 26.7600s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[-0.9369033980516215,0.2378448493509287] (9,-1; 9,-1), time: 30.0189s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-0.7922752914059862,0.2676289801085999] (9,-1; 9,-1), time: 30.0209s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-0.7742238997080658,0.20325047073033603] (9,-1; 9,-1), time: 30.0170s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-1.0362601300553478,0.11495513447320733] (9,-1; 9,-1), time: 30.0207s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-0.7771178234563327,0.3901640787630815] (9,-1; 9,-1), time: 30.0220s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1275s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[-0.8293877563662461,0.08875146410432416] (9,-1; 9,-1), time: 30.0281s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4753s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-0.810159606248909,0.24282831021466028] (9,-1; 9,-1), time: 30.0207s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.733041061349746,0.25723994654963694] (9,-1; 9,-1), time: 30.0151s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4755s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-0.6217376229497362,0.71236045048893] (9,-1; 9,-1), time: 30.0195s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4873s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4256s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4153s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4946s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5531s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-1.3166031430132004,0.09239936568096083] (9,-1; 9,-1), time: 30.0143s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5069s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[-0.3613160451948314,0.909887977789853] (9,-1; 9,-1), time: 30.0153s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5091s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4774s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-0.6930795952528803,0.22066361716005006] (9,-1; 9,-1), time: 30.0185s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4393s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[-0.22229761753658867,0.7769639277959907] (9,-1; 9,-1), time: 30.0162s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4595s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-0.5267554376531093,0.25319734716677106] (9,-1; 9,-1), time: 30.0159s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.9726s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.9482s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[1e-05,1.3195288887984176] (15,-1; 9,-1), time: 15.4891s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[1e-05,1.435406359075852] (15,-1; 9,-1), time: 15.4795s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-0.6960327462024827,0.5004726873080254] (9,-1; 9,-1), time: 30.0139s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5284s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.022403958719137] (15,-1; 9,-1), time: 15.4610s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5205s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4936s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-0.3914846729856924,0.6865434564488341] (9,-1; 9,-1), time: 30.0123s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-0.7786634987908087,0.07846456744827644] (9,-1; 9,-1), time: 30.0140s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.7525721247340323,0.11554767695846038] (9,-1; 9,-1), time: 30.0195s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-0.7223049955737368,0.4704645507101545] (9,-1; 9,-1), time: 30.0328s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.5319197090721026,0.4345538220870049] (9,-1; 9,-1), time: 30.0139s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.2636586788348842,1.2183196196487747] (9,-1; 9,-1), time: 30.0229s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4992s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5315s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.5458377211879575,0.5652969110582869] (9,-1; 9,-1), time: 30.0137s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4949s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-0.19217516622140318,1.068142389738831] (9,-1; 9,-1), time: 30.0212s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.30482533288206776,0.922354313241015] (9,-1; 9,-1), time: 30.0198s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-0.8212870749003053,0.03702478855750629] (9,-1; 9,-1), time: 30.0211s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-0.47027763578496085,0.467430915607854] (9,-1; 9,-1), time: 30.0219s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7562s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.48023812740872807,0.3815091255977397] (9,-1; 9,-1), time: 30.0205s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.2121s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.5974295017995946,0.2098362057176465] (9,-1; 9,-1), time: 30.0146s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.8346441647598757,0.07933879340889699] (9,-1; 9,-1), time: 30.0236s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[1e-05,1.2315954716377215] (15,-1; 9,-1), time: 17.8303s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-0.6574012948311158,0.3276272938909676] (9,-1; 9,-1), time: 30.0149s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5134s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5416s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5395s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4570s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5673s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[-0.895179237948427,0.21427495581786438] (9,-1; 9,-1), time: 30.0452s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.1274s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.8119065501571091,0.27360258495648015] (9,-1; 9,-1), time: 30.0130s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-0.8255287554649461,0.15417026668207076] (9,-1; 9,-1), time: 30.0213s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-0.005489537888344458,1.0486154631183726] (9,-1; 9,-1), time: 30.0175s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6300227503919271,0.2955527007725895] (9,-1; 9,-1), time: 30.0127s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[-0.29639257693464366,0.9119756617725077] (9,-1; 9,-1), time: 30.0191s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-0.9699803145670277,0.21585037120333442] (9,-1; 9,-1), time: 30.0113s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4338s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,1.2151478047839044] (15,-1; 9,-1), time: 15.4666s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[-0.2059300956374747,0.7708350903735193] (9,-1; 9,-1), time: 30.0133s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-0.6734658481801055,0.41909469335081917] (9,-1; 9,-1), time: 30.0242s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4316s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[-0.368005533211116,0.525911488101129] (9,-1; 9,-1), time: 30.0142s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4166s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4358s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-0.7222831662948844,0.26564515105185504] (9,-1; 9,-1), time: 30.0143s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4729s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.6638373467091263,0.2009552252931982] (9,-1; 9,-1), time: 30.0176s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-0.9060445353162503,0.10454263753617657] (9,-1; 9,-1), time: 30.0171s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.5366968811353968,0.5076412180144493] (9,-1; 9,-1), time: 30.0136s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.3099232297919682,0.4451695861447274] (9,-1; 9,-1), time: 30.0193s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.4325449559796388,0.47066175546265726] (9,-1; 9,-1), time: 30.0111s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4562s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_160, [-inf,inf]=>[-0.3111376572994304,0.6144083190826669] (9,-1; 9,-1), time: 30.0131s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.15666039459159573,0.6634247578905004] (9,-1; 9,-1), time: 30.0244s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.7226989953015567,0.3489507202193867] (9,-1; 9,-1), time: 30.0128s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.8639257167494283,0.06944716566739909] (9,-1; 9,-1), time: 30.0192s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-0.7354708962581844,0.30846778807510544] (9,-1; 9,-1), time: 30.0157s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5312s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5504s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4656s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_186, [-inf,inf]=>[-0.48930622134736296,0.24067596755676793] (9,-1; 9,-1), time: 30.0121s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4427s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-0.0395190204290136,1.0024360306078228] (9,-1; 9,-1), time: 30.0134s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[-0.34006198977927643,0.48122875958667155] (9,-1; 9,-1), time: 30.0120s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3513s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[-0.3108267926038979,0.6540313788532485] (9,-1; 9,-1), time: 30.0165s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-0.16749952125597387,0.8605307337720397] (9,-1; 9,-1), time: 30.0148s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4607s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4416s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4348s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5150s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4387s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6846s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.006823937322816139,1.0090227744882205] (9,-1; 9,-1), time: 30.0147s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5012s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,2.318572157590929] (15,-1; 9,-1), time: 15.4743s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-0.3955094431827429,0.6018629114309461] (9,-1; 9,-1), time: 30.0191s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[1e-05,1.3505657327763565] (15,-1; 9,-1), time: 15.4854s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.0782413895456178] (15,-1; 9,-1), time: 18.6240s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5108s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4754s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[1e-05,1.516348593637588] (15,-1; 9,-1), time: 15.5553s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4567s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[1e-05,1.5163708877482307] (15,-1; 9,-1), time: 15.4454s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4427s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5099s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[1e-05,1.3923428771152648] (15,-1; 9,-1), time: 15.5329s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[1e-05,1.0253972321168796] (15,-1; 9,-1), time: 15.5490s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-0.7749251514175556,0.23104341050541224] (9,-1; 9,-1), time: 30.0174s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1285s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.8879s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_176, [-inf,inf]=>[1e-05,2.7087697222212275] (15,-1; 9,-1), time: 15.4876s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.7805796922239616,0.20245830856668634] (9,-1; 9,-1), time: 30.0124s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-0.12951533751898225,1.1587074135149062] (9,-1; 9,-1), time: 30.0140s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.593606752903401,0.23803046860464672] (9,-1; 9,-1), time: 30.0178s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5621s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4888s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5682s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5767s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[1e-05,2.0165605422444215] (15,-1; 9,-1), time: 15.5719s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[1e-05,1.0612402952450082] (15,-1; 9,-1), time: 15.4975s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[-0.08819340852268132,0.8560951493772178] (9,-1; 9,-1), time: 30.0444s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.09065828164073204,0.8351390938058262] (9,-1; 9,-1), time: 30.0122s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2675s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-0.6187590496649628,0.551334481880169] (9,-1; 9,-1), time: 30.0138s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5065s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,1.0105034466684166] (15,-1; 9,-1), time: 18.2958s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-0.4990603515621944,0.2968332006971641] (9,-1; 9,-1), time: 30.0224s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9250s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4700s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[-0.6215239630568434,0.3358755081564515] (9,-1; 9,-1), time: 30.0186s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.80029181861085,0.0231707956482076] (9,-1; 9,-1), time: 30.0098s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4420s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_114, [-inf,inf]=>[1e-05,2.5568523652208284] (15,-1; 9,-1), time: 15.5481s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4598s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[1e-05,2.692935756650886] (15,-1; 9,-1), time: 15.5350s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4603s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,2.8215228048251513] (15,-1; 9,-1), time: 15.4304s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-0.4436400658670527,0.6324086968506059] (9,-1; 9,-1), time: 30.0171s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,2.9175293517254923] (15,-1; 9,-1), time: 15.5057s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-0.7965815094075585,0.20036104353730536] (9,-1; 9,-1), time: 30.0193s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[1e-05,1.8694259842940848] (15,-1; 9,-1), time: 15.4267s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,1.6682949685386037] (15,-1; 9,-1), time: 15.4773s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.5042674715761941,0.4325509753390862] (9,-1; 9,-1), time: 30.0138s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.5985934041867511,0.5051407555488981] (9,-1; 9,-1), time: 30.0144s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-0.2609298023355042,0.9709737746918973] (9,-1; 9,-1), time: 30.0126s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[1e-05,0.9280586152242738] (15,-1; 9,-1), time: 16.5470s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.10311617345263697,0.6741655142677635] (9,-1; 9,-1), time: 30.0128s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.9705039285251982,0.1214024829845347] (9,-1; 9,-1), time: 30.0158s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-0.29989198604636463,0.4323843718290918] (9,-1; 9,-1), time: 30.0130s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[1e-05,1.72369748135703] (15,-1; 9,-1), time: 15.4188s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[1e-05,1.5211541584628099] (15,-1; 9,-1), time: 15.4915s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-0.3661771517323264,0.6709500870173354] (9,-1; 9,-1), time: 30.0130s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_124, [-inf,inf]=>[-0.09155492784596839,1.0635173374055422] (9,-1; 9,-1), time: 30.0220s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.8243441067804397,0.25325264509483814] (9,-1; 9,-1), time: 30.0164s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_136, [-inf,inf]=>[-0.4397596202440769,0.5509909894723681] (9,-1; 9,-1), time: 30.0232s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-0.06849092285436059,0.7732833913369088] (9,-1; 9,-1), time: 30.0171s, #vars: 1927, #constrs: 1313, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.3347548476295592,0.5975213595716619] (9,-1; 9,-1), time: 30.0152s, #vars: 1927, #constrs: 1313, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(139, -1), (93, -1), (170, -1), (152, -1), (191, -1), (168, -1), (67, -1), (33, -1), (123, -1), (32, -1), (195, -1), (133, -1), (18, -1), (106, -1), (159, -1), (110, -1), (107, -1), (26, -1), (122, -1), (141, -1), (112, -1), (70, 1), (69, -1), (101, -1), (183, -1), (175, 1), (196, -1), (113, -1), (162, -1), (197, -1), (7, -1), (108, -1), (117, -1), (98, -1), (21, -1), (2, -1), (166, -1), (80, -1), (64, -1), (103, -1), (124, 1), (86, -1), (37, -1), (92, -1), (173, -1), (53, -1), (189, -1), (99, -1), (105, -1), (55, 1), (59, 1), (193, 1), (75, -1), (171, 1), (96, 1), (129, -1), (91, 1), (194, -1), (180, -1), (178, -1), (65, 1), (6, -1), (76, 1), (16, -1), (111, 1), (43, -1), (146, 1), (120, -1), (78, 1), (121, 1), (36, 1), (187, -1), (135, 1), (68, -1), (51, -1), (35, 1), (27, -1), (176, 1), (8, -1), (172, -1), (58, 1), (134, 1), (157, -1), (144, 1), (46, -1)]
best_l after optimization: 3.4628500938415527 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 5.553879022598267
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.01671410, -1.73862934,  0.08620834,  0.03020048,  2.45093918,
          0.14053726, -1.80449629,  0.70630836,  1.57506800]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 144.43580627441406, ub improved 225.90371704101562, time 202.4457
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_135', 'lay10_11', 'lay10_154', 'lay10_137', 'lay10_164', 'lay10_90', 'lay10_189', 'lay10_57', 'lay10_157', 'lay10_33', 'lay10_82', 'lay10_198', 'lay10_49', 'lay10_138', 'lay10_146', 'lay10_151', 'lay10_25', 'lay10_192', 'lay10_91', 'lay10_143', 'lay10_186', 'lay10_18', 'lay10_141', 'lay10_31', 'lay10_14', 'lay10_51', 'lay10_199', 'lay10_62', 'lay10_24', 'lay10_167', 'lay10_195', 'lay10_153', 'lay10_73', 'lay10_114', 'lay10_19', 'lay10_180', 'lay10_94', 'lay10_70', 'lay10_109', 'lay10_29', 'lay10_179', 'lay10_37', 'lay10_140', 'lay10_87', 'lay10_30', 'lay10_7', 'lay10_80', 'lay10_42', 'lay10_185', 'lay10_188', 'lay10_81', 'lay10_78', 'lay10_161', 'lay10_163', 'lay10_17', 'lay10_93', 'lay10_43', 'lay10_172', 'lay10_107', 'lay10_47', 'lay10_131', 'lay10_184', 'lay10_130', 'lay10_194', 'lay10_142', 'lay10_175', 'lay10_124', 'lay10_168', 'lay10_191', 'lay10_4', 'lay10_144', 'lay10_52', 'lay10_152', 'lay10_99', 'lay10_86', 'lay10_20', 'lay10_39', 'lay10_26', 'lay10_98', 'lay10_58', 'lay10_35', 'lay10_41', 'lay10_16', 'lay10_55', 'lay10_139', 'lay10_6', 'lay10_149', 'lay10_110', 'lay10_118', 'lay10_115', 'lay10_67', 'lay10_126', 'lay10_0', 'lay10_54', 'lay10_156', 'lay10_116', 'lay10_8', 'lay10_197', 'lay10_72', 'lay10_64', 'lay10_9', 'lay10_165', 'lay10_187', 'lay10_13', 'lay10_166', 'lay10_104', 'lay10_61', 'lay10_120', 'lay10_125', 'lay10_10', 'lay10_176', 'lay10_50', 'lay10_69', 'lay10_48', 'lay10_174', 'lay10_133', 'lay10_36', 'lay10_65', 'lay10_12', 'lay10_46', 'lay10_150', 'lay10_129', 'lay10_1', 'lay10_127', 'lay10_3', 'lay10_162', 'lay10_177', 'lay10_53', 'lay10_159', 'lay10_27', 'lay10_71', 'lay10_97', 'lay10_190', 'lay10_196', 'lay10_134', 'lay10_158', 'lay10_2', 'lay10_23', 'lay10_160', 'lay10_169', 'lay10_40', 'lay10_117', 'lay10_155', 'lay10_108', 'lay10_173', 'lay10_45', 'lay10_105', 'lay10_79', 'lay10_183', 'lay10_32', 'lay10_102', 'lay10_60', 'lay10_34', 'lay10_136', 'lay10_103', 'lay10_128', 'lay10_74', 'lay10_83', 'lay10_59', 'lay10_44', 'lay10_181', 'lay10_148', 'lay10_66', 'lay10_96', 'lay10_76', 'lay10_123', 'lay10_22', 'lay10_121', 'lay10_84', 'lay10_145', 'lay10_88', 'lay10_92', 'lay10_85', 'lay10_28', 'lay10_95', 'lay10_119', 'lay10_56', 'lay10_68', 'lay10_101', 'lay10_89', 'lay10_170', 'lay10_38', 'lay10_193', 'lay10_132', 'lay10_182', 'lay10_106', 'lay10_5', 'lay10_75', 'lay10_15', 'lay10_113', 'lay10_100', 'lay10_147', 'lay10_111', 'lay10_171', 'lay10_77', 'lay10_63', 'lay10_178', 'lay10_122', 'lay10_112', 'lay10_21'] filter: 1.0
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8636s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8881s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9025s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9289s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9551s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8261s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7503s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.8263s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-1.797098404076911,0.07020975966850891] (9,-1; 9,-1), time: 30.0180s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-1.6637266349248385,0.19994155016609214] (9,-1; 9,-1), time: 30.0360s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-1.4215840153289188,0.18923793507885828] (9,-1; 9,-1), time: 30.0225s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-1.7073593685130464,0.07225343110696204] (9,-1; 9,-1), time: 30.0382s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-1.4945285736123444,0.16929929263550697] (9,-1; 9,-1), time: 30.0529s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-1.1572366589881684,0.5018765979469242] (9,-1; 9,-1), time: 30.0750s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-1.7842700320832177,0.2582960858116745] (9,-1; 9,-1), time: 30.0901s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-0.7750593068633014,1.4149801050101758] (9,-1; 9,-1), time: 30.1658s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.8424994098333178,1.1390161194697228] (9,-1; 9,-1), time: 30.2373s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8655s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-0.8519487206887005,0.6289059682602759] (9,-1; 9,-1), time: 30.0416s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-1.0303512266763282,0.6078550241340854] (9,-1; 9,-1), time: 30.0730s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.5085584473923093,1.501908004996833] (9,-1; 9,-1), time: 30.0176s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8387s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-1.293802630922387,0.3721694231512632] (9,-1; 9,-1), time: 30.1900s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.8824049148082502,0.7380156514502464] (9,-1; 9,-1), time: 30.0713s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7265s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9379s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7371s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7733s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8501s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-1.6351877027336958,0.16239934231471662] (9,-1; 9,-1), time: 30.0334s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5548s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1810s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8475s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7231s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9490s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.8209453840560019,0.7173580355238637] (9,-1; 9,-1), time: 30.0212s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-1.2852280611044211,0.42545563661200714] (9,-1; 9,-1), time: 30.0551s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-1.4859833222957826,0.11236969683647124] (9,-1; 9,-1), time: 30.0505s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-1.142646557316168,0.44269672673271065] (9,-1; 9,-1), time: 30.1033s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-1.041728013933969,0.5065663119881579] (9,-1; 9,-1), time: 30.0881s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.8653595327122829,0.8627007819483501] (9,-1; 9,-1), time: 30.0624s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-0.6685788128118993,0.9360160819074516] (9,-1; 9,-1), time: 30.0530s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[1e-05,1.85554748666969] (15,-1; 9,-1), time: 15.8987s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7991s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7939s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8446s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-0.0052232630135627305,1.8850934030856625] (9,-1; 9,-1), time: 30.0120s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-1.482221878874399,0.14479761914016054] (9,-1; 9,-1), time: 30.1461s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-1.278489363611789,0.1854760564512091] (9,-1; 9,-1), time: 30.1587s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7254s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8185s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7578s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4735s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-0.16449838189683144,1.328318429863869] (9,-1; 9,-1), time: 30.1196s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-1.3515801660888402,0.3543945956461866] (9,-1; 9,-1), time: 30.0632s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-1.3393508586133671,0.3385955427054428] (9,-1; 9,-1), time: 30.0996s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-1.393209487065311,0.38749366771199345] (9,-1; 9,-1), time: 30.0901s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-1.5645592928228345,0.22287029280405343] (9,-1; 9,-1), time: 30.0534s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8011s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8048s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-1.1756699808441997,0.37088924810185636] (9,-1; 9,-1), time: 30.0423s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[1e-05,1.8355974333925353] (15,-1; 9,-1), time: 17.4617s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-1.171768121853932,0.7191669057864454] (9,-1; 9,-1), time: 30.0119s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-1.4761797813144377,0.13448378804277364] (9,-1; 9,-1), time: 30.1080s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-1.2318711288008837,0.23349792524423743] (9,-1; 9,-1), time: 30.0141s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7543s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-0.6184789328578741,0.5778922432104652] (9,-1; 9,-1), time: 30.0121s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-1.800621397874619,0.017808607542753735] (9,-1; 9,-1), time: 30.0637s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7798s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-1.3330885380493902,0.269746624725768] (9,-1; 9,-1), time: 30.0367s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.7932320782294212,0.6318026144408505] (9,-1; 9,-1), time: 30.1043s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7421s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8150s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.9198798098380931,0.6089582522465736] (9,-1; 9,-1), time: 30.1924s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6894s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-1.1475423103354434,0.39807710629606485] (9,-1; 9,-1), time: 30.0482s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7792s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-0.39972490067480415,1.2161779247388789] (9,-1; 9,-1), time: 30.0451s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-1.2645948077249773,0.28058010432796715] (9,-1; 9,-1), time: 30.0227s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7890s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7474s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-1.3905140936885523,0.13087268567106045] (9,-1; 9,-1), time: 30.0255s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-0.8210344702495732,0.7175555606896078] (9,-1; 9,-1), time: 30.1051s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-0.08326192529991427,1.4631842347642279] (9,-1; 9,-1), time: 30.1420s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8001s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8206s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-1.1152428858824983,0.3345758391586281] (9,-1; 9,-1), time: 30.0510s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8258s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.0452s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8009s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[1e-05,2.847797370934896] (15,-1; 9,-1), time: 15.8147s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-0.6212977310071055,1.0566527971746251] (9,-1; 9,-1), time: 30.0428s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[1e-05,2.0724413524226497] (15,-1; 9,-1), time: 17.5829s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8797s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-1.3658155364401294,0.43178646424109796] (9,-1; 9,-1), time: 30.0538s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-1.3282332635343654,0.31162166691397386] (9,-1; 9,-1), time: 30.1335s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.9281261658342792,0.34253352779994173] (9,-1; 9,-1), time: 30.0393s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-0.4108599284328469,1.1179566982801248] (9,-1; 9,-1), time: 30.1073s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-1.2134820667206292,0.2709766847525528] (9,-1; 9,-1), time: 30.0344s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8955s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-1.0782785967569941,0.4128288247073995] (9,-1; 9,-1), time: 30.0559s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-1.4435987631172633,0.15044117966710074] (9,-1; 9,-1), time: 30.0418s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-1.3248139110464234,0.26650728339982843] (9,-1; 9,-1), time: 30.3135s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.7047610623286554,1.2522037068081295] (9,-1; 9,-1), time: 30.0153s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-0.8966055285581049,0.5663354258769009] (9,-1; 9,-1), time: 30.0282s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7779s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-1.0420741030903669,0.47141173048575524] (9,-1; 9,-1), time: 30.2265s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8473s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-1.3052637146891495,0.10350545974946028] (9,-1; 9,-1), time: 30.1670s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-0.896465838350823,0.3709633118577932] (9,-1; 9,-1), time: 30.0134s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8466s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7856s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.3855952103723985] (15,-1; 9,-1), time: 15.7573s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-1.3134527177064343,0.023367553020064092] (9,-1; 9,-1), time: 30.0449s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.760570025897518,0.9361049062142044] (9,-1; 9,-1), time: 30.0541s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-1.2556239728806624,0.3920513886588531] (9,-1; 9,-1), time: 30.0691s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-0.6272770367525661,1.0884894391282054] (9,-1; 9,-1), time: 30.0557s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[1e-05,4.276842127451674] (15,-1; 9,-1), time: 15.8634s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[-1.8144541730714798,0.06381985490184079] (9,-1; 9,-1), time: 30.0967s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-0.9104094317844499,0.6519749923986984] (9,-1; 9,-1), time: 30.0482s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-0.9345044147557069,0.8604098499340905] (9,-1; 9,-1), time: 30.0528s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7752s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-1.6397315714011278,0.3016530718784196] (9,-1; 9,-1), time: 30.0120s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-0.014699818011973342,1.6959044454186645] (9,-1; 9,-1), time: 30.1539s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.7405148730992159,0.728560848383936] (9,-1; 9,-1), time: 30.1019s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-1.029259563486844,0.5872340754497567] (9,-1; 9,-1), time: 30.0529s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[-1.314107632131429,0.10946379358673053] (9,-1; 9,-1), time: 30.0210s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9225s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[-1.0312645098233244,0.3163684023569341] (9,-1; 9,-1), time: 30.0195s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-1.4842407297717746,0.10929956221923035] (9,-1; 9,-1), time: 30.0790s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7967s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7911s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-0.36596965809980375,1.6158663982573591] (9,-1; 9,-1), time: 30.0235s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[1e-05,2.0024437680231326] (15,-1; 9,-1), time: 15.7311s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7613s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-1.2513992989693397,0.23858198315398219] (9,-1; 9,-1), time: 30.0972s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.292834999388643,1.4792036247669442] (9,-1; 9,-1), time: 30.1060s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-1.4437322710078822,0.4227379213402479] (9,-1; 9,-1), time: 30.1659s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8904s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8294s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8128s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7224s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-0.17742164658675785,1.7714637592934723] (9,-1; 9,-1), time: 30.0596s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-1.5676782663175262,0.05975121449670591] (9,-1; 9,-1), time: 30.0478s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-0.3181031024236731,0.9683103803222238] (9,-1; 9,-1), time: 30.0991s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-1.1168802924959653,0.6408120897374913] (9,-1; 9,-1), time: 30.0194s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-1.0001055600774487,0.3106275191628618] (9,-1; 9,-1), time: 30.0192s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-1.1962440282844535,0.46679032581879437] (9,-1; 9,-1), time: 30.1216s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8767s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-0.8045584795220014,0.6265924980731855] (9,-1; 9,-1), time: 30.0951s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8008s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-0.8604462683669074,1.0672528509422128] (9,-1; 9,-1), time: 30.0540s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-1.2352644301060023,0.2563592550386618] (9,-1; 9,-1), time: 30.0768s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-1.645232145137594,0.3587811658425583] (9,-1; 9,-1), time: 30.1340s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[1e-05,2.0827657375683803] (15,-1; 9,-1), time: 15.8187s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-1.5916936787569966,0.07815186043973749] (9,-1; 9,-1), time: 30.1443s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9044s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-1.3734824831342443,0.07444391516081811] (9,-1; 9,-1), time: 30.0232s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,2.5679051999919] (15,-1; 9,-1), time: 15.8198s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[1e-05,2.082902574356348] (15,-1; 9,-1), time: 17.5178s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,2.1905145719324057] (15,-1; 9,-1), time: 15.8381s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8438s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[1e-05,3.248797014855834] (15,-1; 9,-1), time: 15.8631s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[-0.30322506349585454,1.5587775514739095] (9,-1; 9,-1), time: 30.1158s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.2253570430948512,1.4362804233952569] (9,-1; 9,-1), time: 30.0420s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-1.203886452840916,0.22768582442530674] (9,-1; 9,-1), time: 30.1016s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-1.1016339276902005,0.44254998083277447] (9,-1; 9,-1), time: 30.0839s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-1.6864578588472132,0.1391776405895525] (9,-1; 9,-1), time: 30.1454s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[1e-05,2.6971887955964773] (15,-1; 9,-1), time: 15.8322s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[-0.3986146105227638,0.9639624338434227] (9,-1; 9,-1), time: 30.0290s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-1.3863891272520878,0.062406328159792586] (9,-1; 9,-1), time: 30.0517s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[1e-05,3.988085712438356] (15,-1; 9,-1), time: 15.7448s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-0.4256764912643831,1.0427813182261507] (9,-1; 9,-1), time: 30.1234s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[1e-05,3.2109705787293783] (15,-1; 9,-1), time: 15.7654s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-1.38350787304951,0.3144045309591315] (9,-1; 9,-1), time: 30.0146s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7944s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7864s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8035s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8503s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6718s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-1.221780897267933,0.31902177606055687] (9,-1; 9,-1), time: 30.1176s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7100s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4094s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.12235200916394247,1.4103165919148173] (9,-1; 9,-1), time: 30.0619s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[1e-05,1.6460834465753647] (15,-1; 9,-1), time: 27.1984s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-1.4647964048741886,0.049871516395605484] (9,-1; 9,-1), time: 30.0486s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.19826593704008] (15,-1; 9,-1), time: 15.7946s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-0.7079747506849183,0.5138000044129808] (9,-1; 9,-1), time: 30.0839s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.13820282907449138,2.1169836958468364] (9,-1; 9,-1), time: 30.0236s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-1.0131928150964116,0.3007357088814386] (9,-1; 9,-1), time: 30.0613s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[1e-05,1.6424232793651437] (15,-1; 9,-1), time: 21.5904s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[-0.747767783348166,0.8086133233129222] (9,-1; 9,-1), time: 30.1783s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-1.0419893922280155,0.38971399951991875] (9,-1; 9,-1), time: 30.1215s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-0.7652964723808816,0.580075872154654] (9,-1; 9,-1), time: 30.0579s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-0.7837612922822985,0.8919173232857944] (9,-1; 9,-1), time: 30.0666s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-0.8459576192742635,1.0625714244170719] (9,-1; 9,-1), time: 30.0176s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-1.0678373989264218,0.3751422342355627] (9,-1; 9,-1), time: 30.0482s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[-0.9457331470444652,0.4571898449534761] (9,-1; 9,-1), time: 30.0425s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-1.0601694641890123,0.35922891812491975] (9,-1; 9,-1), time: 30.0316s, #vars: 2291, #constrs: 1759, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-1.0471829787166802,0.3043487421410993] (9,-1; 9,-1), time: 30.0679s, #vars: 2291, #constrs: 1759, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(45, -1), (0, -1), (65, -1), (85, -1), (98, -1), (130, -1), (49, -1), (119, -1), (175, -1), (128, -1), (16, -1), (185, -1), (156, -1), (140, -1), (57, -1), (7, -1), (127, -1), (174, -1), (181, 1), (83, -1), (158, -1), (171, -1), (58, -1), (24, -1), (20, -1), (62, -1), (149, -1), (195, -1), (22, -1), (178, -1), (111, -1), (104, -1), (179, -1), (69, 1), (27, -1), (196, -1), (165, -1), (94, -1), (146, 1), (8, -1), (54, -1), (154, -1), (84, -1), (37, -1), (56, -1), (36, 1), (101, -1), (134, -1), (90, -1), (67, -1), (192, -1), (61, -1), (31, -1), (129, 1), (81, -1), (74, 1), (169, -1), (95, -1), (47, -1), (39, -1), (138, -1), (139, -1), (194, -1), (72, -1), (52, -1), (120, -1), (107, -1), (109, 1), (168, 1), (11, -1), (161, 1), (93, -1), (68, -1), (113, -1), (151, 1), (152, -1), (38, -1), (50, 1), (148, -1), (79, -1), (137, -1), (182, -1), (100, 1), (142, -1), (132, -1), (96, 1), (108, -1), (176, 1), (126, -1), (123, -1), (153, -1), (189, 1), (105, 1), (198, -1), (191, -1), (4, 1), (18, -1), (41, -1), (3, -1), (46, -1), (66, -1), (102, -1), (125, -1), (114, 1), (34, 1), (32, 1), (51, -1), (193, 1), (103, -1), (99, 1), (71, -1), (28, 1), (116, -1), (30, 1), (40, -1), (197, -1), (131, 1), (135, 1)]
best_l after optimization: 19.074779510498047 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 6.83202600479126
alpha-CROWN with intermediate bounds by MIP: tensor([[ 3.72012949,  0.15374041,  1.66365933,  1.78983688,  4.10275841,
          1.77326488, -0.02135181,  2.51946902,  3.37327385]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 748.2128295898438, ub improved 895.4368286132812, time 249.2489
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=10, bias=True) 5 12 torch.Size([9, 1])
MIP finished with 634.1677124500275s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.86803436279297 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.03435826301574707
alpha-CROWN with intermediate bounds improved by MIP: tensor([[4.01617813, 0.59992242, 2.08101964, 2.22600627, 4.47457600, 2.17695665,
         0.44602585, 3.02730155, 3.82004809]], device='cuda:0') None
refined global lb: tensor([[4.01617813],
        [0.59992242],
        [2.08101964],
        [2.22600627],
        [4.47457600],
        [2.17695665],
        [0.44602585],
        [3.02730155],
        [3.82004809]], device='cuda:0') min: tensor(0.44602585, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 643.5344 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time (total 1): 643.5279484943187, max time: 643.5343837738037
safe-incomplete-refine (total 1): [0]
