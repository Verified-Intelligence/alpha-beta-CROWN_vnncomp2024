Experiments at Wed Apr 13 15:10:41 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0150]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_200]_start=5_end=6_iter=20_b=1024_int-beta=False_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  1  correct label  1 logits tensor([-3.7237,  9.5496,  0.7830, -0.5446, -3.1168, -1.8814, -1.2705,  2.5039,
         1.7631, -0.6686], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-3.7237,  9.5496,  0.7830, -0.5446, -3.1168, -1.8814, -1.2705,  2.5039,
          1.7631, -0.6686]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-24.4561, -31.2558, -29.3468, -30.5181, -25.8484, -26.6702, -31.8144,
         -27.6519, -31.3703]], device='cuda:0') None
best_l after optimization: 198.2193603515625 with beta sum per layer: []
optimal alpha/beta time: 7.498675346374512
initial alpha-CROWN bounds: tensor([[-17.2581, -24.4990, -22.6204, -21.4993, -19.9881, -20.7076, -24.7264,
         -22.5143, -24.4061]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 1, Tested against: ['all'] ######
pgd prediction: tensor([-3.4267,  7.8106,  1.2743, -0.3240, -2.5276, -1.8348, -1.2097,  2.9689,
         1.1753, -0.4356], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([11.2373,     inf,  6.5363,  8.1346, 10.3382,  9.6454,  9.0203,  4.8417,
         6.6353,  8.2462], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 713.7441123962403]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_43', 'lay4_142', 'lay4_5', 'lay4_58', 'lay4_153', 'lay4_179', 'lay4_77', 'lay4_103', 'lay4_163', 'lay4_146', 'lay4_134', 'lay4_76', 'lay4_154', 'lay4_169', 'lay4_75', 'lay4_116', 'lay4_29', 'lay4_124', 'lay4_69', 'lay4_81', 'lay4_47', 'lay4_193', 'lay4_192', 'lay4_104', 'lay4_1', 'lay4_196', 'lay4_162', 'lay4_72', 'lay4_94', 'lay4_53', 'lay4_0', 'lay4_20', 'lay4_6', 'lay4_70', 'lay4_191', 'lay4_14', 'lay4_45', 'lay4_150', 'lay4_133', 'lay4_39', 'lay4_147', 'lay4_160', 'lay4_8', 'lay4_12', 'lay4_185', 'lay4_197', 'lay4_168', 'lay4_4', 'lay4_126', 'lay4_137', 'lay4_123', 'lay4_188', 'lay4_100', 'lay4_37', 'lay4_105', 'lay4_19', 'lay4_74', 'lay4_63', 'lay4_78', 'lay4_95', 'lay4_27', 'lay4_190', 'lay4_182', 'lay4_172', 'lay4_194', 'lay4_17', 'lay4_88', 'lay4_157', 'lay4_67', 'lay4_44', 'lay4_79', 'lay4_131', 'lay4_178', 'lay4_61', 'lay4_181', 'lay4_112', 'lay4_24', 'lay4_177', 'lay4_184', 'lay4_174', 'lay4_62', 'lay4_99', 'lay4_135', 'lay4_166'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL_41a3/complete_verifier/utils.py:414: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_116, [-0.0664127916097641,0.9030588865280151]=>[1e-05,0.9030588865280151] (15,-1; -1,-1), time: 0.8118s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_154, [-0.7698589563369751,0.14964520931243896]=>[-0.7698589563369751,-1e-05] (-1,-1; 15,-1), time: 0.9653s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_124, [-0.970691442489624,0.07664519548416138]=>[-0.970691442489624,-1e-05] (-1,-1; 15,-1), time: 0.7091s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_76, [-0.508721113204956,0.5171014070510864]=>[-0.3371188888787209,0.40643764315108866] (2,-1; 2,-1), time: 2.6730s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_75, [-0.7089076042175293,0.3089439272880554]=>[-0.526021518272125,0.14676487145083786] (2,-1; 2,-1), time: 2.9065s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_69, [-0.18579068779945374,0.697364091873169]=>[1e-05,0.697364091873169] (15,-1; -1,-1), time: 1.2794s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_103, [-0.5073771476745605,0.46305274963378906]=>[-0.2856410743583611,0.33344407299541906] (2,-1; 2,-1), time: 3.2820s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_43, [-0.8131844401359558,0.2914399802684784]=>[-0.6391186031651076,0.09033279939615446] (2,-1; 2,-1), time: 3.5124s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_153, [-1.0398328304290771,0.3815178871154785]=>[-0.799879882658029,0.11852601078034715] (2,-1; 2,-1), time: 3.6013s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_163, [-0.4604329466819763,0.4626743495464325]=>[-0.3385112466287546,0.31486258259502525] (2,-1; 2,-1), time: 3.7034s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_179, [-0.7962027788162231,0.29437175393104553]=>[-0.5865649671094332,0.11270272397350908] (2,-1; 2,-1), time: 3.9171s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_192, [-1.0717628002166748,0.03664064407348633]=>[-1.0717628002166748,-1e-05] (-1,-1; 15,-1), time: 0.6707s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_29, [-0.7224651575088501,0.3154487609863281]=>[-0.5617851136070384,0.1460977616940151] (2,-1; 2,-1), time: 3.1149s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_58, [-0.7680526971817017,0.3207876682281494]=>[-0.6405451324166237,0.12476533598327866] (2,-1; 2,-1), time: 4.0512s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_47, [-0.9136471748352051,0.16069462895393372]=>[-0.9136471748352051,-1e-05] (-1,-1; 15,-1), time: 1.1873s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_134, [-1.05802321434021,0.2014058530330658]=>[-0.8482726068479962,0.0017144386818319212] (2,-1; 2,-1), time: 4.2054s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_104, [-0.11953870952129364,1.159280776977539]=>[1e-05,1.159280776977539] (15,-1; -1,-1), time: 0.7007s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_169, [-0.6838423609733582,0.45872974395751953]=>[-0.4910361565534916,0.2962122764218482] (2,-1; 2,-1), time: 4.1806s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_1, [-1.1374622583389282,0.0123424232006073]=>[-1.1374622583389282,-1e-05] (-1,-1; 15,-1), time: 0.6276s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_77, [-0.6806414127349854,0.3811114728450775]=>[-0.5205537037449056,0.14161992498621506] (2,-1; 2,-1), time: 4.2861s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_146, [-0.7290249466896057,0.16726884245872498]=>[-0.5386479421340816,0.013318686383243386] (2,-1; 2,-1), time: 4.2899s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_0, [-1.0005460977554321,0.03954130411148071]=>[-1.0005460977554321,-1e-05] (-1,-1; 15,-1), time: 0.5778s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_70, [-0.9552358984947205,0.046237558126449585]=>[-0.9552358984947205,-1e-05] (-1,-1; 15,-1), time: 0.5985s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_6, [-0.9908277988433838,0.049646079540252686]=>[-0.9908277988433838,-1e-05] (-1,-1; 15,-1), time: 0.6639s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_45, [-0.04935407638549805,1.463698387145996]=>[1e-05,1.463698387145996] (15,-1; -1,-1), time: 0.6814s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_53, [-1.1167092323303223,0.18667778372764587]=>[-1.1167092323303223,-1e-05] (-1,-1; 15,-1), time: 1.1305s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_142, [-0.614190399646759,0.4044177532196045]=>[-0.4556559625356561,0.18645795742115392] (2,-1; 2,-1), time: 5.3955s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_5, [-0.6851682066917419,0.3100675642490387]=>[-0.5407264394003161,0.09969211774550156] (2,-1; 2,-1), time: 5.4610s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_133, [-1.0137946605682373,0.025653719902038574]=>[-1.0137946605682373,-1e-05] (-1,-1; 15,-1), time: 0.6539s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_147, [-0.8790567517280579,0.07025280594825745]=>[-0.8790567517280579,-1e-05] (-1,-1; 15,-1), time: 0.5602s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_196, [-0.5265125036239624,0.4063992500305176]=>[-0.39837957773433624,0.27106071092675765] (2,-1; 2,-1), time: 2.5743s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_193, [-0.6891598105430603,0.2209683507680893]=>[-0.4659703566097012,0.15010152115941033] (2,-1; 2,-1), time: 3.7660s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_81, [-0.5586224794387817,0.45155811309814453]=>[-0.34031109801309734,0.3217611211062147] (2,-1; 2,-1), time: 4.1848s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_168, [-0.8715350031852722,0.058682575821876526]=>[-0.8715350031852722,-1e-05] (-1,-1; 15,-1), time: 0.6545s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_4, [-1.1093673706054688,0.06825433671474457]=>[-1.1093673706054688,-1e-05] (-1,-1; 15,-1), time: 0.5486s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_162, [-0.5386008024215698,0.505932629108429]=>[-0.4016011354157895,0.293689438589683] (2,-1; 2,-1), time: 3.4403s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_126, [-1.0195006132125854,0.07999804615974426]=>[-1.0195006132125854,-1e-05] (-1,-1; 15,-1), time: 0.5056s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_94, [-0.7539633512496948,0.26230674982070923]=>[-0.525692383180054,0.1092526892751767] (2,-1; 2,-1), time: 3.8392s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_191, [-0.4388695955276489,0.371570348739624]=>[-0.28893539651367073,0.22988573187220934] (2,-1; 2,-1), time: 3.9558s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_72, [-0.7724334001541138,0.2556662857532501]=>[-0.5722323584268375,0.10497973355255025] (2,-1; 2,-1), time: 4.3027s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_14, [-0.9017525315284729,0.15425890684127808]=>[-0.6858466359276293,0.03839038590445415] (2,-1; 2,-1), time: 4.2458s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_39, [-0.792414128780365,0.15929162502288818]=>[-0.5942007599276452,0.028595820026936176] (2,-1; 2,-1), time: 3.9178s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_105, [-0.9780288934707642,0.1027945876121521]=>[-0.9780288934707642,-1e-05] (-1,-1; 15,-1), time: 0.6464s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_160, [-0.7094141244888306,0.2891315221786499]=>[-0.5086892735596853,0.12929348788388575] (2,-1; 2,-1), time: 3.9497s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_12, [-0.7316802740097046,0.20794761180877686]=>[-0.5545215895301564,0.07318304670484257] (2,-1; 2,-1), time: 3.7172s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_63, [-1.0222678184509277,0.019866541028022766]=>[-1.0222678184509277,-1e-05] (-1,-1; 15,-1), time: 0.5524s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_197, [-0.6560990810394287,0.14223326742649078]=>[-0.5302062891052467,0.0014896510356055173] (2,-1; 2,-1), time: 3.9850s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_78, [-1.191848635673523,0.052112966775894165]=>[-1.191848635673523,-1e-05] (-1,-1; 15,-1), time: 0.7043s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_190, [-1.0486416816711426,0.01185503602027893]=>[-1.0486416816711426,-1e-05] (-1,-1; 15,-1), time: 0.4750s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_8, [-0.6818150877952576,0.20499753952026367]=>[-0.5375402361233157,0.03795397510942741] (2,-1; 2,-1), time: 4.6996s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_150, [-0.7111759185791016,0.3936777710914612]=>[-0.5073760337548662,0.15170528911790626] (2,-1; 2,-1), time: 5.6800s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_194, [-0.7521371841430664,0.10836774110794067]=>[-0.7521371841430664,-1e-05] (-1,-1; 15,-1), time: 0.7411s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_137, [-0.2821294367313385,0.8236101269721985]=>[-0.049218091404682786,0.6623145379674844] (2,-1; 2,-1), time: 3.7474s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_100, [-0.6029686331748962,0.3531368672847748]=>[-0.4740026953704386,0.20412855971055416] (2,-1; 2,-1), time: 3.3697s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_185, [-0.779759407043457,0.316639244556427]=>[-0.5307678320672236,0.19014099166827603] (2,-1; 2,-1), time: 5.3511s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_123, [-0.6343032121658325,0.3766351342201233]=>[-0.473634271193797,0.2269878981957233] (2,-1; 2,-1), time: 3.5901s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_88, [-0.09425486624240875,1.0232549905776978]=>[1e-05,1.0232549905776978] (15,-1; -1,-1), time: 0.5821s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_157, [-0.9135797023773193,0.02016797661781311]=>[-0.9135797023773193,-1e-05] (-1,-1; 15,-1), time: 0.6165s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_20, [-0.9295870065689087,0.12704740464687347]=>[-0.6764438951517303,0.02117717955207703] (2,-1; 2,-1), time: 7.2265s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_178, [-0.9685139060020447,0.018153443932533264]=>[-0.9685139060020447,-1e-05] (-1,-1; 15,-1), time: 0.6385s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_61, [-0.09924998879432678,1.0633347034454346]=>[1e-05,1.0633347034454346] (15,-1; -1,-1), time: 0.6474s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_181, [-0.905093789100647,0.0089302659034729]=>[-0.905093789100647,-1e-05] (-1,-1; 15,-1), time: 0.4999s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_37, [-0.4968039393424988,0.3419361114501953]=>[-0.38511247236619933,0.1737528626009085] (2,-1; 2,-1), time: 4.4427s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_27, [-0.5648767948150635,0.4077953100204468]=>[-0.426145067520946,0.2126546723734461] (2,-1; 2,-1), time: 3.1683s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_188, [-0.7172688841819763,0.22391840815544128]=>[-0.4843021353922249,0.13183555748214992] (2,-1; 2,-1), time: 5.2317s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_19, [-0.4717806279659271,0.6309496164321899]=>[-0.23394450336823205,0.46108361200841147] (2,-1; 2,-1), time: 4.8461s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_62, [-0.8968334197998047,0.10979226231575012]=>[-0.8968334197998047,-1e-05] (-1,-1; 15,-1), time: 0.6580s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_17, [-0.8731884956359863,0.28190380334854126]=>[-0.7047233358886669,0.0791178945932455] (2,-1; 2,-1), time: 3.1976s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_172, [-0.602512001991272,0.4501236081123352]=>[-0.45196269186238974,0.2620127509924884] (2,-1; 2,-1), time: 3.9903s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_44, [-0.7557873725891113,0.39348065853118896]=>[-0.5775131717910648,0.20429982021417192] (2,-1; 2,-1), time: 2.8725s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_99, [-0.009541228413581848,0.9772567749023438]=>[1e-05,0.9772567749023438] (15,-1; -1,-1), time: 0.6200s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_135, [-0.06867958605289459,0.7964410781860352]=>[1e-05,0.7964410781860352] (15,-1; -1,-1), time: 0.5840s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_95, [-0.6383621692657471,0.3431167006492615]=>[-0.44374902845630027,0.18682032954276076] (2,-1; 2,-1), time: 4.8637s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_79, [-0.8683221340179443,0.20885616540908813]=>[-0.6865339498589227,0.08684219483179098] (2,-1; 2,-1), time: 3.3137s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_131, [-0.244938462972641,0.7355005145072937]=>[-0.08024700984213734,0.5662028059642858] (2,-1; 2,-1), time: 3.7685s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_74, [-1.0423897504806519,0.15496477484703064]=>[-0.7669154724240556,0.0030498018482250644] (2,-1; 2,-1), time: 6.4258s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_177, [-0.805289626121521,0.31614547967910767]=>[-0.6287904502551602,0.11725827906810563] (2,-1; 2,-1), time: 3.3339s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_184, [-0.6945677995681763,0.20330527424812317]=>[-0.5052226664917479,0.09678198288293871] (2,-1; 2,-1), time: 3.1057s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_182, [-0.4927964210510254,0.4511969983577728]=>[-0.27026557909563415,0.34919601873279216] (2,-1; 2,-1), time: 6.0296s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_174, [-0.8742296695709229,0.33070746064186096]=>[-0.6900122565111242,0.10182672617427752] (2,-1; 2,-1), time: 3.4638s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_24, [-0.6864414215087891,0.3794892430305481]=>[-0.5089526876467318,0.16205798960249543] (2,-1; 2,-1), time: 4.4696s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_67, [-0.7230929136276245,0.2535421550273895]=>[-0.48477953362560905,0.10030382523639925] (2,-1; 2,-1), time: 6.2732s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_166, [-0.27230969071388245,0.8937247395515442]=>[-0.06621371824971008,0.7115199885306075] (2,-1; 2,-1), time: 3.7109s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_112, [-0.6317172050476074,0.33558744192123413]=>[-0.38549439614614045,0.21802416368565145] (2,-1; 2,-1), time: 6.3908s, #vars: 1275, #constrs: 535, improved: True
MIP improved 84 nodes out of 84 unstable nodes, lb improved 10.61037540435791, ub improved 10.1470947265625, time 18.9682
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_153', 'lay6_157', 'lay6_162', 'lay6_91', 'lay6_26', 'lay6_30', 'lay6_6', 'lay6_89', 'lay6_152', 'lay6_83', 'lay6_139', 'lay6_32', 'lay6_117', 'lay6_23', 'lay6_113', 'lay6_195', 'lay6_128', 'lay6_97', 'lay6_126', 'lay6_199', 'lay6_106', 'lay6_193', 'lay6_65', 'lay6_15', 'lay6_119', 'lay6_156', 'lay6_88', 'lay6_142', 'lay6_118', 'lay6_93', 'lay6_36', 'lay6_21', 'lay6_64', 'lay6_151', 'lay6_54', 'lay6_125', 'lay6_98', 'lay6_132', 'lay6_127', 'lay6_86', 'lay6_33', 'lay6_135', 'lay6_3', 'lay6_112', 'lay6_186', 'lay6_46', 'lay6_108', 'lay6_10', 'lay6_59', 'lay6_96', 'lay6_158', 'lay6_197', 'lay6_121', 'lay6_198', 'lay6_50', 'lay6_22', 'lay6_129', 'lay6_188', 'lay6_12', 'lay6_4', 'lay6_170', 'lay6_38', 'lay6_42', 'lay6_58', 'lay6_90', 'lay6_75', 'lay6_2', 'lay6_178', 'lay6_176', 'lay6_13', 'lay6_8', 'lay6_9', 'lay6_167', 'lay6_61', 'lay6_136', 'lay6_123', 'lay6_174', 'lay6_37', 'lay6_35', 'lay6_148', 'lay6_165', 'lay6_52', 'lay6_149', 'lay6_77', 'lay6_105', 'lay6_124', 'lay6_78', 'lay6_133', 'lay6_53', 'lay6_73', 'lay6_196', 'lay6_29', 'lay6_160', 'lay6_111', 'lay6_99', 'lay6_150', 'lay6_131', 'lay6_134', 'lay6_169', 'lay6_183', 'lay6_163', 'lay6_41', 'lay6_28', 'lay6_18', 'lay6_57', 'lay6_110', 'lay6_34', 'lay6_161', 'lay6_173', 'lay6_1'] filter: 1.0
Solving MIP for lay6_162, [-1.6634132862091064,0.3276033401489258]=>[-1.6634132862091064,-1e-05] (-1,-1; 15,-1), time: 0.3056s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_152, [-1.210060477256775,0.20363563299179077]=>[-1.210060477256775,-1e-05] (-1,-1; 15,-1), time: 0.6447s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_97, [-1.3010532855987549,0.11231154203414917]=>[-1.3010532855987549,-1e-05] (-1,-1; 15,-1), time: 0.2810s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_23, [-1.425419569015503,0.37589478492736816]=>[-1.425419569015503,-1e-05] (-1,-1; 15,-1), time: 1.0673s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_199, [-1.121847152709961,0.2558145523071289]=>[-1.121847152709961,-1e-05] (-1,-1; 15,-1), time: 0.5933s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-1.0875256061553955,0.25051149725914]=>[-1.0875256061553955,-1e-05] (-1,-1; 15,-1), time: 1.0296s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_32, [-1.2837824821472168,0.4253365397453308]=>[-1.2837824821472168,-1e-05] (-1,-1; 15,-1), time: 3.2065s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_193, [-0.9804966449737549,0.2656761407852173]=>[-0.9804966449737549,-1e-05] (-1,-1; 15,-1), time: 0.9132s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_195, [-1.1158815622329712,0.3893619775772095]=>[-1.1158815622329712,-1e-05] (-1,-1; 15,-1), time: 5.1417s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_119, [-1.2972321510314941,0.2753167152404785]=>[-1.2972321510314941,-1e-05] (-1,-1; 15,-1), time: 3.8259s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-0.637821614742279,0.5662475824356079]=>[-0.2800444464941665,0.20761849970556354] (9,-1; 2,-1), time: 21.8480s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_89, [-0.7582383155822754,0.9927247762680054]=>[-0.2173701488100649,0.5515463286947854] (9,-1; 2,-1), time: 22.9249s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-0.7953805327415466,0.6558341979980469]=>[-0.3227149600567888,0.3168491226465454] (9,-1; 2,-1), time: 23.3784s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_26, [-1.0209256410598755,0.3595404028892517]=>[-0.5310206063837914,0.04933044474254515] (9,-1; 2,-1), time: 29.4219s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-0.8350533843040466,0.4368599057197571]=>[-0.44717080565343564,0.05327514612439379] (9,-1; 2,-1), time: 26.3050s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_113, [-1.0592414140701294,0.5061423182487488]=>[-0.5521702819154527,0.11355465628199134] (9,-1; 9,-1), time: 30.0102s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_30, [-0.720323383808136,0.5956317782402039]=>[-0.2875834674961923,0.2559549042250195] (9,-1; 9,-1), time: 30.0324s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_157, [-1.1244244575500488,0.4919488728046417]=>[-0.6773695135732698,0.045178029504616406] (9,-1; 9,-1), time: 30.0354s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-0.8531152606010437,0.5814902186393738]=>[-0.33319263816696326,0.21148500613688662] (9,-1; 9,-1), time: 30.0413s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_6, [-0.9265135526657104,0.4307722747325897]=>[-0.4810174994898172,0.05534858854433145] (9,-1; 9,-1), time: 30.0449s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_153, [-0.849161684513092,0.6596036553382874]=>[-0.39387443504452163,0.26988385731280856] (9,-1; 9,-1), time: 30.0581s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_91, [-0.4958179295063019,0.9196501970291138]=>[-0.08007190849054589,0.4963306085313912] (9,-1; 9,-1), time: 30.0578s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_128, [-0.7504763603210449,0.6608231663703918]=>[-0.3140626314894496,0.2801957296164419] (9,-1; 9,-1), time: 30.0312s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-1.2227792739868164,0.01941782236099243]=>[-1.2227792739868164,-1e-05] (-1,-1; 15,-1), time: 0.3102s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-1.2924487590789795,0.11087566614151001]=>[-1.2924487590789795,-1e-05] (-1,-1; 15,-1), time: 0.3004s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_86, [-1.2103471755981445,0.17687225341796875]=>[-1.2103471755981445,-1e-05] (-1,-1; 15,-1), time: 0.3063s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_33, [-1.2993764877319336,0.09071773290634155]=>[-1.2993764877319336,-1e-05] (-1,-1; 15,-1), time: 0.2946s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_125, [-1.0191822052001953,0.2154267132282257]=>[-1.0191822052001953,-1e-05] (-1,-1; 15,-1), time: 0.9001s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_126, [-1.092950463294983,0.5672452449798584]=>[-0.5942980860887811,0.1601253179886574] (9,-1; 9,-1), time: 30.0294s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-1.3150296211242676,0.12721037864685059]=>[-1.3150296211242676,-1e-05] (-1,-1; 15,-1), time: 0.2992s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_46, [-1.2619980573654175,0.04439437389373779]=>[-1.2619980573654175,-1e-05] (-1,-1; 15,-1), time: 0.2997s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_108, [-0.25358009338378906,1.1268116235733032]=>[1e-05,1.1268116235733032] (15,-1; -1,-1), time: 0.2892s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-1.0905245542526245,0.3121531903743744]=>[-1.0905245542526245,-1e-05] (-1,-1; 15,-1), time: 1.0427s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_98, [-0.3271128237247467,0.8704441785812378]=>[1e-05,0.8704441785812378] (15,-1; -1,-1), time: 2.2504s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-0.7739895582199097,0.25880101323127747]=>[-0.7739895582199097,-1e-05] (-1,-1; 15,-1), time: 1.9833s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_158, [-1.3452348709106445,0.22215235233306885]=>[-1.3452348709106445,-1e-05] (-1,-1; 15,-1), time: 0.3114s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_197, [-1.2287039756774902,0.043991655111312866]=>[-1.2287039756774902,-1e-05] (-1,-1; 15,-1), time: 0.3225s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_15, [-0.6382933855056763,0.9117785692214966]=>[-0.22634272924893234,0.4417648622416256] (9,-1; 9,-1), time: 30.0085s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_118, [-0.9147146940231323,0.4079086184501648]=>[-0.9147146940231323,-1e-05] (-1,-1; 15,-1), time: 10.3695s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_121, [-1.497434139251709,0.2880720794200897]=>[-1.497434139251709,-1e-05] (-1,-1; 15,-1), time: 0.6310s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_22, [-1.2375370264053345,0.154599130153656]=>[-1.2375370264053345,-1e-05] (-1,-1; 15,-1), time: 0.3156s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_198, [-1.223732590675354,0.244363933801651]=>[-1.223732590675354,-1e-05] (-1,-1; 15,-1), time: 0.9307s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_188, [-1.3060238361358643,0.020354628562927246]=>[-1.3060238361358643,-1e-05] (-1,-1; 15,-1), time: 0.2953s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_129, [-1.4382073879241943,0.061229050159454346]=>[-1.4382073879241943,-1e-05] (-1,-1; 15,-1), time: 0.3203s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-0.5232047438621521,1.2596633434295654]=>[-0.10913798013951458,0.7021902666500027] (9,-1; 2,-1), time: 26.4738s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_4, [-1.2250760793685913,0.23886001110076904]=>[-1.2250760793685913,-1e-05] (-1,-1; 15,-1), time: 0.6574s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-0.25547534227371216,1.1087462902069092]=>[1e-05,1.1087462902069092] (15,-1; -1,-1), time: 0.7364s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_36, [-0.3879956603050232,0.980521023273468]=>[1e-05,0.980521023273468] (15,-1; -1,-1), time: 6.7415s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-1.0657422542572021,0.2699051797389984]=>[-1.0657422542572021,-1e-05] (-1,-1; 15,-1), time: 0.6428s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_90, [-1.5746983289718628,0.051935017108917236]=>[-1.5746983289718628,-1e-05] (-1,-1; 15,-1), time: 0.3190s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-0.40635359287261963,1.2746472358703613]=>[1e-05,1.2746472358703613] (15,-1; -1,-1), time: 1.3889s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_2, [-1.3216190338134766,0.19361287355422974]=>[-1.3216190338134766,-1e-05] (-1,-1; 15,-1), time: 0.6122s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_64, [-0.7388186454772949,0.5197268128395081]=>[-0.37423527882788327,0.17056000150147066] (9,-1; 2,-1), time: 21.6231s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_88, [-1.0101585388183594,0.5569597482681274]=>[-0.629308451554861,0.07174641791153406] (9,-1; 9,-1), time: 30.0375s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_176, [-1.1834027767181396,0.0449180006980896]=>[-1.1834027767181396,-1e-05] (-1,-1; 15,-1), time: 0.3026s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_13, [-1.4984891414642334,0.004754483699798584]=>[-1.4984891414642334,-1e-05] (-1,-1; 15,-1), time: 0.2988s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_142, [-0.824342668056488,0.4806042015552521]=>[-0.36957025870467997,0.12095196404365051] (9,-1; 9,-1), time: 30.0098s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_93, [-0.6461542844772339,0.6160414218902588]=>[-0.19141282490350825,0.3080650495767006] (9,-1; 2,-1), time: 24.5045s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-0.8494032621383667,0.4320146441459656]=>[-0.4242762382636679,0.09328795467342095] (9,-1; 9,-1), time: 30.0114s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_54, [-0.8380192518234253,0.5143939256668091]=>[-0.4126369767952778,0.08127784877208166] (9,-1; 9,-1), time: 30.0264s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_151, [-0.5015201568603516,0.680401086807251]=>[-0.08405708716923387,0.4008738258346507] (9,-1; 9,-1), time: 30.0312s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_174, [-0.23730996251106262,1.2197000980377197]=>[1e-05,1.2197000980377197] (15,-1; -1,-1), time: 0.3086s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_112, [-0.8168441653251648,0.5185696482658386]=>[-0.4404752930677948,0.09633583880805051] (9,-1; 9,-1), time: 30.0218s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_9, [-0.3067860007286072,0.8448933362960815]=>[1e-05,0.8448933362960815] (15,-1; -1,-1), time: 8.9275s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-0.7400665283203125,0.5477173328399658]=>[-0.36369960532239876,0.1635414185842015] (9,-1; 9,-1), time: 30.0314s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_59, [-0.8466315865516663,0.5251747965812683]=>[-0.3849190968633075,0.18550712638869357] (9,-1; 9,-1), time: 30.0520s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-1.163222312927246,0.2272154688835144]=>[-1.163222312927246,-1e-05] (-1,-1; 15,-1), time: 0.6528s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-0.7611601948738098,0.5648120641708374]=>[-0.37707202816120494,0.1742888484445298] (9,-1; 9,-1), time: 30.0314s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_149, [-1.3296678066253662,0.055454641580581665]=>[-1.3296678066253662,-1e-05] (-1,-1; 15,-1), time: 0.2973s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_50, [-0.5866681337356567,0.9134592413902283]=>[-0.14054735904847276,0.5350384700139549] (9,-1; 9,-1), time: 30.0274s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_12, [-0.5744549036026001,0.6922659873962402]=>[-0.18488248085871778,0.3287814921690998] (9,-1; 9,-1), time: 30.0718s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_38, [-0.875690221786499,0.3973113000392914]=>[-0.5056803574653441,0.018851692173512447] (9,-1; 9,-1), time: 30.0140s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-0.9252110719680786,0.3714420795440674]=>[-0.9252110719680786,-1e-05] (-1,-1; 15,-1), time: 13.1262s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-0.5076702237129211,0.6693128943443298]=>[-0.13092266774160802,0.34338780627905585] (9,-1; 9,-1), time: 30.0588s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-1.2088892459869385,0.21111464500427246]=>[-1.2088892459869385,-1e-05] (-1,-1; 15,-1), time: 0.5998s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_196, [-1.0492230653762817,0.1186368465423584]=>[-1.0492230653762817,-1e-05] (-1,-1; 15,-1), time: 0.2934s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-0.38644134998321533,1.0747547149658203]=>[1e-05,1.0747547149658203] (15,-1; -1,-1), time: 7.2314s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_160, [-0.9883518218994141,0.2136879563331604]=>[-0.9883518218994141,-1e-05] (-1,-1; 15,-1), time: 0.6042s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_111, [-0.09863543510437012,1.2354053258895874]=>[1e-05,1.2354053258895874] (15,-1; -1,-1), time: 0.2924s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_178, [-0.7493821978569031,0.5409305691719055]=>[-0.36347248039654884,0.16885689774322146] (9,-1; 9,-1), time: 30.0241s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_105, [-0.9780648946762085,0.39105409383773804]=>[-0.9780648946762085,-1e-05] (-1,-1; 15,-1), time: 9.6928s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_133, [-0.38854557275772095,0.7774420380592346]=>[1e-05,0.7774420380592346] (15,-1; -1,-1), time: 9.4490s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-0.9044750928878784,0.3762037754058838]=>[-0.9044750928878784,-1e-05] (-1,-1; 15,-1), time: 8.9685s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_169, [-0.2913699150085449,1.250125527381897]=>[1e-05,1.250125527381897] (15,-1; -1,-1), time: 0.9134s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_183, [-0.10815763473510742,1.3324766159057617]=>[1e-05,1.3324766159057617] (15,-1; -1,-1), time: 0.3181s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_163, [-0.16777175664901733,1.0967018604278564]=>[1e-05,1.0967018604278564] (15,-1; -1,-1), time: 0.3066s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-1.2056572437286377,0.05994623899459839]=>[-1.2056572437286377,-1e-05] (-1,-1; 15,-1), time: 0.3076s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_28, [-0.0140572190284729,1.3484065532684326]=>[1e-05,1.3484065532684326] (15,-1; -1,-1), time: 0.3168s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_18, [-1.058517575263977,0.15702909231185913]=>[-1.058517575263977,-1e-05] (-1,-1; 15,-1), time: 0.3153s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-0.6500155925750732,0.6936562061309814]=>[-0.15882408888134386,0.423222004858815] (9,-1; 2,-1), time: 23.8421s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_57, [-1.748382806777954,0.0007766485214233398]=>[-1.748382806777954,-1e-05] (-1,-1; 15,-1), time: 0.3013s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-0.9654711484909058,0.24345996975898743]=>[-0.9654711484909058,-1e-05] (-1,-1; 15,-1), time: 0.6570s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_134, [-0.2548927068710327,0.9163802266120911]=>[1e-05,0.9163802266120911] (15,-1; -1,-1), time: 5.5299s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_173, [-1.335140347480774,0.25816047191619873]=>[-1.335140347480774,-1e-05] (-1,-1; 15,-1), time: 0.6720s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_1, [-1.3751132488250732,0.11913079023361206]=>[-1.3751132488250732,-1e-05] (-1,-1; 15,-1), time: 0.3202s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-0.8885848522186279,0.3344780206680298]=>[-0.47960631254360836,0.014718809267296028] (9,-1; 9,-1), time: 30.0443s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_148, [-1.1499885320663452,0.3636772930622101]=>[-0.7159858387015788,0.0056237841663941265] (9,-1; 2,-1), time: 21.5142s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_52, [-0.37903016805648804,0.8820213675498962]=>[-0.003924566063145121,0.5277115677597263] (9,-1; 2,-1), time: 23.9913s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_37, [-0.9042003154754639,0.38310059905052185]=>[-0.4633828994594419,0.044205874255318134] (9,-1; 2,-1), time: 26.2773s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-1.1667377948760986,0.43681782484054565]=>[-0.6959226057476388,0.03675114112571721] (9,-1; 2,-1), time: 23.1252s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_123, [-0.6466706991195679,0.9231619238853455]=>[-0.19982238940535685,0.49624013767290004] (2,-1; 9,-1), time: 26.9191s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-0.35271191596984863,0.8005377054214478]=>[1e-05,0.8005377054214478] (15,-1; -1,-1), time: 10.3298s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_35, [-0.4954862892627716,0.7547831535339355]=>[-0.1022388671610543,0.3883498201875861] (9,-1; 2,-1), time: 28.9779s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-0.46628451347351074,0.8492638468742371]=>[-0.13817064342801072,0.3741853422252244] (2,-1; 9,-1), time: 23.0844s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_77, [-0.7949289083480835,0.41582638025283813]=>[-0.4373305208366777,0.0726952360403935] (9,-1; 9,-1), time: 30.0630s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_99, [-0.5743089914321899,0.6345529556274414]=>[-0.18938371688439376,0.2776956462993035] (9,-1; 2,-1), time: 25.7601s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_78, [-0.8082101345062256,0.5213025808334351]=>[-0.3912075103613889,0.14201456043781419] (9,-1; 9,-1), time: 30.0399s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_131, [-0.6433156132698059,0.8087201118469238]=>[-0.2224048208930125,0.3984864494344657] (2,-1; 9,-1), time: 25.5761s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_150, [-0.49709129333496094,0.6588901281356812]=>[-0.08905442151921471,0.3489901630140817] (9,-1; 2,-1), time: 29.3921s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_34, [-0.8146997690200806,0.3534098267555237]=>[-0.41159288752183454,0.04704762126789529] (9,-1; 2,-1), time: 26.1209s, #vars: 1581, #constrs: 894, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
best_l after optimization: 14.845949172973633 with beta sum per layer: []
optimal alpha/beta time: 7.478646278381348
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.7596, -4.1508, -1.7018, -1.2881,  0.5469, -0.3814, -4.6679, -1.7949,
         -2.1677]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 110 nodes out of 110 unstable nodes, lb improved 24.141372680664062, ub improved 26.997163772583008, time 104.9860
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_33', 'lay8_76', 'lay8_57', 'lay8_160', 'lay8_130', 'lay8_154', 'lay8_111', 'lay8_158', 'lay8_8', 'lay8_53', 'lay8_0', 'lay8_82', 'lay8_70', 'lay8_65', 'lay8_127', 'lay8_162', 'lay8_133', 'lay8_28', 'lay8_136', 'lay8_195', 'lay8_192', 'lay8_173', 'lay8_21', 'lay8_22', 'lay8_25', 'lay8_38', 'lay8_66', 'lay8_4', 'lay8_184', 'lay8_86', 'lay8_97', 'lay8_141', 'lay8_45', 'lay8_155', 'lay8_72', 'lay8_49', 'lay8_180', 'lay8_20', 'lay8_135', 'lay8_1', 'lay8_15', 'lay8_182', 'lay8_128', 'lay8_73', 'lay8_12', 'lay8_197', 'lay8_107', 'lay8_13', 'lay8_104', 'lay8_10', 'lay8_142', 'lay8_139', 'lay8_81', 'lay8_31', 'lay8_56', 'lay8_147', 'lay8_41', 'lay8_64', 'lay8_189', 'lay8_98', 'lay8_61', 'lay8_165', 'lay8_2', 'lay8_168', 'lay8_109', 'lay8_174', 'lay8_3', 'lay8_181', 'lay8_185', 'lay8_153', 'lay8_150', 'lay8_27', 'lay8_140', 'lay8_96', 'lay8_172', 'lay8_161', 'lay8_114', 'lay8_103', 'lay8_77', 'lay8_166', 'lay8_196', 'lay8_9', 'lay8_171', 'lay8_54', 'lay8_79', 'lay8_59', 'lay8_32', 'lay8_177', 'lay8_5', 'lay8_176', 'lay8_152', 'lay8_83', 'lay8_179', 'lay8_24', 'lay8_47', 'lay8_151', 'lay8_188', 'lay8_14', 'lay8_123', 'lay8_157', 'lay8_48', 'lay8_84', 'lay8_93', 'lay8_112', 'lay8_90', 'lay8_85', 'lay8_199', 'lay8_121', 'lay8_7', 'lay8_63', 'lay8_163', 'lay8_190', 'lay8_116', 'lay8_34', 'lay8_110', 'lay8_186', 'lay8_144', 'lay8_17', 'lay8_122', 'lay8_115', 'lay8_44', 'lay8_60', 'lay8_43', 'lay8_129', 'lay8_18', 'lay8_137', 'lay8_105', 'lay8_39', 'lay8_120', 'lay8_132', 'lay8_52', 'lay8_170', 'lay8_117', 'lay8_99', 'lay8_42', 'lay8_125', 'lay8_74', 'lay8_183', 'lay8_78', 'lay8_23', 'lay8_100', 'lay8_94', 'lay8_6', 'lay8_102', 'lay8_156', 'lay8_75', 'lay8_11', 'lay8_164', 'lay8_95', 'lay8_91', 'lay8_71', 'lay8_30', 'lay8_118', 'lay8_178', 'lay8_119', 'lay8_145', 'lay8_108', 'lay8_92', 'lay8_67', 'lay8_124', 'lay8_35', 'lay8_169', 'lay8_51', 'lay8_46', 'lay8_106', 'lay8_191', 'lay8_143', 'lay8_37', 'lay8_167', 'lay8_87', 'lay8_19', 'lay8_50', 'lay8_16', 'lay8_175', 'lay8_80', 'lay8_26', 'lay8_131', 'lay8_134', 'lay8_29', 'lay8_69', 'lay8_68'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -29.04300308227539 with beta sum per layer: []
optimal alpha/beta time: 0.04471588134765625
alpha-CROWN with intermediate bounds by MIP: tensor([[5.5357, 1.0264, 3.2507, 4.1650, 5.0939, 4.0264, 0.1978, 2.6581, 3.0889]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
min of alpha-CROWN bounds 0.19775915145874023>=0, verified!
MIP finished with 128.5449182987213s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -29.04300308227539 with beta sum per layer: []
optimal alpha/beta time: 0.03790402412414551
alpha-CROWN with intermediate bounds improved by MIP: tensor([[5.5357, 1.0264, 3.2507, 4.1650, 5.0939, 4.0264, 0.1978, 2.6581, 3.0889]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[5.5357, 0.0000, 1.0264, 3.2507, 4.1650, 5.0939, 4.0264, 0.1978, 2.6581,
         3.0889]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
time threshold left for bab: 763.5653674602509
bab-refine verified success!
[[  5.           0.           0.           7.81986213   0.
   -1.                  inf          inf]
 [  5.           0.           0.           0.66102815   0.
   -3.                  inf          inf]
 [  5.           0.           0.         128.61477828   0.
   -2.                  inf          inf]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [cnt:1] (excluding attack success): 136.43464040756226
