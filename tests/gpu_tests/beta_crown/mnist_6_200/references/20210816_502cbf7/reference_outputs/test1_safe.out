/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Tue Nov  2 00:02:00 2021 on huan-Super-Server
Namespace(batch_size=500, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', crown=False, data='MNIST_ERAN_UN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=16, epsilon=0.015, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='eran_models/mnist_6_200_nat_old.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=16, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='mnist_6_200', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=15, timeout=360.0)
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1288: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  labels = torch.from_numpy(labels.astype(np.int))
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1292: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1,-1,1,1)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0150]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
saving results to Verified_ret_[mnist_6_200]_start=15_end=16_iter=50_b=500_int-beta=False_timeout=360.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  5  correct label  5 logits tensor([-3.2725, -1.8112, -1.2011,  3.5138, -2.6684,  6.1777, -1.7582, -1.4164,
         0.0590,  1.4769], grad_fn=<SelectBackward0>)
##### PGD attack: True label: 5, Tested against: all others ######
pgd prediction: tensor([-3.5921, -1.4796, -0.9557,  3.8821, -2.1419,  5.4839, -2.2259, -1.3851,
        -0.1577,  1.4086], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([9.0760, 6.9634, 6.4395, 1.6018, 7.6258,    inf, 7.7097, 6.8690, 5.6415,
        4.0752], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-3.2725, -1.8112, -1.2011,  3.5138, -2.6684,  6.1777, -1.7582, -1.4164,
          0.0590,  1.4769]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 218.48028564453125 with beta sum per layer: []
optimal alpha/beta time: 5.3286919593811035
initial alpha-CROWN bounds: tensor([[-16.2415, -24.7461, -27.0857, -23.8505, -24.0391, -19.3862, -28.5612,
         -26.4701, -28.0998]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 288.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_182', 'lay4_127', 'lay4_190', 'lay4_41', 'lay4_174', 'lay4_172', 'lay4_21', 'lay4_16', 'lay4_168', 'lay4_24', 'lay4_12', 'lay4_149', 'lay4_86', 'lay4_116', 'lay4_77', 'lay4_193', 'lay4_181', 'lay4_59', 'lay4_28', 'lay4_38', 'lay4_142', 'lay4_154', 'lay4_13', 'lay4_56', 'lay4_162', 'lay4_102', 'lay4_177', 'lay4_47', 'lay4_156', 'lay4_26', 'lay4_82', 'lay4_1', 'lay4_169', 'lay4_17', 'lay4_50', 'lay4_20', 'lay4_29', 'lay4_108', 'lay4_32', 'lay4_93', 'lay4_136', 'lay4_121', 'lay4_187', 'lay4_18', 'lay4_97', 'lay4_10', 'lay4_150', 'lay4_73', 'lay4_15', 'lay4_148', 'lay4_178', 'lay4_179', 'lay4_42', 'lay4_23', 'lay4_192', 'lay4_4', 'lay4_87', 'lay4_8', 'lay4_166', 'lay4_104', 'lay4_45'] filter: 1.0
Solving MIP for lay4_193, [-0.9717951416969299,0.05068501830101013]=>[-0.9717951416969299,-1e-05] (-1,-1; 15,-1), time: 0.6925s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_41, [-1.1554675102233887,0.034965626895427704]=>[-1.1554675102233887,-1e-05] (-1,-1; 15,-1), time: 0.7022s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_174, [-0.09226047992706299,1.493486762046814]=>[1e-05,1.493486762046814] (15,-1; -1,-1), time: 0.7690s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_21, [-0.072954922914505,1.0176687240600586]=>[1e-05,1.0176687240600586] (15,-1; -1,-1), time: 0.7766s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_24, [-0.8332229852676392,0.17369630932807922]=>[-0.8332229852676392,-1e-05] (-1,-1; 15,-1), time: 1.2718s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_16, [-0.18622872233390808,0.9291548132896423]=>[1e-05,0.9291548132896423] (15,-1; -1,-1), time: 1.3419s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_28, [-0.012502431869506836,1.1350462436676025]=>[1e-05,1.1350462436676025] (15,-1; -1,-1), time: 0.6192s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_13, [-1.0710716247558594,0.10785126686096191]=>[-1.0710716247558594,-1e-05] (-1,-1; 15,-1), time: 0.6998s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_182, [-0.6613938808441162,0.5420434474945068]=>[-0.42585372272509414,0.345251491198141] (2,-1; 2,-1), time: 2.8046s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_127, [-0.5291714668273926,0.5117650032043457]=>[-0.28905558105137835,0.3838125570543678] (2,-1; 2,-1), time: 2.9977s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_102, [-0.9670476913452148,0.08995726704597473]=>[-0.9670476913452148,-1e-05] (-1,-1; 15,-1), time: 0.7509s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_116, [-0.5776994228363037,0.3589857816696167]=>[-0.42378753196226987,0.20722488956960006] (2,-1; 2,-1), time: 4.3012s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_190, [-0.7033662796020508,0.45115306973457336]=>[-0.5814056324681611,0.16471245995536402] (2,-1; 2,-1), time: 4.3326s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_77, [-0.4438774585723877,0.7674015164375305]=>[-0.1623698107765163,0.602835649268372] (2,-1; 2,-1), time: 4.4088s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_172, [-0.7099871635437012,0.3629206418991089]=>[-0.511817559421268,0.1615636177323012] (2,-1; 2,-1), time: 4.8926s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_156, [-1.045637607574463,0.07982790470123291]=>[-1.045637607574463,-1e-05] (-1,-1; 15,-1), time: 0.7229s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_142, [-0.3967384696006775,0.5975000858306885]=>[-0.22086955026153737,0.40658853972779463] (2,-1; 2,-1), time: 3.8845s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_12, [-0.5624600648880005,0.4525207281112671]=>[-0.3387864713025493,0.25930291362474234] (2,-1; 2,-1), time: 5.1781s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_181, [-0.7832446098327637,0.22525477409362793]=>[-0.5647544499351687,0.05001856756051072] (2,-1; 2,-1), time: 4.5827s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_168, [-0.5142562985420227,0.6127827167510986]=>[-0.23284478392573751,0.44359652175659736] (2,-1; 2,-1), time: 5.2873s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_26, [-0.9029437303543091,0.16114658117294312]=>[-0.9029437303543091,-1e-05] (-1,-1; 15,-1), time: 0.9846s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_82, [-1.0696710348129272,0.09148469567298889]=>[-1.0696710348129272,-1e-05] (-1,-1; 15,-1), time: 0.6213s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_154, [-0.5291675925254822,0.4919702410697937]=>[-0.38570110819132936,0.2570866619208178] (2,-1; 2,-1), time: 4.3088s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_86, [-0.42814427614212036,0.6891341209411621]=>[-0.13643954193909008,0.5215799241672642] (2,-1; 2,-1), time: 5.8997s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_20, [-1.094067931175232,0.0972861647605896]=>[-1.094067931175232,-1e-05] (-1,-1; 15,-1), time: 0.6412s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_38, [-0.7490205764770508,0.22410771250724792]=>[-0.5493180203397255,0.05858782678797766] (2,-1; 2,-1), time: 5.3153s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_108, [-1.4619132280349731,0.0580216646194458]=>[-1.4619132280349731,-1e-05] (-1,-1; 15,-1), time: 0.6097s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_32, [-0.9640030860900879,0.047324955463409424]=>[-0.9640030860900879,-1e-05] (-1,-1; 15,-1), time: 0.6987s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_56, [-0.303618848323822,0.6665939688682556]=>[-0.1776875520919573,0.4135052794916521] (2,-1; 2,-1), time: 4.4797s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_136, [-0.9453466534614563,0.10946536064147949]=>[-0.9453466534614563,-1e-05] (-1,-1; 15,-1), time: 0.6488s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_149, [-0.41132789850234985,0.5336480140686035]=>[-0.231942420685522,0.3050437725271236] (2,-1; 2,-1), time: 6.7215s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_121, [-1.0238542556762695,0.16610056161880493]=>[-1.0238542556762695,-1e-05] (-1,-1; 15,-1), time: 0.8021s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_17, [-0.9920617341995239,0.2203214466571808]=>[-0.9920617341995239,-1e-05] (-1,-1; 15,-1), time: 1.7259s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_162, [-0.24481119215488434,0.7552964687347412]=>[-0.07146317118374917,0.545850671824338] (2,-1; 2,-1), time: 4.3127s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_1, [-0.34623175859451294,0.8753869533538818]=>[-0.16720196645147203,0.6617105753287789] (2,-1; 2,-1), time: 2.9379s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_50, [-0.29622894525527954,0.9399632215499878]=>[-0.034811904727625034,0.7614231417727306] (2,-1; 2,-1), time: 2.9617s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_97, [-0.8787068724632263,0.3673498332500458]=>[-0.6994807837429355,0.12137119675777402] (2,-1; 2,-1), time: 3.3326s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_47, [-0.7560077905654907,0.4362022280693054]=>[-0.5710011996468259,0.12245306752200111] (2,-1; 2,-1), time: 6.0476s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_169, [-0.8110323548316956,0.3806152641773224]=>[-0.5639985156435928,0.16038910589388208] (2,-1; 2,-1), time: 5.5112s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_29, [-0.43292558193206787,0.6727181673049927]=>[-0.1393994036723824,0.4676808425864738] (2,-1; 2,-1), time: 5.4595s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_10, [-0.9637387990951538,0.26837295293807983]=>[-0.7609249696321599,0.008872721555321128] (2,-1; 2,-1), time: 4.2986s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_93, [-0.8105711936950684,0.19913309812545776]=>[-0.5994768084739466,0.0023912140185274097] (2,-1; 2,-1), time: 5.0375s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_187, [-0.9644429087638855,0.20562005043029785]=>[-0.6906009013411822,0.019338393929248597] (2,-1; 2,-1), time: 4.9071s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_177, [-0.5237244367599487,0.6180094480514526]=>[-0.20206760834655418,0.4500286805783478] (2,-1; 2,-1), time: 7.3329s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_73, [-0.6453688144683838,0.605277419090271]=>[-0.34443159956372527,0.4248948577631654] (2,-1; 2,-1), time: 4.5985s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_148, [-0.8309295177459717,0.21326935291290283]=>[-0.5802514877291781,0.02429256925366939] (2,-1; 2,-1), time: 4.4380s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_178, [-0.40243738889694214,0.5717169046401978]=>[-0.18253187727697814,0.4175122481360658] (2,-1; 2,-1), time: 4.2475s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_150, [-0.7617262601852417,0.4617743194103241]=>[-0.44948601325101833,0.23695745302708987] (2,-1; 2,-1), time: 5.8570s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_179, [-0.6661456227302551,0.5320152044296265]=>[-0.36706236196539593,0.3944335200308241] (2,-1; 2,-1), time: 4.7953s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_59, [-0.6837967038154602,0.3282284736633301]=>[-0.3194412986029405,0.2421266674327886] (2,-1; 2,-1), time: 12.5992s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_18, [-0.7009977102279663,0.5576267242431641]=>[-0.36251039432955673,0.3720728451559601] (2,-1; 2,-1), time: 7.0286s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_15, [-0.8158870935440063,0.34611424803733826]=>[-0.5444464260334995,0.12168803698943247] (2,-1; 2,-1), time: 7.1628s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_42, [-0.7706946730613708,0.3900147080421448]=>[-0.5310045662497119,0.1827977422202225] (2,-1; 2,-1), time: 4.3183s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_8, [-0.6083294153213501,0.598554253578186]=>[-0.37187627982341986,0.38783093824787024] (2,-1; 2,-1), time: 3.8996s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_45, [-0.8769540786743164,0.6385089159011841]=>[-0.6231765814075962,0.3251842822504435] (2,-1; 2,-1), time: 3.3380s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_87, [-0.4313878118991852,0.660087525844574]=>[-0.20196937460923461,0.44807431300073586] (2,-1; 2,-1), time: 4.7578s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_4, [-0.6294193267822266,0.5267149209976196]=>[-0.35764827343339695,0.32323506471308316] (2,-1; 2,-1), time: 5.1656s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_166, [-0.5241470336914062,0.7106876373291016]=>[-0.2471454212450766,0.4776908955720447] (2,-1; 2,-1), time: 5.2292s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_23, [-0.45398423075675964,0.7021313309669495]=>[-0.32359729607128734,0.3777822371127876] (2,-1; 2,-1), time: 6.4006s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_192, [-0.5548843741416931,0.643508791923523]=>[-0.2758527458271734,0.3960222209479697] (2,-1; 2,-1), time: 6.0844s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_104, [-0.9795856475830078,0.563862681388855]=>[-0.6363736137033678,0.2984337701232086] (2,-1; 2,-1), time: 5.8680s, #vars: 1277, #constrs: 538, improved: True
MIP improved 61 nodes out of 61 unstable nodes, lb improved 10.58069133758545, ub improved 10.391568183898926, time 17.3976
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_11', 'lay6_16', 'lay6_34', 'lay6_96', 'lay6_177', 'lay6_133', 'lay6_43', 'lay6_77', 'lay6_1', 'lay6_61', 'lay6_69', 'lay6_7', 'lay6_83', 'lay6_25', 'lay6_42', 'lay6_182', 'lay6_70', 'lay6_86', 'lay6_55', 'lay6_95', 'lay6_198', 'lay6_138', 'lay6_125', 'lay6_47', 'lay6_130', 'lay6_58', 'lay6_10', 'lay6_191', 'lay6_159', 'lay6_92', 'lay6_196', 'lay6_121', 'lay6_63', 'lay6_189', 'lay6_112', 'lay6_40', 'lay6_12', 'lay6_144', 'lay6_174', 'lay6_135', 'lay6_22', 'lay6_51', 'lay6_4', 'lay6_146', 'lay6_124', 'lay6_99', 'lay6_46', 'lay6_52', 'lay6_39', 'lay6_114', 'lay6_129', 'lay6_97', 'lay6_127', 'lay6_175', 'lay6_5', 'lay6_49', 'lay6_53', 'lay6_123', 'lay6_80', 'lay6_186', 'lay6_137', 'lay6_192', 'lay6_169', 'lay6_103', 'lay6_90', 'lay6_64', 'lay6_67', 'lay6_194', 'lay6_88', 'lay6_76', 'lay6_165', 'lay6_81', 'lay6_108', 'lay6_167', 'lay6_18', 'lay6_193', 'lay6_57', 'lay6_131', 'lay6_15', 'lay6_36', 'lay6_26', 'lay6_87', 'lay6_93', 'lay6_37', 'lay6_29', 'lay6_30', 'lay6_150', 'lay6_187', 'lay6_54', 'lay6_156', 'lay6_178', 'lay6_164', 'lay6_118', 'lay6_170', 'lay6_190', 'lay6_2', 'lay6_89', 'lay6_162', 'lay6_19', 'lay6_163', 'lay6_91', 'lay6_6', 'lay6_168', 'lay6_31', 'lay6_154', 'lay6_27', 'lay6_173', 'lay6_74', 'lay6_176', 'lay6_171', 'lay6_65', 'lay6_105', 'lay6_199', 'lay6_28', 'lay6_188', 'lay6_56', 'lay6_117', 'lay6_104', 'lay6_136', 'lay6_9', 'lay6_185', 'lay6_141', 'lay6_152', 'lay6_139', 'lay6_102'] filter: 1.0
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
Solving MIP for lay6_34, [-1.2209405899047852,0.10323852300643921]=>[-1.2209405899047852,-1e-05] (-1,-1; 15,-1), time: 0.3295s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_7, [-0.1697511076927185,1.116787075996399]=>[1e-05,1.116787075996399] (15,-1; -1,-1), time: 0.3315s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_133, [-1.3229429721832275,0.09783542156219482]=>[-1.3229429721832275,-1e-05] (-1,-1; 15,-1), time: 0.3381s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_11, [-0.07278269529342651,1.5391442775726318]=>[1e-05,1.5391442775726318] (15,-1; -1,-1), time: 0.3654s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_77, [-1.2206754684448242,0.10248297452926636]=>[-1.2206754684448242,-1e-05] (-1,-1; 15,-1), time: 0.3723s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_61, [-0.11184200644493103,1.120705485343933]=>[1e-05,1.120705485343933] (15,-1; -1,-1), time: 0.3731s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_1, [-0.21319299936294556,1.2938942909240723]=>[1e-05,1.2938942909240723] (15,-1; -1,-1), time: 0.3767s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_42, [-0.024097919464111328,1.4297467470169067]=>[1e-05,1.4297467470169067] (15,-1; -1,-1), time: 0.3773s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_177, [-0.044408202171325684,1.369057536125183]=>[1e-05,1.369057536125183] (15,-1; -1,-1), time: 0.3803s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_86, [-0.0620192289352417,1.389857292175293]=>[1e-05,1.389857292175293] (15,-1; -1,-1), time: 0.2959s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_43, [-1.0720598697662354,0.22834819555282593]=>[-1.0720598697662354,-1e-05] (-1,-1; 15,-1), time: 0.6549s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_198, [-0.10183453559875488,1.6845808029174805]=>[1e-05,1.6845808029174805] (15,-1; -1,-1), time: 0.2919s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_95, [-1.356801986694336,0.11152815818786621]=>[-1.356801986694336,-1e-05] (-1,-1; 15,-1), time: 0.3094s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_125, [-0.14738982915878296,1.563668131828308]=>[1e-05,1.563668131828308] (15,-1; -1,-1), time: 0.3327s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_130, [-0.07114753127098083,1.6871860027313232]=>[1e-05,1.6871860027313232] (15,-1; -1,-1), time: 0.3325s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_138, [-1.0967638492584229,0.09449514746665955]=>[-1.0967638492584229,-1e-05] (-1,-1; 15,-1), time: 0.3404s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_58, [-0.18816977739334106,1.1779344081878662]=>[1e-05,1.1779344081878662] (15,-1; -1,-1), time: 0.2947s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_191, [-1.4609239101409912,0.1910458505153656]=>[-1.4609239101409912,-1e-05] (-1,-1; 15,-1), time: 0.2964s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_159, [-0.05413240194320679,1.4065971374511719]=>[1e-05,1.4065971374511719] (15,-1; -1,-1), time: 0.3054s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_70, [-1.1243163347244263,0.28729575872421265]=>[-1.1243163347244263,-1e-05] (-1,-1; 15,-1), time: 0.8413s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_112, [-1.0729694366455078,0.21442025899887085]=>[-1.0729694366455078,-1e-05] (-1,-1; 15,-1), time: 0.6019s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_121, [-0.4672940969467163,1.1712881326675415]=>[1e-05,1.1712881326675415] (15,-1; -1,-1), time: 3.8566s, #vars: 1563, #constrs: 867, improved: True
best_l after optimization: 51.022377014160156 with beta sum per layer: []
optimal alpha/beta time: 6.016162633895874
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.0671, -5.7582, -6.4434, -7.3919, -5.2059, -3.4293, -6.2023, -6.5319,
         -7.9923]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay6_96, [-1.1621224880218506,0.41500234603881836]=>[-1.1621224880218506,-1e-05] (-1,-1; 15,-1), time: 7.8691s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_63, [-0.46799758076667786,0.9908493161201477]=>[1e-05,0.9908493161201477] (15,-1; -1,-1), time: 7.1660s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_135, [-1.68192458152771,0.11353957653045654]=>[-1.68192458152771,-1e-05] (-1,-1; 15,-1), time: 0.2706s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_22, [-0.336107075214386,0.905014157295227]=>[1e-05,0.905014157295227] (15,-1; -1,-1), time: 1.6934s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_196, [-0.9844760894775391,0.44203394651412964]=>[-0.5252238880714869,0.16817179120097933] (9,-1; 2,-1), time: 19.9680s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_182, [-0.8345856070518494,0.39282357692718506]=>[-0.34773899030610106,0.17449044347566717] (9,-1; 2,-1), time: 21.0590s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_4, [-0.40492528676986694,1.2549803256988525]=>[1e-05,1.2549803256988525] (15,-1; -1,-1), time: 0.5964s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_146, [-1.4172194004058838,0.0683596134185791]=>[-1.4172194004058838,-1e-05] (-1,-1; 15,-1), time: 0.2782s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_99, [-0.04852193593978882,1.3692127466201782]=>[1e-05,1.3692127466201782] (15,-1; -1,-1), time: 0.2647s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_46, [-0.15008856356143951,1.288891315460205]=>[1e-05,1.288891315460205] (15,-1; -1,-1), time: 0.2857s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_52, [-0.1976374089717865,1.2456386089324951]=>[1e-05,1.2456386089324951] (15,-1; -1,-1), time: 0.5702s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_189, [-0.9295645952224731,0.5188581943511963]=>[-0.48170171731646066,0.20886428760788386] (9,-1; 2,-1), time: 21.6971s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_114, [-0.11145061254501343,1.1827207803726196]=>[1e-05,1.1827207803726196] (15,-1; -1,-1), time: 0.2796s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_92, [-0.5097273588180542,1.0414214134216309]=>[-0.023209821183003725,0.6459482188109036] (2,-1; 9,-1), time: 27.6713s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_97, [-1.170759677886963,0.11495250463485718]=>[-1.170759677886963,-1e-05] (-1,-1; 15,-1), time: 0.2651s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_25, [-0.9469952583312988,0.21320569515228271]=>[-0.47907001011074574,0.020439065985943822] (9,-1; 9,-1), time: 30.0086s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_69, [-0.43240106105804443,0.9516057968139648]=>[-0.03907057070874848,0.6117043417099816] (9,-1; 9,-1), time: 30.0129s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_83, [-0.8536472320556641,0.42408016324043274]=>[-0.46179107059038943,0.07754999962962474] (9,-1; 9,-1), time: 30.0138s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_16, [-0.940218448638916,0.377175509929657]=>[-0.537159660667722,0.04669166399541014] (9,-1; 9,-1), time: 30.0254s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_5, [-1.251757025718689,0.09282749891281128]=>[-1.251757025718689,-1e-05] (-1,-1; 15,-1), time: 0.2650s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_49, [-1.1758928298950195,0.10109114646911621]=>[-1.1758928298950195,-1e-05] (-1,-1; 15,-1), time: 0.2715s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_55, [-0.8363600969314575,0.5375450849533081]=>[-0.3958147993549811,0.1524920627777561] (9,-1; 9,-1), time: 30.0151s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_47, [-1.0272389650344849,0.4282565116882324]=>[-0.5954865788935921,0.026956673745513953] (9,-1; 9,-1), time: 30.0308s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_123, [-1.4354640245437622,0.13705766201019287]=>[-1.4354640245437622,-1e-05] (-1,-1; 15,-1), time: 0.2674s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_186, [-1.2506940364837646,0.06966018676757812]=>[-1.2506940364837646,-1e-05] (-1,-1; 15,-1), time: 0.2662s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_10, [-0.5247512459754944,0.647834300994873]=>[-0.19205916498955486,0.30091605909260927] (9,-1; 9,-1), time: 30.0145s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_40, [-0.5269079208374023,0.8120595812797546]=>[-0.12175150828400164,0.44109963096939453] (9,-1; 9,-1), time: 30.0305s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_12, [-0.8478276133537292,0.6330677270889282]=>[-0.36930778731348757,0.3073061648112466] (9,-1; 9,-1), time: 30.0170s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_169, [-1.005295991897583,0.2689985930919647]=>[-1.005295991897583,-1e-05] (-1,-1; 15,-1), time: 1.1871s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_64, [-0.2635152339935303,0.9961642026901245]=>[1e-05,0.9961642026901245] (15,-1; -1,-1), time: 0.6051s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_144, [-0.6765850782394409,0.8559367656707764]=>[-0.21298095300234196,0.425251177365922] (9,-1; 9,-1), time: 30.0104s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_80, [-0.9722204208374023,0.32808876037597656]=>[-0.9722204208374023,-1e-05] (-1,-1; 15,-1), time: 5.8282s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_51, [-0.9206655025482178,0.44716277718544006]=>[-0.4121373523931819,0.13843570997123752] (9,-1; 2,-1), time: 27.6441s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_174, [-1.006702184677124,0.7253916263580322]=>[-0.4823649568436209,0.2972405213071815] (9,-1; 9,-1), time: 30.0224s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_194, [-1.1069324016571045,0.3525545597076416]=>[-1.1069324016571045,-1e-05] (-1,-1; 15,-1), time: 7.6449s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_53, [-0.37737077474594116,0.8907794952392578]=>[1e-05,0.8907794952392578] (15,-1; -1,-1), time: 12.7097s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_124, [-0.6089723110198975,1.1854676008224487]=>[-0.13645945174230106,0.6234489777071499] (2,-1; 9,-1), time: 21.9839s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_18, [-0.1743779182434082,1.2872836589813232]=>[1e-05,1.2872836589813232] (15,-1; -1,-1), time: 0.3194s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_193, [-1.307608723640442,0.23796147108078003]=>[-1.307608723640442,-1e-05] (-1,-1; 15,-1), time: 0.3370s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_175, [-0.6422209143638611,0.9104770421981812]=>[-0.23172836924808252,0.43141949874947333] (2,-1; 2,-1), time: 22.1176s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_39, [-0.7666517496109009,0.7178020477294922]=>[-0.2455357051034587,0.36444208338524287] (9,-1; 9,-1), time: 30.0065s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_137, [-0.9981368184089661,0.4023638069629669]=>[-0.5123093765052312,0.06789816212426782] (9,-1; 2,-1), time: 22.2634s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_15, [-1.5268908739089966,0.1688055396080017]=>[-1.5268908739089966,-1e-05] (-1,-1; 15,-1), time: 0.2812s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_36, [-1.2627949714660645,0.030430972576141357]=>[-1.2627949714660645,-1e-05] (-1,-1; 15,-1), time: 0.2807s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_129, [-0.7594994306564331,0.5075565576553345]=>[-0.3705778940225687,0.1645092553472776] (9,-1; 9,-1), time: 30.0251s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_26, [-1.4978642463684082,0.11788243055343628]=>[-1.4978642463684082,-1e-05] (-1,-1; 15,-1), time: 0.2783s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_93, [-1.1289750337600708,0.11522707343101501]=>[-1.1289750337600708,-1e-05] (-1,-1; 15,-1), time: 0.2807s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_67, [-0.6437751650810242,0.8550559282302856]=>[-0.26605216104134954,0.38021641810806617] (9,-1; 2,-1), time: 26.8085s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_127, [-0.8976393938064575,0.4705645442008972]=>[-0.4862252371463862,0.08582091823928649] (9,-1; 9,-1), time: 30.0084s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_30, [-1.4347705841064453,0.0650520920753479]=>[-1.4347705841064453,-1e-05] (-1,-1; 15,-1), time: 0.2728s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_187, [-1.2400474548339844,0.16058894991874695]=>[-1.2400474548339844,-1e-05] (-1,-1; 15,-1), time: 0.2721s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_150, [-1.2193324565887451,0.19371297955513]=>[-1.2193324565887451,-1e-05] (-1,-1; 15,-1), time: 0.5266s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_192, [-1.0909489393234253,0.43659132719039917]=>[-0.5906020422058847,0.13675702911640783] (9,-1; 9,-1), time: 30.0148s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_103, [-0.942493736743927,0.4573666453361511]=>[-0.5509117261709393,0.018604612201240586] (9,-1; 9,-1), time: 30.0377s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_90, [-0.6193081140518188,0.9307105541229248]=>[-0.07883264401670491,0.5337975182577165] (2,-1; 9,-1), time: 29.5529s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_165, [-0.8133522868156433,0.6240772008895874]=>[-0.3684884465173663,0.19898983109855142] (9,-1; 2,-1), time: 24.8487s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_88, [-0.6152516603469849,0.8852519989013672]=>[-0.21390706861915662,0.4870599852053796] (9,-1; 9,-1), time: 30.0299s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_156, [-1.1064635515213013,0.4215185344219208]=>[-1.1064635515213013,-1e-05] (-1,-1; 15,-1), time: 5.6641s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_2, [-1.4276988506317139,0.20273342728614807]=>[-1.4276988506317139,-1e-05] (-1,-1; 15,-1), time: 0.5086s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_108, [-1.231569528579712,0.44984668493270874]=>[-0.674281755799328,0.07647872169176789] (9,-1; 2,-1), time: 25.6583s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_89, [-1.4759140014648438,0.11955726146697998]=>[-1.4759140014648438,-1e-05] (-1,-1; 15,-1), time: 0.2946s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_162, [-1.825786828994751,0.08817875385284424]=>[-1.825786828994751,-1e-05] (-1,-1; 15,-1), time: 0.2889s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_19, [-1.1334919929504395,0.10937261581420898]=>[-1.1334919929504395,-1e-05] (-1,-1; 15,-1), time: 0.2844s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_76, [-0.5731827020645142,0.8419376611709595]=>[-0.09563720802825698,0.4515489840781667] (9,-1; 9,-1), time: 30.0212s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_91, [-1.2971432209014893,0.14502984285354614]=>[-1.2971432209014893,-1e-05] (-1,-1; 15,-1), time: 0.3074s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_163, [-1.0860605239868164,0.2521238923072815]=>[-1.0860605239868164,-1e-05] (-1,-1; 15,-1), time: 0.5864s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_81, [-0.989959180355072,0.29654574394226074]=>[-0.5585800782879098,0.011679261162490871] (9,-1; 9,-1), time: 30.0145s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_154, [-1.4747297763824463,0.08292937278747559]=>[-1.4747297763824463,-1e-05] (-1,-1; 15,-1), time: 0.2980s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_178, [-0.41591641306877136,0.9928270578384399]=>[1e-05,0.9928270578384399] (15,-1; -1,-1), time: 8.0386s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_173, [-1.4690202474594116,0.10204780101776123]=>[-1.4690202474594116,-1e-05] (-1,-1; 15,-1), time: 0.2864s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_167, [-0.9837467670440674,0.43607819080352783]=>[-0.5593026492388863,0.07766759351903456] (9,-1; 9,-1), time: 30.0090s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_176, [-1.459568738937378,0.21397340297698975]=>[-1.459568738937378,-1e-05] (-1,-1; 15,-1), time: 0.3233s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_57, [-0.9572457075119019,0.8059611916542053]=>[-0.43230665780677646,0.37211166082194447] (9,-1; 9,-1), time: 30.0084s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_65, [-0.9682325124740601,0.2715843915939331]=>[-0.9682325124740601,-1e-05] (-1,-1; 15,-1), time: 0.9516s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_105, [-1.293351650238037,0.19763392210006714]=>[-1.293351650238037,-1e-05] (-1,-1; 15,-1), time: 0.3201s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_199, [-1.104081630706787,0.20863008499145508]=>[-1.104081630706787,-1e-05] (-1,-1; 15,-1), time: 0.3169s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_6, [-1.2465227842330933,0.21755357086658478]=>[-1.2465227842330933,-1e-05] (-1,-1; 15,-1), time: 9.6094s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_31, [-1.0354853868484497,0.27369824051856995]=>[-1.0354853868484497,-1e-05] (-1,-1; 15,-1), time: 9.8477s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_56, [-1.2337803840637207,0.16477417945861816]=>[-1.2337803840637207,-1e-05] (-1,-1; 15,-1), time: 0.3013s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_117, [-1.0791000127792358,0.2949470281600952]=>[-1.0791000127792358,-1e-05] (-1,-1; 15,-1), time: 0.9503s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_131, [-0.5774863958358765,0.8025924563407898]=>[-0.17883289325001023,0.42859463262085784] (9,-1; 9,-1), time: 30.0235s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_87, [-0.6290793418884277,0.3759438097476959]=>[-0.3024656720193005,0.09020196749009193] (9,-1; 9,-1), time: 30.0097s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_37, [-0.8014405369758606,0.2947297692298889]=>[-0.4011852421978299,0.0452643221419354] (9,-1; 9,-1), time: 30.0216s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_29, [-1.0322284698486328,0.43898069858551025]=>[-0.6069570509503431,0.02023241306503777] (9,-1; 9,-1), time: 30.0102s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_141, [-1.3000924587249756,0.28095853328704834]=>[-1.3000924587249756,-1e-05] (-1,-1; 15,-1), time: 0.6189s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_185, [-1.04195237159729,0.22948233783245087]=>[-1.04195237159729,-1e-05] (-1,-1; 15,-1), time: 1.2461s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_9, [-1.1137349605560303,0.3991883397102356]=>[-1.1137349605560303,-1e-05] (-1,-1; 15,-1), time: 1.6100s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_54, [-0.7889659404754639,0.6086792945861816]=>[-0.3639077983042983,0.24220169160432997] (9,-1; 9,-1), time: 30.0154s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_164, [-0.8740106225013733,0.2873995304107666]=>[-0.46234126792957136,0.034275747597957124] (9,-1; 9,-1), time: 30.0141s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_118, [-0.42747464776039124,0.8484196662902832]=>[-0.018371383056580485,0.4861962569680589] (9,-1; 9,-1), time: 30.0075s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_170, [-0.8336281776428223,0.41568031907081604]=>[-0.4975235408303482,0.04192154413511874] (9,-1; 9,-1), time: 30.0045s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_190, [-0.5684207677841187,0.7774714231491089]=>[-0.2283637504243054,0.3746797901749761] (9,-1; 9,-1), time: 30.0293s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_27, [-0.7492983341217041,0.5211288332939148]=>[-0.3306762579177539,0.2211636136837135] (9,-1; 2,-1), time: 26.6618s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_168, [-0.4911543130874634,1.0922775268554688]=>[-0.027644362535039907,0.6611630117910037] (9,-1; 9,-1), time: 30.0107s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_74, [-0.7163755893707275,0.6826813817024231]=>[-0.3454949618909527,0.2473609996124209] (9,-1; 9,-1), time: 30.0112s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_171, [-0.7740229368209839,0.6461058855056763]=>[-0.2425649263952278,0.3612390295922155] (9,-1; 9,-1), time: 30.0253s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_28, [-0.6916016340255737,0.7484548091888428]=>[-0.21792066777326496,0.4027952136739098] (9,-1; 9,-1), time: 30.0199s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_188, [-1.0060304403305054,0.3781830072402954]=>[-0.5591871827573753,0.061809750940653566] (9,-1; 9,-1), time: 30.0413s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_104, [-0.8368164896965027,0.6725163459777832]=>[-0.40704557808110164,0.18406758165717838] (9,-1; 9,-1), time: 30.0521s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_136, [-0.6679892539978027,0.6898535490036011]=>[-0.23974950832800265,0.3257208293236767] (9,-1; 9,-1), time: 30.0043s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_152, [-0.8223387002944946,0.5110342502593994]=>[-0.441559686660381,0.10602365919161272] (9,-1; 9,-1), time: 30.0321s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_139, [-1.0459752082824707,0.5520153045654297]=>[-0.5179970698670235,0.14429163835849945] (9,-1; 9,-1), time: 30.0147s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_102, [-0.7722834944725037,0.7642775177955627]=>[-0.3353347784337459,0.31768277206086737] (9,-1; 9,-1), time: 30.0194s, #vars: 1563, #constrs: 867, improved: True
MIP improved 125 nodes out of 125 unstable nodes, lb improved 27.941713333129883, ub improved 28.306520462036133, time 115.1115
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_30', 'lay8_150', 'lay8_87', 'lay8_27', 'lay8_147', 'lay8_80', 'lay8_132', 'lay8_112', 'lay8_56', 'lay8_153', 'lay8_68', 'lay8_73', 'lay8_78', 'lay8_169', 'lay8_117', 'lay8_107', 'lay8_51', 'lay8_162', 'lay8_74', 'lay8_157', 'lay8_181', 'lay8_19', 'lay8_54', 'lay8_10', 'lay8_92', 'lay8_177', 'lay8_26', 'lay8_12', 'lay8_190', 'lay8_191', 'lay8_39', 'lay8_182', 'lay8_108', 'lay8_42', 'lay8_175', 'lay8_122', 'lay8_46', 'lay8_170', 'lay8_163', 'lay8_55', 'lay8_53', 'lay8_61', 'lay8_194', 'lay8_185', 'lay8_16', 'lay8_145', 'lay8_186', 'lay8_5', 'lay8_66', 'lay8_33', 'lay8_125', 'lay8_64', 'lay8_31', 'lay8_171', 'lay8_24', 'lay8_57', 'lay8_123', 'lay8_44', 'lay8_180', 'lay8_81', 'lay8_99', 'lay8_164', 'lay8_105', 'lay8_168', 'lay8_93', 'lay8_28', 'lay8_83', 'lay8_173', 'lay8_151', 'lay8_174', 'lay8_188', 'lay8_90', 'lay8_96', 'lay8_139', 'lay8_102', 'lay8_124', 'lay8_110', 'lay8_75', 'lay8_159', 'lay8_178', 'lay8_97', 'lay8_43', 'lay8_140', 'lay8_198', 'lay8_152', 'lay8_121', 'lay8_144', 'lay8_23', 'lay8_15', 'lay8_100', 'lay8_126', 'lay8_156', 'lay8_40', 'lay8_69', 'lay8_118', 'lay8_148', 'lay8_154', 'lay8_77', 'lay8_193', 'lay8_62', 'lay8_9', 'lay8_91', 'lay8_52', 'lay8_197', 'lay8_86', 'lay8_94', 'lay8_88', 'lay8_128', 'lay8_119', 'lay8_165', 'lay8_85', 'lay8_20', 'lay8_129', 'lay8_11', 'lay8_22', 'lay8_47', 'lay8_36', 'lay8_189', 'lay8_13', 'lay8_135', 'lay8_106', 'lay8_17', 'lay8_98', 'lay8_3', 'lay8_6', 'lay8_95', 'lay8_134', 'lay8_50', 'lay8_142', 'lay8_70', 'lay8_18', 'lay8_167', 'lay8_7', 'lay8_131', 'lay8_172', 'lay8_35', 'lay8_41', 'lay8_115', 'lay8_143', 'lay8_120', 'lay8_21', 'lay8_49', 'lay8_29', 'lay8_179', 'lay8_138', 'lay8_160', 'lay8_59', 'lay8_4', 'lay8_161', 'lay8_2', 'lay8_137', 'lay8_127', 'lay8_48', 'lay8_65', 'lay8_141', 'lay8_195', 'lay8_176', 'lay8_192', 'lay8_0', 'lay8_82', 'lay8_114', 'lay8_1', 'lay8_104', 'lay8_109', 'lay8_63', 'lay8_32', 'lay8_38', 'lay8_130', 'lay8_133', 'lay8_155', 'lay8_34', 'lay8_196', 'lay8_184', 'lay8_166', 'lay8_25', 'lay8_149', 'lay8_111', 'lay8_146', 'lay8_76', 'lay8_58', 'lay8_158'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
Solving MIP for lay8_117, [-1.6937402486801147,0.32335299253463745]=>[-1.6937402486801147,-1e-05] (-1,-1; 15,-1), time: 0.6043s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_87, [-2.230499505996704,0.31446361541748047]=>[-2.230499505996704,-1e-05] (-1,-1; 15,-1), time: 0.6224s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_78, [-2.1104187965393066,0.3281415104866028]=>[-2.1104187965393066,-1e-05] (-1,-1; 15,-1), time: 0.6259s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_68, [-1.9417815208435059,0.25610268115997314]=>[-1.9417815208435059,-1e-05] (-1,-1; 15,-1), time: 0.6298s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_27, [-1.94185471534729,0.5042736530303955]=>[-1.94185471534729,-1e-05] (-1,-1; 15,-1), time: 0.6392s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_107, [-1.725085973739624,0.539415717124939]=>[-1.725085973739624,-1e-05] (-1,-1; 15,-1), time: 0.6427s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_132, [-2.2069222927093506,0.5300735831260681]=>[-2.2069222927093506,-1e-05] (-1,-1; 15,-1), time: 0.6466s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_30, [-1.8010547161102295,0.47546422481536865]=>[-1.8010547161102295,-1e-05] (-1,-1; 15,-1), time: 0.6576s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_153, [-2.5192794799804688,0.01184391975402832]=>[-2.5192794799804688,-1e-05] (-1,-1; 15,-1), time: 0.6695s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_51, [-2.3026604652404785,0.34251105785369873]=>[-2.3026604652404785,-1e-05] (-1,-1; 15,-1), time: 0.4639s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_181, [-2.333815574645996,0.6910349130630493]=>[-2.333815574645996,-1e-05] (-1,-1; 15,-1), time: 0.5659s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_177, [-1.8711035251617432,0.23408585786819458]=>[-1.8711035251617432,-1e-05] (-1,-1; 15,-1), time: 0.4811s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_26, [-2.1066431999206543,0.41066062450408936]=>[-2.1066431999206543,-1e-05] (-1,-1; 15,-1), time: 0.5367s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_12, [-0.8165910840034485,1.7874162197113037]=>[1e-05,1.7874162197113037] (15,-1; -1,-1), time: 0.5572s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_190, [-0.8631376028060913,1.805978775024414]=>[1e-05,1.805978775024414] (15,-1; -1,-1), time: 0.5436s, #vars: 1869, #constrs: 1226, improved: True
best_l after optimization: -4.185206413269043 with beta sum per layer: []
optimal alpha/beta time: 6.092717885971069
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.9350,  0.6495,  0.1522, -2.1776,  1.2398,  1.7354,  0.9011,  0.1069,
         -1.3571]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay8_80, [-0.9454858899116516,2.101639747619629]=>[1e-05,2.101639747619629] (15,-1; -1,-1), time: 10.4168s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_182, [-1.7107826471328735,0.6802928447723389]=>[-1.7107826471328735,-1e-05] (-1,-1; 15,-1), time: 1.0419s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_108, [-1.6560347080230713,0.7803656458854675]=>[-1.6560347080230713,-1e-05] (-1,-1; 15,-1), time: 14.3563s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_112, [-1.6517386436462402,0.9841575026512146]=>[-0.6353424764979858,0.1957808190639372] (9,-1; 9,-1), time: 30.0077s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_169, [-1.5431416034698486,1.3518750667572021]=>[-0.37689627472006587,0.517899336373099] (9,-1; 9,-1), time: 30.0097s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_147, [-1.5478155612945557,0.8335500359535217]=>[-0.6794904474848551,0.06287761159977377] (9,-1; 9,-1), time: 30.0134s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_56, [-1.5837805271148682,0.9348086714744568]=>[-0.6474954326785934,0.08550755299307666] (9,-1; 9,-1), time: 30.0228s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_150, [-1.3054468631744385,1.3192317485809326]=>[-0.4896200630089756,0.2848845790553092] (9,-1; 9,-1), time: 30.0323s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_73, [-1.789677619934082,1.7805818319320679]=>[-0.745343625678916,0.5704191709143822] (9,-1; 9,-1), time: 30.0533s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_163, [-1.7495465278625488,0.6576186418533325]=>[-1.7495465278625488,-1e-05] (-1,-1; 15,-1), time: 0.4969s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_46, [-2.7709951400756836,0.31579458713531494]=>[-2.7709951400756836,-1e-05] (-1,-1; 15,-1), time: 0.5225s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_74, [-1.0653212070465088,1.1402385234832764]=>[-0.3349558998855505,0.33734944274744666] (9,-1; 9,-1), time: 30.0107s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_157, [-1.2207461595535278,1.3299033641815186]=>[-0.29294145088409196,0.4106588258462065] (9,-1; 9,-1), time: 30.0106s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_19, [-1.188736081123352,1.195737600326538]=>[-0.4207069974882228,0.19494320678112928] (9,-1; 9,-1), time: 30.0063s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_162, [-1.3689560890197754,1.5329010486602783]=>[-0.41784026116583567,0.5806200102602749] (9,-1; 9,-1), time: 30.0338s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_54, [-1.679973840713501,1.0307797193527222]=>[-0.5951044011590791,0.33970577704304444] (9,-1; 9,-1), time: 30.0123s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_10, [-1.560431957244873,0.8538193702697754]=>[-0.615324943939697,0.12533935161882948] (9,-1; 9,-1), time: 30.0055s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_92, [-1.2018334865570068,1.062792420387268]=>[-0.42208920174263503,0.22647108594130022] (9,-1; 9,-1), time: 30.0052s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_55, [-1.8221710920333862,0.8521130681037903]=>[-1.8221710920333862,-1e-05] (-1,-1; 15,-1), time: 0.9907s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_61, [-3.1981759071350098,0.271506667137146]=>[-3.1981759071350098,-1e-05] (-1,-1; 15,-1), time: 0.5114s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_16, [-2.0082786083221436,0.49608314037323]=>[-2.0082786083221436,-1e-05] (-1,-1; 15,-1), time: 0.4805s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_194, [-1.8046875,0.4158349633216858]=>[-1.8046875,-1e-05] (-1,-1; 15,-1), time: 0.5040s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_5, [-0.7556552886962891,1.634495735168457]=>[1e-05,1.634495735168457] (15,-1; -1,-1), time: 0.4920s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_33, [-0.5997717380523682,2.522890329360962]=>[1e-05,2.522890329360962] (15,-1; -1,-1), time: 0.4677s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_125, [-1.9004511833190918,0.49339503049850464]=>[-1.9004511833190918,-1e-05] (-1,-1; 15,-1), time: 0.5072s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_64, [-0.44713616371154785,2.2948551177978516]=>[1e-05,2.2948551177978516] (15,-1; -1,-1), time: 0.4877s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_57, [-0.18880534172058105,2.6098856925964355]=>[1e-05,2.6098856925964355] (15,-1; -1,-1), time: 0.4974s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_191, [-1.5693049430847168,0.7977679967880249]=>[-0.6280125785360225,0.08116583821008078] (9,-1; 9,-1), time: 30.0085s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_39, [-1.4016810655593872,1.2915236949920654]=>[-0.43182384510340643,0.4897175809773839] (9,-1; 9,-1), time: 30.0253s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_123, [-1.6156028509140015,0.6137368083000183]=>[-1.6156028509140015,-1e-05] (-1,-1; 15,-1), time: 0.9047s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_170, [-1.8412872552871704,0.6930683851242065]=>[-1.8412872552871704,-1e-05] (-1,-1; 15,-1), time: 2.7197s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_99, [-1.993938684463501,0.672211229801178]=>[-1.993938684463501,-1e-05] (-1,-1; 15,-1), time: 0.4689s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_164, [-2.15797758102417,0.4200858473777771]=>[-2.15797758102417,-1e-05] (-1,-1; 15,-1), time: 0.4584s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_105, [-2.2380380630493164,0.1830587387084961]=>[-2.2380380630493164,-1e-05] (-1,-1; 15,-1), time: 0.4667s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_168, [-2.102670192718506,0.5809860229492188]=>[-2.102670192718506,-1e-05] (-1,-1; 15,-1), time: 0.4549s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_81, [-0.9826230406761169,1.5273728370666504]=>[1e-05,1.5273728370666504] (15,-1; -1,-1), time: 1.5183s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_93, [-0.313676118850708,2.2771902084350586]=>[1e-05,2.2771902084350586] (15,-1; -1,-1), time: 0.4648s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_28, [-2.5894827842712402,0.3676164150238037]=>[-2.5894827842712402,-1e-05] (-1,-1; 15,-1), time: 0.4614s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_83, [-0.15512561798095703,2.8330650329589844]=>[1e-05,2.8330650329589844] (15,-1; -1,-1), time: 0.4777s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_151, [-0.686396598815918,2.2989249229431152]=>[1e-05,2.2989249229431152] (15,-1; -1,-1), time: 0.4530s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_174, [-1.7192280292510986,0.6095423698425293]=>[-1.7192280292510986,-1e-05] (-1,-1; 15,-1), time: 0.4620s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_44, [-1.6792991161346436,0.7346208691596985]=>[-1.6792991161346436,-1e-05] (-1,-1; 15,-1), time: 2.9149s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_188, [-1.857492446899414,0.5279391407966614]=>[-1.857492446899414,-1e-05] (-1,-1; 15,-1), time: 0.4521s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_175, [-1.8858450651168823,0.8628837466239929]=>[-1.8858450651168823,-1e-05] (-1,-1; 15,-1), time: 9.2617s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_102, [-1.881358027458191,0.5148591995239258]=>[-1.881358027458191,-1e-05] (-1,-1; 15,-1), time: 0.4448s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_42, [-1.569333791732788,1.3136950731277466]=>[-0.4980142234031419,0.36281638729162885] (9,-1; 9,-1), time: 30.1349s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_122, [-1.7099920511245728,1.152180790901184]=>[-0.7196258752983373,0.20713383996161025] (9,-1; 9,-1), time: 30.0165s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_53, [-1.2262885570526123,1.1853283643722534]=>[-0.33310716696760434,0.37580222006598324] (9,-1; 9,-1), time: 30.0336s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_185, [-1.5249409675598145,0.708619236946106]=>[-0.5795143713826618,0.04880698487302246] (9,-1; 9,-1), time: 30.0110s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_186, [-1.2200275659561157,1.213172197341919]=>[-0.27909292472019337,0.40904632864968127] (9,-1; 9,-1), time: 30.0120s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_145, [-1.3546009063720703,1.1976549625396729]=>[-0.4001609806258673,0.35243283030207345] (9,-1; 9,-1), time: 30.0219s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_66, [-1.4610424041748047,1.1899561882019043]=>[-0.6683579076730399,0.18046123344724635] (9,-1; 9,-1), time: 30.0238s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_178, [-2.5824241638183594,0.23701214790344238]=>[-2.5824241638183594,-1e-05] (-1,-1; 15,-1), time: 0.4264s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_43, [-2.3112423419952393,0.28998327255249023]=>[-2.3112423419952393,-1e-05] (-1,-1; 15,-1), time: 0.4237s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_31, [-1.6479779481887817,0.6065014600753784]=>[-0.5022728842432604,0.1120113029989209] (9,-1; 9,-1), time: 30.0051s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_171, [-1.1629905700683594,1.3733235597610474]=>[-0.2713266507583007,0.43790138816343016] (9,-1; 9,-1), time: 30.1439s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_24, [-1.4613864421844482,0.8747797012329102]=>[-0.5740866247444262,0.06402263053377105] (9,-1; 9,-1), time: 30.0177s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_152, [-2.1516354084014893,0.2925539016723633]=>[-2.1516354084014893,-1e-05] (-1,-1; 15,-1), time: 0.4372s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_144, [-0.6839159727096558,1.8837369680404663]=>[1e-05,1.8837369680404663] (15,-1; -1,-1), time: 0.4210s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_198, [-1.9947152137756348,0.5894278287887573]=>[-1.9947152137756348,-1e-05] (-1,-1; 15,-1), time: 0.8339s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_23, [-1.6139494180679321,0.7844228744506836]=>[-1.6139494180679321,-1e-05] (-1,-1; 15,-1), time: 0.4406s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_15, [-2.4651248455047607,0.05722469091415405]=>[-2.4651248455047607,-1e-05] (-1,-1; 15,-1), time: 0.4229s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_180, [-1.4224958419799805,0.9986425042152405]=>[-0.5102552127184943,0.25252424066606677] (9,-1; 9,-1), time: 30.0285s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_156, [-1.6845989227294922,0.40765178203582764]=>[-1.6845989227294922,-1e-05] (-1,-1; 15,-1), time: 0.4194s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_100, [-0.7298381328582764,1.746678113937378]=>[1e-05,1.746678113937378] (15,-1; -1,-1), time: 0.7948s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_69, [-1.7004164457321167,0.6027474999427795]=>[-1.7004164457321167,-1e-05] (-1,-1; 15,-1), time: 0.4128s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_40, [-2.013404130935669,0.5124561190605164]=>[-2.013404130935669,-1e-05] (-1,-1; 15,-1), time: 0.7529s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_148, [-1.8721802234649658,0.6553335189819336]=>[-1.8721802234649658,-1e-05] (-1,-1; 15,-1), time: 0.4373s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_193, [-0.713523268699646,2.0980234146118164]=>[1e-05,2.0980234146118164] (15,-1; -1,-1), time: 0.4150s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_173, [-1.0087554454803467,1.2611395120620728]=>[-0.17820909078538785,0.4673172677750061] (9,-1; 9,-1), time: 30.0059s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_9, [-2.137953042984009,0.4924813508987427]=>[-2.137953042984009,-1e-05] (-1,-1; 15,-1), time: 0.4271s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_90, [-1.0693295001983643,1.2842490673065186]=>[-0.3330152222439813,0.39568363876550394] (9,-1; 9,-1), time: 30.1276s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_96, [-1.3603439331054688,1.173072338104248]=>[-0.4292859747910782,0.3539756893630719] (9,-1; 9,-1), time: 30.0087s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_139, [-0.8366113901138306,1.3324134349822998]=>[-0.022372625893800156,0.6094136408880023] (9,-1; 9,-1), time: 30.0456s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_197, [-1.765697956085205,0.6245612502098083]=>[-1.765697956085205,-1e-05] (-1,-1; 15,-1), time: 0.4310s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_94, [-2.3148536682128906,0.5743460655212402]=>[-2.3148536682128906,-1e-05] (-1,-1; 15,-1), time: 0.4136s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_88, [-1.975986361503601,0.7158051133155823]=>[-1.975986361503601,-1e-05] (-1,-1; 15,-1), time: 0.4409s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_75, [-1.8003201484680176,0.6845893859863281]=>[-1.8003201484680176,-1e-05] (-1,-1; 15,-1), time: 6.5697s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_128, [-1.4701893329620361,0.4679580330848694]=>[-1.4701893329620361,-1e-05] (-1,-1; 15,-1), time: 0.4253s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_119, [-2.471332311630249,0.1312474012374878]=>[-2.471332311630249,-1e-05] (-1,-1; 15,-1), time: 0.4146s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_97, [-1.7981003522872925,0.7764995098114014]=>[-1.7981003522872925,-1e-05] (-1,-1; 15,-1), time: 7.1959s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_20, [-2.2948708534240723,0.10888367891311646]=>[-2.2948708534240723,-1e-05] (-1,-1; 15,-1), time: 0.4090s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_124, [-1.3435906171798706,1.1216046810150146]=>[-0.41697001830042857,0.2766653445222265] (9,-1; 9,-1), time: 30.0098s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_85, [-1.6956558227539062,1.0281267166137695]=>[-1.6956558227539062,-1e-05] (-1,-1; 15,-1), time: 3.8700s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_22, [-1.5394452810287476,0.760667085647583]=>[-1.5394452810287476,-1e-05] (-1,-1; 15,-1), time: 0.8094s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_47, [-1.9771428108215332,0.16585731506347656]=>[-1.9771428108215332,-1e-05] (-1,-1; 15,-1), time: 0.4242s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_36, [-2.038741111755371,0.40740013122558594]=>[-2.038741111755371,-1e-05] (-1,-1; 15,-1), time: 0.4271s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_189, [-2.372098207473755,0.15150368213653564]=>[-2.372098207473755,-1e-05] (-1,-1; 15,-1), time: 0.4192s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_13, [-1.7093162536621094,0.7986832857131958]=>[-1.7093162536621094,-1e-05] (-1,-1; 15,-1), time: 0.7798s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_110, [-0.978726327419281,1.6039923429489136]=>[-0.016956707287725567,0.71427799401947] (9,-1; 9,-1), time: 30.0812s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_106, [-2.3993163108825684,0.1039048433303833]=>[-2.3993163108825684,-1e-05] (-1,-1; 15,-1), time: 0.4172s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_159, [-1.0967015027999878,1.3596229553222656]=>[-0.14677352545549352,0.5627249084349726] (9,-1; 9,-1), time: 30.0451s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_140, [-1.0448479652404785,1.4265234470367432]=>[-0.168260360729787,0.5885366403082161] (9,-1; 9,-1), time: 30.0342s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_121, [-1.14215886592865,1.7976471185684204]=>[-0.3246598095300062,0.6186400019579346] (9,-1; 9,-1), time: 30.0303s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_126, [-1.7452653646469116,0.6957169771194458]=>[-0.6189649337663595,0.04692921011800139] (9,-1; 9,-1), time: 30.0193s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_95, [-1.8474764823913574,0.5361673831939697]=>[-1.8474764823913574,-1e-05] (-1,-1; 15,-1), time: 0.4297s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_118, [-0.966241717338562,1.0705444812774658]=>[-0.23847847131455638,0.346086409580885] (9,-1; 9,-1), time: 30.0206s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_154, [-1.5985127687454224,0.9909213185310364]=>[-0.6065248206095605,0.17848967059377524] (9,-1; 9,-1), time: 30.0053s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_77, [-1.2874232530593872,1.4345062971115112]=>[-0.31383417331272295,0.4944164395651467] (9,-1; 9,-1), time: 30.0042s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_134, [-1.9504785537719727,0.573083758354187]=>[-1.9504785537719727,-1e-05] (-1,-1; 15,-1), time: 0.4420s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_142, [-2.9482526779174805,0.12114489078521729]=>[-2.9482526779174805,-1e-05] (-1,-1; 15,-1), time: 0.4279s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_70, [-2.326901435852051,0.13122069835662842]=>[-2.326901435852051,-1e-05] (-1,-1; 15,-1), time: 0.4333s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_18, [-2.4714395999908447,0.22393500804901123]=>[-2.4714395999908447,-1e-05] (-1,-1; 15,-1), time: 0.4241s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_62, [-1.2246590852737427,1.4884774684906006]=>[-0.20082823550217707,0.6200722610252084] (9,-1; 9,-1), time: 30.1082s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_167, [-1.8406543731689453,0.6049010157585144]=>[-1.8406543731689453,-1e-05] (-1,-1; 15,-1), time: 0.7927s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_35, [-2.1187570095062256,0.2801932096481323]=>[-2.1187570095062256,-1e-05] (-1,-1; 15,-1), time: 0.4273s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_91, [-1.714231252670288,1.4729726314544678]=>[-0.6177391669209917,0.30801994521860887] (9,-1; 9,-1), time: 30.0238s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_115, [-2.0720999240875244,0.29576730728149414]=>[-2.0720999240875244,-1e-05] (-1,-1; 15,-1), time: 0.4190s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_52, [-1.4067796468734741,1.2704569101333618]=>[-0.3921330100010916,0.5130254092945318] (9,-1; 9,-1), time: 30.1464s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_86, [-1.0025993585586548,2.136157751083374]=>[-0.01552602799616894,0.978148089014153] (9,-1; 9,-1), time: 30.0259s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_143, [-1.8126271963119507,0.651176929473877]=>[-1.8126271963119507,-1e-05] (-1,-1; 15,-1), time: 0.4190s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_120, [-2.278795003890991,0.296211838722229]=>[-2.278795003890991,-1e-05] (-1,-1; 15,-1), time: 0.4170s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_165, [-1.4947322607040405,0.9858624935150146]=>[-0.4517431456814499,0.27584939652024865] (9,-1; 9,-1), time: 30.0210s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_129, [-1.82301664352417,0.9027124643325806]=>[-0.7760698906852489,0.029169556795077274] (9,-1; 9,-1), time: 30.0090s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_3, [-1.560071587562561,0.725351095199585]=>[-1.560071587562561,-1e-05] (-1,-1; 15,-1), time: 8.9789s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_11, [-1.4568365812301636,0.7891982793807983]=>[-0.5226674478877441,0.12084805612732602] (9,-1; 9,-1), time: 30.0203s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_160, [-1.5869450569152832,0.8131072521209717]=>[-1.5869450569152832,-1e-05] (-1,-1; 15,-1), time: 1.8032s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_4, [-1.7335708141326904,0.7305600643157959]=>[-1.7335708141326904,-1e-05] (-1,-1; 15,-1), time: 0.4294s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_135, [-1.7023580074310303,0.9386821985244751]=>[-0.8440448690282342,0.022863520274061185] (9,-1; 9,-1), time: 30.0061s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_2, [-1.793803095817566,0.5152375102043152]=>[-1.793803095817566,-1e-05] (-1,-1; 15,-1), time: 0.4388s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_17, [-1.4310272932052612,1.4663543701171875]=>[-0.39701449200823724,0.5144033776521572] (9,-1; 9,-1), time: 30.0600s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_98, [-1.1651843786239624,1.0733356475830078]=>[-0.28212907462224635,0.3471356088535233] (9,-1; 9,-1), time: 30.0215s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_6, [-1.3857507705688477,0.7156966924667358]=>[-0.5103475964608327,0.020074115490667933] (9,-1; 9,-1), time: 30.0120s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_50, [-1.334800362586975,1.0409767627716064]=>[-0.519796242716601,0.11586871148633997] (9,-1; 9,-1), time: 30.0139s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_141, [-1.9660674333572388,0.44945788383483887]=>[-1.9660674333572388,-1e-05] (-1,-1; 15,-1), time: 0.4330s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_7, [-1.4779837131500244,1.1794871091842651]=>[-0.46456365639292413,0.4541441800776391] (9,-1; 9,-1), time: 30.0234s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_131, [-1.5164594650268555,0.9546921253204346]=>[-0.6585837279444808,0.05434247407189149] (9,-1; 9,-1), time: 30.0043s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_172, [-1.5546270608901978,0.7725270986557007]=>[-0.566573674498861,0.08120459422352996] (9,-1; 9,-1), time: 30.0087s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_192, [-1.700703740119934,0.5055633783340454]=>[-1.700703740119934,-1e-05] (-1,-1; 15,-1), time: 0.4433s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_195, [-1.5562251806259155,0.9556820392608643]=>[-1.5562251806259155,-1e-05] (-1,-1; 15,-1), time: 0.9742s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_41, [-0.8935303688049316,1.3221293687820435]=>[-0.01238267072622711,0.592008412199366] (9,-1; 9,-1), time: 30.0115s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_114, [-2.3867897987365723,0.4394108057022095]=>[-2.3867897987365723,-1e-05] (-1,-1; 15,-1), time: 0.4275s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_21, [-1.2759108543395996,1.0884828567504883]=>[-0.3377158203609482,0.27679231108280994] (9,-1; 9,-1), time: 30.0058s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_49, [-1.18770170211792,1.061769723892212]=>[-0.39423108659648143,0.2916963667885767] (9,-1; 9,-1), time: 30.0040s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_29, [-1.455891489982605,0.8358755111694336]=>[-0.6039730299488277,0.09272959507898361] (9,-1; 9,-1), time: 30.0216s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_109, [-2.0376157760620117,0.44706350564956665]=>[-2.0376157760620117,-1e-05] (-1,-1; 15,-1), time: 0.4238s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_38, [-2.249253034591675,0.31762170791625977]=>[-2.249253034591675,-1e-05] (-1,-1; 15,-1), time: 0.4364s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_179, [-1.2741011381149292,1.0591099262237549]=>[-0.33211385719858216,0.35032126643710293] (9,-1; 9,-1), time: 30.0052s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_138, [-1.3275566101074219,0.7868440747261047]=>[-0.4446074290235635,0.17324840236202513] (9,-1; 9,-1), time: 30.0316s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_59, [-1.73537278175354,1.2759804725646973]=>[-0.8605934265872781,0.11315655873939282] (9,-1; 9,-1), time: 30.0165s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_34, [-1.8995741605758667,0.7654684782028198]=>[-1.8995741605758667,-1e-05] (-1,-1; 15,-1), time: 0.4145s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_196, [-1.6921290159225464,0.5757474303245544]=>[-1.6921290159225464,-1e-05] (-1,-1; 15,-1), time: 0.4273s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_184, [-1.9866806268692017,0.7959907650947571]=>[-1.9866806268692017,-1e-05] (-1,-1; 15,-1), time: 0.7859s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_161, [-1.0918312072753906,1.1237696409225464]=>[-0.28509237011124344,0.2688960198533281] (9,-1; 9,-1), time: 30.0039s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_137, [-1.594922661781311,0.9117653965950012]=>[-0.5220616307693798,0.18040330910570768] (9,-1; 9,-1), time: 30.0283s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_127, [-1.297586441040039,1.2180486917495728]=>[-0.2672557505827633,0.4667082770419766] (9,-1; 9,-1), time: 30.1154s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_111, [-2.077991485595703,0.8056542873382568]=>[-2.077991485595703,-1e-05] (-1,-1; 15,-1), time: 0.9213s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_48, [-1.6440268754959106,1.0176124572753906]=>[-0.6443911809369463,0.11735434050226508] (9,-1; 9,-1), time: 30.0307s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_65, [-1.0949162244796753,1.6430250406265259]=>[-0.05098063188781714,0.8151840893458717] (9,-1; 9,-1), time: 30.0097s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_58, [-1.9999761581420898,0.6887032389640808]=>[-1.9999761581420898,-1e-05] (-1,-1; 15,-1), time: 0.5029s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_176, [-1.5105177164077759,0.8920627236366272]=>[-0.5627690334710558,0.14999063283778044] (9,-1; 9,-1), time: 30.0140s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_0, [-1.3626515865325928,1.1152753829956055]=>[-0.533287557320545,0.23624028985867415] (9,-1; 9,-1), time: 30.0268s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_82, [-1.7030102014541626,0.9435173869132996]=>[-0.6754012038625331,0.1330562297524899] (9,-1; 9,-1), time: 30.0214s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_1, [-1.2886488437652588,1.068195104598999]=>[-0.4451365855407907,0.2632563460992308] (9,-1; 9,-1), time: 30.0060s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_104, [-1.768161416053772,0.8101357817649841]=>[-0.7528505399638499,0.0013980981196661706] (9,-1; 9,-1), time: 30.0153s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_63, [-1.8786977529525757,1.0558528900146484]=>[-0.7951167132537915,0.09581002963265979] (9,-1; 9,-1), time: 30.0210s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_32, [-1.0709317922592163,1.6838942766189575]=>[-0.14678717385859402,0.7361189361761008] (9,-1; 9,-1), time: 30.0234s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_130, [-1.182560920715332,1.5548721551895142]=>[-0.19855212696252206,0.6020341037498396] (9,-1; 9,-1), time: 30.0049s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_133, [-1.463363528251648,1.3660972118377686]=>[-0.4081514544437732,0.5982071170531461] (9,-1; 9,-1), time: 30.0712s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_155, [-1.7192456722259521,0.9597222208976746]=>[-0.6823897957818532,0.168799642539442] (9,-1; 9,-1), time: 30.0043s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_166, [-1.4173866510391235,1.2430623769760132]=>[-0.5509328718456531,0.2674074681311981] (9,-1; 9,-1), time: 30.0053s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_25, [-1.3484939336776733,1.2052586078643799]=>[-0.3901220967668921,0.3623761238150198] (9,-1; 9,-1), time: 30.1000s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_149, [-1.5417087078094482,0.7801057696342468]=>[-0.5336245881075201,0.16971384906196604] (9,-1; 9,-1), time: 30.0217s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_146, [-1.349843978881836,1.2438712120056152]=>[-0.48365109447498766,0.20462833357342222] (9,-1; 9,-1), time: 30.0039s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_76, [-1.1721138954162598,1.379279375076294]=>[-0.17567228990110345,0.5565635007335616] (9,-1; 9,-1), time: 30.0062s, #vars: 1869, #constrs: 1226, improved: True
Solving MIP for lay8_158, [-1.3223521709442139,1.1149052381515503]=>[-0.4255265545839153,0.19468415963456973] (9,-1; 9,-1), time: 30.0070s, #vars: 1869, #constrs: 1226, improved: True
MIP improved 181 nodes out of 181 unstable nodes, lb improved 85.84585571289062, ub improved 111.23184204101562, time 182.2496
maximum relu layer improved by MIP so far 3
MIP finished with 317.60793590545654s
Run final alpha-CROWN after MIP solving on layer 8 and relu idx 3
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
3 /27 torch.Size([1, 200])
best_l after optimization: -19.876705169677734 with beta sum per layer: []
optimal alpha/beta time: 4.626655101776123
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 4.5853,  2.4675,  2.0292, -0.7057,  3.1363,  3.1515,  2.8309,  1.8668,
          0.5147]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[ 4.5853,  2.4675,  2.0292, -0.7057,  3.1363,  0.0000,  3.1515,  2.8309,
          1.8668,  0.5147]], device='cuda:0') min: tensor(-0.7057, device='cuda:0')
time threshold left for bab: 32.16483473777771
##### [0:15] Tested against 0 ######
init opt crown verified for label 0 with bound 4.5853424072265625
Image 15 pidx 0 verify end, Time cost: 0.0002589225769042969
15 4.5853424072265625
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0]]
##### [0:15] Tested against 1 ######
init opt crown verified for label 1 with bound 2.4674782752990723
Image 15 pidx 1 verify end, Time cost: 0.00034356117248535156
15 2.4674782752990723
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1]]
##### [0:15] Tested against 2 ######
init opt crown verified for label 2 with bound 2.0291595458984375
Image 15 pidx 2 verify end, Time cost: 0.0003402233123779297
15 2.0291595458984375
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2]]
##### [0:15] Tested against 3 ######
bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
3 /27 torch.Size([1, 200])
4 /29 torch.Size([1, 200])
best_l after optimization: 0.7056517601013184 with beta sum per layer: []
optimal alpha/beta time: 1.2703797817230225
alpha-CROWN with fixed intermediate bounds: tensor([[-0.7057]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-0.7056517601013184
layer 0 size torch.Size([200]) unstable 46
layer 1 size torch.Size([200]) unstable 43
layer 2 size torch.Size([200]) unstable 53
layer 3 size torch.Size([200]) unstable 82
layer 4 size torch.Size([200]) unstable 119
# of unstable neurons: 343
splitting decisions: [[4, 186]]
single_node_split: True
best_l after optimization: 1.1593605279922485 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.17187044024467468]
optimal alpha/beta time: 0.7583410739898682
This batch time : update_bounds func: 0.7611	 prepare: 0.0014	 bound: 0.7586	 transfer: 0.0006	 finalize: 0.0005
Accumulated time: update_bounds func: 0.7611	 prepare: 0.0014	 bound: 0.7586	 transfer: 0.0006	 finalize: 0.0005
batch bounding time:  0.7612006664276123
Current worst domains: [-0.6041899919509888, -0.5551705360412598]
length of domains: 2
Total time: 0.7824	 pickout: 0.0009	 decision: 0.0200	 get_bound: 0.7613	 add_domain: 0.0002
Current lb:-0.6041899919509888
2 neurons visited

splitting decisions: [[4, 31], [4, 31]]
single_node_split: True
best_l after optimization: 2.0056076049804688 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 1.470441222190857]
optimal alpha/beta time: 0.5745141506195068
This batch time : update_bounds func: 0.5773	 prepare: 0.0015	 bound: 0.5747	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 1.3385	 prepare: 0.0030	 bound: 1.3333	 transfer: 0.0006	 finalize: 0.0009
batch bounding time:  0.5773813724517822
Current worst domains: [-0.5525617599487305, -0.5076971054077148, -0.5008615255355835, -0.4444873332977295]
length of domains: 4
Total time: 0.5971	 pickout: 0.0009	 decision: 0.0186	 get_bound: 0.5774	 add_domain: 0.0002
Current lb:-0.5525617599487305
6 neurons visited

splitting decisions: [[4, 167], [4, 167], [4, 167], [4, 167]]
single_node_split: True
best_l after optimization: 3.2836005687713623 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 5.761552810668945]
optimal alpha/beta time: 0.5858440399169922
This batch time : update_bounds func: 0.5893	 prepare: 0.0018	 bound: 0.5861	 transfer: 0.0007	 finalize: 0.0007
Accumulated time: update_bounds func: 1.9277	 prepare: 0.0048	 bound: 1.9193	 transfer: 0.0007	 finalize: 0.0016
batch bounding time:  0.5893368721008301
Current worst domains: [-0.4909716844558716, -0.46754515171051025, -0.4451909065246582, -0.439009428024292, -0.3868250846862793, -0.3807065486907959, -0.3803079128265381, -0.293043851852417]
length of domains: 8
Total time: 0.6093	 pickout: 0.0012	 decision: 0.0184	 get_bound: 0.5894	 add_domain: 0.0004
Current lb:-0.4909716844558716
14 neurons visited

splitting decisions: [[4, 74], [4, 74], [4, 74], [4, 74], [4, 74], [4, 74], [3, 166], [4, 74]]
single_node_split: True
best_l after optimization: 1.9348069429397583 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 15.66724681854248]
optimal alpha/beta time: 0.5920026302337646
This batch time : update_bounds func: 0.5971	 prepare: 0.0026	 bound: 0.5922	 transfer: 0.0007	 finalize: 0.0015
Accumulated time: update_bounds func: 2.5248	 prepare: 0.0074	 bound: 2.5116	 transfer: 0.0007	 finalize: 0.0031
batch bounding time:  0.5971624851226807
Current worst domains: [-0.4742981195449829, -0.44814276695251465, -0.4287310838699341, -0.42012035846710205, -0.36421990394592285, -0.36171185970306396, -0.2737288475036621, -0.271151065826416, -0.2660963535308838]
length of domains: 9
Total time: 0.6185	 pickout: 0.0017	 decision: 0.0191	 get_bound: 0.5972	 add_domain: 0.0005
Current lb:-0.4742981195449829
30 neurons visited

splitting decisions: [[4, 133], [4, 133], [3, 166], [4, 133], [0, 194], [4, 133], [4, 74], [0, 194], [1, 104]]
single_node_split: True
best_l after optimization: 3.426875114440918 with beta sum per layer: [0.8703763484954834, 0.0, 0.0, 0.0, 27.060338973999023]
optimal alpha/beta time: 0.6012251377105713
This batch time : update_bounds func: 0.6068	 prepare: 0.0030	 bound: 0.6015	 transfer: 0.0008	 finalize: 0.0015
Accumulated time: update_bounds func: 3.1316	 prepare: 0.0104	 bound: 3.1130	 transfer: 0.0008	 finalize: 0.0045
batch bounding time:  0.6068766117095947
Current worst domains: [-0.45255422592163086, -0.42295289039611816, -0.39512813091278076, -0.3681448698043823, -0.35578179359436035, -0.33501720428466797, -0.3240325450897217, -0.24874329566955566, -0.2340240478515625, -0.2175452709197998]
length of domains: 13
Total time: 0.6285	 pickout: 0.0018	 decision: 0.0191	 get_bound: 0.6069	 add_domain: 0.0007
Current lb:-0.45255422592163086
48 neurons visited

splitting decisions: [[4, 153], [3, 73], [4, 153], [4, 133], [0, 84], [0, 194], [3, 73], [3, 169], [1, 45], [3, 166]]
single_node_split: True
best_l after optimization: 3.9525630474090576 with beta sum per layer: [3.4128026962280273, 0.0, 0.0, 1.6694146394729614, 45.557762145996094]
optimal alpha/beta time: 0.6012260913848877
This batch time : update_bounds func: 0.6083	 prepare: 0.0037	 bound: 0.6015	 transfer: 0.0008	 finalize: 0.0022
Accumulated time: update_bounds func: 3.7399	 prepare: 0.0141	 bound: 3.7145	 transfer: 0.0008	 finalize: 0.0067
batch bounding time:  0.608375072479248
Current worst domains: [-0.4238342046737671, -0.41382622718811035, -0.3653717041015625, -0.34359753131866455, -0.32115650177001953, -0.3068195581436157, -0.29854846000671387, -0.26299285888671875, -0.2295539379119873, -0.20987248420715332]
length of domains: 20
Total time: 0.6307	 pickout: 0.0023	 decision: 0.0191	 get_bound: 0.6084	 add_domain: 0.0009
Current lb:-0.4238342046737671
74 neurons visited

splitting decisions: [[3, 32], [3, 166], [4, 145], [3, 32], [4, 133], [4, 133], [4, 153], [3, 73], [4, 153], [0, 194]]
single_node_split: True
best_l after optimization: 2.146246910095215 with beta sum per layer: [5.58930778503418, 0.0, 0.0, 2.879624128341675, 73.38986206054688]
optimal alpha/beta time: 0.6000857353210449
This batch time : update_bounds func: 0.6097	 prepare: 0.0049	 bound: 0.6003	 transfer: 0.0009	 finalize: 0.0034
Accumulated time: update_bounds func: 4.3496	 prepare: 0.0191	 bound: 4.3148	 transfer: 0.0009	 finalize: 0.0101
batch bounding time:  0.609783411026001
Current worst domains: [-0.41303181648254395, -0.35947656631469727, -0.35817861557006836, -0.3284505605697632, -0.3259744644165039, -0.2964339256286621, -0.28217387199401855, -0.26784276962280273, -0.266806960105896, -0.22083783149719238]
length of domains: 26
Total time: 0.6341	 pickout: 0.0031	 decision: 0.0198	 get_bound: 0.6099	 add_domain: 0.0013
Current lb:-0.41303181648254395
114 neurons visited

splitting decisions: [[4, 145], [2, 74], [0, 194], [4, 153], [4, 195], [3, 73], [4, 153], [3, 171], [4, 145], [0, 194]]
single_node_split: True
best_l after optimization: 2.959555149078369 with beta sum per layer: [6.374162197113037, 0.0, 0.7563700675964355, 3.871422290802002, 96.35189056396484]
optimal alpha/beta time: 0.6190526485443115
This batch time : update_bounds func: 0.6308	 prepare: 0.0061	 bound: 0.6193	 transfer: 0.0011	 finalize: 0.0041
Accumulated time: update_bounds func: 4.9803	 prepare: 0.0252	 bound: 4.9342	 transfer: 0.0011	 finalize: 0.0142
batch bounding time:  0.6308913230895996
Current worst domains: [-0.3778327703475952, -0.34172868728637695, -0.32096779346466064, -0.31707763671875, -0.2961641550064087, -0.29138004779815674, -0.2708096504211426, -0.25409936904907227, -0.24752044677734375, -0.22841334342956543]
length of domains: 33
Total time: 0.6567	 pickout: 0.0040	 decision: 0.0201	 get_bound: 0.6310	 add_domain: 0.0016
Current lb:-0.3778327703475952
166 neurons visited

splitting decisions: [[1, 45], [0, 84], [3, 91], [3, 169], [4, 145], [0, 194], [0, 194], [1, 45], [0, 194], [0, 84]]
single_node_split: True
best_l after optimization: 4.494643211364746 with beta sum per layer: [9.85354995727539, 0.0, 1.8959250450134277, 6.6980695724487305, 102.80104064941406]
optimal alpha/beta time: 0.6139035224914551
This batch time : update_bounds func: 0.6283	 prepare: 0.0075	 bound: 0.6142	 transfer: 0.0012	 finalize: 0.0052
Accumulated time: update_bounds func: 5.6086	 prepare: 0.0327	 bound: 5.5483	 transfer: 0.0012	 finalize: 0.0194
batch bounding time:  0.6283969879150391
Current worst domains: [-0.34474432468414307, -0.33431291580200195, -0.31829798221588135, -0.30242323875427246, -0.3010139465332031, -0.25995922088623047, -0.2591073513031006, -0.23020124435424805, -0.2298651933670044, -0.21377205848693848]
length of domains: 41
Total time: 0.6568	 pickout: 0.0049	 decision: 0.0214	 get_bound: 0.6285	 add_domain: 0.0021
Current lb:-0.34474432468414307
232 neurons visited

splitting decisions: [[3, 91], [3, 91], [4, 195], [1, 168], [0, 194], [0, 194], [2, 74], [3, 169], [1, 104], [4, 195]]
single_node_split: True
best_l after optimization: 4.2528157234191895 with beta sum per layer: [17.29142951965332, 1.2364473342895508, 4.879887104034424, 10.48830795288086, 103.8913803100586]
optimal alpha/beta time: 0.6191377639770508
This batch time : update_bounds func: 0.6368	 prepare: 0.0090	 bound: 0.6194	 transfer: 0.0012	 finalize: 0.0070
Accumulated time: update_bounds func: 6.2454	 prepare: 0.0417	 bound: 6.1677	 transfer: 0.0012	 finalize: 0.0264
batch bounding time:  0.6369433403015137
Current worst domains: [-0.3304626941680908, -0.3197650909423828, -0.294744610786438, -0.28194713592529297, -0.261432409286499, -0.2398303747177124, -0.23485946655273438, -0.2246619462966919, -0.2186298370361328, -0.21369528770446777]
length of domains: 49
Total time: 0.6672	 pickout: 0.0059	 decision: 0.0218	 get_bound: 0.6371	 add_domain: 0.0024
Current lb:-0.3304626941680908
314 neurons visited

splitting decisions: [[2, 74], [2, 74], [0, 84], [4, 122], [1, 168], [1, 45], [0, 84], [0, 84], [4, 195], [1, 168]]
single_node_split: True
best_l after optimization: 5.015832424163818 with beta sum per layer: [26.405174255371094, 3.9136111736297607, 9.424308776855469, 15.598165512084961, 96.01188659667969]
optimal alpha/beta time: 0.6140611171722412
This batch time : update_bounds func: 0.6340	 prepare: 0.0106	 bound: 0.6143	 transfer: 0.0014	 finalize: 0.0075
Accumulated time: update_bounds func: 6.8794	 prepare: 0.0523	 bound: 6.7821	 transfer: 0.0014	 finalize: 0.0339
batch bounding time:  0.6341955661773682
Current worst domains: [-0.3126368522644043, -0.2991880178451538, -0.2532198429107666, -0.25261759757995605, -0.25155842304229736, -0.24693548679351807, -0.24222338199615479, -0.2289942502975464, -0.2013183832168579, -0.1996145248413086]
length of domains: 61
Total time: 0.6675	 pickout: 0.0072	 decision: 0.0221	 get_bound: 0.6344	 add_domain: 0.0039
Current lb:-0.3126368522644043
412 neurons visited

splitting decisions: [[0, 66], [4, 195], [0, 66], [0, 66], [4, 195], [4, 195], [2, 74], [3, 17], [3, 73], [4, 195]]
single_node_split: True
best_l after optimization: 4.242448806762695 with beta sum per layer: [26.76845932006836, 0.6983214020729065, 12.565923690795898, 18.724750518798828, 119.38646697998047]
optimal alpha/beta time: 0.6213226318359375
This batch time : update_bounds func: 0.6463	 prepare: 0.0133	 bound: 0.6216	 transfer: 0.0016	 finalize: 0.0095
Accumulated time: update_bounds func: 7.5257	 prepare: 0.0656	 bound: 7.4036	 transfer: 0.0016	 finalize: 0.0435
batch bounding time:  0.6464941501617432
Current worst domains: [-0.26962435245513916, -0.2647472620010376, -0.2644156217575073, -0.23078906536102295, -0.21539020538330078, -0.21001064777374268, -0.19509410858154297, -0.19478344917297363, -0.1942141056060791, -0.19339919090270996]
length of domains: 69
Total time: 0.6828	 pickout: 0.0087	 decision: 0.0238	 get_bound: 0.6467	 add_domain: 0.0037
Current lb:-0.26962435245513916
534 neurons visited

splitting decisions: [[4, 195], [4, 195], [4, 122], [1, 45], [0, 194], [0, 194], [1, 104], [1, 172], [1, 104], [1, 172]]
single_node_split: True
best_l after optimization: 5.370780944824219 with beta sum per layer: [26.21004295349121, 1.0225164890289307, 12.706963539123535, 19.780258178710938, 125.03089904785156]
optimal alpha/beta time: 0.6242859363555908
This batch time : update_bounds func: 0.6532	 prepare: 0.0145	 bound: 0.6246	 transfer: 0.0022	 finalize: 0.0116
Accumulated time: update_bounds func: 8.1789	 prepare: 0.0802	 bound: 8.0282	 transfer: 0.0022	 finalize: 0.0551
batch bounding time:  0.6533851623535156
Current worst domains: [-0.23472750186920166, -0.22993171215057373, -0.22517263889312744, -0.21682190895080566, -0.18483638763427734, -0.1844007968902588, -0.1820681095123291, -0.17744362354278564, -0.16127777099609375, -0.15706968307495117]
length of domains: 87
Total time: 0.6914	 pickout: 0.0098	 decision: 0.0232	 get_bound: 0.6536	 add_domain: 0.0048
Current lb:-0.23472750186920166
672 neurons visited

splitting decisions: [[0, 194], [0, 194], [3, 166], [4, 83], [0, 66], [1, 168], [4, 165], [3, 166], [4, 122], [3, 169]]
single_node_split: True
best_l after optimization: 2.7200465202331543 with beta sum per layer: [30.046550750732422, 2.349245071411133, 15.473810195922852, 22.774494171142578, 149.34326171875]
optimal alpha/beta time: 0.6249258518218994
This batch time : update_bounds func: 0.6598	 prepare: 0.0184	 bound: 0.6252	 transfer: 0.0023	 finalize: 0.0135
Accumulated time: update_bounds func: 8.8386	 prepare: 0.0986	 bound: 8.6534	 transfer: 0.0023	 finalize: 0.0686
batch bounding time:  0.6600322723388672
Current worst domains: [-0.20324468612670898, -0.2000870704650879, -0.1834355592727661, -0.18231236934661865, -0.17770934104919434, -0.17413997650146484, -0.17184937000274658, -0.1503835916519165, -0.1415311098098755, -0.14074742794036865]
length of domains: 87
Total time: 0.7047	 pickout: 0.0131	 decision: 0.0262	 get_bound: 0.6603	 add_domain: 0.0051
Current lb:-0.20324468612670898
846 neurons visited

splitting decisions: [[4, 122], [4, 122], [4, 83], [1, 4], [0, 66], [3, 166], [4, 165], [4, 95], [1, 168], [4, 122]]
single_node_split: True
best_l after optimization: 2.0000667572021484 with beta sum per layer: [20.75090789794922, 2.297602415084839, 11.44060230255127, 24.67343521118164, 131.7368927001953]
optimal alpha/beta time: 0.6223099231719971
This batch time : update_bounds func: 0.6564	 prepare: 0.0184	 bound: 0.6226	 transfer: 0.0021	 finalize: 0.0130
Accumulated time: update_bounds func: 9.4951	 prepare: 0.1170	 bound: 9.2760	 transfer: 0.0021	 finalize: 0.0816
batch bounding time:  0.6566901206970215
Current worst domains: [-0.1626603603363037, -0.159507155418396, -0.15948045253753662, -0.156219482421875, -0.1521151065826416, -0.14068841934204102, -0.14061379432678223, -0.13621783256530762, -0.13517868518829346, -0.13355469703674316]
length of domains: 94
Total time: 0.7010	 pickout: 0.0129	 decision: 0.0246	 get_bound: 0.6570	 add_domain: 0.0065
Current lb:-0.1626603603363037
1020 neurons visited

splitting decisions: [[3, 166], [3, 166], [3, 166], [4, 83], [0, 66], [1, 4], [1, 4], [0, 194], [4, 83], [4, 165]]
single_node_split: True
best_l after optimization: 0.04964089393615723 with beta sum per layer: [14.462361335754395, 0.7098788022994995, 15.782048225402832, 21.491024017333984, 118.90737915039062]
optimal alpha/beta time: 0.6195611953735352
This batch time : update_bounds func: 0.7083	 prepare: 0.0199	 bound: 0.6198	 transfer: 0.0019	 finalize: 0.0664
Accumulated time: update_bounds func: 10.2034	 prepare: 0.1369	 bound: 9.8959	 transfer: 0.0019	 finalize: 0.1480
batch bounding time:  0.7086055278778076
Current worst domains: [-0.12127840518951416, -0.11808359622955322, -0.11786174774169922, -0.1145104169845581, -0.1126549243927002, -0.11233735084533691, -0.11142182350158691, -0.11014759540557861, -0.10973846912384033, -0.10967278480529785]
length of domains: 73
Total time: 0.7532	 pickout: 0.0137	 decision: 0.0261	 get_bound: 0.7089	 add_domain: 0.0045
Current lb:-0.12127840518951416
1208 neurons visited

splitting decisions: [[4, 83], [4, 83], [4, 83], [0, 84], [3, 166], [0, 84], [0, 84], [0, 84], [3, 166], [4, 83]]
single_node_split: True
best_l after optimization: 0.49369150400161743 with beta sum per layer: [10.030244827270508, 0.9767636060714722, 9.387950897216797, 7.751208782196045, 66.38616943359375]
optimal alpha/beta time: 0.6188814640045166
This batch time : update_bounds func: 0.6479	 prepare: 0.0157	 bound: 0.6192	 transfer: 0.0015	 finalize: 0.0113
Accumulated time: update_bounds func: 10.8513	 prepare: 0.1526	 bound: 10.5150	 transfer: 0.0015	 finalize: 0.1593
batch bounding time:  0.6480636596679688
Current worst domains: [-0.10715854167938232, -0.10243809223175049, -0.08374357223510742, -0.08223021030426025, -0.08022868633270264, -0.07978236675262451, -0.07841861248016357, -0.07694578170776367, -0.07518959045410156, -0.07319056987762451]
length of domains: 78
Total time: 0.6892	 pickout: 0.0112	 decision: 0.0247	 get_bound: 0.6483	 add_domain: 0.0050
Current lb:-0.10715854167938232
1354 neurons visited

splitting decisions: [[0, 66], [4, 95], [4, 83], [1, 4], [1, 4], [3, 73], [4, 83], [1, 4], [1, 168], [1, 4]]
single_node_split: True
best_l after optimization: -1.7138733863830566 with beta sum per layer: [8.801250457763672, 1.4068537950515747, 10.723217010498047, 2.065711498260498, 44.457244873046875]
optimal alpha/beta time: 0.6251637935638428
This batch time : update_bounds func: 0.6568	 prepare: 0.0174	 bound: 0.6255	 transfer: 0.0016	 finalize: 0.0121
Accumulated time: update_bounds func: 11.5081	 prepare: 0.1700	 bound: 11.1405	 transfer: 0.0016	 finalize: 0.1714
batch bounding time:  0.6570456027984619
Current worst domains: [-0.0642472505569458, -0.06405794620513916, -0.06273281574249268, -0.06157493591308594, -0.059737205505371094, -0.05902838706970215, -0.05807328224182129, -0.05764949321746826, -0.05743420124053955, -0.054442524909973145]
length of domains: 62
Total time: 0.6973	 pickout: 0.0117	 decision: 0.0242	 get_bound: 0.6573	 add_domain: 0.0042
Current lb:-0.0642472505569458
1510 neurons visited

splitting decisions: [[4, 165], [4, 95], [4, 83], [4, 95], [4, 95], [4, 95], [4, 95], [4, 95], [4, 165], [4, 165]]
single_node_split: True
best_l after optimization: -2.5599422454833984 with beta sum per layer: [0.0, 1.6587233543395996, 1.3857651948928833, 0.24593240022659302, 28.29876708984375]
optimal alpha/beta time: 0.6112921237945557
This batch time : update_bounds func: 0.6363	 prepare: 0.0139	 bound: 0.6116	 transfer: 0.0014	 finalize: 0.0093
Accumulated time: update_bounds func: 12.1444	 prepare: 0.1839	 bound: 11.7520	 transfer: 0.0014	 finalize: 0.1807
batch bounding time:  0.6365201473236084
Current worst domains: [-0.03849375247955322, -0.03139925003051758, -0.02927088737487793, -0.026009798049926758, -0.023796439170837402, -0.023637056350708008, -0.022527217864990234, -0.02175009250640869, -0.02135777473449707, -0.02069568634033203]
length of domains: 40
Total time: 0.6727	 pickout: 0.0095	 decision: 0.0238	 get_bound: 0.6367	 add_domain: 0.0027
Current lb:-0.03849375247955322
1634 neurons visited

splitting decisions: [[3, 166], [0, 66], [0, 66], [4, 165], [4, 95], [4, 165], [1, 168], [4, 165], [4, 95], [4, 95]]
single_node_split: True
best_l after optimization: -2.702547073364258 with beta sum per layer: [0.0, 1.062778115272522, 0.0, 0.2647111415863037, 2.965705633163452]
optimal alpha/beta time: 0.5995941162109375
This batch time : update_bounds func: 0.6168	 prepare: 0.0095	 bound: 0.5999	 transfer: 0.0011	 finalize: 0.0062
Accumulated time: update_bounds func: 12.7612	 prepare: 0.1934	 bound: 12.3519	 transfer: 0.0011	 finalize: 0.1868
batch bounding time:  0.6169390678405762
Current worst domains: [-0.006525874137878418, -0.0018868446350097656, -0.001862645149230957]
length of domains: 3
Total time: 0.6453	 pickout: 0.0064	 decision: 0.0215	 get_bound: 0.6171	 add_domain: 0.0003
Current lb:-0.006525874137878418
1714 neurons visited

splitting decisions: [[4, 95], [4, 95], [4, 95]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -0.2374248504638672 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.046535711735486984]
optimal alpha/beta time: 0.008934736251831055
This batch time : update_bounds func: 0.0122	 prepare: 0.0020	 bound: 0.0091	 transfer: 0.0005	 finalize: 0.0005
Accumulated time: update_bounds func: 12.7734	 prepare: 0.1953	 bound: 12.3610	 transfer: 0.0005	 finalize: 0.1874
batch bounding time:  0.01227259635925293
Current worst domains: []
length of domains: 0
Total time: 0.0320	 pickout: 0.0012	 decision: 0.0184	 get_bound: 0.0123	 add_domain: 0.0000
No domains left, verification finished!
Image 15 pidx 3 verify end, Time cost: 14.971420764923096
15 999
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2], [15, 999, 1720, 14.971420764923096, 0, 3]]
##### [0:15] Tested against 4 ######
init opt crown verified for label 4 with bound 3.13634991645813
Image 15 pidx 4 verify end, Time cost: 0.0002505779266357422
15 3.13634991645813
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2], [15, 999, 1720, 14.971420764923096, 0, 3], [15, 3.13634991645813, 0, 0.0002505779266357422, 0, 4]]
##### [0:15] Tested against 5 ######
correct label, skip!
##### [0:15] Tested against 6 ######
init opt crown verified for label 6 with bound 3.1515135765075684
Image 15 pidx 6 verify end, Time cost: 0.0003211498260498047
15 3.1515135765075684
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2], [15, 999, 1720, 14.971420764923096, 0, 3], [15, 3.13634991645813, 0, 0.0002505779266357422, 0, 4], [15, 0, 0, 0, 0, 5], [15, 3.1515135765075684, 0, 0.0003211498260498047, 0, 6]]
##### [0:15] Tested against 7 ######
init opt crown verified for label 7 with bound 2.830939769744873
Image 15 pidx 7 verify end, Time cost: 0.0003533363342285156
15 2.830939769744873
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2], [15, 999, 1720, 14.971420764923096, 0, 3], [15, 3.13634991645813, 0, 0.0002505779266357422, 0, 4], [15, 0, 0, 0, 0, 5], [15, 3.1515135765075684, 0, 0.0003211498260498047, 0, 6], [15, 2.830939769744873, 0, 0.0003533363342285156, 0, 7]]
##### [0:15] Tested against 8 ######
init opt crown verified for label 8 with bound 1.8668437004089355
Image 15 pidx 8 verify end, Time cost: 0.00032067298889160156
15 1.8668437004089355
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2], [15, 999, 1720, 14.971420764923096, 0, 3], [15, 3.13634991645813, 0, 0.0002505779266357422, 0, 4], [15, 0, 0, 0, 0, 5], [15, 3.1515135765075684, 0, 0.0003211498260498047, 0, 6], [15, 2.830939769744873, 0, 0.0003533363342285156, 0, 7], [15, 1.8668437004089355, 0, 0.00032067298889160156, 0, 8]]
##### [0:15] Tested against 9 ######
init opt crown verified for label 9 with bound 0.5147349834442139
Image 15 pidx 9 verify end, Time cost: 0.0003178119659423828
15 0.5147349834442139
[[15, 0, 0, 5.544460296630859, 0, -1], [15, 0, 0, 322.2907090187073, 0, -2], [15, 4.5853424072265625, 0, 0.0002589225769042969, 0, 0], [15, 2.4674782752990723, 0, 0.00034356117248535156, 0, 1], [15, 2.0291595458984375, 0, 0.0003402233123779297, 0, 2], [15, 999, 1720, 14.971420764923096, 0, 3], [15, 3.13634991645813, 0, 0.0002505779266357422, 0, 4], [15, 0, 0, 0, 0, 5], [15, 3.1515135765075684, 0, 0.0003211498260498047, 0, 6], [15, 2.830939769744873, 0, 0.0003533363342285156, 0, 7], [15, 1.8668437004089355, 0, 0.00032067298889160156, 0, 8], [15, 0.5147349834442139, 0, 0.0003178119659423828, 0, 9]]
[[  15.            0.            0.            5.5444603     0.
    -1.        ]
 [  15.            0.            0.          322.29070902    0.
    -2.        ]
 [  15.            4.58534241    0.            0.00025892    0.
     0.        ]
 [  15.            2.46747828    0.            0.00034356    0.
     1.        ]
 [  15.            2.02915955    0.            0.00034022    0.
     2.        ]
 [  15.          999.         1720.           14.97142076    0.
     3.        ]
 [  15.            3.13634992    0.            0.00025058    0.
     4.        ]
 [  15.            0.            0.            0.            0.
     5.        ]
 [  15.            3.15151358    0.            0.00032115    0.
     6.        ]
 [  15.            2.83093977    0.            0.00035334    0.
     7.        ]
 [  15.            1.8668437     0.            0.00032067    0.
     8.        ]
 [  15.            0.51473498    0.            0.00031781    0.
     9.        ]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 342.80909633636475
mean time [cnt:1]: 342.80909633636475
