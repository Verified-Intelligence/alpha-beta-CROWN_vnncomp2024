/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Tue Nov  2 00:02:53 2021 on huan-Super-Server
Namespace(batch_size=500, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', crown=False, data='MNIST_ERAN_UN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=6, epsilon=0.015, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='eran_models/mnist_6_200_nat_old.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=16, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='mnist_6_200', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=5, timeout=300.0)
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1288: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  labels = torch.from_numpy(labels.astype(np.int))
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1292: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1,-1,1,1)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0150]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
saving results to Verified_ret_[mnist_6_200]_start=5_end=6_iter=50_b=500_int-beta=False_timeout=300.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  1  correct label  1 logits tensor([-3.7237,  9.5496,  0.7830, -0.5446, -3.1168, -1.8814, -1.2705,  2.5039,
         1.7631, -0.6686], grad_fn=<SelectBackward0>)
##### PGD attack: True label: 1, Tested against: all others ######
pgd prediction: tensor([-3.4267,  7.8106,  1.2743, -0.3240, -2.5276, -1.8348, -1.2097,  2.9689,
         1.1753, -0.4356], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([11.2373,     inf,  6.5363,  8.1346, 10.3382,  9.6454,  9.0203,  4.8417,
         6.6353,  8.2462], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-3.7237,  9.5496,  0.7830, -0.5446, -3.1168, -1.8814, -1.2705,  2.5039,
          1.7631, -0.6686]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 198.21920776367188 with beta sum per layer: []
optimal alpha/beta time: 5.502957344055176
initial alpha-CROWN bounds: tensor([[-17.2581, -24.4990, -22.6203, -21.4993, -19.9881, -20.7076, -24.7264,
         -22.5143, -24.4061]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_166', 'lay4_135', 'lay4_99', 'lay4_62', 'lay4_174', 'lay4_184', 'lay4_177', 'lay4_24', 'lay4_112', 'lay4_181', 'lay4_61', 'lay4_178', 'lay4_131', 'lay4_79', 'lay4_44', 'lay4_67', 'lay4_157', 'lay4_88', 'lay4_17', 'lay4_194', 'lay4_172', 'lay4_182', 'lay4_190', 'lay4_27', 'lay4_95', 'lay4_78', 'lay4_63', 'lay4_74', 'lay4_19', 'lay4_105', 'lay4_37', 'lay4_100', 'lay4_188', 'lay4_123', 'lay4_137', 'lay4_126', 'lay4_4', 'lay4_168', 'lay4_197', 'lay4_185', 'lay4_12', 'lay4_8', 'lay4_160', 'lay4_147', 'lay4_39', 'lay4_133', 'lay4_150', 'lay4_45', 'lay4_14', 'lay4_191', 'lay4_70', 'lay4_6', 'lay4_20', 'lay4_0', 'lay4_53', 'lay4_94', 'lay4_72', 'lay4_162', 'lay4_196', 'lay4_1', 'lay4_104', 'lay4_192', 'lay4_193', 'lay4_47', 'lay4_81', 'lay4_69', 'lay4_124', 'lay4_29', 'lay4_116', 'lay4_75', 'lay4_169', 'lay4_154', 'lay4_76', 'lay4_134', 'lay4_146', 'lay4_163', 'lay4_103', 'lay4_77', 'lay4_179', 'lay4_153', 'lay4_58', 'lay4_5', 'lay4_142', 'lay4_43'] filter: 1.0
Solving MIP for lay4_181, [-0.905093789100647,0.0089302659034729]=>[-0.905093789100647,-1e-05] (-1,-1; 15,-1), time: 0.6442s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_135, [-0.06867899000644684,0.7964410781860352]=>[1e-05,0.7964410781860352] (15,-1; -1,-1), time: 0.7744s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_99, [-0.00954119861125946,0.9772567749023438]=>[1e-05,0.9772567749023438] (15,-1; -1,-1), time: 0.8028s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_61, [-0.09925001859664917,1.0633347034454346]=>[1e-05,1.0633347034454346] (15,-1; -1,-1), time: 0.8137s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_178, [-0.9685139060020447,0.018153443932533264]=>[-0.9685139060020447,-1e-05] (-1,-1; 15,-1), time: 0.8183s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_62, [-0.8968334197998047,0.10979226231575012]=>[-0.8968334197998047,-1e-05] (-1,-1; 15,-1), time: 0.8899s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_157, [-0.9135797023773193,0.02016797661781311]=>[-0.9135797023773193,-1e-05] (-1,-1; 15,-1), time: 0.7418s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_88, [-0.09425486624240875,1.0232549905776978]=>[1e-05,1.0232549905776978] (15,-1; -1,-1), time: 0.6981s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_194, [-0.7521371841430664,0.10836774110794067]=>[-0.7521371841430664,-1e-05] (-1,-1; 15,-1), time: 0.8373s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_190, [-1.0486416816711426,0.01185491681098938]=>[-1.0486416816711426,-1e-05] (-1,-1; 15,-1), time: 0.5693s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_78, [-1.1918485164642334,0.052112966775894165]=>[-1.1918485164642334,-1e-05] (-1,-1; 15,-1), time: 0.7988s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_44, [-0.7557873725891113,0.39348065853118896]=>[-0.5775131717910648,0.20429982021417192] (2,-1; 2,-1), time: 3.3402s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_63, [-1.0222676992416382,0.019866496324539185]=>[-1.0222676992416382,-1e-05] (-1,-1; 15,-1), time: 0.6534s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_184, [-0.6945677995681763,0.20330524444580078]=>[-0.5052226664917479,0.09678198288293871] (2,-1; 2,-1), time: 3.5132s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_79, [-0.8683221340179443,0.20885610580444336]=>[-0.6865339498589227,0.08684230165546644] (2,-1; 2,-1), time: 3.6616s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_166, [-0.27230966091156006,0.8937247395515442]=>[-0.07573397691927987,0.7115199885306075] (2,-1; 2,-1), time: 3.6914s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_174, [-0.874229907989502,0.33070752024650574]=>[-0.6900122565111242,0.10182672617427752] (2,-1; 2,-1), time: 3.8928s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_131, [-0.2449384182691574,0.7355005741119385]=>[-0.08024700984213734,0.5662028059642858] (2,-1; 2,-1), time: 4.2654s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_105, [-0.9780288338661194,0.10279449820518494]=>[-0.9780288338661194,-1e-05] (-1,-1; 15,-1), time: 0.7503s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_177, [-0.8052895665168762,0.31614556908607483]=>[-0.6239096941734155,0.11725827906810563] (2,-1; 2,-1), time: 4.3268s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_17, [-0.8731884360313416,0.28190386295318604]=>[-0.7047233358886669,0.0791178945932455] (2,-1; 2,-1), time: 3.5442s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_126, [-1.019500494003296,0.07999801635742188]=>[-1.019500494003296,-1e-05] (-1,-1; 15,-1), time: 0.6167s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_4, [-1.1093672513961792,0.06825438141822815]=>[-1.1093672513961792,-1e-05] (-1,-1; 15,-1), time: 0.6681s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_27, [-0.5648767948150635,0.40779536962509155]=>[-0.426145067520946,0.2126546723734464] (2,-1; 2,-1), time: 3.5972s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_24, [-0.6864414215087891,0.3794892430305481]=>[-0.5089526876467318,0.16205798960249543] (2,-1; 2,-1), time: 5.0895s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_168, [-0.871535062789917,0.0586826354265213]=>[-0.871535062789917,-1e-05] (-1,-1; 15,-1), time: 0.7674s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_172, [-0.6025119423866272,0.4501236379146576]=>[-0.45196269186238974,0.2620127509924884] (2,-1; 2,-1), time: 5.0296s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_95, [-0.6383622288703918,0.3431166708469391]=>[-0.44387832433131635,0.18682032954276076] (2,-1; 2,-1), time: 5.6714s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_112, [-0.6317172050476074,0.33558738231658936]=>[-0.38549439614614045,0.21802416368565145] (2,-1; 2,-1), time: 7.4117s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_100, [-0.6029686331748962,0.3531368672847748]=>[-0.4740026953704386,0.20412855971055416] (2,-1; 2,-1), time: 3.8150s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_123, [-0.6343031525611877,0.37663519382476807]=>[-0.47420091811205534,0.22892930223126293] (2,-1; 2,-1), time: 3.3269s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_182, [-0.4927964508533478,0.45119696855545044]=>[-0.27026557909563415,0.34919601873279216] (2,-1; 2,-1), time: 6.7081s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_67, [-0.7230929136276245,0.25354212522506714]=>[-0.48477953362560905,0.10028212748620409] (2,-1; 2,-1), time: 7.8212s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_147, [-0.8790568113327026,0.07025271654129028]=>[-0.8790568113327026,-1e-05] (-1,-1; 15,-1), time: 0.6650s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_133, [-1.0137947797775269,0.0256536602973938]=>[-1.0137947797775269,-1e-05] (-1,-1; 15,-1), time: 0.7768s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_45, [-0.04935407638549805,1.463698387145996]=>[1e-05,1.463698387145996] (15,-1; -1,-1), time: 0.7894s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_137, [-0.2821294367313385,0.8236101269721985]=>[-0.049218091404682786,0.6623145379674844] (2,-1; 2,-1), time: 4.2538s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_37, [-0.4968039393424988,0.3419361114501953]=>[-0.38511247236619933,0.1737528626009085] (2,-1; 2,-1), time: 4.9589s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_188, [-0.7172688841819763,0.2239183932542801]=>[-0.4843021353922249,0.13183555748214992] (2,-1; 2,-1), time: 4.8510s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_19, [-0.4717806577682495,0.6309496164321899]=>[-0.23394450336823205,0.46108361200841147] (2,-1; 2,-1), time: 5.4113s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_70, [-0.9552358984947205,0.04623761773109436]=>[-0.9552358984947205,-1e-05] (-1,-1; 15,-1), time: 0.6503s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_6, [-0.9908277988433838,0.04964616894721985]=>[-0.9908277988433838,-1e-05] (-1,-1; 15,-1), time: 0.7543s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_0, [-1.0005459785461426,0.039541274309158325]=>[-1.0005459785461426,-1e-05] (-1,-1; 15,-1), time: 0.6696s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_12, [-0.7316803336143494,0.20794768631458282]=>[-0.5545215895301564,0.07318304670484257] (2,-1; 2,-1), time: 4.2917s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_197, [-0.6560990810394287,0.14223326742649078]=>[-0.5302062891052467,0.0014896510356055173] (2,-1; 2,-1), time: 4.4188s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_53, [-1.1167093515396118,0.1866777539253235]=>[-1.1167093515396118,-1e-05] (-1,-1; 15,-1), time: 1.0511s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_1, [-1.1374621391296387,0.0123424232006073]=>[-1.1374621391296387,-1e-05] (-1,-1; 15,-1), time: 0.7018s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_104, [-0.11953870952129364,1.159280776977539]=>[1e-05,1.159280776977539] (15,-1; -1,-1), time: 0.7969s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_192, [-1.0717628002166748,0.036640673875808716]=>[-1.0717628002166748,-1e-05] (-1,-1; 15,-1), time: 0.6288s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_160, [-0.7094142436981201,0.28913143277168274]=>[-0.5085609695184203,0.12929348788388575] (2,-1; 2,-1), time: 4.5927s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_185, [-0.779759407043457,0.3166393041610718]=>[-0.5307678320672236,0.19168408645985238] (2,-1; 2,-1), time: 5.4431s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_74, [-1.0423897504806519,0.15496477484703064]=>[-0.7669154724240556,0.0030498018482250644] (2,-1; 2,-1), time: 7.2943s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_8, [-0.6818150877952576,0.20499750971794128]=>[-0.5375402361233157,0.03795397510942741] (2,-1; 2,-1), time: 5.1213s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_124, [-0.9706916809082031,0.0766451358795166]=>[-0.9706916809082031,-1e-05] (-1,-1; 15,-1), time: 0.7595s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_116, [-0.0664127916097641,0.9030588865280151]=>[1e-05,0.9030588865280151] (15,-1; -1,-1), time: 0.7673s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_47, [-0.9136471152305603,0.16069456934928894]=>[-0.9136471152305603,-1e-05] (-1,-1; 15,-1), time: 1.3967s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_39, [-0.792414128780365,0.15929163992404938]=>[-0.5942007599276452,0.02859582002693633] (2,-1; 2,-1), time: 4.2860s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_69, [-0.18579068779945374,0.6973642110824585]=>[1e-05,0.6973642110824585] (15,-1; -1,-1), time: 1.4004s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_191, [-0.43886953592300415,0.3715703785419464]=>[-0.28894341937244544,0.22988573187220934] (2,-1; 2,-1), time: 4.3209s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_14, [-0.9017525315284729,0.15425890684127808]=>[-0.6858466359276293,0.03839038590445415] (2,-1; 2,-1), time: 4.6384s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_154, [-0.7698588371276855,0.14964520931243896]=>[-0.7698588371276855,-1e-05] (-1,-1; 15,-1), time: 0.9374s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_162, [-0.5386008024215698,0.505932629108429]=>[-0.4016011354157895,0.293689438589683] (2,-1; 2,-1), time: 3.5988s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_94, [-0.7539634704589844,0.262306809425354]=>[-0.525692383180054,0.1092526892751767] (2,-1; 2,-1), time: 4.2041s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_196, [-0.5265125632286072,0.4063992500305176]=>[-0.3934021016738258,0.27106071092675765] (2,-1; 2,-1), time: 4.0030s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_72, [-0.7724334597587585,0.2556663453578949]=>[-0.5722323584268375,0.10497973355255] (2,-1; 2,-1), time: 4.6138s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_150, [-0.7111759185791016,0.39367780089378357]=>[-0.5073760337548662,0.15170528911790626] (2,-1; 2,-1), time: 6.1995s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_193, [-0.6891598105430603,0.2209683656692505]=>[-0.4659703566097012,0.15042010103005385] (2,-1; 2,-1), time: 3.9111s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_75, [-0.7089076042175293,0.3089439272880554]=>[-0.526021518272125,0.14676487145083786] (2,-1; 2,-1), time: 3.0321s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_81, [-0.5586224794387817,0.4515581727027893]=>[-0.34031109801309734,0.3217611211062149] (2,-1; 2,-1), time: 3.9460s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_29, [-0.7224652767181396,0.3154487907886505]=>[-0.5617851136070384,0.14088511999737596] (2,-1; 2,-1), time: 3.8404s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_76, [-0.5087211728096008,0.5171014070510864]=>[-0.33019717742708027,0.40643764315108866] (2,-1; 2,-1), time: 3.1181s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_169, [-0.6838424205780029,0.45872974395751953]=>[-0.4910361565534916,0.2962122764218482] (2,-1; 2,-1), time: 4.4319s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_134, [-1.05802321434021,0.20140588283538818]=>[-0.8482726068479962,0.0017144386818319212] (2,-1; 2,-1), time: 4.2440s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_163, [-0.46043288707733154,0.4626743197441101]=>[-0.3390315303388995,0.31486258259502525] (2,-1; 2,-1), time: 3.6516s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_20, [-0.9295870065689087,0.12704750895500183]=>[-0.6764438951517303,0.02117717955207703] (2,-1; 2,-1), time: 7.7662s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_103, [-0.5073771476745605,0.4630526900291443]=>[-0.2856410743583611,0.3307322128381459] (2,-1; 2,-1), time: 3.7635s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_146, [-0.7290249466896057,0.16726884245872498]=>[-0.5386479421340816,0.013318686383243386] (2,-1; 2,-1), time: 4.3577s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_179, [-0.7962027192115784,0.29437172412872314]=>[-0.586564967109433,0.11270272397350908] (2,-1; 2,-1), time: 3.8736s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_153, [-1.039832592010498,0.3815179765224457]=>[-0.799879882658029,0.11852601078034715] (2,-1; 2,-1), time: 3.6381s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_58, [-0.7680526375770569,0.3207876682281494]=>[-0.6405486645601646,0.12476533598327866] (2,-1; 2,-1), time: 3.4662s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_77, [-0.6806413531303406,0.3811114728450775]=>[-0.5131844150205606,0.14161992498621506] (2,-1; 2,-1), time: 5.0412s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_43, [-0.8131844997406006,0.2914399802684784]=>[-0.638165858973239,0.09033279939615446] (2,-1; 2,-1), time: 3.6342s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_142, [-0.6141903400421143,0.4044177234172821]=>[-0.4556559625356561,0.18600309886908306] (2,-1; 2,-1), time: 4.1810s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_5, [-0.6851682066917419,0.31006747484207153]=>[-0.5407264394003161,0.09969211774550156] (2,-1; 2,-1), time: 5.1434s, #vars: 1275, #constrs: 535, improved: True
MIP improved 84 nodes out of 84 unstable nodes, lb improved 10.624856948852539, ub improved 10.151691436767578, time 19.4258
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_1', 'lay6_173', 'lay6_161', 'lay6_34', 'lay6_110', 'lay6_57', 'lay6_18', 'lay6_28', 'lay6_41', 'lay6_163', 'lay6_183', 'lay6_169', 'lay6_134', 'lay6_131', 'lay6_150', 'lay6_99', 'lay6_111', 'lay6_160', 'lay6_29', 'lay6_196', 'lay6_73', 'lay6_53', 'lay6_133', 'lay6_78', 'lay6_124', 'lay6_105', 'lay6_77', 'lay6_149', 'lay6_52', 'lay6_165', 'lay6_148', 'lay6_35', 'lay6_37', 'lay6_174', 'lay6_123', 'lay6_136', 'lay6_61', 'lay6_167', 'lay6_9', 'lay6_8', 'lay6_13', 'lay6_176', 'lay6_178', 'lay6_2', 'lay6_75', 'lay6_90', 'lay6_58', 'lay6_42', 'lay6_38', 'lay6_170', 'lay6_4', 'lay6_12', 'lay6_188', 'lay6_129', 'lay6_22', 'lay6_50', 'lay6_198', 'lay6_121', 'lay6_197', 'lay6_158', 'lay6_96', 'lay6_59', 'lay6_10', 'lay6_108', 'lay6_46', 'lay6_186', 'lay6_112', 'lay6_3', 'lay6_135', 'lay6_33', 'lay6_86', 'lay6_127', 'lay6_132', 'lay6_98', 'lay6_125', 'lay6_54', 'lay6_151', 'lay6_64', 'lay6_21', 'lay6_36', 'lay6_93', 'lay6_118', 'lay6_142', 'lay6_88', 'lay6_156', 'lay6_119', 'lay6_15', 'lay6_65', 'lay6_193', 'lay6_106', 'lay6_199', 'lay6_126', 'lay6_97', 'lay6_128', 'lay6_195', 'lay6_113', 'lay6_23', 'lay6_117', 'lay6_32', 'lay6_139', 'lay6_83', 'lay6_152', 'lay6_89', 'lay6_6', 'lay6_30', 'lay6_26', 'lay6_91', 'lay6_162', 'lay6_157', 'lay6_153'] filter: 1.0
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
Solving MIP for lay6_18, [-1.0585174560546875,0.15702909231185913]=>[-1.0585174560546875,-1e-05] (-1,-1; 15,-1), time: 0.4093s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_28, [-0.0140572190284729,1.3484065532684326]=>[1e-05,1.3484065532684326] (15,-1; -1,-1), time: 0.4155s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-1.2056572437286377,0.05994617938995361]=>[-1.2056572437286377,-1e-05] (-1,-1; 15,-1), time: 0.4413s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_163, [-0.16777175664901733,1.096701979637146]=>[1e-05,1.096701979637146] (15,-1; -1,-1), time: 0.4459s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_1, [-1.3751132488250732,0.11913079023361206]=>[-1.3751132488250732,-1e-05] (-1,-1; 15,-1), time: 0.4679s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_183, [-0.10815775394439697,1.3324766159057617]=>[1e-05,1.3324766159057617] (15,-1; -1,-1), time: 0.4724s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_57, [-1.748382806777954,0.0007767677307128906]=>[-1.748382806777954,-1e-05] (-1,-1; 15,-1), time: 0.4946s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_111, [-0.09863540530204773,1.2354053258895874]=>[1e-05,1.2354053258895874] (15,-1; -1,-1), time: 0.3711s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_196, [-1.0492231845855713,0.1186370849609375]=>[-1.0492231845855713,-1e-05] (-1,-1; 15,-1), time: 0.3684s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-0.965471088886261,0.24345999956130981]=>[-0.965471088886261,-1e-05] (-1,-1; 15,-1), time: 0.8786s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_173, [-1.3351402282714844,0.25816071033477783]=>[-1.3351402282714844,-1e-05] (-1,-1; 15,-1), time: 0.8918s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_160, [-0.9883518815040588,0.21368777751922607]=>[-0.9883518815040588,-1e-05] (-1,-1; 15,-1), time: 0.7532s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_169, [-0.29136982560157776,1.250125527381897]=>[1e-05,1.250125527381897] (15,-1; -1,-1), time: 1.1825s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-1.2088892459869385,0.21111458539962769]=>[-1.2088892459869385,-1e-05] (-1,-1; 15,-1), time: 0.7725s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_149, [-1.3296678066253662,0.05545356869697571]=>[-1.3296678066253662,-1e-05] (-1,-1; 15,-1), time: 0.3817s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-1.1632224321365356,0.22721543908119202]=>[-1.1632224321365356,-1e-05] (-1,-1; 15,-1), time: 0.7932s, #vars: 1581, #constrs: 894, improved: True
best_l after optimization: 14.794353485107422 with beta sum per layer: []
optimal alpha/beta time: 6.154487133026123
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.7660, -4.1459, -1.6952, -1.2817,  0.5524, -0.3773, -4.6621, -1.7896,
         -2.1611]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay6_134, [-0.2548927366733551,0.9163802266120911]=>[1e-05,0.9163802266120911] (15,-1; -1,-1), time: 6.6470s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_133, [-0.38854557275772095,0.7774420976638794]=>[1e-05,0.7774420976638794] (15,-1; -1,-1), time: 8.5372s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_174, [-0.23730936646461487,1.2197000980377197]=>[1e-05,1.2197000980377197] (15,-1; -1,-1), time: 0.3716s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-0.3527117371559143,0.800537645816803]=>[1e-05,0.800537645816803] (15,-1; -1,-1), time: 10.4127s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_105, [-0.9780648350715637,0.3910539150238037]=>[-0.9780648350715637,-1e-05] (-1,-1; 15,-1), time: 9.6609s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-0.9044750928878784,0.376203715801239]=>[-0.9044750928878784,-1e-05] (-1,-1; 15,-1), time: 10.3737s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-0.3864414691925049,1.0747545957565308]=>[1e-05,1.0747545957565308] (15,-1; -1,-1), time: 6.9670s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_148, [-1.1499884128570557,0.36367735266685486]=>[-0.7281716085641677,0.005017347149663354] (9,-1; 2,-1), time: 21.4170s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-0.4662845730781555,0.8492639064788818]=>[-0.13826045884942234,0.38480233663309543] (2,-1; 9,-1), time: 23.7545s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_13, [-1.4984891414642334,0.004754126071929932]=>[-1.4984891414642334,-1e-05] (-1,-1; 15,-1), time: 0.3688s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-1.1667377948760986,0.43681782484054565]=>[-0.6987126482280268,0.03665834502643976] (9,-1; 2,-1), time: 23.8306s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_176, [-1.1834027767181396,0.0449180006980896]=>[-1.1834027767181396,-1e-05] (-1,-1; 15,-1), time: 0.3826s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-0.9252108931541443,0.37144237756729126]=>[-0.9252108931541443,-1e-05] (-1,-1; 15,-1), time: 14.5815s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_2, [-1.3216190338134766,0.1936124563217163]=>[-1.3216190338134766,-1e-05] (-1,-1; 15,-1), time: 0.6814s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_52, [-0.37903010845184326,0.8820208311080933]=>[-0.003765893790988994,0.5276858413883502] (9,-1; 2,-1), time: 24.8290s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_90, [-1.5746984481811523,0.05193507671356201]=>[-1.5746984481811523,-1e-05] (-1,-1; 15,-1), time: 0.3740s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-1.0657422542572021,0.26990509033203125]=>[-1.0657422542572021,-1e-05] (-1,-1; 15,-1), time: 0.7268s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_9, [-0.3067860007286072,0.8448932766914368]=>[1e-05,0.8448932766914368] (15,-1; -1,-1), time: 9.4487s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-0.4063522517681122,1.2746472358703613]=>[1e-05,1.2746472358703613] (15,-1; -1,-1), time: 1.4614s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_4, [-1.2250759601593018,0.23886007070541382]=>[-1.2250759601593018,-1e-05] (-1,-1; 15,-1), time: 0.7236s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-0.25547537207603455,1.1087462902069092]=>[1e-05,1.1087462902069092] (15,-1; -1,-1), time: 0.8429s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_188, [-1.3060238361358643,0.020354509353637695]=>[-1.3060238361358643,-1e-05] (-1,-1; 15,-1), time: 0.3562s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_150, [-0.4970913529396057,0.6588900685310364]=>[-0.09143034487738515,0.34867966026651437] (9,-1; 2,-1), time: 28.0493s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_131, [-0.6433156728744507,0.808720052242279]=>[-0.22244850543475025,0.3952813283727081] (2,-1; 9,-1), time: 28.3425s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_22, [-1.237536907196045,0.15459883213043213]=>[-1.237536907196045,-1e-05] (-1,-1; 15,-1), time: 0.3411s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_129, [-1.4382071495056152,0.061229050159454346]=>[-1.4382071495056152,-1e-05] (-1,-1; 15,-1), time: 0.3590s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_99, [-0.5743089318275452,0.6345529556274414]=>[-0.1915590509058944,0.277757219471286] (9,-1; 2,-1), time: 28.6786s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_197, [-1.2287039756774902,0.04399159550666809]=>[-1.2287039756774902,-1e-05] (-1,-1; 15,-1), time: 0.3304s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_121, [-1.4974342584609985,0.2880721688270569]=>[-1.4974342584609985,-1e-05] (-1,-1; 15,-1), time: 0.6481s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_158, [-1.3452348709106445,0.2221524715423584]=>[-1.3452348709106445,-1e-05] (-1,-1; 15,-1), time: 0.3573s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_198, [-1.2237324714660645,0.2443639636039734]=>[-1.2237324714660645,-1e-05] (-1,-1; 15,-1), time: 0.9900s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_34, [-0.8146998882293701,0.3534098267555237]=>[-0.4108593590955597,0.05500105400456178] (9,-1; 9,-1), time: 30.0125s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_108, [-0.2535800635814667,1.1268116235733032]=>[1e-05,1.1268116235733032] (15,-1; -1,-1), time: 0.3344s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_35, [-0.495486319065094,0.7547832727432251]=>[-0.09808643651855685,0.3883407976028118] (9,-1; 2,-1), time: 28.3653s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_46, [-1.2619980573654175,0.04439443349838257]=>[-1.2619980573654175,-1e-05] (-1,-1; 15,-1), time: 0.3325s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_78, [-0.8082101345062256,0.5213022828102112]=>[-0.39340789155547573,0.15732123243145377] (9,-1; 9,-1), time: 30.0140s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_77, [-0.7949289083480835,0.41582638025283813]=>[-0.4352377270508489,0.06834314463839805] (9,-1; 9,-1), time: 30.0282s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-1.3150296211242676,0.1272103190422058]=>[-1.3150296211242676,-1e-05] (-1,-1; 15,-1), time: 0.3269s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_33, [-1.2993764877319336,0.090717613697052]=>[-1.2993764877319336,-1e-05] (-1,-1; 15,-1), time: 0.3350s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-1.0905245542526245,0.312153160572052]=>[-1.0905245542526245,-1e-05] (-1,-1; 15,-1), time: 1.1042s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_86, [-1.2103471755981445,0.17687201499938965]=>[-1.2103471755981445,-1e-05] (-1,-1; 15,-1), time: 0.3465s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-0.7739895582199097,0.25880110263824463]=>[-0.7739895582199097,-1e-05] (-1,-1; 15,-1), time: 1.6177s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-1.2924487590789795,0.11087620258331299]=>[-1.2924487590789795,-1e-05] (-1,-1; 15,-1), time: 0.3435s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-1.2227792739868164,0.019417762756347656]=>[-1.2227792739868164,-1e-05] (-1,-1; 15,-1), time: 0.3461s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-0.6500155925750732,0.6936561465263367]=>[-0.16476130937009786,0.42529089251033436] (9,-1; 2,-1), time: 22.0331s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_125, [-1.0191820859909058,0.2154267430305481]=>[-1.0191820859909058,-1e-05] (-1,-1; 15,-1), time: 0.9442s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_37, [-0.9042003750801086,0.3831001818180084]=>[-0.4610443396533514,0.04465965973065236] (9,-1; 2,-1), time: 27.5162s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_98, [-0.32711273431777954,0.870444118976593]=>[1e-05,0.870444118976593] (15,-1; -1,-1), time: 2.2852s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_123, [-0.6466706991195679,0.9231618642807007]=>[-0.19979315001300804,0.4910017430049846] (2,-1; 9,-1), time: 28.4779s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_36, [-0.3879956007003784,0.9805210828781128]=>[1e-05,0.9805210828781128] (15,-1; -1,-1), time: 6.2583s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_118, [-0.9147145748138428,0.4079083800315857]=>[-0.9147145748138428,-1e-05] (-1,-1; 15,-1), time: 10.1167s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-0.8885848522186279,0.3344782292842865]=>[-0.4793352326394082,0.02026054761375688] (9,-1; 9,-1), time: 30.0180s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_178, [-0.7493821978569031,0.540930449962616]=>[-0.33498767541493046,0.15955288288412062] (9,-1; 9,-1), time: 30.0232s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_64, [-0.7388187050819397,0.5197268128395081]=>[-0.3756826364467935,0.1708873675163079] (9,-1; 2,-1), time: 22.4792s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-0.5076704025268555,0.6693128943443298]=>[-0.13224294749296217,0.34159265845337267] (9,-1; 9,-1), time: 30.0190s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_38, [-0.8756901621818542,0.397311270236969]=>[-0.4932302533531727,0.022371991787584537] (9,-1; 9,-1), time: 30.0226s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_12, [-0.5744548439979553,0.6922659277915955]=>[-0.18324743603500188,0.3237085336533268] (9,-1; 9,-1), time: 30.0336s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_50, [-0.5866679549217224,0.9134590029716492]=>[-0.14443921534362028,0.5540223652260344] (9,-1; 9,-1), time: 30.0248s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_193, [-0.9804965853691101,0.26567602157592773]=>[-0.9804965853691101,-1e-05] (-1,-1; 15,-1), time: 0.8652s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-0.7611598968505859,0.5648120641708374]=>[-0.3823386581702022,0.17294330439031252] (9,-1; 9,-1), time: 30.0307s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_199, [-1.121847152709961,0.2558146119117737]=>[-1.121847152709961,-1e-05] (-1,-1; 15,-1), time: 0.5834s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-0.7400664687156677,0.5477172136306763]=>[-0.3606092733905817,0.164420610749521] (9,-1; 9,-1), time: 30.0312s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_59, [-0.8466315269470215,0.5251747369766235]=>[-0.40568656558257465,0.1839350273342165] (9,-1; 9,-1), time: 30.0671s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_97, [-1.3010530471801758,0.11231124401092529]=>[-1.3010530471801758,-1e-05] (-1,-1; 15,-1), time: 0.3241s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-1.087525486946106,0.2505115568637848]=>[-1.087525486946106,-1e-05] (-1,-1; 15,-1), time: 1.1289s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_119, [-1.297231912612915,0.27531665563583374]=>[-1.297231912612915,-1e-05] (-1,-1; 15,-1), time: 4.3790s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_23, [-1.425419569015503,0.3758946657180786]=>[-1.425419569015503,-1e-05] (-1,-1; 15,-1), time: 1.0497s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_112, [-0.8168440461158752,0.5185697078704834]=>[-0.4404489938927456,0.09446152712940949] (9,-1; 9,-1), time: 30.0320s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_93, [-0.6461541652679443,0.6160414218902588]=>[-0.20284932494321084,0.308143458873677] (9,-1; 2,-1), time: 23.1099s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_54, [-0.8380191326141357,0.51439368724823]=>[-0.41806077650249995,0.09676171490730867] (9,-1; 9,-1), time: 30.0385s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_32, [-1.2837824821472168,0.4253365695476532]=>[-1.2837824821472168,-1e-05] (-1,-1; 15,-1), time: 1.9948s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_151, [-0.5015201568603516,0.680401086807251]=>[-0.07970765343067505,0.41054054845310284] (9,-1; 9,-1), time: 30.0264s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_152, [-1.2100603580474854,0.20363569259643555]=>[-1.2100603580474854,-1e-05] (-1,-1; 15,-1), time: 0.6130s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-0.8494033217430115,0.4320145845413208]=>[-0.42465324984396385,0.10098913732656536] (9,-1; 9,-1), time: 30.0901s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_195, [-1.1158814430236816,0.3893619775772095]=>[-1.1158814430236816,-1e-05] (-1,-1; 15,-1), time: 5.7766s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_142, [-0.8243426084518433,0.48060429096221924]=>[-0.3717400365171233,0.11822856300014077] (9,-1; 9,-1), time: 30.0211s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_162, [-1.663413166999817,0.327603280544281]=>[-1.663413166999817,-1e-05] (-1,-1; 15,-1), time: 0.3438s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-0.8350534439086914,0.43685996532440186]=>[-0.44318395286588574,0.05386913927418494] (9,-1; 2,-1), time: 25.1771s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_88, [-1.0101585388183594,0.5569596290588379]=>[-0.6287871299022985,0.07839493925886391] (9,-1; 9,-1), time: 30.0385s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-0.5232043266296387,1.2596635818481445]=>[-0.09999949487663187,0.7020843715906521] (9,-1; 2,-1), time: 29.1873s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-0.6378217339515686,0.5662475824356079]=>[-0.2778848593881911,0.20764503989516053] (9,-1; 2,-1), time: 22.9424s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-0.7953805327415466,0.6558342576026917]=>[-0.3270481771103367,0.316818433701612] (9,-1; 2,-1), time: 24.4602s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_15, [-0.6382932662963867,0.9117783308029175]=>[-0.22296140216628274,0.4419723860766064] (2,-1; 9,-1), time: 28.9001s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_89, [-0.7582383155822754,0.9927242994308472]=>[-0.24891090815583486,0.551982384862104] (9,-1; 2,-1), time: 23.7048s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_113, [-1.0592412948608398,0.5061423778533936]=>[-0.5444044601534722,0.09559962886380324] (9,-1; 2,-1), time: 27.2360s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_126, [-1.092950463294983,0.5672452449798584]=>[-0.6143697450367651,0.15102035865651903] (9,-1; 9,-1), time: 30.0421s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_128, [-0.7504763603210449,0.6608231067657471]=>[-0.30753801881073195,0.2831189747823925] (9,-1; 9,-1), time: 30.0522s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_26, [-1.0209256410598755,0.3595404624938965]=>[-0.5216913430738246,0.049420776191355965] (9,-1; 2,-1), time: 26.2267s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-0.8531153202056885,0.5814902186393738]=>[-0.336148036435324,0.21648141916134997] (9,-1; 9,-1), time: 30.0419s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_6, [-0.9265127182006836,0.4307725131511688]=>[-0.5051865085565631,0.052427412749945404] (9,-1; 9,-1), time: 30.0184s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_30, [-0.7203233242034912,0.5956316590309143]=>[-0.2891930871575153,0.24372486568770374] (9,-1; 9,-1), time: 30.0179s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_91, [-0.4958180785179138,0.9196503162384033]=>[-0.07563739989905895,0.4991782841635812] (9,-1; 9,-1), time: 30.0444s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_157, [-1.1244244575500488,0.4919488728046417]=>[-0.6775336276396973,0.0420693600696156] (9,-1; 9,-1), time: 30.0363s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_153, [-0.8491616249084473,0.6596036553382874]=>[-0.3953596723769423,0.26803523429311465] (9,-1; 9,-1), time: 30.0232s, #vars: 1581, #constrs: 894, improved: True
MIP improved 110 nodes out of 110 unstable nodes, lb improved 24.08219337463379, ub improved 26.96457862854004, time 112.4085
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_68', 'lay8_69', 'lay8_29', 'lay8_134', 'lay8_131', 'lay8_26', 'lay8_80', 'lay8_175', 'lay8_16', 'lay8_50', 'lay8_19', 'lay8_87', 'lay8_167', 'lay8_37', 'lay8_143', 'lay8_191', 'lay8_106', 'lay8_46', 'lay8_51', 'lay8_169', 'lay8_35', 'lay8_124', 'lay8_67', 'lay8_92', 'lay8_108', 'lay8_145', 'lay8_119', 'lay8_178', 'lay8_118', 'lay8_30', 'lay8_71', 'lay8_91', 'lay8_95', 'lay8_164', 'lay8_11', 'lay8_75', 'lay8_156', 'lay8_102', 'lay8_6', 'lay8_94', 'lay8_100', 'lay8_23', 'lay8_78', 'lay8_183', 'lay8_74', 'lay8_125', 'lay8_42', 'lay8_99', 'lay8_117', 'lay8_170', 'lay8_52', 'lay8_132', 'lay8_120', 'lay8_39', 'lay8_105', 'lay8_137', 'lay8_18', 'lay8_129', 'lay8_43', 'lay8_60', 'lay8_44', 'lay8_115', 'lay8_122', 'lay8_17', 'lay8_144', 'lay8_186', 'lay8_110', 'lay8_34', 'lay8_116', 'lay8_190', 'lay8_163', 'lay8_63', 'lay8_7', 'lay8_121', 'lay8_199', 'lay8_85', 'lay8_90', 'lay8_112', 'lay8_93', 'lay8_84', 'lay8_48', 'lay8_157', 'lay8_123', 'lay8_14', 'lay8_188', 'lay8_151', 'lay8_47', 'lay8_24', 'lay8_179', 'lay8_83', 'lay8_152', 'lay8_176', 'lay8_5', 'lay8_177', 'lay8_32', 'lay8_59', 'lay8_79', 'lay8_54', 'lay8_171', 'lay8_9', 'lay8_196', 'lay8_166', 'lay8_77', 'lay8_103', 'lay8_114', 'lay8_161', 'lay8_172', 'lay8_96', 'lay8_140', 'lay8_27', 'lay8_150', 'lay8_153', 'lay8_185', 'lay8_181', 'lay8_3', 'lay8_174', 'lay8_109', 'lay8_168', 'lay8_2', 'lay8_165', 'lay8_61', 'lay8_98', 'lay8_189', 'lay8_64', 'lay8_41', 'lay8_147', 'lay8_56', 'lay8_31', 'lay8_81', 'lay8_139', 'lay8_142', 'lay8_10', 'lay8_104', 'lay8_13', 'lay8_107', 'lay8_197', 'lay8_12', 'lay8_73', 'lay8_128', 'lay8_182', 'lay8_15', 'lay8_1', 'lay8_135', 'lay8_20', 'lay8_180', 'lay8_49', 'lay8_72', 'lay8_155', 'lay8_45', 'lay8_141', 'lay8_97', 'lay8_86', 'lay8_184', 'lay8_4', 'lay8_66', 'lay8_38', 'lay8_25', 'lay8_22', 'lay8_21', 'lay8_173', 'lay8_192', 'lay8_195', 'lay8_136', 'lay8_28', 'lay8_133', 'lay8_162', 'lay8_127', 'lay8_65', 'lay8_70', 'lay8_82', 'lay8_0', 'lay8_53', 'lay8_8', 'lay8_158', 'lay8_111', 'lay8_154', 'lay8_130', 'lay8_160', 'lay8_57', 'lay8_76', 'lay8_33'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -29.007068634033203 with beta sum per layer: []
optimal alpha/beta time: 0.04022717475891113
alpha-CROWN with intermediate bounds by MIP: tensor([[5.5313, 1.0211, 3.2428, 4.1658, 5.0908, 4.0252, 0.1871, 2.6568, 3.0861]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
min of alpha-CROWN bounds 0.18706893920898438>=0, verified!
MIP finished with 135.37339901924133s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -29.007068634033203 with beta sum per layer: []
optimal alpha/beta time: 0.028430700302124023
alpha-CROWN with intermediate bounds improved by MIP: tensor([[5.5313, 1.0211, 3.2428, 4.1658, 5.0908, 4.0252, 0.1871, 2.6568, 3.0861]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[5.5313, 0.0000, 1.0211, 3.2428, 4.1658, 5.0908, 4.0252, 0.1871, 2.6568,
         3.0861]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
time threshold left for bab: 158.68736147880554
bab-refine verified success!
[[  5.           0.           0.           5.85503602   0.
   -1.        ]
 [  5.           0.           0.         135.45760632   0.
   -2.        ]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 141.31264233589172
mean time [cnt:1]: 141.31264233589172
