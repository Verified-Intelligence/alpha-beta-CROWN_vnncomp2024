Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_6_200_nat.pth
  name: mnist_6_200
data:
  start: 15
  end: 16
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.015
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 22:29:07 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0150]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_200]_start=15_end=16_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 5, correct label 5, image norm 85.56078338623047, logits tensor([-3.2725, -1.8112, -1.2011,  3.5138, -2.6684,  6.1777, -1.7582, -1.4164,
         0.0590,  1.4769], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-3.2725, -1.8112, -1.2011,  3.5138, -2.6684,  6.1777, -1.7582, -1.4164,
          0.0590,  1.4769]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-23.5861, -34.3970, -36.6445, -32.8058, -33.4114, -26.2925, -38.7090,
         -35.6338, -37.3745]], device='cuda:0') None
best_l after optimization: 218.48046875 with beta sum per layer: []
alpha/beta optimization time: 7.969405174255371
initial alpha-CROWN bounds: tensor([[-16.2415, -24.7461, -27.0858, -23.8505, -24.0391, -19.3862, -28.5613,
         -26.4701, -28.0998]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-28.5613, device='cuda:0', grad_fn=<MinBackward1>)
##### PGD attack: True label: 5, Tested against: ['all'] ######
pgd prediction: tensor([-3.5921, -1.4796, -0.9557,  3.8821, -2.1419,  5.4839, -2.2259, -1.3851,
        -0.1577,  1.4086], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([9.0760, 6.9634, 6.4395, 1.6018, 7.6258,    inf, 7.7097, 6.8689, 5.6415,
        4.0752], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Sorted order for labels to verify: [3, 9, 8, 2, 7, 1, 4, 6, 0, 5]
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 712.9944509506226]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_45', 'lay4_104', 'lay4_166', 'lay4_8', 'lay4_87', 'lay4_4', 'lay4_192', 'lay4_23', 'lay4_42', 'lay4_179', 'lay4_178', 'lay4_148', 'lay4_15', 'lay4_73', 'lay4_150', 'lay4_10', 'lay4_97', 'lay4_18', 'lay4_187', 'lay4_121', 'lay4_136', 'lay4_93', 'lay4_32', 'lay4_108', 'lay4_29', 'lay4_20', 'lay4_50', 'lay4_17', 'lay4_169', 'lay4_1', 'lay4_82', 'lay4_26', 'lay4_156', 'lay4_47', 'lay4_177', 'lay4_102', 'lay4_162', 'lay4_56', 'lay4_13', 'lay4_154', 'lay4_142', 'lay4_38', 'lay4_28', 'lay4_59', 'lay4_181', 'lay4_193', 'lay4_77', 'lay4_116', 'lay4_86', 'lay4_149', 'lay4_12', 'lay4_24', 'lay4_168', 'lay4_16', 'lay4_21', 'lay4_172', 'lay4_174', 'lay4_41', 'lay4_190', 'lay4_127', 'lay4_182'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_42, [-0.7706947326660156,0.3900146484375]=>[-0.5309451174124509,0.18510484262304627] (2,-1; 2,-1), time: 4.2182s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_178, [-0.40243738889694214,0.5717169046401978]=>[-0.18133122622044642,0.4175122468845857] (2,-1; 2,-1), time: 6.0189s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_73, [-0.6453688144683838,0.605277419090271]=>[-0.3454773332187088,0.4243791262166938] (2,-1; 2,-1), time: 6.3899s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_45, [-0.8769540786743164,0.6385089159011841]=>[-0.6226782272010001,0.3277390561091119] (2,-1; 2,-1), time: 6.6180s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_87, [-0.4313877522945404,0.6600875854492188]=>[-0.2006377788566004,0.44777533677053016] (2,-1; 2,-1), time: 6.7366s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_10, [-0.9637387990951538,0.26837295293807983]=>[-0.7600569197119942,0.009255521070470013] (2,-1; 2,-1), time: 6.8474s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_179, [-0.6661456227302551,0.5320152044296265]=>[-0.36364438598019483,0.39443351994717657] (2,-1; 2,-1), time: 7.2619s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_148, [-0.8309295177459717,0.2132691740989685]=>[-0.5800084115997874,0.023252832560130346] (2,-1; 2,-1), time: 7.3257s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_8, [-0.6083294153213501,0.598554253578186]=>[-0.3711908226483194,0.3896505082965257] (2,-1; 2,-1), time: 7.5509s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_121, [-1.0238542556762695,0.16610044240951538]=>[-1.0238542556762695,-1e-05] (-1,-1; 15,-1), time: 1.0766s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_136, [-0.9453466534614563,0.10946536064147949]=>[-0.9453466534614563,-1e-05] (-1,-1; 15,-1), time: 0.9938s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_4, [-0.6294192671775818,0.5267150402069092]=>[-0.3547225075372259,0.3232350643789282] (2,-1; 2,-1), time: 7.8773s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_97, [-0.8787068724632263,0.3673497438430786]=>[-0.6975154406018182,0.12249281352758015] (2,-1; 2,-1), time: 4.0188s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_108, [-1.4619132280349731,0.058021724224090576]=>[-1.4619132280349731,-1e-05] (-1,-1; 15,-1), time: 0.8809s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_32, [-0.9640031456947327,0.04732504487037659]=>[-0.9640031456947327,-1e-05] (-1,-1; 15,-1), time: 0.9528s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_23, [-0.4539843201637268,0.7021312713623047]=>[-0.3235972926965488,0.379286834774795] (2,-1; 2,-1), time: 8.7205s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_20, [-1.0940680503845215,0.0972861647605896]=>[-1.0940680503845215,-1e-05] (-1,-1; 15,-1), time: 1.0609s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_82, [-1.0696710348129272,0.0914846658706665]=>[-1.0696710348129272,-1e-05] (-1,-1; 15,-1), time: 0.8593s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_104, [-0.9795856475830078,0.563862681388855]=>[-0.6406019464867229,0.29743466274703095] (2,-1; 2,-1), time: 9.3184s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_192, [-0.5548843741416931,0.643508791923523]=>[-0.28122963866363365,0.39668274631090117] (2,-1; 2,-1), time: 9.6313s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_156, [-1.0456377267837524,0.07982778549194336]=>[-1.0456377267837524,-1e-05] (-1,-1; 15,-1), time: 1.0072s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_166, [-0.5241468548774719,0.7106876373291016]=>[-0.2461797549912074,0.47657386052956796] (2,-1; 2,-1), time: 9.8630s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_17, [-0.9920617341995239,0.2203214466571808]=>[-0.9920617341995239,-1e-05] (-1,-1; 15,-1), time: 2.3333s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_26, [-0.9029437303543091,0.1611466109752655]=>[-0.9029437303543091,-1e-05] (-1,-1; 15,-1), time: 1.5306s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_150, [-0.7617263793945312,0.46177440881729126]=>[-0.44559046851475215,0.23548492487903638] (2,-1; 2,-1), time: 10.3738s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_15, [-0.8158870935440063,0.34611424803733826]=>[-0.543513518620688,0.1207216020961092] (2,-1; 2,-1), time: 10.5483s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_102, [-0.9670478701591492,0.08995725214481354]=>[-0.9670478701591492,-1e-05] (-1,-1; 15,-1), time: 0.9481s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_13, [-1.0710716247558594,0.10785141587257385]=>[-1.0710716247558594,-1e-05] (-1,-1; 15,-1), time: 1.0219s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_28, [-0.01250237226486206,1.1350462436676025]=>[1e-05,1.1350462436676025] (15,-1; -1,-1), time: 0.7565s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_50, [-0.2962288558483124,0.9399631023406982]=>[-0.03555981285140439,0.761413673728671] (2,-1; 2,-1), time: 3.8764s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_1, [-0.3462317883968353,0.8753869533538818]=>[-0.1672019652942707,0.6610610840452583] (2,-1; 2,-1), time: 4.0854s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_187, [-0.964442789554596,0.20562005043029785]=>[-0.6870043737126792,0.018813258388204777] (2,-1; 2,-1), time: 6.1122s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_193, [-0.9717951416969299,0.05068501830101013]=>[-0.9717951416969299,-1e-05] (-1,-1; 15,-1), time: 0.9443s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_93, [-0.8105712532997131,0.19913309812545776]=>[-0.597422307952622,0.00225706247730401] (2,-1; 2,-1), time: 6.5086s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_18, [-0.7009977698326111,0.5576268434524536]=>[-0.3608493772766844,0.3664538891768945] (2,-1; 2,-1), time: 7.5356s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_169, [-0.8110322952270508,0.380615234375]=>[-0.5658667240693803,0.16100032000012784] (2,-1; 2,-1), time: 5.8908s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_142, [-0.3967384397983551,0.5975000858306885]=>[-0.22045801598486126,0.40635138581365937] (2,-1; 2,-1), time: 4.4306s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_29, [-0.43292558193206787,0.6727181673049927]=>[-0.13882214175790147,0.46532635078916385] (2,-1; 2,-1), time: 7.7614s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_24, [-0.8332229852676392,0.17369624972343445]=>[-0.8332229852676392,-1e-05] (-1,-1; 15,-1), time: 1.2942s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_38, [-0.7490204572677612,0.224107563495636]=>[-0.549606094577586,0.056099607592164244] (2,-1; 2,-1), time: 5.0647s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_56, [-0.30361881852149963,0.6665939688682556]=>[-0.17507152762195782,0.4135783685031006] (2,-1; 2,-1), time: 6.0734s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_162, [-0.24481119215488434,0.7552964687347412]=>[-0.07092117935893294,0.5474440545696635] (2,-1; 2,-1), time: 6.2058s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_154, [-0.529167652130127,0.4919702410697937]=>[-0.3857011068597887,0.25965620347969387] (2,-1; 2,-1), time: 5.7768s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_21, [-0.07295495271682739,1.0176687240600586]=>[1e-05,1.0176687240600586] (15,-1; -1,-1), time: 0.7691s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_47, [-0.7560077905654907,0.4362022876739502]=>[-0.5706929107358008,0.12287831794308325] (2,-1; 2,-1), time: 7.6072s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_41, [-1.1554675102233887,0.03496565669775009]=>[-1.1554675102233887,-1e-05] (-1,-1; 15,-1), time: 0.9342s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_174, [-0.09226050972938538,1.493486762046814]=>[1e-05,1.493486762046814] (15,-1; -1,-1), time: 1.0239s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_16, [-0.18622878193855286,0.9291548132896423]=>[1e-05,0.9291548132896423] (15,-1; -1,-1), time: 1.7027s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_181, [-0.7832446694374084,0.22525474429130554]=>[-0.5647108856143386,0.050545429177327315] (2,-1; 2,-1), time: 6.1210s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_116, [-0.5776994228363037,0.35898590087890625]=>[-0.4211636372876642,0.20542735329441755] (2,-1; 2,-1), time: 5.2098s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_77, [-0.4438774585723877,0.7674014568328857]=>[-0.16476319852340512,0.602835648861085] (2,-1; 2,-1), time: 5.5660s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_177, [-0.5237244367599487,0.6180094480514526]=>[-0.20040041449912177,0.4500286805221656] (2,-1; 2,-1), time: 9.4424s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_86, [-0.42814427614212036,0.6891340613365173]=>[-0.13612028579785293,0.5213014043602453] (2,-1; 2,-1), time: 7.0840s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_12, [-0.5624600648880005,0.4525206983089447]=>[-0.33821037009820915,0.25980094974365425] (2,-1; 2,-1), time: 6.0919s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_127, [-0.5291714072227478,0.5117651224136353]=>[-0.2890856603089732,0.37947121188579025] (2,-1; 2,-1), time: 3.5471s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_172, [-0.7099871635437012,0.3629205822944641]=>[-0.5132134020926681,0.1593725191235994] (2,-1; 2,-1), time: 4.2065s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_182, [-0.6613938808441162,0.5420433878898621]=>[-0.42085824180240683,0.3452514906996461] (2,-1; 2,-1), time: 3.4513s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_190, [-0.7033663392066956,0.4511530101299286]=>[-0.5808995333637308,0.1662219827659045] (2,-1; 2,-1), time: 4.9385s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_149, [-0.41132792830467224,0.5336480140686035]=>[-0.23277643562285086,0.30366531898472054] (2,-1; 2,-1), time: 7.8593s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_168, [-0.5142562985420227,0.6127827167510986]=>[-0.23119263768769885,0.43992865850163426] (2,-1; 2,-1), time: 6.4616s, #vars: 1277, #constrs: 538, improved: True
Solving MIP for lay4_59, [-0.6837967038154602,0.32822805643081665]=>[-0.32546169826289933,0.24212666548073125] (9,-1; 2,-1), time: 16.0037s, #vars: 1277, #constrs: 538, improved: True
MIP improved 61 nodes out of 61 unstable nodes, lb improved 10.599604606628418, ub improved 10.405489921569824, time 28.0368
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_102', 'lay6_139', 'lay6_152', 'lay6_141', 'lay6_185', 'lay6_9', 'lay6_136', 'lay6_104', 'lay6_117', 'lay6_56', 'lay6_188', 'lay6_28', 'lay6_199', 'lay6_105', 'lay6_65', 'lay6_171', 'lay6_176', 'lay6_74', 'lay6_173', 'lay6_27', 'lay6_154', 'lay6_31', 'lay6_168', 'lay6_6', 'lay6_91', 'lay6_163', 'lay6_19', 'lay6_162', 'lay6_89', 'lay6_2', 'lay6_190', 'lay6_170', 'lay6_118', 'lay6_164', 'lay6_178', 'lay6_156', 'lay6_54', 'lay6_187', 'lay6_150', 'lay6_30', 'lay6_29', 'lay6_37', 'lay6_93', 'lay6_87', 'lay6_26', 'lay6_36', 'lay6_15', 'lay6_131', 'lay6_57', 'lay6_193', 'lay6_18', 'lay6_167', 'lay6_108', 'lay6_81', 'lay6_165', 'lay6_76', 'lay6_88', 'lay6_194', 'lay6_67', 'lay6_64', 'lay6_90', 'lay6_103', 'lay6_169', 'lay6_192', 'lay6_137', 'lay6_186', 'lay6_80', 'lay6_123', 'lay6_53', 'lay6_49', 'lay6_5', 'lay6_175', 'lay6_127', 'lay6_97', 'lay6_129', 'lay6_114', 'lay6_39', 'lay6_52', 'lay6_46', 'lay6_99', 'lay6_124', 'lay6_146', 'lay6_4', 'lay6_51', 'lay6_22', 'lay6_135', 'lay6_174', 'lay6_144', 'lay6_12', 'lay6_40', 'lay6_112', 'lay6_189', 'lay6_63', 'lay6_121', 'lay6_196', 'lay6_92', 'lay6_159', 'lay6_191', 'lay6_10', 'lay6_58', 'lay6_130', 'lay6_47', 'lay6_125', 'lay6_138', 'lay6_198', 'lay6_95', 'lay6_55', 'lay6_86', 'lay6_70', 'lay6_182', 'lay6_42', 'lay6_25', 'lay6_83', 'lay6_7', 'lay6_69', 'lay6_61', 'lay6_1', 'lay6_77', 'lay6_43', 'lay6_133', 'lay6_177', 'lay6_96', 'lay6_34', 'lay6_16', 'lay6_11'] filter: 1.0
Solving MIP for lay6_199, [-1.1040817499160767,0.2086302638053894]=>[-1.1040817499160767,-1e-05] (-1,-1; 15,-1), time: 0.4536s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_105, [-1.293351650238037,0.1976349949836731]=>[-1.293351650238037,-1e-05] (-1,-1; 15,-1), time: 0.4612s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_56, [-1.2337802648544312,0.16477423906326294]=>[-1.2337802648544312,-1e-05] (-1,-1; 15,-1), time: 0.4624s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_176, [-1.4595688581466675,0.21397382020950317]=>[-1.4595688581466675,-1e-05] (-1,-1; 15,-1), time: 0.3349s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_173, [-1.4690202474594116,0.10204792022705078]=>[-1.4690202474594116,-1e-05] (-1,-1; 15,-1), time: 0.3405s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_141, [-1.3000924587249756,0.28095877170562744]=>[-1.3000924587249756,-1e-05] (-1,-1; 15,-1), time: 0.8164s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_154, [-1.4747296571731567,0.08292926102876663]=>[-1.4747296571731567,-1e-05] (-1,-1; 15,-1), time: 0.3672s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_65, [-0.9682325124740601,0.27158433198928833]=>[-0.9682325124740601,-1e-05] (-1,-1; 15,-1), time: 1.2600s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_117, [-1.0791000127792358,0.2949461042881012]=>[-1.0791000127792358,-1e-05] (-1,-1; 15,-1), time: 1.2680s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_91, [-1.2971431016921997,0.14502763748168945]=>[-1.2971431016921997,-1e-05] (-1,-1; 15,-1), time: 0.3589s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_185, [-1.0419522523880005,0.22948117554187775]=>[-1.0419522523880005,-1e-05] (-1,-1; 15,-1), time: 1.8411s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_19, [-1.1334919929504395,0.10937231779098511]=>[-1.1334919929504395,-1e-05] (-1,-1; 15,-1), time: 0.3459s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_9, [-1.1137349605560303,0.39918822050094604]=>[-1.1137349605560303,-1e-05] (-1,-1; 15,-1), time: 2.2200s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_163, [-1.0860605239868164,0.25212380290031433]=>[-1.0860605239868164,-1e-05] (-1,-1; 15,-1), time: 0.6867s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_162, [-1.825786828994751,0.08817882835865021]=>[-1.825786828994751,-1e-05] (-1,-1; 15,-1), time: 0.3038s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_89, [-1.4759138822555542,0.11955726146697998]=>[-1.4759138822555542,-1e-05] (-1,-1; 15,-1), time: 0.3703s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_2, [-1.4276981353759766,0.20273357629776]=>[-1.4276981353759766,-1e-05] (-1,-1; 15,-1), time: 0.6430s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_6, [-1.2465227842330933,0.21755342185497284]=>[-1.2465227842330933,-1e-05] (-1,-1; 15,-1), time: 12.8111s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_104, [-0.8368163704872131,0.6725163459777832]=>[-0.40384458743692936,0.20176151133972176] (9,-1; 9,-1), time: 30.0105s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_136, [-0.6679892539978027,0.6898537278175354]=>[-0.2568752589510798,0.33065024634907497] (9,-1; 9,-1), time: 30.0141s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_152, [-0.8223388195037842,0.5110329389572144]=>[-0.4579796061874304,0.10968606182667362] (9,-1; 9,-1), time: 30.0183s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_102, [-0.772283673286438,0.7642775177955627]=>[-0.32250225309194264,0.3281572054452974] (9,-1; 9,-1), time: 30.0324s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_28, [-0.6916015148162842,0.7484548091888428]=>[-0.21952010702690522,0.4077514110798232] (9,-1; 9,-1), time: 30.0313s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_139, [-1.0459753274917603,0.5520153045654297]=>[-0.5121836101843794,0.14637691966899494] (9,-1; 9,-1), time: 30.0325s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_188, [-1.0060303211212158,0.37818318605422974]=>[-0.5560635889406358,0.05856057433812877] (9,-1; 9,-1), time: 30.0585s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_171, [-0.7740226984024048,0.6461058855056763]=>[-0.2602340220555284,0.36534852428902365] (9,-1; 9,-1), time: 30.0629s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_187, [-1.2400473356246948,0.16058899462223053]=>[-1.2400473356246948,-1e-05] (-1,-1; 15,-1), time: 0.2827s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_30, [-1.4347705841064453,0.06505199521780014]=>[-1.4347705841064453,-1e-05] (-1,-1; 15,-1), time: 0.3579s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_74, [-0.7163752317428589,0.6826814413070679]=>[-0.35261703772928155,0.25088294518249493] (9,-1; 9,-1), time: 30.0331s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_93, [-1.1289751529693604,0.11522796750068665]=>[-1.1289751529693604,-1e-05] (-1,-1; 15,-1), time: 0.3001s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_150, [-1.2193325757980347,0.1937130093574524]=>[-1.2193325757980347,-1e-05] (-1,-1; 15,-1), time: 0.6391s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_27, [-0.7492982745170593,0.5211288928985596]=>[-0.327379048750566,0.22486637273977383] (9,-1; 9,-1), time: 30.0347s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_31, [-1.0354852676391602,0.27369779348373413]=>[-0.546251257559691,0.0006905531398290769] (9,-1; 9,-1), time: 30.0517s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_26, [-1.4978646039962769,0.1178821325302124]=>[-1.4978646039962769,-1e-05] (-1,-1; 15,-1), time: 0.3648s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_36, [-1.262795090675354,0.030430853366851807]=>[-1.262795090675354,-1e-05] (-1,-1; 15,-1), time: 0.2853s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_15, [-1.5268909931182861,0.1688058227300644]=>[-1.5268909931182861,-1e-05] (-1,-1; 15,-1), time: 0.2763s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_18, [-0.17437785863876343,1.2872836589813232]=>[1e-05,1.2872836589813232] (15,-1; -1,-1), time: 0.2670s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_168, [-0.49115365743637085,1.0922775268554688]=>[-0.033535594230647406,0.6708093287509145] (9,-1; 9,-1), time: 30.0123s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_193, [-1.307608723640442,0.23796147108078003]=>[-1.307608723640442,-1e-05] (-1,-1; 15,-1), time: 0.3781s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_190, [-0.5684200525283813,0.7774713635444641]=>[-0.22024941561102218,0.3666322371242275] (9,-1; 9,-1), time: 30.0251s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_170, [-0.8336281776428223,0.4156803488731384]=>[-0.4918674301860755,0.061401641628763916] (9,-1; 9,-1), time: 30.0527s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_118, [-0.42747464776039124,0.848419725894928]=>[-0.03652652284468269,0.5006211166961654] (9,-1; 9,-1), time: 30.0082s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_156, [-1.1064635515213013,0.4215186536312103]=>[-1.1064635515213013,-1e-05] (-1,-1; 15,-1), time: 8.5148s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_178, [-0.4159162640571594,0.9928273558616638]=>[1e-05,0.9928273558616638] (15,-1; -1,-1), time: 10.4005s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_64, [-0.2635152041912079,0.9961642026901245]=>[1e-05,0.9961642026901245] (15,-1; -1,-1), time: 0.6872s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_194, [-1.1069320440292358,0.35255447030067444]=>[-1.1069320440292358,-1e-05] (-1,-1; 15,-1), time: 8.9809s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_164, [-0.8740105628967285,0.28739941120147705]=>[-0.46581399210259944,0.040940528659447306] (9,-1; 9,-1), time: 30.0094s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_169, [-1.0052958726882935,0.2689984440803528]=>[-1.0052958726882935,-1e-05] (-1,-1; 15,-1), time: 2.1639s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_108, [-1.231569528579712,0.44984668493270874]=>[-0.6993720762873133,0.07639169031475788] (9,-1; 2,-1), time: 25.9554s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_165, [-0.8133522868156433,0.6240769624710083]=>[-0.39903665461342247,0.1989720180008001] (9,-1; 2,-1), time: 26.9570s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_186, [-1.2506941556930542,0.06966014951467514]=>[-1.2506941556930542,-1e-05] (-1,-1; 15,-1), time: 0.3502s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_54, [-0.788966953754425,0.6086792945861816]=>[-0.35925954990113307,0.2537877964173389] (9,-1; 9,-1), time: 30.0218s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_29, [-1.0322284698486328,0.4389804005622864]=>[-0.6064692820227334,0.040354856395757185] (9,-1; 9,-1), time: 30.0247s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_37, [-0.8014408349990845,0.2947304844856262]=>[-0.404116967617144,0.04329179981620202] (9,-1; 9,-1), time: 30.0389s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_123, [-1.4354629516601562,0.1370576024055481]=>[-1.4354629516601562,-1e-05] (-1,-1; 15,-1), time: 0.3111s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_49, [-1.1758928298950195,0.10109102725982666]=>[-1.1758928298950195,-1e-05] (-1,-1; 15,-1), time: 0.2780s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_87, [-0.629079282283783,0.3759438097476959]=>[-0.3029262755115233,0.08845954082461464] (9,-1; 9,-1), time: 30.0203s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_5, [-1.2517571449279785,0.09282729029655457]=>[-1.2517571449279785,-1e-05] (-1,-1; 15,-1), time: 0.3579s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_131, [-0.5774861574172974,0.8025925159454346]=>[-0.18190710536378038,0.41841134341131647] (9,-1; 9,-1), time: 30.0322s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_57, [-0.9572456479072571,0.8059611320495605]=>[-0.4265680604711328,0.3862800962893413] (9,-1; 9,-1), time: 30.0156s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_167, [-0.9837469458580017,0.4360782206058502]=>[-0.5773538950263538,0.08526002005343478] (9,-1; 9,-1), time: 30.0096s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_97, [-1.170759916305542,0.114952452480793]=>[-1.170759916305542,-1e-05] (-1,-1; 15,-1), time: 0.3703s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_81, [-0.9899592399597168,0.2965455949306488]=>[-0.5636924614348306,0.02188577667315628] (9,-1; 9,-1), time: 30.0190s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_114, [-0.11145099997520447,1.1827207803726196]=>[1e-05,1.1827207803726196] (15,-1; -1,-1), time: 0.3423s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_46, [-0.15008783340454102,1.288891315460205]=>[1e-05,1.288891315460205] (15,-1; -1,-1), time: 0.3323s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_99, [-0.04852205514907837,1.3692127466201782]=>[1e-05,1.3692127466201782] (15,-1; -1,-1), time: 0.3365s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_52, [-0.19763755798339844,1.2456390857696533]=>[1e-05,1.2456390857696533] (15,-1; -1,-1), time: 0.7304s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_146, [-1.4172194004058838,0.06835953891277313]=>[-1.4172194004058838,-1e-05] (-1,-1; 15,-1), time: 0.3477s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_76, [-0.5731828212738037,0.8419370651245117]=>[-0.08754755206007793,0.47094442107821416] (9,-1; 9,-1), time: 30.0140s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_4, [-0.4049253463745117,1.2549803256988525]=>[1e-05,1.2549803256988525] (15,-1; -1,-1), time: 0.8430s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_88, [-0.6152517795562744,0.8852530717849731]=>[-0.20839100244242592,0.4883811857791339] (9,-1; 9,-1), time: 30.0537s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_135, [-1.68192458152771,0.11353961378335953]=>[-1.68192458152771,-1e-05] (-1,-1; 15,-1), time: 0.3778s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_80, [-0.9722205400466919,0.32808881998062134]=>[-0.9722205400466919,-1e-05] (-1,-1; 15,-1), time: 7.4102s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_67, [-0.6437751650810242,0.8550559282302856]=>[-0.26922806335129,0.3800870806819466] (9,-1; 2,-1), time: 29.5580s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_22, [-0.336107075214386,0.9050142168998718]=>[1e-05,0.9050142168998718] (15,-1; -1,-1), time: 5.8331s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_112, [-1.0729703903198242,0.21442031860351562]=>[-1.0729703903198242,-1e-05] (-1,-1; 15,-1), time: 0.5818s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_90, [-0.6193081736564636,0.9307106733322144]=>[-0.09848617946428034,0.5414368273377582] (9,-1; 9,-1), time: 30.0128s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_103, [-0.9424937963485718,0.45736658573150635]=>[-0.5557789154504934,0.01828277241606059] (9,-1; 9,-1), time: 30.0230s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_121, [-0.4672944247722626,1.171288013458252]=>[1e-05,1.171288013458252] (15,-1; -1,-1), time: 3.0583s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_192, [-1.090949296951294,0.4365900754928589]=>[-0.583630846194657,0.12545331477281163] (9,-1; 9,-1), time: 30.0117s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_63, [-0.4679974913597107,0.9908488988876343]=>[1e-05,0.9908488988876343] (15,-1; -1,-1), time: 8.7186s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_137, [-0.9981369972229004,0.40236324071884155]=>[-0.5269494868682519,0.06789698103463797] (9,-1; 2,-1), time: 23.0716s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_159, [-0.054132044315338135,1.4065964221954346]=>[1e-05,1.4065964221954346] (15,-1; -1,-1), time: 0.3837s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_191, [-1.4609239101409912,0.1910465657711029]=>[-1.4609239101409912,-1e-05] (-1,-1; 15,-1), time: 0.2954s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_58, [-0.1881697177886963,1.1779344081878662]=>[1e-05,1.1779344081878662] (15,-1; -1,-1), time: 0.2932s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_130, [-0.07114800810813904,1.6871858835220337]=>[1e-05,1.6871858835220337] (15,-1; -1,-1), time: 0.2701s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_124, [-0.6089723110198975,1.1854674816131592]=>[-0.13641448105278797,0.624025812265288] (2,-1; 9,-1), time: 26.1768s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_175, [-0.6422209739685059,0.9104771614074707]=>[-0.2315972127032917,0.43073454333125516] (2,-1; 2,-1), time: 27.6380s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_125, [-0.1473904252052307,1.563667893409729]=>[1e-05,1.563667893409729] (15,-1; -1,-1), time: 0.3196s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_138, [-1.0967638492584229,0.09449431300163269]=>[-1.0967638492584229,-1e-05] (-1,-1; 15,-1), time: 0.2734s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_198, [-0.10183465480804443,1.68458092212677]=>[1e-05,1.68458092212677] (15,-1; -1,-1), time: 0.3083s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_95, [-1.356801986694336,0.11152768135070801]=>[-1.356801986694336,-1e-05] (-1,-1; 15,-1), time: 0.2761s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_86, [-0.0620192289352417,1.389857292175293]=>[1e-05,1.389857292175293] (15,-1; -1,-1), time: 0.2711s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_70, [-1.1243164539337158,0.2872955799102783]=>[-1.1243164539337158,-1e-05] (-1,-1; 15,-1), time: 0.8295s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_189, [-0.9295638799667358,0.5188585519790649]=>[-0.4846569861348388,0.20969517512826963] (9,-1; 2,-1), time: 20.9097s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_53, [-0.377370685338974,0.8907796144485474]=>[-0.009349184431096983,0.5324404265360205] (9,-1; 9,-1), time: 30.0212s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_42, [-0.02409788966178894,1.4297466278076172]=>[1e-05,1.4297466278076172] (15,-1; -1,-1), time: 0.2600s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_127, [-0.8976441621780396,0.47056344151496887]=>[-0.49480949461348217,0.08023705861003566] (9,-1; 9,-1), time: 30.0186s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_7, [-0.16975188255310059,1.1167871952056885]=>[1e-05,1.1167871952056885] (15,-1; -1,-1), time: 0.3457s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_129, [-0.7594993710517883,0.5075563788414001]=>[-0.39063011990935953,0.1355521644570708] (9,-1; 9,-1), time: 30.0232s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_39, [-0.7666518688201904,0.7178024053573608]=>[-0.26303523181254274,0.36345503752562425] (9,-1; 9,-1), time: 30.0590s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_61, [-0.11184218525886536,1.120705485343933]=>[1e-05,1.120705485343933] (15,-1; -1,-1), time: 0.3406s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_1, [-0.21319293975830078,1.2938947677612305]=>[1e-05,1.2938947677612305] (15,-1; -1,-1), time: 0.3435s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_77, [-1.2206755876541138,0.10248255729675293]=>[-1.2206755876541138,-1e-05] (-1,-1; 15,-1), time: 0.3076s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_133, [-1.3229432106018066,0.09783540666103363]=>[-1.3229432106018066,-1e-05] (-1,-1; 15,-1), time: 0.3502s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_51, [-0.9206655025482178,0.4471628665924072]=>[-0.4153014105055774,0.14943844174803428] (9,-1; 9,-1), time: 30.0485s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_43, [-1.0720568895339966,0.2283482551574707]=>[-1.0720568895339966,-1e-05] (-1,-1; 15,-1), time: 0.7127s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_177, [-0.04440818354487419,1.3690574169158936]=>[1e-05,1.3690574169158936] (15,-1; -1,-1), time: 0.3260s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_34, [-1.2209398746490479,0.10323858261108398]=>[-1.2209398746490479,-1e-05] (-1,-1; 15,-1), time: 0.3006s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_11, [-0.07278269529342651,1.5391440391540527]=>[1e-05,1.5391440391540527] (15,-1; -1,-1), time: 0.3010s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_174, [-1.0067023038864136,0.7253917455673218]=>[-0.4802992173768015,0.3055502683324024] (9,-1; 9,-1), time: 30.0233s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_144, [-0.6765850186347961,0.8559367060661316]=>[-0.22132391186124045,0.4494661959591701] (9,-1; 9,-1), time: 30.0224s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_12, [-0.8478275537490845,0.6330677270889282]=>[-0.37799329842180723,0.31275473213149885] (9,-1; 9,-1), time: 30.0587s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_40, [-0.5269076824188232,0.8120595216751099]=>[-0.14037486085337184,0.42838760870410203] (9,-1; 9,-1), time: 30.0105s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_196, [-0.9844759702682495,0.4420316815376282]=>[-0.5237883195548667,0.16805732997577258] (9,-1; 2,-1), time: 23.2621s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_96, [-1.162122368812561,0.41500145196914673]=>[-1.162122368812561,-1e-05] (-1,-1; 15,-1), time: 10.3012s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_92, [-0.5097273588180542,1.0414212942123413]=>[-0.036842073311060486,0.6547695717516293] (9,-1; 9,-1), time: 30.0075s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_10, [-0.5247512459754944,0.647834300994873]=>[-0.1854326295712604,0.3002791099369271] (9,-1; 9,-1), time: 30.0079s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_47, [-1.0272388458251953,0.4282565116882324]=>[-0.6014628520131745,0.019723781469407793] (9,-1; 9,-1), time: 30.0200s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_182, [-0.8345853090286255,0.39282310009002686]=>[-0.3531336821020204,0.17438936670886374] (9,-1; 2,-1), time: 21.4636s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_55, [-0.8363601565361023,0.5375450849533081]=>[-0.4030670842518668,0.16201614782102616] (9,-1; 9,-1), time: 30.0181s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_25, [-0.9469951391220093,0.21320569515228271]=>[-0.47547436944239635,0.028180330742509713] (9,-1; 9,-1), time: 30.0288s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_83, [-0.8536472320556641,0.42408084869384766]=>[-0.4623114488667606,0.07340073055563806] (9,-1; 9,-1), time: 30.0206s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_69, [-0.4324011206626892,0.951606035232544]=>[-0.027899244998894502,0.6112931357725375] (9,-1; 9,-1), time: 30.0109s, #vars: 1563, #constrs: 867, improved: True
Solving MIP for lay6_16, [-0.9402173161506653,0.37717553973197937]=>[-0.5270618172311856,0.029491059829008116] (9,-1; 9,-1), time: 30.0360s, #vars: 1563, #constrs: 867, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
best_l after optimization: 50.9149169921875 with beta sum per layer: []
alpha/beta optimization time: 6.160254716873169
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.0578, -5.7469, -6.4309, -7.3807, -5.1941, -3.4202, -6.1879, -6.5182,
         -7.9783]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 125 nodes out of 125 unstable nodes, lb improved 28.194496154785156, ub improved 28.506122589111328, time 123.0550
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_158', 'lay8_58', 'lay8_76', 'lay8_146', 'lay8_111', 'lay8_149', 'lay8_25', 'lay8_166', 'lay8_184', 'lay8_196', 'lay8_34', 'lay8_155', 'lay8_133', 'lay8_130', 'lay8_38', 'lay8_32', 'lay8_63', 'lay8_109', 'lay8_104', 'lay8_1', 'lay8_114', 'lay8_82', 'lay8_0', 'lay8_192', 'lay8_176', 'lay8_195', 'lay8_141', 'lay8_65', 'lay8_48', 'lay8_127', 'lay8_137', 'lay8_2', 'lay8_161', 'lay8_4', 'lay8_59', 'lay8_160', 'lay8_138', 'lay8_179', 'lay8_29', 'lay8_49', 'lay8_21', 'lay8_120', 'lay8_143', 'lay8_115', 'lay8_41', 'lay8_35', 'lay8_172', 'lay8_131', 'lay8_7', 'lay8_167', 'lay8_18', 'lay8_70', 'lay8_142', 'lay8_50', 'lay8_134', 'lay8_95', 'lay8_6', 'lay8_3', 'lay8_98', 'lay8_17', 'lay8_106', 'lay8_135', 'lay8_13', 'lay8_189', 'lay8_36', 'lay8_47', 'lay8_22', 'lay8_11', 'lay8_129', 'lay8_20', 'lay8_85', 'lay8_165', 'lay8_119', 'lay8_128', 'lay8_88', 'lay8_94', 'lay8_86', 'lay8_197', 'lay8_52', 'lay8_91', 'lay8_9', 'lay8_62', 'lay8_193', 'lay8_77', 'lay8_154', 'lay8_148', 'lay8_118', 'lay8_69', 'lay8_40', 'lay8_156', 'lay8_126', 'lay8_100', 'lay8_15', 'lay8_23', 'lay8_144', 'lay8_121', 'lay8_152', 'lay8_198', 'lay8_140', 'lay8_43', 'lay8_97', 'lay8_178', 'lay8_159', 'lay8_75', 'lay8_110', 'lay8_124', 'lay8_102', 'lay8_139', 'lay8_96', 'lay8_90', 'lay8_188', 'lay8_174', 'lay8_151', 'lay8_173', 'lay8_83', 'lay8_28', 'lay8_93', 'lay8_168', 'lay8_105', 'lay8_164', 'lay8_99', 'lay8_81', 'lay8_180', 'lay8_44', 'lay8_123', 'lay8_57', 'lay8_24', 'lay8_171', 'lay8_31', 'lay8_64', 'lay8_125', 'lay8_33', 'lay8_66', 'lay8_5', 'lay8_186', 'lay8_145', 'lay8_16', 'lay8_185', 'lay8_194', 'lay8_61', 'lay8_53', 'lay8_55', 'lay8_163', 'lay8_170', 'lay8_46', 'lay8_122', 'lay8_175', 'lay8_42', 'lay8_108', 'lay8_182', 'lay8_39', 'lay8_191', 'lay8_190', 'lay8_12', 'lay8_26', 'lay8_177', 'lay8_92', 'lay8_10', 'lay8_54', 'lay8_181', 'lay8_19', 'lay8_157', 'lay8_74', 'lay8_162', 'lay8_51', 'lay8_107', 'lay8_117', 'lay8_169', 'lay8_78', 'lay8_73', 'lay8_68', 'lay8_153', 'lay8_56', 'lay8_112', 'lay8_132', 'lay8_80', 'lay8_147', 'lay8_27', 'lay8_87', 'lay8_150', 'lay8_30'] filter: 1.0
Solving MIP for lay8_196, [-1.6921278238296509,0.5757481455802917]=>[-1.6921278238296509,-1e-05] (-1,-1; 15,-1), time: 0.4746s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_34, [-1.8995736837387085,0.7654691934585571]=>[-1.8995736837387085,-1e-05] (-1,-1; 15,-1), time: 0.6223s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_58, [-1.9999761581420898,0.6887043118476868]=>[-1.9999761581420898,-1e-05] (-1,-1; 15,-1), time: 0.6370s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_38, [-2.249253273010254,0.3176227807998657]=>[-2.249253273010254,-1e-05] (-1,-1; 15,-1), time: 0.6778s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_111, [-2.077993154525757,0.8056519031524658]=>[-2.077993154525757,-1e-05] (-1,-1; 15,-1), time: 1.1114s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_184, [-1.9866806268692017,0.795986533164978]=>[-1.9866806268692017,-1e-05] (-1,-1; 15,-1), time: 1.1575s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_109, [-2.037616491317749,0.4470634460449219]=>[-2.037616491317749,-1e-05] (-1,-1; 15,-1), time: 0.5747s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_114, [-2.386789321899414,0.43941259384155273]=>[-2.386789321899414,-1e-05] (-1,-1; 15,-1), time: 0.5581s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_192, [-1.7007049322128296,0.5055639743804932]=>[-1.7007049322128296,-1e-05] (-1,-1; 15,-1), time: 0.5917s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_155, [-1.7192457914352417,0.9597235918045044]=>[-0.6792248286045878,0.18065187342236178] (9,-1; 9,-1), time: 30.0101s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_146, [-1.3498436212539673,1.2438721656799316]=>[-0.49862970631415615,0.21397632148641585] (9,-1; 9,-1), time: 30.0114s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_149, [-1.541710376739502,0.7801049947738647]=>[-0.5508750495392906,0.1822703809046795] (9,-1; 9,-1), time: 30.0112s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_158, [-1.3223576545715332,1.1149049997329712]=>[-0.456879991266022,0.2191367512350592] (9,-1; 9,-1), time: 30.0215s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_76, [-1.1721141338348389,1.3792799711227417]=>[-0.1891623020020704,0.5805635027022347] (9,-1; 9,-1), time: 30.0200s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_32, [-1.0709316730499268,1.6838947534561157]=>[-0.19387676200449674,0.7611469917557026] (9,-1; 9,-1), time: 30.0130s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_166, [-1.417388916015625,1.2430671453475952]=>[-0.575554509527036,0.28344043924520484] (9,-1; 9,-1), time: 30.0136s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_130, [-1.182565689086914,1.55487060546875]=>[-0.1976254662651787,0.6114279626844774] (9,-1; 9,-1), time: 30.0193s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_25, [-1.3484983444213867,1.205246090888977]=>[-0.41462533174639404,0.37547537766372635] (9,-1; 9,-1), time: 30.0358s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_133, [-1.463364839553833,1.366110920906067]=>[-0.42867391983494424,0.6065196052833131] (9,-1; 9,-1), time: 30.3146s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_2, [-1.7938029766082764,0.5152413845062256]=>[-1.7938029766082764,-1e-05] (-1,-1; 15,-1), time: 0.4848s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_63, [-1.8786982297897339,1.0558524131774902]=>[-0.7970694217623917,0.10090900361628007] (9,-1; 9,-1), time: 30.0873s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_4, [-1.7335714101791382,0.7305593490600586]=>[-1.7335714101791382,-1e-05] (-1,-1; 15,-1), time: 0.5547s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_141, [-1.9660691022872925,0.4494590163230896]=>[-1.9660691022872925,-1e-05] (-1,-1; 15,-1), time: 0.5867s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_104, [-1.7681623697280884,0.810137152671814]=>[-0.7749607076604114,0.01654640919776167] (9,-1; 9,-1), time: 30.0099s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_1, [-1.288648247718811,1.0681954622268677]=>[-0.47251239976581827,0.296723027734513] (9,-1; 9,-1), time: 30.0083s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_0, [-1.3626532554626465,1.1152745485305786]=>[-0.5461423844366551,0.23985125034817414] (9,-1; 9,-1), time: 30.0120s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_82, [-1.7030106782913208,0.943505585193634]=>[-0.7134362868315444,0.15151220347816427] (9,-1; 9,-1), time: 30.2075s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_195, [-1.5562255382537842,0.9556824564933777]=>[-1.5562255382537842,-1e-05] (-1,-1; 15,-1), time: 1.3591s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_120, [-2.2787961959838867,0.2962126135826111]=>[-2.2787961959838867,-1e-05] (-1,-1; 15,-1), time: 0.5092s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_115, [-2.072099447250366,0.29576408863067627]=>[-2.072099447250366,-1e-05] (-1,-1; 15,-1), time: 0.5142s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_143, [-1.8126275539398193,0.6511770486831665]=>[-1.8126275539398193,-1e-05] (-1,-1; 15,-1), time: 0.6053s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_176, [-1.5105170011520386,0.8920626044273376]=>[-0.5737824075014983,0.1694521961658239] (9,-1; 9,-1), time: 30.0141s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_35, [-2.118758201599121,0.2801933288574219]=>[-2.118758201599121,-1e-05] (-1,-1; 15,-1), time: 0.5292s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_160, [-1.5869436264038086,0.8131076097488403]=>[-1.5869436264038086,-1e-05] (-1,-1; 15,-1), time: 2.7125s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_167, [-1.840654730796814,0.6049014925956726]=>[-1.840654730796814,-1e-05] (-1,-1; 15,-1), time: 1.0735s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_18, [-2.4714460372924805,0.22393518686294556]=>[-2.4714460372924805,-1e-05] (-1,-1; 15,-1), time: 0.5573s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_70, [-2.326902389526367,0.1312199831008911]=>[-2.326902389526367,-1e-05] (-1,-1; 15,-1), time: 0.5365s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_142, [-2.9482524394989014,0.12114536017179489]=>[-2.9482524394989014,-1e-05] (-1,-1; 15,-1), time: 0.4927s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_65, [-1.0949163436889648,1.6430253982543945]=>[-0.07336763159824146,0.8203172765169784] (9,-1; 9,-1), time: 30.0105s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_48, [-1.6440255641937256,1.017613172531128]=>[-0.6627584927195502,0.13458546613957534] (9,-1; 9,-1), time: 30.0084s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_137, [-1.5949230194091797,0.9117599725723267]=>[-0.5388589931481935,0.19148942416711073] (9,-1; 9,-1), time: 30.0104s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_161, [-1.0918320417404175,1.1237720251083374]=>[-0.2982820631578018,0.27048239676003255] (9,-1; 9,-1), time: 30.0118s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_127, [-1.2975863218307495,1.218049168586731]=>[-0.29194116158138544,0.471545490039695] (9,-1; 9,-1), time: 30.1837s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_59, [-1.7353737354278564,1.2759804725646973]=>[-0.8848972283417857,0.10678449933701571] (9,-1; 9,-1), time: 30.1476s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_138, [-1.3275541067123413,0.7868456244468689]=>[-0.4419870370271755,0.17672840063820933] (9,-1; 9,-1), time: 30.0087s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_179, [-1.2741014957427979,1.059104084968567]=>[-0.34556365173207343,0.3601994285112983] (9,-1; 9,-1), time: 30.0100s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_29, [-1.455891489982605,0.8358775973320007]=>[-0.6195262993645421,0.09181239232523393] (9,-1; 9,-1), time: 30.0251s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_134, [-1.950478196144104,0.5730835199356079]=>[-1.950478196144104,-1e-05] (-1,-1; 15,-1), time: 0.5681s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_49, [-1.18770170211792,1.0617705583572388]=>[-0.4075898114306868,0.3070324525252641] (9,-1; 9,-1), time: 30.0112s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_95, [-1.8474763631820679,0.53616863489151]=>[-1.8474763631820679,-1e-05] (-1,-1; 15,-1), time: 0.6017s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_21, [-1.2759112119674683,1.0884790420532227]=>[-0.364543648997582,0.29807854684896884] (9,-1; 9,-1), time: 30.0074s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_106, [-2.3993172645568848,0.10390543937683105]=>[-2.3993172645568848,-1e-05] (-1,-1; 15,-1), time: 0.4388s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_189, [-2.3720972537994385,0.15150666236877441]=>[-2.3720972537994385,-1e-05] (-1,-1; 15,-1), time: 0.5941s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_47, [-1.9771428108215332,0.16585803031921387]=>[-1.9771428108215332,-1e-05] (-1,-1; 15,-1), time: 0.5624s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_36, [-2.038740634918213,0.40740036964416504]=>[-2.038740634918213,-1e-05] (-1,-1; 15,-1), time: 0.6024s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_41, [-0.8935322761535645,1.3221306800842285]=>[-0.03104545659360365,0.6333629913490787] (9,-1; 9,-1), time: 30.0161s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_20, [-2.294870615005493,0.10888403654098511]=>[-2.294870615005493,-1e-05] (-1,-1; 15,-1), time: 0.5251s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_22, [-1.539445161819458,0.7606614828109741]=>[-1.539445161819458,-1e-05] (-1,-1; 15,-1), time: 1.1236s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_172, [-1.554627776145935,0.7725279331207275]=>[-0.5946876002325618,0.08233107502267176] (9,-1; 9,-1), time: 30.0074s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_13, [-1.7093157768249512,0.7986841797828674]=>[-1.7093157768249512,-1e-05] (-1,-1; 15,-1), time: 1.5384s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_131, [-1.5164573192596436,0.9546946287155151]=>[-0.6807233409920596,0.06812881713518927] (9,-1; 9,-1), time: 30.0112s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_119, [-2.471332550048828,0.131247878074646]=>[-2.471332550048828,-1e-05] (-1,-1; 15,-1), time: 0.5680s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_128, [-1.4701892137527466,0.46795785427093506]=>[-1.4701892137527466,-1e-05] (-1,-1; 15,-1), time: 0.5701s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_7, [-1.4779833555221558,1.1794930696487427]=>[-0.4779034186047445,0.46587522910901685] (9,-1; 9,-1), time: 30.0738s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_88, [-1.9759857654571533,0.715805172920227]=>[-1.9759857654571533,-1e-05] (-1,-1; 15,-1), time: 0.5663s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_94, [-2.3148550987243652,0.5743463635444641]=>[-2.3148550987243652,-1e-05] (-1,-1; 15,-1), time: 0.5728s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_197, [-1.7657018899917603,0.6245609521865845]=>[-1.7657018899917603,-1e-05] (-1,-1; 15,-1), time: 0.5738s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_9, [-2.137953758239746,0.4924800992012024]=>[-2.137953758239746,-1e-05] (-1,-1; 15,-1), time: 0.5447s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_193, [-0.7135229706764221,2.0980234146118164]=>[1e-05,2.0980234146118164] (15,-1; -1,-1), time: 0.5940s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_85, [-1.69563889503479,1.0281273126602173]=>[-1.69563889503479,-1e-05] (-1,-1; 15,-1), time: 2.7936s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_148, [-1.872180700302124,0.6553338766098022]=>[-1.872180700302124,-1e-05] (-1,-1; 15,-1), time: 0.5741s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_50, [-1.3348007202148438,1.040976881980896]=>[-0.5449458880854893,0.1430149551970506] (9,-1; 9,-1), time: 30.0137s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_69, [-1.700417160987854,0.6027474403381348]=>[-1.700417160987854,-1e-05] (-1,-1; 15,-1), time: 0.6453s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_40, [-2.0134060382843018,0.5124558806419373]=>[-2.0134060382843018,-1e-05] (-1,-1; 15,-1), time: 1.0034s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_156, [-1.6845988035202026,0.40765154361724854]=>[-1.6845988035202026,-1e-05] (-1,-1; 15,-1), time: 0.5457s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_3, [-1.5600712299346924,0.7253518104553223]=>[-1.5600712299346924,-1e-05] (-1,-1; 15,-1), time: 12.1563s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_100, [-0.7298392057418823,1.746678113937378]=>[1e-05,1.746678113937378] (15,-1; -1,-1), time: 0.8702s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_15, [-2.4651248455047607,0.057216763496398926]=>[-2.4651248455047607,-1e-05] (-1,-1; 15,-1), time: 0.4501s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_23, [-1.6139492988586426,0.7844159603118896]=>[-1.6139492988586426,-1e-05] (-1,-1; 15,-1), time: 0.4442s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_144, [-0.6839163303375244,1.883736491203308]=>[1e-05,1.883736491203308] (15,-1; -1,-1), time: 0.4474s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_6, [-1.3857502937316895,0.7156954407691956]=>[-0.5182227977636621,0.03793953377885457] (9,-1; 9,-1), time: 30.0242s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_98, [-1.1651854515075684,1.07333505153656]=>[-0.3109130155216468,0.35950924084061453] (9,-1; 9,-1), time: 30.0130s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_17, [-1.4310283660888672,1.4663543701171875]=>[-0.3964377410056894,0.5473637870265723] (9,-1; 9,-1), time: 30.1572s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_135, [-1.7023580074310303,0.9386835098266602]=>[-0.8540968776127957,0.049875922393110866] (9,-1; 9,-1), time: 30.0118s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_152, [-2.1516380310058594,0.29255402088165283]=>[-2.1516380310058594,-1e-05] (-1,-1; 15,-1), time: 0.5775s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_11, [-1.4568368196487427,0.7891985774040222]=>[-0.5400968963581725,0.12580102943135693] (9,-1; 9,-1), time: 30.0262s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_43, [-2.31124210357666,0.28998464345932007]=>[-2.31124210357666,-1e-05] (-1,-1; 15,-1), time: 0.6082s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_129, [-1.823015570640564,0.9027140140533447]=>[-0.7936436883947839,0.03584367177397638] (9,-1; 9,-1), time: 30.0119s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_198, [-1.994718313217163,0.5894269347190857]=>[-1.994718313217163,-1e-05] (-1,-1; 15,-1), time: 1.1093s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_178, [-2.58242130279541,0.2370111346244812]=>[-2.58242130279541,-1e-05] (-1,-1; 15,-1), time: 0.4294s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_165, [-1.4947317838668823,0.9858632683753967]=>[-0.49310901644687444,0.2888396705506744] (9,-1; 9,-1), time: 30.0077s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_86, [-1.0025997161865234,2.136157989501953]=>[-0.049069601333901085,1.0158734377777567] (9,-1; 9,-1), time: 30.0108s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_102, [-1.8813577890396118,0.5148608684539795]=>[-1.8813577890396118,-1e-05] (-1,-1; 15,-1), time: 0.5749s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_52, [-1.4067814350128174,1.2704566717147827]=>[-0.41196343820932446,0.511293041087701] (9,-1; 9,-1), time: 30.0085s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_91, [-1.7142329216003418,1.4729716777801514]=>[-0.6345577710101534,0.3584894144788386] (9,-1; 9,-1), time: 30.0114s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_62, [-1.2246583700180054,1.4884779453277588]=>[-0.23005752081846356,0.647732598396575] (9,-1; 9,-1), time: 30.0073s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_188, [-1.8574931621551514,0.527938961982727]=>[-1.8574931621551514,-1e-05] (-1,-1; 15,-1), time: 0.5662s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_77, [-1.2874234914779663,1.4345074892044067]=>[-0.34398407918599394,0.51127779662855] (9,-1; 9,-1), time: 30.0114s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_174, [-1.7192248106002808,0.6095454692840576]=>[-1.7192248106002808,-1e-05] (-1,-1; 15,-1), time: 0.6091s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_154, [-1.5985124111175537,0.9909197092056274]=>[-0.6284082145992957,0.2018915456539982] (9,-1; 9,-1), time: 30.0104s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_151, [-0.6863934397697449,2.298924446105957]=>[1e-05,2.298924446105957] (15,-1; -1,-1), time: 0.6370s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_83, [-0.15512502193450928,2.8330655097961426]=>[1e-05,2.8330655097961426] (15,-1; -1,-1), time: 0.5840s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_28, [-2.5894830226898193,0.36761558055877686]=>[-2.5894830226898193,-1e-05] (-1,-1; 15,-1), time: 0.5746s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_93, [-0.31367605924606323,2.277190923690796]=>[1e-05,2.277190923690796] (15,-1; -1,-1), time: 0.6092s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_168, [-2.102668523788452,0.5809862017631531]=>[-2.102668523788452,-1e-05] (-1,-1; 15,-1), time: 0.5428s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_118, [-0.9662426114082336,1.0705443620681763]=>[-0.2493937604345717,0.3646077450140513] (9,-1; 9,-1), time: 30.0086s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_105, [-2.238039016723633,0.18305885791778564]=>[-2.238039016723633,-1e-05] (-1,-1; 15,-1), time: 0.5657s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_164, [-2.157972812652588,0.42008543014526367]=>[-2.157972812652588,-1e-05] (-1,-1; 15,-1), time: 0.6258s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_99, [-1.9939374923706055,0.6722123026847839]=>[-1.9939374923706055,-1e-05] (-1,-1; 15,-1), time: 0.6459s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_123, [-1.6156038045883179,0.6137375235557556]=>[-1.6156038045883179,-1e-05] (-1,-1; 15,-1), time: 1.1037s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_81, [-0.9826242327690125,1.5273736715316772]=>[1e-05,1.5273736715316772] (15,-1; -1,-1), time: 1.8736s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_57, [-0.18880057334899902,2.609886884689331]=>[1e-05,2.609886884689331] (15,-1; -1,-1), time: 0.5281s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_126, [-1.7452621459960938,0.6957199573516846]=>[-0.6181726011610129,0.08210681558693696] (9,-1; 9,-1), time: 30.0103s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_44, [-1.679298996925354,0.7346212267875671]=>[-1.679298996925354,-1e-05] (-1,-1; 15,-1), time: 4.7415s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_64, [-0.44713613390922546,2.294854164123535]=>[1e-05,2.294854164123535] (15,-1; -1,-1), time: 0.5641s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_125, [-1.9004501104354858,0.49339571595191956]=>[-1.9004501104354858,-1e-05] (-1,-1; 15,-1), time: 0.6021s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_33, [-0.5997714400291443,2.52289080619812]=>[1e-05,2.52289080619812] (15,-1; -1,-1), time: 0.5243s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_97, [-1.798090934753418,0.7764999270439148]=>[-1.798090934753418,-1e-05] (-1,-1; 15,-1), time: 11.0719s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_5, [-0.7556548118591309,1.6344964504241943]=>[1e-05,1.6344964504241943] (15,-1; -1,-1), time: 0.5412s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_75, [-1.800321102142334,0.6845889687538147]=>[-1.800321102142334,-1e-05] (-1,-1; 15,-1), time: 12.5886s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_121, [-1.1421583890914917,1.7976480722427368]=>[-0.3251972556529955,0.616646928784933] (9,-1; 9,-1), time: 30.0524s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_16, [-2.0082783699035645,0.49608314037323]=>[-2.0082783699035645,-1e-05] (-1,-1; 15,-1), time: 0.4301s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_140, [-1.0448426008224487,1.4265235662460327]=>[-0.15642915187365752,0.5959089911664036] (9,-1; 9,-1), time: 30.0088s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_194, [-1.8046875,0.41583630442619324]=>[-1.8046875,-1e-05] (-1,-1; 15,-1), time: 0.4671s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_159, [-1.0967016220092773,1.3596243858337402]=>[-0.17730359601816018,0.5758057789804821] (9,-1; 9,-1), time: 30.0128s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_110, [-0.9787268042564392,1.6039927005767822]=>[-0.06840369456154248,0.7324185603596406] (9,-1; 9,-1), time: 30.0075s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_124, [-1.3435949087142944,1.121604084968567]=>[-0.4306633083138345,0.2888437883912491] (9,-1; 9,-1), time: 30.0086s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_61, [-3.19817852973938,0.27150604128837585]=>[-3.19817852973938,-1e-05] (-1,-1; 15,-1), time: 0.4741s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_163, [-1.7495496273040771,0.657618522644043]=>[-1.7495496273040771,-1e-05] (-1,-1; 15,-1), time: 0.4472s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_139, [-0.8366112112998962,1.332414150238037]=>[-0.03896054286366566,0.6285569385729136] (9,-1; 9,-1), time: 30.0144s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_96, [-1.3603472709655762,1.173072338104248]=>[-0.44280239150412454,0.3682808307961737] (9,-1; 9,-1), time: 30.0097s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_46, [-2.7709951400756836,0.31579428911209106]=>[-2.7709951400756836,-1e-05] (-1,-1; 15,-1), time: 0.4362s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_90, [-1.069333553314209,1.2842494249343872]=>[-0.32977307364538044,0.3999904106271001] (9,-1; 9,-1), time: 30.0128s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_55, [-1.8221725225448608,0.8521125316619873]=>[-1.8221725225448608,-1e-05] (-1,-1; 15,-1), time: 1.1942s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_173, [-1.0087555646896362,1.2611401081085205]=>[-0.19362567718335644,0.4821336585206264] (9,-1; 9,-1), time: 30.0136s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_182, [-1.7107824087142944,0.6802961230278015]=>[-1.7107824087142944,-1e-05] (-1,-1; 15,-1), time: 1.1314s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_180, [-1.422495722770691,0.9986423850059509]=>[-0.5358552235140851,0.261587379440858] (9,-1; 9,-1), time: 30.0138s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_190, [-0.8631379008293152,1.8059786558151245]=>[1e-05,1.8059786558151245] (15,-1; -1,-1), time: 0.5626s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_12, [-0.8165907859802246,1.78741455078125]=>[1e-05,1.78741455078125] (15,-1; -1,-1), time: 0.5487s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_26, [-2.1066441535949707,0.4106607139110565]=>[-2.1066441535949707,-1e-05] (-1,-1; 15,-1), time: 0.5273s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_24, [-1.4613823890686035,0.8747795820236206]=>[-0.5995414457817801,0.0733599530617778] (9,-1; 9,-1), time: 30.0125s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_171, [-1.162990689277649,1.3733237981796265]=>[-0.2681777846020678,0.46075074396159277] (9,-1; 9,-1), time: 30.0107s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_177, [-1.8711035251617432,0.23408043384552002]=>[-1.8711035251617432,-1e-05] (-1,-1; 15,-1), time: 0.5760s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_31, [-1.6479800939559937,0.6065028309822083]=>[-0.5302209458975136,0.11867272695502151] (9,-1; 9,-1), time: 30.0052s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_181, [-2.333817958831787,0.6910353302955627]=>[-2.333817958831787,-1e-05] (-1,-1; 15,-1), time: 0.5278s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_170, [-1.841287612915039,0.6930677890777588]=>[-1.841287612915039,-1e-05] (-1,-1; 15,-1), time: 9.1002s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_66, [-1.461043357849121,1.189955711364746]=>[-0.6818411058930417,0.19929057664750222] (9,-1; 9,-1), time: 30.0083s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_186, [-1.220027208328247,1.2131730318069458]=>[-0.2959202739772103,0.4237326546366493] (9,-1; 9,-1), time: 30.0086s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_175, [-1.8858455419540405,0.8628839254379272]=>[-1.8858455419540405,-1e-05] (-1,-1; 15,-1), time: 11.3392s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_145, [-1.354601263999939,1.1976542472839355]=>[-0.39872147610433956,0.35985024699072493] (9,-1; 9,-1), time: 30.0149s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_51, [-2.30265212059021,0.34251177310943604]=>[-2.30265212059021,-1e-05] (-1,-1; 15,-1), time: 0.5594s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_107, [-1.7250863313674927,0.5394140481948853]=>[-1.7250863313674927,-1e-05] (-1,-1; 15,-1), time: 0.5290s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_117, [-1.6937408447265625,0.32335364818573]=>[-1.6937408447265625,-1e-05] (-1,-1; 15,-1), time: 0.5532s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_185, [-1.5249441862106323,0.708619236946106]=>[-0.5817793558313351,0.05537294219398453] (9,-1; 9,-1), time: 30.0617s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_78, [-2.1104187965393066,0.32814133167266846]=>[-2.1104187965393066,-1e-05] (-1,-1; 15,-1), time: 0.5102s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_68, [-1.9417811632156372,0.25610262155532837]=>[-1.9417811632156372,-1e-05] (-1,-1; 15,-1), time: 0.5365s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_153, [-2.5192792415618896,0.011844535358250141]=>[-2.5192792415618896,-1e-05] (-1,-1; 15,-1), time: 0.5982s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_53, [-1.2262893915176392,1.185328483581543]=>[-0.35672902773454673,0.3782465556285486] (9,-1; 9,-1), time: 30.0155s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_122, [-1.709994912147522,1.1521801948547363]=>[-0.7474925356848371,0.2418808366616754] (9,-1; 9,-1), time: 30.0118s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_42, [-1.5693331956863403,1.3136953115463257]=>[-0.4956041028899429,0.3606321213761875] (9,-1; 9,-1), time: 30.0426s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_108, [-1.6560322046279907,0.7803654670715332]=>[-0.7689517884379646,0.0014856776400109007] (9,-1; 9,-1), time: 30.0106s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_132, [-2.206922769546509,0.5300737619400024]=>[-2.206922769546509,-1e-05] (-1,-1; 15,-1), time: 0.5317s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_39, [-1.4016767740249634,1.2915464639663696]=>[-0.45397927401867516,0.49020043610209785] (9,-1; 9,-1), time: 30.0425s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_27, [-1.9418551921844482,0.5042738318443298]=>[-1.9418551921844482,-1e-05] (-1,-1; 15,-1), time: 0.5529s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_191, [-1.5692979097366333,0.7977675199508667]=>[-0.6401861963668746,0.08494375096924568] (9,-1; 9,-1), time: 30.0129s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_87, [-2.230498790740967,0.3144643306732178]=>[-2.230498790740967,-1e-05] (-1,-1; 15,-1), time: 0.5643s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_30, [-1.801054835319519,0.47546154260635376]=>[-1.801054835319519,-1e-05] (-1,-1; 15,-1), time: 0.5715s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_92, [-1.2018330097198486,1.0627985000610352]=>[-0.45857398308528474,0.2390154260829133] (9,-1; 9,-1), time: 30.0228s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_10, [-1.5604310035705566,0.8538204431533813]=>[-0.615548068194997,0.14401545887363723] (9,-1; 9,-1), time: 30.0107s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_54, [-1.6799618005752563,1.0307865142822266]=>[-0.6014350186696042,0.35492315795549334] (9,-1; 9,-1), time: 30.0082s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_19, [-1.1887394189834595,1.1957359313964844]=>[-0.42576554211531115,0.20498956913685604] (9,-1; 9,-1), time: 30.0078s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_80, [-0.9454860091209412,2.101639986038208]=>[1e-05,2.101639986038208] (15,-1; -1,-1), time: 7.0073s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_157, [-1.220738172531128,1.32990300655365]=>[-0.2833652873674354,0.4148461355455671] (9,-1; 9,-1), time: 30.0374s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_74, [-1.0653204917907715,1.140236735343933]=>[-0.3191341604281772,0.33746882893992575] (9,-1; 9,-1), time: 30.0485s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_162, [-1.3689535856246948,1.5329021215438843]=>[-0.42297510131264765,0.5795314063217248] (9,-1; 9,-1), time: 30.0671s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_169, [-1.54314124584198,1.3518757820129395]=>[-0.3923774785681874,0.5228088708030019] (9,-1; 9,-1), time: 30.0097s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_73, [-1.7896766662597656,1.7805825471878052]=>[-0.7536830488113143,0.5708144343937759] (9,-1; 9,-1), time: 30.0743s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_56, [-1.5837764739990234,0.9348089694976807]=>[-0.6661157439141653,0.11017856630767371] (9,-1; 9,-1), time: 30.0067s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_112, [-1.6517343521118164,0.9841567277908325]=>[-0.6265811484787994,0.19604675278655073] (9,-1; 9,-1), time: 30.0068s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_147, [-1.5478097200393677,0.8335493803024292]=>[-0.682717787567155,0.0687606551468383] (9,-1; 9,-1), time: 30.0142s, #vars: 1873, #constrs: 1232, improved: True
Solving MIP for lay8_150, [-1.3054484128952026,1.3192312717437744]=>[-0.49304268055289174,0.29292386453764013] (9,-1; 9,-1), time: 30.1417s, #vars: 1873, #constrs: 1232, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
best_l after optimization: -3.4860548973083496 with beta sum per layer: []
alpha/beta optimization time: 5.938836336135864
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.8666,  0.5623,  0.0670, -2.2415,  1.1586,  1.6729,  0.8096,  0.0290,
         -1.4386]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 181 nodes out of 181 unstable nodes, lb improved 85.46686553955078, ub improved 110.14051055908203, time 184.4067
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_159', 'lay10_187', 'lay10_142', 'lay10_119', 'lay10_30', 'lay10_28', 'lay10_11', 'lay10_115', 'lay10_195', 'lay10_176', 'lay10_88', 'lay10_97', 'lay10_165', 'lay10_191', 'lay10_141', 'lay10_17', 'lay10_199', 'lay10_78', 'lay10_196', 'lay10_145', 'lay10_57', 'lay10_155', 'lay10_136', 'lay10_95', 'lay10_33', 'lay10_139', 'lay10_42', 'lay10_71', 'lay10_94', 'lay10_138', 'lay10_1', 'lay10_198', 'lay10_86', 'lay10_9', 'lay10_117', 'lay10_34', 'lay10_122', 'lay10_108', 'lay10_167', 'lay10_130', 'lay10_152', 'lay10_180', 'lay10_99', 'lay10_44', 'lay10_22', 'lay10_114', 'lay10_31', 'lay10_181', 'lay10_185', 'lay10_137', 'lay10_162', 'lay10_123', 'lay10_149', 'lay10_49', 'lay10_188', 'lay10_2', 'lay10_90', 'lay10_143', 'lay10_175', 'lay10_26', 'lay10_82', 'lay10_186', 'lay10_172', 'lay10_89', 'lay10_132', 'lay10_183', 'lay10_125', 'lay10_20', 'lay10_81', 'lay10_140', 'lay10_72', 'lay10_107', 'lay10_74', 'lay10_3', 'lay10_69', 'lay10_47', 'lay10_154', 'lay10_25', 'lay10_21', 'lay10_190', 'lay10_83', 'lay10_55', 'lay10_98', 'lay10_65', 'lay10_156', 'lay10_134', 'lay10_60', 'lay10_24', 'lay10_5', 'lay10_14', 'lay10_75', 'lay10_109', 'lay10_29', 'lay10_66', 'lay10_157', 'lay10_0', 'lay10_91', 'lay10_18', 'lay10_126', 'lay10_144', 'lay10_174', 'lay10_150', 'lay10_177', 'lay10_169', 'lay10_96', 'lay10_153', 'lay10_54', 'lay10_197', 'lay10_40', 'lay10_50', 'lay10_127', 'lay10_192', 'lay10_164', 'lay10_189', 'lay10_116', 'lay10_101', 'lay10_148', 'lay10_73', 'lay10_146', 'lay10_15', 'lay10_168', 'lay10_61', 'lay10_32', 'lay10_23', 'lay10_118', 'lay10_59', 'lay10_58', 'lay10_104', 'lay10_135', 'lay10_68', 'lay10_64', 'lay10_103', 'lay10_45', 'lay10_151', 'lay10_179', 'lay10_41', 'lay10_93', 'lay10_36', 'lay10_85', 'lay10_19', 'lay10_48', 'lay10_56', 'lay10_84', 'lay10_113', 'lay10_39', 'lay10_43', 'lay10_182', 'lay10_12', 'lay10_51', 'lay10_173', 'lay10_193', 'lay10_63', 'lay10_46', 'lay10_100', 'lay10_158', 'lay10_7', 'lay10_13', 'lay10_87', 'lay10_194', 'lay10_62', 'lay10_37', 'lay10_27', 'lay10_171', 'lay10_124', 'lay10_131', 'lay10_110', 'lay10_8', 'lay10_67', 'lay10_166', 'lay10_121', 'lay10_170', 'lay10_4', 'lay10_76', 'lay10_102', 'lay10_111', 'lay10_38', 'lay10_52', 'lay10_35', 'lay10_163', 'lay10_128', 'lay10_79', 'lay10_184', 'lay10_160', 'lay10_147', 'lay10_77', 'lay10_133', 'lay10_80', 'lay10_53', 'lay10_106', 'lay10_6', 'lay10_161', 'lay10_129', 'lay10_92', 'lay10_16', 'lay10_105', 'lay10_70', 'lay10_112', 'lay10_120', 'lay10_10', 'lay10_178'] filter: 1.0
Solving MIP for lay10_141, [-4.66453742980957,2.639584541320801]=>[-4.66453742980957,-1e-05] (-1,-1; 15,-1), time: 0.5497s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_159, [-4.235899448394775,3.0055551528930664]=>[-4.235899448394775,-1e-05] (-1,-1; 15,-1), time: 0.8088s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_199, [-4.439600467681885,2.705915927886963]=>[-4.439600467681885,-1e-05] (-1,-1; 15,-1), time: 0.7924s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_78, [-4.3223395347595215,2.8088550567626953]=>[-4.3223395347595215,-1e-05] (-1,-1; 15,-1), time: 0.7183s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_97, [-4.725972652435303,3.10830020904541]=>[-4.725972652435303,-1e-05] (-1,-1; 15,-1), time: 1.6918s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_57, [-3.940298318862915,2.242856979370117]=>[-3.940298318862915,-1e-05] (-1,-1; 15,-1), time: 1.9000s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_191, [-3.601787805557251,2.72385835647583]=>[-3.601787805557251,-1e-05] (-1,-1; 15,-1), time: 4.0350s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_136, [-3.8972647190093994,2.391688823699951]=>[-3.8972647190093994,-1e-05] (-1,-1; 15,-1), time: 0.7101s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_115, [-3.8420517444610596,3.3171796798706055]=>[-0.9168195695458344,0.2553546721634339] (9,-1; 9,-1), time: 30.0042s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_187, [-3.8443126678466797,4.082813262939453]=>[-0.7786992829295405,0.7051637920428585] (9,-1; 9,-1), time: 30.0072s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_119, [-3.602447509765625,2.9576427936553955]=>[-1.0636831088051075,0.10590560602041683] (9,-1; 9,-1), time: 30.0059s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_11, [-3.5157980918884277,4.280514717102051]=>[-0.7840745970434001,0.6603003592473823] (9,-1; 9,-1), time: 30.0134s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_176, [-4.087126731872559,3.1978602409362793]=>[-1.4119752793745872,0.026247688618388602] (9,-1; 9,-1), time: 30.0077s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_195, [-3.8400843143463135,3.0724027156829834]=>[-1.131982197407087,0.209268747076243] (9,-1; 9,-1), time: 30.0208s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_165, [-3.7379536628723145,3.261268377304077]=>[-0.937188964211417,0.28664698250445375] (9,-1; 9,-1), time: 30.0448s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_28, [-3.8367438316345215,2.958571672439575]=>[-1.1280790871352064,0.045488584495483764] (9,-1; 9,-1), time: 30.2237s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_88, [-3.4234540462493896,2.681467056274414]=>[-0.7320779417665277,0.30301071722037287] (9,-1; 9,-1), time: 30.3059s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_30, [-4.227840900421143,3.110086679458618]=>[-1.2839680293129794,0.008828482099978581] (9,-1; 9,-1), time: 30.4164s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_142, [-3.660879611968994,3.4066216945648193]=>[-0.9276931910101078,0.2642568060304713] (9,-1; 9,-1), time: 30.4943s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_17, [-3.6960296630859375,3.390582323074341]=>[-0.8874266172359544,0.35430437314886554] (9,-1; 9,-1), time: 30.5941s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_139, [-4.888091087341309,2.015615224838257]=>[-4.888091087341309,-1e-05] (-1,-1; 15,-1), time: 0.7819s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_138, [-4.408154487609863,3.1416308879852295]=>[-4.408154487609863,-1e-05] (-1,-1; 15,-1), time: 0.7661s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_94, [-2.5380067825317383,4.925760746002197]=>[1e-05,4.925760746002197] (15,-1; -1,-1), time: 0.7873s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_117, [-4.298725605010986,2.783064842224121]=>[-4.298725605010986,-1e-05] (-1,-1; 15,-1), time: 0.7985s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_34, [-4.385836124420166,2.0075652599334717]=>[-4.385836124420166,-1e-05] (-1,-1; 15,-1), time: 0.7407s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_196, [-4.366532802581787,2.356416702270508]=>[-0.9218742402559221,0.07869196910433993] (9,-1; 9,-1), time: 30.0140s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_108, [-4.493536472320557,2.0029077529907227]=>[-4.493536472320557,-1e-05] (-1,-1; 15,-1), time: 0.7181s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_145, [-3.118401288986206,3.280527353286743]=>[-0.5448355496082511,0.5351582830865864] (9,-1; 9,-1), time: 30.3720s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_155, [-3.9639601707458496,2.971917152404785]=>[-1.0438821206861117,0.11378107152311462] (9,-1; 9,-1), time: 30.0099s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_22, [-4.132269382476807,2.2944889068603516]=>[-4.132269382476807,-1e-05] (-1,-1; 15,-1), time: 0.6388s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_95, [-3.516648292541504,3.864241361618042]=>[-0.5983787770434175,0.7405212056685961] (9,-1; 9,-1), time: 30.0434s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_114, [-4.825477123260498,1.7853668928146362]=>[-4.825477123260498,-1e-05] (-1,-1; 15,-1), time: 0.7419s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_1, [-5.1866044998168945,2.0672590732574463]=>[-5.1866044998168945,-1e-05] (-1,-1; 15,-1), time: 12.9112s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_185, [-4.697103977203369,2.3038063049316406]=>[-4.697103977203369,-1e-05] (-1,-1; 15,-1), time: 0.5256s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_137, [-4.8368353843688965,3.2949461936950684]=>[-4.8368353843688965,-1e-05] (-1,-1; 15,-1), time: 0.5479s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_33, [-3.972341775894165,3.9952499866485596]=>[-0.6268699998406086,1.0689994055940735] (9,-1; 9,-1), time: 30.0084s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_71, [-4.142182350158691,3.223522663116455]=>[-0.9304295527792723,0.5375165545283235] (9,-1; 9,-1), time: 30.0224s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_42, [-3.7487406730651855,2.9023799896240234]=>[-0.7305789846530972,0.45981872175013017] (9,-1; 9,-1), time: 30.0352s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_198, [-3.6406688690185547,3.0228824615478516]=>[-0.5455841673394313,0.6315869798221794] (9,-1; 9,-1), time: 30.0172s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_86, [-4.26997709274292,2.4480888843536377]=>[-0.9812501245017622,0.18945457483993655] (9,-1; 9,-1), time: 30.0120s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_9, [-3.383835554122925,2.8070099353790283]=>[-1.1728589337307747,0.006940305346280517] (9,-1; 9,-1), time: 30.0192s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_123, [-4.076608180999756,2.2442896366119385]=>[-4.076608180999756,-1e-05] (-1,-1; 15,-1), time: 0.7686s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_167, [-4.229580879211426,2.8222575187683105]=>[-1.2616443133937694,0.14777659370440926] (9,-1; 9,-1), time: 30.0288s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_149, [-2.9757883548736572,3.8098275661468506]=>[1e-05,3.8098275661468506] (15,-1; -1,-1), time: 0.8205s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_122, [-3.685830593109131,2.4952454566955566]=>[-0.6475453759305942,0.4301579417617453] (9,-1; 9,-1), time: 30.0765s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_188, [-2.5235087871551514,5.188339710235596]=>[1e-05,5.188339710235596] (15,-1; -1,-1), time: 0.7161s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_130, [-3.802764654159546,2.0558359622955322]=>[-1.0229371233060176,0.06296015161491494] (9,-1; 9,-1), time: 30.0086s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_152, [-3.187757968902588,3.774900436401367]=>[-0.35293969152189186,0.8544614460278874] (9,-1; 9,-1), time: 30.0070s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_180, [-3.825514554977417,2.63179874420166]=>[-1.168353782055564,0.03117492141855605] (9,-1; 9,-1), time: 30.0219s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_99, [-4.043023109436035,2.8808300495147705]=>[-0.8277025286194472,0.5075694484218847] (9,-1; 9,-1), time: 30.0328s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_175, [-2.2383270263671875,4.963414192199707]=>[1e-05,4.963414192199707] (15,-1; -1,-1), time: 0.7232s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_82, [-3.0094854831695557,5.6253981590271]=>[1e-05,5.6253981590271] (15,-1; -1,-1), time: 0.7590s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_44, [-3.45229434967041,2.8228657245635986]=>[-0.8148829622451443,0.19074372445036358] (9,-1; 9,-1), time: 30.0433s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_172, [-4.5767998695373535,2.775681734085083]=>[-4.5767998695373535,-1e-05] (-1,-1; 15,-1), time: 0.6878s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_89, [-4.8826398849487305,1.6942996978759766]=>[-4.8826398849487305,-1e-05] (-1,-1; 15,-1), time: 0.7536s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_183, [-4.860552787780762,1.9024507999420166]=>[-4.860552787780762,-1e-05] (-1,-1; 15,-1), time: 0.7415s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_20, [-2.6543612480163574,4.188752174377441]=>[1e-05,4.188752174377441] (15,-1; -1,-1), time: 0.8003s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_31, [-3.3822035789489746,3.0055761337280273]=>[-0.6119580875666362,0.4926604862012138] (9,-1; 9,-1), time: 30.0237s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_181, [-4.088992118835449,2.996093511581421]=>[-1.1192374369605291,0.21883927956977522] (9,-1; 9,-1), time: 30.0108s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_69, [-4.391493797302246,2.3857550621032715]=>[-4.391493797302246,-1e-05] (-1,-1; 15,-1), time: 0.6403s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_162, [-3.5991122722625732,2.5574584007263184]=>[-0.6478483624028142,0.35286833847876237] (9,-1; 9,-1), time: 30.0118s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_154, [-4.138665676116943,4.074047565460205]=>[1e-05,1.944972616428795] (15,-1; 9,-1), time: 15.5262s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_49, [-3.7961480617523193,3.0735840797424316]=>[-0.9430707619504631,0.28852352694588906] (9,-1; 9,-1), time: 30.0186s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_2, [-4.467512130737305,2.6650142669677734]=>[-1.2895355578705197,0.0299241488705645] (9,-1; 9,-1), time: 30.0116s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_90, [-3.404580593109131,3.207462787628174]=>[-0.6089564340496997,0.6131823176286204] (9,-1; 9,-1), time: 30.0128s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_143, [-3.8301889896392822,3.619469404220581]=>[-0.8083913462804104,0.5431209194274258] (9,-1; 9,-1), time: 30.0148s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_21, [-4.284241199493408,2.3520097732543945]=>[-4.284241199493408,-1e-05] (-1,-1; 15,-1), time: 0.7833s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_26, [-3.5588343143463135,3.0334982872009277]=>[-0.7530194036048583,0.40890895858484105] (9,-1; 9,-1), time: 30.0274s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_186, [-4.509614944458008,3.2620022296905518]=>[-1.101149476388264,0.38723690702367203] (9,-1; 9,-1), time: 30.0123s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_132, [-3.5428571701049805,3.4322733879089355]=>[-0.40928988979822556,0.7984291362988822] (9,-1; 9,-1), time: 30.0281s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_125, [-3.352334499359131,3.3326425552368164]=>[-0.35123769323456333,0.8930236888190012] (9,-1; 9,-1), time: 30.1062s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_65, [-4.2958903312683105,2.0435307025909424]=>[-4.2958903312683105,-1e-05] (-1,-1; 15,-1), time: 0.8304s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_156, [-4.86552095413208,1.7854962348937988]=>[-4.86552095413208,-1e-05] (-1,-1; 15,-1), time: 0.8260s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_140, [-4.019619464874268,2.5839221477508545]=>[-1.0979875019680814,0.04706736246785046] (9,-1; 9,-1), time: 30.0214s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_81, [-3.6952056884765625,3.186666965484619]=>[-0.937043208362261,0.32622545758830684] (9,-1; 9,-1), time: 30.0698s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_72, [-3.9847633838653564,2.6213419437408447]=>[-1.1792858145395286,0.060866961337005074] (9,-1; 9,-1), time: 30.0068s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_134, [-2.7324929237365723,3.1596388816833496]=>[1e-05,3.1596388816833496] (15,-1; -1,-1), time: 0.7822s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_107, [-3.1514248847961426,3.0633649826049805]=>[-0.25857223099310284,0.7738441970452072] (9,-1; 9,-1), time: 30.0319s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_60, [-4.29917573928833,1.9234561920166016]=>[-4.29917573928833,-1e-05] (-1,-1; 15,-1), time: 0.7160s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_74, [-3.7689480781555176,3.2096710205078125]=>[-0.24230538076648964,1.111525823344473] (9,-1; 9,-1), time: 30.0241s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_109, [-3.8070898056030273,5.44248104095459]=>[1e-05,5.44248104095459] (15,-1; -1,-1), time: 0.7076s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_91, [-2.7181620597839355,4.719696998596191]=>[1e-05,4.719696998596191] (15,-1; -1,-1), time: 0.6834s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_3, [-3.779278039932251,2.3320364952087402]=>[-0.8983823836611119,0.14552731368687805] (9,-1; 9,-1), time: 30.0159s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_126, [-5.434579372406006,1.8045190572738647]=>[-5.434579372406006,-1e-05] (-1,-1; 15,-1), time: 0.7281s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_47, [-3.012284517288208,3.6574742794036865]=>[-0.28052170060638826,0.9303282153654223] (9,-1; 9,-1), time: 30.0053s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_144, [-5.330760478973389,1.8053555488586426]=>[-5.330760478973389,-1e-05] (-1,-1; 15,-1), time: 0.6819s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_174, [-4.043760299682617,2.0443413257598877]=>[-4.043760299682617,-1e-05] (-1,-1; 15,-1), time: 0.7039s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_150, [-2.7034642696380615,4.229551315307617]=>[1e-05,4.229551315307617] (15,-1; -1,-1), time: 0.7240s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_177, [-2.755777359008789,3.895463228225708]=>[1e-05,3.895463228225708] (15,-1; -1,-1), time: 0.7655s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_169, [-4.344613075256348,1.689551830291748]=>[-4.344613075256348,-1e-05] (-1,-1; 15,-1), time: 0.7558s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_18, [-4.726927280426025,2.9402244091033936]=>[-4.726927280426025,-1e-05] (-1,-1; 15,-1), time: 8.3876s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_54, [-4.436748504638672,2.4400577545166016]=>[-4.436748504638672,-1e-05] (-1,-1; 15,-1), time: 0.7567s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_25, [-4.10974645614624,2.6402931213378906]=>[-1.0306561314809592,0.1861331833497325] (9,-1; 9,-1), time: 30.0071s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_40, [-4.26198148727417,2.4977526664733887]=>[-4.26198148727417,-1e-05] (-1,-1; 15,-1), time: 0.5386s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_190, [-3.502243995666504,3.5549159049987793]=>[-0.7796718541259056,0.5820486810083728] (9,-1; 9,-1), time: 30.0069s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_50, [-4.684924125671387,2.840301752090454]=>[-4.684924125671387,-1e-05] (-1,-1; 15,-1), time: 0.5702s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_83, [-3.7794833183288574,2.684009313583374]=>[-0.6345303558487649,0.5259486453909963] (9,-1; 9,-1), time: 30.3579s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_55, [-3.6124677658081055,3.2472355365753174]=>[-0.5414717971884274,0.683514995563604] (9,-1; 9,-1), time: 30.0295s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_98, [-4.001171112060547,3.132009506225586]=>[-1.2791224198214286,0.04936609090822053] (9,-1; 9,-1), time: 30.1250s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_192, [-3.153667688369751,4.387561798095703]=>[1e-05,4.387561798095703] (15,-1; -1,-1), time: 0.5928s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_164, [-3.048492908477783,3.590988874435425]=>[1e-05,3.590988874435425] (15,-1; -1,-1), time: 0.7286s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_189, [-3.052171230316162,3.7228705883026123]=>[1e-05,3.7228705883026123] (15,-1; -1,-1), time: 0.7852s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_24, [-3.1689846515655518,3.3838655948638916]=>[-0.11692382538767676,0.9498715298836542] (9,-1; 9,-1), time: 30.0483s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_116, [-4.791164875030518,2.166832685470581]=>[-4.791164875030518,-1e-05] (-1,-1; 15,-1), time: 0.7812s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_5, [-3.203777551651001,2.729297637939453]=>[-0.8760920442696715,0.23521911901828949] (9,-1; 9,-1), time: 30.0653s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_14, [-3.3052451610565186,3.1689510345458984]=>[-0.2657143121193827,0.786451020393363] (9,-1; 9,-1), time: 30.0166s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_66, [-3.9070827960968018,3.3632071018218994]=>[-0.7301032371645182,0.6359880407226992] (9,-1; 9,-1), time: 30.0031s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_157, [-4.099576950073242,3.0888607501983643]=>[-1.1127078610475634,0.1704006735916936] (9,-1; 9,-1), time: 30.0171s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_0, [-3.722733497619629,3.653146505355835]=>[-0.31755487776376384,1.0213841994073984] (9,-1; 9,-1), time: 30.0181s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_29, [-3.517953395843506,3.527177333831787]=>[-0.09020534282217074,1.079968803410597] (9,-1; 9,-1), time: 30.2870s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_75, [-3.6431350708007812,3.287362575531006]=>[-0.5675301565564839,0.6327948744534453] (9,-1; 9,-1), time: 30.4780s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_61, [-4.77055025100708,2.044600009918213]=>[-4.77055025100708,-1e-05] (-1,-1; 15,-1), time: 0.7400s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_32, [-4.4856109619140625,1.9468941688537598]=>[-4.4856109619140625,-1e-05] (-1,-1; 15,-1), time: 0.6685s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_23, [-4.160780906677246,1.7124775648117065]=>[-4.160780906677246,-1e-05] (-1,-1; 15,-1), time: 0.7285s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_118, [-2.40449595451355,4.399418354034424]=>[1e-05,4.399418354034424] (15,-1; -1,-1), time: 0.7527s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_104, [-4.168818950653076,2.0900168418884277]=>[-4.168818950653076,-1e-05] (-1,-1; 15,-1), time: 0.7027s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_73, [-3.895005226135254,2.396409034729004]=>[-3.895005226135254,-1e-05] (-1,-1; 15,-1), time: 1.8925s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_68, [-4.225028038024902,1.9142374992370605]=>[-4.225028038024902,-1e-05] (-1,-1; 15,-1), time: 0.7133s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_15, [-4.380518913269043,2.299321413040161]=>[-4.380518913269043,-1e-05] (-1,-1; 15,-1), time: 3.7472s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_59, [-4.076947212219238,2.7751340866088867]=>[-4.076947212219238,-1e-05] (-1,-1; 15,-1), time: 4.3539s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_96, [-3.378098249435425,2.8287010192871094]=>[-0.5367007229706973,0.46964716397997147] (9,-1; 9,-1), time: 30.0232s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_41, [-4.959347248077393,2.3302149772644043]=>[-4.959347248077393,-1e-05] (-1,-1; 15,-1), time: 0.6683s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_153, [-3.8518013954162598,3.5260510444641113]=>[-0.4724523513791494,0.9046804395253212] (9,-1; 9,-1), time: 30.1279s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_93, [-5.257999420166016,1.5950968265533447]=>[-5.257999420166016,-1e-05] (-1,-1; 15,-1), time: 0.6771s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_36, [-5.555051803588867,2.212228298187256]=>[-5.555051803588867,-1e-05] (-1,-1; 15,-1), time: 0.6380s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_85, [-4.366176605224609,2.510239601135254]=>[-4.366176605224609,-1e-05] (-1,-1; 15,-1), time: 0.6518s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_56, [-5.03195333480835,1.8520270586013794]=>[-5.03195333480835,-1e-05] (-1,-1; 15,-1), time: 0.6975s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_84, [-4.639017581939697,2.0032262802124023]=>[-4.639017581939697,-1e-05] (-1,-1; 15,-1), time: 0.6313s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_197, [-3.737666368484497,3.732145071029663]=>[-0.658312147713523,0.8094742111859785] (9,-1; 9,-1), time: 30.0104s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_39, [-3.0337865352630615,3.5800461769104004]=>[1e-05,3.5800461769104004] (15,-1; -1,-1), time: 0.7065s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_43, [-4.976776123046875,2.4131669998168945]=>[-4.976776123046875,-1e-05] (-1,-1; 15,-1), time: 1.7442s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_127, [-3.94619083404541,2.4004805088043213]=>[-0.855636862735761,0.3019707894966109] (9,-1; 9,-1), time: 30.0185s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_101, [-2.787332534790039,3.5200352668762207]=>[-0.004883840531597788,1.1232457919269652] (9,-1; 9,-1), time: 30.0065s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_146, [-4.407811641693115,2.9213955402374268]=>[-1.4397768734703345,0.025708084148878815] (9,-1; 9,-1), time: 30.0109s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_148, [-3.9470388889312744,2.2588415145874023]=>[-1.1273266714697399,0.1147131339696386] (9,-1; 9,-1), time: 30.2524s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_168, [-3.279726266860962,2.9335060119628906]=>[-0.7349060388363476,0.3180189253027317] (9,-1; 9,-1), time: 30.0374s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_58, [-3.4896016120910645,3.1024887561798096]=>[-0.4132548075531437,0.702284102023681] (9,-1; 9,-1), time: 30.0353s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_173, [-8.515213966369629,1.1683248281478882]=>[-8.515213966369629,-1e-05] (-1,-1; 15,-1), time: 0.7666s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_135, [-3.354543685913086,4.586724758148193]=>[-0.19937921810453219,1.354653523877823] (9,-1; 9,-1), time: 30.0130s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_100, [-4.706783771514893,1.9920001029968262]=>[-4.706783771514893,-1e-05] (-1,-1; 15,-1), time: 0.7155s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_64, [-3.59736704826355,3.337097644805908]=>[-0.4698270492790752,0.7524972316032006] (9,-1; 9,-1), time: 30.0506s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_45, [-4.28229284286499,3.2946929931640625]=>[-0.9800443745057348,0.19978734467783776] (9,-1; 9,-1), time: 30.0219s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_103, [-3.866532325744629,2.2171998023986816]=>[-0.7837302109836404,0.3191180327222504] (9,-1; 9,-1), time: 30.0549s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_151, [-3.2277398109436035,2.8966007232666016]=>[-0.7694624989667938,0.37537118501678035] (9,-1; 9,-1), time: 30.0204s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_7, [-5.0947418212890625,2.3546156883239746]=>[-5.0947418212890625,-1e-05] (-1,-1; 15,-1), time: 0.7543s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_194, [-4.69268798828125,2.588564395904541]=>[-4.69268798828125,-1e-05] (-1,-1; 15,-1), time: 0.6753s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_179, [-2.9839587211608887,2.745971202850342]=>[-0.32673490263956495,0.7233845511104959] (9,-1; 9,-1), time: 30.0193s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_87, [-3.178534507751465,3.3521714210510254]=>[1e-05,3.3521714210510254] (15,-1; -1,-1), time: 2.9180s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_124, [-5.834275245666504,1.555159568786621]=>[-5.834275245666504,-1e-05] (-1,-1; 15,-1), time: 0.7737s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_19, [-3.754434585571289,3.6996371746063232]=>[-0.33447716229155544,1.0916100264380915] (9,-1; 9,-1), time: 30.0248s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_48, [-4.165623664855957,1.653046727180481]=>[-0.9856188967240205,0.028541515345464674] (9,-1; 9,-1), time: 30.0101s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_110, [-3.8493993282318115,2.339562177658081]=>[-3.8493993282318115,-1e-05] (-1,-1; 15,-1), time: 0.7218s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_8, [-4.626641273498535,1.891844630241394]=>[-4.626641273498535,-1e-05] (-1,-1; 15,-1), time: 0.6794s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_113, [-4.153955936431885,1.9521024227142334]=>[-0.7295543397169884,0.2668672072515941] (9,-1; 9,-1), time: 30.2121s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_166, [-4.831564903259277,2.2729570865631104]=>[-4.831564903259277,-1e-05] (-1,-1; 15,-1), time: 2.5881s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_170, [-6.063485145568848,3.021815538406372]=>[-6.063485145568848,-1e-05] (-1,-1; 15,-1), time: 0.6962s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_182, [-3.612055778503418,2.3846423625946045]=>[-0.8947287747390037,0.1118008616154612] (9,-1; 9,-1), time: 30.0647s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_12, [-3.922147750854492,3.502695083618164]=>[-0.9135596425575955,0.5851161718109154] (9,-1; 9,-1), time: 30.0139s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_51, [-3.2201850414276123,3.239609718322754]=>[-0.44545565136852394,0.6674850593578363] (9,-1; 9,-1), time: 30.0332s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_193, [-3.4095187187194824,3.499513626098633]=>[-0.11988581122641859,1.07619947700237] (9,-1; 9,-1), time: 30.0200s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_111, [-3.900233030319214,1.8046156167984009]=>[-3.900233030319214,-1e-05] (-1,-1; 15,-1), time: 0.5570s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_63, [-4.811756610870361,2.687791109085083]=>[-1.0108828819086755,0.27621803597790073] (9,-1; 9,-1), time: 30.0221s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_52, [-5.135311126708984,2.037721872329712]=>[-5.135311126708984,-1e-05] (-1,-1; 15,-1), time: 0.5444s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_38, [-4.276949405670166,2.286707639694214]=>[-4.276949405670166,-1e-05] (-1,-1; 15,-1), time: 0.7115s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_46, [-3.6030216217041016,3.182258129119873]=>[-0.8476852698457112,0.35654099014813934] (9,-1; 9,-1), time: 30.0226s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_35, [-4.837596416473389,2.1889171600341797]=>[-4.837596416473389,-1e-05] (-1,-1; 15,-1), time: 0.7153s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_163, [-4.632298469543457,1.701011300086975]=>[-4.632298469543457,-1e-05] (-1,-1; 15,-1), time: 0.5688s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_79, [-5.693758010864258,1.99551522731781]=>[-5.693758010864258,-1e-05] (-1,-1; 15,-1), time: 0.6059s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_158, [-4.640705108642578,2.5863990783691406]=>[-0.9818911845456282,0.31055052498960745] (9,-1; 9,-1), time: 30.1909s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_13, [-4.24979829788208,2.5646114349365234]=>[-0.7253628674378055,0.40529658339148444] (9,-1; 9,-1), time: 30.0412s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_184, [-4.990695476531982,1.9628609418869019]=>[-4.990695476531982,-1e-05] (-1,-1; 15,-1), time: 0.6995s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_160, [-4.659064769744873,2.1715939044952393]=>[-4.659064769744873,-1e-05] (-1,-1; 15,-1), time: 0.5559s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_147, [-4.843867301940918,1.3617796897888184]=>[-4.843867301940918,-1e-05] (-1,-1; 15,-1), time: 0.5537s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_62, [-3.996777057647705,2.6365528106689453]=>[-0.8072250780128094,0.28299537896394705] (9,-1; 9,-1), time: 30.0214s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_77, [-6.724786758422852,1.332074522972107]=>[-6.724786758422852,-1e-05] (-1,-1; 15,-1), time: 0.7508s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_37, [-3.90323805809021,3.120452642440796]=>[-0.2644762454482934,0.9716069065378875] (9,-1; 9,-1), time: 30.0174s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_128, [-4.10824728012085,2.1059415340423584]=>[-4.10824728012085,-1e-05] (-1,-1; 15,-1), time: 1.6149s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_27, [-2.993645191192627,3.155268669128418]=>[-0.051869294993296976,0.940401674518637] (9,-1; 9,-1), time: 30.0116s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_16, [-4.991394519805908,2.359792709350586]=>[-4.991394519805908,-1e-05] (-1,-1; 15,-1), time: 0.7842s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_171, [-4.0618462562561035,2.345399856567383]=>[-1.02901819794847,0.09357298191001484] (9,-1; 9,-1), time: 30.0073s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_105, [-4.572564601898193,1.386038064956665]=>[-4.572564601898193,-1e-05] (-1,-1; 15,-1), time: 0.5930s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_131, [-3.8472580909729004,2.6490859985351562]=>[-0.6049134273494579,0.48390166332106815] (9,-1; 9,-1), time: 30.0133s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_120, [-5.160921096801758,1.457761526107788]=>[-5.160921096801758,-1e-05] (-1,-1; 15,-1), time: 0.7041s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_67, [-3.61356782913208,3.2831082344055176]=>[-0.0018040613785021975,1.3051885395611709] (9,-1; 9,-1), time: 30.0059s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_10, [-4.965801239013672,2.1479439735412598]=>[-4.965801239013672,-1e-05] (-1,-1; 15,-1), time: 0.6434s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_121, [-3.574951171875,2.869147777557373]=>[-0.6912076617859393,0.4208122896869235] (9,-1; 9,-1), time: 30.0061s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_4, [-4.532447814941406,2.283534526824951]=>[-0.7801558281085391,0.36246875495421427] (9,-1; 9,-1), time: 30.0776s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_76, [-4.2869720458984375,2.4263041019439697]=>[-1.0336522993825508,0.048035455848354225] (9,-1; 9,-1), time: 30.1212s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_161, [-4.339265823364258,2.0767159461975098]=>[-4.339265823364258,-1e-05] (-1,-1; 15,-1), time: 12.6119s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_102, [-3.753661870956421,3.0580878257751465]=>[-0.773331079886149,0.4001596389105612] (9,-1; 9,-1), time: 30.0063s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_133, [-3.4822211265563965,3.3496346473693848]=>[-0.25120821050769293,0.9735076665945792] (9,-1; 9,-1), time: 30.0061s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_80, [-3.5572280883789062,3.1096813678741455]=>[-0.5269761429654971,0.5386309080584485] (9,-1; 9,-1), time: 30.0139s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_53, [-3.3429033756256104,4.49188232421875]=>[-0.42846836272416755,0.9771505701413846] (9,-1; 9,-1), time: 30.0083s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_106, [-4.481947898864746,2.2808032035827637]=>[-0.9933457243144703,0.013126608309974747] (9,-1; 9,-1), time: 30.0086s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_6, [-3.9779112339019775,2.495594024658203]=>[-1.105157518466554,0.007013735680198845] (9,-1; 9,-1), time: 30.0057s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_129, [-3.5073082447052,3.1289560794830322]=>[-0.18551179005431373,0.9491526123022702] (9,-1; 9,-1), time: 30.0114s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_92, [-3.882127285003662,2.536159038543701]=>[-0.9372988442373121,0.06918105282846441] (9,-1; 9,-1), time: 30.0166s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_70, [-3.9434468746185303,2.1469321250915527]=>[-0.9973284947465947,0.07460445423984517] (9,-1; 9,-1), time: 30.0113s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_112, [-4.57562780380249,2.544558525085449]=>[-1.1444424108195899,0.035792921765844435] (9,-1; 9,-1), time: 30.0104s, #vars: 2239, #constrs: 1681, improved: True
Solving MIP for lay10_178, [-3.6763951778411865,2.7176575660705566]=>[-0.7281720331048658,0.2607805430560711] (9,-1; 9,-1), time: 30.0139s, #vars: 2239, #constrs: 1681, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
3 /27 torch.Size([1, 200])
best_l after optimization: -18.278013229370117 with beta sum per layer: []
alpha/beta optimization time: 5.6280598640441895
alpha-CROWN with intermediate bounds by MIP: tensor([[ 4.4021,  2.2848,  1.8168, -0.8451,  2.9478,  2.9995,  2.6288,  1.7050,
          0.3383]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 372.3677062988281, ub improved 440.0497741699219, time 219.5695
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=10, bias=True) 5 12 torch.Size([10])
MIP finished with 559.4336149692535s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
3 /27 torch.Size([1, 200])
4 /29 torch.Size([1, 200])
best_l after optimization: -21.006141662597656 with beta sum per layer: []
alpha/beta optimization time: 5.53891921043396
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 4.6157,  2.5863,  2.1736, -0.5554,  3.2451,  3.2192,  2.9994,  2.0313,
          0.6909]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 4.6157,  2.5863,  2.1736, -0.5554,  3.2451,  0.0000,  3.2192,  2.9994,
          2.0313,  0.6909]], device='cuda:0') min: tensor(-0.5554, device='cuda:0')
time threshold left for bab: 326.2314102649689
##### [0:15] Tested against 3 ######
Model prediction is: tensor([[-3.2725, -1.8112, -1.2011,  3.5138, -2.6684,  6.1777, -1.7582, -1.4164,
          0.0590,  1.4769]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])
3 /27 torch.Size([1, 200])
4 /29 torch.Size([1, 200])
best_l after optimization: 0.5555761456489563 with beta sum per layer: []
alpha/beta optimization time: 1.991560459136963
alpha-CROWN with fixed intermediate bounds: tensor([[-0.5556]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.5555762052536011
layer 0 size torch.Size([200]) unstable 46
layer 1 size torch.Size([200]) unstable 43
layer 2 size torch.Size([200]) unstable 55
layer 3 size torch.Size([200]) unstable 83
layer 4 size torch.Size([200]) unstable 106
-----------------
# of unstable neurons: 333
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 200]) pre split depth:  6
batch:  torch.Size([1, 200]) post split depth:  6
splitting decisions: 
split level 0: [4, 74] 
split level 1: [3, 73] 
split level 2: [3, 121] 
split level 3: [4, 186] 
split level 4: [4, 31] 
split level 5: [3, 91] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: -6.970160007476807 with beta sum per layer: [0.0, 0.0, 0.0, 13.044329643249512, 10.551674842834473]
alpha/beta optimization time: 0.356842041015625
This batch time : update_bounds func: 0.3727	 prepare: 0.0075	 bound: 0.3573	 transfer: 0.0011	 finalize: 0.0066
Accumulated time: update_bounds func: 0.3727	 prepare: 0.0075	 bound: 0.3573	 transfer: 0.0011	 finalize: 0.0066
batch bounding time:  0.37299060821533203
Current worst splitting domains [lb, ub] (depth):
[-0.38098,   inf] (7), [-0.32797,   inf] (7), [-0.31468,   inf] (7), [-0.25835,   inf] (7), [-0.21854,   inf] (7), [-0.19712,   inf] (7), [-0.18809,   inf] (7), [-0.16391,   inf] (7), 
length of domains: 8
Total time: 0.4354	 pickout: 0.0012	 decision: 0.0500	 get_bound: 0.3833	 add_domain: 0.0009
Current lb:-0.3809816837310791
64 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 2.897897720336914

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 200]) pre split depth:  3
batch:  torch.Size([8, 200]) post split depth:  3
splitting decisions: 
split level 0: [4, 176] [3, 32] [4, 176] [4, 176] [4, 176] [3, 32] [4, 176] [4, 176] 
split level 1: [2, 74] [0, 194] [2, 74] [4, 167] [0, 84] [0, 84] [0, 194] [0, 194] 
split level 2: [4, 167] [3, 166] [4, 167] [0, 84] [3, 166] [3, 166] [0, 84] [0, 84] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: 0.9653918147087097 with beta sum per layer: [4.887690544128418, 0.0, 3.876563549041748, 23.87942886352539, 29.603727340698242]
alpha/beta optimization time: 0.3515660762786865
This batch time : update_bounds func: 0.3710	 prepare: 0.0100	 bound: 0.3520	 transfer: 0.0021	 finalize: 0.0067
Accumulated time: update_bounds func: 0.7437	 prepare: 0.0175	 bound: 0.7092	 transfer: 0.0021	 finalize: 0.0133
batch bounding time:  0.37120914459228516
Current worst splitting domains [lb, ub] (depth):
[-0.30581,   inf] (11), [-0.27790,   inf] (11), [-0.23981,   inf] (11), [-0.21104,   inf] (11), [-0.20250,   inf] (11), [-0.19439,   inf] (11), [-0.19386,   inf] (11), [-0.16923,   inf] (11), [-0.16781,   inf] (11), [-0.15829,   inf] (11), [-0.12983,   inf] (11), [-0.11472,   inf] (11), [-0.11205,   inf] (11), [-0.10657,   inf] (11), [-0.10525,   inf] (11), [-0.09288,   inf] (11), [-0.08742,   inf] (11), [-0.08574,   inf] (11), [-0.08517,   inf] (11), [-0.08229,   inf] (11), 
length of domains: 30
Total time: 0.4125	 pickout: 0.0025	 decision: 0.0286	 get_bound: 0.3794	 add_domain: 0.0020
Current lb:-0.3058074712753296
128 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.3108537197113037

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([30, 200]) pre split depth:  1
batch:  torch.Size([30, 200]) post split depth:  1
splitting decisions: 
split level 0: [4, 133] [1, 168] [4, 133] [4, 133] [4, 176] [0, 194] [4, 167] [0, 194] [4, 133] [4, 133] 
regular batch size: 2*30, diving batch size 1*0
best_l after optimization: 0.38097965717315674 with beta sum per layer: [7.671137809753418, 0.7075211405754089, 4.385430335998535, 20.9014835357666, 31.908605575561523]
alpha/beta optimization time: 0.3837614059448242
This batch time : update_bounds func: 0.4029	 prepare: 0.0102	 bound: 0.3842	 transfer: 0.0010	 finalize: 0.0074
Accumulated time: update_bounds func: 1.1466	 prepare: 0.0277	 bound: 1.0934	 transfer: 0.0010	 finalize: 0.0206
batch bounding time:  0.4031393527984619
Current worst splitting domains [lb, ub] (depth):
[-0.28627,   inf] (13), [-0.26970,   inf] (13), [-0.21716,   inf] (13), [-0.19258,   inf] (13), [-0.18856,   inf] (13), [-0.14684,   inf] (13), [-0.14644,   inf] (13), [-0.14415,   inf] (13), [-0.13269,   inf] (13), [-0.12497,   inf] (13), [-0.10749,   inf] (13), [-0.10395,   inf] (13), [-0.08969,   inf] (13), [-0.07961,   inf] (13), [-0.07200,   inf] (13), [-0.05817,   inf] (13), [-0.05169,   inf] (13), [-0.05114,   inf] (13), [-0.04357,   inf] (13), [-0.03696,   inf] (13), 
length of domains: 27
Total time: 0.4446	 pickout: 0.0068	 decision: 0.0321	 get_bound: 0.4032	 add_domain: 0.0025
Current lb:-0.2862735092639923
188 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.7565221786499023

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([27, 200]) pre split depth:  1
batch:  torch.Size([27, 200]) post split depth:  1
splitting decisions: 
split level 0: [4, 153] [0, 194] [4, 153] [4, 133] [0, 194] [4, 133] [3, 169] [3, 32] [4, 153] [0, 84] 
regular batch size: 2*27, diving batch size 1*0
best_l after optimization: 0.44263386726379395 with beta sum per layer: [7.857273101806641, 0.0, 6.606967926025391, 16.34040069580078, 27.112199783325195]
alpha/beta optimization time: 0.37019991874694824
This batch time : update_bounds func: 0.3883	 prepare: 0.0108	 bound: 0.3706	 transfer: 0.0010	 finalize: 0.0057
Accumulated time: update_bounds func: 1.5349	 prepare: 0.0385	 bound: 1.4640	 transfer: 0.0010	 finalize: 0.0264
batch bounding time:  0.38851499557495117
Current worst splitting domains [lb, ub] (depth):
[-0.26148,   inf] (15), [-0.23225,   inf] (15), [-0.19017,   inf] (15), [-0.17051,   inf] (15), [-0.15094,   inf] (15), [-0.12619,   inf] (15), [-0.12492,   inf] (15), [-0.12452,   inf] (15), [-0.12265,   inf] (15), [-0.10258,   inf] (15), [-0.08408,   inf] (15), [-0.08390,   inf] (15), [-0.08125,   inf] (15), [-0.06623,   inf] (15), [-0.06582,   inf] (15), [-0.04765,   inf] (15), [-0.03776,   inf] (15), [-0.03536,   inf] (15), [-0.03226,   inf] (15), [-0.01845,   inf] (15), 
length of domains: 24
Total time: 0.4305	 pickout: 0.0061	 decision: 0.0341	 get_bound: 0.3886	 add_domain: 0.0017
Current lb:-0.26148244738578796
242 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 4.187901735305786

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([24, 200]) pre split depth:  2
batch:  torch.Size([24, 200]) post split depth:  2
splitting decisions: 
split level 0: [1, 168] [0, 84] [0, 194] [4, 167] [4, 153] [1, 23] [2, 74] [0, 194] [3, 169] [0, 194] 
split level 1: [0, 66] [1, 45] [4, 145] [4, 153] [0, 84] [1, 45] [4, 153] [4, 153] [1, 45] [3, 171] 
regular batch size: 2*48, diving batch size 1*0
best_l after optimization: -3.608672618865967 with beta sum per layer: [17.56903648376465, 1.4593901634216309, 19.03015899658203, 17.080427169799805, 46.349273681640625]
alpha/beta optimization time: 0.38489317893981934
This batch time : update_bounds func: 0.4125	 prepare: 0.0154	 bound: 0.3853	 transfer: 0.0015	 finalize: 0.0099
Accumulated time: update_bounds func: 1.9474	 prepare: 0.0540	 bound: 1.8494	 transfer: 0.0015	 finalize: 0.0363
batch bounding time:  0.41283297538757324
Current worst splitting domains [lb, ub] (depth):
[-0.20882,   inf] (18), [-0.20531,   inf] (18), [-0.14840,   inf] (18), [-0.13804,   inf] (18), [-0.11769,   inf] (18), [-0.09518,   inf] (18), [-0.09219,   inf] (18), [-0.08460,   inf] (18), [-0.07184,   inf] (18), [-0.06899,   inf] (18), [-0.06289,   inf] (18), [-0.05237,   inf] (18), [-0.05086,   inf] (18), [-0.04673,   inf] (18), [-0.04288,   inf] (18), [-0.04286,   inf] (18), [-0.03810,   inf] (18), [-0.03522,   inf] (18), [-0.02783,   inf] (18), [-0.02528,   inf] (18), 
length of domains: 22
Total time: 0.4604	 pickout: 0.0051	 decision: 0.0323	 get_bound: 0.4213	 add_domain: 0.0018
Current lb:-0.20881611108779907
338 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 4.649667024612427

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([22, 200]) pre split depth:  2
batch:  torch.Size([22, 200]) post split depth:  2
splitting decisions: 
split level 0: [3, 32] [3, 32] [3, 169] [3, 169] [1, 45] [1, 168] [4, 145] [3, 169] [1, 168] [3, 171] 
split level 1: [4, 145] [4, 145] [3, 166] [0, 66] [4, 122] [2, 74] [0, 130] [0, 66] [0, 84] [1, 45] 
regular batch size: 2*44, diving batch size 1*0
best_l after optimization: -3.721862554550171 with beta sum per layer: [15.76051139831543, 0.7065948843955994, 10.349536895751953, 3.703350782394409, 42.332908630371094]
alpha/beta optimization time: 0.3678405284881592
This batch time : update_bounds func: 0.3942	 prepare: 0.0151	 bound: 0.3683	 transfer: 0.0012	 finalize: 0.0093
Accumulated time: update_bounds func: 2.3416	 prepare: 0.0691	 bound: 2.2176	 transfer: 0.0012	 finalize: 0.0456
batch bounding time:  0.39444851875305176
Current worst splitting domains [lb, ub] (depth):
[-0.16087,   inf] (21), [-0.15697,   inf] (21), [-0.11284,   inf] (21), [-0.10839,   inf] (21), [-0.07511,   inf] (21), [-0.06766,   inf] (21), [-0.06651,   inf] (21), [-0.05664,   inf] (21), [-0.05172,   inf] (21), [-0.03064,   inf] (21), [-0.03063,   inf] (21), [-0.02164,   inf] (21), [-0.02156,   inf] (21), [-0.01941,   inf] (21), [-0.01876,   inf] (21), [-0.00650,   inf] (21), [-0.00576,   inf] (21), 
length of domains: 17
Total time: 0.4428	 pickout: 0.0050	 decision: 0.0340	 get_bound: 0.4024	 add_domain: 0.0014
Current lb:-0.1608673632144928
426 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 5.093460321426392

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([17, 200]) pre split depth:  2
batch:  torch.Size([17, 200]) post split depth:  2
splitting decisions: 
split level 0: [0, 194] [0, 194] [4, 9] [4, 9] [0, 130] [0, 36] [0, 84] [0, 130] [0, 130] [3, 171] 
split level 1: [0, 84] [0, 84] [4, 122] [4, 122] [0, 66] [0, 66] [4, 145] [3, 166] [3, 166] [0, 84] 
regular batch size: 2*34, diving batch size 1*0
best_l after optimization: -4.191240310668945 with beta sum per layer: [2.7681570053100586, 0.5397717952728271, 2.7004973888397217, 0.0, 36.786170959472656]
alpha/beta optimization time: 0.3504316806793213
This batch time : update_bounds func: 0.3705	 prepare: 0.0122	 bound: 0.3508	 transfer: 0.0009	 finalize: 0.0064
Accumulated time: update_bounds func: 2.7121	 prepare: 0.0813	 bound: 2.5685	 transfer: 0.0009	 finalize: 0.0520
batch bounding time:  0.3707129955291748
Current worst splitting domains [lb, ub] (depth):
[-0.09595,   inf] (24), [-0.09369,   inf] (24), [-0.07192,   inf] (24), [-0.06758,   inf] (24), [-0.06094,   inf] (24), [-0.05651,   inf] (24), [-0.03635,   inf] (24), [-0.03565,   inf] (24), [-0.01432,   inf] (24), [-0.00216,   inf] (24), 
length of domains: 10
Total time: 0.4121	 pickout: 0.0041	 decision: 0.0301	 get_bound: 0.3771	 add_domain: 0.0009
Current lb:-0.09594845771789551
494 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 5.506433010101318

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([10, 200]) pre split depth:  3
batch:  torch.Size([10, 200]) post split depth:  3
splitting decisions: 
split level 0: [1, 45] [1, 45] [0, 194] [0, 194] [0, 194] [0, 194] [1, 45] [1, 45] [4, 95] [1, 45] 
split level 1: [3, 166] [3, 166] [1, 45] [1, 45] [1, 172] [1, 172] [3, 166] [3, 166] [4, 83] [3, 166] 
split level 2: [4, 83] [4, 83] [1, 172] [1, 172] [3, 17] [3, 17] [1, 172] [1, 172] [0, 66] [1, 172] 
regular batch size: 2*40, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -6.772183418273926 with beta sum per layer: [10.311326026916504, 0.0, 0.0, 0.0, 25.482789993286133]
alpha/beta optimization time: 0.012687444686889648
This batch time : update_bounds func: 0.0372	 prepare: 0.0158	 bound: 0.0131	 transfer: 0.0009	 finalize: 0.0071
Accumulated time: update_bounds func: 2.7493	 prepare: 0.0971	 bound: 2.5815	 transfer: 0.0009	 finalize: 0.0591
batch bounding time:  0.03727555274963379
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0797	 pickout: 0.0027	 decision: 0.0289	 get_bound: 0.0481	 add_domain: 0.0000
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 5.586926460266113

Image 15 label 3 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 5.649991273880005
15 1.0000000116860974e-07
##### [0:15] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 0.6909465789794922
Image 15 label 9 verification end, final lower bound 0.6909465789794922, upper bound inf, time: 0.00043392181396484375
15 0.6909465789794922
##### [0:15] Tested against 8 ######
Initial alpha-CROWN verified for label 8 with bound 2.0313096046447754
Image 15 label 8 verification end, final lower bound 2.0313096046447754, upper bound inf, time: 0.00046539306640625
15 2.0313096046447754
##### [0:15] Tested against 2 ######
Initial alpha-CROWN verified for label 2 with bound 2.1736011505126953
Image 15 label 2 verification end, final lower bound 2.1736011505126953, upper bound inf, time: 0.0005619525909423828
15 2.1736011505126953
##### [0:15] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 2.999392032623291
Image 15 label 7 verification end, final lower bound 2.999392032623291, upper bound inf, time: 0.0004825592041015625
15 2.999392032623291
##### [0:15] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 2.5863442420959473
Image 15 label 1 verification end, final lower bound 2.5863442420959473, upper bound inf, time: 0.0004661083221435547
15 2.5863442420959473
##### [0:15] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 3.245112180709839
Image 15 label 4 verification end, final lower bound 3.245112180709839, upper bound inf, time: 0.0005681514739990234
15 3.245112180709839
##### [0:15] Tested against 6 ######
Initial alpha-CROWN verified for label 6 with bound 3.2191686630249023
Image 15 label 6 verification end, final lower bound 3.2191686630249023, upper bound inf, time: 0.00045609474182128906
15 3.2191686630249023
##### [0:15] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 4.615684509277344
Image 15 label 0 verification end, final lower bound 4.615684509277344, upper bound inf, time: 0.00045228004455566406
15 4.615684509277344
##### [0:15] Tested against 5 ######
groundtruth label, skip!
Result: image 15 verification success (with branch and bound)!
Wall time: 580.5776083469391

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [15]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 579.4224715232849
