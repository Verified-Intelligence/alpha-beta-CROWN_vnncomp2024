Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_6_200_nat.pth
  name: mnist_6_200
data:
  start: 5
  end: 6
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.015
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 22:49:42 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0150]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_200]_start=5_end=6_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 1, correct label 1, image norm 54.333335876464844, logits tensor([-3.7237,  9.5496,  0.7830, -0.5446, -3.1168, -1.8814, -1.2705,  2.5039,
         1.7631, -0.6686], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-3.7237,  9.5496,  0.7830, -0.5446, -3.1168, -1.8814, -1.2705,  2.5039,
          1.7631, -0.6686]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-24.4561, -31.2558, -29.3468, -30.5181, -25.8484, -26.6702, -31.8144,
         -27.6519, -31.3703]], device='cuda:0') None
best_l after optimization: 198.2193603515625 with beta sum per layer: []
alpha/beta optimization time: 7.902726888656616
initial alpha-CROWN bounds: tensor([[-17.2581, -24.4990, -22.6204, -21.4993, -19.9881, -20.7076, -24.7264,
         -22.5143, -24.4061]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-24.7264, device='cuda:0', grad_fn=<MinBackward1>)
##### PGD attack: True label: 1, Tested against: ['all'] ######
pgd prediction: tensor([-3.4267,  7.8106,  1.2743, -0.3240, -2.5276, -1.8348, -1.2097,  2.9689,
         1.1753, -0.4356], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([11.2373,     inf,  6.5363,  8.1346, 10.3382,  9.6454,  9.0203,  4.8417,
         6.6353,  8.2462], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Sorted order for labels to verify: [7, 2, 8, 3, 9, 6, 5, 4, 0, 1]
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 713.0387413024903]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_43', 'lay4_142', 'lay4_5', 'lay4_58', 'lay4_153', 'lay4_179', 'lay4_77', 'lay4_103', 'lay4_163', 'lay4_146', 'lay4_134', 'lay4_76', 'lay4_154', 'lay4_169', 'lay4_75', 'lay4_116', 'lay4_29', 'lay4_124', 'lay4_69', 'lay4_81', 'lay4_47', 'lay4_193', 'lay4_192', 'lay4_104', 'lay4_1', 'lay4_196', 'lay4_162', 'lay4_72', 'lay4_94', 'lay4_53', 'lay4_0', 'lay4_20', 'lay4_6', 'lay4_70', 'lay4_191', 'lay4_14', 'lay4_45', 'lay4_150', 'lay4_133', 'lay4_39', 'lay4_147', 'lay4_160', 'lay4_8', 'lay4_12', 'lay4_185', 'lay4_197', 'lay4_168', 'lay4_4', 'lay4_126', 'lay4_137', 'lay4_123', 'lay4_188', 'lay4_100', 'lay4_37', 'lay4_105', 'lay4_19', 'lay4_74', 'lay4_63', 'lay4_78', 'lay4_95', 'lay4_27', 'lay4_190', 'lay4_182', 'lay4_172', 'lay4_194', 'lay4_17', 'lay4_88', 'lay4_157', 'lay4_67', 'lay4_44', 'lay4_79', 'lay4_131', 'lay4_178', 'lay4_61', 'lay4_181', 'lay4_112', 'lay4_24', 'lay4_177', 'lay4_184', 'lay4_174', 'lay4_62', 'lay4_99', 'lay4_135', 'lay4_166'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_116, [-0.0664127916097641,0.9030590057373047]=>[1e-05,0.9030590057373047] (15,-1; -1,-1), time: 0.8116s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_154, [-0.7698588967323303,0.1496451050043106]=>[-0.7698588967323303,-1e-05] (-1,-1; 15,-1), time: 0.9851s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_124, [-0.9706916809082031,0.07664518803358078]=>[-0.9706916809082031,-1e-05] (-1,-1; 15,-1), time: 0.7458s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_43, [-0.8131844401359558,0.2914399802684784]=>[-0.6420337795928647,0.09667073547078701] (2,-1; 2,-1), time: 2.7183s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_163, [-0.46043288707733154,0.4626743197441101]=>[-0.3401110904986214,0.3148267468042713] (2,-1; 2,-1), time: 3.0984s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_69, [-0.18579068779945374,0.6973640322685242]=>[1e-05,0.6973640322685242] (15,-1; -1,-1), time: 1.4861s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_134, [-1.05802321434021,0.20140591263771057]=>[-0.8545438625631593,0.004058219633650393] (2,-1; 2,-1), time: 3.2292s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_76, [-0.5087211728096008,0.5171014666557312]=>[-0.33012899188277667,0.4047809409181815] (2,-1; 2,-1), time: 3.7185s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_58, [-0.7680526971817017,0.3207876682281494]=>[-0.6405358307195402,0.12476666584816426] (2,-1; 2,-1), time: 3.9731s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_153, [-1.0398327112197876,0.3815179169178009]=>[-0.8059799808902534,0.11851773976927663] (2,-1; 2,-1), time: 4.0287s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_192, [-1.0717628002166748,0.036640703678131104]=>[-1.0717628002166748,-1e-05] (-1,-1; 15,-1), time: 0.7892s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_146, [-0.7290248274803162,0.16726884245872498]=>[-0.5377158232196985,0.013236743836410159] (2,-1; 2,-1), time: 4.1969s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_47, [-0.9136471748352051,0.16069453954696655]=>[-0.9136471748352051,-1e-05] (-1,-1; 15,-1), time: 1.3146s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_104, [-0.11953870952129364,1.159280776977539]=>[1e-05,1.159280776977539] (15,-1; -1,-1), time: 0.7497s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_75, [-0.7089076638221741,0.3089439272880554]=>[-0.5217151602393549,0.14676487133333727] (2,-1; 2,-1), time: 4.4845s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_169, [-0.6838423013687134,0.45872965455055237]=>[-0.4854197960102785,0.2947994928477593] (2,-1; 2,-1), time: 4.5025s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_179, [-0.7962026596069336,0.29437175393104553]=>[-0.5865247056966213,0.11284238028150288] (2,-1; 2,-1), time: 4.5259s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_1, [-1.1374621391296387,0.012342393398284912]=>[-1.1374621391296387,-1e-05] (-1,-1; 15,-1), time: 0.6592s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_29, [-0.7224651575088501,0.3154488801956177]=>[-0.5562424986124502,0.14065842169141612] (2,-1; 2,-1), time: 4.1714s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_5, [-0.6851682066917419,0.31006744503974915]=>[-0.5395942052842263,0.09961447569146847] (2,-1; 2,-1), time: 5.1757s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_0, [-1.0005459785461426,0.03954130411148071]=>[-1.0005459785461426,-1e-05] (-1,-1; 15,-1), time: 0.6927s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_70, [-0.9552358984947205,0.046237677335739136]=>[-0.9552358984947205,-1e-05] (-1,-1; 15,-1), time: 0.6553s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_6, [-0.9908276796340942,0.04964613914489746]=>[-0.9908276796340942,-1e-05] (-1,-1; 15,-1), time: 0.7642s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_77, [-0.6806412935256958,0.38111141324043274]=>[-0.5124725578920313,0.14161992398142378] (2,-1; 2,-1), time: 5.4373s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_53, [-1.1167093515396118,0.1866777241230011]=>[-1.1167093515396118,-1e-05] (-1,-1; 15,-1), time: 1.4203s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_103, [-0.5073771476745605,0.4630526900291443]=>[-0.2900431994850882,0.32832955495037525] (2,-1; 2,-1), time: 5.9446s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_45, [-0.04935401678085327,1.463698387145996]=>[1e-05,1.463698387145996] (15,-1; -1,-1), time: 0.8370s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_133, [-1.0137946605682373,0.025653690099716187]=>[-1.0137946605682373,-1e-05] (-1,-1; 15,-1), time: 0.8402s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_142, [-0.6141905188560486,0.4044177234172821]=>[-0.45449363178425606,0.18645795647528898] (2,-1; 2,-1), time: 6.4136s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_147, [-0.8790567517280579,0.07025274634361267]=>[-0.8790567517280579,-1e-05] (-1,-1; 15,-1), time: 0.7417s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_193, [-0.6891598105430603,0.22096839547157288]=>[-0.4705885769207007,0.15042010097423997] (2,-1; 2,-1), time: 3.4354s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_81, [-0.5586224794387817,0.45155805349349976]=>[-0.339302762790086,0.3217611206374573] (2,-1; 2,-1), time: 4.3988s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_168, [-0.8715351223945618,0.058682575821876526]=>[-0.8715351223945618,-1e-05] (-1,-1; 15,-1), time: 0.6504s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_72, [-0.7724334001541138,0.25566625595092773]=>[-0.5722323566043704,0.11021675433575409] (2,-1; 2,-1), time: 3.4181s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_162, [-0.5386008024215698,0.505932629108429]=>[-0.4012448261432266,0.2924783804897063] (2,-1; 2,-1), time: 3.7585s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_4, [-1.1093673706054688,0.06825438141822815]=>[-1.1093673706054688,-1e-05] (-1,-1; 15,-1), time: 0.6760s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_126, [-1.0195006132125854,0.07999798655509949]=>[-1.0195006132125854,-1e-05] (-1,-1; 15,-1), time: 0.5361s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_196, [-0.5265125036239624,0.4063992500305176]=>[-0.3941156355210879,0.27106609917835156] (2,-1; 2,-1), time: 4.4849s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_14, [-0.9017524719238281,0.15425890684127808]=>[-0.6847189869616327,0.03638126555934895] (2,-1; 2,-1), time: 3.9734s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_191, [-0.4388696551322937,0.371570348739624]=>[-0.2891486973498003,0.23047935769599925] (2,-1; 2,-1), time: 4.2762s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_105, [-0.9780288338661194,0.10279456526041031]=>[-0.9780288338661194,-1e-05] (-1,-1; 15,-1), time: 0.7436s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_94, [-0.7539633512496948,0.26230672001838684]=>[-0.5248472868908338,0.10917181094491887] (2,-1; 2,-1), time: 5.5103s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_20, [-0.9295870065689087,0.12704746425151825]=>[-0.6754201580696472,0.019770421702601904] (2,-1; 2,-1), time: 5.5197s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_39, [-0.7924140095710754,0.15929153561592102]=>[-0.5944698760206011,0.028796400513590968] (2,-1; 2,-1), time: 4.6259s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_12, [-0.7316802740097046,0.20794767141342163]=>[-0.5547373018726232,0.07321455900769025] (2,-1; 2,-1), time: 3.9114s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_160, [-0.7094141244888306,0.2891315221786499]=>[-0.5109524899209252,0.12919768587047947] (2,-1; 2,-1), time: 4.4942s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_63, [-1.0222678184509277,0.01986651122570038]=>[-1.0222678184509277,-1e-05] (-1,-1; 15,-1), time: 0.6639s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_197, [-0.6560990214347839,0.1422332376241684]=>[-0.5310049369380766,0.001117352988679604] (2,-1; 2,-1), time: 4.0483s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_78, [-1.1918483972549438,0.052112847566604614]=>[-1.1918483972549438,-1e-05] (-1,-1; 15,-1), time: 0.7255s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_150, [-0.7111759185791016,0.3936777114868164]=>[-0.5073708964575527,0.15150439621104822] (2,-1; 2,-1), time: 5.4744s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_8, [-0.6818151473999023,0.20499755442142487]=>[-0.5388348247641555,0.04057709020943446] (2,-1; 2,-1), time: 4.8670s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_190, [-1.0486416816711426,0.01185503602027893]=>[-1.0486416816711426,-1e-05] (-1,-1; 15,-1), time: 0.5581s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_123, [-0.6343032121658325,0.3766351342201233]=>[-0.4738728446002754,0.22759228045708624] (2,-1; 2,-1), time: 3.4143s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_194, [-0.7521371841430664,0.10836777091026306]=>[-0.7521371841430664,-1e-05] (-1,-1; 15,-1), time: 0.8350s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_88, [-0.09425482153892517,1.0232549905776978]=>[1e-05,1.0232549905776978] (15,-1; -1,-1), time: 0.7350s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_157, [-0.9135797023773193,0.020167961716651917]=>[-0.9135797023773193,-1e-05] (-1,-1; 15,-1), time: 0.7149s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_100, [-0.602968692779541,0.35313680768013]=>[-0.47366101383724235,0.20392571210379015] (2,-1; 2,-1), time: 3.9339s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_137, [-0.2821294665336609,0.8236101269721985]=>[-0.04994164498578843,0.6628074714650991] (2,-1; 2,-1), time: 4.6804s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_178, [-0.9685138463973999,0.018153443932533264]=>[-0.9685138463973999,-1e-05] (-1,-1; 15,-1), time: 0.6651s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_37, [-0.4968039393424988,0.3419361114501953]=>[-0.3851136200910422,0.1744220986182822] (2,-1; 2,-1), time: 4.2342s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_181, [-0.905093789100647,0.008930221199989319]=>[-0.905093789100647,-1e-05] (-1,-1; 15,-1), time: 0.5349s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_61, [-0.0992499589920044,1.0633347034454346]=>[1e-05,1.0633347034454346] (15,-1; -1,-1), time: 0.7480s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_185, [-0.779759407043457,0.316639244556427]=>[-0.5318285500622226,0.18888718324327355] (2,-1; 2,-1), time: 6.7753s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_188, [-0.717268705368042,0.22391833364963531]=>[-0.4836524702301009,0.13247477916696088] (2,-1; 2,-1), time: 5.9620s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_19, [-0.47178059816360474,0.6309496164321899]=>[-0.2361595800661554,0.4657753382283675] (2,-1; 2,-1), time: 4.8490s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_27, [-0.5648768544197083,0.40779533982276917]=>[-0.4188505618574882,0.21265467234939073] (2,-1; 2,-1), time: 4.0637s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_17, [-0.8731884360313416,0.28190383315086365]=>[-0.7019130567342214,0.0800320397250911] (2,-1; 2,-1), time: 3.5286s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_95, [-0.6383622288703918,0.3431167006492615]=>[-0.44547466552182424,0.19054719509970142] (2,-1; 2,-1), time: 4.2792s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_172, [-0.602512001991272,0.45012366771698]=>[-0.44978866482076946,0.26201522347463063] (2,-1; 2,-1), time: 3.8195s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_131, [-0.24493847787380219,0.7355005741119385]=>[-0.08392867962505916,0.5725861006096127] (2,-1; 2,-1), time: 2.7921s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_99, [-0.00954119861125946,0.977256715297699]=>[1e-05,0.977256715297699] (15,-1; -1,-1), time: 0.6617s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_62, [-0.8968334197998047,0.10979223251342773]=>[-0.8968334197998047,-1e-05] (-1,-1; 15,-1), time: 0.6948s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_44, [-0.7557873725891113,0.3934805989265442]=>[-0.5746125689303998,0.20355444777074516] (2,-1; 2,-1), time: 3.3548s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_135, [-0.06867961585521698,0.7964410781860352]=>[1e-05,0.7964410781860352] (15,-1; -1,-1), time: 0.6837s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_79, [-0.8683221340179443,0.20885607600212097]=>[-0.6872970967653454,0.09015373821144511] (2,-1; 2,-1), time: 3.6419s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_182, [-0.4927964508533478,0.45119696855545044]=>[-0.2708489404698811,0.3486361073812151] (2,-1; 2,-1), time: 5.7247s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_74, [-1.0423898696899414,0.15496477484703064]=>[-0.7671057191661791,0.005928402471914257] (2,-1; 2,-1), time: 6.4393s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_24, [-0.6864414215087891,0.3794892430305481]=>[-0.5083171535709453,0.16357094666201277] (2,-1; 2,-1), time: 3.8778s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_67, [-0.7230928540229797,0.25354212522506714]=>[-0.4847902888970731,0.10686792928096255] (2,-1; 2,-1), time: 6.0312s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_174, [-0.8742296695709229,0.3307074308395386]=>[-0.6907763312384961,0.10182671358119946] (2,-1; 2,-1), time: 3.6384s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_166, [-0.27230966091156006,0.8937246203422546]=>[-0.06611952367584258,0.7115199885304653] (2,-1; 2,-1), time: 3.8384s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_177, [-0.805289626121521,0.3161456286907196]=>[-0.6280789112975328,0.11605429970276337] (2,-1; 2,-1), time: 5.1909s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_184, [-0.6945677995681763,0.2033052146434784]=>[-0.5040592435001879,0.09548253801507818] (2,-1; 2,-1), time: 5.1185s, #vars: 1275, #constrs: 535, improved: True
Solving MIP for lay4_112, [-0.6317172050476074,0.33558738231658936]=>[-0.3854154080726855,0.21715750731388953] (2,-1; 2,-1), time: 6.1068s, #vars: 1275, #constrs: 535, improved: True
MIP improved 84 nodes out of 84 unstable nodes, lb improved 10.628753662109375, ub improved 10.122204780578613, time 19.6358
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_153', 'lay6_157', 'lay6_162', 'lay6_91', 'lay6_26', 'lay6_30', 'lay6_6', 'lay6_89', 'lay6_152', 'lay6_83', 'lay6_139', 'lay6_32', 'lay6_117', 'lay6_23', 'lay6_113', 'lay6_195', 'lay6_128', 'lay6_97', 'lay6_126', 'lay6_199', 'lay6_106', 'lay6_193', 'lay6_65', 'lay6_15', 'lay6_119', 'lay6_156', 'lay6_88', 'lay6_142', 'lay6_118', 'lay6_93', 'lay6_36', 'lay6_21', 'lay6_64', 'lay6_151', 'lay6_54', 'lay6_125', 'lay6_98', 'lay6_132', 'lay6_127', 'lay6_86', 'lay6_33', 'lay6_135', 'lay6_3', 'lay6_112', 'lay6_186', 'lay6_46', 'lay6_108', 'lay6_10', 'lay6_59', 'lay6_96', 'lay6_158', 'lay6_197', 'lay6_121', 'lay6_198', 'lay6_50', 'lay6_22', 'lay6_129', 'lay6_188', 'lay6_12', 'lay6_4', 'lay6_170', 'lay6_38', 'lay6_42', 'lay6_58', 'lay6_90', 'lay6_75', 'lay6_2', 'lay6_178', 'lay6_176', 'lay6_13', 'lay6_8', 'lay6_9', 'lay6_167', 'lay6_61', 'lay6_136', 'lay6_123', 'lay6_174', 'lay6_37', 'lay6_35', 'lay6_148', 'lay6_165', 'lay6_52', 'lay6_149', 'lay6_77', 'lay6_105', 'lay6_124', 'lay6_78', 'lay6_133', 'lay6_53', 'lay6_73', 'lay6_196', 'lay6_29', 'lay6_160', 'lay6_111', 'lay6_99', 'lay6_150', 'lay6_131', 'lay6_134', 'lay6_169', 'lay6_183', 'lay6_163', 'lay6_41', 'lay6_28', 'lay6_18', 'lay6_57', 'lay6_110', 'lay6_34', 'lay6_161', 'lay6_173', 'lay6_1'] filter: 1.0
Solving MIP for lay6_162, [-1.6634132862091064,0.32760316133499146]=>[-1.6634132862091064,-1e-05] (-1,-1; 15,-1), time: 0.4564s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_152, [-1.2100602388381958,0.20363563299179077]=>[-1.2100602388381958,-1e-05] (-1,-1; 15,-1), time: 0.8250s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_23, [-1.425419569015503,0.37589481472969055]=>[-1.425419569015503,-1e-05] (-1,-1; 15,-1), time: 0.9449s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_97, [-1.3010532855987549,0.11231136322021484]=>[-1.3010532855987549,-1e-05] (-1,-1; 15,-1), time: 0.4066s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_199, [-1.121847152709961,0.2558145821094513]=>[-1.121847152709961,-1e-05] (-1,-1; 15,-1), time: 0.7322s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_32, [-1.2837824821472168,0.4253365397453308]=>[-1.2837824821472168,-1e-05] (-1,-1; 15,-1), time: 2.2131s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-1.0875256061553955,0.2505113482475281]=>[-1.0875256061553955,-1e-05] (-1,-1; 15,-1), time: 1.2417s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_193, [-0.9804966449737549,0.2656761407852173]=>[-0.9804966449737549,-1e-05] (-1,-1; 15,-1), time: 1.1725s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_195, [-1.1158815622329712,0.389362096786499]=>[-1.1158815622329712,-1e-05] (-1,-1; 15,-1), time: 7.8359s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_119, [-1.2972320318222046,0.2753167152404785]=>[-1.2972320318222046,-1e-05] (-1,-1; 15,-1), time: 5.3031s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_89, [-0.7582382559776306,0.9927246570587158]=>[-0.2092969338052665,0.5522738528552412] (9,-1; 2,-1), time: 20.7847s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-0.6378216743469238,0.5662475228309631]=>[-0.2773917321628481,0.20749320480937666] (9,-1; 2,-1), time: 26.0004s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-0.7953804135322571,0.6558341979980469]=>[-0.3239653775664422,0.31643537421313866] (9,-1; 2,-1), time: 26.5573s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_26, [-1.0209256410598755,0.35954055190086365]=>[-0.5238512858424585,0.05136877293275475] (9,-1; 9,-1), time: 30.0083s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_157, [-1.1244244575500488,0.49194881319999695]=>[-0.6849404626469454,0.04565644510929741] (9,-1; 9,-1), time: 30.0132s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-0.8531152606010437,0.5814902782440186]=>[-0.36344299116167894,0.21413390063468743] (9,-1; 9,-1), time: 30.0141s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_113, [-1.0592414140701294,0.5061423182487488]=>[-0.5569434875420661,0.11496884664791819] (9,-1; 9,-1), time: 30.0129s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_30, [-0.7203233242034912,0.5956317186355591]=>[-0.29269637750135935,0.2565669983893317] (9,-1; 9,-1), time: 30.0211s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_6, [-0.9265127182006836,0.4307725131511688]=>[-0.4996101230074358,0.06349930520611034] (9,-1; 9,-1), time: 30.0420s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_153, [-0.849161684513092,0.6596037149429321]=>[-0.3952723129216726,0.270815991642423] (9,-1; 9,-1), time: 30.0483s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_91, [-0.49581795930862427,0.9196502566337585]=>[-0.07509271534080184,0.4904080020864215] (9,-1; 9,-1), time: 30.0502s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_128, [-0.7504763603210449,0.6608230471611023]=>[-0.3154046488063255,0.2833081963255246] (9,-1; 9,-1), time: 30.0291s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-1.2227791547775269,0.019417820498347282]=>[-1.2227791547775269,-1e-05] (-1,-1; 15,-1), time: 0.3818s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_126, [-1.0929505825042725,0.5672451257705688]=>[-0.6125542301780149,0.14822006189768983] (9,-1; 9,-1), time: 30.0111s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_125, [-1.0191820859909058,0.21542680263519287]=>[-1.0191820859909058,-1e-05] (-1,-1; 15,-1), time: 1.0695s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-1.2924487590789795,0.11087585240602493]=>[-1.2924487590789795,-1e-05] (-1,-1; 15,-1), time: 0.3946s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_86, [-1.2103471755981445,0.17687205970287323]=>[-1.2103471755981445,-1e-05] (-1,-1; 15,-1), time: 0.3289s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_33, [-1.2993766069412231,0.09071765094995499]=>[-1.2993766069412231,-1e-05] (-1,-1; 15,-1), time: 0.3493s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-1.3150296211242676,0.12721014022827148]=>[-1.3150296211242676,-1e-05] (-1,-1; 15,-1), time: 0.3815s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_98, [-0.3271130621433258,0.8704441785812378]=>[1e-05,0.8704441785812378] (15,-1; -1,-1), time: 1.6540s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_46, [-1.2619980573654175,0.04439437389373779]=>[-1.2619980573654175,-1e-05] (-1,-1; 15,-1), time: 0.3074s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_108, [-0.25358009338378906,1.1268117427825928]=>[1e-05,1.1268117427825928] (15,-1; -1,-1), time: 0.3212s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-1.090524673461914,0.312153160572052]=>[-1.090524673461914,-1e-05] (-1,-1; 15,-1), time: 1.0595s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-0.8350534439086914,0.4368599057197571]=>[-0.4373842037177392,0.053916568896054506] (9,-1; 2,-1), time: 29.1279s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_15, [-0.6382933855056763,0.9117785692214966]=>[-0.23684895026409544,0.44600136406003393] (9,-1; 9,-1), time: 30.0305s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_158, [-1.345234990119934,0.22215253114700317]=>[-1.345234990119934,-1e-05] (-1,-1; 15,-1), time: 0.3455s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_197, [-1.2287040948867798,0.04399164766073227]=>[-1.2287040948867798,-1e-05] (-1,-1; 15,-1), time: 0.3360s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-0.7739895582199097,0.258801132440567]=>[-0.7739895582199097,-1e-05] (-1,-1; 15,-1), time: 2.5404s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_121, [-1.497434139251709,0.2880720794200897]=>[-1.497434139251709,-1e-05] (-1,-1; 15,-1), time: 0.7741s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_198, [-1.223732590675354,0.24436405301094055]=>[-1.223732590675354,-1e-05] (-1,-1; 15,-1), time: 1.1685s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_22, [-1.237536907196045,0.15459895133972168]=>[-1.237536907196045,-1e-05] (-1,-1; 15,-1), time: 0.4486s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_129, [-1.4382072687149048,0.061228930950164795]=>[-1.4382072687149048,-1e-05] (-1,-1; 15,-1), time: 0.3964s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_188, [-1.3060238361358643,0.020354535430669785]=>[-1.3060238361358643,-1e-05] (-1,-1; 15,-1), time: 0.3625s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_36, [-0.38799557089805603,0.9805210828781128]=>[1e-05,0.9805210828781128] (15,-1; -1,-1), time: 8.8044s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_4, [-1.2250759601593018,0.23886004090309143]=>[-1.2250759601593018,-1e-05] (-1,-1; 15,-1), time: 0.8390s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-0.25547537207603455,1.1087461709976196]=>[1e-05,1.1087461709976196] (15,-1; -1,-1), time: 0.9297s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-0.5232046842575073,1.259663462638855]=>[-0.10526267871317731,0.7123875233704202] (9,-1; 9,-1), time: 30.0117s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-1.0657422542572021,0.26990509033203125]=>[-1.0657422542572021,-1e-05] (-1,-1; 15,-1), time: 0.7847s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_88, [-1.0101585388183594,0.5569598078727722]=>[-0.6339411399868257,0.08103286879549744] (9,-1; 9,-1), time: 30.0564s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_90, [-1.5746983289718628,0.05193516984581947]=>[-1.5746983289718628,-1e-05] (-1,-1; 15,-1), time: 0.3046s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-0.4063524305820465,1.2746472358703613]=>[1e-05,1.2746472358703613] (15,-1; -1,-1), time: 1.3860s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_2, [-1.321618914604187,0.19361233711242676]=>[-1.321618914604187,-1e-05] (-1,-1; 15,-1), time: 0.5896s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_64, [-0.7388187050819397,0.5197267532348633]=>[-0.38071508652848,0.17089133233070547] (9,-1; 2,-1), time: 23.7468s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_176, [-1.1834027767181396,0.04491788148880005]=>[-1.1834027767181396,-1e-05] (-1,-1; 15,-1), time: 0.4091s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_13, [-1.4984891414642334,0.004754424095153809]=>[-1.4984891414642334,-1e-05] (-1,-1; 15,-1), time: 0.4128s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_142, [-0.8243427276611328,0.4806043207645416]=>[-0.37666149006359817,0.14039526349228024] (9,-1; 9,-1), time: 30.0407s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_118, [-0.9147146344184875,0.4079085886478424]=>[-0.5387783584146024,0.00011740488622812191] (9,-1; 9,-1), time: 30.0576s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_93, [-0.6461542248725891,0.6160414218902588]=>[-0.2122077233428201,0.3081289951633884] (9,-1; 2,-1), time: 27.7897s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-0.8494032025337219,0.432014524936676]=>[-0.4397596827378311,0.11247106331384595] (9,-1; 9,-1), time: 30.0133s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_151, [-0.5015202164649963,0.6804009675979614]=>[-0.08438143667847886,0.42348565099309193] (9,-1; 9,-1), time: 30.0175s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_54, [-0.8380191922187805,0.5143939256668091]=>[-0.4119431165797552,0.08303779940445688] (9,-1; 9,-1), time: 30.0063s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_174, [-0.23730957508087158,1.2197000980377197]=>[1e-05,1.2197000980377197] (15,-1; -1,-1), time: 0.2866s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_112, [-0.8168442249298096,0.5185697674751282]=>[-0.43927016923176215,0.09267198454580391] (9,-1; 9,-1), time: 30.0325s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-0.7400665283203125,0.5477172136306763]=>[-0.3641116625898505,0.16656200400632332] (9,-1; 9,-1), time: 30.0364s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_59, [-0.8466315865516663,0.5251747369766235]=>[-0.3987064192373224,0.18647414392600387] (9,-1; 9,-1), time: 30.0707s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-0.7611598968505859,0.5648120045661926]=>[-0.3851943278206325,0.17318565892231266] (9,-1; 9,-1), time: 30.0890s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-1.163222312927246,0.22721552848815918]=>[-1.163222312927246,-1e-05] (-1,-1; 15,-1), time: 0.6523s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_149, [-1.3296678066253662,0.055452972650527954]=>[-1.3296678066253662,-1e-05] (-1,-1; 15,-1), time: 0.3133s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_50, [-0.586668074131012,0.9134591817855835]=>[-0.13671718742068414,0.5536441490733376] (9,-1; 9,-1), time: 30.0132s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_9, [-0.30678606033325195,0.8448932766914368]=>[1e-05,0.8448932766914368] (15,-1; -1,-1), time: 10.4533s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_12, [-0.5744547843933105,0.6922659277915955]=>[-0.20645405991847318,0.319804277090981] (9,-1; 9,-1), time: 30.0580s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-0.38644134998321533,1.0747547149658203]=>[1e-05,1.0747547149658203] (15,-1; -1,-1), time: 8.5871s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_38, [-0.8756901025772095,0.3973112106323242]=>[-0.5084103985931848,0.023390813271010672] (9,-1; 9,-1), time: 30.1382s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-0.5076704621315002,0.6693128943443298]=>[-0.13317341331479618,0.33345565368777363] (9,-1; 9,-1), time: 30.0654s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-1.2088892459869385,0.21111463010311127]=>[-1.2088892459869385,-1e-05] (-1,-1; 15,-1), time: 0.7355s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_196, [-1.0492230653762817,0.11863699555397034]=>[-1.0492230653762817,-1e-05] (-1,-1; 15,-1), time: 0.3648s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_133, [-0.38854554295539856,0.7774420976638794]=>[1e-05,0.7774420976638794] (15,-1; -1,-1), time: 9.5412s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_160, [-0.9883519411087036,0.21368777751922607]=>[-0.9883519411087036,-1e-05] (-1,-1; 15,-1), time: 0.7238s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_111, [-0.09863540530204773,1.2354053258895874]=>[1e-05,1.2354053258895874] (15,-1; -1,-1), time: 0.3250s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-0.9044750928878784,0.3762037754058838]=>[-0.9044750928878784,-1e-05] (-1,-1; 15,-1), time: 11.8020s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_148, [-1.1499884128570557,0.36367717385292053]=>[-0.7291093920689512,0.005300189804788142] (9,-1; 2,-1), time: 20.5693s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_178, [-0.7493821978569031,0.540930449962616]=>[-0.3418811115085346,0.14962075768780625] (9,-1; 9,-1), time: 30.0122s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-0.650015652179718,0.6936561465263367]=>[-0.15593033336814655,0.4249427153024169] (9,-1; 2,-1), time: 25.8254s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-0.8885849118232727,0.33447787165641785]=>[-0.48955264055819747,0.0146911247214181] (9,-1; 9,-1), time: 30.0530s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_169, [-0.2913697063922882,1.250125527381897]=>[1e-05,1.250125527381897] (15,-1; -1,-1), time: 1.1316s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_183, [-0.1081576943397522,1.3324766159057617]=>[1e-05,1.3324766159057617] (15,-1; -1,-1), time: 0.4148s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_163, [-0.16777187585830688,1.0967018604278564]=>[1e-05,1.0967018604278564] (15,-1; -1,-1), time: 0.4113s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-1.2056572437286377,0.05994608998298645]=>[-1.2056572437286377,-1e-05] (-1,-1; 15,-1), time: 0.4066s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_28, [-0.01405719481408596,1.3484065532684326]=>[1e-05,1.3484065532684326] (15,-1; -1,-1), time: 0.3808s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_18, [-1.058517575263977,0.1570291817188263]=>[-1.058517575263977,-1e-05] (-1,-1; 15,-1), time: 0.3847s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_57, [-1.748382806777954,0.0007766485214233398]=>[-1.748382806777954,-1e-05] (-1,-1; 15,-1), time: 0.3512s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-0.9252108931541443,0.3714422583580017]=>[-0.5418033564117735,0.0013020303347400604] (9,-1; 9,-1), time: 30.0068s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-0.965471088886261,0.24345998466014862]=>[-0.965471088886261,-1e-05] (-1,-1; 15,-1), time: 0.7728s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_173, [-1.3351402282714844,0.2581605911254883]=>[-1.3351402282714844,-1e-05] (-1,-1; 15,-1), time: 0.7532s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_37, [-0.9042003154754639,0.3831011652946472]=>[-0.45169985848276023,0.044375718969088554] (9,-1; 2,-1), time: 27.1986s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_1, [-1.3751132488250732,0.11913090944290161]=>[-1.3751132488250732,-1e-05] (-1,-1; 15,-1), time: 0.3772s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_105, [-0.9780648350715637,0.3910539746284485]=>[-0.6152744534246956,0.0005968728096265713] (2,-1; 9,-1), time: 23.5975s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_134, [-0.25489264726638794,0.9163802862167358]=>[1e-05,0.9163802862167358] (15,-1; -1,-1), time: 5.9322s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_123, [-0.6466706991195679,0.9231619834899902]=>[-0.2004453151442504,0.491668597501248] (9,-1; 9,-1), time: 30.0249s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_52, [-0.3790300786495209,0.8820213079452515]=>[-0.00683215825802664,0.5275335154495516] (9,-1; 2,-1), time: 28.0529s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_35, [-0.495486319065094,0.7547832131385803]=>[-0.10223643482759451,0.39574407689498037] (9,-1; 9,-1), time: 30.0342s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-1.1667377948760986,0.4368177652359009]=>[-0.6924845566682336,0.03644035176672863] (9,-1; 2,-1), time: 25.9536s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_77, [-0.7949289083480835,0.41582635045051575]=>[-0.4331241688213936,0.07383692554133436] (9,-1; 9,-1), time: 30.0143s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_78, [-0.8082101345062256,0.5213022828102112]=>[-0.39851426865597056,0.16230014735246848] (9,-1; 9,-1), time: 30.0265s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-0.352711945772171,0.8005377054214478]=>[1e-05,0.8005377054214478] (15,-1; -1,-1), time: 10.7234s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-0.4662846624851227,0.8492638468742371]=>[-0.13728189109800953,0.37579670218724065] (2,-1; 9,-1), time: 26.0836s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_99, [-0.5743089914321899,0.6345528960227966]=>[-0.18971206401496887,0.27779591406966] (9,-1; 2,-1), time: 27.2100s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_131, [-0.6433156132698059,0.8087202310562134]=>[-0.22211650988392057,0.3992353227822176] (2,-1; 9,-1), time: 27.1012s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_150, [-0.4970913231372833,0.6588900685310364]=>[-0.10382239160240067,0.3485766475323111] (9,-1; 2,-1), time: 27.9277s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_34, [-0.8146998286247253,0.3534097373485565]=>[-0.40825775049045393,0.04929859147718334] (9,-1; 2,-1), time: 28.7722s, #vars: 1581, #constrs: 894, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
best_l after optimization: 15.017004013061523 with beta sum per layer: []
alpha/beta optimization time: 7.921456575393677
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.7416, -4.1709, -1.7200, -1.3085,  0.5287, -0.4010, -4.6863, -1.8133,
         -2.1872]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 110 nodes out of 110 unstable nodes, lb improved 25.10236930847168, ub improved 26.89179229736328, time 115.4821
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_33', 'lay8_76', 'lay8_57', 'lay8_160', 'lay8_130', 'lay8_154', 'lay8_111', 'lay8_158', 'lay8_8', 'lay8_53', 'lay8_0', 'lay8_82', 'lay8_70', 'lay8_65', 'lay8_127', 'lay8_162', 'lay8_133', 'lay8_28', 'lay8_136', 'lay8_195', 'lay8_192', 'lay8_173', 'lay8_21', 'lay8_22', 'lay8_25', 'lay8_38', 'lay8_66', 'lay8_4', 'lay8_184', 'lay8_86', 'lay8_97', 'lay8_141', 'lay8_45', 'lay8_155', 'lay8_72', 'lay8_49', 'lay8_180', 'lay8_20', 'lay8_135', 'lay8_1', 'lay8_15', 'lay8_182', 'lay8_128', 'lay8_73', 'lay8_12', 'lay8_197', 'lay8_107', 'lay8_13', 'lay8_104', 'lay8_10', 'lay8_142', 'lay8_139', 'lay8_81', 'lay8_31', 'lay8_56', 'lay8_147', 'lay8_41', 'lay8_64', 'lay8_189', 'lay8_98', 'lay8_61', 'lay8_165', 'lay8_2', 'lay8_168', 'lay8_109', 'lay8_174', 'lay8_3', 'lay8_181', 'lay8_185', 'lay8_153', 'lay8_150', 'lay8_27', 'lay8_140', 'lay8_96', 'lay8_172', 'lay8_161', 'lay8_114', 'lay8_103', 'lay8_77', 'lay8_166', 'lay8_196', 'lay8_9', 'lay8_171', 'lay8_54', 'lay8_79', 'lay8_59', 'lay8_32', 'lay8_177', 'lay8_5', 'lay8_176', 'lay8_152', 'lay8_83', 'lay8_179', 'lay8_24', 'lay8_47', 'lay8_151', 'lay8_188', 'lay8_14', 'lay8_123', 'lay8_157', 'lay8_48', 'lay8_84', 'lay8_93', 'lay8_112', 'lay8_90', 'lay8_85', 'lay8_199', 'lay8_121', 'lay8_7', 'lay8_63', 'lay8_163', 'lay8_190', 'lay8_116', 'lay8_34', 'lay8_110', 'lay8_186', 'lay8_144', 'lay8_17', 'lay8_122', 'lay8_115', 'lay8_44', 'lay8_60', 'lay8_43', 'lay8_129', 'lay8_18', 'lay8_137', 'lay8_105', 'lay8_39', 'lay8_120', 'lay8_132', 'lay8_52', 'lay8_170', 'lay8_117', 'lay8_99', 'lay8_42', 'lay8_125', 'lay8_74', 'lay8_183', 'lay8_78', 'lay8_23', 'lay8_100', 'lay8_94', 'lay8_6', 'lay8_102', 'lay8_156', 'lay8_75', 'lay8_11', 'lay8_164', 'lay8_95', 'lay8_91', 'lay8_71', 'lay8_30', 'lay8_118', 'lay8_178', 'lay8_119', 'lay8_145', 'lay8_108', 'lay8_92', 'lay8_67', 'lay8_124', 'lay8_35', 'lay8_169', 'lay8_51', 'lay8_46', 'lay8_106', 'lay8_191', 'lay8_143', 'lay8_37', 'lay8_167', 'lay8_87', 'lay8_19', 'lay8_50', 'lay8_16', 'lay8_175', 'lay8_80', 'lay8_26', 'lay8_131', 'lay8_134', 'lay8_29', 'lay8_69', 'lay8_68'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -28.640804290771484 with beta sum per layer: []
alpha/beta optimization time: 0.06199765205383301
alpha-CROWN with intermediate bounds by MIP: tensor([[5.4870, 0.9847, 3.2014, 4.1114, 5.0535, 3.9900, 0.1500, 2.6243, 3.0386]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
min of alpha-CROWN bounds 0.15002679824829102>=0, verified!
MIP finished with 139.5571002960205s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /21 torch.Size([1, 200])
1 /23 torch.Size([1, 200])
2 /25 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -28.640804290771484 with beta sum per layer: []
alpha/beta optimization time: 0.035105228424072266
alpha-CROWN with intermediate bounds improved by MIP: tensor([[5.4870, 0.9847, 3.2014, 4.1114, 5.0535, 3.9900, 0.1500, 2.6243, 3.0386]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[5.4870, 0.0000, 0.9847, 3.2014, 4.1114, 5.0535, 3.9900, 0.1500, 2.6243,
         3.0386]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
time threshold left for bab: 751.6707444190979
Result: image 5 verification success (with mip refine)!
Wall time: 148.9919455051422

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [5]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 148.32925939559937
