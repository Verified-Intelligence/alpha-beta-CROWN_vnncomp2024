Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_6_200
  path: mnist_6_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 43
  end: 44
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 01:45:14 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_6_200]_start=43_end=44_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-42.90721130, -53.32341766, -49.96341324, -53.90112305, -52.48913193,
         -44.01448441, -57.07033539, -57.98386765, -60.98963928]],
       device='cuda:0') None
best_l after optimization: -358.883056640625 with beta sum per layer: []
alpha/beta optimization time: 6.099531173706055
initial alpha-CROWN bounds: tensor([[-30.06584740, -39.78733444, -39.30331039, -39.73000336, -40.51801682,
         -34.00349808, -44.91165543, -44.81174088, -45.75164032]],
       device='cuda:0')
Worst class: (+ rhs) -45.75164031982422
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.63940144,  1.80271673,  7.01665401,  0.65871990, -0.22974387,
          -2.23512220, -0.08393250,  1.53723502, -0.39483923, -2.36826992],
         [-2.63940144,  1.80271673,  7.01665401,  0.65871990, -0.22974387,
          -2.23512220, -0.08393250,  1.53723502, -0.39483923, -2.36826992]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.65605545, 5.21393728, 6.35793400, 7.24639797, 9.25177574,
          7.10058641, 5.47941875, 7.41149330, 9.38492393]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6569 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_53', 'lay4_43', 'lay4_40', 'lay4_165', 'lay4_58', 'lay4_77', 'lay4_144', 'lay4_91', 'lay4_141', 'lay4_121', 'lay4_166', 'lay4_185', 'lay4_174', 'lay4_189', 'lay4_85', 'lay4_14', 'lay4_142', 'lay4_112', 'lay4_116', 'lay4_65', 'lay4_52', 'lay4_137', 'lay4_86', 'lay4_47', 'lay4_38', 'lay4_7', 'lay4_123', 'lay4_0', 'lay4_115', 'lay4_180', 'lay4_67', 'lay4_131', 'lay4_107', 'lay4_101', 'lay4_130', 'lay4_78', 'lay4_134', 'lay4_83', 'lay4_95', 'lay4_22', 'lay4_182', 'lay4_9', 'lay4_125', 'lay4_187', 'lay4_178', 'lay4_13', 'lay4_127', 'lay4_147', 'lay4_191', 'lay4_49', 'lay4_11', 'lay4_109', 'lay4_76', 'lay4_126', 'lay4_16', 'lay4_73', 'lay4_160', 'lay4_74', 'lay4_150', 'lay4_79', 'lay4_70', 'lay4_183', 'lay4_103', 'lay4_3', 'lay4_161', 'lay4_75', 'lay4_62', 'lay4_162', 'lay4_186', 'lay4_192', 'lay4_98', 'lay4_113', 'lay4_170', 'lay4_61', 'lay4_156', 'lay4_39', 'lay4_154', 'lay4_89', 'lay4_80', 'lay4_69', 'lay4_129', 'lay4_146', 'lay4_81', 'lay4_145', 'lay4_31', 'lay4_190', 'lay4_87', 'lay4_188', 'lay4_138', 'lay4_63', 'lay4_2', 'lay4_4', 'lay4_128'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:645: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_121, [-inf,inf]=>[-0.6628096062064036,0.10043466105768366] (2,-1; 2,-1), time: 2.2021s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-0.3501480264948014,0.29813998383907914] (2,-1; 2,-1), time: 4.4614s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_185, [-inf,inf]=>[-0.3872397633341028,0.26511094317611456] (2,-1; 2,-1), time: 4.4712s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_189, [-inf,inf]=>[-0.3188711664786961,0.4017046443144505] (2,-1; 2,-1), time: 5.1631s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_144, [-inf,inf]=>[-0.36672780754648243,0.3538674359230122] (2,-1; 2,-1), time: 5.2753s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-0.3717372780592025,0.3265590333334793] (2,-1; 2,-1), time: 5.6545s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_14, [-inf,inf]=>[-0.6727912906493133,0.04688451613398673] (2,-1; 2,-1), time: 5.8648s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-0.28489697720721624,0.4316842387878231] (2,-1; 2,-1), time: 6.1267s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-0.43430723209406535,0.2761077109710255] (2,-1; 2,-1), time: 6.1858s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_174, [-inf,inf]=>[-0.6782204913979616,0.13550232133464463] (2,-1; 2,-1), time: 6.2748s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4152s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_141, [-inf,inf]=>[-0.3259965996059029,0.38474534192846305] (2,-1; 2,-1), time: 6.5580s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-0.1965543869368042,0.5018044703400648] (2,-1; 2,-1), time: 6.5860s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_165, [-inf,inf]=>[-0.46327630328394037,0.39114351874857833] (2,-1; 2,-1), time: 6.7513s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.2900085992966971,0.32788307278526274] (2,-1; 2,-1), time: 5.1508s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_166, [-inf,inf]=>[1e-05,0.6706048759991233] (15,-1; 2,-1), time: 7.3698s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.46314549969765884,0.3007826386237902] (2,-1; 2,-1), time: 8.2112s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_107, [-inf,inf]=>[-inf,-0.004086047123982087] (-1,-1; 2,-1), time: 0.3611s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_116, [-inf,inf]=>[-0.5527841328418935,0.09997713919494387] (2,-1; 2,-1), time: 4.2069s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5147360299536183,0.2157174289390761] (2,-1; 2,-1), time: 5.1804s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-0.14321991663287842,0.6297895085729547] (2,-1; 2,-1), time: 4.7930s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3897s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-0.33265324296354204,0.36383241542725064] (2,-1; 2,-1), time: 4.5526s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-0.2668093639323954,0.3336202606050185] (2,-1; 2,-1), time: 4.7498s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_131, [-inf,inf]=>[-0.28429291832975984,0.4236117982875949] (2,-1; 2,-1), time: 4.2761s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-0.44228755238044537,0.1392260429716157] (2,-1; 2,-1), time: 5.6843s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.4788303066113676,0.16250178766128312] (2,-1; 2,-1), time: 5.7077s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_130, [-inf,inf]=>[-0.6815271334444969,0.057541581177719] (2,-1; 2,-1), time: 3.3273s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.2288476241140025,0.5173550335490977] (2,-1; 2,-1), time: 5.8855s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3006s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_123, [-inf,inf]=>[-0.1452058889856503,0.5064887862651806] (2,-1; 2,-1), time: 6.1338s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2878s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[1e-05,0.6190913322004487] (15,-1; 2,-1), time: 4.0734s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3408s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.31276885689725953,0.23787104923238447] (2,-1; 2,-1), time: 8.5062s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.4473125303595776,0.22144101322583054] (2,-1; 2,-1), time: 5.9437s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2353s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2796s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[1e-05,0.7872748898888382] (15,-1; 2,-1), time: 3.7346s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.2650983091941671,0.4501121899197976] (2,-1; 2,-1), time: 5.1111s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4183007554405509,0.20654822383158167] (2,-1; 2,-1), time: 15.9180s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.04419449843141671,0.5444415060135972] (2,-1; 2,-1), time: 5.1629s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_22, [-inf,inf]=>[-0.113844771382567,0.7381571181622617] (2,-1; 2,-1), time: 5.3589s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-0.38455935024889526,0.2372412449821032] (2,-1; 2,-1), time: 4.2925s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.7198s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2782s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_109, [-inf,inf]=>[1e-05,0.8334357895545093] (15,-1; 2,-1), time: 4.3205s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.5785147185353038,0.25539546468122176] (2,-1; 2,-1), time: 6.0166s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3376s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_191, [-inf,inf]=>[-0.09193680319155903,0.4176537259336889] (2,-1; 2,-1), time: 5.3284s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.3733996479659203,0.33976581272487394] (2,-1; 2,-1), time: 5.9650s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.3072390457775232,0.5167452462210397] (2,-1; 2,-1), time: 6.2260s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_16, [-inf,inf]=>[-0.258951922616182,0.44719077285013253] (2,-1; 2,-1), time: 4.6307s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.43494262072741435,0.19173050291751148] (2,-1; 2,-1), time: 12.8931s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3552s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_126, [-inf,inf]=>[-0.48083265533280584,0.2237143794010355] (2,-1; 2,-1), time: 5.5429s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-0.10019033656136528,0.6008096608349326] (2,-1; 2,-1), time: 6.1574s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3469s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_73, [-inf,inf]=>[-0.507904674424578,0.18149376213826757] (2,-1; 2,-1), time: 4.7726s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.13600385054824787,0.43925009792559794] (2,-1; 2,-1), time: 15.3167s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4011s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.11347197622966962,0.6434394805671841] (2,-1; 2,-1), time: 5.0278s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_150, [-inf,inf]=>[-0.608362210196786,0.1372265631634488] (2,-1; 2,-1), time: 4.5146s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3268s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.5844827875888896,0.18538391271862903] (2,-1; 2,-1), time: 4.6741s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.08970103197695431,0.5903807761708776] (2,-1; 2,-1), time: 4.6131s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_161, [-inf,inf]=>[-0.5539393682620973,0.07828327006998013] (2,-1; 2,-1), time: 5.4991s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3295s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_183, [-inf,inf]=>[-0.41722398356653917,0.19935492828105383] (2,-1; 2,-1), time: 6.2881s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_113, [-inf,inf]=>[-0.5932548273805719,0.07565635554945714] (2,-1; 2,-1), time: 4.3735s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[-0.71002964377072,0.026163378971916444] (2,-1; 2,-1), time: 5.9455s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_170, [-inf,inf]=>[-0.5173984859572365,0.10341986669071743] (2,-1; 2,-1), time: 4.2995s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3370s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2416s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_160, [-inf,inf]=>[-0.5594997515877348,0.15122446047541155] (2,-1; 2,-1), time: 8.4555s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-0.2832994652930669,0.3357014504292885] (2,-1; 2,-1), time: 7.3560s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-0.17109124354861202,0.5704896046284164] (2,-1; 2,-1), time: 3.4531s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3950s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-0.2680744994148015,0.4173927183375113] (2,-1; 2,-1), time: 5.6901s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.4380015546965305,0.46553408837770816] (2,-1; 2,-1), time: 5.4509s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.4489191917842867,0.21249199886581427] (2,-1; 2,-1), time: 4.3033s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_146, [-inf,inf]=>[1e-05,0.8718313707069968] (15,-1; 2,-1), time: 3.5417s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_154, [-inf,inf]=>[-0.1698304931888312,0.4588622612856302] (2,-1; 2,-1), time: 5.8593s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.3867099171439929,0.29320097723154315] (2,-1; 2,-1), time: 5.9483s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[1e-05,0.8767264561542946] (15,-1; 2,-1), time: 2.6239s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[1e-05,0.7120976564268149] (15,-1; 2,-1), time: 3.7386s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_188, [-inf,inf]=>[1e-05,0.6664628459898603] (15,-1; 2,-1), time: 4.0476s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.09112713601044253,0.6858573889012827] (2,-1; 2,-1), time: 4.0095s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.16379769589179066,0.47416579980360385] (2,-1; 2,-1), time: 5.7591s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_2, [-inf,inf]=>[-0.010714938102084053,0.7801718248019396] (2,-1; 2,-1), time: 4.6499s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_31, [-inf,inf]=>[-0.5780595321532245,0.052395616823170205] (2,-1; 2,-1), time: 5.2594s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.07592355077025145,0.6339288361862246] (2,-1; 2,-1), time: 6.6371s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.658666795249969,0.044825397277639775] (9,-1; 2,-1), time: 16.1787s, #vars: 1295, #constrs: 565, improved: True
PGD done for relu layer 2
MIP improved 93 nodes out of 93 unstable nodes, lb improved 21.352081298828125, ub improved 17.867347717285156, time 35.2868
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_28', 'lay6_139', 'lay6_93', 'lay6_170', 'lay6_152', 'lay6_191', 'lay6_168', 'lay6_67', 'lay6_33', 'lay6_181', 'lay6_24', 'lay6_123', 'lay6_188', 'lay6_32', 'lay6_177', 'lay6_195', 'lay6_133', 'lay6_18', 'lay6_106', 'lay6_159', 'lay6_110', 'lay6_3', 'lay6_15', 'lay6_107', 'lay6_26', 'lay6_122', 'lay6_30', 'lay6_50', 'lay6_49', 'lay6_141', 'lay6_112', 'lay6_192', 'lay6_87', 'lay6_29', 'lay6_70', 'lay6_69', 'lay6_101', 'lay6_136', 'lay6_183', 'lay6_151', 'lay6_175', 'lay6_196', 'lay6_113', 'lay6_169', 'lay6_153', 'lay6_162', 'lay6_197', 'lay6_72', 'lay6_7', 'lay6_108', 'lay6_174', 'lay6_9', 'lay6_117', 'lay6_148', 'lay6_98', 'lay6_77', 'lay6_128', 'lay6_21', 'lay6_2', 'lay6_166', 'lay6_80', 'lay6_48', 'lay6_64', 'lay6_103', 'lay6_124', 'lay6_39', 'lay6_73', 'lay6_186', 'lay6_86', 'lay6_37', 'lay6_92', 'lay6_88', 'lay6_163', 'lay6_173', 'lay6_53', 'lay6_189', 'lay6_150', 'lay6_142', 'lay6_99', 'lay6_10', 'lay6_105', 'lay6_11', 'lay6_55', 'lay6_59', 'lay6_193', 'lay6_75', 'lay6_171', 'lay6_96', 'lay6_129', 'lay6_91', 'lay6_165', 'lay6_194', 'lay6_180', 'lay6_138', 'lay6_42', 'lay6_178', 'lay6_60', 'lay6_65', 'lay6_6', 'lay6_118', 'lay6_76', 'lay6_102', 'lay6_54', 'lay6_16', 'lay6_12', 'lay6_61', 'lay6_111', 'lay6_43', 'lay6_146', 'lay6_132', 'lay6_120', 'lay6_78', 'lay6_121', 'lay6_36', 'lay6_187', 'lay6_135', 'lay6_131', 'lay6_167', 'lay6_68', 'lay6_160', 'lay6_51', 'lay6_35', 'lay6_27', 'lay6_176', 'lay6_74', 'lay6_8', 'lay6_172', 'lay6_94', 'lay6_58', 'lay6_140', 'lay6_134', 'lay6_119', 'lay6_157', 'lay6_144', 'lay6_46'] filter: 1.0
Solving MIP for lay6_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4033s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4142s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4164s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4519s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5554s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6304s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3997s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5030s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2781s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3671s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4079s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2497s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4950s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9421s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3439s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2989s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3559s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.5697s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.7267s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.4069s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3683s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3662s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[1e-05,1.5203091241467002] (15,-1; 9,-1), time: 15.4505s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.6294s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_188, [-inf,inf]=>[-0.9006482721520855,0.11197586521038688] (9,-1; 9,-1), time: 30.0158s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.5837248773927111,0.33809549389058435] (9,-1; 9,-1), time: 30.0336s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_177, [-inf,inf]=>[-0.9060549818360212,0.18846821312245252] (9,-1; 9,-1), time: 30.1415s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-0.6974870052865492,0.1907250528655611] (9,-1; 9,-1), time: 30.1839s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3607s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-0.07538308934441613,0.8770378954679157] (9,-1; 9,-1), time: 30.0208s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-0.8259071314826596,0.08293571169725023] (9,-1; 9,-1), time: 30.9109s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-0.8389709323509201,0.007540428734799047] (9,-1; 9,-1), time: 30.0197s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3679s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0867s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3690s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-0.282469470085585,0.714674456909653] (9,-1; 9,-1), time: 30.5761s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.8923338759143283,0.11045281041184518] (9,-1; 9,-1), time: 30.0182s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3287s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-0.8396440342714802,0.010832195584983812] (9,-1; 9,-1), time: 30.3593s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.6985060091005375,0.2148675994309819] (9,-1; 9,-1), time: 30.4159s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2927s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4283s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5138404270461159,0.3364840074959716] (9,-1; 9,-1), time: 30.0152s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3454s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.8474050714401815,0.060777634670470385] (9,-1; 9,-1), time: 30.0775s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0728s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3298s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3551s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9927s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3896s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-0.8743570922153875,0.05086405976881616] (9,-1; 9,-1), time: 30.0148s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-0.7760276021645665,0.25195775893564154] (9,-1; 9,-1), time: 30.7732s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.9325s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_175, [-inf,inf]=>[1e-05,1.042658538730615] (15,-1; 9,-1), time: 16.1535s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3476s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6810s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[1e-05,1.1609910804179238] (15,-1; 2,-1), time: 17.2947s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6236s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4068s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2316s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3635s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_151, [-inf,inf]=>[-0.7980085306725423,0.02450204668240569] (9,-1; 9,-1), time: 30.3683s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_169, [-inf,inf]=>[-0.344709064952219,0.49414854455021623] (9,-1; 9,-1), time: 30.0179s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_153, [-inf,inf]=>[-0.6587652020272712,0.29412715689618896] (9,-1; 9,-1), time: 30.0194s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.862158105973672,0.17986738714032416] (9,-1; 9,-1), time: 30.1405s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1192s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_174, [-inf,inf]=>[-0.3518494991574774,0.4249439496265964] (9,-1; 9,-1), time: 30.4677s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-0.7698877138460112,0.21786413844604913] (9,-1; 9,-1), time: 30.0182s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3423s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-0.7358558270869507,0.16121132425361842] (9,-1; 9,-1), time: 30.7351s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-0.4218187369830051,0.42126361916665234] (9,-1; 9,-1), time: 30.0559s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3426s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_128, [-inf,inf]=>[-0.3358643497698849,0.435362677993649] (9,-1; 9,-1), time: 30.3877s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3154s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-0.6000063994306912,0.20011228210035173] (9,-1; 9,-1), time: 30.2442s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-0.8633325944729849,0.21474392749157123] (9,-1; 9,-1), time: 31.1626s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9418s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3909s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-0.5609410405014194,0.3421979371785973] (9,-1; 9,-1), time: 30.3721s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.24332864225632578,0.48366865808434645] (9,-1; 9,-1), time: 30.0270s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4231s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[1e-05,1.4974684411241808] (15,-1; 9,-1), time: 15.3663s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-0.678799975206991,0.31912565115845537] (9,-1; 9,-1), time: 30.0095s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[1e-05,1.0654869936673683] (15,-1; 9,-1), time: 16.7437s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_171, [-inf,inf]=>[1e-05,0.8408369594559942] (15,-1; 9,-1), time: 16.5921s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-0.7284425745013388,0.06230983706223348] (9,-1; 9,-1), time: 30.0266s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[1e-05,1.0234321956233374] (15,-1; 9,-1), time: 20.0876s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_193, [-inf,inf]=>[1e-05,1.0779301960139283] (15,-1; 9,-1), time: 22.0113s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.0972s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2461s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.4030534447288821,0.4082148358983986] (9,-1; 9,-1), time: 30.1876s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[1e-05,0.842346665137488] (15,-1; 9,-1), time: 25.0309s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3756s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.3370146293199442,0.5604873950860797] (9,-1; 9,-1), time: 30.4388s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_142, [-inf,inf]=>[-0.6132856477180751,0.3404266126231807] (9,-1; 9,-1), time: 31.0691s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3634s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.07305866702057684,0.7496496291084505] (9,-1; 9,-1), time: 30.4520s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_165, [-inf,inf]=>[-0.8268588570221265,0.21117196158759496] (9,-1; 9,-1), time: 31.1665s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,1.1828585629229271] (15,-1; 9,-1), time: 15.9273s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3257s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.5199399884543507,0.35831439140252486] (9,-1; 9,-1), time: 30.0237s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.44528108244170483,0.3563383852838195] (9,-1; 9,-1), time: 30.4906s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[1e-05,0.8413660921002606] (15,-1; 9,-1), time: 21.1627s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.446454393940869,0.40192883959794606] (9,-1; 9,-1), time: 30.0250s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[1e-05,1.2063917979780305] (15,-1; 9,-1), time: 16.1836s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4409s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_146, [-inf,inf]=>[1e-05,1.5274615968970164] (15,-1; 9,-1), time: 15.4322s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3564s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.8972s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[1e-05,1.1708457802128636] (15,-1; 9,-1), time: 15.3999s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4204s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-0.1989429102472242,0.5657050595076603] (9,-1; 9,-1), time: 30.2846s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_121, [-inf,inf]=>[1e-05,1.2550379072149802] (15,-1; 9,-1), time: 17.1946s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[1e-05,1.587841026751559] (15,-1; 9,-1), time: 15.5569s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[1e-05,1.2009249880392814] (15,-1; 9,-1), time: 15.5645s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.9082002948130558,0.06414018685152045] (9,-1; 9,-1), time: 30.0141s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.1349533075291858,0.7344535906985727] (9,-1; 9,-1), time: 30.3543s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3892s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-0.3234724219647475,0.5789549346405194] (9,-1; 9,-1), time: 30.0764s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4290s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.5477430942144969,0.2527856913594935] (9,-1; 9,-1), time: 30.1231s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.3655s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[1e-05,1.086906433507715] (15,-1; 9,-1), time: 15.3659s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[1e-05,0.9204564915114769] (15,-1; 9,-1), time: 17.3232s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-0.4717129186152947,0.423026782322341] (9,-1; 9,-1), time: 30.0149s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8445210516086057] (15,-1; 9,-1), time: 16.2529s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-0.06458370799619634,0.7138781290059911] (9,-1; 9,-1), time: 30.0108s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_134, [-inf,inf]=>[1e-05,0.8936250096851566] (15,-1; 9,-1), time: 15.9838s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.3265441830226686,0.5185976826501845] (9,-1; 9,-1), time: 30.0781s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.7193139815652376] (15,-1; 9,-1), time: 15.2923s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.6628702876055694,0.2343420530425514] (9,-1; 9,-1), time: 30.1090s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.10985901622968677,0.7067841202328757] (9,-1; 9,-1), time: 30.0829s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.656242466799783,0.2780810660671286] (9,-1; 9,-1), time: 30.1498s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_140, [-inf,inf]=>[-0.848039430936334,0.07627698687726986] (9,-1; 9,-1), time: 30.0214s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-0.11793758024507277,0.9211004430848366] (9,-1; 9,-1), time: 30.0163s, #vars: 1627, #constrs: 963, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(166, 1), (86, -1), (107, -1), (101, 1), (134, -1), (83, 1), (182, -1), (125, -1), (13, -1), (127, -1), (147, -1), (49, -1), (109, 1), (79, -1), (103, -1), (186, -1), (192, -1), (156, -1), (89, -1), (146, 1), (81, -1), (145, -1), (190, -1), (188, 1), (138, 1), (4, -1), (128, 1)]
best_l after optimization: -56.675926208496094 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 4.986004829406738
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.87758636, -8.59136486, -6.19942284, -6.78993416, -4.33982182,
         -5.72478151, -8.61595631, -6.59687519, -5.94018269]], device='cuda:0') None
MIP improved 135 nodes out of 135 unstable nodes, lb improved 39.868309020996094, ub improved 56.78314208984375, time 142.0715
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_45', 'lay8_0', 'lay8_65', 'lay8_85', 'lay8_98', 'lay8_130', 'lay8_183', 'lay8_180', 'lay8_49', 'lay8_119', 'lay8_86', 'lay8_175', 'lay8_112', 'lay8_128', 'lay8_188', 'lay8_16', 'lay8_185', 'lay8_167', 'lay8_156', 'lay8_184', 'lay8_187', 'lay8_140', 'lay8_57', 'lay8_7', 'lay8_127', 'lay8_174', 'lay8_55', 'lay8_181', 'lay8_83', 'lay8_158', 'lay8_19', 'lay8_159', 'lay8_171', 'lay8_97', 'lay8_58', 'lay8_77', 'lay8_43', 'lay8_24', 'lay8_20', 'lay8_62', 'lay8_149', 'lay8_195', 'lay8_133', 'lay8_22', 'lay8_59', 'lay8_48', 'lay8_121', 'lay8_92', 'lay8_178', 'lay8_25', 'lay8_73', 'lay8_111', 'lay8_104', 'lay8_179', 'lay8_69', 'lay8_27', 'lay8_196', 'lay8_165', 'lay8_144', 'lay8_94', 'lay8_146', 'lay8_8', 'lay8_54', 'lay8_154', 'lay8_84', 'lay8_33', 'lay8_37', 'lay8_56', 'lay8_150', 'lay8_145', 'lay8_17', 'lay8_23', 'lay8_36', 'lay8_78', 'lay8_60', 'lay8_101', 'lay8_6', 'lay8_134', 'lay8_90', 'lay8_157', 'lay8_1', 'lay8_147', 'lay8_67', 'lay8_88', 'lay8_26', 'lay8_192', 'lay8_162', 'lay8_42', 'lay8_61', 'lay8_31', 'lay8_155', 'lay8_63', 'lay8_129', 'lay8_115', 'lay8_81', 'lay8_70', 'lay8_64', 'lay8_74', 'lay8_169', 'lay8_172', 'lay8_95', 'lay8_47', 'lay8_39', 'lay8_138', 'lay8_139', 'lay8_82', 'lay8_2', 'lay8_118', 'lay8_160', 'lay8_199', 'lay8_173', 'lay8_89', 'lay8_21', 'lay8_194', 'lay8_186', 'lay8_35', 'lay8_163', 'lay8_72', 'lay8_52', 'lay8_120', 'lay8_117', 'lay8_110', 'lay8_107', 'lay8_53', 'lay8_13', 'lay8_143', 'lay8_109', 'lay8_168', 'lay8_11', 'lay8_161', 'lay8_75', 'lay8_93', 'lay8_68', 'lay8_80', 'lay8_113', 'lay8_151', 'lay8_9', 'lay8_152', 'lay8_38', 'lay8_50', 'lay8_190', 'lay8_15', 'lay8_148', 'lay8_79', 'lay8_137', 'lay8_182', 'lay8_100', 'lay8_142', 'lay8_132', 'lay8_96', 'lay8_76', 'lay8_108', 'lay8_164', 'lay8_176', 'lay8_177', 'lay8_5', 'lay8_126', 'lay8_123', 'lay8_153', 'lay8_189', 'lay8_105', 'lay8_198', 'lay8_191', 'lay8_4', 'lay8_18', 'lay8_41', 'lay8_91', 'lay8_12', 'lay8_87', 'lay8_166', 'lay8_3', 'lay8_46', 'lay8_66', 'lay8_122', 'lay8_102', 'lay8_125', 'lay8_114', 'lay8_44', 'lay8_170', 'lay8_34', 'lay8_14', 'lay8_32', 'lay8_51', 'lay8_193', 'lay8_103', 'lay8_99', 'lay8_71', 'lay8_28', 'lay8_116', 'lay8_141', 'lay8_30', 'lay8_40', 'lay8_124', 'lay8_197', 'lay8_106', 'lay8_136', 'lay8_10', 'lay8_29', 'lay8_131', 'lay8_135'] filter: 1.0
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6602s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6603s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6612s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6704s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6760s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6839s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7156s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7175s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7254s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6472s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5941s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6842s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6309s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5692s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6145s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1825s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7357s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6080s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4256s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0074s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2763s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.0385s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5410s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4917s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4661s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4507s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4263s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-0.7737886022714914,0.40663313899793063] (9,-1; 9,-1), time: 30.0205s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[-0.9589388923796798,0.30590686392997424] (9,-1; 9,-1), time: 30.0212s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-0.7778627725925568,0.25297290149806656] (9,-1; 9,-1), time: 30.0228s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-0.7722649752002774,0.16001241250808185] (9,-1; 9,-1), time: 30.0230s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-1.0353691067205542,0.1357186976559205] (9,-1; 9,-1), time: 30.0270s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[-0.8418568141239869,0.09086399399987377] (9,-1; 9,-1), time: 30.0226s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-0.8186463611112414,0.24204851741679517] (9,-1; 9,-1), time: 30.0185s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.734209998543745,0.25331421611385263] (9,-1; 9,-1), time: 30.0183s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4454s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-0.5986806894410638,0.7168711081288495] (9,-1; 9,-1), time: 30.0179s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[-0.004910011056155956,1.0151094677387003] (9,-1; 9,-1), time: 30.0165s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4364s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4386s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5071s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-1.3244585831070845,0.07815248537732487] (9,-1; 9,-1), time: 30.0254s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0063s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[-0.3350080153999008,0.9079688900199483] (9,-1; 9,-1), time: 30.0128s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4298s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5145s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4447s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-0.6717707557168808,0.23042195046159603] (9,-1; 9,-1), time: 30.0156s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4706s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5146s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4384s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[-0.228827820296579,0.7620484227629614] (9,-1; 9,-1), time: 30.0165s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-0.5406715507575646,0.23861006201369026] (9,-1; 9,-1), time: 30.0124s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4294s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4323s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1743s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.5803s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[1e-05,1.2834615825325504] (15,-1; 9,-1), time: 15.4338s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[1e-05,1.413396818574277] (15,-1; 9,-1), time: 15.4245s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-0.7043294303231303,0.4984185378209255] (9,-1; 9,-1), time: 30.0251s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4401s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.01056843909517] (15,-1; 9,-1), time: 15.6344s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4754s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8875s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.7598982154781841,0.1266901234714599] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-0.7285320627983314,0.4635655943177577] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-0.39186296277964205,0.6961548499611553] (9,-1; 9,-1), time: 30.0162s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-0.7815771327860701,0.09425500750227765] (9,-1; 9,-1), time: 30.0130s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4542s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.5325093332082722,0.41731540531262423] (9,-1; 9,-1), time: 30.0139s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.24980882990791575,1.1945671537133882] (9,-1; 9,-1), time: 30.0117s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5276s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.5481141113722047,0.5715034019868116] (9,-1; 9,-1), time: 30.0109s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5006s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-0.17167895626653074,1.0599541320725185] (9,-1; 9,-1), time: 30.0135s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.27265123253410384,0.9319573186505813] (9,-1; 9,-1), time: 30.0230s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-0.8247071563078814,0.040183483618189554] (9,-1; 9,-1), time: 30.0115s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-0.4706493345053045,0.43689995850882885] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9149s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.4940035246186948,0.37740154839726864] (9,-1; 9,-1), time: 30.0185s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.1813s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.5979016584726843,0.20693471705759134] (9,-1; 9,-1), time: 30.0134s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.855450109720218,0.0553453700448707] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[1e-05,1.2322441062036038] (15,-1; 9,-1), time: 17.6436s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-0.6671090994216482,0.3284134882520019] (9,-1; 9,-1), time: 30.0210s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9877s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4837s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4149s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4064s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4903s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[-0.8832359340890638,0.2371947608808487] (9,-1; 9,-1), time: 30.0196s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.777669570318207,0.27687300124049424] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-0.82883276092202,0.15732345437848952] (9,-1; 9,-1), time: 30.0115s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-0.025736926080739107,1.037067756597517] (9,-1; 9,-1), time: 30.0245s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6511655455052827,0.2776527837104135] (9,-1; 9,-1), time: 30.0128s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[-0.28500191485373644,0.9075423642465605] (9,-1; 9,-1), time: 30.0151s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.1735s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-0.9452149082866104,0.1948238461099335] (9,-1; 9,-1), time: 30.0154s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4199s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,1.1745546271540033] (15,-1; 9,-1), time: 15.4259s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[-0.2207752352146804,0.7962858192077783] (9,-1; 9,-1), time: 30.0129s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-0.6668019881779462,0.43419678260736483] (9,-1; 9,-1), time: 30.0119s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[-0.38664018955848206,0.508388418293811] (9,-1; 9,-1), time: 30.0161s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3985s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4170s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-0.7313736589493194,0.2676042077225985] (9,-1; 9,-1), time: 30.0240s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4367s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.66401108581374,0.19906582032469602] (9,-1; 9,-1), time: 30.0107s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-0.9058569213446728,0.10204919178109975] (9,-1; 9,-1), time: 30.0130s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.5324076816897362,0.5032773790026192] (9,-1; 9,-1), time: 30.0262s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.34071916697084853,0.44983370091473807] (9,-1; 9,-1), time: 30.0142s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_160, [-inf,inf]=>[-0.31224870275016425,0.6160536731997082] (9,-1; 9,-1), time: 30.0163s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.427596101652013,0.4712456869975823] (9,-1; 9,-1), time: 30.0246s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.1389122420620861,0.6632667266025817] (9,-1; 9,-1), time: 30.0119s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.7159958862208671,0.37183374081552245] (9,-1; 9,-1), time: 30.0111s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5495s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.8622230405787974,0.0668821001489868] (9,-1; 9,-1), time: 30.0111s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-0.7359339614878325,0.2698468384697426] (9,-1; 9,-1), time: 30.0127s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4934s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5164s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4370s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_186, [-inf,inf]=>[-0.4867863506258175,0.24292250264738394] (9,-1; 9,-1), time: 30.0828s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5072s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-0.04423634012169286,1.005260407343185] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[-0.34815557418517434,0.4842111741164311] (9,-1; 9,-1), time: 30.0094s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[-0.3172065795175076,0.6472341276979034] (9,-1; 9,-1), time: 30.0562s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-0.20183749846206062,0.849671479050138] (9,-1; 9,-1), time: 30.0108s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7786s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4001s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4404s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4106s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4828s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4079s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9916s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.010901264863660333,1.0104308547261387] (9,-1; 9,-1), time: 30.0109s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5249s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,2.345739918007313] (15,-1; 9,-1), time: 15.4329s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-0.4004662062947348,0.6027756332972485] (9,-1; 9,-1), time: 30.0189s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[1e-05,1.2998371537437468] (15,-1; 9,-1), time: 15.4638s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[1e-05,1.5197159449514583] (15,-1; 9,-1), time: 15.5187s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.0888083192618587] (15,-1; 9,-1), time: 18.7107s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4761s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4362s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4335s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[1e-05,1.5036585451299223] (15,-1; 9,-1), time: 15.4280s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4237s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4090s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[1e-05,1.3974042843006658] (15,-1; 9,-1), time: 15.4524s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-0.7995803429164655,0.24556586066371416] (9,-1; 9,-1), time: 30.0145s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[1e-05,1.0261346361564065] (15,-1; 9,-1), time: 15.5169s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4068s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.6216s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_176, [-inf,inf]=>[1e-05,2.7277441889632574] (15,-1; 9,-1), time: 15.4237s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.7521538695722982,0.20341483859976747] (9,-1; 9,-1), time: 30.0174s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4565s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-0.1103973215329846,1.1932502112764238] (9,-1; 9,-1), time: 30.0183s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4919s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.599305444484916,0.2192046969426556] (9,-1; 9,-1), time: 30.0146s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5094s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5218s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[-0.09366103912300329,0.8428015232706266] (9,-1; 9,-1), time: 30.0123s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[1e-05,2.0200994511638157] (15,-1; 9,-1), time: 15.4921s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.07580893286269136,0.8411725011109362] (9,-1; 9,-1), time: 30.0107s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[1e-05,1.06252238478381] (15,-1; 9,-1), time: 15.4801s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1570s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-0.6166408253568384,0.5509034730929698] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,1.023010205278817] (15,-1; 9,-1), time: 18.0061s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4502s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3845s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-0.4995418713647299,0.3074524173665398] (9,-1; 9,-1), time: 30.0124s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5238s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[-0.6247186428180997,0.32826085874301325] (9,-1; 9,-1), time: 30.0097s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4976s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.8072170063965467,0.02318485550314646] (9,-1; 9,-1), time: 30.0124s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_114, [-inf,inf]=>[1e-05,2.5620106435525676] (15,-1; 9,-1), time: 15.4461s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4334s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[1e-05,2.678357810960459] (15,-1; 9,-1), time: 15.5034s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,2.839985558351595] (15,-1; 9,-1), time: 15.4103s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-0.43833647237022755,0.632166032401354] (9,-1; 9,-1), time: 30.0108s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,2.920902499796737] (15,-1; 9,-1), time: 15.5003s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-0.8044958687700943,0.19540096644017318] (9,-1; 9,-1), time: 30.0113s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[1e-05,1.8679489453915747] (15,-1; 9,-1), time: 15.4805s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.5174632295498118,0.43296507681376495] (9,-1; 9,-1), time: 30.0132s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,1.6565164247072568] (15,-1; 9,-1), time: 15.5218s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.5971565413393062,0.5204791767639998] (9,-1; 9,-1), time: 30.0132s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-0.25383523017425336,0.9799865784637427] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[1e-05,0.9392545319331201] (15,-1; 9,-1), time: 16.8056s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.10357142236010286,0.6717575093884982] (9,-1; 9,-1), time: 30.0133s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.9636467998222207,0.12069320714342024] (9,-1; 9,-1), time: 30.0186s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-0.2917768017360454,0.4358770671895666] (9,-1; 9,-1), time: 30.0121s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[1e-05,1.7710764098151304] (15,-1; 9,-1), time: 15.4067s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[1e-05,1.5172768311628717] (15,-1; 9,-1), time: 15.4268s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-0.34789625195846424,0.6830750983035688] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_124, [-inf,inf]=>[-0.05986616672546664,1.0362189801752677] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.8207573465141254,0.22047787567601349] (9,-1; 9,-1), time: 30.0096s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_136, [-inf,inf]=>[-0.4682071771713383,0.5467227620787783] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-0.09859043098801222,0.7547904223736882] (9,-1; 9,-1), time: 30.0108s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.33490100038542775,0.5971540286992186] (9,-1; 9,-1), time: 30.0105s, #vars: 1929, #constrs: 1316, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(139, -1), (93, -1), (170, -1), (152, -1), (191, -1), (168, -1), (67, -1), (33, -1), (123, -1), (32, -1), (195, -1), (133, -1), (18, -1), (106, -1), (159, -1), (110, -1), (26, -1), (122, -1), (141, -1), (112, -1), (70, 1), (69, -1), (101, -1), (183, -1), (175, 1), (196, -1), (113, -1), (162, -1), (197, -1), (7, -1), (108, -1), (117, -1), (98, -1), (21, -1), (2, -1), (166, -1), (80, -1), (64, -1), (103, -1), (124, 1), (86, -1), (37, -1), (92, -1), (173, -1), (53, -1), (189, -1), (99, -1), (105, -1), (55, 1), (59, 1), (193, 1), (75, -1), (171, 1), (96, 1), (129, -1), (91, 1), (194, -1), (180, -1), (178, -1), (65, 1), (6, -1), (76, 1), (16, -1), (111, 1), (43, -1), (146, 1), (120, -1), (78, 1), (121, 1), (36, 1), (187, -1), (135, 1), (68, -1), (51, -1), (35, 1), (27, -1), (176, 1), (8, -1), (172, -1), (58, 1), (134, 1), (157, -1), (144, 1), (46, -1)]
best_l after optimization: 3.4166574478149414 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 5.0185911655426025
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.01247406, -1.74444485,  0.08080578,  0.02430248,  2.44647264,
          0.13718271, -1.81137133,  0.70168638,  1.56954956]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 144.40457153320312, ub improved 226.04063415527344, time 202.9080
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_135', 'lay10_11', 'lay10_154', 'lay10_137', 'lay10_164', 'lay10_90', 'lay10_189', 'lay10_57', 'lay10_157', 'lay10_33', 'lay10_82', 'lay10_198', 'lay10_49', 'lay10_138', 'lay10_146', 'lay10_151', 'lay10_25', 'lay10_192', 'lay10_91', 'lay10_143', 'lay10_186', 'lay10_18', 'lay10_141', 'lay10_31', 'lay10_14', 'lay10_51', 'lay10_199', 'lay10_62', 'lay10_24', 'lay10_167', 'lay10_195', 'lay10_153', 'lay10_73', 'lay10_114', 'lay10_19', 'lay10_180', 'lay10_94', 'lay10_70', 'lay10_109', 'lay10_29', 'lay10_179', 'lay10_37', 'lay10_140', 'lay10_87', 'lay10_30', 'lay10_7', 'lay10_80', 'lay10_42', 'lay10_185', 'lay10_188', 'lay10_81', 'lay10_78', 'lay10_161', 'lay10_163', 'lay10_17', 'lay10_93', 'lay10_43', 'lay10_172', 'lay10_107', 'lay10_47', 'lay10_131', 'lay10_184', 'lay10_130', 'lay10_194', 'lay10_142', 'lay10_175', 'lay10_124', 'lay10_168', 'lay10_191', 'lay10_4', 'lay10_144', 'lay10_52', 'lay10_152', 'lay10_99', 'lay10_86', 'lay10_20', 'lay10_39', 'lay10_26', 'lay10_98', 'lay10_58', 'lay10_35', 'lay10_41', 'lay10_16', 'lay10_55', 'lay10_139', 'lay10_6', 'lay10_149', 'lay10_110', 'lay10_118', 'lay10_115', 'lay10_67', 'lay10_126', 'lay10_0', 'lay10_54', 'lay10_156', 'lay10_116', 'lay10_8', 'lay10_197', 'lay10_72', 'lay10_64', 'lay10_9', 'lay10_165', 'lay10_187', 'lay10_13', 'lay10_166', 'lay10_104', 'lay10_61', 'lay10_120', 'lay10_125', 'lay10_10', 'lay10_176', 'lay10_50', 'lay10_69', 'lay10_48', 'lay10_174', 'lay10_133', 'lay10_36', 'lay10_65', 'lay10_12', 'lay10_46', 'lay10_150', 'lay10_129', 'lay10_1', 'lay10_127', 'lay10_3', 'lay10_162', 'lay10_177', 'lay10_53', 'lay10_159', 'lay10_27', 'lay10_71', 'lay10_97', 'lay10_190', 'lay10_196', 'lay10_134', 'lay10_158', 'lay10_2', 'lay10_23', 'lay10_160', 'lay10_169', 'lay10_40', 'lay10_117', 'lay10_155', 'lay10_108', 'lay10_173', 'lay10_45', 'lay10_105', 'lay10_79', 'lay10_183', 'lay10_32', 'lay10_102', 'lay10_60', 'lay10_34', 'lay10_136', 'lay10_103', 'lay10_128', 'lay10_74', 'lay10_83', 'lay10_59', 'lay10_44', 'lay10_181', 'lay10_148', 'lay10_66', 'lay10_96', 'lay10_76', 'lay10_123', 'lay10_22', 'lay10_121', 'lay10_84', 'lay10_145', 'lay10_88', 'lay10_92', 'lay10_85', 'lay10_28', 'lay10_95', 'lay10_119', 'lay10_56', 'lay10_68', 'lay10_101', 'lay10_89', 'lay10_170', 'lay10_38', 'lay10_193', 'lay10_132', 'lay10_182', 'lay10_106', 'lay10_5', 'lay10_75', 'lay10_15', 'lay10_113', 'lay10_100', 'lay10_147', 'lay10_111', 'lay10_171', 'lay10_77', 'lay10_63', 'lay10_178', 'lay10_122', 'lay10_112', 'lay10_21'] filter: 1.0
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0253s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0530s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0966s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1756s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2236s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9782s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0288s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-1.6647523481379347,0.21882227124282855] (9,-1; 9,-1), time: 30.0202s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-1.4917718837171,0.11948354780597387] (9,-1; 9,-1), time: 30.0211s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-1.7912900694111789,0.07440068963634798] (9,-1; 9,-1), time: 30.0304s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.8442477562648025,1.1006451291624786] (9,-1; 9,-1), time: 30.0663s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-1.4451220194743124,0.19078015336556087] (9,-1; 9,-1), time: 30.0984s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-1.761629643446072,0.255147149392641] (9,-1; 9,-1), time: 30.1000s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-1.479946528952557,0.013070541901376437] (9,-1; 9,-1), time: 30.1131s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-1.7278069038884247,0.06776403422373876] (9,-1; 9,-1), time: 30.1342s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-1.1577085072403226,0.5047794780942408] (9,-1; 9,-1), time: 30.1669s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-0.7813969992302953,1.4251498903440893] (9,-1; 9,-1), time: 30.1920s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8238s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8457s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-1.0530612969430917,0.6031900230783878] (9,-1; 9,-1), time: 30.0596s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9280s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-0.8023901914503845,0.6314149895749894] (9,-1; 9,-1), time: 30.0315s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-1.2999699827919313,0.3199375307194902] (9,-1; 9,-1), time: 30.0215s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.5198954738684133,1.527693462498188] (9,-1; 9,-1), time: 30.0843s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7596s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7361s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.8830984890243506,0.7310034100292583] (9,-1; 9,-1), time: 30.0134s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7525s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7921s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7602s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9216s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-1.6273835176799092,0.2214317036343423] (9,-1; 9,-1), time: 30.0252s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3439s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8111s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1197s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-1.2865515561162764,0.4484618225264958] (9,-1; 9,-1), time: 30.0421s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-1.4851402967173104,0.07638513624246716] (9,-1; 9,-1), time: 30.0141s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-1.0403597986647677,0.5008971777455078] (9,-1; 9,-1), time: 30.0794s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-0.6700996686973987,0.9447471243265786] (9,-1; 9,-1), time: 30.0592s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-1.1382777301472038,0.44082982612189686] (9,-1; 9,-1), time: 30.2025s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.8250236147618364,0.7151507743404912] (9,-1; 9,-1), time: 30.2509s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.931564730985418,0.8602206169201612] (9,-1; 9,-1), time: 30.1842s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8188s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8207s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8164s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-0.05905328955550229,1.838456039489816] (9,-1; 9,-1), time: 30.0274s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-1.451030825131467,0.1522473736642299] (9,-1; 9,-1), time: 30.0801s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-1.2752800085840437,0.19129752371524927] (9,-1; 9,-1), time: 30.1285s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8139s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8305s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-0.22022920517001743,1.263179988834073] (9,-1; 9,-1), time: 30.0377s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-1.357494124068749,0.3507319054510707] (9,-1; 9,-1), time: 30.0564s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6333s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-1.3368807000410006,0.3443312556665441] (9,-1; 9,-1), time: 30.1420s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8495s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-1.395129063701517,0.38233362751432354] (9,-1; 9,-1), time: 30.0518s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-1.6361985139464421,0.22999072134176018] (9,-1; 9,-1), time: 30.0853s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8119s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8189s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-1.1764104753898728,0.36819537510474537] (9,-1; 9,-1), time: 30.1083s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[1e-05,1.8547200648310904] (15,-1; 9,-1), time: 16.0055s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[1e-05,1.7539250260613877] (15,-1; 9,-1), time: 17.6410s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-1.1127344613693813,0.7707588880971677] (9,-1; 9,-1), time: 30.0107s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-1.5022263518214385,0.13113695834403552] (9,-1; 9,-1), time: 30.0234s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-1.1977403666095126,0.2424839498889747] (9,-1; 9,-1), time: 30.0131s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7545s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6757s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-1.843430596892713,0.01506435067676512] (9,-1; 9,-1), time: 30.0482s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-0.5818384836615014,0.5547688888978614] (9,-1; 9,-1), time: 30.0140s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-1.3306478548514575,0.3070846347373318] (9,-1; 9,-1), time: 30.1189s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7318s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8335s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.7896306434431031,0.6352124177185335] (9,-1; 9,-1), time: 30.0417s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.9164483590738912,0.608248455261039] (9,-1; 9,-1), time: 30.1175s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7448s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7972s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-1.1459995316305271,0.3984356487330528] (9,-1; 9,-1), time: 30.0480s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-0.4002116867342588,1.2532113187457292] (9,-1; 9,-1), time: 30.0237s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7828s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-1.295821117921153,0.31444492718074907] (9,-1; 9,-1), time: 30.0469s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7760s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-0.8244042969433754,0.6989895608089405] (9,-1; 9,-1), time: 30.1414s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-1.3911516655900968,0.1792150799734296] (9,-1; 9,-1), time: 30.0151s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-0.08217693400470466,1.4635335035976813] (9,-1; 9,-1), time: 30.0986s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9008s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7475s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3415s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-1.1599145264058535,0.3425374053593534] (9,-1; 9,-1), time: 30.0882s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[1e-05,2.8492715089780476] (15,-1; 9,-1), time: 15.8581s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-0.6163792823256979,1.0095208620928502] (9,-1; 9,-1), time: 30.4236s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7784s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[1e-05,2.0738132842654244] (15,-1; 9,-1), time: 17.6923s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8273s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-1.3573316916041205,0.39146093772649393] (9,-1; 9,-1), time: 30.0129s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-1.644443322171371,0.015175878906432246] (9,-1; 9,-1), time: 30.1042s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-1.326702884345022,0.3036735324634232] (9,-1; 9,-1), time: 30.0293s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.9309813811322809,0.35835501004619447] (9,-1; 9,-1), time: 30.0351s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-0.4051426116656568,1.11501855395582] (9,-1; 9,-1), time: 30.1528s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-1.2153731357005304,0.26697677256621966] (9,-1; 9,-1), time: 30.1558s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9021s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-1.05039790188967,0.4567191427971043] (9,-1; 9,-1), time: 30.0606s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-1.2586887316184565,0.2665284684058666] (9,-1; 9,-1), time: 30.0608s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-1.403830140374284,0.1495857172101513] (9,-1; 9,-1), time: 30.1556s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.7392529699339121,1.2452618150579187] (9,-1; 9,-1), time: 30.0584s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8102s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-0.8958018871530007,0.5658694218566417] (9,-1; 9,-1), time: 30.0251s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-1.0440613829597516,0.4204613393766029] (9,-1; 9,-1), time: 30.0109s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7926s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-1.3194280776150271,0.1022950485499422] (9,-1; 9,-1), time: 30.0586s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.3884602471429006] (15,-1; 9,-1), time: 15.7721s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7121s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8344s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-0.911076487396098,0.40806766564983754] (9,-1; 9,-1), time: 30.2399s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-1.3723259349720112,0.02221921068874593] (9,-1; 9,-1), time: 30.0730s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.7611246401259214,0.9356361175315986] (9,-1; 9,-1), time: 30.1192s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-0.6364177625473502,1.073097556863602] (9,-1; 9,-1), time: 30.0287s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-1.2583154688838138,0.39387129499604046] (9,-1; 9,-1), time: 30.1353s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[-1.8125198932901672,0.1381348781193223] (9,-1; 9,-1), time: 30.1668s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-0.9138951406139917,0.5918807379432985] (9,-1; 9,-1), time: 30.0453s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-0.9305515367400043,0.8582938087740478] (9,-1; 9,-1), time: 30.0557s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-1.5637885227643396,0.30566805296997535] (9,-1; 9,-1), time: 30.0827s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8788s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-0.010122311924724715,1.693386854643825] (9,-1; 9,-1), time: 30.1546s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.78089595336663,0.7263536553166536] (9,-1; 9,-1), time: 30.1191s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[1e-05,4.281487236727424] (15,-1; 9,-1), time: 15.8651s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[-1.3148409015688192,0.10835479426733995] (9,-1; 9,-1), time: 30.0302s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-0.9777732387508933,0.5879141341270984] (9,-1; 9,-1), time: 30.0717s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8509s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[-1.032301242397176,0.3409784102906446] (9,-1; 9,-1), time: 30.1277s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-1.4864453759395786,0.10373833750875788] (9,-1; 9,-1), time: 30.0406s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8126s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7815s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[1e-05,2.00690163662078] (15,-1; 9,-1), time: 15.8478s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-1.2724673886651274,0.23501500879536658] (9,-1; 9,-1), time: 30.0534s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-0.36661742170516093,1.6218432008811894] (9,-1; 9,-1), time: 30.1294s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-1.4492567220786265,0.4159183136925417] (9,-1; 9,-1), time: 30.0391s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7696s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7973s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7680s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8205s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7169s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-0.17906823482762776,1.7000096425475228] (9,-1; 9,-1), time: 30.0185s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.29305333889937224,1.4799467819061118] (9,-1; 9,-1), time: 30.0918s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-1.5675321107642313,0.10600695709371452] (9,-1; 9,-1), time: 30.0790s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-0.35522234011552767,0.9685766268024308] (9,-1; 9,-1), time: 30.0200s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-1.060072815155662,0.639533780406325] (9,-1; 9,-1), time: 30.0794s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-1.0094664133844238,0.33915004538178745] (9,-1; 9,-1), time: 30.0416s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8146s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-1.2392660448110173,0.466234967328301] (9,-1; 9,-1), time: 30.1498s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-0.801209823387998,0.6104016641827263] (9,-1; 9,-1), time: 30.0108s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-0.7836659333037973,1.0614476487353426] (9,-1; 9,-1), time: 30.0932s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7761s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-1.2342831767888909,0.25095167330842394] (9,-1; 9,-1), time: 30.0214s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-1.6537735476969744,0.35129478908000755] (9,-1; 9,-1), time: 30.0415s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[1e-05,2.0689317008749892] (15,-1; 9,-1), time: 15.7506s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-1.5976859910149228,0.07502005094513044] (9,-1; 9,-1), time: 30.0560s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[1e-05,2.082403777934774] (15,-1; 9,-1), time: 17.5068s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8819s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,2.6167530689347975] (15,-1; 9,-1), time: 15.7387s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,2.191391440288166] (15,-1; 9,-1), time: 15.8838s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-1.325141068092185,0.07614395332212218] (9,-1; 9,-1), time: 30.0337s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9025s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[1e-05,3.2503491893100445] (15,-1; 9,-1), time: 15.9923s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[-0.24946802286531208,1.5545139755436417] (9,-1; 9,-1), time: 30.0376s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.25120220314706315,1.4392952763644362] (9,-1; 9,-1), time: 30.0909s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-1.1994864143811654,0.22568796415294434] (9,-1; 9,-1), time: 30.1791s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-1.1032667829545026,0.45369342523858797] (9,-1; 9,-1), time: 30.2103s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-1.6888787407169226,0.13237834456527275] (9,-1; 9,-1), time: 30.0118s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[-0.3512942732033591,0.9636666476162731] (9,-1; 9,-1), time: 30.0154s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-1.3845552730875634,0.08638208992735018] (9,-1; 9,-1), time: 30.0997s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[1e-05,2.700222459574143] (15,-1; 9,-1), time: 15.9048s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-0.4202825454257177,1.0383374329131225] (9,-1; 9,-1), time: 30.1583s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-1.4071625720228564,0.3093247878664419] (9,-1; 9,-1), time: 30.0334s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[1e-05,3.963427606086643] (15,-1; 9,-1), time: 15.7524s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[1e-05,3.207137153955761] (15,-1; 9,-1), time: 15.7596s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8069s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8852s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7686s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9824s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7860s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8042s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-1.2212663632328147,0.3153854022537644] (9,-1; 9,-1), time: 30.1064s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0255s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.18370364772823877,1.4071622578443355] (9,-1; 9,-1), time: 30.0652s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.22566345649109] (15,-1; 9,-1), time: 15.7642s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-1.4745216818936597,0.043423585256775005] (9,-1; 9,-1), time: 30.0200s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[-0.005187979950457056,1.6493277677051286] (9,-1; 9,-1), time: 30.0285s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-0.7290089122972487,0.5099180524851318] (9,-1; 9,-1), time: 30.0711s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[1e-05,1.616584168873807] (15,-1; 9,-1), time: 20.6349s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.14738777502826955,2.1084164413323934] (9,-1; 9,-1), time: 30.0277s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-1.0164640806425091,0.32480612916558893] (9,-1; 9,-1), time: 30.1309s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[-0.7448007678833004,0.7719640536033214] (9,-1; 9,-1), time: 30.0224s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-1.038326667979119,0.38989233445374727] (9,-1; 9,-1), time: 30.0597s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-0.7560528750238292,0.5837033342371322] (9,-1; 9,-1), time: 30.0376s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-0.7821752368411153,0.8941800030122794] (9,-1; 9,-1), time: 30.1464s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-0.7671530711349523,1.0447580612539538] (9,-1; 9,-1), time: 30.0158s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[-0.9400121590773665,0.4575495872884419] (9,-1; 9,-1), time: 30.1658s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-1.0748959676147283,0.3717572722423759] (9,-1; 9,-1), time: 30.2029s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-1.0572228237950436,0.3787048698887541] (9,-1; 9,-1), time: 30.0840s, #vars: 2295, #constrs: 1765, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-1.045899679947002,0.35610283684985833] (9,-1; 9,-1), time: 30.0720s, #vars: 2295, #constrs: 1765, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(45, -1), (0, -1), (65, -1), (85, -1), (98, -1), (130, -1), (49, -1), (119, -1), (175, -1), (128, -1), (16, -1), (185, -1), (156, -1), (140, -1), (57, -1), (7, -1), (127, -1), (174, -1), (83, -1), (158, -1), (171, -1), (58, -1), (24, -1), (20, -1), (62, -1), (149, -1), (195, -1), (22, -1), (178, -1), (111, -1), (104, -1), (179, -1), (69, 1), (27, -1), (196, -1), (165, -1), (94, -1), (146, 1), (8, -1), (54, -1), (154, -1), (84, -1), (37, -1), (56, -1), (36, 1), (101, -1), (134, -1), (90, -1), (67, -1), (192, -1), (61, -1), (31, -1), (129, 1), (81, -1), (74, 1), (169, -1), (95, -1), (47, -1), (39, -1), (138, -1), (139, -1), (194, -1), (72, -1), (52, -1), (120, -1), (107, -1), (109, 1), (168, 1), (11, -1), (161, 1), (93, -1), (68, -1), (113, -1), (151, 1), (152, -1), (38, -1), (50, 1), (148, -1), (79, -1), (137, -1), (182, -1), (100, 1), (142, -1), (132, -1), (96, 1), (108, -1), (176, 1), (126, -1), (123, -1), (153, -1), (189, 1), (105, 1), (198, -1), (191, -1), (4, 1), (18, -1), (41, -1), (3, -1), (46, -1), (66, -1), (102, -1), (125, -1), (114, 1), (34, 1), (32, 1), (51, -1), (193, 1), (103, -1), (99, 1), (71, -1), (28, 1), (116, -1), (30, 1), (40, -1), (197, -1), (131, 1), (135, 1)]
best_l after optimization: 19.052165985107422 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 5.278207540512085
alpha-CROWN with intermediate bounds by MIP: tensor([[ 3.71706605,  0.15676594,  1.65675688,  1.80127144,  4.08440208,
          1.78237367, -0.03312659,  2.52704811,  3.35960817]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 759.3077392578125, ub improved 895.4837036132812, time 259.7706
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=10, bias=True) 5 12 torch.Size([9, 1])
MIP finished with 644.0825309753418s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.742956161499023 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.030372142791748047
alpha-CROWN with intermediate bounds improved by MIP: tensor([[4.01775551, 0.58183956, 2.06337643, 2.20638943, 4.45493603, 2.17778611,
         0.42577648, 3.03581452, 3.77928233]], device='cuda:0') None
refined global lb: tensor([[4.01775551],
        [0.58183956],
        [2.06337643],
        [2.20638943],
        [4.45493603],
        [2.17778611],
        [0.42577648],
        [3.03581452],
        [3.77928233]], device='cuda:0') min: tensor(0.42577648, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 654.0736 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 654.067039356233, max time: 654.0735800266266
mean time for verified SAFE instances (total 1): 654.0735800266266, max time: 654.0735800266266
safe-incomplete-refine (total 1), index: [0]
