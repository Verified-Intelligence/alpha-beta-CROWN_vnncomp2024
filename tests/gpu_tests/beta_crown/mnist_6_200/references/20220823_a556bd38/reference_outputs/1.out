Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: null
  root_path: ''
model:
  path: mnist_6_200_nat.pth
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_6_200
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 43
  end: 44
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 13:31:14 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
saving results to Verified_ret_[mnist_6_200]_start=43_end=44_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-42.90721130, -53.32341766, -49.96341324, -53.90112305, -52.48913193,
         -44.01448441, -57.07033539, -57.98386765, -60.98963928]],
       device='cuda:0') None
best_l after optimization: -358.883056640625 with beta sum per layer: []
alpha/beta optimization time: 6.397640705108643
initial alpha-CROWN bounds: tensor([[-30.06584740, -39.78733444, -39.30331039, -39.73000336, -40.51801682,
         -34.00349808, -44.91165543, -44.81174088, -45.75164032]],
       device='cuda:0')
Worst class: (+ rhs) -45.75164031982422
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
model output: tensor([[-2.63355017,  1.25981891,  7.96646786,  0.80176717, -0.23677126,
         -2.51228809,  0.08354785,  1.64332783, -0.40803486, -2.71555471]],
       device='cuda:0')
pgd prediction: tensor([[[-2.63940144,  1.80271673,  7.01665401,  0.65871990, -0.22974387,
          -2.23512220, -0.08393250,  1.53723502, -0.39483923, -2.36826992],
         [-2.63940144,  1.80271673,  7.01665401,  0.65871990, -0.22974387,
          -2.23512220, -0.08393250,  1.53723502, -0.39483923, -2.36826992]]],
       device='cuda:0')
pgd attack margin tensor([[[9.65605545, 5.21393728, 6.35793400, 7.24639797, 9.25177574,
          7.10058641, 5.47941875, 7.41149330, 9.38492393]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6663 seconds.
pgd attack failed
Start solving intermediate bounds with MIP...
layer /22 using sparse-features alpha with shape [55]; unstable size 55; total size 200 (torch.Size([1, 200]))
layer /22 start_node /input.3 using sparse-spec alpha with unstable size 94 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /22 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /24 using sparse-features alpha with shape [94]; unstable size 94; total size 200 (torch.Size([1, 200]))
layer /24 start_node /input.7 using sparse-spec alpha with unstable size 141 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /24 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /26 using sparse-features alpha with shape [141]; unstable size 141; total size 200 (torch.Size([1, 200]))
layer /26 start_node /input.11 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /26 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /28 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /30 start_node /31 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_53', 'lay4_43', 'lay4_40', 'lay4_165', 'lay4_58', 'lay4_77', 'lay4_144', 'lay4_91', 'lay4_141', 'lay4_121', 'lay4_166', 'lay4_185', 'lay4_174', 'lay4_189', 'lay4_85', 'lay4_14', 'lay4_142', 'lay4_112', 'lay4_116', 'lay4_65', 'lay4_52', 'lay4_137', 'lay4_86', 'lay4_47', 'lay4_38', 'lay4_7', 'lay4_123', 'lay4_0', 'lay4_115', 'lay4_180', 'lay4_67', 'lay4_131', 'lay4_107', 'lay4_101', 'lay4_130', 'lay4_78', 'lay4_134', 'lay4_83', 'lay4_95', 'lay4_22', 'lay4_182', 'lay4_9', 'lay4_125', 'lay4_187', 'lay4_178', 'lay4_13', 'lay4_127', 'lay4_147', 'lay4_191', 'lay4_49', 'lay4_11', 'lay4_109', 'lay4_76', 'lay4_126', 'lay4_16', 'lay4_73', 'lay4_160', 'lay4_74', 'lay4_150', 'lay4_79', 'lay4_70', 'lay4_183', 'lay4_103', 'lay4_3', 'lay4_161', 'lay4_75', 'lay4_62', 'lay4_162', 'lay4_186', 'lay4_192', 'lay4_98', 'lay4_113', 'lay4_170', 'lay4_61', 'lay4_156', 'lay4_39', 'lay4_154', 'lay4_89', 'lay4_80', 'lay4_69', 'lay4_129', 'lay4_146', 'lay4_81', 'lay4_145', 'lay4_31', 'lay4_190', 'lay4_87', 'lay4_188', 'lay4_138', 'lay4_63', 'lay4_2', 'lay4_4', 'lay4_128'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:701: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
Solving MIP for lay4_121, [-inf,inf]=>[-0.6628096062064036,0.10043466105768366] (2,-1; 2,-1), time: 2.0243s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_185, [-inf,inf]=>[-0.3872397633341028,0.26511094317611456] (2,-1; 2,-1), time: 4.2660s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-0.3501480264948014,0.29813998383907914] (2,-1; 2,-1), time: 4.3813s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_189, [-inf,inf]=>[-0.3188711664786961,0.4017046443144505] (2,-1; 2,-1), time: 4.9460s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_144, [-inf,inf]=>[-0.36672780754648243,0.3538674359230122] (2,-1; 2,-1), time: 4.9937s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-0.3717372780592025,0.3265590333334793] (2,-1; 2,-1), time: 5.5184s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-0.28489697720721624,0.4316842387878231] (2,-1; 2,-1), time: 5.9149s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-0.43430723209406535,0.2761077109710255] (2,-1; 2,-1), time: 5.9311s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_14, [-inf,inf]=>[-0.6727912906493133,0.04688451613398673] (2,-1; 2,-1), time: 6.0781s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_174, [-inf,inf]=>[-0.6782204913979616,0.13550232133464463] (2,-1; 2,-1), time: 6.1155s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4303s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_141, [-inf,inf]=>[-0.3259965996059029,0.38474534192846305] (2,-1; 2,-1), time: 6.3538s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-0.1965543869368042,0.5018044703400648] (2,-1; 2,-1), time: 6.5297s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_165, [-inf,inf]=>[-0.46327630328394037,0.39114351874857833] (2,-1; 2,-1), time: 6.7166s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.2900085992966971,0.32788307278526274] (2,-1; 2,-1), time: 4.9139s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_166, [-inf,inf]=>[1e-05,0.6706048759991233] (15,-1; 2,-1), time: 7.2806s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.46314549969765884,0.3007826386237902] (2,-1; 2,-1), time: 8.1972s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_107, [-inf,inf]=>[-inf,-0.004086047123982087] (-1,-1; 2,-1), time: 0.3697s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_116, [-inf,inf]=>[-0.5527841328418935,0.09997713919494387] (2,-1; 2,-1), time: 4.2275s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5147360299536183,0.2157174289390761] (2,-1; 2,-1), time: 5.1920s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-0.14321991663287842,0.6297895085729547] (2,-1; 2,-1), time: 4.8469s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3994s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-0.33265324296354204,0.36383241542725064] (2,-1; 2,-1), time: 4.7196s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_131, [-inf,inf]=>[-0.28429291832975984,0.4236117982875949] (2,-1; 2,-1), time: 4.2040s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-0.2668093639323954,0.3336202606050185] (2,-1; 2,-1), time: 4.8360s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-0.44228755238044537,0.1392260429716157] (2,-1; 2,-1), time: 5.7661s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.4788303066113676,0.16250178766128312] (2,-1; 2,-1), time: 5.7225s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_130, [-inf,inf]=>[-0.6815271334444969,0.057541581177719] (2,-1; 2,-1), time: 3.3685s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.2288476241140025,0.5173550335490977] (2,-1; 2,-1), time: 5.9165s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3269s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2821s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_123, [-inf,inf]=>[-0.1452058889856503,0.5064887862651806] (2,-1; 2,-1), time: 6.2325s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[1e-05,0.6190913322004487] (15,-1; 2,-1), time: 4.0415s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.31276885689725953,0.23787104923238447] (2,-1; 2,-1), time: 8.5266s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.4473125303595776,0.22144101322583054] (2,-1; 2,-1), time: 5.9206s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3505s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2456s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2731s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[1e-05,0.7872748898888382] (15,-1; 2,-1), time: 3.7691s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.2650983091941671,0.4501121899197976] (2,-1; 2,-1), time: 5.1540s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4183007554405509,0.20654822383158167] (2,-1; 2,-1), time: 15.9230s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.04419449843141671,0.5444415060135972] (2,-1; 2,-1), time: 5.2646s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_22, [-inf,inf]=>[-0.113844771382567,0.7381571181622617] (2,-1; 2,-1), time: 5.3770s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-0.38455935024889526,0.2372412449821032] (2,-1; 2,-1), time: 4.3098s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.7122s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_109, [-inf,inf]=>[1e-05,0.8334357895545093] (15,-1; 2,-1), time: 4.3833s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2791s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.5785147185353038,0.25539546468122176] (2,-1; 2,-1), time: 6.0253s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3419s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.3733996479659203,0.33976581272487394] (2,-1; 2,-1), time: 5.9101s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_191, [-inf,inf]=>[-0.09193680319155903,0.4176537259336889] (2,-1; 2,-1), time: 5.4097s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.3072390457775232,0.5167452462210397] (2,-1; 2,-1), time: 6.1514s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_16, [-inf,inf]=>[-0.258951922616182,0.44719077285013253] (2,-1; 2,-1), time: 4.7066s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.43494262072741435,0.19173050291751148] (2,-1; 2,-1), time: 12.8016s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3817s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_126, [-inf,inf]=>[-0.48083265533280584,0.2237143794010355] (2,-1; 2,-1), time: 5.5793s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3523s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-0.10019033656136528,0.6008096608349326] (2,-1; 2,-1), time: 6.2258s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_73, [-inf,inf]=>[-0.507904674424578,0.18149376213826757] (2,-1; 2,-1), time: 4.7764s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4182s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.13785864811039433,0.43925009792559794] (9,-1; 2,-1), time: 15.5233s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.11347197622966962,0.6434394805671841] (2,-1; 2,-1), time: 5.0857s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_150, [-inf,inf]=>[-0.608362210196786,0.1372265631634488] (2,-1; 2,-1), time: 4.5569s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3488s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.5844827875888896,0.18538391271862903] (2,-1; 2,-1), time: 4.6792s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.08970103197695431,0.5903807761708776] (2,-1; 2,-1), time: 4.6575s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_161, [-inf,inf]=>[-0.5539393682620973,0.07828327006998013] (2,-1; 2,-1), time: 5.4751s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3033s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_183, [-inf,inf]=>[-0.41722398356653917,0.19935492828105383] (2,-1; 2,-1), time: 6.3665s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[-0.71002964377072,0.026163378971916444] (2,-1; 2,-1), time: 5.9089s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3274s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_170, [-inf,inf]=>[-0.5173984859572365,0.10341986669071743] (2,-1; 2,-1), time: 4.3173s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_113, [-inf,inf]=>[-0.5932548273805719,0.07565635554945714] (2,-1; 2,-1), time: 4.3655s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2604s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_160, [-inf,inf]=>[-0.5594997515877348,0.15122446047541155] (2,-1; 2,-1), time: 8.3647s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-0.2832994652930669,0.3357014504292885] (2,-1; 2,-1), time: 7.4480s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-0.17109124354861202,0.5704896046284164] (2,-1; 2,-1), time: 3.4665s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3923s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-0.2680744994148015,0.4173927183375113] (2,-1; 2,-1), time: 5.7498s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.4380015546965305,0.46553408837770816] (2,-1; 2,-1), time: 5.4938s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.4489191917842867,0.21249199886581427] (2,-1; 2,-1), time: 4.3419s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_146, [-inf,inf]=>[1e-05,0.8718313707069968] (15,-1; 2,-1), time: 3.5858s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_154, [-inf,inf]=>[-0.1698304931888312,0.4588622612856302] (2,-1; 2,-1), time: 5.9114s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.3867099171439929,0.29320097723154315] (2,-1; 2,-1), time: 5.9722s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[1e-05,0.8767264561542946] (15,-1; 2,-1), time: 2.6452s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[1e-05,0.7120976564268149] (15,-1; 2,-1), time: 3.7396s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_188, [-inf,inf]=>[1e-05,0.6664628459898603] (15,-1; 2,-1), time: 4.0730s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.09112713601044253,0.6858573889012827] (2,-1; 2,-1), time: 4.0063s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.16379769589179066,0.47416579980360385] (2,-1; 2,-1), time: 5.7817s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_31, [-inf,inf]=>[-0.5780595321532245,0.052395616823170205] (2,-1; 2,-1), time: 5.2214s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_2, [-inf,inf]=>[-0.010714938102084053,0.7801718248019396] (2,-1; 2,-1), time: 4.6556s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.07592355077025145,0.6339288361862246] (2,-1; 2,-1), time: 6.7140s, #vars: 1295, #constrs: 565, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.6614504352710882,0.044825397277639775] (9,-1; 2,-1), time: 16.1879s, #vars: 1295, #constrs: 565, improved: True
PGD done for relu layer 2
MIP improved 93 nodes out of 93 unstable nodes, lb improved 21.347442626953125, ub improved 17.867347717285156, time 35.1587
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_28', 'lay6_139', 'lay6_93', 'lay6_170', 'lay6_152', 'lay6_191', 'lay6_168', 'lay6_67', 'lay6_33', 'lay6_181', 'lay6_24', 'lay6_123', 'lay6_188', 'lay6_32', 'lay6_177', 'lay6_195', 'lay6_133', 'lay6_18', 'lay6_106', 'lay6_159', 'lay6_110', 'lay6_3', 'lay6_15', 'lay6_107', 'lay6_26', 'lay6_122', 'lay6_30', 'lay6_50', 'lay6_49', 'lay6_141', 'lay6_112', 'lay6_192', 'lay6_87', 'lay6_29', 'lay6_70', 'lay6_69', 'lay6_101', 'lay6_136', 'lay6_183', 'lay6_151', 'lay6_175', 'lay6_196', 'lay6_113', 'lay6_169', 'lay6_153', 'lay6_162', 'lay6_197', 'lay6_72', 'lay6_7', 'lay6_108', 'lay6_174', 'lay6_9', 'lay6_117', 'lay6_148', 'lay6_98', 'lay6_77', 'lay6_128', 'lay6_21', 'lay6_2', 'lay6_166', 'lay6_80', 'lay6_48', 'lay6_64', 'lay6_103', 'lay6_124', 'lay6_39', 'lay6_73', 'lay6_186', 'lay6_86', 'lay6_37', 'lay6_92', 'lay6_88', 'lay6_163', 'lay6_173', 'lay6_53', 'lay6_189', 'lay6_150', 'lay6_142', 'lay6_99', 'lay6_10', 'lay6_105', 'lay6_11', 'lay6_55', 'lay6_59', 'lay6_193', 'lay6_75', 'lay6_171', 'lay6_96', 'lay6_129', 'lay6_91', 'lay6_165', 'lay6_194', 'lay6_180', 'lay6_138', 'lay6_42', 'lay6_178', 'lay6_60', 'lay6_65', 'lay6_6', 'lay6_118', 'lay6_76', 'lay6_102', 'lay6_54', 'lay6_16', 'lay6_12', 'lay6_61', 'lay6_111', 'lay6_43', 'lay6_146', 'lay6_132', 'lay6_120', 'lay6_78', 'lay6_121', 'lay6_36', 'lay6_187', 'lay6_135', 'lay6_131', 'lay6_167', 'lay6_68', 'lay6_160', 'lay6_51', 'lay6_35', 'lay6_27', 'lay6_176', 'lay6_74', 'lay6_8', 'lay6_172', 'lay6_94', 'lay6_58', 'lay6_140', 'lay6_134', 'lay6_119', 'lay6_157', 'lay6_144', 'lay6_46'] filter: 1.0
Solving MIP for lay6_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4280s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4277s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4285s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4429s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5249s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5328s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4198s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5085s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2585s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2999s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3145s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4141s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1917s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8646s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3315s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1518s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3343s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1978s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.4063s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.1605s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3667s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3689s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[1e-05,1.516279222140316] (15,-1; 9,-1), time: 15.8992s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.5785912063298357,0.3346145370557769] (9,-1; 9,-1), time: 30.0184s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_188, [-inf,inf]=>[-0.9029632109033905,0.11850747203821085] (9,-1; 9,-1), time: 30.0174s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-0.6860037732620787,0.18897661170894664] (9,-1; 9,-1), time: 30.0187s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_177, [-inf,inf]=>[-0.9060549818360212,0.17758091051297817] (9,-1; 9,-1), time: 30.1697s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9215s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3609s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-0.06966200953171031,0.8611922430748191] (9,-1; 9,-1), time: 30.0147s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-0.8259071314826596,0.08164640809381304] (9,-1; 9,-1), time: 30.8192s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-0.2747609129029806,0.7113634238828367] (9,-1; 9,-1), time: 30.0765s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-0.840762408308481,0.007889175754441131] (9,-1; 9,-1), time: 30.0140s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4193s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3692s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.8988611895100457,0.1074121594863856] (9,-1; 9,-1), time: 30.0124s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3228s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3356s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-0.8355435887358944,0.014953307360015447] (9,-1; 9,-1), time: 30.0593s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.696983181656002,0.2111326606647833] (9,-1; 9,-1), time: 30.2255s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4086s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3334s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5006681445997346,0.3416470959881942] (9,-1; 9,-1), time: 30.0148s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.8387516966190862,0.060777634670470385] (9,-1; 9,-1), time: 30.1370s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3460s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0011s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9549s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3583s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3505s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3927s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-0.874975443786599,0.061528376531050644] (9,-1; 9,-1), time: 30.0172s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5365s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-0.7872407764892378,0.2514216143277389] (9,-1; 9,-1), time: 31.2516s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_175, [-inf,inf]=>[1e-05,1.0527788972349226] (15,-1; 9,-1), time: 16.1357s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3604s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7850s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[1e-05,1.1609380037318011] (15,-1; 2,-1), time: 16.0467s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.0394s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4145s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1290s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3720s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_151, [-inf,inf]=>[-0.7978365188267224,0.015450854540433613] (9,-1; 9,-1), time: 30.4980s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_153, [-inf,inf]=>[-0.6602904056904917,0.29401639571076577] (9,-1; 9,-1), time: 30.0914s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_169, [-inf,inf]=>[-0.361776605252436,0.49479902894325606] (9,-1; 9,-1), time: 30.4309s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_174, [-inf,inf]=>[-0.3590656158616348,0.4192475377342393] (9,-1; 9,-1), time: 30.0136s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.8586993688930035,0.17656353774751188] (9,-1; 9,-1), time: 30.2820s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3767s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-0.7758027260736174,0.2154000447355933] (9,-1; 9,-1), time: 30.0166s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1344s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-0.41622343555938457,0.4144398706139004] (9,-1; 9,-1), time: 30.0214s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-0.7326253816045264,0.16121132425361842] (9,-1; 9,-1), time: 30.7449s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3440s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_128, [-inf,inf]=>[-0.33767347855030694,0.435362677993649] (9,-1; 9,-1), time: 30.2318s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3474s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-0.6035168779792331,0.1923447797846997] (9,-1; 9,-1), time: 30.2530s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-0.8758391684886558,0.22925599849318976] (9,-1; 9,-1), time: 30.2694s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9295s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3861s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-0.5723834185934589,0.34484739123368147] (9,-1; 9,-1), time: 30.0269s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.24332864225632578,0.4942403340078251] (9,-1; 9,-1), time: 30.0240s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4255s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[1e-05,1.4973755714379706] (15,-1; 9,-1), time: 15.3717s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_171, [-inf,inf]=>[1e-05,0.8495016504307861] (15,-1; 9,-1), time: 16.1632s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-0.6609310985375303,0.3203792983396244] (9,-1; 9,-1), time: 30.0087s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[1e-05,1.0780953750111655] (15,-1; 9,-1), time: 16.7392s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-0.7346369886039101,0.05563091487726206] (9,-1; 9,-1), time: 30.2211s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_193, [-inf,inf]=>[1e-05,1.0779301960139294] (15,-1; 9,-1), time: 20.9806s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[1e-05,1.0246879344798088] (15,-1; 9,-1), time: 20.3302s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1105s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.4849s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.40405927334016384,0.4064123750112617] (9,-1; 9,-1), time: 30.0089s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[1e-05,0.8396192252818477] (15,-1; 9,-1), time: 25.0383s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3787s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_142, [-inf,inf]=>[-0.612422575299235,0.34471483723172724] (9,-1; 9,-1), time: 30.3866s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.3390229680345994,0.5604873950860797] (9,-1; 9,-1), time: 30.4392s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3678s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.06583515221299684,0.7496496291084505] (9,-1; 9,-1), time: 30.6124s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_165, [-inf,inf]=>[-0.8259265181181578,0.2172434628467626] (9,-1; 9,-1), time: 30.0173s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,1.1898980272381503] (15,-1; 9,-1), time: 16.0283s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3540s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.5002801907955691,0.35386385205871773] (9,-1; 9,-1), time: 30.0823s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.45036021044874724,0.35619244700004266] (9,-1; 9,-1), time: 30.4308s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[1e-05,0.8413660921002606] (15,-1; 9,-1), time: 23.3497s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[1e-05,1.2003395104249757] (15,-1; 9,-1), time: 16.2163s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.44721561696867945,0.3899204166929334] (9,-1; 9,-1), time: 30.0198s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5295s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_146, [-inf,inf]=>[1e-05,1.527781615035596] (15,-1; 9,-1), time: 15.4465s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3709s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[1e-05,1.1673049238138304] (15,-1; 9,-1), time: 15.3572s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.1000s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4484s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[1e-05,1.587548245050489] (15,-1; 9,-1), time: 15.4788s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_121, [-inf,inf]=>[1e-05,1.2442298571689827] (15,-1; 9,-1), time: 17.2620s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-0.19981194548735778,0.5666185160445042] (9,-1; 9,-1), time: 31.2754s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.9053600235740175,0.07116888761058761] (9,-1; 9,-1), time: 30.3872s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[1e-05,1.1917664781559674] (15,-1; 9,-1), time: 15.7802s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.1437765672959095,0.7344535906985727] (9,-1; 9,-1), time: 30.5275s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4414s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-0.3223777522797703,0.5900097490212081] (9,-1; 9,-1), time: 30.3940s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4210s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.5477430942144969,0.24151377520747272] (9,-1; 9,-1), time: 30.4988s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.3794s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[1e-05,1.0854819323767133] (15,-1; 9,-1), time: 15.3479s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[1e-05,0.915801034656066] (15,-1; 9,-1), time: 17.3078s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-0.4656911551750456,0.42317483439170983] (9,-1; 9,-1), time: 30.0938s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8435954942513416] (15,-1; 9,-1), time: 16.4603s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-0.06808508853070773,0.7138781290059911] (9,-1; 9,-1), time: 30.2930s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_134, [-inf,inf]=>[1e-05,0.893028162846731] (15,-1; 9,-1), time: 16.0183s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.3250649424489477,0.5215192907439843] (9,-1; 9,-1), time: 30.0115s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.7107584585083844] (15,-1; 9,-1), time: 15.3407s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.6574184196527366,0.23817698102778972] (9,-1; 9,-1), time: 31.0347s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.11240971109817734,0.7114409431437687] (9,-1; 9,-1), time: 30.0234s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.6573675726820403,0.2822279314283883] (9,-1; 9,-1), time: 30.7528s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_140, [-inf,inf]=>[-0.8520487535938621,0.07621130801770286] (9,-1; 9,-1), time: 31.1172s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-0.10968106214079991,0.9324340477208557] (9,-1; 9,-1), time: 30.2689s, #vars: 1627, #constrs: 963, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(166, 1), (86, -1), (107, -1), (101, 1), (134, -1), (83, 1), (182, -1), (125, -1), (13, -1), (127, -1), (147, -1), (49, -1), (109, 1), (79, -1), (103, -1), (186, -1), (192, -1), (156, -1), (89, -1), (146, 1), (81, -1), (145, -1), (190, -1), (188, 1), (138, 1), (4, -1), (128, 1)]
best_l after optimization: -56.70077896118164 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 5.160526514053345
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.88000584, -8.59409904, -6.20201159, -6.79282284, -4.34270096,
         -5.72714424, -8.61865997, -6.59994030, -5.94339371]], device='cuda:0') None
MIP improved 135 nodes out of 135 unstable nodes, lb improved 39.89057540893555, ub improved 56.79872512817383, time 141.6899
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_45', 'lay8_0', 'lay8_65', 'lay8_85', 'lay8_98', 'lay8_130', 'lay8_183', 'lay8_180', 'lay8_49', 'lay8_119', 'lay8_86', 'lay8_175', 'lay8_112', 'lay8_128', 'lay8_188', 'lay8_16', 'lay8_185', 'lay8_167', 'lay8_156', 'lay8_184', 'lay8_187', 'lay8_140', 'lay8_57', 'lay8_7', 'lay8_127', 'lay8_174', 'lay8_55', 'lay8_181', 'lay8_83', 'lay8_158', 'lay8_19', 'lay8_159', 'lay8_171', 'lay8_97', 'lay8_58', 'lay8_77', 'lay8_43', 'lay8_24', 'lay8_20', 'lay8_62', 'lay8_149', 'lay8_195', 'lay8_133', 'lay8_22', 'lay8_59', 'lay8_48', 'lay8_121', 'lay8_92', 'lay8_178', 'lay8_25', 'lay8_73', 'lay8_111', 'lay8_104', 'lay8_179', 'lay8_69', 'lay8_27', 'lay8_196', 'lay8_165', 'lay8_144', 'lay8_94', 'lay8_146', 'lay8_8', 'lay8_54', 'lay8_154', 'lay8_84', 'lay8_33', 'lay8_37', 'lay8_56', 'lay8_150', 'lay8_145', 'lay8_17', 'lay8_23', 'lay8_36', 'lay8_78', 'lay8_60', 'lay8_101', 'lay8_6', 'lay8_134', 'lay8_90', 'lay8_157', 'lay8_1', 'lay8_147', 'lay8_67', 'lay8_88', 'lay8_26', 'lay8_192', 'lay8_162', 'lay8_42', 'lay8_61', 'lay8_31', 'lay8_155', 'lay8_63', 'lay8_129', 'lay8_115', 'lay8_81', 'lay8_70', 'lay8_64', 'lay8_74', 'lay8_169', 'lay8_172', 'lay8_95', 'lay8_47', 'lay8_39', 'lay8_138', 'lay8_139', 'lay8_82', 'lay8_2', 'lay8_118', 'lay8_160', 'lay8_199', 'lay8_173', 'lay8_89', 'lay8_21', 'lay8_194', 'lay8_186', 'lay8_35', 'lay8_163', 'lay8_72', 'lay8_52', 'lay8_120', 'lay8_117', 'lay8_110', 'lay8_107', 'lay8_53', 'lay8_13', 'lay8_143', 'lay8_109', 'lay8_168', 'lay8_11', 'lay8_161', 'lay8_75', 'lay8_93', 'lay8_68', 'lay8_80', 'lay8_113', 'lay8_151', 'lay8_9', 'lay8_152', 'lay8_38', 'lay8_50', 'lay8_190', 'lay8_15', 'lay8_148', 'lay8_79', 'lay8_137', 'lay8_182', 'lay8_100', 'lay8_142', 'lay8_132', 'lay8_96', 'lay8_76', 'lay8_108', 'lay8_164', 'lay8_176', 'lay8_177', 'lay8_5', 'lay8_126', 'lay8_123', 'lay8_153', 'lay8_189', 'lay8_105', 'lay8_198', 'lay8_191', 'lay8_4', 'lay8_18', 'lay8_41', 'lay8_91', 'lay8_12', 'lay8_87', 'lay8_166', 'lay8_3', 'lay8_46', 'lay8_66', 'lay8_122', 'lay8_102', 'lay8_125', 'lay8_114', 'lay8_44', 'lay8_170', 'lay8_34', 'lay8_14', 'lay8_32', 'lay8_51', 'lay8_193', 'lay8_103', 'lay8_99', 'lay8_71', 'lay8_28', 'lay8_116', 'lay8_141', 'lay8_30', 'lay8_40', 'lay8_124', 'lay8_197', 'lay8_106', 'lay8_136', 'lay8_10', 'lay8_29', 'lay8_131', 'lay8_135'] filter: 1.0
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5651s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5754s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5724s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5827s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5774s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5943s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5988s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5965s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6216s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5546s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5494s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6322s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6946s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5325s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6055s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1552s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5747s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7039s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8300s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4988s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0112s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.9503s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5398s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4774s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4722s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4474s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.5472s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.021423577881163] (15,-1; 9,-1), time: 28.0315s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-0.8065493730144276,0.25129451262303726] (9,-1; 9,-1), time: 30.0136s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[-0.9471912613534311,0.26492118982583457] (9,-1; 9,-1), time: 30.0175s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-0.7790869095049783,0.4076123817590811] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-1.0516341072965563,0.14410915424859472] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-0.8002067609571842,0.15097918247942027] (9,-1; 9,-1), time: 30.0207s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4541s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[-0.8424427249750143,0.09712449170371149] (9,-1; 9,-1), time: 30.0152s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-0.8151890132277743,0.23931572440890553] (9,-1; 9,-1), time: 30.0183s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.7285733648490769,0.2476303807072311] (9,-1; 9,-1), time: 30.0183s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4489s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5273s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-0.5883247573957372,0.7376239660354221] (9,-1; 9,-1), time: 30.0169s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1605s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4553s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5251s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4499s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-1.317038232076773,0.07807661398254244] (9,-1; 9,-1), time: 30.0168s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4552s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[-0.34248934780744217,0.9083778483205467] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-0.6656774710900061,0.21095669154500735] (9,-1; 9,-1), time: 30.0108s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4497s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5292s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[-0.22559293257950708,0.7928726186706294] (9,-1; 9,-1), time: 30.0119s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4426s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4889s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-0.5329398668784278,0.23757281505285605] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4737s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.8689s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.6670s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[1e-05,1.292523920899971] (15,-1; 9,-1), time: 15.4796s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[1e-05,1.4290436179091894] (15,-1; 9,-1), time: 15.4639s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-0.6575331553251362,0.5018997319720705] (9,-1; 9,-1), time: 30.0117s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6144s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.01864435281846] (15,-1; 9,-1), time: 15.4185s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4811s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5710s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.7614969765722664,0.14512605198917303] (9,-1; 9,-1), time: 30.0100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-0.40069293250884713,0.6911683464739895] (9,-1; 9,-1), time: 30.0102s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-0.778846520061899,0.08173681908244235] (9,-1; 9,-1), time: 30.0116s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-0.7275857232850019,0.46215013815558975] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.5278133437124637,0.43094440080522506] (9,-1; 9,-1), time: 30.0113s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4766s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.2758224832489728,1.1960709530074156] (9,-1; 9,-1), time: 30.0155s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5493s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.5489583888727508,0.5806726970631669] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5213s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-0.16809617109794522,1.0974239116274107] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.26628826920738113,0.920358548823914] (9,-1; 9,-1), time: 30.0106s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-0.809702718459226,0.03817076945322113] (9,-1; 9,-1), time: 30.0152s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-0.4663150869857312,0.4418974541594481] (9,-1; 9,-1), time: 30.0100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7322s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.49086795853782295,0.37616775364427857] (9,-1; 9,-1), time: 30.0108s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.6161s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.596104693839278,0.2108015795343416] (9,-1; 9,-1), time: 30.0100s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.8361906000988937,0.0256944118584356] (9,-1; 9,-1), time: 30.0103s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[1e-05,1.2403686299859196] (15,-1; 9,-1), time: 17.8874s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-0.6460203359960355,0.32961732157225304] (9,-1; 9,-1), time: 30.0105s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0138s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5156s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4699s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4478s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5455s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[-0.8823371411419333,0.2249300142048131] (9,-1; 9,-1), time: 30.0194s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.1026s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.807418222905939,0.2684712713532724] (9,-1; 9,-1), time: 30.0116s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-0.8003296801525352,0.15794352065417425] (9,-1; 9,-1), time: 30.0118s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-0.03251408536536853,1.0498899666108945] (9,-1; 9,-1), time: 30.0119s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6467947774576395,0.28782535855171065] (9,-1; 9,-1), time: 30.0112s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[-0.2867772515895206,0.9086219036509025] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-0.9494961287420418,0.21970963848575475] (9,-1; 9,-1), time: 30.0127s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4304s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,1.1986594166774136] (15,-1; 9,-1), time: 15.4469s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[-0.2297275027667208,0.7645087252956423] (9,-1; 9,-1), time: 30.0132s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-0.6728593016794573,0.43885486661366313] (9,-1; 9,-1), time: 30.0170s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[-0.37297088797813005,0.5284227332922163] (9,-1; 9,-1), time: 30.0124s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4523s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4552s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4934s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-0.7196245951463051,0.2720485358672744] (9,-1; 9,-1), time: 30.0129s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4664s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.6515506955946401,0.19256236709968982] (9,-1; 9,-1), time: 30.0123s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-0.9021657481599067,0.11701892246251862] (9,-1; 9,-1), time: 30.0108s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.528721855662948,0.5136041065696927] (9,-1; 9,-1), time: 30.0113s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.3208076463610635,0.4570582928149127] (9,-1; 9,-1), time: 30.0188s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.42892832831542915,0.4906964041848191] (9,-1; 9,-1), time: 30.0130s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5859s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.1536109974181251,0.6464463807014841] (9,-1; 9,-1), time: 30.0152s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_160, [-inf,inf]=>[-0.29112129348873006,0.6310328282501732] (9,-1; 9,-1), time: 30.0165s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.7234073164503539,0.363447609631395] (9,-1; 9,-1), time: 30.0172s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.8606781236184423,0.06375197516898448] (9,-1; 9,-1), time: 30.0123s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5564s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-0.7221764550841833,0.28191261466690964] (9,-1; 9,-1), time: 30.0115s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5576s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4886s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_186, [-inf,inf]=>[-0.4927961235114812,0.23748645209901817] (9,-1; 9,-1), time: 30.0099s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4307s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-0.05900735522644302,0.984206607523953] (9,-1; 9,-1), time: 30.0225s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[-0.3558562829860904,0.4814579144611019] (9,-1; 9,-1), time: 30.0106s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[-0.31939523191862973,0.6500877683989619] (9,-1; 9,-1), time: 30.0186s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-0.20254435453352787,0.886159970165012] (9,-1; 9,-1), time: 30.0125s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7837s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4831s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4607s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4776s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5255s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7259s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4500s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.007580078163579813,1.01100190271911] (9,-1; 9,-1), time: 30.0110s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5375s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,2.333738533170072] (15,-1; 9,-1), time: 15.4608s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[1e-05,1.3103052897535437] (15,-1; 9,-1), time: 15.4981s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-0.40338685427354287,0.5725069160792309] (9,-1; 9,-1), time: 30.0093s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[1e-05,1.5157536504697113] (15,-1; 9,-1), time: 15.5425s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.0794227952331075] (15,-1; 9,-1), time: 19.4410s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5163s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4513s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4801s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[1e-05,1.5161819585123117] (15,-1; 9,-1), time: 15.4381s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4287s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4239s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[1e-05,1.3968822451182878] (15,-1; 9,-1), time: 15.5630s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-0.7748921832563225,0.22391727607529602] (9,-1; 9,-1), time: 30.0102s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[1e-05,1.023336549637115] (15,-1; 9,-1), time: 15.5644s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.9071s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_176, [-inf,inf]=>[1e-05,2.7448160352329114] (15,-1; 9,-1), time: 15.4616s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.2214s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.7765707525229801,0.1851798849032423] (9,-1; 9,-1), time: 30.0211s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-0.1280117937455102,1.187466773390738] (9,-1; 9,-1), time: 30.0166s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4676s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.5937050644066001,0.22457242009674602] (9,-1; 9,-1), time: 30.0105s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4836s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5098s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5627s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[-0.10260593063077307,0.8417330191748905] (9,-1; 9,-1), time: 30.0175s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[1e-05,2.0381233254949565] (15,-1; 9,-1), time: 15.4392s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.08121245649853653,0.8389074814399029] (9,-1; 9,-1), time: 30.0157s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[1e-05,1.0424181219425819] (15,-1; 9,-1), time: 15.4904s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3761s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-0.6147592978725863,0.5714463000586354] (9,-1; 9,-1), time: 30.0105s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,1.0161172314410782] (15,-1; 9,-1), time: 17.7267s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4723s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4312s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-0.5024508210733388,0.2863882435175699] (9,-1; 9,-1), time: 30.0299s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5645s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[-0.6443598615267797,0.3455777688374079] (9,-1; 9,-1), time: 30.0194s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.8004354748314675,0.024743381444889398] (9,-1; 9,-1), time: 30.0269s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5513s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_114, [-inf,inf]=>[1e-05,2.542320665743176] (15,-1; 9,-1), time: 15.4753s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4653s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[1e-05,2.6971727783585484] (15,-1; 9,-1), time: 15.5146s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4295s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,2.838988011141199] (15,-1; 9,-1), time: 15.4058s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-0.4709719671637458,0.6314102780369046] (9,-1; 9,-1), time: 30.0134s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,2.9393697351750636] (15,-1; 9,-1), time: 15.5188s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-0.8188482622953109,0.18999070636811238] (9,-1; 9,-1), time: 30.0136s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[1e-05,1.896318295931081] (15,-1; 9,-1), time: 15.4753s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,1.6297803262559325] (15,-1; 9,-1), time: 15.4660s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.5246967788024036,0.4226529872791835] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.5977111823658373,0.49465135005028016] (9,-1; 9,-1), time: 30.0115s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-0.2771430981062528,0.9805754139534709] (9,-1; 9,-1), time: 30.0117s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.10419992680195836,0.6543808693531007] (9,-1; 9,-1), time: 30.0128s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[1e-05,0.9455656327855766] (15,-1; 9,-1), time: 17.0417s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.9597045607109073,0.12288827547059178] (9,-1; 9,-1), time: 30.0126s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-0.2916059912381839,0.44920671447697036] (9,-1; 9,-1), time: 30.0122s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[1e-05,1.7436615467888235] (15,-1; 9,-1), time: 15.4507s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[1e-05,1.5332964902744526] (15,-1; 9,-1), time: 15.5206s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-0.3469473134851712,0.6762341549102621] (9,-1; 9,-1), time: 30.0128s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_124, [-inf,inf]=>[-0.049642890540186654,1.0665706328809452] (9,-1; 9,-1), time: 30.0102s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.8616064155396616,0.25276295760015394] (9,-1; 9,-1), time: 30.0116s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_136, [-inf,inf]=>[-0.46978166385401926,0.5457595861870765] (9,-1; 9,-1), time: 30.0216s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-0.09614282624142144,0.7759354209970307] (9,-1; 9,-1), time: 30.0116s, #vars: 1929, #constrs: 1316, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.33677778599034286,0.6199323756961461] (9,-1; 9,-1), time: 30.0183s, #vars: 1929, #constrs: 1316, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(139, -1), (93, -1), (170, -1), (152, -1), (191, -1), (168, -1), (67, -1), (33, -1), (123, -1), (32, -1), (195, -1), (133, -1), (18, -1), (106, -1), (159, -1), (110, -1), (26, -1), (122, -1), (141, -1), (112, -1), (70, 1), (69, -1), (101, -1), (183, -1), (175, 1), (196, -1), (113, -1), (162, -1), (197, -1), (7, -1), (108, -1), (117, -1), (98, -1), (21, -1), (2, -1), (166, -1), (80, -1), (64, -1), (103, -1), (124, 1), (86, -1), (37, -1), (92, -1), (173, -1), (53, -1), (189, -1), (99, -1), (105, -1), (55, 1), (59, 1), (193, 1), (75, -1), (171, 1), (96, 1), (129, -1), (91, 1), (194, -1), (180, -1), (178, -1), (65, 1), (6, -1), (76, 1), (16, -1), (111, 1), (43, -1), (146, 1), (120, -1), (78, 1), (121, 1), (36, 1), (187, -1), (135, 1), (68, -1), (51, -1), (35, 1), (27, -1), (176, 1), (8, -1), (172, -1), (58, 1), (134, 1), (157, -1), (144, 1), (46, -1)]
best_l after optimization: 3.479775905609131 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 5.9311137199401855
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.01712322, -1.73224068,  0.08577156,  0.03246689,  2.45177889,
          0.14814758, -1.80657434,  0.70867062,  1.57463217]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 144.34945678710938, ub improved 225.85565185546875, time 202.3971
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_135', 'lay10_11', 'lay10_154', 'lay10_137', 'lay10_164', 'lay10_90', 'lay10_189', 'lay10_57', 'lay10_157', 'lay10_33', 'lay10_82', 'lay10_198', 'lay10_49', 'lay10_138', 'lay10_146', 'lay10_151', 'lay10_25', 'lay10_192', 'lay10_91', 'lay10_143', 'lay10_186', 'lay10_18', 'lay10_141', 'lay10_31', 'lay10_14', 'lay10_51', 'lay10_199', 'lay10_62', 'lay10_24', 'lay10_167', 'lay10_195', 'lay10_153', 'lay10_73', 'lay10_114', 'lay10_19', 'lay10_180', 'lay10_94', 'lay10_70', 'lay10_109', 'lay10_29', 'lay10_179', 'lay10_37', 'lay10_140', 'lay10_87', 'lay10_30', 'lay10_7', 'lay10_80', 'lay10_42', 'lay10_185', 'lay10_188', 'lay10_81', 'lay10_78', 'lay10_161', 'lay10_163', 'lay10_17', 'lay10_93', 'lay10_43', 'lay10_172', 'lay10_107', 'lay10_47', 'lay10_131', 'lay10_184', 'lay10_130', 'lay10_194', 'lay10_142', 'lay10_175', 'lay10_124', 'lay10_168', 'lay10_191', 'lay10_4', 'lay10_144', 'lay10_52', 'lay10_152', 'lay10_99', 'lay10_86', 'lay10_20', 'lay10_39', 'lay10_26', 'lay10_98', 'lay10_58', 'lay10_35', 'lay10_41', 'lay10_16', 'lay10_55', 'lay10_139', 'lay10_6', 'lay10_149', 'lay10_110', 'lay10_118', 'lay10_115', 'lay10_67', 'lay10_126', 'lay10_0', 'lay10_54', 'lay10_156', 'lay10_116', 'lay10_8', 'lay10_197', 'lay10_72', 'lay10_64', 'lay10_9', 'lay10_165', 'lay10_187', 'lay10_13', 'lay10_166', 'lay10_104', 'lay10_61', 'lay10_120', 'lay10_125', 'lay10_10', 'lay10_176', 'lay10_50', 'lay10_69', 'lay10_48', 'lay10_174', 'lay10_133', 'lay10_36', 'lay10_65', 'lay10_12', 'lay10_46', 'lay10_150', 'lay10_129', 'lay10_1', 'lay10_127', 'lay10_3', 'lay10_162', 'lay10_177', 'lay10_53', 'lay10_159', 'lay10_27', 'lay10_71', 'lay10_97', 'lay10_190', 'lay10_196', 'lay10_134', 'lay10_158', 'lay10_2', 'lay10_23', 'lay10_160', 'lay10_169', 'lay10_40', 'lay10_117', 'lay10_155', 'lay10_108', 'lay10_173', 'lay10_45', 'lay10_105', 'lay10_79', 'lay10_183', 'lay10_32', 'lay10_102', 'lay10_60', 'lay10_34', 'lay10_136', 'lay10_103', 'lay10_128', 'lay10_74', 'lay10_83', 'lay10_59', 'lay10_44', 'lay10_181', 'lay10_148', 'lay10_66', 'lay10_96', 'lay10_76', 'lay10_123', 'lay10_22', 'lay10_121', 'lay10_84', 'lay10_145', 'lay10_88', 'lay10_92', 'lay10_85', 'lay10_28', 'lay10_95', 'lay10_119', 'lay10_56', 'lay10_68', 'lay10_101', 'lay10_89', 'lay10_170', 'lay10_38', 'lay10_193', 'lay10_132', 'lay10_182', 'lay10_106', 'lay10_5', 'lay10_75', 'lay10_15', 'lay10_113', 'lay10_100', 'lay10_147', 'lay10_111', 'lay10_171', 'lay10_77', 'lay10_63', 'lay10_178', 'lay10_122', 'lay10_112', 'lay10_21'] filter: 1.0
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8582s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8631s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9074s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9030s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9012s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8373s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7943s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.2320s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-1.8314385413759922,0.2552656389793607] (9,-1; 9,-1), time: 30.0163s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-1.656531295564695,0.07039928743284904] (9,-1; 9,-1), time: 30.0155s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-1.4458996605744967,0.23929980768175568] (9,-1; 9,-1), time: 30.0356s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-1.4987353625834945,0.16696059676703162] (9,-1; 9,-1), time: 30.0223s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.8421773877392422,1.1442356406392626] (9,-1; 9,-1), time: 30.0870s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-1.831703206107984,0.07520340111369248] (9,-1; 9,-1), time: 30.0913s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-0.7773246814418232,1.4329291899340824] (9,-1; 9,-1), time: 30.1014s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-1.6667068944584373,0.21410108587351406] (9,-1; 9,-1), time: 30.1375s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-1.0919601351693393,0.501309987987708] (9,-1; 9,-1), time: 30.1410s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8402s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-1.2982693491523891,0.3662847305139283] (9,-1; 9,-1), time: 30.0280s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-0.8053012220190667,0.6292727421683482] (9,-1; 9,-1), time: 30.0410s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-1.0636752497987276,0.6044488892309953] (9,-1; 9,-1), time: 30.1038s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.5282052879377316,1.5319146015784295] (9,-1; 9,-1), time: 30.0781s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9280s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8122s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.8853113096687883,0.7308175816854011] (9,-1; 9,-1), time: 30.0115s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7429s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7462s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8448s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8431s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5695s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-1.6283303475328337,0.22506028041686893] (9,-1; 9,-1), time: 30.0508s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8688s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4938s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8031s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2205s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.824564654696892,0.7141815687306903] (9,-1; 9,-1), time: 30.2591s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-1.2437815156328242,0.45227404518987374] (9,-1; 9,-1), time: 30.0134s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-1.143102697083703,0.39968664076351273] (9,-1; 9,-1), time: 30.1218s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-1.4901941198317838,0.10510359425027932] (9,-1; 9,-1), time: 30.0518s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-0.6723770906377061,0.9419381238085485] (9,-1; 9,-1), time: 30.0407s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.926254734203426,0.8613445254969453] (9,-1; 9,-1), time: 30.0975s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-1.0466969416491183,0.49829267637757485] (9,-1; 9,-1), time: 30.2129s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[1e-05,1.8551119320048954] (15,-1; 9,-1), time: 15.8488s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7596s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8171s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8215s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-0.05883521660494273,1.8670141370118727] (9,-1; 9,-1), time: 30.0551s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-1.457621837910873,0.1533816004900548] (9,-1; 9,-1), time: 30.1445s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-1.2812431930534578,0.190961150779733] (9,-1; 9,-1), time: 30.1224s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8091s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9363s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7707s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-0.22087633299167742,1.2913315325053274] (9,-1; 9,-1), time: 30.0536s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-1.357447990347322,0.2928092888336975] (9,-1; 9,-1), time: 30.0535s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9278s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-1.2732236558644743,0.34452069058163987] (9,-1; 9,-1), time: 30.0961s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-1.3987789038322216,0.3823978780139324] (9,-1; 9,-1), time: 30.0116s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8441s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-1.6359725028085814,0.23284749352213452] (9,-1; 9,-1), time: 30.1659s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8085s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-1.1318231408991353,0.37025195391025245] (9,-1; 9,-1), time: 30.1373s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.2746s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[1e-05,1.7534370870686462] (15,-1; 9,-1), time: 17.3290s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7175s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6723s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-1.187110686140021,0.750137496514037] (9,-1; 9,-1), time: 30.0288s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-1.2588480816274725,0.23780686793752454] (9,-1; 9,-1), time: 30.0306s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-1.5045716024912477,0.12705860428882798] (9,-1; 9,-1), time: 30.1921s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-0.6180977424822525,0.5799882110594609] (9,-1; 9,-1), time: 30.0215s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-1.3408594932729272,0.2621777105492252] (9,-1; 9,-1), time: 30.0423s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.7923728577256546,0.6741643231689001] (9,-1; 9,-1), time: 30.0900s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7703s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8629s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.920722412777071,0.6072423495147665] (9,-1; 9,-1), time: 30.0351s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7429s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8016s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-1.139134151594811,0.4023602758850783] (9,-1; 9,-1), time: 30.0250s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-0.3997850421319513,1.3036130722551036] (9,-1; 9,-1), time: 30.0735s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8217s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8339s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-1.303721866906463,0.2696022477728776] (9,-1; 9,-1), time: 30.0470s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8578s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-0.822333089754576,0.7614073084911819] (9,-1; 9,-1), time: 30.0812s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-1.3865355322445396,0.17826559104646825] (9,-1; 9,-1), time: 30.0289s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-0.0768877246430652,1.4700377138051925] (9,-1; 9,-1), time: 30.0427s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9053s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4137s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-1.1613124128028023,0.3367501892426952] (9,-1; 9,-1), time: 30.0153s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.9149s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8694s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-0.6206040711709632,1.0617288265584786] (9,-1; 9,-1), time: 30.0313s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8760s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[1e-05,2.8464402522179815] (15,-1; 9,-1), time: 15.8803s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[1e-05,2.07705755013548] (15,-1; 9,-1), time: 17.5039s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-1.3630427191035877,0.4356297174526248] (9,-1; 9,-1), time: 30.0522s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-1.3305575499351936,0.3084748820439095] (9,-1; 9,-1), time: 30.0726s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.9338618462746548,0.34021088802504557] (9,-1; 9,-1), time: 30.0281s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-0.40402740781808033,1.1180674642806108] (9,-1; 9,-1), time: 30.0949s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-1.2159881510135278,0.3110901900933931] (9,-1; 9,-1), time: 30.0938s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9731s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-1.0755323014237415,0.4188591026057737] (9,-1; 9,-1), time: 30.0169s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-1.3230348620089416,0.26599855180810117] (9,-1; 9,-1), time: 30.0349s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-1.4578616280298355,0.15092711885182203] (9,-1; 9,-1), time: 30.0560s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.6904531602138622,1.2437186912553255] (9,-1; 9,-1), time: 30.0342s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-0.8958222663085675,0.6324819823739222] (9,-1; 9,-1), time: 30.0436s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7705s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-1.0411139735492876,0.477993429957178] (9,-1; 9,-1), time: 30.0905s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9222s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-1.2687560037101429,0.10014677498151298] (9,-1; 9,-1), time: 30.0561s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-0.9166298835234417,0.40610737981517175] (9,-1; 9,-1), time: 30.0211s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8903s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8535s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-1.3713883591744709,0.022741926246870336] (9,-1; 9,-1), time: 30.0701s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.386533712255161] (15,-1; 9,-1), time: 15.7979s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.799171372783459,0.9301688187302266] (9,-1; 9,-1), time: 30.0464s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-1.3003888063650286,0.3892786713210868] (9,-1; 9,-1), time: 30.0478s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[1e-05,4.272726056058375] (15,-1; 9,-1), time: 15.7255s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-0.6330272062182348,1.0967573051904347] (9,-1; 9,-1), time: 30.1148s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[-1.8129220206043994,0.11341218513969065] (9,-1; 9,-1), time: 30.0759s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-0.8962569657932129,0.6447531867910063] (9,-1; 9,-1), time: 30.0127s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8483s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-0.9291274343630738,0.8611748819304333] (9,-1; 9,-1), time: 30.1688s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-1.5861434837252615,0.3038047385328416] (9,-1; 9,-1), time: 30.0345s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-0.01855658268929268,1.693265836006879] (9,-1; 9,-1), time: 30.0644s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.7343287271939496,0.7276732788053528] (9,-1; 9,-1), time: 30.0596s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-1.0320281694127693,0.5850466302020159] (9,-1; 9,-1), time: 30.1462s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[-1.3167413949492668,0.10758827296727444] (9,-1; 9,-1), time: 30.0507s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8139s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[-1.0755546848577688,0.291748981521401] (9,-1; 9,-1), time: 30.1015s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-1.4851087464302384,0.10530865207733983] (9,-1; 9,-1), time: 30.1606s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8342s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7697s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-0.3655968836900427,1.6223558672878304] (9,-1; 9,-1), time: 30.1402s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-1.2738208636110928,0.2356378325057308] (9,-1; 9,-1), time: 30.0811s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7935s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[1e-05,2.0082865092977324] (15,-1; 9,-1), time: 15.7368s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7799s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-1.4460114655547502,0.4133542413244082] (9,-1; 9,-1), time: 30.0485s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.28605780623056176,1.4861399334572052] (9,-1; 9,-1), time: 30.0504s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8956s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9163s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7447s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-0.16860368323703287,1.7767967717328055] (9,-1; 9,-1), time: 30.1377s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-1.5697193424901863,0.05013190870689376] (9,-1; 9,-1), time: 30.0687s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-0.354094075978137,0.9666608108894573] (9,-1; 9,-1), time: 30.1234s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-1.114219040562017,0.6387995283118343] (9,-1; 9,-1), time: 30.0270s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-1.0050472205367034,0.3436048995241808] (9,-1; 9,-1), time: 30.0427s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-1.2401916331150964,0.466423381612953] (9,-1; 9,-1), time: 30.0223s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8197s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[1e-05,2.119176149108034] (15,-1; 9,-1), time: 15.8451s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-0.8022595054463408,0.6146837871139701] (9,-1; 9,-1), time: 30.0287s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8371s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-0.8612386065995741,1.0595203403597595] (9,-1; 9,-1), time: 30.0284s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-1.2374336808327429,0.28747467344899774] (9,-1; 9,-1), time: 30.0489s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-1.6538816996592236,0.3532903587477992] (9,-1; 9,-1), time: 30.1216s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-1.5990809218750657,0.07289101064849128] (9,-1; 9,-1), time: 30.1094s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8064s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[1e-05,2.0839591497059704] (15,-1; 9,-1), time: 17.5072s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-1.325491134632882,0.07602110989766608] (9,-1; 9,-1), time: 30.0520s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,2.5988196856049064] (15,-1; 9,-1), time: 15.9121s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,2.1864655087397167] (15,-1; 9,-1), time: 15.8473s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8253s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[1e-05,3.232050740658143] (15,-1; 9,-1), time: 15.8675s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[-0.2974688630244863,1.5486982862607939] (9,-1; 9,-1), time: 30.0438s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.20444989012530337,1.4406956120117285] (9,-1; 9,-1), time: 30.1533s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-1.2048863123735156,0.2264103315349038] (9,-1; 9,-1), time: 30.0365s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[1e-05,2.640716523523673] (15,-1; 9,-1), time: 15.7684s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-1.104541556278777,0.4026838544826125] (9,-1; 9,-1), time: 30.0703s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-1.6878134645498688,0.133474284581874] (9,-1; 9,-1), time: 30.1724s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[1e-05,3.996450715575333] (15,-1; 9,-1), time: 15.7166s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[-0.4014942178691615,0.8951448650497509] (9,-1; 9,-1), time: 30.0144s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-1.38518960809613,0.08570082482349423] (9,-1; 9,-1), time: 30.0767s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-0.42179052460941535,1.0431664670728653] (9,-1; 9,-1), time: 30.0277s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-1.40942419573094,0.31659329424186106] (9,-1; 9,-1), time: 30.0398s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[1e-05,3.2627646150421503] (15,-1; 9,-1), time: 15.8424s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7972s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8193s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8073s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-1.2160164131247053,0.27644823568862] (9,-1; 9,-1), time: 30.0197s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8075s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9351s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8783s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6831s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.18048877986886763,1.41082669048999] (9,-1; 9,-1), time: 30.0677s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-1.4254140521681387,0.012918331537737637] (9,-1; 9,-1), time: 30.0159s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.222286683931241] (15,-1; 9,-1), time: 15.8627s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[-0.0026351661986454,1.6525921272219146] (9,-1; 9,-1), time: 30.0499s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-0.7626262458611435,0.5146015735101103] (9,-1; 9,-1), time: 30.4019s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-1.0183972291400685,0.3062634696715106] (9,-1; 9,-1), time: 30.0507s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.14805902524665646,2.0490665305659066] (9,-1; 9,-1), time: 30.0524s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[1e-05,1.6471682076996357] (15,-1; 9,-1), time: 19.0460s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[-0.7478723164161343,0.8144523289441288] (9,-1; 9,-1), time: 30.0237s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-1.0199349452924513,0.3932053800759277] (9,-1; 9,-1), time: 30.0151s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-0.7605123743105282,0.583840166035748] (9,-1; 9,-1), time: 30.1583s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-0.7876794834948583,0.8943493011171912] (9,-1; 9,-1), time: 30.0236s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-0.7704747570280094,1.0531170562889942] (9,-1; 9,-1), time: 30.0109s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-1.0740477093177612,0.3764817116476091] (9,-1; 9,-1), time: 30.0768s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[-0.9449610780006467,0.45798322890184084] (9,-1; 9,-1), time: 30.0982s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-1.012707366560531,0.3786773353352966] (9,-1; 9,-1), time: 30.0315s, #vars: 2293, #constrs: 1762, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-0.9980433714340802,0.3594894064821112] (9,-1; 9,-1), time: 30.0957s, #vars: 2293, #constrs: 1762, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(45, -1), (0, -1), (65, -1), (85, -1), (98, -1), (130, -1), (49, -1), (119, -1), (175, -1), (128, -1), (16, -1), (185, -1), (156, -1), (140, -1), (57, -1), (7, -1), (127, -1), (174, -1), (181, 1), (83, -1), (158, -1), (171, -1), (58, -1), (24, -1), (20, -1), (62, -1), (149, -1), (195, -1), (22, -1), (178, -1), (111, -1), (104, -1), (179, -1), (69, 1), (27, -1), (196, -1), (165, -1), (94, -1), (146, 1), (8, -1), (54, -1), (154, -1), (84, -1), (37, -1), (56, -1), (36, 1), (101, -1), (134, -1), (90, -1), (67, -1), (192, -1), (61, -1), (31, -1), (129, 1), (81, -1), (74, 1), (169, -1), (95, -1), (47, -1), (39, -1), (138, -1), (139, -1), (194, -1), (72, -1), (52, -1), (120, -1), (107, -1), (109, 1), (168, 1), (11, -1), (161, 1), (93, -1), (68, -1), (113, -1), (151, 1), (152, -1), (38, -1), (50, 1), (148, -1), (79, -1), (137, -1), (182, -1), (100, 1), (142, -1), (132, -1), (96, 1), (108, -1), (176, 1), (126, -1), (123, -1), (153, -1), (189, 1), (105, 1), (198, -1), (191, -1), (4, 1), (18, -1), (41, -1), (3, -1), (46, -1), (66, -1), (102, -1), (125, -1), (114, 1), (34, 1), (32, 1), (51, -1), (193, 1), (103, -1), (99, 1), (71, -1), (28, 1), (116, -1), (30, 1), (40, -1), (197, -1), (131, 1), (135, 1)]
best_l after optimization: 19.117271423339844 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 5.891600131988525
alpha-CROWN with intermediate bounds by MIP: tensor([[ 3.71950483,  0.16542983,  1.66195369,  1.80834436,  4.09895325,
          1.78903866, -0.02609348,  2.53214359,  3.36799717]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 743.320556640625, ub improved 895.1342163085938, time 249.7679
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=10, bias=True) 5 12 torch.Size([9, 1])
MIP finished with 633.3396689891815s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.64592933654785 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.0393526554107666
alpha-CROWN with intermediate bounds improved by MIP: tensor([[3.99538207, 0.57583332, 2.04895926, 2.20766282, 4.45928955, 2.17567420,
         0.39952278, 3.00985241, 3.77375269]], device='cuda:0') None
refined global lb: tensor([[3.99538207],
        [0.57583332],
        [2.04895926],
        [2.20766282],
        [4.45928955],
        [2.17567420],
        [0.39952278],
        [3.00985241],
        [3.77375269]], device='cuda:0') min: tensor(0.39952278, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 643.7228 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time [1] 643.7227628231049 max time 643.7227628231049
safe-incomplete-refine (total 1): [0]
