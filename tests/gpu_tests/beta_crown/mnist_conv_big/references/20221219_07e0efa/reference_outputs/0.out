Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_conv_big
  path: mnist_conv_big_diffai.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 269
  end: 270
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: MNIST_ERAN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.3
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 256
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 180
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 100
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 04:14:50 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=3136, out_features=512, bias=True)
  (10): ReLU()
  (11): Linear(in_features=512, out_features=512, bias=True)
  (12): ReLU()
  (13): Linear(in_features=512, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(2.82148671) tensor(-0.42421296) tensor(-0.02737886)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_conv_big]_start=269_end=270_iter=20_b=256_timeout=180_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 269 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.24342750012874603, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 8.76490593, -3.18759990,  0.45222577,  0.68635964, -3.74633026,
          0.58320642, -0.43346360,  0.00876650, -1.97434568,  0.94469059]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 5.29711199, -3.72526956, -0.76696026, -1.75820422, -0.26974210,
          -1.69959176, -1.84061980,  4.90684938, -4.45161104,  1.70312786],
         [ 5.29711199, -3.72526956, -0.76696026, -1.75820422, -0.26974210,
          -1.69959176, -1.84061980,  4.90684938, -4.45161104,  1.70312786]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.02238178, 6.06407213, 7.05531597, 5.56685400, 6.99670362,
          7.13773155, 0.39026260, 9.74872303, 3.59398413]]], device='cuda:0')
number of violation:  0
Attack finished in 2.6488 seconds.
PGD attack failed
Model prediction is: tensor([[ 8.76490593, -3.18759990,  0.45222577,  0.68635964, -3.74633026,
          0.58320642, -0.43346360,  0.00876650, -1.97434568,  0.94469059]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [630]; unstable size 630; total size 25088 (torch.Size([1, 32, 28, 28]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 95 total_size 6272 output_shape (32, 14, 14)
layer /input.4 start_node /input.16 using sparse-spec alpha with unstable size 59 total_size 12544 output_shape (64, 14, 14)
layer /input.4 start_node /input.24 using sparse-spec alpha with unstable size 49 total_size 3136 output_shape (64, 7, 7)
layer /input.4 start_node /input.28 using sparse-spec alpha with unstable size 19 total_size 512 output_shape torch.Size([512])
layer /input.4 start_node /input.32 using sparse-spec alpha with unstable size 31 total_size 512 output_shape torch.Size([512])
layer /input.4 start_node /35 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.12 using sparse-features alpha with shape [95]; unstable size 95; total size 6272 (torch.Size([1, 32, 14, 14]))
layer /input.12 start_node /input.16 using sparse-spec alpha with unstable size 59 total_size 12544 output_shape (64, 14, 14)
layer /input.12 start_node /input.24 using sparse-spec alpha with unstable size 49 total_size 3136 output_shape (64, 7, 7)
layer /input.12 start_node /input.28 using sparse-spec alpha with unstable size 19 total_size 512 output_shape torch.Size([512])
layer /input.12 start_node /input.32 using sparse-spec alpha with unstable size 31 total_size 512 output_shape torch.Size([512])
layer /input.12 start_node /35 using full alpha with unstable size None total_size 9 output_shape 9
layer /input.20 using sparse-features alpha with shape [59]; unstable size 59; total size 12544 (torch.Size([1, 64, 14, 14]))
layer /input.20 start_node /input.24 using sparse-spec alpha with unstable size 49 total_size 3136 output_shape (64, 7, 7)
layer /input.20 start_node /input.28 using sparse-spec alpha with unstable size 19 total_size 512 output_shape torch.Size([512])
layer /input.20 start_node /input.32 using sparse-spec alpha with unstable size 31 total_size 512 output_shape torch.Size([512])
layer /input.20 start_node /35 using full alpha with unstable size None total_size 9 output_shape 9
layer /22 using sparse-features alpha with shape [49]; unstable size 49; total size 3136 (torch.Size([1, 64, 7, 7]))
layer /22 start_node /input.28 using sparse-spec alpha with unstable size 19 total_size 512 output_shape torch.Size([512])
layer /22 start_node /input.32 using sparse-spec alpha with unstable size 31 total_size 512 output_shape torch.Size([512])
layer /22 start_node /35 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [19]; unstable size 19; total size 512 (torch.Size([1, 512]))
layer /32 start_node /input.32 using sparse-spec alpha with unstable size 31 total_size 512 output_shape torch.Size([512])
layer /32 start_node /35 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using sparse-features alpha with shape [31]; unstable size 31; total size 512 (torch.Size([1, 512]))
layer /34 start_node /35 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ -2.72006464, -11.98623943,  -3.83970523, -13.68736458,  -5.98987055,
          -8.12254715, -14.56175709,   0.87361073, -13.84293365]],
       device='cuda:0') None
best_l after optimization: 30.601608276367188 with beta sum per layer: []
alpha/beta optimization time: 12.51751446723938
initial alpha-CROWN bounds: tensor([[ 7.40849495,  1.84466696,  4.24795437,  2.29611278,  4.04913759,
          4.30756187, -1.10160303,  7.41941786,  0.12986389]], device='cuda:0')
Worst class: (+ rhs) -1.1016030311584473
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 32, 28, 28]), torch.Size([1, 9, 32, 14, 14]), torch.Size([1, 9, 64, 14, 14]), torch.Size([1, 9, 64, 7, 7]), torch.Size([1, 9, 512]), torch.Size([1, 9, 512])]

Properties batch 0, size 1
Remaining timeout: 160.9201409816742
##### Instance 0 first 10 spec matrices: [[[ 1. -1.  0.  0.  0.  0.  0.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 7.40849494934082.

Properties batch 1, size 1
Remaining timeout: 160.82854461669922
##### Instance 0 first 10 spec matrices: [[[ 1.  0. -1.  0.  0.  0.  0.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.8446669578552246.

Properties batch 2, size 1
Remaining timeout: 160.78875732421875
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0. -1.  0.  0.  0.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 4.247954368591309.

Properties batch 3, size 1
Remaining timeout: 160.7494945526123
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0.  0. -1.  0.  0.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.2961127758026123.

Properties batch 4, size 1
Remaining timeout: 160.71037793159485
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0.  0.  0. -1.  0.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 4.049137592315674.

Properties batch 5, size 1
Remaining timeout: 160.67118525505066
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0.  0.  0.  0. -1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 4.307561874389648.

Properties batch 6, size 1
Remaining timeout: 160.6320230960846
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0.  0.  0.  0.  0. -1.  0.  0.]]]
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-1.10160303]], device='cuda:0') need to verify.
Model prediction is: tensor([ 8.76490593, -3.18759990,  0.45222577,  0.68635964, -3.74633026,
         0.58320642, -0.43346360,  0.00876650, -1.97434568,  0.94469059],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /35 with alignment adjustment
setting alpha for layer /input.12 start_node /35 with alignment adjustment
setting alpha for layer /input.20 start_node /35 with alignment adjustment
setting alpha for layer /22 start_node /35 with alignment adjustment
setting alpha for layer /32 start_node /35 with alignment adjustment
setting alpha for layer /34 start_node /35 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 28, 28]), torch.Size([1, 1, 32, 14, 14]), torch.Size([1, 1, 64, 14, 14]), torch.Size([1, 1, 64, 7, 7]), torch.Size([1, 1, 512]), torch.Size([1, 1, 512])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.10160303]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/35']
Keeping slopes for these layers: ['/35']
layer 0 name BoundConv(name="/input") size torch.Size([25088]) unstable 630
layer 1 name BoundConv(name="/input.8") size torch.Size([6272]) unstable 87
layer 2 name BoundConv(name="/input.16") size torch.Size([12544]) unstable 57
layer 3 name BoundConv(name="/input.24") size torch.Size([3136]) unstable 43
layer 4 name BoundLinear(name="/input.28") size torch.Size([512]) unstable 10
layer 5 name BoundLinear(name="/input.32") size torch.Size([512]) unstable 10
-----------------
# of unstable neurons: 837
-----------------

batch:  torch.Size([1, 32, 28, 28]) pre split depth:  4
batch:  torch.Size([1, 32, 28, 28]) post split depth:  4
splitting decisions: 
split level 0: [4, 484] 
split level 1: [5, 102] 
split level 2: [3, 1800] 
split level 3: [3, 2094] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 15 / 16 = 0.9375
pruning-in-iteration extra time: 0.014864206314086914
Tensors transferred: pre=1.4668M lA=0.0458M alpha=0.0269M beta=0.0001M
This batch time : update_bounds func: 0.7816	 prepare: 0.0041	 bound: 0.7737	 transfer: 0.0028	 finalize: 0.0008
Accumulated time: update_bounds func: 0.7816	 prepare: 0.0041	 bound: 0.7737	 transfer: 0.0028	 finalize: 0.0008
batch bounding time:  0.781691312789917
Current worst splitting domains lb-rhs (depth):
-0.71832 (4), 
length of domains: 1
Total time: 1.2236	 pickout: 0.0015	 decision: 0.4345	 get_bound: 0.7844	 add_domain: 0.0033
Accumulated time:	 pickout: 0.0015	 decision: 0.4345	 get_bound: 0.7844	 add_domain: 0.0033
Current (lb-rhs): -0.7183163166046143
15 domains visited
Cumulative time: 1.5966322422027588

batch:  torch.Size([1, 32, 28, 28]) pre split depth:  4
batch:  torch.Size([1, 32, 28, 28]) post split depth:  4
splitting decisions: 
split level 0: [3, 2430] 
split level 1: [3, 2087] 
split level 2: [2, 4623] 
split level 3: [3, 1555] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 13 / 16 = 0.8125
pruning-in-iteration extra time: 0.015186071395874023
Tensors transferred: pre=1.4668M lA=0.1375M alpha=0.0269M beta=0.0001M
This batch time : update_bounds func: 0.3993	 prepare: 0.0044	 bound: 0.3913	 transfer: 0.0028	 finalize: 0.0007
Accumulated time: update_bounds func: 1.1809	 prepare: 0.0086	 bound: 1.1650	 transfer: 0.0056	 finalize: 0.0015
batch bounding time:  0.39937925338745117
Current worst splitting domains lb-rhs (depth):
-0.52293 (8), -0.07841 (8), -0.02840 (8), 
length of domains: 3
Total time: 0.4468	 pickout: 0.0013	 decision: 0.0397	 get_bound: 0.4020	 add_domain: 0.0037
Accumulated time:	 pickout: 0.0028	 decision: 0.4742	 get_bound: 1.1864	 add_domain: 0.0070
Current (lb-rhs): -0.5229328870773315
28 domains visited
Cumulative time: 2.0438332557678223

batch:  torch.Size([3, 32, 28, 28]) pre split depth:  3
batch:  torch.Size([3, 32, 28, 28]) post split depth:  3
splitting decisions: 
split level 0: [2, 4649] [3, 1803] [3, 1803] 
split level 1: [3, 1803] [2, 4651] [2, 4649] 
split level 2: [2, 4637] [2, 4637] [2, 4637] 
(24, 1, 28, 28) torch.Size([24, 1, 10]) torch.Size([24, 1])
pruning_in_iteration open status: True
ratio of positive domain = 21 / 24 = 0.875
pruning-in-iteration extra time: 0.015174388885498047
Tensors transferred: pre=2.2002M lA=0.1375M alpha=0.0404M beta=0.0003M
This batch time : update_bounds func: 0.3987	 prepare: 0.0054	 bound: 0.3889	 transfer: 0.0033	 finalize: 0.0010
Accumulated time: update_bounds func: 1.5796	 prepare: 0.0140	 bound: 1.5539	 transfer: 0.0089	 finalize: 0.0025
batch bounding time:  0.3987452983856201
Current worst splitting domains lb-rhs (depth):
-0.49428 (11), -0.11477 (11), -0.04866 (11), 
length of domains: 3
Total time: 0.4400	 pickout: 0.0017	 decision: 0.0321	 get_bound: 0.4020	 add_domain: 0.0043
Accumulated time:	 pickout: 0.0045	 decision: 0.5063	 get_bound: 1.5884	 add_domain: 0.0113
Current (lb-rhs): -0.4942803382873535
49 domains visited
Cumulative time: 2.48429012298584

batch:  torch.Size([3, 32, 28, 28]) pre split depth:  3
batch:  torch.Size([3, 32, 28, 28]) post split depth:  3
splitting decisions: 
split level 0: [2, 4651] [3, 2088] [2, 4651] 
split level 1: [2, 4652] [2, 4652] [2, 4652] 
split level 2: [3, 2437] [3, 2437] [3, 2437] 
(24, 1, 28, 28) torch.Size([24, 1, 10]) torch.Size([24, 1])
pruning_in_iteration open status: True
ratio of positive domain = 22 / 24 = 0.9166666666666666
pruning-in-iteration extra time: 0.01523590087890625
Tensors transferred: pre=2.2002M lA=0.0917M alpha=0.0404M beta=0.0003M
This batch time : update_bounds func: 0.4016	 prepare: 0.0051	 bound: 0.3904	 transfer: 0.0049	 finalize: 0.0011
Accumulated time: update_bounds func: 1.9812	 prepare: 0.0191	 bound: 1.9443	 transfer: 0.0138	 finalize: 0.0036
batch bounding time:  0.40163516998291016
Current worst splitting domains lb-rhs (depth):
-0.23426 (14), -0.21212 (14), 
length of domains: 2
Total time: 0.4410	 pickout: 0.0016	 decision: 0.0317	 get_bound: 0.4048	 add_domain: 0.0029
Accumulated time:	 pickout: 0.0061	 decision: 0.5380	 get_bound: 1.9932	 add_domain: 0.0142
Current (lb-rhs): -0.23426449298858643
71 domains visited
Cumulative time: 2.9256718158721924

batch:  torch.Size([2, 32, 28, 28]) pre split depth:  3
batch:  torch.Size([2, 32, 28, 28]) post split depth:  3
splitting decisions: 
split level 0: [3, 2088] [3, 2088] 
split level 1: [2, 4609] [2, 4609] 
split level 2: [3, 1780] [3, 1780] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 12 / 16 = 0.75
pruning-in-iteration extra time: 0.015194892883300781
Tensors transferred: pre=1.4668M lA=0.1833M alpha=0.0269M beta=0.0003M
This batch time : update_bounds func: 0.3929	 prepare: 0.0040	 bound: 0.3853	 transfer: 0.0028	 finalize: 0.0007
Accumulated time: update_bounds func: 2.3740	 prepare: 0.0231	 bound: 2.3296	 transfer: 0.0166	 finalize: 0.0043
batch bounding time:  0.3929624557495117
Current worst splitting domains lb-rhs (depth):
-0.20176 (17), -0.16638 (17), -0.05079 (17), -0.01490 (17), 
length of domains: 4
Total time: 0.4313	 pickout: 0.0013	 decision: 0.0315	 get_bound: 0.3954	 add_domain: 0.0031
Accumulated time:	 pickout: 0.0074	 decision: 0.5695	 get_bound: 2.3886	 add_domain: 0.0173
Current (lb-rhs): -0.20175743103027344
83 domains visited
Cumulative time: 3.3572962284088135

batch:  torch.Size([4, 32, 28, 28]) pre split depth:  2
batch:  torch.Size([4, 32, 28, 28]) post split depth:  2
splitting decisions: 
split level 0: [3, 2093] [3, 2093] [3, 2093] [3, 2093] 
split level 1: [2, 4638] [2, 4638] [2, 4638] [2, 4638] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 12 / 16 = 0.75
pruning-in-iteration extra time: 0.015441417694091797
Tensors transferred: pre=1.4668M lA=0.1833M alpha=0.0269M beta=0.0003M
This batch time : update_bounds func: 0.3985	 prepare: 0.0039	 bound: 0.3909	 transfer: 0.0029	 finalize: 0.0008
Accumulated time: update_bounds func: 2.7725	 prepare: 0.0270	 bound: 2.7205	 transfer: 0.0195	 finalize: 0.0051
batch bounding time:  0.39858222007751465
Current worst splitting domains lb-rhs (depth):
-0.20060 (19), -0.16298 (19), -0.04556 (19), -0.00671 (19), 
length of domains: 4
Total time: 0.4363	 pickout: 0.0013	 decision: 0.0318	 get_bound: 0.4004	 add_domain: 0.0027
Accumulated time:	 pickout: 0.0088	 decision: 0.6012	 get_bound: 2.7890	 add_domain: 0.0200
Current (lb-rhs): -0.20059919357299805
95 domains visited
Cumulative time: 3.7938690185546875

batch:  torch.Size([4, 32, 28, 28]) pre split depth:  2
batch:  torch.Size([4, 32, 28, 28]) post split depth:  2
splitting decisions: 
split level 0: [2, 4650] [2, 4650] [2, 4650] [2, 4650] 
split level 1: [3, 1556] [3, 1556] [3, 1556] [3, 1556] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 12 / 16 = 0.75
pruning-in-iteration extra time: 0.015301704406738281
Tensors transferred: pre=1.4668M lA=0.1833M alpha=0.0269M beta=0.0003M
This batch time : update_bounds func: 0.3942	 prepare: 0.0040	 bound: 0.3867	 transfer: 0.0028	 finalize: 0.0007
Accumulated time: update_bounds func: 3.1667	 prepare: 0.0310	 bound: 3.1072	 transfer: 0.0223	 finalize: 0.0058
batch bounding time:  0.39427685737609863
Current worst splitting domains lb-rhs (depth):
-0.05962 (21), -0.04738 (21), -0.01867 (21), -0.00604 (21), 
length of domains: 4
Total time: 0.4324	 pickout: 0.0014	 decision: 0.0318	 get_bound: 0.3961	 add_domain: 0.0031
Accumulated time:	 pickout: 0.0101	 decision: 0.6331	 get_bound: 3.1851	 add_domain: 0.0230
Current (lb-rhs): -0.059624671936035156
107 domains visited
Cumulative time: 4.226553916931152

batch:  torch.Size([4, 32, 28, 28]) pre split depth:  2
batch:  torch.Size([4, 32, 28, 28]) post split depth:  2
splitting decisions: 
split level 0: [2, 4654] [2, 4654] [2, 4528] [2, 4528] 
split level 1: [2, 4655] [2, 4655] [2, 4644] [2, 4644] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 14 / 16 = 0.875
pruning-in-iteration extra time: 0.015392065048217773
Tensors transferred: pre=1.4668M lA=0.0917M alpha=0.0269M beta=0.0004M
This batch time : update_bounds func: 0.3958	 prepare: 0.0040	 bound: 0.3883	 transfer: 0.0028	 finalize: 0.0007
Accumulated time: update_bounds func: 3.5625	 prepare: 0.0349	 bound: 3.4954	 transfer: 0.0250	 finalize: 0.0066
batch bounding time:  0.39588165283203125
Current worst splitting domains lb-rhs (depth):
-0.04462 (23), -0.00430 (23), 
length of domains: 2
Total time: 0.4329	 pickout: 0.0013	 decision: 0.0315	 get_bound: 0.3977	 add_domain: 0.0025
Accumulated time:	 pickout: 0.0114	 decision: 0.6646	 get_bound: 3.5828	 add_domain: 0.0255
Current (lb-rhs): -0.044617652893066406
121 domains visited
Cumulative time: 4.659820795059204

batch:  torch.Size([2, 32, 28, 28]) pre split depth:  3
batch:  torch.Size([2, 32, 28, 28]) post split depth:  3
splitting decisions: 
split level 0: [2, 4655] [2, 4655] 
split level 1: [3, 1554] [3, 1554] 
split level 2: [2, 4589] [2, 4589] 
(16, 1, 28, 28) torch.Size([16, 1, 10]) torch.Size([16, 1])

all verified at 7th iter
pruning_in_iteration open status: True
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.005331993103027344
Tensors transferred: pre=1.4668M lA=0.0458M alpha=0.0269M beta=0.0004M
This batch time : update_bounds func: 0.1540	 prepare: 0.0040	 bound: 0.1464	 transfer: 0.0027	 finalize: 0.0009
Accumulated time: update_bounds func: 3.7166	 prepare: 0.0389	 bound: 3.6419	 transfer: 0.0277	 finalize: 0.0075
batch bounding time:  0.15407609939575195
length of domains: 0
Total time: 0.1908	 pickout: 0.0013	 decision: 0.0313	 get_bound: 0.1565	 add_domain: 0.0016
Accumulated time:	 pickout: 0.0127	 decision: 0.6959	 get_bound: 3.7393	 add_domain: 0.0271/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:622: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp / std).reshape(1, -1, 1, 1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/branching_domains.py:970: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7)

No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
137 domains visited
Cumulative time: 4.851535081863403


Properties batch 7, size 1
Remaining timeout: 155.6270399093628
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0.  0.  0.  0.  0.  0. -1.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 7.419417858123779.

Properties batch 8, size 1
Remaining timeout: 155.55647015571594
##### Instance 0 first 10 spec matrices: [[[ 1.  0.  0.  0.  0.  0.  0.  0.  0. -1.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.1298638880252838.
Result: safe in 24.4831 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 24.4828727516863, max time: 24.48311758041382
mean time for verified SAFE instances (total 1): 24.48311758041382, max time: 24.48311758041382
safe (total 1), index: [0]
