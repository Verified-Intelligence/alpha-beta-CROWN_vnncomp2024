Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_6_100_nat.pth
  name: mnist_6_100
data:
  start: 92
  end: 93
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 22:13:57 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_100]_start=92_end=93_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 9, correct label 9, image norm 57.458824157714844, logits tensor([-1.4587, -1.0287, -1.5906, -0.6678,  2.9423, -0.2811, -3.1081,  0.8218,
        -0.1912,  5.8905], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-1.4587, -1.0287, -1.5906, -0.6678,  2.9423, -0.2811, -3.1081,  0.8218,
         -0.1912,  5.8905]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ -96.9072,  -98.1291, -114.0391,  -94.7165,  -66.9422,  -90.0648,
         -106.4082,  -79.9374,  -91.4539]], device='cuda:0') None
best_l after optimization: 448.9037780761719 with beta sum per layer: []
alpha/beta optimization time: 7.639060974121094
initial alpha-CROWN bounds: tensor([[-48.9596, -56.4948, -62.0561, -49.7028, -38.4875, -48.5576, -52.4280,
         -42.2694, -49.9481]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-62.0561, device='cuda:0', grad_fn=<MinBackward1>)
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 713.2629011154175]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_1', 'lay4_93', 'lay4_92', 'lay4_62', 'lay4_55', 'lay4_78', 'lay4_73', 'lay4_52', 'lay4_85', 'lay4_13', 'lay4_48', 'lay4_15', 'lay4_90', 'lay4_38', 'lay4_72', 'lay4_89', 'lay4_79', 'lay4_82', 'lay4_6', 'lay4_39', 'lay4_65', 'lay4_19', 'lay4_54', 'lay4_70', 'lay4_23', 'lay4_2', 'lay4_17', 'lay4_24', 'lay4_9', 'lay4_60', 'lay4_47', 'lay4_49', 'lay4_31', 'lay4_53', 'lay4_75', 'lay4_10', 'lay4_56', 'lay4_16', 'lay4_26', 'lay4_64', 'lay4_18', 'lay4_66', 'lay4_40', 'lay4_51', 'lay4_22', 'lay4_71', 'lay4_21', 'lay4_81', 'lay4_61', 'lay4_46', 'lay4_68', 'lay4_95', 'lay4_36', 'lay4_28', 'lay4_76', 'lay4_35', 'lay4_87', 'lay4_0', 'lay4_33', 'lay4_43', 'lay4_67', 'lay4_45', 'lay4_30', 'lay4_58', 'lay4_69', 'lay4_96', 'lay4_5', 'lay4_42', 'lay4_11', 'lay4_12', 'lay4_97', 'lay4_37', 'lay4_25', 'lay4_27', 'lay4_29', 'lay4_14', 'lay4_59', 'lay4_63', 'lay4_20', 'lay4_41', 'lay4_7', 'lay4_57', 'lay4_99', 'lay4_44', 'lay4_8', 'lay4_80', 'lay4_74', 'lay4_50', 'lay4_84', 'lay4_34', 'lay4_4', 'lay4_98', 'lay4_83', 'lay4_86', 'lay4_88', 'lay4_32', 'lay4_77', 'lay4_94'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_78, [-2.9245433807373047,0.42838454246520996]=>[-2.9245433807373047,-1e-05] (-1,-1; 15,-1), time: 0.8199s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_90, [-2.166368246078491,0.3445913791656494]=>[-2.166368246078491,-1e-05] (-1,-1; 15,-1), time: 1.0209s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_73, [-2.3816585540771484,0.4131926894187927]=>[-2.3816585540771484,-1e-05] (-1,-1; 15,-1), time: 1.4017s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_13, [-1.6509253978729248,0.383755087852478]=>[-1.6509253978729248,-1e-05] (-1,-1; 15,-1), time: 1.5092s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_82, [-1.4930784702301025,0.2806428074836731]=>[-1.4930784702301025,-1e-05] (-1,-1; 15,-1), time: 1.3868s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_72, [-1.3537691831588745,0.32411080598831177]=>[-1.3537691831588745,-1e-05] (-1,-1; 15,-1), time: 5.4339s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_89, [-1.6584142446517944,0.48504117131233215]=>[-1.1035668971710484,0.11913781390144888] (2,-1; 2,-1), time: 9.3241s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_85, [-1.8487536907196045,0.6869997978210449]=>[-1.0106792535628315,0.2557480711672696] (2,-1; 2,-1), time: 12.1319s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_65, [-1.2522838115692139,1.326895833015442]=>[-0.6772946655434267,0.6610401568249279] (2,-1; 2,-1), time: 10.7907s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_23, [-1.8268433809280396,0.12215876579284668]=>[-1.8268433809280396,-1e-05] (-1,-1; 15,-1), time: 0.5980s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_1, [-0.9926741719245911,1.0205763578414917]=>[-0.36072928052223985,0.6120351376744562] (2,-1; 2,-1), time: 14.0137s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_39, [-1.202023983001709,0.30090633034706116]=>[-0.7426296290705918,0.049739741742715816] (2,-1; 2,-1), time: 13.1062s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_6, [-1.407090663909912,0.4606030285358429]=>[-0.8238153038490399,0.08221492677536806] (2,-1; 2,-1), time: 13.5989s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_9, [-1.4553383588790894,0.20727235078811646]=>[-1.4553383588790894,-1e-05] (-1,-1; 15,-1), time: 0.7394s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_19, [-1.1238956451416016,1.15836763381958]=>[-0.4916164046100121,0.6684857566608532] (2,-1; 2,-1), time: 10.3098s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_47, [-1.8377596139907837,0.12332811951637268]=>[-1.8377596139907837,-1e-05] (-1,-1; 15,-1), time: 0.3814s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_49, [-1.5398149490356445,0.30121615529060364]=>[-1.5398149490356445,-1e-05] (-1,-1; 15,-1), time: 3.0184s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_62, [-1.2236543893814087,0.5300595164299011]=>[-0.7256393681778823,0.20282832260889935] (9,-1; 2,-1), time: 19.6370s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_38, [-1.3070745468139648,0.8010135889053345]=>[-0.6851143772253024,0.3899085077223016] (9,-1; 2,-1), time: 19.9846s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_15, [-1.441354513168335,0.9363733530044556]=>[-0.7736731539898554,0.316653696067178] (2,-1; 2,-1), time: 20.4279s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_52, [-1.236110806465149,0.5230515599250793]=>[-0.7721323407874958,0.17645646573248813] (9,-1; 2,-1), time: 20.4490s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_93, [-1.3942729234695435,0.6582008600234985]=>[-0.8719355943632416,0.17659759990656027] (9,-1; 2,-1), time: 21.2628s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_48, [-1.4144394397735596,0.9726200103759766]=>[-0.6993774197156056,0.4326700787300287] (9,-1; 2,-1), time: 21.4184s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_55, [-1.2177197933197021,0.9002471566200256]=>[-0.6827325153737999,0.31575324273453087] (2,-1; 2,-1), time: 22.2454s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_26, [-0.2042141556739807,1.8015105724334717]=>[1e-05,1.8015105724334717] (15,-1; -1,-1), time: 0.9661s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_92, [-1.5793464183807373,0.6182167530059814]=>[-1.084711627236907,0.016451492701439193] (2,-1; 9,-1), time: 23.9187s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_54, [-1.3098564147949219,0.34051671624183655]=>[-0.8182050732881938,0.0017689469712837086] (2,-1; 2,-1), time: 15.2519s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_79, [-1.440842628479004,0.8595795631408691]=>[-0.6655219493780639,0.3378694959584739] (2,-1; 2,-1), time: 24.7534s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_40, [-1.6831727027893066,0.4414435029029846]=>[-1.6831727027893066,-1e-05] (-1,-1; 15,-1), time: 3.0850s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_2, [-1.2801027297973633,0.8259685039520264]=>[-0.6633279331558105,0.39618603308349576] (2,-1; 2,-1), time: 14.1849s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_71, [-1.3191983699798584,0.10738733410835266]=>[-1.3191983699798584,-1e-05] (-1,-1; 15,-1), time: 0.5737s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_17, [-0.6650458574295044,1.2375891208648682]=>[-0.16790188179713675,0.7207264784419104] (2,-1; 2,-1), time: 16.1092s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_70, [-1.1609556674957275,0.9099360704421997]=>[-0.5710839475072118,0.4430593950457953] (9,-1; 2,-1), time: 20.0036s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_31, [-1.7144577503204346,0.9674686789512634]=>[-1.028889313766812,0.19985204642074483] (2,-1; 2,-1), time: 13.1879s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_18, [-1.253241777420044,0.7782489657402039]=>[-0.6883585023651995,0.38694007041887796] (2,-1; 2,-1), time: 10.9507s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_24, [-0.8112141489982605,0.9545695781707764]=>[-0.33914367986890265,0.6245761012899717] (9,-1; 2,-1), time: 19.0380s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_75, [-1.6850093603134155,0.6670295000076294]=>[-0.9468622520517082,0.30830153872552796] (2,-1; 2,-1), time: 14.8976s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_60, [-1.5043312311172485,0.6545275449752808]=>[-0.9124072839516729,0.1328359101126524] (2,-1; 2,-1), time: 19.5675s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_56, [-0.7246349453926086,1.0241296291351318]=>[-0.22040165426053235,0.7082731778584646] (2,-1; 2,-1), time: 15.8711s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_10, [-1.2468719482421875,0.7925846576690674]=>[-0.6297397421747836,0.4717285452905919] (9,-1; 2,-1), time: 16.4853s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_53, [-1.1223784685134888,1.057019591331482]=>[-0.47524935635765,0.631465019070097] (9,-1; 2,-1), time: 18.8898s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_64, [-1.2754732370376587,0.6927475333213806]=>[-0.7576924099486155,0.2567050407981151] (2,-1; 2,-1), time: 17.7044s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_66, [-1.0527276992797852,0.8164898157119751]=>[-0.5628326907834087,0.28821355335555215] (2,-1; 2,-1), time: 17.2179s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_16, [-0.6713591814041138,1.0897074937820435]=>[-0.3350635985881061,0.7059351523849485] (9,-1; 2,-1), time: 20.5075s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_35, [-0.4481666386127472,1.5708808898925781]=>[1e-05,1.5708808898925781] (15,-1; -1,-1), time: 5.7525s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_61, [-1.3348361253738403,1.6609736680984497]=>[-0.5107828387436656,0.9936718377365634] (2,-1; 2,-1), time: 12.3191s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_46, [-1.2784216403961182,0.616606593132019]=>[-0.7824358214245886,0.13232807903899385] (2,-1; 2,-1), time: 12.4907s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_51, [-0.8285268545150757,0.7694280743598938]=>[-0.38807380047257856,0.4518046182443886] (9,-1; 2,-1), time: 19.4775s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_22, [-1.1546001434326172,0.6449309587478638]=>[-0.6382988952878408,0.32604718492981255] (9,-1; 2,-1), time: 17.7436s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_30, [-0.3228881061077118,1.3968048095703125]=>[1e-05,1.3968048095703125] (15,-1; -1,-1), time: 1.1804s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_21, [-0.8838690519332886,1.3167126178741455]=>[-0.26650272574387956,0.7947441004651143] (2,-1; 2,-1), time: 17.5110s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_58, [-1.7860413789749146,0.3280564546585083]=>[-1.7860413789749146,-1e-05] (-1,-1; 15,-1), time: 1.3006s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_5, [-0.06438255310058594,2.396036386489868]=>[1e-05,2.396036386489868] (15,-1; -1,-1), time: 0.6492s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_68, [-1.284850835800171,0.5370268225669861]=>[-0.852204929001308,0.011137691575611983] (2,-1; 2,-1), time: 13.8400s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_45, [-1.2587270736694336,0.38163629174232483]=>[-1.2587270736694336,-0.004726592393400563] (-1,-1; 2,-1), time: 4.3964s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_76, [-0.4238852262496948,1.3076212406158447]=>[1e-05,1.3076212406158447] (15,-1; -1,-1), time: 13.5106s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_95, [-1.6859087944030762,0.7782111763954163]=>[-1.0082105314130185,0.18266596154785894] (2,-1; 2,-1), time: 16.6097s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_37, [-1.613213062286377,0.2561574876308441]=>[-1.613213062286377,-1e-05] (-1,-1; 15,-1), time: 1.0317s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_28, [-0.9937307834625244,0.994964063167572]=>[-0.4049943897878237,0.6217678013896403] (9,-1; 2,-1), time: 17.9293s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_36, [-0.9691137075424194,1.1266683340072632]=>[-0.42904666839078287,0.6137844745455842] (2,-1; 2,-1), time: 19.0894s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_81, [-1.4795607328414917,2.0219216346740723]=>[-0.7545206335583722,0.9924745686959194] (9,-1; 2,-1), time: 24.3193s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_43, [-1.2374169826507568,1.318977952003479]=>[-0.6398404833156358,0.6529730265424399] (2,-1; 2,-1), time: 12.7130s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_87, [-1.0635923147201538,1.0726611614227295]=>[-0.4179475725025054,0.8219801825640555] (9,-1; 2,-1), time: 16.6583s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_27, [-1.40687096118927,0.3819296658039093]=>[-1.40687096118927,-1e-05] (-1,-1; 15,-1), time: 6.2462s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_12, [-1.1977721452713013,0.5991491675376892]=>[-0.7623392685843232,0.17937618021598478] (2,-1; 2,-1), time: 11.1398s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_63, [-1.4805954694747925,0.39303794503211975]=>[-1.4805954694747925,-1e-05] (-1,-1; 15,-1), time: 6.1048s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_67, [-1.0339351892471313,0.662416398525238]=>[-0.6254596067491532,0.14844676039958837] (2,-1; 2,-1), time: 18.8786s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_25, [-0.7028490304946899,1.1740756034851074]=>[-0.2373159871150331,0.6503147740033659] (2,-1; 2,-1), time: 12.1700s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_44, [-1.7226343154907227,0.2437678575515747]=>[-1.7226343154907227,-1e-05] (-1,-1; 15,-1), time: 0.9547s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_42, [-1.4840319156646729,0.38035428524017334]=>[-1.1198610793052948,0.09863276448278491] (9,-1; 2,-1), time: 17.0433s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_96, [-0.7684459686279297,1.173264980316162]=>[-0.1564239201498327,0.824282066310664] (9,-1; 2,-1), time: 17.4713s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_97, [-1.0010193586349487,1.1502972841262817]=>[-0.3873277244580001,0.7501386920782054] (9,-1; 2,-1), time: 17.6733s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_33, [-1.313829779624939,0.8328121900558472]=>[-0.8238579672386017,0.20806343430967256] (9,-1; 2,-1), time: 25.5425s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_0, [-1.2319586277008057,0.5825994610786438]=>[-0.7383064662614042,0.11265913892104924] (9,-1; 2,-1), time: 27.1955s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_69, [-0.9846509695053101,1.167486548423767]=>[-0.4154740746165633,0.5656605243398156] (2,-1; 2,-1), time: 23.1350s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_20, [-1.627642035484314,0.39968255162239075]=>[-0.9958336724431088,0.04179984811675872] (2,-1; 2,-1), time: 13.9443s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_41, [-1.210571527481079,0.8804967403411865]=>[-0.674044705064967,0.3771649545323237] (2,-1; 2,-1), time: 12.2879s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_14, [-1.736951470375061,0.20540514588356018]=>[-1.1649031362800655,0.015996614913592805] (9,-1; 2,-1), time: 15.9335s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_8, [-0.5318707227706909,1.6623551845550537]=>[1e-05,1.6623551845550537] (15,-1; -1,-1), time: 7.8171s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_74, [-1.2741739749908447,0.662441611289978]=>[-0.8161913991829609,0.1578209573537501] (2,-1; 2,-1), time: 7.7773s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_29, [-1.1525465250015259,1.0820627212524414]=>[-0.49169683945502846,0.6625382137152691] (9,-1; 2,-1), time: 18.2575s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_88, [-1.863487720489502,0.02448102831840515]=>[-1.863487720489502,-1e-05] (-1,-1; 15,-1), time: 0.5137s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_77, [-2.5519347190856934,0.019095420837402344]=>[-2.5519347190856934,-1e-05] (-1,-1; 15,-1), time: 0.5134s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_11, [-1.1676923036575317,0.7623629570007324]=>[-0.6333605807458553,0.23916081614780244] (9,-1; 2,-1), time: 25.7900s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_4, [-0.6670444011688232,2.3500819206237793]=>[1e-05,2.3500819206237793] (15,-1; -1,-1), time: 5.6256s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_50, [-0.4599160850048065,1.575996994972229]=>[-0.028050662025314855,1.0220625347606156] (2,-1; 2,-1), time: 8.5115s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_59, [-1.3989834785461426,0.8863469958305359]=>[-0.7771623793061321,0.35749471604310273] (9,-1; 2,-1), time: 20.9270s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_7, [-0.8123523592948914,0.6163763403892517]=>[-0.44196012386170247,0.21385973699491845] (9,-1; 2,-1), time: 19.6307s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_32, [-1.264872431755066,1.0155000686645508]=>[-0.7625429458493574,0.4603406049618637] (2,-1; 2,-1), time: 7.5979s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_57, [-1.9808671474456787,0.5095034837722778]=>[-1.3659175628846991,0.09984001715555159] (9,-1; 2,-1), time: 18.9329s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_86, [-0.47522446513175964,1.1497160196304321]=>[1e-05,1.1497160196304321] (15,-1; -1,-1), time: 10.5732s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_83, [-1.4569051265716553,0.7230814695358276]=>[-1.0720458983247214,0.010026719918607875] (2,-1; 2,-1), time: 11.5910s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_34, [-0.6497950553894043,1.443885326385498]=>[1e-05,1.443885326385498] (15,-1; -1,-1), time: 14.9486s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_80, [-0.7710192203521729,1.030654788017273]=>[-0.4011296266906269,0.46491738639858743] (2,-1; 9,-1), time: 19.7133s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_94, [-0.5544048547744751,1.2601704597473145]=>[-0.1220407198145229,0.7973852745963044] (2,-1; 2,-1), time: 11.8228s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_98, [-1.1881639957427979,0.488098680973053]=>[-0.7234744254191232,0.0816830055381714] (2,-1; 2,-1), time: 14.4404s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_84, [-0.6428704261779785,1.1959822177886963]=>[-0.11780726761914,0.7196725687138099] (9,-1; 2,-1), time: 18.6021s, #vars: 1093, #constrs: 362, improved: True
Solving MIP for lay4_99, [-1.6544822454452515,0.646783709526062]=>[-0.973620614172042,0.06728333819969105] (2,-1; 9,-1), time: 25.4259s, #vars: 1093, #constrs: 362, improved: True
MIP improved 98 nodes out of 98 unstable nodes, lb improved 42.06317138671875, ub improved 38.068172454833984, time 87.7634
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_7', 'lay6_2', 'lay6_29', 'lay6_70', 'lay6_23', 'lay6_66', 'lay6_68', 'lay6_24', 'lay6_53', 'lay6_76', 'lay6_79', 'lay6_34', 'lay6_33', 'lay6_49', 'lay6_88', 'lay6_0', 'lay6_72', 'lay6_10', 'lay6_71', 'lay6_73', 'lay6_52', 'lay6_48', 'lay6_4', 'lay6_26', 'lay6_35', 'lay6_55', 'lay6_18', 'lay6_40', 'lay6_83', 'lay6_22', 'lay6_42', 'lay6_65', 'lay6_19', 'lay6_98', 'lay6_9', 'lay6_77', 'lay6_30', 'lay6_58', 'lay6_3', 'lay6_74', 'lay6_86', 'lay6_97', 'lay6_95', 'lay6_13', 'lay6_91', 'lay6_14', 'lay6_81', 'lay6_44', 'lay6_15', 'lay6_25', 'lay6_69', 'lay6_12', 'lay6_16', 'lay6_46', 'lay6_5', 'lay6_20', 'lay6_39', 'lay6_8', 'lay6_11', 'lay6_17', 'lay6_87', 'lay6_99', 'lay6_89', 'lay6_62', 'lay6_56', 'lay6_82', 'lay6_54', 'lay6_28', 'lay6_50', 'lay6_63', 'lay6_67', 'lay6_36', 'lay6_27', 'lay6_37', 'lay6_41', 'lay6_80', 'lay6_51', 'lay6_85', 'lay6_61', 'lay6_92', 'lay6_43', 'lay6_84', 'lay6_6', 'lay6_21', 'lay6_38', 'lay6_32', 'lay6_31', 'lay6_59', 'lay6_1', 'lay6_94', 'lay6_57', 'lay6_96', 'lay6_47', 'lay6_90', 'lay6_93', 'lay6_60', 'lay6_45', 'lay6_64', 'lay6_75', 'lay6_78'] filter: 1.0
Solving MIP for lay6_34, [-3.471799850463867,1.5351200103759766]=>[-3.471799850463867,-1e-05] (-1,-1; 15,-1), time: 1.9669s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_72, [-2.3820278644561768,0.767457127571106]=>[-2.3820278644561768,-1e-05] (-1,-1; 15,-1), time: 0.6757s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_70, [-2.1199045181274414,1.7810311317443848]=>[-0.9715868913484222,0.48374751509006036] (9,-1; 9,-1), time: 30.0063s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_7, [-2.732429265975952,1.2934858798980713]=>[-1.4156141457485687,0.35226140791213706] (9,-1; 9,-1), time: 30.0081s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_23, [-1.9220885038375854,1.3751068115234375]=>[-0.7096442676283425,0.5884247884004544] (9,-1; 9,-1), time: 30.0076s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_24, [-1.5612596273422241,1.1766419410705566]=>[-0.5955493844226314,0.33848735949125264] (9,-1; 9,-1), time: 30.0080s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_79, [-2.4689698219299316,2.4673051834106445]=>[-0.8592726999244975,1.1129941148703997] (9,-1; 9,-1), time: 30.0076s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_68, [-1.6669756174087524,1.6370314359664917]=>[-0.5473165804595983,0.5831642461896559] (9,-1; 9,-1), time: 30.0067s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_49, [-1.882115125656128,1.7914460897445679]=>[-0.8347910512137469,0.5813516293663159] (9,-1; 9,-1), time: 30.0070s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_29, [-1.380354404449463,1.7345794439315796]=>[-0.30282271862397986,0.8401623662491245] (9,-1; 9,-1), time: 30.0107s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_76, [-2.046466112136841,1.8678476810455322]=>[-0.9910650358398685,0.5157333905438417] (9,-1; 9,-1), time: 30.0123s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_53, [-2.753300905227661,1.9467853307724]=>[-1.359915992106584,0.5899444650152006] (9,-1; 9,-1), time: 30.0107s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_66, [-1.450700044631958,1.823547124862671]=>[-0.4947878818225991,0.7241999334741853] (9,-1; 9,-1), time: 30.0132s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_33, [-1.6619625091552734,1.7507610321044922]=>[-0.40372283326450464,0.7863798714790943] (9,-1; 9,-1), time: 30.0062s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_88, [-1.6989494562149048,1.9347518682479858]=>[-0.45442345390041194,0.9317602920094508] (9,-1; 9,-1), time: 30.0102s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_0, [-1.4459925889968872,2.4319262504577637]=>[-0.43739744889563964,1.046998636336783] (9,-1; 9,-1), time: 30.0143s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_2, [-2.2256808280944824,1.372963786125183]=>[-0.8473798256511983,0.3966016325804169] (9,-1; 9,-1), time: 30.0279s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_10, [-1.5848840475082397,1.9869462251663208]=>[-0.6742695229661331,0.7213946252496178] (9,-1; 9,-1), time: 30.0062s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_22, [-2.4038257598876953,0.9986588954925537]=>[-2.4038257598876953,-1e-05] (-1,-1; 15,-1), time: 10.9452s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_73, [-2.3708794116973877,1.517838478088379]=>[-1.2112458446958618,0.34475953198366494] (9,-1; 9,-1), time: 30.0119s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_83, [-1.7487127780914307,1.1404104232788086]=>[-0.8338680872778231,0.27333448868506743] (9,-1; 9,-1), time: 30.0066s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_71, [-2.3062198162078857,0.9877988696098328]=>[-1.0306759194533979,0.1826755047330429] (9,-1; 9,-1), time: 30.0175s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_42, [-1.763809084892273,1.5869094133377075]=>[-0.640474265945206,0.6160867713335784] (9,-1; 9,-1), time: 30.0057s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_48, [-2.2138099670410156,0.7737306356430054]=>[-1.0426313549936537,0.09804020961473285] (9,-1; 9,-1), time: 30.0118s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_40, [-1.7407585382461548,1.312767505645752]=>[-0.7540574762767305,0.44971541933194753] (9,-1; 9,-1), time: 30.0162s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_52, [-1.8651165962219238,1.0127596855163574]=>[-0.7909061973786328,0.2914946175262472] (9,-1; 9,-1), time: 30.0159s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_19, [-1.9832249879837036,1.0033302307128906]=>[-0.9421790570815729,0.18675781644194608] (9,-1; 9,-1), time: 30.0048s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_18, [-1.260036587715149,2.195106267929077]=>[-0.1053301576128629,1.1078728238377318] (9,-1; 9,-1), time: 30.0178s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_35, [-1.9714410305023193,1.6126326322555542]=>[-0.7618430864063936,0.5699975488689314] (9,-1; 9,-1), time: 30.0239s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_4, [-1.5423495769500732,2.244751453399658]=>[-0.20701070195687046,1.2713864352241442] (9,-1; 9,-1), time: 30.0235s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_65, [-2.183164119720459,1.865133285522461]=>[-0.8934084424035896,0.5905006056950921] (9,-1; 9,-1), time: 30.0210s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_55, [-1.9904218912124634,1.2212417125701904]=>[-0.9558859952226162,0.1824420680373763] (9,-1; 9,-1), time: 30.0361s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_26, [-2.0934951305389404,1.4172098636627197]=>[-0.671715294794131,0.5123789522427795] (9,-1; 9,-1), time: 30.0400s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_98, [-1.758141040802002,2.2542991638183594]=>[-0.3557333931497098,1.0626361983619177] (9,-1; 9,-1), time: 30.0288s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_9, [-1.8854148387908936,1.046398401260376]=>[-0.8502128389084092,0.1695062641463816] (9,-1; 9,-1), time: 30.0227s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_3, [-2.275282144546509,1.8397210836410522]=>[-0.9482107163435739,0.510390125373812] (9,-1; 9,-1), time: 30.0054s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_77, [-2.3911778926849365,0.787091851234436]=>[-1.162142809528549,0.0038663832407634354] (9,-1; 9,-1), time: 30.0157s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_58, [-2.300344467163086,2.0829761028289795]=>[-0.9518771162386083,0.7852986855681934] (9,-1; 9,-1), time: 30.0095s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_97, [-1.8300093412399292,1.7861452102661133]=>[-0.6132397182659989,0.67563428990646] (9,-1; 9,-1), time: 30.0069s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_13, [-1.7271556854248047,3.0452842712402344]=>[-0.10237917628938997,1.9144023704495514] (9,-1; 9,-1), time: 30.0063s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_86, [-1.6319572925567627,1.0566960573196411]=>[-0.519434788955626,0.3988971539198213] (9,-1; 9,-1), time: 30.0180s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_95, [-1.934594750404358,1.1406774520874023]=>[-0.756597604762424,0.3126979748557781] (9,-1; 9,-1), time: 30.0131s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_81, [-1.769043207168579,2.0893115997314453]=>[-0.5832317706894885,0.910583874725925] (9,-1; 9,-1), time: 30.0063s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_14, [-1.8571580648422241,2.6207425594329834]=>[-0.1859451369119048,1.6412702568933746] (9,-1; 9,-1), time: 30.0091s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_91, [-1.8381218910217285,1.845535397529602]=>[-0.47512620926965937,0.9534750265675795] (9,-1; 9,-1), time: 30.0228s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_44, [-2.086275815963745,1.786454677581787]=>[-0.9724333900297764,0.5110339604217634] (9,-1; 9,-1), time: 30.0057s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_74, [-1.6733198165893555,2.0906009674072266]=>[-0.5008142231014217,0.8576120120951044] (9,-1; 9,-1), time: 30.0345s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_15, [-1.853142261505127,1.2729123830795288]=>[-0.8576221071329628,0.30565728660982705] (9,-1; 9,-1), time: 30.0090s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_30, [-1.7903552055358887,3.0670676231384277]=>[-0.20994554289794737,1.7962388085652292] (9,-1; 9,-1), time: 30.0627s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_25, [-1.767490029335022,2.251796245574951]=>[-0.5709865094180415,0.9572909910321754] (9,-1; 9,-1), time: 30.0344s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_69, [-2.468446731567383,1.456761121749878]=>[-1.1626283578231527,0.3247186563566983] (9,-1; 9,-1), time: 30.0114s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_12, [-1.744402289390564,2.391188144683838]=>[-0.4984668626616904,1.0730374715050477] (9,-1; 9,-1), time: 30.0063s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_20, [-1.6645623445510864,1.752036452293396]=>[-0.4285446661812017,0.9097081553212439] (9,-1; 9,-1), time: 30.0060s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_5, [-1.3481618165969849,1.490246057510376]=>[-0.36788975649310496,0.5824245155318324] (9,-1; 9,-1), time: 30.0062s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_39, [-2.1266191005706787,1.7829585075378418]=>[-1.0290537057901339,0.3778626613307182] (9,-1; 9,-1), time: 30.0070s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_46, [-2.0236899852752686,1.7865201234817505]=>[-0.6772124928405335,0.7018597289644529] (9,-1; 9,-1), time: 30.0114s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_8, [-1.7846455574035645,2.605677604675293]=>[-0.2773520729774271,1.506877345189088] (9,-1; 9,-1), time: 30.0058s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_11, [-1.8790842294692993,2.700166702270508]=>[-0.2687933328708382,1.593623657979222] (9,-1; 9,-1), time: 30.0061s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_16, [-1.5907461643218994,1.743029236793518]=>[-0.32274780951822285,0.7631438148676178] (9,-1; 9,-1), time: 30.0220s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_62, [-1.5002368688583374,1.4203044176101685]=>[-0.3628875610352394,0.7261471024057268] (9,-1; 9,-1), time: 30.0067s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_99, [-1.9501397609710693,2.035090446472168]=>[-0.8868043010567804,0.7309464544082048] (9,-1; 9,-1), time: 30.0090s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_87, [-1.6015148162841797,1.9298900365829468]=>[-0.4951301744871986,0.8932008778349422] (9,-1; 9,-1), time: 30.0117s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_17, [-1.8465778827667236,1.7039034366607666]=>[-0.6185369325709908,0.6546450370039517] (9,-1; 9,-1), time: 30.0164s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_56, [-1.3450911045074463,3.108269691467285]=>[-0.22492586760630434,1.5764135092412959] (9,-1; 9,-1), time: 30.0074s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_89, [-1.7503873109817505,1.7728924751281738]=>[-0.6207127915677367,0.5964813164032969] (9,-1; 9,-1), time: 30.0384s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_82, [-2.0567736625671387,1.8311818838119507]=>[-0.6792466138185528,0.7214770325469922] (9,-1; 9,-1), time: 30.0059s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_54, [-2.2293667793273926,2.140983819961548]=>[-0.9139364337181003,0.8324088007651878] (9,-1; 9,-1), time: 30.0063s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_28, [-2.059152841567993,1.9593701362609863]=>[-0.9843082695220274,0.6476592241695206] (9,-1; 9,-1), time: 30.0079s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_50, [-2.020876169204712,2.17329478263855]=>[-0.6447318160668976,0.8481148949085346] (9,-1; 9,-1), time: 30.0088s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_63, [-2.5680408477783203,2.0463995933532715]=>[-1.3518389858867226,0.5824353811081129] (9,-1; 9,-1), time: 30.0097s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_36, [-1.5105478763580322,1.2559295892715454]=>[-0.5370064324031667,0.41551105947840683] (9,-1; 9,-1), time: 30.0053s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_67, [-1.6698583364486694,1.7527284622192383]=>[-0.5946624718779602,0.7332703624548502] (9,-1; 9,-1), time: 30.0092s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_27, [-2.194124460220337,1.6628624200820923]=>[-0.9503064170338484,0.507189103801148] (9,-1; 9,-1), time: 30.0082s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_41, [-1.714296817779541,1.7096604108810425]=>[-0.6881614208227717,0.5957544719284203] (9,-1; 9,-1), time: 30.0076s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_51, [-1.7546567916870117,2.554232120513916]=>[-0.4066207768628746,1.3483075675204788] (9,-1; 9,-1), time: 30.0092s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_61, [-2.0557174682617188,1.5765011310577393]=>[-0.8343340792767884,0.451366570939504] (9,-1; 9,-1), time: 30.0101s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_85, [-2.1884891986846924,1.1100274324417114]=>[-0.9393436862197382,0.2826472151139656] (9,-1; 9,-1), time: 30.0159s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_37, [-1.7627979516983032,2.2056796550750732]=>[-0.7691984162638448,0.8537754386634098] (9,-1; 9,-1), time: 30.0313s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_80, [-1.841792345046997,1.7079967260360718]=>[-0.5661996639741163,0.7791327870698713] (9,-1; 9,-1), time: 30.0293s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_92, [-1.3867934942245483,2.2429182529449463]=>[-0.18841110879872028,1.1873263759292618] (9,-1; 9,-1), time: 30.0079s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_43, [-1.5600260496139526,1.7814630270004272]=>[-0.6118657060101174,0.6309660967930502] (9,-1; 9,-1), time: 30.0069s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_84, [-1.8428289890289307,1.3295567035675049]=>[-0.9178953281143655,0.18289802663279706] (9,-1; 9,-1), time: 30.0092s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_6, [-1.8782447576522827,1.210028886795044]=>[-0.8233422737320869,0.24616189342689712] (9,-1; 9,-1), time: 30.0095s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_21, [-1.6029852628707886,1.2223262786865234]=>[-0.48411560664908054,0.5121869248528519] (9,-1; 9,-1), time: 30.0199s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_32, [-1.9157322645187378,1.5575790405273438]=>[-0.8100993528852213,0.4853816046338665] (9,-1; 9,-1), time: 30.0061s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_59, [-2.3845136165618896,2.4673142433166504]=>[-1.0319931676377454,0.8814232801547635] (9,-1; 9,-1), time: 30.0068s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_31, [-2.078442335128784,0.8577917218208313]=>[-0.9277051368281213,0.13217000503817122] (9,-1; 9,-1), time: 30.0067s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_1, [-1.7978825569152832,1.6461454629898071]=>[-0.6291580027851077,0.6822197857105841] (9,-1; 9,-1), time: 30.0078s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_38, [-1.7317895889282227,1.2385540008544922]=>[-0.6871457662086674,0.3953986834743234] (9,-1; 9,-1), time: 30.0142s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_94, [-2.3587353229522705,1.6490132808685303]=>[-1.1755032176264852,0.2660776475803511] (9,-1; 9,-1), time: 30.0118s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_57, [-2.0826363563537598,1.6721715927124023]=>[-1.0476998370312491,0.4050864390783296] (9,-1; 9,-1), time: 30.0067s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_96, [-1.131929636001587,1.4246329069137573]=>[-0.33635304106035063,0.6500077992984489] (9,-1; 9,-1), time: 30.0095s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_47, [-2.178098678588867,1.5715196132659912]=>[-0.8941337373369831,0.447670401332581] (9,-1; 9,-1), time: 30.0175s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_60, [-2.0660111904144287,1.3345099687576294]=>[-0.800479034196663,0.4878516940440866] (9,-1; 9,-1), time: 30.0071s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_45, [-1.6602314710617065,1.8452775478363037]=>[-0.5359467812920186,0.9323703011703072] (9,-1; 9,-1), time: 30.0150s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_90, [-2.1592113971710205,1.3621915578842163]=>[-1.0510346964699473,0.17975450550992] (9,-1; 9,-1), time: 30.0289s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_93, [-1.9769182205200195,2.583623170852661]=>[-0.7181284903493494,1.0448981336744252] (9,-1; 9,-1), time: 30.0239s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_64, [-2.2554373741149902,1.582875370979309]=>[-1.0999620890300597,0.34791246503962797] (9,-1; 9,-1), time: 30.0066s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_75, [-1.918480634689331,2.0696051120758057]=>[-0.8703392242017098,0.670925086697279] (9,-1; 9,-1), time: 30.0063s, #vars: 1331, #constrs: 669, improved: True
Solving MIP for lay6_78, [-1.3088332414627075,1.6585155725479126]=>[-0.4277244929517815,0.6037132370723507] (9,-1; 9,-1), time: 30.0056s, #vars: 1331, #constrs: 669, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
best_l after optimization: 210.71356201171875 with beta sum per layer: []
alpha/beta optimization time: 7.653384447097778
alpha-CROWN with intermediate bounds by MIP: tensor([[-22.9562, -26.0379, -29.0361, -23.6559, -18.2023, -22.9669, -23.8657,
         -20.0833, -23.9092]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 115.00366973876953, ub improved 108.28207397460938, time 210.7972
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_92', 'lay8_12', 'lay8_76', 'lay8_21', 'lay8_60', 'lay8_24', 'lay8_91', 'lay8_56', 'lay8_85', 'lay8_7', 'lay8_39', 'lay8_64', 'lay8_15', 'lay8_94', 'lay8_31', 'lay8_44', 'lay8_62', 'lay8_78', 'lay8_70', 'lay8_61', 'lay8_45', 'lay8_6', 'lay8_5', 'lay8_53', 'lay8_2', 'lay8_0', 'lay8_20', 'lay8_43', 'lay8_36', 'lay8_82', 'lay8_81', 'lay8_87', 'lay8_4', 'lay8_8', 'lay8_50', 'lay8_14', 'lay8_38', 'lay8_93', 'lay8_19', 'lay8_72', 'lay8_40', 'lay8_99', 'lay8_66', 'lay8_17', 'lay8_22', 'lay8_77', 'lay8_46', 'lay8_54', 'lay8_47', 'lay8_74', 'lay8_89', 'lay8_79', 'lay8_48', 'lay8_75', 'lay8_52', 'lay8_23', 'lay8_37', 'lay8_90', 'lay8_71', 'lay8_30', 'lay8_33', 'lay8_1', 'lay8_49', 'lay8_18', 'lay8_42', 'lay8_88', 'lay8_41', 'lay8_34', 'lay8_98', 'lay8_68', 'lay8_84', 'lay8_83', 'lay8_32', 'lay8_13', 'lay8_11', 'lay8_69', 'lay8_80', 'lay8_95', 'lay8_96', 'lay8_63', 'lay8_27', 'lay8_29', 'lay8_97', 'lay8_55', 'lay8_16', 'lay8_59', 'lay8_57', 'lay8_73', 'lay8_3', 'lay8_51', 'lay8_67', 'lay8_25', 'lay8_86', 'lay8_10', 'lay8_35', 'lay8_26', 'lay8_28', 'lay8_58', 'lay8_9', 'lay8_65'] filter: 1.0
Solving MIP for lay8_76, [-3.7963876724243164,4.87545919418335]=>[-1.075569847503977,1.464396059844512] (9,-1; 9,-1), time: 30.0051s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_92, [-4.037537097930908,4.025272369384766]=>[-1.2472580712202366,1.3752859590462592] (9,-1; 9,-1), time: 30.0063s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_60, [-4.2656707763671875,3.3791282176971436]=>[-1.4987310738578143,0.8964202437215579] (9,-1; 9,-1), time: 30.0069s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_64, [-3.649421453475952,3.759119987487793]=>[-1.4147296704164953,1.213637083142746] (9,-1; 9,-1), time: 30.0074s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_31, [-4.226320266723633,4.273463249206543]=>[-1.3235509418036708,1.1829117260443711] (9,-1; 9,-1), time: 30.0075s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_44, [-5.623680591583252,2.498814821243286]=>[-2.0460726673445215,0.38957538558819255] (9,-1; 9,-1), time: 30.0077s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_12, [-4.698114395141602,5.247636795043945]=>[-1.3719464451564818,2.1409711619170566] (9,-1; 9,-1), time: 30.0080s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_24, [-3.9663314819335938,2.950687885284424]=>[-1.240685506761725,0.7086085200858873] (9,-1; 9,-1), time: 30.0098s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_94, [-3.74487566947937,3.134758949279785]=>[-1.3746030241358786,0.7320158354048244] (9,-1; 9,-1), time: 30.0095s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_56, [-4.0653510093688965,3.301393985748291]=>[-1.2646923902337928,0.9659076998581625] (9,-1; 9,-1), time: 30.0098s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_15, [-3.9349493980407715,4.123721122741699]=>[-1.3941001531636232,1.1079575927356138] (9,-1; 9,-1), time: 30.0099s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_21, [-3.99107027053833,4.409756660461426]=>[-1.4135017716108633,0.9844607611077535] (9,-1; 9,-1), time: 30.0107s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_7, [-5.029947757720947,4.09777307510376]=>[-1.816240669587792,0.7806003323248004] (9,-1; 9,-1), time: 30.0219s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_85, [-4.019655704498291,3.619863510131836]=>[-1.3607539857059492,1.0281164717019955] (9,-1; 9,-1), time: 30.0129s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_91, [-4.149487495422363,3.1187005043029785]=>[-1.4073460238571,0.9565012044034513] (9,-1; 9,-1), time: 30.0141s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_39, [-3.7139410972595215,3.641328811645508]=>[-1.0978188444843249,1.1900880636252937] (9,-1; 9,-1), time: 30.0242s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_78, [-4.35233211517334,3.2275028228759766]=>[-1.3168097862429062,1.0610766730550996] (9,-1; 9,-1), time: 30.0049s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_62, [-5.1866888999938965,3.480111837387085]=>[-1.7806904882984393,1.009765125218014] (9,-1; 9,-1), time: 30.0171s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_70, [-4.448554992675781,3.2365705966949463]=>[-1.2498099392806408,1.0417425377176621] (9,-1; 9,-1), time: 30.0079s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_61, [-4.008998870849609,3.002370834350586]=>[-1.2855898316634071,0.7602765348832762] (9,-1; 9,-1), time: 30.0056s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_6, [-3.978562593460083,3.5521392822265625]=>[-1.2123686049549978,0.9358698228918478] (9,-1; 9,-1), time: 30.0061s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_5, [-3.5499393939971924,3.9954440593719482]=>[-1.0616300064375987,1.5915885335906428] (9,-1; 9,-1), time: 30.0068s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_53, [-3.658295154571533,3.400691032409668]=>[-1.1544527595178105,0.8909645604959325] (9,-1; 9,-1), time: 30.0087s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_2, [-3.287095069885254,3.403316020965576]=>[-1.0194670353816768,1.0458689668976489] (9,-1; 9,-1), time: 30.0054s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_20, [-3.4512124061584473,3.267709732055664]=>[-0.7472717162014879,1.3140329186710815] (9,-1; 9,-1), time: 30.0058s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_0, [-3.5982375144958496,3.0108823776245117]=>[-1.090641202408236,0.8392640278353006] (9,-1; 9,-1), time: 30.0108s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_36, [-4.279318809509277,3.013016939163208]=>[-1.3925018516380343,0.9030272561092443] (9,-1; 9,-1), time: 30.0063s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_43, [-3.5926108360290527,5.194594860076904]=>[-1.2460408899798192,1.7187314579390405] (9,-1; 9,-1), time: 30.0095s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_82, [-4.095314025878906,4.284992694854736]=>[-1.1345576335801737,1.4245579819190548] (9,-1; 9,-1), time: 30.0085s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_87, [-4.4857096672058105,4.7238874435424805]=>[-1.5453155433280739,1.267595391765675] (9,-1; 9,-1), time: 30.0058s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_81, [-4.42873477935791,5.432220935821533]=>[-1.123693456304601,2.1086807601594333] (9,-1; 9,-1), time: 30.0127s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_45, [-3.697096347808838,3.570321798324585]=>[-1.127413531630998,1.1566276069381818] (9,-1; 9,-1), time: 30.0638s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_4, [-4.196977138519287,2.9693143367767334]=>[-1.2600090788269012,0.8350856754620031] (9,-1; 9,-1), time: 30.0025s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_38, [-3.6477463245391846,5.192627906799316]=>[-1.2612532238375511,1.5229902688664716] (9,-1; 9,-1), time: 30.0039s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_14, [-3.5835320949554443,4.825437545776367]=>[-1.1892679173754124,1.546578500433308] (9,-1; 9,-1), time: 30.0044s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_50, [-3.343045234680176,4.0842742919921875]=>[-0.789111875188065,1.5163355806908108] (9,-1; 9,-1), time: 30.0052s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_72, [-4.688526630401611,6.677233695983887]=>[-0.6901808832385495,3.379639068012605] (9,-1; 9,-1), time: 30.0045s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_93, [-4.369606018066406,3.2232987880706787]=>[-1.5051217214237407,0.776249725539381] (9,-1; 9,-1), time: 30.0055s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_8, [-4.151634693145752,3.976827383041382]=>[-1.4871286478659678,1.0908205160772826] (9,-1; 9,-1), time: 30.0151s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_40, [-3.5005786418914795,2.9930837154388428]=>[-0.9375731370212166,1.038142653942722] (9,-1; 9,-1), time: 30.0040s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_99, [-4.829814910888672,2.317899227142334]=>[-1.6730865848559862,0.5296007532402462] (9,-1; 9,-1), time: 30.0063s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_17, [-3.470221519470215,4.330901622772217]=>[-1.0056679771123598,1.2671317075881223] (9,-1; 9,-1), time: 30.0073s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_66, [-4.118485450744629,4.064533710479736]=>[-1.4133811313422555,1.096922871210399] (9,-1; 9,-1), time: 30.0094s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_19, [-4.652542591094971,3.8942065238952637]=>[-1.2740069693324714,1.3120255077188554] (9,-1; 9,-1), time: 30.0169s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_22, [-3.6960601806640625,3.886373519897461]=>[-1.0903694770761811,1.2595382171648488] (9,-1; 9,-1), time: 30.0087s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_46, [-3.7105212211608887,3.5614089965820312]=>[-1.0790827899668667,1.2212665381936845] (9,-1; 9,-1), time: 30.0084s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_77, [-4.424620628356934,2.7739014625549316]=>[-1.3947329261233439,0.7286740029742096] (9,-1; 9,-1), time: 30.0126s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_54, [-3.7714083194732666,4.317284107208252]=>[-0.8636652151101112,1.7749854484760124] (9,-1; 9,-1), time: 30.0031s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_47, [-4.291471481323242,4.682644367218018]=>[-1.2975520512275796,1.5310288724597325] (9,-1; 9,-1), time: 30.0031s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_74, [-4.048783302307129,5.382417678833008]=>[-0.7244164237753951,2.3423256082938306] (9,-1; 9,-1), time: 30.0082s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_48, [-4.096423149108887,3.7268502712249756]=>[-1.022522303891865,1.4283042892807531] (9,-1; 9,-1), time: 30.0040s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_89, [-4.337640762329102,2.895293712615967]=>[-1.4674171426902902,0.8055475349609187] (9,-1; 9,-1), time: 30.0041s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_79, [-4.288087844848633,3.7364768981933594]=>[-1.3747055483546304,1.3007203245983545] (9,-1; 9,-1), time: 30.0048s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_75, [-3.611644744873047,4.101841449737549]=>[-1.0065872664240254,1.2531787791142015] (9,-1; 9,-1), time: 30.0039s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_37, [-3.27642560005188,4.168521881103516]=>[-0.9362206358149189,1.4722409586338094] (9,-1; 9,-1), time: 30.0025s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_23, [-3.7873690128326416,4.739121913909912]=>[-0.8342973012069814,2.174650942247659] (9,-1; 9,-1), time: 30.0068s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_71, [-4.085838317871094,3.0472915172576904]=>[-1.204161749670496,0.8553697830512486] (9,-1; 9,-1), time: 30.0030s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_90, [-4.838687896728516,4.8841071128845215]=>[-1.3718874159659444,1.6052850692218148] (9,-1; 9,-1), time: 30.0083s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_52, [-4.322310447692871,3.7777159214019775]=>[-1.016268259344331,1.5825498817905013] (9,-1; 9,-1), time: 30.0176s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_30, [-3.593698740005493,5.0329484939575195]=>[-0.673784008091837,1.8628917866098818] (9,-1; 9,-1), time: 30.0044s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_33, [-3.858567476272583,3.8422904014587402]=>[-1.0233420322162687,1.2074640598811366] (9,-1; 9,-1), time: 30.0084s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_1, [-3.7831084728240967,3.529160261154175]=>[-1.0928061848490334,1.2036803096985702] (9,-1; 9,-1), time: 30.0063s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_49, [-4.153530120849609,3.893998146057129]=>[-1.2556987371529387,1.2653461041395229] (9,-1; 9,-1), time: 30.0047s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_18, [-4.434802055358887,4.110219955444336]=>[-1.4373827565031811,1.3611657401754094] (9,-1; 9,-1), time: 30.0037s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_42, [-4.2467570304870605,3.9944984912872314]=>[-1.2287945079696925,1.5420416014852174] (9,-1; 9,-1), time: 30.0056s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_41, [-4.1879777908325195,2.7630393505096436]=>[-1.1706173157457693,0.7951474191531239] (9,-1; 9,-1), time: 30.0044s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_88, [-3.680602788925171,4.720585823059082]=>[-0.9888272313833388,2.0131064243930394] (9,-1; 9,-1), time: 30.0090s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_32, [-4.452001571655273,2.5147488117218018]=>[-1.5725273960998942,0.5371558506519679] (9,-1; 9,-1), time: 30.0019s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_98, [-4.1397624015808105,3.9611659049987793]=>[-1.2343200564029628,1.2251536706518202] (9,-1; 9,-1), time: 30.0040s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_83, [-4.305717945098877,3.320751428604126]=>[-1.2792626421741127,0.9978153154200722] (9,-1; 9,-1), time: 30.0044s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_34, [-3.2638039588928223,4.883222579956055]=>[-0.5247775968576212,1.9598271023137988] (9,-1; 9,-1), time: 30.0084s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_68, [-3.4293124675750732,4.2259345054626465]=>[-0.7458050428865878,1.6171417342624475] (9,-1; 9,-1), time: 30.0117s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_11, [-3.8416404724121094,3.44148588180542]=>[-1.0016823005001836,1.27370558089375] (9,-1; 9,-1), time: 30.0028s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_84, [-3.7131104469299316,3.470001697540283]=>[-1.0598821567034387,1.1538391188904] (9,-1; 9,-1), time: 30.0160s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_13, [-3.680755853652954,3.715467691421509]=>[-1.0081945358561455,1.3913902671540934] (9,-1; 9,-1), time: 30.0180s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_95, [-4.784765243530273,3.6049578189849854]=>[-1.6760485048072375,0.9326780859292966] (9,-1; 9,-1), time: 30.0059s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_80, [-4.371798992156982,4.135665416717529]=>[-1.410151920123758,1.6770803438684019] (9,-1; 9,-1), time: 30.0089s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_69, [-3.3707990646362305,3.6896281242370605]=>[-0.785685724854127,1.401631386436112] (9,-1; 9,-1), time: 30.0228s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_96, [-3.7801167964935303,3.846776008605957]=>[-1.0529386522950368,1.207723692834443] (9,-1; 9,-1), time: 30.0088s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_63, [-5.17304801940918,5.155372619628906]=>[-1.6105068858596354,1.6534768053472289] (9,-1; 9,-1), time: 30.0024s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_27, [-4.203871250152588,2.797764539718628]=>[-1.2467154508706095,0.7855914301172239] (9,-1; 9,-1), time: 30.0038s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_97, [-3.9765126705169678,2.2732348442077637]=>[-1.2357704615623821,0.6102467718614664] (9,-1; 9,-1), time: 30.0049s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_16, [-4.0541276931762695,3.480788469314575]=>[-1.2971344843549253,1.0264046245816203] (9,-1; 9,-1), time: 30.0036s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_29, [-3.800178289413452,4.123744964599609]=>[-1.052276669779991,1.414319913975724] (9,-1; 9,-1), time: 30.0058s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_59, [-3.5536599159240723,4.242608070373535]=>[-0.8963277270504857,1.413829487238642] (9,-1; 9,-1), time: 30.0046s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_57, [-4.93772029876709,5.0775675773620605]=>[-2.0253951060517856,1.5540615070549126] (9,-1; 9,-1), time: 30.0090s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_73, [-3.4643123149871826,4.539241313934326]=>[-0.9949937425553834,1.4656449622058942] (9,-1; 9,-1), time: 30.0107s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_3, [-3.605971574783325,4.838721752166748]=>[-0.9804116551335048,1.6269860186361085] (9,-1; 9,-1), time: 30.0040s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_67, [-4.885343551635742,4.30415153503418]=>[-1.6466505873918416,1.1285757021518974] (9,-1; 9,-1), time: 30.0033s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_51, [-4.4085798263549805,4.413876056671143]=>[-1.8063588694024932,1.2456911886014912] (9,-1; 9,-1), time: 30.0080s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_25, [-4.9008259773254395,2.9024574756622314]=>[-1.5198120545291316,0.6993258492075162] (9,-1; 9,-1), time: 30.0038s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_55, [-4.170027256011963,3.807417392730713]=>[-1.1353390038529672,1.530789613531291] (9,-1; 9,-1), time: 30.0350s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_10, [-4.099852561950684,3.8638086318969727]=>[-1.0234554697231646,1.5477259419093625] (9,-1; 9,-1), time: 30.0058s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_86, [-4.794701099395752,3.9772226810455322]=>[-1.857483174326897,0.9656142698124395] (9,-1; 9,-1), time: 30.0093s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_35, [-3.8631629943847656,3.976900815963745]=>[-1.1725082374659725,1.3717533334708294] (9,-1; 9,-1), time: 30.0091s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_26, [-4.409479141235352,5.305098533630371]=>[-1.3819505898059725,2.067055228130358] (9,-1; 9,-1), time: 30.0043s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_28, [-3.5615341663360596,4.021644115447998]=>[-0.957777784920528,1.174448213654898] (9,-1; 9,-1), time: 30.0021s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_58, [-4.411638259887695,3.99619197845459]=>[-1.4783085651057266,1.3267048533268324] (9,-1; 9,-1), time: 30.0077s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_9, [-4.712895393371582,2.871406078338623]=>[-1.7185256392787966,0.7505813704878971] (9,-1; 9,-1), time: 30.0040s, #vars: 1625, #constrs: 1060, improved: True
Solving MIP for lay8_65, [-3.713318109512329,3.9051671028137207]=>[-1.2123826330666505,1.1928518993882347] (9,-1; 9,-1), time: 30.0043s, #vars: 1625, #constrs: 1060, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
best_l after optimization: 157.4040069580078 with beta sum per layer: []
alpha/beta optimization time: 7.6733245849609375
alpha-CROWN with intermediate bounds by MIP: tensor([[-17.0661, -19.2278, -21.6380, -17.8631, -13.6822, -17.1796, -17.4628,
         -15.1464, -18.1380]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 284.4466552734375, ub improved 262.4425354003906, time 211.0052
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_2', 'lay10_34', 'lay10_72', 'lay10_3', 'lay10_45', 'lay10_86', 'lay10_92', 'lay10_49', 'lay10_11', 'lay10_36', 'lay10_23', 'lay10_81', 'lay10_57', 'lay10_50', 'lay10_99', 'lay10_37', 'lay10_14', 'lay10_84', 'lay10_26', 'lay10_79', 'lay10_70', 'lay10_0', 'lay10_21', 'lay10_52', 'lay10_43', 'lay10_96', 'lay10_51', 'lay10_7', 'lay10_67', 'lay10_1', 'lay10_5', 'lay10_28', 'lay10_54', 'lay10_41', 'lay10_69', 'lay10_13', 'lay10_8', 'lay10_97', 'lay10_22', 'lay10_89', 'lay10_48', 'lay10_32', 'lay10_94', 'lay10_42', 'lay10_17', 'lay10_15', 'lay10_55', 'lay10_33', 'lay10_85', 'lay10_61', 'lay10_66', 'lay10_39', 'lay10_47', 'lay10_38', 'lay10_91', 'lay10_24', 'lay10_95', 'lay10_87', 'lay10_46', 'lay10_58', 'lay10_60', 'lay10_90', 'lay10_4', 'lay10_19', 'lay10_78', 'lay10_88', 'lay10_64', 'lay10_44', 'lay10_71', 'lay10_10', 'lay10_93', 'lay10_12', 'lay10_9', 'lay10_74', 'lay10_31', 'lay10_40', 'lay10_65', 'lay10_25', 'lay10_20', 'lay10_62', 'lay10_63', 'lay10_68', 'lay10_27', 'lay10_30', 'lay10_82', 'lay10_73', 'lay10_80', 'lay10_76', 'lay10_75', 'lay10_59', 'lay10_83', 'lay10_18', 'lay10_16', 'lay10_6', 'lay10_77', 'lay10_56', 'lay10_35', 'lay10_98', 'lay10_53', 'lay10_29'] filter: 1.0
Solving MIP for lay10_92, [-9.27081298828125,9.033573150634766]=>[-2.9551881994351707,2.685793449288965] (9,-1; 9,-1), time: 30.0060s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_50, [-8.970430374145508,8.550972938537598]=>[-2.6944688802105916,2.5642973098781683] (9,-1; 9,-1), time: 30.0046s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_34, [-9.111178398132324,9.469298362731934]=>[-2.9387588192306544,2.6397778187562104] (9,-1; 9,-1), time: 30.0099s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_11, [-10.644396781921387,8.981964111328125]=>[-2.9368688372377045,2.9292937259367715] (9,-1; 9,-1), time: 30.0048s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_45, [-9.425381660461426,9.476637840270996]=>[-2.8573517920007516,2.875960359493168] (9,-1; 9,-1), time: 30.0053s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_57, [-8.73616886138916,8.394968032836914]=>[-2.6194249964984317,2.4813438116660365] (9,-1; 9,-1), time: 30.0062s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_99, [-9.817852973937988,7.63559103012085]=>[-3.1918823193950523,2.2809344473492676] (9,-1; 9,-1), time: 30.0070s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_3, [-10.936934471130371,9.74153995513916]=>[-3.6839558025177435,2.6004099632913245] (9,-1; 9,-1), time: 30.0124s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_86, [-9.346370697021484,8.216938972473145]=>[-3.2422490230925343,2.1122096170156923] (9,-1; 9,-1), time: 30.0097s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_37, [-8.812615394592285,7.286267280578613]=>[-2.847027944086429,2.092161515561472] (9,-1; 9,-1), time: 30.0114s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_72, [-9.455360412597656,9.733502388000488]=>[-3.053977767035525,2.8089230078926946] (9,-1; 9,-1), time: 30.0133s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_49, [-10.506906509399414,9.602896690368652]=>[-3.3396160901973957,2.7458287181555066] (9,-1; 9,-1), time: 30.0159s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_36, [-8.735161781311035,7.909079074859619]=>[-2.617823551793971,2.48696377269646] (9,-1; 9,-1), time: 30.0219s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_23, [-8.023832321166992,9.236096382141113]=>[-2.389505578694795,2.806758612719341] (9,-1; 9,-1), time: 30.0298s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_81, [-8.467095375061035,8.243915557861328]=>[-2.749740107241433,2.419687715761346] (9,-1; 9,-1), time: 30.0260s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_2, [-10.547443389892578,12.877593040466309]=>[-3.0272639869044538,4.131611244311024] (9,-1; 9,-1), time: 30.0610s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_26, [-10.01473331451416,9.084694862365723]=>[-3.1415282155630893,2.9076892073321843] (9,-1; 9,-1), time: 30.0031s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_14, [-9.116008758544922,8.230443000793457]=>[-2.624419277853988,2.669860682481162] (9,-1; 9,-1), time: 30.0073s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_79, [-8.484148979187012,9.691913604736328]=>[-2.602620150608213,3.0854574383400193] (9,-1; 9,-1), time: 30.0093s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_84, [-8.594921112060547,9.224427223205566]=>[-2.708270451637991,2.8981067524199697] (9,-1; 9,-1), time: 30.0096s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_70, [-9.1110200881958,4.909008502960205]=>[-2.764667872312742,1.2978138079435093] (9,-1; 9,-1), time: 30.0056s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_7, [-10.0038480758667,9.272916793823242]=>[-3.2720581097480617,2.528665336025379] (9,-1; 9,-1), time: 30.0040s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_96, [-8.21260929107666,7.880817413330078]=>[-2.560064240186869,2.227310410030256] (9,-1; 9,-1), time: 30.0084s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_43, [-8.394813537597656,9.582839965820312]=>[-2.3276661180692138,3.1897404343264135] (9,-1; 9,-1), time: 30.0132s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_0, [-9.274066925048828,6.60424280166626]=>[-2.7730294505808035,2.016362112826526] (9,-1; 9,-1), time: 30.0161s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_5, [-8.592161178588867,8.660469055175781]=>[-2.4656628462199626,2.735066169694672] (9,-1; 9,-1), time: 30.0056s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_51, [-10.362275123596191,5.2450852394104]=>[-3.220933784049521,1.4653997141600765] (9,-1; 9,-1), time: 30.0131s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_1, [-9.966447830200195,10.741218566894531]=>[-3.289847918306439,2.969859858835464] (9,-1; 9,-1), time: 30.0090s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_28, [-8.165042877197266,9.134086608886719]=>[-2.370715720341192,2.8876576987978093] (9,-1; 9,-1), time: 30.0054s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_67, [-8.047094345092773,7.780661582946777]=>[-2.5926792694379057,2.418943911298204] (9,-1; 9,-1), time: 30.0187s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_52, [-7.497565269470215,9.930468559265137]=>[-2.288692956293566,2.908104160240107] (9,-1; 9,-1), time: 30.0561s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_21, [-9.298954010009766,12.315299987792969]=>[-2.7557201968522906,3.938641321430496] (9,-1; 9,-1), time: 30.1382s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_41, [-9.4248685836792,7.705842971801758]=>[-2.8100380741073874,2.3893014924619758] (9,-1; 9,-1), time: 30.0063s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_69, [-9.895301818847656,9.430774688720703]=>[-3.008815240413474,2.8389744109306507] (9,-1; 9,-1), time: 30.0037s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_97, [-9.188335418701172,8.443292617797852]=>[-2.72774141998009,2.548088666400208] (9,-1; 9,-1), time: 30.0055s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_89, [-8.772249221801758,9.608551025390625]=>[-2.7337144216551796,3.0195125354426264] (9,-1; 9,-1), time: 30.0063s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_13, [-9.817740440368652,9.575021743774414]=>[-2.8475690653243344,3.2685583898279242] (9,-1; 9,-1), time: 30.0192s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_48, [-8.907383918762207,6.889197826385498]=>[-2.867540142209437,1.9094221867097965] (9,-1; 9,-1), time: 30.0099s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_22, [-8.055110931396484,8.346968650817871]=>[-2.5683348623053655,2.3486187447920437] (9,-1; 9,-1), time: 30.0112s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_32, [-9.587896347045898,6.855569362640381]=>[-2.9334957725994553,2.053048330353302] (9,-1; 9,-1), time: 30.0110s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_8, [-7.956963539123535,10.181707382202148]=>[-2.336251273730493,3.299163581976402] (9,-1; 9,-1), time: 30.0252s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_42, [-9.074726104736328,7.712098598480225]=>[-2.6650759666415498,2.440296262513521] (9,-1; 9,-1), time: 30.0072s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_17, [-9.392534255981445,9.393460273742676]=>[-2.845181013008282,2.844491398385223] (9,-1; 9,-1), time: 30.0046s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_15, [-8.908531188964844,6.577381610870361]=>[-2.647817457843405,2.1149920859279314] (9,-1; 9,-1), time: 30.0036s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_54, [-9.085427284240723,8.447561264038086]=>[-2.8817576861913565,2.536044906757474] (9,-1; 9,-1), time: 30.0970s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_94, [-7.767685890197754,8.828147888183594]=>[-2.4322490973170896,2.3966122614921397] (9,-1; 9,-1), time: 30.0779s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_33, [-9.226597785949707,10.562338829040527]=>[-2.354751673155395,3.9622188397407854] (9,-1; 9,-1), time: 30.0235s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_55, [-8.651993751525879,7.3992156982421875]=>[-2.6343822275260056,2.2860457016264224] (9,-1; 9,-1), time: 30.0916s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_85, [-9.699295043945312,6.970333576202393]=>[-2.9872767703388248,1.9813941777696182] (9,-1; 9,-1), time: 30.0078s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_61, [-9.780624389648438,9.426589965820312]=>[-2.735134301772017,3.110397637810508] (9,-1; 9,-1), time: 30.0053s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_91, [-11.584260940551758,10.794461250305176]=>[-2.7998512434671006,3.252021585223082] (9,-1; 9,-1), time: 30.0048s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_38, [-9.576175689697266,11.813085556030273]=>[-2.5602905243317733,4.129853124094489] (9,-1; 9,-1), time: 30.0069s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_66, [-12.178991317749023,13.232398986816406]=>[-2.108284851194485,4.124465313096158] (9,-1; 9,-1), time: 30.0219s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_95, [-9.21008014678955,9.17115306854248]=>[-2.649757837027638,3.301234333139389] (9,-1; 9,-1), time: 30.0068s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_24, [-12.958442687988281,13.815264701843262]=>[-2.949504191180156,3.882660825829383] (9,-1; 9,-1), time: 30.0128s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_39, [-9.275224685668945,7.0504560470581055]=>[-2.851343705887482,2.0665295954348926] (9,-1; 9,-1), time: 30.0273s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_87, [-9.163151741027832,7.271162033081055]=>[-2.6316742596984315,2.7253634780573166] (9,-1; 9,-1), time: 30.0144s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_47, [-7.53834342956543,9.040183067321777]=>[-2.072050220338922,3.2354859610102427] (9,-1; 9,-1), time: 30.0506s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_46, [-11.325557708740234,12.086267471313477]=>[-2.7688464931417984,3.114227399333496] (9,-1; 9,-1), time: 30.0318s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_90, [-11.646553039550781,11.655360221862793]=>[-2.7276378041371627,3.2951429961827015] (9,-1; 9,-1), time: 30.0042s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_60, [-9.783522605895996,5.507540702819824]=>[-2.980129319566958,1.6940370056386063] (9,-1; 9,-1), time: 30.0329s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_58, [-10.491039276123047,8.6494140625]=>[-2.8273269919302293,2.791702703922135] (9,-1; 9,-1), time: 30.0982s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_4, [-8.339377403259277,7.682666301727295]=>[-2.62624604922525,2.1704965521592654] (9,-1; 9,-1), time: 30.0223s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_19, [-7.926708221435547,8.050909042358398]=>[-2.1186687019200123,2.7064943295255084] (9,-1; 9,-1), time: 30.0236s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_64, [-9.554848670959473,7.541623115539551]=>[-2.7157820397506596,2.5604612643520053] (9,-1; 9,-1), time: 30.0053s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_78, [-9.137134552001953,10.288080215454102]=>[-2.316377651599294,3.4863470526805354] (9,-1; 9,-1), time: 30.0311s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_88, [-9.492827415466309,9.601909637451172]=>[-2.224237308493106,2.789914437863705] (9,-1; 9,-1), time: 30.0289s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_93, [-7.381178379058838,7.967397212982178]=>[-2.1210845298156946,2.697657432118754] (9,-1; 9,-1), time: 30.0081s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_12, [-8.70108699798584,9.983879089355469]=>[-2.5482463570382374,3.293124274991816] (9,-1; 9,-1), time: 30.0173s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_9, [-8.300907135009766,6.373150825500488]=>[-2.330480557328991,1.9594879576372177] (9,-1; 9,-1), time: 30.0116s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_74, [-9.619421005249023,7.646470546722412]=>[-2.875374959392375,2.4330030788710553] (9,-1; 9,-1), time: 30.0153s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_10, [-9.718581199645996,9.741151809692383]=>[-2.8738635950933205,3.037843317394361] (9,-1; 9,-1), time: 30.0422s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_31, [-10.321084022521973,13.530677795410156]=>[-2.2447476802194752,3.7354766212444455] (9,-1; 9,-1), time: 30.0136s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_40, [-9.306260108947754,9.101080894470215]=>[-2.6788692447943805,3.0362610639455916] (9,-1; 9,-1), time: 30.0035s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_65, [-9.158390045166016,7.737051963806152]=>[-2.829158956651975,2.301830142734111] (9,-1; 9,-1), time: 30.0043s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_71, [-9.778510093688965,9.939196586608887]=>[-2.804272992380184,3.436509727031276] (9,-1; 9,-1), time: 30.1285s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_44, [-12.912946701049805,8.79041862487793]=>[-3.597029018150445,2.8944769676591435] (9,-1; 9,-1), time: 30.1384s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_25, [-8.942306518554688,7.763796806335449]=>[-2.6808820114352567,2.378192097462604] (9,-1; 9,-1), time: 30.0123s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_20, [-10.40564250946045,6.838778972625732]=>[-3.10009890035835,2.102864630954704] (9,-1; 9,-1), time: 30.0151s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_62, [-8.525520324707031,8.157937049865723]=>[-2.5604438678593278,2.726054726220306] (9,-1; 9,-1), time: 30.0690s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_68, [-7.724833965301514,8.817906379699707]=>[-2.055351275389811,2.9445485902496147] (9,-1; 9,-1), time: 30.0056s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_63, [-8.109213829040527,8.667319297790527]=>[-2.155249282796677,2.892023807835993] (9,-1; 9,-1), time: 30.0048s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_27, [-8.299201011657715,8.506863594055176]=>[-2.302224160026016,2.8586000272079355] (9,-1; 9,-1), time: 30.0048s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_30, [-9.199103355407715,8.248263359069824]=>[-2.589215246203333,2.843822559987025] (9,-1; 9,-1), time: 30.0042s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_82, [-8.975403785705566,8.251984596252441]=>[-2.4818035318430702,2.763611663412721] (9,-1; 9,-1), time: 30.0043s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_73, [-7.479493141174316,6.6020827293396]=>[-2.1836474494905187,2.037256256806163] (9,-1; 9,-1), time: 30.0054s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_76, [-7.753927707672119,11.058523178100586]=>[-2.2164030174948404,3.648370401403327] (9,-1; 9,-1), time: 30.0083s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_80, [-9.124979972839355,7.748664379119873]=>[-2.645490607857242,1.7995484488641829] (9,-1; 9,-1), time: 30.0189s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_59, [-9.66741943359375,5.637358665466309]=>[-2.8856862838888464,1.6418871585679495] (9,-1; 9,-1), time: 30.0048s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_75, [-8.725064277648926,8.486213684082031]=>[-2.481651137524074,2.758449905357354] (9,-1; 9,-1), time: 30.0188s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_6, [-8.69504165649414,10.115861892700195]=>[-2.51873496728047,3.156846107506539] (9,-1; 9,-1), time: 30.0038s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_16, [-8.506958961486816,6.578390598297119]=>[-2.504087776383986,1.865792413353277] (9,-1; 9,-1), time: 30.0099s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_83, [-9.509289741516113,9.671027183532715]=>[-2.960243037053475,2.9460311052615262] (9,-1; 9,-1), time: 30.0992s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_77, [-9.064764022827148,7.336799144744873]=>[-2.745615545525871,2.188751188196485] (9,-1; 9,-1), time: 30.0103s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_18, [-8.272005081176758,9.122872352600098]=>[-2.366948714726944,2.839384768398712] (9,-1; 9,-1), time: 30.0956s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_56, [-8.13243293762207,9.604607582092285]=>[-2.429719028735938,2.9070847989267317] (9,-1; 9,-1), time: 30.0598s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_98, [-10.612064361572266,6.313739776611328]=>[-3.124858379216931,1.843026198476753] (9,-1; 9,-1), time: 30.0032s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_35, [-8.109673500061035,6.797460556030273]=>[-2.4487086238294165,2.043085925706809] (9,-1; 9,-1), time: 30.0131s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_29, [-8.561450958251953,8.583449363708496]=>[-2.4453650401231384,2.7403490471213368] (9,-1; 9,-1), time: 30.0109s, #vars: 1925, #constrs: 1460, improved: True
Solving MIP for lay10_53, [-9.216662406921387,10.293498039245605]=>[-2.8052881654601487,3.1063422009193453] (9,-1; 9,-1), time: 30.0750s, #vars: 1925, #constrs: 1460, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
best_l after optimization: 140.97132873535156 with beta sum per layer: []
alpha/beta optimization time: 6.980138301849365
alpha-CROWN with intermediate bounds by MIP: tensor([[-15.2694, -17.1488, -19.3416, -16.0578, -12.2714, -15.4313, -15.5115,
         -13.6057, -16.3339]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 653.6904296875, ub improved 606.96142578125, time 210.9353
maximum relu layer improved by MIP so far 4
MIP finished with 722.1501379013062s
Run final alpha-CROWN after MIP solving on layer 10 and relu idx 4
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: 136.6270294189453 with beta sum per layer: []
alpha/beta optimization time: 5.337398529052734
alpha-CROWN with intermediate bounds improved by MIP: tensor([[-14.7901, -16.6694, -18.7380, -15.5688, -11.8941, -14.9155, -14.9792,
         -13.1939, -15.8781]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[-14.7901, -16.6694, -18.7380, -15.5688, -11.8941, -14.9155, -14.9792,
         -13.1939, -15.8781,   0.0000]], device='cuda:0') min: tensor(-18.7380, device='cuda:0')
time threshold left for bab: 164.0567169189453
##### [0:92] Tested against 2 ######
Model prediction is: tensor([[-1.4587, -1.0287, -1.5906, -0.6678,  2.9423, -0.2811, -3.1081,  0.8218,
         -0.1912,  5.8905]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: 18.742488861083984 with beta sum per layer: []
alpha/beta optimization time: 2.1746084690093994
alpha-CROWN with fixed intermediate bounds: tensor([[-18.7425]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-18.742488861083984
layer 0 size torch.Size([100]) unstable 54
layer 1 size torch.Size([100]) unstable 69
layer 2 size torch.Size([100]) unstable 97
layer 3 size torch.Size([100]) unstable 100
layer 4 size torch.Size([100]) unstable 100
-----------------
# of unstable neurons: 420
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [4, 21] 
split level 1: [4, 1] 
split level 2: [4, 72] 
split level 3: [4, 23] 
split level 4: [4, 8] 
split level 5: [4, 11] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: 869.78271484375 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 59.24964141845703]
alpha/beta optimization time: 0.3544738292694092
This batch time : update_bounds func: 0.3707	 prepare: 0.0073	 bound: 0.3548	 transfer: 0.0007	 finalize: 0.0075
Accumulated time: update_bounds func: 0.3707	 prepare: 0.0073	 bound: 0.3548	 transfer: 0.0007	 finalize: 0.0075
batch bounding time:  0.3708763122558594
Current worst splitting domains [lb, ub] (depth):
[-16.72309,   inf] (7), [-16.58788,   inf] (7), [-15.75775,   inf] (7), [-15.75247,   inf] (7), [-15.41776,   inf] (7), [-15.30406,   inf] (7), [-15.22874,   inf] (7), [-15.18434,   inf] (7), [-14.90086,   inf] (7), [-14.87474,   inf] (7), [-14.82330,   inf] (7), [-14.69888,   inf] (7), [-14.57483,   inf] (7), [-14.52741,   inf] (7), [-14.42904,   inf] (7), [-14.36428,   inf] (7), [-14.25883,   inf] (7), [-14.10711,   inf] (7), [-14.09514,   inf] (7), [-14.08280,   inf] (7), 
length of domains: 64
Total time: 0.4332	 pickout: 0.0011	 decision: 0.0474	 get_bound: 0.3815	 add_domain: 0.0033
Current lb:-16.72308921813965
64 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.1221413612365723

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 100]) pre split depth:  1
batch:  torch.Size([64, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 57] [3, 57] [4, 53] [4, 53] [4, 53] [3, 57] [4, 53] [3, 57] [4, 53] [4, 53] 
regular batch size: 2*64, diving batch size 1*0
best_l after optimization: 1651.302978515625 with beta sum per layer: [0.0, 0.0, 0.0, 0.9319472908973694, 146.78848266601562]
alpha/beta optimization time: 0.3696482181549072
This batch time : update_bounds func: 0.4001	 prepare: 0.0155	 bound: 0.3701	 transfer: 0.0013	 finalize: 0.0129
Accumulated time: update_bounds func: 0.7708	 prepare: 0.0228	 bound: 0.7249	 transfer: 0.0013	 finalize: 0.0205
batch bounding time:  0.4004971981048584
Current worst splitting domains [lb, ub] (depth):
[-16.49599,   inf] (9), [-16.34753,   inf] (9), [-15.83931,   inf] (9), [-15.57536,   inf] (9), [-15.29699,   inf] (9), [-15.28668,   inf] (9), [-15.03876,   inf] (9), [-15.03325,   inf] (9), [-14.89262,   inf] (9), [-14.86455,   inf] (9), [-14.76528,   inf] (9), [-14.75501,   inf] (9), [-14.55555,   inf] (9), [-14.49426,   inf] (9), [-14.35999,   inf] (9), [-14.35517,   inf] (9), [-14.33884,   inf] (9), [-14.21906,   inf] (9), [-14.20693,   inf] (9), [-14.18266,   inf] (9), 
length of domains: 128
Total time: 0.4546	 pickout: 0.0102	 decision: 0.0362	 get_bound: 0.4007	 add_domain: 0.0074
Current lb:-16.49599266052246
192 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.5785648822784424

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([128, 100]) pre split depth:  1
batch:  torch.Size([128, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 53] [4, 53] [4, 86] [4, 53] [4, 79] [4, 79] [4, 79] [4, 79] [4, 53] [4, 79] 
regular batch size: 2*128, diving batch size 1*0
best_l after optimization: 3150.46044921875 with beta sum per layer: [0.0, 0.0, 0.0, 3.050471782684326, 346.20953369140625]
alpha/beta optimization time: 0.37313413619995117
This batch time : update_bounds func: 0.4388	 prepare: 0.0380	 bound: 0.3737	 transfer: 0.0017	 finalize: 0.0249
Accumulated time: update_bounds func: 1.2095	 prepare: 0.0608	 bound: 1.0986	 transfer: 0.0017	 finalize: 0.0454
batch bounding time:  0.4391977787017822
Current worst splitting domains [lb, ub] (depth):
[-16.11810,   inf] (11), [-15.99643,   inf] (11), [-15.76472,   inf] (11), [-15.45480,   inf] (11), [-15.32123,   inf] (11), [-15.04942,   inf] (11), [-14.99410,   inf] (11), [-14.98102,   inf] (11), [-14.97782,   inf] (11), [-14.84766,   inf] (11), [-14.72004,   inf] (11), [-14.71608,   inf] (11), [-14.50023,   inf] (11), [-14.42783,   inf] (11), [-14.37455,   inf] (11), [-14.31632,   inf] (11), [-14.21386,   inf] (11), [-14.20714,   inf] (11), [-14.20475,   inf] (11), [-14.13938,   inf] (11), 
length of domains: 256
Total time: 0.5240	 pickout: 0.0200	 decision: 0.0488	 get_bound: 0.4396	 add_domain: 0.0156
Current lb:-16.118101119995117
448 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 4.105391025543213

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([256, 100]) pre split depth:  1
batch:  torch.Size([256, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 79] [4, 79] [4, 79] [4, 86] [4, 79] [4, 79] [3, 57] [4, 79] [3, 57] [4, 86] 
regular batch size: 2*256, diving batch size 1*0
best_l after optimization: 6015.01904296875 with beta sum per layer: [0.0, 0.0, 0.0, 8.599008560180664, 769.081298828125]
alpha/beta optimization time: 0.34942102432250977
This batch time : update_bounds func: 0.4618	 prepare: 0.0587	 bound: 0.3499	 transfer: 0.0024	 finalize: 0.0496
Accumulated time: update_bounds func: 1.6714	 prepare: 0.1195	 bound: 1.4484	 transfer: 0.0024	 finalize: 0.0950
batch bounding time:  0.4624199867248535
Current worst splitting domains [lb, ub] (depth):
[-15.80416,   inf] (13), [-15.68782,   inf] (13), [-15.42521,   inf] (13), [-15.17172,   inf] (13), [-15.14263,   inf] (13), [-15.06263,   inf] (13), [-14.94312,   inf] (13), [-14.81146,   inf] (13), [-14.78485,   inf] (13), [-14.76917,   inf] (13), [-14.67337,   inf] (13), [-14.66329,   inf] (13), [-14.57808,   inf] (13), [-14.43017,   inf] (13), [-14.40566,   inf] (13), [-14.29880,   inf] (13), [-14.29159,   inf] (13), [-14.26340,   inf] (13), [-14.25849,   inf] (13), [-14.18692,   inf] (13), 
length of domains: 512
Total time: 0.6073	 pickout: 0.0392	 decision: 0.0748	 get_bound: 0.4632	 add_domain: 0.0302
Current lb:-15.804159164428711
960 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 4.7184624671936035

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([512, 100]) pre split depth:  1
batch:  torch.Size([512, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 86] [4, 86] [4, 86] [4, 86] [4, 86] [4, 79] [4, 53] [4, 86] [4, 86] [4, 86] 
regular batch size: 2*512, diving batch size 1*0
best_l after optimization: 11513.9033203125 with beta sum per layer: [0.0, 0.0, 0.0, 21.242963790893555, 1668.373291015625]
alpha/beta optimization time: 0.34961700439453125
This batch time : update_bounds func: 0.5826	 prepare: 0.1181	 bound: 0.3501	 transfer: 0.0068	 finalize: 0.1048
Accumulated time: update_bounds func: 2.2539	 prepare: 0.2376	 bound: 1.7985	 transfer: 0.0068	 finalize: 0.1998
batch bounding time:  0.5837922096252441
Current worst splitting domains [lb, ub] (depth):
[-15.39789,   inf] (15), [-15.24689,   inf] (15), [-15.17132,   inf] (15), [-15.09290,   inf] (15), [-15.01564,   inf] (15), [-14.72448,   inf] (15), [-14.67863,   inf] (15), [-14.65551,   inf] (15), [-14.55315,   inf] (15), [-14.49357,   inf] (15), [-14.48613,   inf] (15), [-14.44920,   inf] (15), [-14.38683,   inf] (15), [-14.37580,   inf] (15), [-14.34467,   inf] (15), [-14.32247,   inf] (15), [-14.31044,   inf] (15), [-14.26356,   inf] (15), [-14.24290,   inf] (15), [-14.21464,   inf] (15), 
length of domains: 1024
Total time: 1.0090	 pickout: 0.0826	 decision: 0.1950	 get_bound: 0.5855	 add_domain: 0.1458
Current lb:-15.397889137268066
1984 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 5.737917184829712

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 54] [4, 54] [4, 14] [4, 54] [4, 14] [4, 54] [4, 14] [4, 14] [4, 54] [4, 14] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22072.873046875 with beta sum per layer: [0.0, 0.0, 0.0, 52.43709945678711, 3529.847900390625]
alpha/beta optimization time: 0.4156370162963867
This batch time : update_bounds func: 1.0420	 prepare: 0.2427	 bound: 0.4162	 transfer: 0.0127	 finalize: 0.2908
Accumulated time: update_bounds func: 3.2959	 prepare: 0.4803	 bound: 2.2147	 transfer: 0.0127	 finalize: 0.4906
batch bounding time:  1.0442960262298584
Current worst splitting domains [lb, ub] (depth):
[-15.00103,   inf] (17), [-14.88103,   inf] (17), [-14.86594,   inf] (17), [-14.81482,   inf] (17), [-14.72041,   inf] (17), [-14.69277,   inf] (17), [-14.66689,   inf] (17), [-14.58601,   inf] (17), [-14.53509,   inf] (17), [-14.48574,   inf] (17), [-14.36760,   inf] (17), [-14.28425,   inf] (17), [-14.26264,   inf] (17), [-14.16060,   inf] (17), [-14.13184,   inf] (17), [-14.12684,   inf] (17), [-14.11630,   inf] (17), [-14.09769,   inf] (17), [-14.08189,   inf] (17), [-14.06313,   inf] (17), 
length of domains: 2048
Total time: 1.8429	 pickout: 0.2484	 decision: 0.2674	 get_bound: 1.0479	 add_domain: 0.2792
Current lb:-15.00102710723877
4032 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 7.606388568878174

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 14] [4, 14] [4, 14] [4, 54] [4, 14] [4, 14] [4, 54] [4, 54] [4, 14] [4, 54] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23084.158203125 with beta sum per layer: [0.0, 0.0, 0.0, 138.14109802246094, 3932.811279296875]
alpha/beta optimization time: 0.36858606338500977
This batch time : update_bounds func: 0.9629	 prepare: 0.2506	 bound: 0.3692	 transfer: 0.0183	 finalize: 0.3194
Accumulated time: update_bounds func: 4.2588	 prepare: 0.7310	 bound: 2.5839	 transfer: 0.0183	 finalize: 0.8100
batch bounding time:  0.965247631072998
Current worst splitting domains [lb, ub] (depth):
[-14.70085,   inf] (19), [-14.54956,   inf] (19), [-14.53749,   inf] (19), [-14.44726,   inf] (19), [-14.43224,   inf] (19), [-14.37131,   inf] (19), [-14.37029,   inf] (19), [-14.34705,   inf] (19), [-14.28619,   inf] (19), [-14.27384,   inf] (19), [-14.25916,   inf] (19), [-14.18524,   inf] (19), [-14.18194,   inf] (19), [-14.16422,   inf] (19), [-14.15972,   inf] (19), [-14.15576,   inf] (19), [-14.09742,   inf] (19), [-14.04290,   inf] (19), [-14.01314,   inf] (19), [-13.99988,   inf] (19), 
length of domains: 3072
Total time: 1.6840	 pickout: 0.2429	 decision: 0.3293	 get_bound: 0.9688	 add_domain: 0.1430
Current lb:-14.700852394104004
6080 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 9.314769744873047

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 31] [4, 97] [4, 97] [3, 31] [3, 31] [4, 97] [4, 97] [3, 90] [3, 65] [4, 97] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23581.7578125 with beta sum per layer: [0.0, 0.0, 0.0, 262.01739501953125, 4047.583984375]
alpha/beta optimization time: 0.35637736320495605
This batch time : update_bounds func: 0.9588	 prepare: 0.2418	 bound: 0.3568	 transfer: 0.0116	 finalize: 0.3435
Accumulated time: update_bounds func: 5.2176	 prepare: 0.9727	 bound: 2.9407	 transfer: 0.0116	 finalize: 1.1535
batch bounding time:  0.9610486030578613
Current worst splitting domains [lb, ub] (depth):
[-14.53868,   inf] (21), [-14.31736,   inf] (21), [-14.30343,   inf] (21), [-14.28639,   inf] (21), [-14.27943,   inf] (21), [-14.22886,   inf] (21), [-14.20142,   inf] (21), [-14.17366,   inf] (21), [-14.14462,   inf] (21), [-14.11835,   inf] (21), [-14.03265,   inf] (21), [-14.02874,   inf] (21), [-14.00814,   inf] (21), [-13.98389,   inf] (21), [-13.96100,   inf] (21), [-13.95623,   inf] (21), [-13.94830,   inf] (21), [-13.91868,   inf] (21), [-13.90157,   inf] (21), [-13.81504,   inf] (21), 
length of domains: 4096
Total time: 1.5880	 pickout: 0.1666	 decision: 0.3087	 get_bound: 0.9645	 add_domain: 0.1481
Current lb:-14.53868293762207
8128 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 10.925364255905151

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 97] [4, 44] [4, 3] [4, 97] [4, 97] [3, 31] [4, 97] [4, 97] [4, 3] [4, 44] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23860.26953125 with beta sum per layer: [0.0, 0.0, 0.0, 433.4626770019531, 3966.31005859375]
alpha/beta optimization time: 0.3731362819671631
This batch time : update_bounds func: 0.9587	 prepare: 0.2450	 bound: 0.3736	 transfer: 0.0109	 finalize: 0.3239
Accumulated time: update_bounds func: 6.1763	 prepare: 1.2177	 bound: 3.3143	 transfer: 0.0109	 finalize: 1.4774
batch bounding time:  0.9611015319824219
Current worst splitting domains [lb, ub] (depth):
[-14.31306,   inf] (23), [-14.05451,   inf] (23), [-14.04606,   inf] (23), [-14.02648,   inf] (23), [-14.00356,   inf] (23), [-13.96849,   inf] (23), [-13.92662,   inf] (23), [-13.92093,   inf] (23), [-13.88547,   inf] (23), [-13.85421,   inf] (23), [-13.80608,   inf] (23), [-13.78633,   inf] (23), [-13.78380,   inf] (23), [-13.76747,   inf] (23), [-13.75220,   inf] (23), [-13.72103,   inf] (23), [-13.71729,   inf] (23), [-13.69560,   inf] (23), [-13.69190,   inf] (23), [-13.66921,   inf] (23), 
length of domains: 5120
Total time: 1.6222	 pickout: 0.1693	 decision: 0.3329	 get_bound: 0.9646	 add_domain: 0.1553
Current lb:-14.313064575195312
10176 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 12.57085657119751

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 3] [4, 97] [4, 44] [4, 44] [4, 56] [4, 3] [4, 44] [4, 56] [4, 44] [4, 56] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23923.689453125 with beta sum per layer: [0.0, 0.0, 0.0, 643.7957763671875, 3860.66748046875]
alpha/beta optimization time: 0.37465476989746094
This batch time : update_bounds func: 0.8627	 prepare: 0.2586	 bound: 0.3751	 transfer: 0.0127	 finalize: 0.2109
Accumulated time: update_bounds func: 7.0391	 prepare: 1.4763	 bound: 3.6894	 transfer: 0.0127	 finalize: 1.6883
batch bounding time:  0.8656032085418701
Current worst splitting domains [lb, ub] (depth):
[-13.92696,   inf] (25), [-13.86397,   inf] (25), [-13.81074,   inf] (25), [-13.79452,   inf] (25), [-13.77080,   inf] (25), [-13.73168,   inf] (25), [-13.71732,   inf] (25), [-13.66623,   inf] (25), [-13.64994,   inf] (25), [-13.63143,   inf] (25), [-13.63118,   inf] (25), [-13.59493,   inf] (25), [-13.57399,   inf] (25), [-13.56660,   inf] (25), [-13.53661,   inf] (25), [-13.52246,   inf] (25), [-13.51766,   inf] (25), [-13.49773,   inf] (25), [-13.48941,   inf] (25), [-13.48676,   inf] (25), 
length of domains: 6144
Total time: 1.7725	 pickout: 0.1700	 decision: 0.3596	 get_bound: 0.8697	 add_domain: 0.3731
Current lb:-13.926956176757812
12224 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 14.367491960525513

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 56] [4, 56] [4, 3] [4, 3] [4, 44] [4, 3] [4, 3] [4, 3] [3, 38] [4, 56] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23991.34375 with beta sum per layer: [0.0, 0.0, 0.0, 803.1832885742188, 3695.13671875]
alpha/beta optimization time: 0.35549116134643555
This batch time : update_bounds func: 1.0135	 prepare: 0.2518	 bound: 0.3559	 transfer: 0.0117	 finalize: 0.3885
Accumulated time: update_bounds func: 8.0526	 prepare: 1.7281	 bound: 4.0453	 transfer: 0.0117	 finalize: 2.0768
batch bounding time:  1.015537977218628
Current worst splitting domains [lb, ub] (depth):
[-13.75455,   inf] (27), [-13.68525,   inf] (27), [-13.51845,   inf] (27), [-13.46797,   inf] (27), [-13.44847,   inf] (27), [-13.44677,   inf] (27), [-13.44437,   inf] (27), [-13.43142,   inf] (27), [-13.41632,   inf] (27), [-13.40476,   inf] (27), [-13.40305,   inf] (27), [-13.39674,   inf] (27), [-13.38690,   inf] (27), [-13.37502,   inf] (27), [-13.37334,   inf] (27), [-13.37180,   inf] (27), [-13.34320,   inf] (27), [-13.33052,   inf] (27), [-13.32965,   inf] (27), [-13.32258,   inf] (27), 
length of domains: 7168
Total time: 1.5778	 pickout: 0.1738	 decision: 0.2172	 get_bound: 1.0189	 add_domain: 0.1679
Current lb:-13.754552841186523
14272 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 15.972878456115723

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 65] [3, 65] [4, 44] [3, 31] [4, 3] [3, 58] [4, 56] [3, 92] [4, 3] [3, 31] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23962.767578125 with beta sum per layer: [0.0, 0.0, 0.0, 811.2235717773438, 3530.6650390625]
alpha/beta optimization time: 0.3546571731567383
This batch time : update_bounds func: 0.8246	 prepare: 0.2507	 bound: 0.3551	 transfer: 0.0116	 finalize: 0.2018
Accumulated time: update_bounds func: 8.8771	 prepare: 1.9789	 bound: 4.4004	 transfer: 0.0116	 finalize: 2.2786
batch bounding time:  0.8265860080718994
Current worst splitting domains [lb, ub] (depth):
[-13.68181,   inf] (29), [-13.59020,   inf] (29), [-13.31323,   inf] (29), [-13.29848,   inf] (29), [-13.29103,   inf] (29), [-13.28225,   inf] (29), [-13.26024,   inf] (29), [-13.24303,   inf] (29), [-13.21914,   inf] (29), [-13.19181,   inf] (29), [-13.18817,   inf] (29), [-13.18515,   inf] (29), [-13.17686,   inf] (29), [-13.16756,   inf] (29), [-13.16505,   inf] (29), [-13.15839,   inf] (29), [-13.15269,   inf] (29), [-13.14490,   inf] (29), [-13.12931,   inf] (29), [-13.12596,   inf] (29), 
length of domains: 8192
Total time: 1.5839	 pickout: 0.1715	 decision: 0.4071	 get_bound: 0.8299	 add_domain: 0.1754
Current lb:-13.68181037902832
16320 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 17.581271648406982

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 92] [4, 44] [3, 65] [4, 96] [4, 3] [4, 4] [4, 44] [3, 90] [3, 31] [3, 65] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23907.2109375 with beta sum per layer: [0.0, 0.0, 0.0, 751.5538940429688, 3316.411376953125]
alpha/beta optimization time: 0.35915112495422363
This batch time : update_bounds func: 0.8494	 prepare: 0.2651	 bound: 0.3596	 transfer: 0.0124	 finalize: 0.2067
Accumulated time: update_bounds func: 9.7266	 prepare: 2.2440	 bound: 4.7600	 transfer: 0.0124	 finalize: 2.4853
batch bounding time:  0.8514688014984131
Current worst splitting domains [lb, ub] (depth):
[-13.52443,   inf] (31), [-13.27208,   inf] (31), [-13.23152,   inf] (31), [-13.14940,   inf] (31), [-13.11597,   inf] (31), [-13.08801,   inf] (31), [-13.06448,   inf] (31), [-13.06144,   inf] (31), [-13.04596,   inf] (31), [-13.02926,   inf] (31), [-12.98205,   inf] (31), [-12.96163,   inf] (31), [-12.92572,   inf] (31), [-12.92493,   inf] (31), [-12.91802,   inf] (31), [-12.91506,   inf] (31), [-12.91460,   inf] (31), [-12.90235,   inf] (31), [-12.90136,   inf] (31), [-12.88894,   inf] (31), 
length of domains: 9216
Total time: 1.9439	 pickout: 0.1736	 decision: 0.4393	 get_bound: 0.8547	 add_domain: 0.4763
Current lb:-13.524425506591797
18368 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 19.55238366127014

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 44] [4, 84] [3, 31] [4, 96] [3, 58] [4, 44] [3, 90] [4, 96] [3, 65] [4, 84] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23792.9453125 with beta sum per layer: [0.0, 0.0, 0.0, 682.7265625, 3198.04833984375]
alpha/beta optimization time: 0.35991978645324707
This batch time : update_bounds func: 0.8295	 prepare: 0.2510	 bound: 0.3603	 transfer: 0.0122	 finalize: 0.2004
Accumulated time: update_bounds func: 10.5561	 prepare: 2.4950	 bound: 5.1204	 transfer: 0.0122	 finalize: 2.6857
batch bounding time:  0.831655740737915
Current worst splitting domains [lb, ub] (depth):
[-13.20262,   inf] (33), [-13.09077,   inf] (33), [-13.07979,   inf] (33), [-13.00181,   inf] (33), [-12.98987,   inf] (33), [-12.95393,   inf] (33), [-12.94061,   inf] (33), [-12.88433,   inf] (33), [-12.87777,   inf] (33), [-12.86493,   inf] (33), [-12.82610,   inf] (33), [-12.79505,   inf] (33), [-12.76928,   inf] (33), [-12.76407,   inf] (33), [-12.74877,   inf] (33), [-12.72564,   inf] (33), [-12.72344,   inf] (33), [-12.72215,   inf] (33), [-12.70808,   inf] (33), [-12.68633,   inf] (33), 
length of domains: 10240
Total time: 1.6885	 pickout: 0.1824	 decision: 0.2194	 get_bound: 0.8351	 add_domain: 0.4517
Current lb:-13.202621459960938
20416 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 21.266515493392944

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 59] [2, 59] [2, 59] [4, 96] [3, 31] [2, 59] [4, 84] [3, 90] [4, 84] [3, 92] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23624.15234375 with beta sum per layer: [0.0, 0.0, 2.2124202251434326, 633.9384765625, 3118.343994140625]
alpha/beta optimization time: 0.3585343360900879
This batch time : update_bounds func: 1.1228	 prepare: 0.2588	 bound: 0.3590	 transfer: 0.0122	 finalize: 0.4871
Accumulated time: update_bounds func: 11.6789	 prepare: 2.7538	 bound: 5.4793	 transfer: 0.0122	 finalize: 3.1729
batch bounding time:  1.1255216598510742
Current worst splitting domains [lb, ub] (depth):
[-13.20262,   inf] (35), [-13.09077,   inf] (35), [-13.07979,   inf] (35), [-12.95393,   inf] (35), [-12.83758,   inf] (35), [-12.77783,   inf] (35), [-12.70208,   inf] (35), [-12.67564,   inf] (35), [-12.67469,   inf] (35), [-12.67180,   inf] (35), [-12.61916,   inf] (35), [-12.55585,   inf] (35), [-12.53358,   inf] (35), [-12.53000,   inf] (35), [-12.52219,   inf] (35), [-12.51936,   inf] (35), [-12.48402,   inf] (35), [-12.47703,   inf] (35), [-12.44337,   inf] (35), [-12.43790,   inf] (35), 
length of domains: 11264
Total time: 1.7181	 pickout: 0.1783	 decision: 0.2189	 get_bound: 1.1293	 add_domain: 0.1917
Current lb:-13.202621459960938
22464 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 23.010377645492554

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 84] [4, 84] [3, 90] [4, 84] [2, 59] [2, 59] [2, 59] [4, 4] [2, 59] [2, 59] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23414.6171875 with beta sum per layer: [0.0, 0.0, 9.71131706237793, 648.2752685546875, 3067.90673828125]
alpha/beta optimization time: 0.387406587600708
This batch time : update_bounds func: 0.9691	 prepare: 0.2687	 bound: 0.3879	 transfer: 0.0132	 finalize: 0.2937
Accumulated time: update_bounds func: 12.6480	 prepare: 3.0226	 bound: 5.8672	 transfer: 0.0132	 finalize: 3.4666
batch bounding time:  0.9713387489318848
Current worst splitting domains [lb, ub] (depth):
[-12.95475,   inf] (37), [-12.90946,   inf] (37), [-12.83758,   inf] (37), [-12.81500,   inf] (37), [-12.80953,   inf] (37), [-12.77783,   inf] (37), [-12.72532,   inf] (37), [-12.70208,   inf] (37), [-12.67469,   inf] (37), [-12.67180,   inf] (37), [-12.66019,   inf] (37), [-12.54875,   inf] (37), [-12.54215,   inf] (37), [-12.41660,   inf] (37), [-12.38210,   inf] (37), [-12.32077,   inf] (37), [-12.31773,   inf] (37), [-12.30559,   inf] (37), [-12.30015,   inf] (37), [-12.26349,   inf] (37), 
length of domains: 12288
Total time: 1.8830	 pickout: 0.1793	 decision: 0.2211	 get_bound: 0.9748	 add_domain: 0.5078
Current lb:-12.954747200012207
24512 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 24.91941738128662

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 96] [4, 84] [4, 84] [4, 96] [3, 58] [4, 4] [4, 96] [4, 84] [3, 90] [4, 84] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 23185.34375 with beta sum per layer: [0.0, 0.0, 20.380050659179688, 640.6713256835938, 3112.0078125]
alpha/beta optimization time: 0.4195270538330078
This batch time : update_bounds func: 1.1321	 prepare: 0.4008	 bound: 0.4201	 transfer: 0.0126	 finalize: 0.2925
Accumulated time: update_bounds func: 13.7801	 prepare: 3.4234	 bound: 6.2872	 transfer: 0.0126	 finalize: 3.7590
batch bounding time:  1.1341347694396973
Current worst splitting domains [lb, ub] (depth):
[-12.73375,   inf] (39), [-12.66243,   inf] (39), [-12.64111,   inf] (39), [-12.62270,   inf] (39), [-12.60009,   inf] (39), [-12.56814,   inf] (39), [-12.55801,   inf] (39), [-12.52861,   inf] (39), [-12.51319,   inf] (39), [-12.48647,   inf] (39), [-12.48392,   inf] (39), [-12.45085,   inf] (39), [-12.41813,   inf] (39), [-12.38993,   inf] (39), [-12.37156,   inf] (39), [-12.33366,   inf] (39), [-12.26782,   inf] (39), [-12.26349,   inf] (39), [-12.26223,   inf] (39), [-12.24098,   inf] (39), 
length of domains: 13312
Total time: 2.2739	 pickout: 0.2655	 decision: 0.2825	 get_bound: 1.1377	 add_domain: 0.5882
Current lb:-12.733748435974121
26560 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 27.221839904785156

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 4] [4, 96] [4, 96] [4, 4] [4, 50] [3, 90] [4, 96] [3, 58] [4, 96] [4, 96] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22991.326171875 with beta sum per layer: [0.0, 0.0, 27.51632308959961, 670.9243774414062, 3184.0556640625]
alpha/beta optimization time: 0.4161069393157959
This batch time : update_bounds func: 1.1637	 prepare: 0.4246	 bound: 0.4166	 transfer: 0.0129	 finalize: 0.3036
Accumulated time: update_bounds func: 14.9439	 prepare: 3.8480	 bound: 6.7039	 transfer: 0.0129	 finalize: 4.0626
batch bounding time:  1.166017770767212
Current worst splitting domains [lb, ub] (depth):
[-12.49369,   inf] (41), [-12.43890,   inf] (41), [-12.41622,   inf] (41), [-12.40106,   inf] (41), [-12.39614,   inf] (41), [-12.37843,   inf] (41), [-12.36125,   inf] (41), [-12.31165,   inf] (41), [-12.29639,   inf] (41), [-12.29504,   inf] (41), [-12.25931,   inf] (41), [-12.23336,   inf] (41), [-12.23330,   inf] (41), [-12.22115,   inf] (41), [-12.21640,   inf] (41), [-12.17408,   inf] (41), [-12.15718,   inf] (41), [-12.15380,   inf] (41), [-12.14695,   inf] (41), [-12.13583,   inf] (41), 
length of domains: 14336
Total time: 1.9536	 pickout: 0.2694	 decision: 0.2895	 get_bound: 1.1697	 add_domain: 0.2250
Current lb:-12.493691444396973
28608 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 29.210297346115112

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 50] [4, 50] [4, 4] [4, 50] [4, 50] [4, 50] [4, 4] [4, 4] [3, 58] [4, 4] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22830.474609375 with beta sum per layer: [0.0, 0.0, 29.550251007080078, 670.0482177734375, 3348.44921875]
alpha/beta optimization time: 0.41590309143066406
This batch time : update_bounds func: 1.1344	 prepare: 0.4019	 bound: 0.4164	 transfer: 0.0119	 finalize: 0.2981
Accumulated time: update_bounds func: 16.0783	 prepare: 4.2499	 bound: 7.1203	 transfer: 0.0119	 finalize: 4.3607
batch bounding time:  1.1363742351531982
Current worst splitting domains [lb, ub] (depth):
[-12.24249,   inf] (43), [-12.21853,   inf] (43), [-12.17598,   inf] (43), [-12.16672,   inf] (43), [-12.16407,   inf] (43), [-12.13404,   inf] (43), [-12.11704,   inf] (43), [-12.11445,   inf] (43), [-12.11349,   inf] (43), [-12.10250,   inf] (43), [-12.06216,   inf] (43), [-12.04417,   inf] (43), [-12.02524,   inf] (43), [-12.01603,   inf] (43), [-12.01093,   inf] (43), [-12.00271,   inf] (43), [-11.99498,   inf] (43), [-11.98079,   inf] (43), [-11.97179,   inf] (43), [-11.97066,   inf] (43), 
length of domains: 15360
Total time: 2.3514	 pickout: 0.2845	 decision: 0.7079	 get_bound: 1.1400	 add_domain: 0.2191
Current lb:-12.2424898147583
30656 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 31.591161966323853

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 58] [4, 4] [3, 90] [4, 6] [4, 4] [4, 6] [3, 92] [4, 6] [4, 6] [3, 90] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22724.783203125 with beta sum per layer: [0.0, 0.0, 24.312191009521484, 617.092529296875, 3540.42431640625]
alpha/beta optimization time: 0.39095258712768555
This batch time : update_bounds func: 1.4612	 prepare: 0.4044	 bound: 0.3915	 transfer: 0.0118	 finalize: 0.6481
Accumulated time: update_bounds func: 17.5395	 prepare: 4.6544	 bound: 7.5118	 transfer: 0.0118	 finalize: 5.0089
batch bounding time:  1.4635794162750244
Current worst splitting domains [lb, ub] (depth):
[-12.12816,   inf] (45), [-12.00560,   inf] (45), [-11.98366,   inf] (45), [-11.98323,   inf] (45), [-11.93950,   inf] (45), [-11.91742,   inf] (45), [-11.89926,   inf] (45), [-11.87831,   inf] (45), [-11.84638,   inf] (45), [-11.84606,   inf] (45), [-11.82100,   inf] (45), [-11.81460,   inf] (45), [-11.81398,   inf] (45), [-11.81008,   inf] (45), [-11.78979,   inf] (45), [-11.78857,   inf] (45), [-11.78697,   inf] (45), [-11.78304,   inf] (45), [-11.77887,   inf] (45), [-11.77277,   inf] (45), 
length of domains: 16384
Total time: 2.2620	 pickout: 0.2720	 decision: 0.2890	 get_bound: 1.4673	 add_domain: 0.2337
Current lb:-12.128162384033203
32704 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 33.88609504699707

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 28] [2, 99] [4, 6] [4, 6] [4, 6] [4, 6] [4, 50] [4, 18] [4, 18] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22612.62109375 with beta sum per layer: [0.0, 0.0, 27.203115463256836, 663.6423950195312, 3533.33740234375]
alpha/beta optimization time: 0.3540031909942627
This batch time : update_bounds func: 1.3268	 prepare: 0.2695	 bound: 0.3544	 transfer: 0.0120	 finalize: 0.6843
Accumulated time: update_bounds func: 18.8663	 prepare: 4.9239	 bound: 7.8662	 transfer: 0.0120	 finalize: 5.6932
batch bounding time:  1.3291535377502441
Current worst splitting domains [lb, ub] (depth):
[-12.12816,   inf] (47), [-11.99716,   inf] (47), [-11.73761,   inf] (47), [-11.73139,   inf] (47), [-11.72408,   inf] (47), [-11.72273,   inf] (47), [-11.68493,   inf] (47), [-11.68178,   inf] (47), [-11.67660,   inf] (47), [-11.66290,   inf] (47), [-11.64807,   inf] (47), [-11.63809,   inf] (47), [-11.63261,   inf] (47), [-11.62439,   inf] (47), [-11.61347,   inf] (47), [-11.60276,   inf] (47), [-11.59732,   inf] (47), [-11.59669,   inf] (47), [-11.59513,   inf] (47), [-11.58624,   inf] (47), 
length of domains: 17408
Total time: 1.9733	 pickout: 0.2019	 decision: 0.2330	 get_bound: 1.3328	 add_domain: 0.2056
Current lb:-12.128162384033203
34752 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 35.889968156814575

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 90] [1, 81] [4, 18] [4, 6] [3, 38] [4, 18] [2, 28] [3, 58] [4, 6] [2, 99] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22518.85546875 with beta sum per layer: [0.0, 3.0028977394104004, 25.173219680786133, 706.269287109375, 3621.22607421875]
alpha/beta optimization time: 0.3575563430786133
This batch time : update_bounds func: 0.8751	 prepare: 0.2826	 bound: 0.3580	 transfer: 0.0119	 finalize: 0.2158
Accumulated time: update_bounds func: 19.7414	 prepare: 5.2064	 bound: 8.2242	 transfer: 0.0119	 finalize: 5.9090
batch bounding time:  0.8771913051605225
Current worst splitting domains [lb, ub] (depth):
[-11.99716,   inf] (49), [-11.96641,   inf] (49), [-11.68493,   inf] (49), [-11.65601,   inf] (49), [-11.63261,   inf] (49), [-11.58624,   inf] (49), [-11.58267,   inf] (49), [-11.57649,   inf] (49), [-11.55927,   inf] (49), [-11.55897,   inf] (49), [-11.54950,   inf] (49), [-11.54331,   inf] (49), [-11.51972,   inf] (49), [-11.51448,   inf] (49), [-11.50745,   inf] (49), [-11.49745,   inf] (49), [-11.49708,   inf] (49), [-11.49042,   inf] (49), [-11.48610,   inf] (49), [-11.47333,   inf] (49), 
length of domains: 18432
Total time: 1.5192	 pickout: 0.1976	 decision: 0.2345	 get_bound: 0.8806	 add_domain: 0.2064
Current lb:-11.997160911560059
36800 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 37.44048237800598

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 50] [4, 6] [1, 81] [1, 81] [3, 53] [4, 6] [4, 18] [4, 18] [4, 6] [3, 70] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22424.98828125 with beta sum per layer: [0.0, 4.632574081420898, 22.350528717041016, 722.8580322265625, 3693.47314453125]
alpha/beta optimization time: 0.36428380012512207
This batch time : update_bounds func: 0.8830	 prepare: 0.2824	 bound: 0.3647	 transfer: 0.0120	 finalize: 0.2169
Accumulated time: update_bounds func: 20.6244	 prepare: 5.4888	 bound: 8.5889	 transfer: 0.0120	 finalize: 6.1259
batch bounding time:  0.8854715824127197
Current worst splitting domains [lb, ub] (depth):
[-11.91173,   inf] (51), [-11.77582,   inf] (51), [-11.70406,   inf] (51), [-11.68493,   inf] (51), [-11.65601,   inf] (51), [-11.63261,   inf] (51), [-11.54950,   inf] (51), [-11.53846,   inf] (51), [-11.49708,   inf] (51), [-11.49042,   inf] (51), [-11.47212,   inf] (51), [-11.46702,   inf] (51), [-11.43785,   inf] (51), [-11.43323,   inf] (51), [-11.42867,   inf] (51), [-11.42562,   inf] (51), [-11.41193,   inf] (51), [-11.39964,   inf] (51), [-11.38988,   inf] (51), [-11.38333,   inf] (51), 
length of domains: 19456
Total time: 2.0472	 pickout: 0.1870	 decision: 0.7662	 get_bound: 0.8893	 add_domain: 0.2047
Current lb:-11.911727905273438
38848 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 39.519325494766235

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 6] [4, 6] [1, 81] [4, 18] [4, 18] [4, 6] [4, 18] [4, 18] [4, 18] [4, 50] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22372.19921875 with beta sum per layer: [0.0, 6.2883620262146, 16.902732849121094, 674.6022338867188, 3762.83203125]
alpha/beta optimization time: 0.35802221298217773
This batch time : update_bounds func: 1.4474	 prepare: 0.2741	 bound: 0.3585	 transfer: 0.0123	 finalize: 0.7955
Accumulated time: update_bounds func: 22.0718	 prepare: 5.7629	 bound: 8.9474	 transfer: 0.0123	 finalize: 6.9215
batch bounding time:  1.4500200748443604
Current worst splitting domains [lb, ub] (depth):
[-11.70406,   inf] (53), [-11.66225,   inf] (53), [-11.64273,   inf] (53), [-11.60295,   inf] (53), [-11.54758,   inf] (53), [-11.53719,   inf] (53), [-11.49109,   inf] (53), [-11.48660,   inf] (53), [-11.47885,   inf] (53), [-11.42867,   inf] (53), [-11.40313,   inf] (53), [-11.40201,   inf] (53), [-11.39869,   inf] (53), [-11.38988,   inf] (53), [-11.38032,   inf] (53), [-11.37781,   inf] (53), [-11.37033,   inf] (53), [-11.36945,   inf] (53), [-11.36306,   inf] (53), [-11.35588,   inf] (53), 
length of domains: 20480
Total time: 2.0811	 pickout: 0.1866	 decision: 0.2364	 get_bound: 1.4539	 add_domain: 0.2042
Current lb:-11.704056739807129
40896 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 41.63355565071106

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 99] [4, 35] [4, 18] [4, 35] [3, 8] [3, 92] [4, 18] [4, 18] [4, 35] [3, 58] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22314.0703125 with beta sum per layer: [0.0, 3.0874946117401123, 16.34369659423828, 705.5797729492188, 3831.01611328125]
alpha/beta optimization time: 0.36014628410339355
This batch time : update_bounds func: 0.8752	 prepare: 0.2763	 bound: 0.3606	 transfer: 0.0122	 finalize: 0.2192
Accumulated time: update_bounds func: 22.9471	 prepare: 6.0392	 bound: 9.3080	 transfer: 0.0122	 finalize: 7.1407
batch bounding time:  0.8773353099822998
Current worst splitting domains [lb, ub] (depth):
[-11.70406,   inf] (55), [-11.44733,   inf] (55), [-11.43638,   inf] (55), [-11.42867,   inf] (55), [-11.40363,   inf] (55), [-11.38988,   inf] (55), [-11.37781,   inf] (55), [-11.36945,   inf] (55), [-11.35588,   inf] (55), [-11.35542,   inf] (55), [-11.34519,   inf] (55), [-11.32282,   inf] (55), [-11.31996,   inf] (55), [-11.30014,   inf] (55), [-11.29690,   inf] (55), [-11.28655,   inf] (55), [-11.28421,   inf] (45), [-11.28356,   inf] (45), [-11.28167,   inf] (45), [-11.28150,   inf] (47), 
length of domains: 21504
Total time: 1.5111	 pickout: 0.1876	 decision: 0.2381	 get_bound: 0.8809	 add_domain: 0.2046
Current lb:-11.704056739807129
42944 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 43.17923092842102

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 18] [4, 18] [4, 35] [2, 28] [4, 35] [2, 99] [4, 35] [4, 18] [4, 50] [4, 49] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22255.44921875 with beta sum per layer: [0.0, 0.0, 16.604829788208008, 745.1751708984375, 3778.98193359375]
alpha/beta optimization time: 0.3630368709564209
This batch time : update_bounds func: 1.5430	 prepare: 0.2743	 bound: 0.3635	 transfer: 0.0120	 finalize: 0.2290
Accumulated time: update_bounds func: 24.4901	 prepare: 6.3135	 bound: 9.6715	 transfer: 0.0120	 finalize: 7.3697
batch bounding time:  1.5456366539001465
Current worst splitting domains [lb, ub] (depth):
[-11.67370,   inf] (57), [-11.42867,   inf] (57), [-11.38988,   inf] (57), [-11.32864,   inf] (57), [-11.32282,   inf] (57), [-11.25412,   inf] (45), [-11.25033,   inf] (49), [-11.24851,   inf] (57), [-11.24661,   inf] (47), [-11.23959,   inf] (43), [-11.23851,   inf] (57), [-11.23839,   inf] (45), [-11.23736,   inf] (45), [-11.23674,   inf] (43), [-11.23391,   inf] (53), [-11.23235,   inf] (57), [-11.23201,   inf] (51), [-11.23074,   inf] (43), [-11.23070,   inf] (39), [-11.23070,   inf] (39), 
length of domains: 22528
Total time: 2.1941	 pickout: 0.2024	 decision: 0.2361	 get_bound: 1.5495	 add_domain: 0.2061
Current lb:-11.673700332641602
44992 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 45.41309356689453

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 26] [4, 35] [4, 35] [4, 35] [3, 8] [4, 18] [1, 81] [4, 35] [4, 35] [3, 53] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22199.0703125 with beta sum per layer: [0.0, 3.047335624694824, 33.19059371948242, 756.1943359375, 3745.901611328125]
alpha/beta optimization time: 0.3852846622467041
This batch time : update_bounds func: 0.8994	 prepare: 0.2707	 bound: 0.3857	 transfer: 0.0122	 finalize: 0.2241
Accumulated time: update_bounds func: 25.3895	 prepare: 6.5842	 bound: 10.0572	 transfer: 0.0122	 finalize: 7.5939
batch bounding time:  0.901738166809082
Current worst splitting domains [lb, ub] (depth):
[-11.54425,   inf] (59), [-11.28285,   inf] (59), [-11.27624,   inf] (59), [-11.25033,   inf] (51), [-11.23400,   inf] (59), [-11.23391,   inf] (55), [-11.23201,   inf] (53), [-11.22922,   inf] (43), [-11.22790,   inf] (43), [-11.22728,   inf] (43), [-11.22686,   inf] (45), [-11.22499,   inf] (51), [-11.22377,   inf] (59), [-11.22130,   inf] (53), [-11.21951,   inf] (45), [-11.21652,   inf] (47), [-11.21547,   inf] (47), [-11.21502,   inf] (49), [-11.21495,   inf] (43), [-11.21487,   inf] (43), 
length of domains: 23552
Total time: 1.5603	 pickout: 0.2054	 decision: 0.2338	 get_bound: 0.9056	 add_domain: 0.2155
Current lb:-11.544248580932617
47040 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 47.009495973587036

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [0, 2] [3, 92] [4, 18] [3, 92] [4, 35] [4, 35] [4, 6] [4, 4] [3, 73] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22150.7890625 with beta sum per layer: [0.16199399530887604, 2.185760021209717, 25.9681453704834, 686.4193115234375, 3853.81591796875]
alpha/beta optimization time: 0.36264491081237793
This batch time : update_bounds func: 0.8806	 prepare: 0.2789	 bound: 0.3631	 transfer: 0.0117	 finalize: 0.2198
Accumulated time: update_bounds func: 26.2701	 prepare: 6.8631	 bound: 10.4203	 transfer: 0.0117	 finalize: 7.8137
batch bounding time:  0.8827660083770752
Current worst splitting domains [lb, ub] (depth):
[-11.24011,   inf] (61), [-11.23128,   inf] (53), [-11.22087,   inf] (61), [-11.20418,   inf] (45), [-11.20350,   inf] (45), [-11.20079,   inf] (43), [-11.20030,   inf] (45), [-11.20009,   inf] (43), [-11.19892,   inf] (47), [-11.19732,   inf] (43), [-11.19672,   inf] (51), [-11.19649,   inf] (53), [-11.19538,   inf] (47), [-11.19493,   inf] (55), [-11.19375,   inf] (45), [-11.19281,   inf] (47), [-11.19006,   inf] (43), [-11.18976,   inf] (43), [-11.18861,   inf] (45), [-11.18806,   inf] (45), 
length of domains: 24576
Total time: 2.2690	 pickout: 0.2047	 decision: 0.9728	 get_bound: 0.8864	 add_domain: 0.2051
Current lb:-11.240107536315918
49088 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 49.31242895126343

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 2] [3, 58] [0, 2] [4, 35] [4, 6] [4, 35] [4, 18] [4, 6] [4, 35] [4, 4] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22100.09375 with beta sum per layer: [0.3027762174606323, 5.138406276702881, 15.488195419311523, 683.9208984375, 3949.93310546875]
alpha/beta optimization time: 0.3623645305633545
This batch time : update_bounds func: 0.8764	 prepare: 0.2739	 bound: 0.3628	 transfer: 0.0121	 finalize: 0.2206
Accumulated time: update_bounds func: 27.1465	 prepare: 7.1369	 bound: 10.7831	 transfer: 0.0121	 finalize: 8.0343
batch bounding time:  0.8786759376525879
Current worst splitting domains [lb, ub] (depth):
[-11.19649,   inf] (55), [-11.19249,   inf] (53), [-11.18792,   inf] (53), [-11.18213,   inf] (53), [-11.18140,   inf] (55), [-11.17964,   inf] (59), [-11.17870,   inf] (51), [-11.17824,   inf] (45), [-11.17820,   inf] (53), [-11.17517,   inf] (43), [-11.17371,   inf] (45), [-11.17305,   inf] (49), [-11.17276,   inf] (47), [-11.17212,   inf] (49), [-11.17193,   inf] (45), [-11.17166,   inf] (47), [-11.17041,   inf] (49), [-11.16888,   inf] (51), [-11.16722,   inf] (51), [-11.16488,   inf] (43), 
length of domains: 25600
Total time: 1.5296	 pickout: 0.1988	 decision: 0.2418	 get_bound: 0.8823	 add_domain: 0.2068
Current lb:-11.196488380432129
51136 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 50.876453161239624

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [3, 38] [4, 35] [4, 18] [4, 7] [4, 7] [4, 6] [4, 18] [4, 7] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22048.3671875 with beta sum per layer: [0.0, 1.8071728944778442, 20.499229431152344, 714.5875244140625, 3901.96923828125]
alpha/beta optimization time: 0.36571240425109863
This batch time : update_bounds func: 0.8776	 prepare: 0.2718	 bound: 0.3662	 transfer: 0.0117	 finalize: 0.2212
Accumulated time: update_bounds func: 28.0241	 prepare: 7.4087	 bound: 11.1493	 transfer: 0.0117	 finalize: 8.2556
batch bounding time:  0.8798243999481201
Current worst splitting domains [lb, ub] (depth):
[-11.17243,   inf] (55), [-11.16995,   inf] (51), [-11.15717,   inf] (53), [-11.15522,   inf] (43), [-11.15433,   inf] (47), [-11.15319,   inf] (43), [-11.15262,   inf] (51), [-11.15236,   inf] (45), [-11.15106,   inf] (49), [-11.15037,   inf] (43), [-11.14971,   inf] (49), [-11.14891,   inf] (51), [-11.14846,   inf] (43), [-11.14768,   inf] (47), [-11.14445,   inf] (43), [-11.14443,   inf] (45), [-11.14052,   inf] (47), [-11.14025,   inf] (53), [-11.13978,   inf] (47), [-11.13769,   inf] (51), 
length of domains: 26624
Total time: 2.3122	 pickout: 0.1956	 decision: 1.0272	 get_bound: 0.8834	 add_domain: 0.2060
Current lb:-11.172426223754883
53184 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 53.21910357475281

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [3, 38] [4, 35] [4, 35] [4, 18] [4, 6] [4, 6] [4, 35] [4, 6] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 22011.15625 with beta sum per layer: [0.0, 3.179098606109619, 25.668121337890625, 730.1878662109375, 3872.41064453125]
alpha/beta optimization time: 0.3642923831939697
This batch time : update_bounds func: 0.8743	 prepare: 0.2697	 bound: 0.3648	 transfer: 0.0121	 finalize: 0.2204
Accumulated time: update_bounds func: 28.8984	 prepare: 7.6784	 bound: 11.5141	 transfer: 0.0121	 finalize: 8.4759
batch bounding time:  0.876537561416626
Current worst splitting domains [lb, ub] (depth):
[-11.14025,   inf] (55), [-11.13522,   inf] (55), [-11.13299,   inf] (45), [-11.13211,   inf] (51), [-11.13200,   inf] (51), [-11.13171,   inf] (47), [-11.13117,   inf] (47), [-11.13111,   inf] (45), [-11.13101,   inf] (43), [-11.12918,   inf] (45), [-11.12879,   inf] (51), [-11.12878,   inf] (45), [-11.12866,   inf] (55), [-11.12595,   inf] (59), [-11.12488,   inf] (45), [-11.12470,   inf] (43), [-11.12220,   inf] (45), [-11.12106,   inf] (43), [-11.12075,   inf] (43), [-11.11898,   inf] (45), 
length of domains: 27648
Total time: 1.5255	 pickout: 0.1970	 decision: 0.2391	 get_bound: 0.8802	 add_domain: 0.2092
Current lb:-11.140251159667969
55232 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 54.775094509124756

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [4, 35] [4, 49] [4, 18] [4, 6] [4, 35] [4, 6] [4, 49] [4, 49] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21976.1796875 with beta sum per layer: [0.1505640745162964, 4.844323635101318, 14.801155090332031, 712.3508911132812, 3929.47900390625]
alpha/beta optimization time: 0.37099194526672363
This batch time : update_bounds func: 0.8849	 prepare: 0.2745	 bound: 0.3715	 transfer: 0.0121	 finalize: 0.2198
Accumulated time: update_bounds func: 29.7833	 prepare: 7.9529	 bound: 11.8855	 transfer: 0.0121	 finalize: 8.6958
batch bounding time:  0.8870232105255127
Current worst splitting domains [lb, ub] (depth):
[-11.12442,   inf] (53), [-11.11100,   inf] (45), [-11.11064,   inf] (47), [-11.11021,   inf] (53), [-11.11009,   inf] (45), [-11.11006,   inf] (47), [-11.10974,   inf] (51), [-11.10841,   inf] (47), [-11.10781,   inf] (55), [-11.10758,   inf] (55), [-11.10752,   inf] (49), [-11.10512,   inf] (53), [-11.10458,   inf] (47), [-11.10452,   inf] (43), [-11.10364,   inf] (43), [-11.10350,   inf] (53), [-11.10324,   inf] (45), [-11.10238,   inf] (51), [-11.10235,   inf] (43), [-11.09878,   inf] (43), 
length of domains: 28672
Total time: 2.3770	 pickout: 0.1953	 decision: 1.0840	 get_bound: 0.8905	 add_domain: 0.2072
Current lb:-11.12441635131836
57280 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 57.18609285354614

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [4, 6] [4, 18] [3, 58] [4, 18] [3, 26] [4, 6] [4, 50] [4, 18] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21933.61328125 with beta sum per layer: [0.0, 1.7737997770309448, 19.377500534057617, 731.2113037109375, 4007.02880859375]
alpha/beta optimization time: 0.38077640533447266
This batch time : update_bounds func: 0.8939	 prepare: 0.2710	 bound: 0.3813	 transfer: 0.0120	 finalize: 0.2227
Accumulated time: update_bounds func: 30.6772	 prepare: 8.2239	 bound: 12.2668	 transfer: 0.0120	 finalize: 8.9185
batch bounding time:  0.8960845470428467
Current worst splitting domains [lb, ub] (depth):
[-11.11021,   inf] (55), [-11.10758,   inf] (57), [-11.10187,   inf] (57), [-11.09764,   inf] (51), [-11.09228,   inf] (47), [-11.09115,   inf] (47), [-11.09074,   inf] (59), [-11.08985,   inf] (45), [-11.08975,   inf] (59), [-11.08828,   inf] (47), [-11.08816,   inf] (45), [-11.08814,   inf] (53), [-11.08814,   inf] (45), [-11.08741,   inf] (59), [-11.08672,   inf] (55), [-11.08627,   inf] (47), [-11.08389,   inf] (57), [-11.08273,   inf] (51), [-11.08207,   inf] (43), [-11.07994,   inf] (47), 
length of domains: 29696
Total time: 1.5426	 pickout: 0.1921	 decision: 0.2418	 get_bound: 0.8996	 add_domain: 0.2091
Current lb:-11.110211372375488
59328 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 58.7635383605957

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [4, 35] [4, 35] [3, 8] [4, 35] [4, 18] [3, 38] [4, 49] [4, 7] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21891.283203125 with beta sum per layer: [0.0, 0.6203904151916504, 18.0216121673584, 747.521240234375, 4027.95849609375]
alpha/beta optimization time: 0.3788425922393799
This batch time : update_bounds func: 0.9690	 prepare: 0.2623	 bound: 0.3793	 transfer: 0.0127	 finalize: 0.3088
Accumulated time: update_bounds func: 31.6462	 prepare: 8.4862	 bound: 12.6461	 transfer: 0.0127	 finalize: 9.2273
batch bounding time:  0.9715056419372559
Current worst splitting domains [lb, ub] (depth):
[-11.08672,   inf] (57), [-11.07416,   inf] (45), [-11.07396,   inf] (43), [-11.07222,   inf] (39), [-11.07074,   inf] (47), [-11.07027,   inf] (59), [-11.06658,   inf] (43), [-11.06589,   inf] (43), [-11.06463,   inf] (43), [-11.06366,   inf] (45), [-11.06241,   inf] (59), [-11.06187,   inf] (45), [-11.06145,   inf] (47), [-11.06097,   inf] (43), [-11.05957,   inf] (55), [-11.05886,   inf] (53), [-11.05870,   inf] (43), [-11.05830,   inf] (45), [-11.05713,   inf] (47), [-11.05705,   inf] (45), 
length of domains: 30720
Total time: 2.5133	 pickout: 0.1940	 decision: 1.1186	 get_bound: 0.9754	 add_domain: 0.2252
Current lb:-11.086724281311035
61376 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 61.31049823760986

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 53] [4, 6] [4, 6] [4, 50] [4, 35] [4, 7] [3, 53] [4, 50] [4, 50] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21856.048828125 with beta sum per layer: [0.0, 1.152003526687622, 22.955049514770508, 754.7207641601562, 3974.333984375]
alpha/beta optimization time: 0.4230012893676758
This batch time : update_bounds func: 1.1609	 prepare: 0.4084	 bound: 0.4236	 transfer: 0.0124	 finalize: 0.3092
Accumulated time: update_bounds func: 32.8071	 prepare: 8.8946	 bound: 13.0697	 transfer: 0.0124	 finalize: 9.5365
batch bounding time:  1.1631786823272705
Current worst splitting domains [lb, ub] (depth):
[-11.08672,   inf] (59), [-11.05886,   inf] (55), [-11.05490,   inf] (47), [-11.05475,   inf] (47), [-11.05417,   inf] (47), [-11.05355,   inf] (43), [-11.05321,   inf] (49), [-11.05260,   inf] (47), [-11.05192,   inf] (47), [-11.05169,   inf] (43), [-11.05112,   inf] (53), [-11.05082,   inf] (45), [-11.05015,   inf] (45), [-11.04893,   inf] (49), [-11.04848,   inf] (51), [-11.04807,   inf] (49), [-11.04805,   inf] (43), [-11.04754,   inf] (61), [-11.04711,   inf] (45), [-11.04380,   inf] (45), 
length of domains: 31744
Total time: 1.9709	 pickout: 0.2773	 decision: 0.3012	 get_bound: 1.1668	 add_domain: 0.2255
Current lb:-11.086724281311035
63424 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 63.31520342826843

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 7] [4, 18] [4, 18] [3, 53] [4, 49] [4, 35] [3, 65] [4, 6] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21824.046875 with beta sum per layer: [0.15932632982730865, 0.619841992855072, 20.971271514892578, 712.2164916992188, 3985.64208984375]
alpha/beta optimization time: 0.43142151832580566
This batch time : update_bounds func: 2.1217	 prepare: 0.4160	 bound: 0.4321	 transfer: 0.0124	 finalize: 1.2539
Accumulated time: update_bounds func: 34.9288	 prepare: 9.3106	 bound: 13.5017	 transfer: 0.0124	 finalize: 10.7904
batch bounding time:  2.1240062713623047
Current worst splitting domains [lb, ub] (depth):
[-11.05112,   inf] (55), [-11.03715,   inf] (43), [-11.03645,   inf] (47), [-11.03630,   inf] (49), [-11.03554,   inf] (45), [-11.03531,   inf] (45), [-11.03306,   inf] (45), [-11.03262,   inf] (45), [-11.03123,   inf] (45), [-11.03052,   inf] (45), [-11.03045,   inf] (47), [-11.02935,   inf] (49), [-11.02825,   inf] (43), [-11.02798,   inf] (45), [-11.02743,   inf] (51), [-11.02737,   inf] (45), [-11.02629,   inf] (45), [-11.02607,   inf] (45), [-11.02477,   inf] (43), [-11.02432,   inf] (45), 
length of domains: 32768
Total time: 2.9347	 pickout: 0.2769	 decision: 0.3032	 get_bound: 2.1276	 add_domain: 0.2269
Current lb:-11.051119804382324
65472 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 66.2838225364685

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 49] [4, 35] [4, 35] [4, 6] [4, 6] [4, 18] [4, 18] [3, 8] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21795.078125 with beta sum per layer: [0.15674805641174316, 1.7608264684677124, 24.686969757080078, 747.837890625, 3979.450439453125]
alpha/beta optimization time: 0.44594573974609375
This batch time : update_bounds func: 1.2012	 prepare: 0.4189	 bound: 0.4465	 transfer: 0.0124	 finalize: 0.3168
Accumulated time: update_bounds func: 36.1300	 prepare: 9.7295	 bound: 13.9483	 transfer: 0.0124	 finalize: 11.1072
batch bounding time:  1.2035250663757324
Current worst splitting domains [lb, ub] (depth):
[-11.02005,   inf] (47), [-11.01923,   inf] (53), [-11.01845,   inf] (51), [-11.01765,   inf] (47), [-11.01723,   inf] (47), [-11.01708,   inf] (41), [-11.01694,   inf] (47), [-11.01630,   inf] (51), [-11.01538,   inf] (59), [-11.01439,   inf] (43), [-11.01306,   inf] (45), [-11.01305,   inf] (43), [-11.01186,   inf] (43), [-11.01169,   inf] (47), [-11.01162,   inf] (47), [-11.01122,   inf] (55), [-11.00983,   inf] (43), [-11.00934,   inf] (45), [-11.00882,   inf] (43), [-11.00763,   inf] (57), 
length of domains: 33792
Total time: 2.0146	 pickout: 0.2750	 decision: 0.3020	 get_bound: 1.2073	 add_domain: 0.2303
Current lb:-11.020048141479492
67520 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 68.33764624595642

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 18] [1, 81] [4, 6] [4, 6] [4, 18] [4, 50] [4, 7] [4, 18] [3, 38] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21759.189453125 with beta sum per layer: [0.0, 3.0690810680389404, 18.39510726928711, 759.4636840820312, 4011.23193359375]
alpha/beta optimization time: 0.4228947162628174
This batch time : update_bounds func: 1.1677	 prepare: 0.4120	 bound: 0.4235	 transfer: 0.0120	 finalize: 0.3130
Accumulated time: update_bounds func: 37.2977	 prepare: 10.1415	 bound: 14.3717	 transfer: 0.0120	 finalize: 11.4202
batch bounding time:  1.1706013679504395
Current worst splitting domains [lb, ub] (depth):
[-11.01923,   inf] (55), [-11.00372,   inf] (45), [-11.00362,   inf] (53), [-11.00311,   inf] (45), [-11.00310,   inf] (45), [-11.00228,   inf] (45), [-11.00092,   inf] (51), [-11.00021,   inf] (51), [-10.99964,   inf] (53), [-10.99923,   inf] (57), [-10.99768,   inf] (47), [-10.99642,   inf] (53), [-10.99633,   inf] (47), [-10.99598,   inf] (45), [-10.99476,   inf] (61), [-10.99357,   inf] (53), [-10.99238,   inf] (45), [-10.99065,   inf] (45), [-10.98947,   inf] (51), [-10.98915,   inf] (51), 
length of domains: 34816
Total time: 1.9858	 pickout: 0.2788	 decision: 0.3006	 get_bound: 1.1746	 add_domain: 0.2317
Current lb:-11.019229888916016
69568 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 70.3704526424408

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 18] [4, 49] [4, 18] [4, 6] [4, 18] [4, 18] [4, 49] [3, 31] [4, 18] [4, 49] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21726.498046875 with beta sum per layer: [0.16526266932487488, 3.6165499687194824, 36.48455047607422, 720.9949340820312, 4031.236083984375]
alpha/beta optimization time: 0.42784714698791504
This batch time : update_bounds func: 1.1049	 prepare: 0.4315	 bound: 0.4284	 transfer: 0.0121	 finalize: 0.2257
Accumulated time: update_bounds func: 38.4026	 prepare: 10.5731	 bound: 14.8002	 transfer: 0.0121	 finalize: 11.6458
batch bounding time:  1.107001543045044
Current worst splitting domains [lb, ub] (depth):
[-10.99642,   inf] (55), [-10.99357,   inf] (55), [-10.99277,   inf] (57), [-10.98947,   inf] (53), [-10.98747,   inf] (43), [-10.98735,   inf] (55), [-10.98691,   inf] (55), [-10.98684,   inf] (43), [-10.98599,   inf] (45), [-10.98594,   inf] (45), [-10.98456,   inf] (55), [-10.98386,   inf] (47), [-10.98291,   inf] (45), [-10.98215,   inf] (55), [-10.98196,   inf] (43), [-10.98036,   inf] (45), [-10.98032,   inf] (47), [-10.97822,   inf] (45), [-10.97795,   inf] (49), [-10.97754,   inf] (43), 
length of domains: 35840
Total time: 3.0243	 pickout: 0.3082	 decision: 1.3915	 get_bound: 1.1106	 add_domain: 0.2140
Current lb:-10.996421813964844
71616 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 73.42885971069336

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 92] [4, 18] [4, 35] [4, 18] [4, 50] [4, 18] [4, 35] [4, 50] [4, 35] [4, 4] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21694.462890625 with beta sum per layer: [0.14982673525810242, 1.6837133169174194, 26.379417419433594, 732.3653564453125, 4080.392333984375]
alpha/beta optimization time: 0.3657078742980957
This batch time : update_bounds func: 0.8874	 prepare: 0.2749	 bound: 0.3662	 transfer: 0.0121	 finalize: 0.2271
Accumulated time: update_bounds func: 39.2900	 prepare: 10.8480	 bound: 15.1663	 transfer: 0.0121	 finalize: 11.8729
batch bounding time:  0.8899827003479004
Current worst splitting domains [lb, ub] (depth):
[-10.98735,   inf] (57), [-10.98196,   inf] (45), [-10.97745,   inf] (47), [-10.97040,   inf] (53), [-10.96965,   inf] (53), [-10.96963,   inf] (45), [-10.96906,   inf] (45), [-10.96829,   inf] (55), [-10.96805,   inf] (45), [-10.96799,   inf] (45), [-10.96672,   inf] (51), [-10.96666,   inf] (45), [-10.96605,   inf] (45), [-10.96573,   inf] (45), [-10.96533,   inf] (45), [-10.96506,   inf] (45), [-10.96414,   inf] (47), [-10.96348,   inf] (57), [-10.96312,   inf] (45), [-10.96111,   inf] (43), 
length of domains: 36864
Total time: 1.5683	 pickout: 0.2165	 decision: 0.2436	 get_bound: 0.8939	 add_domain: 0.2143
Current lb:-10.987354278564453
73664 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 75.03073334693909

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 38] [4, 6] [4, 6] [4, 18] [4, 50] [3, 53] [4, 18] [1, 81] [4, 18] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21672.84765625 with beta sum per layer: [0.0, 2.352078437805176, 19.57466697692871, 739.6624755859375, 4038.641357421875]
alpha/beta optimization time: 0.3723423480987549
This batch time : update_bounds func: 0.8834	 prepare: 0.2731	 bound: 0.3728	 transfer: 0.0120	 finalize: 0.2182
Accumulated time: update_bounds func: 40.1735	 prepare: 11.1210	 bound: 15.5391	 transfer: 0.0120	 finalize: 12.0911
batch bounding time:  0.8857154846191406
Current worst splitting domains [lb, ub] (depth):
[-10.96829,   inf] (57), [-10.96558,   inf] (55), [-10.95684,   inf] (47), [-10.95666,   inf] (45), [-10.95485,   inf] (49), [-10.95452,   inf] (53), [-10.95178,   inf] (47), [-10.95069,   inf] (47), [-10.95061,   inf] (43), [-10.94999,   inf] (47), [-10.94981,   inf] (45), [-10.94962,   inf] (43), [-10.94953,   inf] (53), [-10.94819,   inf] (45), [-10.94757,   inf] (49), [-10.94669,   inf] (51), [-10.94631,   inf] (49), [-10.94565,   inf] (45), [-10.94544,   inf] (49), [-10.94397,   inf] (47), 
length of domains: 37888
Total time: 2.8072	 pickout: 0.2138	 decision: 0.2444	 get_bound: 0.8893	 add_domain: 1.4597
Current lb:-10.968291282653809
75712 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 77.86984753608704

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 35] [4, 35] [4, 18] [3, 38] [4, 35] [4, 18] [4, 18] [3, 90] [2, 99] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21627.10546875 with beta sum per layer: [0.0, 1.1622183322906494, 33.59567642211914, 739.4293212890625, 4042.384765625]
alpha/beta optimization time: 0.36893296241760254
This batch time : update_bounds func: 0.8869	 prepare: 0.2753	 bound: 0.3694	 transfer: 0.0123	 finalize: 0.2227
Accumulated time: update_bounds func: 41.0603	 prepare: 11.3963	 bound: 15.9086	 transfer: 0.0123	 finalize: 12.3138
batch bounding time:  0.889193058013916
Current worst splitting domains [lb, ub] (depth):
[-10.94999,   inf] (49), [-10.94669,   inf] (53), [-10.94254,   inf] (45), [-10.94253,   inf] (47), [-10.94205,   inf] (47), [-10.94039,   inf] (53), [-10.94036,   inf] (51), [-10.94016,   inf] (47), [-10.93985,   inf] (47), [-10.93907,   inf] (49), [-10.93879,   inf] (51), [-10.93875,   inf] (45), [-10.93814,   inf] (45), [-10.93767,   inf] (49), [-10.93643,   inf] (49), [-10.93494,   inf] (55), [-10.93319,   inf] (43), [-10.93264,   inf] (49), [-10.93218,   inf] (55), [-10.93209,   inf] (43), 
length of domains: 38912
Total time: 1.5598	 pickout: 0.2041	 decision: 0.2497	 get_bound: 0.8929	 add_domain: 0.2130
Current lb:-10.949994087219238
77760 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 79.46195697784424

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 6] [4, 35] [2, 99] [4, 18] [4, 35] [3, 38] [4, 18] [4, 49] [3, 92] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21597.11328125 with beta sum per layer: [0.15293586254119873, 2.4211583137512207, 24.855052947998047, 771.0902099609375, 4065.22607421875]
alpha/beta optimization time: 0.3695058822631836
This batch time : update_bounds func: 0.8983	 prepare: 0.2835	 bound: 0.3700	 transfer: 0.0119	 finalize: 0.2257
Accumulated time: update_bounds func: 41.9586	 prepare: 11.6798	 bound: 16.2786	 transfer: 0.0119	 finalize: 12.5395
batch bounding time:  0.9005708694458008
Current worst splitting domains [lb, ub] (depth):
[-10.94254,   inf] (47), [-10.94039,   inf] (55), [-10.93879,   inf] (53), [-10.93264,   inf] (51), [-10.93218,   inf] (57), [-10.92662,   inf] (47), [-10.92649,   inf] (45), [-10.92620,   inf] (43), [-10.92446,   inf] (45), [-10.92402,   inf] (53), [-10.92359,   inf] (47), [-10.92351,   inf] (47), [-10.92337,   inf] (49), [-10.92311,   inf] (45), [-10.92241,   inf] (61), [-10.92228,   inf] (45), [-10.92191,   inf] (45), [-10.92164,   inf] (47), [-10.91975,   inf] (53), [-10.91885,   inf] (43), 
length of domains: 39936
Total time: 1.5951	 pickout: 0.2270	 decision: 0.2475	 get_bound: 0.9043	 add_domain: 0.2163
Current lb:-10.94253921508789
79808 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 81.08953309059143

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [4, 35] [4, 35] [4, 35] [4, 7] [3, 58] [3, 8] [3, 90] [4, 18] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21573.29296875 with beta sum per layer: [0.1459801346063614, 2.952549457550049, 23.759719848632812, 751.3743896484375, 4037.58251953125]
alpha/beta optimization time: 0.37070465087890625
This batch time : update_bounds func: 2.1605	 prepare: 0.2799	 bound: 0.3712	 transfer: 0.0118	 finalize: 1.4908
Accumulated time: update_bounds func: 44.1192	 prepare: 11.9597	 bound: 16.6497	 transfer: 0.0118	 finalize: 14.0303
batch bounding time:  2.1633074283599854
Current worst splitting domains [lb, ub] (depth):
[-10.91760,   inf] (57), [-10.91501,   inf] (55), [-10.91489,   inf] (53), [-10.91374,   inf] (49), [-10.91325,   inf] (61), [-10.91129,   inf] (45), [-10.91128,   inf] (45), [-10.91088,   inf] (43), [-10.91058,   inf] (41), [-10.91028,   inf] (53), [-10.90786,   inf] (45), [-10.90747,   inf] (47), [-10.90661,   inf] (55), [-10.90633,   inf] (55), [-10.90579,   inf] (55), [-10.90548,   inf] (47), [-10.90535,   inf] (59), [-10.90445,   inf] (43), [-10.90349,   inf] (47), [-10.90306,   inf] (47), 
length of domains: 40960
Total time: 2.8402	 pickout: 0.2108	 decision: 0.2476	 get_bound: 2.1674	 add_domain: 0.2144
Current lb:-10.91759967803955
81856 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 83.96209621429443

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 18] [4, 18] [3, 58] [0, 2] [4, 49] [4, 6] [4, 50] [3, 90] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21557.755859375 with beta sum per layer: [0.5887854695320129, 2.3575377464294434, 20.25109100341797, 731.9508056640625, 4072.403564453125]
alpha/beta optimization time: 0.36870670318603516
This batch time : update_bounds func: 0.8891	 prepare: 0.2785	 bound: 0.3692	 transfer: 0.0121	 finalize: 0.2220
Accumulated time: update_bounds func: 45.0083	 prepare: 12.2382	 bound: 17.0189	 transfer: 0.0121	 finalize: 14.2523
batch bounding time:  0.8913683891296387
Current worst splitting domains [lb, ub] (depth):
[-10.91501,   inf] (57), [-10.90633,   inf] (57), [-10.90579,   inf] (57), [-10.89975,   inf] (49), [-10.89937,   inf] (53), [-10.89928,   inf] (47), [-10.89927,   inf] (49), [-10.89878,   inf] (49), [-10.89863,   inf] (45), [-10.89788,   inf] (43), [-10.89718,   inf] (43), [-10.89718,   inf] (47), [-10.89616,   inf] (55), [-10.89613,   inf] (51), [-10.89451,   inf] (45), [-10.89405,   inf] (47), [-10.89346,   inf] (49), [-10.89313,   inf] (43), [-10.89256,   inf] (43), [-10.89241,   inf] (47), 
length of domains: 41984
Total time: 1.5630	 pickout: 0.2017	 decision: 0.2510	 get_bound: 0.8951	 add_domain: 0.2152
Current lb:-10.915005683898926
83904 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 85.55757474899292

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 38] [4, 18] [3, 38] [4, 49] [4, 35] [3, 53] [4, 6] [3, 38] [4, 35] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21535.46875 with beta sum per layer: [0.0, 3.0779049396514893, 26.34938621520996, 752.780029296875, 4023.340087890625]
alpha/beta optimization time: 0.3771207332611084
This batch time : update_bounds func: 0.8984	 prepare: 0.2788	 bound: 0.3776	 transfer: 0.0122	 finalize: 0.2224
Accumulated time: update_bounds func: 45.9067	 prepare: 12.5169	 bound: 17.3965	 transfer: 0.0122	 finalize: 14.4747
batch bounding time:  0.900925874710083
Current worst splitting domains [lb, ub] (depth):
[-10.90579,   inf] (59), [-10.88694,   inf] (43), [-10.88691,   inf] (57), [-10.88586,   inf] (45), [-10.88571,   inf] (43), [-10.88557,   inf] (45), [-10.88549,   inf] (55), [-10.88413,   inf] (53), [-10.88386,   inf] (47), [-10.88376,   inf] (43), [-10.88336,   inf] (55), [-10.88327,   inf] (53), [-10.88260,   inf] (51), [-10.88132,   inf] (55), [-10.88130,   inf] (43), [-10.88126,   inf] (49), [-10.88050,   inf] (45), [-10.88044,   inf] (47), [-10.88020,   inf] (43), [-10.88002,   inf] (45), 
length of domains: 43008
Total time: 1.5737	 pickout: 0.2018	 decision: 0.2514	 get_bound: 0.9047	 add_domain: 0.2157
Current lb:-10.905794143676758
85952 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 87.16332149505615

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 53] [4, 18] [3, 38] [4, 18] [3, 92] [4, 18] [4, 7] [4, 35] [4, 18] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21507.890625 with beta sum per layer: [0.0, 0.668609619140625, 22.30682373046875, 715.5990600585938, 4158.474609375]
alpha/beta optimization time: 0.3722686767578125
This batch time : update_bounds func: 0.9005	 prepare: 0.2841	 bound: 0.3728	 transfer: 0.0118	 finalize: 0.2244
Accumulated time: update_bounds func: 46.8072	 prepare: 12.8011	 bound: 17.7693	 transfer: 0.0118	 finalize: 14.6991
batch bounding time:  0.9027352333068848
Current worst splitting domains [lb, ub] (depth):
[-10.88336,   inf] (57), [-10.88132,   inf] (57), [-10.87567,   inf] (53), [-10.87446,   inf] (47), [-10.87427,   inf] (49), [-10.87392,   inf] (47), [-10.87226,   inf] (49), [-10.87209,   inf] (53), [-10.87196,   inf] (55), [-10.87106,   inf] (45), [-10.87066,   inf] (45), [-10.86944,   inf] (49), [-10.86840,   inf] (53), [-10.86753,   inf] (47), [-10.86716,   inf] (45), [-10.86588,   inf] (49), [-10.86516,   inf] (53), [-10.86504,   inf] (47), [-10.86471,   inf] (45), [-10.86461,   inf] (45), 
length of domains: 44032
Total time: 2.9424	 pickout: 0.1991	 decision: 0.2498	 get_bound: 0.9065	 add_domain: 1.5870
Current lb:-10.883355140686035
88000 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 90.13803672790527

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 18] [4, 18] [4, 18] [4, 35] [4, 18] [3, 65] [1, 81] [4, 49] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21478.43359375 with beta sum per layer: [0.0, 1.1980060338974, 19.45221710205078, 734.7789916992188, 4080.60205078125]
alpha/beta optimization time: 0.370835542678833
This batch time : update_bounds func: 0.8931	 prepare: 0.2782	 bound: 0.3713	 transfer: 0.0122	 finalize: 0.2236
Accumulated time: update_bounds func: 47.7003	 prepare: 13.0793	 bound: 18.1406	 transfer: 0.0122	 finalize: 14.9228
batch bounding time:  0.8953568935394287
Current worst splitting domains [lb, ub] (depth):
[-10.87566,   inf] (55), [-10.87209,   inf] (55), [-10.86338,   inf] (45), [-10.86318,   inf] (43), [-10.86294,   inf] (45), [-10.86285,   inf] (53), [-10.86268,   inf] (47), [-10.86219,   inf] (47), [-10.86189,   inf] (45), [-10.86185,   inf] (43), [-10.86149,   inf] (61), [-10.86125,   inf] (45), [-10.85989,   inf] (47), [-10.85787,   inf] (47), [-10.85784,   inf] (45), [-10.85648,   inf] (45), [-10.85585,   inf] (45), [-10.85535,   inf] (47), [-10.85367,   inf] (47), [-10.85325,   inf] (51), 
length of domains: 45056
Total time: 1.5609	 pickout: 0.1969	 decision: 0.2510	 get_bound: 0.8991	 add_domain: 0.2138
Current lb:-10.875664710998535
90048 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 91.73474431037903

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [3, 58] [4, 35] [4, 18] [4, 18] [1, 81] [4, 18] [4, 50] [4, 18] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21455.2890625 with beta sum per layer: [0.3433973789215088, 3.04013991355896, 32.71880340576172, 739.3355102539062, 4122.1689453125]
alpha/beta optimization time: 0.37203431129455566
This batch time : update_bounds func: 0.8948	 prepare: 0.2804	 bound: 0.3725	 transfer: 0.0121	 finalize: 0.2225
Accumulated time: update_bounds func: 48.5952	 prepare: 13.3597	 bound: 18.5131	 transfer: 0.0121	 finalize: 15.1453
batch bounding time:  0.8972229957580566
Current worst splitting domains [lb, ub] (depth):
[-10.87209,   inf] (57), [-10.86285,   inf] (55), [-10.85120,   inf] (47), [-10.85109,   inf] (61), [-10.85077,   inf] (47), [-10.85070,   inf] (55), [-10.85047,   inf] (45), [-10.85020,   inf] (47), [-10.85002,   inf] (47), [-10.84928,   inf] (49), [-10.84814,   inf] (47), [-10.84776,   inf] (43), [-10.84728,   inf] (45), [-10.84703,   inf] (55), [-10.84702,   inf] (45), [-10.84541,   inf] (47), [-10.84539,   inf] (41), [-10.84486,   inf] (45), [-10.84425,   inf] (45), [-10.84417,   inf] (55), 
length of domains: 46080
Total time: 1.5681	 pickout: 0.2008	 decision: 0.2502	 get_bound: 0.9010	 add_domain: 0.2162
Current lb:-10.872087478637695
92096 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 93.33603596687317

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 99] [4, 7] [4, 35] [3, 26] [4, 6] [4, 35] [4, 81] [4, 6] [4, 35] [3, 15] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21430.92578125 with beta sum per layer: [0.0, 1.808100700378418, 27.248733520507812, 748.90478515625, 4164.14404296875]
alpha/beta optimization time: 0.3695518970489502
This batch time : update_bounds func: 0.8905	 prepare: 0.2797	 bound: 0.3700	 transfer: 0.0121	 finalize: 0.2215
Accumulated time: update_bounds func: 49.4857	 prepare: 13.6394	 bound: 18.8831	 transfer: 0.0121	 finalize: 15.3667
batch bounding time:  0.8925764560699463
Current worst splitting domains [lb, ub] (depth):
[-10.87209,   inf] (59), [-10.84703,   inf] (57), [-10.83932,   inf] (47), [-10.83854,   inf] (47), [-10.83839,   inf] (53), [-10.83830,   inf] (43), [-10.83830,   inf] (43), [-10.83786,   inf] (45), [-10.83778,   inf] (49), [-10.83706,   inf] (47), [-10.83695,   inf] (43), [-10.83671,   inf] (53), [-10.83639,   inf] (55), [-10.83524,   inf] (63), [-10.83516,   inf] (57), [-10.83418,   inf] (43), [-10.83415,   inf] (45), [-10.83408,   inf] (41), [-10.83372,   inf] (57), [-10.83350,   inf] (57), 
length of domains: 47104
Total time: 1.5618	 pickout: 0.2011	 decision: 0.2460	 get_bound: 0.8962	 add_domain: 0.2185
Current lb:-10.872087478637695
94144 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 94.93140506744385

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 6] [4, 18] [4, 18] [4, 18] [4, 50] [3, 90] [4, 18] [4, 7] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21406.46484375 with beta sum per layer: [0.5314845442771912, 0.5874859094619751, 27.338930130004883, 759.1201171875, 4221.0244140625]
alpha/beta optimization time: 0.39140748977661133
This batch time : update_bounds func: 0.9103	 prepare: 0.2762	 bound: 0.3919	 transfer: 0.0119	 finalize: 0.2233
Accumulated time: update_bounds func: 50.3960	 prepare: 13.9156	 bound: 19.2751	 transfer: 0.0119	 finalize: 15.5900
batch bounding time:  0.9125127792358398
Current worst splitting domains [lb, ub] (depth):
[-10.83350,   inf] (59), [-10.83132,   inf] (55), [-10.82838,   inf] (45), [-10.82754,   inf] (45), [-10.82549,   inf] (45), [-10.82547,   inf] (45), [-10.82531,   inf] (63), [-10.82417,   inf] (45), [-10.82396,   inf] (45), [-10.82366,   inf] (47), [-10.82249,   inf] (45), [-10.82218,   inf] (45), [-10.82183,   inf] (51), [-10.82110,   inf] (43), [-10.82093,   inf] (51), [-10.81953,   inf] (47), [-10.81892,   inf] (51), [-10.81886,   inf] (45), [-10.81831,   inf] (45), [-10.81825,   inf] (45), 
length of domains: 48128
Total time: 3.0582	 pickout: 0.2001	 decision: 1.7275	 get_bound: 0.9162	 add_domain: 0.2144
Current lb:-10.833504676818848
96192 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 98.02217626571655

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 99] [4, 49] [4, 50] [4, 18] [4, 6] [4, 49] [3, 26] [4, 6] [4, 35] [3, 53] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21387.748046875 with beta sum per layer: [0.5023485422134399, 2.95975399017334, 30.64211082458496, 751.437255859375, 4142.4765625]
alpha/beta optimization time: 0.3703145980834961
This batch time : update_bounds func: 0.8934	 prepare: 0.2796	 bound: 0.3708	 transfer: 0.0122	 finalize: 0.2232
Accumulated time: update_bounds func: 51.2894	 prepare: 14.1952	 bound: 19.6459	 transfer: 0.0122	 finalize: 15.8132
batch bounding time:  0.8958477973937988
Current worst splitting domains [lb, ub] (depth):
[-10.83350,   inf] (61), [-10.81820,   inf] (53), [-10.81735,   inf] (49), [-10.81718,   inf] (47), [-10.81670,   inf] (57), [-10.81605,   inf] (43), [-10.81541,   inf] (45), [-10.81503,   inf] (57), [-10.81500,   inf] (45), [-10.81474,   inf] (47), [-10.81457,   inf] (43), [-10.81445,   inf] (47), [-10.81441,   inf] (49), [-10.81411,   inf] (47), [-10.81372,   inf] (53), [-10.81313,   inf] (45), [-10.81300,   inf] (47), [-10.81290,   inf] (45), [-10.81259,   inf] (47), [-10.81213,   inf] (53), 
length of domains: 49152
Total time: 1.5607	 pickout: 0.1955	 decision: 0.2478	 get_bound: 0.8998	 add_domain: 0.2176
Current lb:-10.833504676818848
98240 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 99.61493420600891

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 18] [4, 49] [4, 35] [2, 28] [4, 18] [4, 18] [4, 7] [4, 18] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21376.859375 with beta sum per layer: [0.15905186533927917, 1.1814730167388916, 25.909404754638672, 722.9510498046875, 4205.193359375]
alpha/beta optimization time: 0.3686180114746094
This batch time : update_bounds func: 0.8901	 prepare: 0.2766	 bound: 0.3691	 transfer: 0.0118	 finalize: 0.2251
Accumulated time: update_bounds func: 52.1795	 prepare: 14.4718	 bound: 20.0149	 transfer: 0.0118	 finalize: 16.0383
batch bounding time:  0.8924033641815186
Current worst splitting domains [lb, ub] (depth):
[-10.81670,   inf] (59), [-10.81500,   inf] (55), [-10.81372,   inf] (55), [-10.80672,   inf] (49), [-10.80629,   inf] (45), [-10.80553,   inf] (45), [-10.80528,   inf] (47), [-10.80518,   inf] (51), [-10.80467,   inf] (59), [-10.80224,   inf] (49), [-10.80189,   inf] (47), [-10.80067,   inf] (45), [-10.79960,   inf] (47), [-10.79932,   inf] (53), [-10.79910,   inf] (49), [-10.79893,   inf] (63), [-10.79884,   inf] (45), [-10.79766,   inf] (47), [-10.79689,   inf] (45), [-10.79686,   inf] (43), 
length of domains: 50176
Total time: 1.5528	 pickout: 0.1936	 decision: 0.2455	 get_bound: 0.8961	 add_domain: 0.2176
Current lb:-10.816697120666504
100288 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 101.20069861412048

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 35] [4, 7] [3, 92] [4, 18] [4, 18] [3, 53] [4, 49] [3, 38] [3, 58] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21342.220703125 with beta sum per layer: [0.4683305323123932, 1.2675838470458984, 28.36424446105957, 766.4443359375, 4142.30712890625]
alpha/beta optimization time: 0.3685431480407715
This batch time : update_bounds func: 0.8934	 prepare: 0.2828	 bound: 0.3690	 transfer: 0.0123	 finalize: 0.2216
Accumulated time: update_bounds func: 53.0729	 prepare: 14.7546	 bound: 20.3840	 transfer: 0.0123	 finalize: 16.2599
batch bounding time:  0.8954720497131348
Current worst splitting domains [lb, ub] (depth):
[-10.80467,   inf] (61), [-10.79932,   inf] (55), [-10.79646,   inf] (45), [-10.79616,   inf] (53), [-10.79583,   inf] (47), [-10.79440,   inf] (51), [-10.79403,   inf] (45), [-10.79383,   inf] (51), [-10.79379,   inf] (49), [-10.79319,   inf] (47), [-10.79277,   inf] (45), [-10.79268,   inf] (45), [-10.79134,   inf] (45), [-10.79115,   inf] (55), [-10.79088,   inf] (61), [-10.79086,   inf] (45), [-10.78869,   inf] (49), [-10.78682,   inf] (47), [-10.78674,   inf] (47), [-10.78653,   inf] (45), 
length of domains: 51200
Total time: 3.1578	 pickout: 0.1964	 decision: 0.2472	 get_bound: 0.8990	 add_domain: 1.8151
Current lb:-10.804668426513672
102336 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 104.39100432395935

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 7] [4, 6] [4, 18] [4, 6] [3, 51] [3, 70] [4, 18] [4, 35] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21328.91796875 with beta sum per layer: [0.14620958268642426, 2.391148805618286, 31.10784149169922, 805.416015625, 4094.628173828125]
alpha/beta optimization time: 0.36718058586120605
This batch time : update_bounds func: 0.8895	 prepare: 0.2800	 bound: 0.3677	 transfer: 0.0121	 finalize: 0.2225
Accumulated time: update_bounds func: 53.9624	 prepare: 15.0346	 bound: 20.7517	 transfer: 0.0121	 finalize: 16.4824
batch bounding time:  0.8915314674377441
Current worst splitting domains [lb, ub] (depth):
[-10.79616,   inf] (55), [-10.79115,   inf] (57), [-10.78584,   inf] (49), [-10.78533,   inf] (61), [-10.78458,   inf] (41), [-10.78453,   inf] (47), [-10.78404,   inf] (47), [-10.78358,   inf] (59), [-10.78292,   inf] (45), [-10.78284,   inf] (45), [-10.78281,   inf] (49), [-10.78265,   inf] (61), [-10.78187,   inf] (49), [-10.78104,   inf] (53), [-10.78092,   inf] (51), [-10.78079,   inf] (47), [-10.78073,   inf] (45), [-10.78031,   inf] (57), [-10.77963,   inf] (57), [-10.77961,   inf] (63), 
length of domains: 52224
Total time: 1.5526	 pickout: 0.1954	 decision: 0.2440	 get_bound: 0.8950	 add_domain: 0.2182
Current lb:-10.796161651611328
104384 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 105.97640466690063

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [4, 7] [4, 7] [3, 26] [3, 92] [4, 35] [4, 6] [4, 49] [4, 4] [3, 58] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21301.48046875 with beta sum per layer: [0.14370368421077728, 0.6218918561935425, 23.385238647460938, 783.59765625, 4111.44921875]
alpha/beta optimization time: 0.3821554183959961
This batch time : update_bounds func: 0.9060	 prepare: 0.2784	 bound: 0.3827	 transfer: 0.0126	 finalize: 0.2258
Accumulated time: update_bounds func: 54.8684	 prepare: 15.3130	 bound: 21.1343	 transfer: 0.0126	 finalize: 16.7082
batch bounding time:  0.9085235595703125
Current worst splitting domains [lb, ub] (depth):
[-10.77963,   inf] (59), [-10.77637,   inf] (57), [-10.77635,   inf] (51), [-10.77528,   inf] (43), [-10.77511,   inf] (45), [-10.77439,   inf] (45), [-10.77426,   inf] (45), [-10.77410,   inf] (47), [-10.77362,   inf] (51), [-10.77236,   inf] (45), [-10.77179,   inf] (45), [-10.77144,   inf] (47), [-10.77123,   inf] (47), [-10.77033,   inf] (45), [-10.76982,   inf] (47), [-10.76947,   inf] (45), [-10.76946,   inf] (47), [-10.76726,   inf] (49), [-10.76689,   inf] (43), [-10.76687,   inf] (45), 
length of domains: 53248
Total time: 1.5657	 pickout: 0.1929	 decision: 0.2395	 get_bound: 0.9124	 add_domain: 0.2208
Current lb:-10.779631614685059
106432 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 107.57521963119507

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 28] [4, 18] [4, 49] [4, 6] [4, 35] [4, 18] [4, 18] [4, 18] [3, 58] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21284.546875 with beta sum per layer: [0.46792876720428467, 2.430222511291504, 31.572004318237305, 836.7364501953125, 4085.726806640625]
alpha/beta optimization time: 0.38111162185668945
This batch time : update_bounds func: 0.9139	 prepare: 0.2856	 bound: 0.3816	 transfer: 0.0122	 finalize: 0.2274
Accumulated time: update_bounds func: 55.7823	 prepare: 15.5986	 bound: 21.5159	 transfer: 0.0122	 finalize: 16.9356
batch bounding time:  0.9164001941680908
Current worst splitting domains [lb, ub] (depth):
[-10.77963,   inf] (61), [-10.76646,   inf] (47), [-10.76634,   inf] (51), [-10.76524,   inf] (45), [-10.76508,   inf] (45), [-10.76456,   inf] (55), [-10.76392,   inf] (49), [-10.76366,   inf] (45), [-10.76363,   inf] (49), [-10.76354,   inf] (45), [-10.76345,   inf] (45), [-10.76326,   inf] (45), [-10.76320,   inf] (49), [-10.76293,   inf] (49), [-10.76263,   inf] (51), [-10.76260,   inf] (41), [-10.76254,   inf] (45), [-10.76236,   inf] (49), [-10.76232,   inf] (45), [-10.76210,   inf] (45), 
length of domains: 54272
Total time: 1.6139	 pickout: 0.1959	 decision: 0.2488	 get_bound: 0.9200	 add_domain: 0.2491
Current lb:-10.779631614685059
108480 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 109.23489761352539

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 92] [4, 18] [3, 15] [4, 6] [4, 35] [3, 38] [3, 90] [4, 6] [4, 6] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21265.498046875 with beta sum per layer: [0.14769068360328674, 1.8002783060073853, 28.54767608642578, 768.7254028320312, 4206.947265625]
alpha/beta optimization time: 0.3796062469482422
This batch time : update_bounds func: 0.9096	 prepare: 0.2862	 bound: 0.3801	 transfer: 0.0123	 finalize: 0.2231
Accumulated time: update_bounds func: 56.6919	 prepare: 15.8847	 bound: 21.8960	 transfer: 0.0123	 finalize: 17.1587
batch bounding time:  0.9117136001586914
Current worst splitting domains [lb, ub] (depth):
[-10.77963,   inf] (63), [-10.76076,   inf] (57), [-10.75702,   inf] (59), [-10.75693,   inf] (57), [-10.75641,   inf] (43), [-10.75518,   inf] (47), [-10.75373,   inf] (49), [-10.75373,   inf] (43), [-10.75342,   inf] (51), [-10.75297,   inf] (47), [-10.75196,   inf] (47), [-10.75131,   inf] (45), [-10.75106,   inf] (47), [-10.75074,   inf] (49), [-10.75040,   inf] (51), [-10.75020,   inf] (45), [-10.75020,   inf] (49), [-10.75015,   inf] (45), [-10.75011,   inf] (45), [-10.75006,   inf] (51), 
length of domains: 55296
Total time: 3.3397	 pickout: 0.2077	 decision: 0.2519	 get_bound: 0.9152	 add_domain: 1.9647
Current lb:-10.779631614685059
110528 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 112.62244606018066

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 2] [2, 99] [2, 28] [4, 49] [4, 49] [4, 18] [4, 6] [4, 50] [4, 35] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21255.71484375 with beta sum per layer: [0.44209104776382446, 1.1218202114105225, 28.035850524902344, 772.852294921875, 4106.0517578125]
alpha/beta optimization time: 0.3719608783721924
This batch time : update_bounds func: 0.9082	 prepare: 0.2917	 bound: 0.3725	 transfer: 0.0121	 finalize: 0.2246
Accumulated time: update_bounds func: 57.6001	 prepare: 16.1765	 bound: 22.2685	 transfer: 0.0121	 finalize: 17.3833
batch bounding time:  0.9104628562927246
Current worst splitting domains [lb, ub] (depth):
[-10.76076,   inf] (59), [-10.75702,   inf] (61), [-10.74738,   inf] (47), [-10.74670,   inf] (47), [-10.74670,   inf] (45), [-10.74620,   inf] (49), [-10.74562,   inf] (45), [-10.74463,   inf] (43), [-10.74397,   inf] (49), [-10.74371,   inf] (49), [-10.74371,   inf] (51), [-10.74341,   inf] (49), [-10.74255,   inf] (57), [-10.74224,   inf] (45), [-10.74189,   inf] (55), [-10.74169,   inf] (45), [-10.74158,   inf] (47), [-10.74152,   inf] (47), [-10.74129,   inf] (53), [-10.74121,   inf] (47), 
length of domains: 56320
Total time: 1.5936	 pickout: 0.2073	 decision: 0.2553	 get_bound: 0.9142	 add_domain: 0.2169
Current lb:-10.760762214660645
112576 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 114.25480389595032

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 7] [2, 99] [4, 18] [4, 18] [4, 49] [4, 18] [4, 50] [4, 7] [3, 58] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21234.6875 with beta sum per layer: [0.30055394768714905, 2.9894657135009766, 29.856800079345703, 784.6964111328125, 4183.6923828125]
alpha/beta optimization time: 0.36973071098327637
This batch time : update_bounds func: 0.9032	 prepare: 0.2890	 bound: 0.3702	 transfer: 0.0119	 finalize: 0.2247
Accumulated time: update_bounds func: 58.5033	 prepare: 16.4655	 bound: 22.6387	 transfer: 0.0119	 finalize: 17.6081
batch bounding time:  0.9054446220397949
Current worst splitting domains [lb, ub] (depth):
[-10.74738,   inf] (49), [-10.74189,   inf] (57), [-10.74129,   inf] (55), [-10.74010,   inf] (59), [-10.73874,   inf] (57), [-10.73824,   inf] (49), [-10.73816,   inf] (47), [-10.73723,   inf] (49), [-10.73675,   inf] (45), [-10.73674,   inf] (45), [-10.73670,   inf] (47), [-10.73617,   inf] (57), [-10.73592,   inf] (49), [-10.73573,   inf] (49), [-10.73572,   inf] (45), [-10.73506,   inf] (47), [-10.73501,   inf] (49), [-10.73489,   inf] (49), [-10.73487,   inf] (47), [-10.73430,   inf] (59), 
length of domains: 57344
Total time: 1.5831	 pickout: 0.2022	 decision: 0.2522	 get_bound: 0.9091	 add_domain: 0.2196
Current lb:-10.7473783493042
114624 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 115.87228155136108

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 49] [4, 7] [3, 38] [2, 99] [4, 6] [3, 73] [4, 49] [4, 49] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21220.142578125 with beta sum per layer: [0.16338816285133362, 2.3395628929138184, 38.544376373291016, 724.980224609375, 4175.6845703125]
alpha/beta optimization time: 0.37508273124694824
This batch time : update_bounds func: 0.9031	 prepare: 0.2825	 bound: 0.3756	 transfer: 0.0122	 finalize: 0.2253
Accumulated time: update_bounds func: 59.4064	 prepare: 16.7480	 bound: 23.0142	 transfer: 0.0122	 finalize: 17.8334
batch bounding time:  0.9053294658660889
Current worst splitting domains [lb, ub] (depth):
[-10.74010,   inf] (61), [-10.73874,   inf] (59), [-10.73617,   inf] (59), [-10.73331,   inf] (57), [-10.72888,   inf] (45), [-10.72867,   inf] (49), [-10.72824,   inf] (49), [-10.72815,   inf] (49), [-10.72793,   inf] (47), [-10.72786,   inf] (47), [-10.72775,   inf] (55), [-10.72738,   inf] (45), [-10.72715,   inf] (45), [-10.72599,   inf] (53), [-10.72591,   inf] (63), [-10.72515,   inf] (45), [-10.72496,   inf] (45), [-10.72474,   inf] (55), [-10.72396,   inf] (49), [-10.72361,   inf] (61), 
length of domains: 58368
Total time: 1.6052	 pickout: 0.2238	 decision: 0.2526	 get_bound: 0.9088	 add_domain: 0.2201
Current lb:-10.74009895324707
116672 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 117.51177930831909

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 49] [4, 7] [2, 99] [4, 6] [4, 6] [4, 49] [3, 53] [4, 18] [3, 53] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21204.93359375 with beta sum per layer: [0.43408578634262085, 4.181895732879639, 26.714221954345703, 785.771728515625, 4189.5673828125]
alpha/beta optimization time: 0.3717038631439209
This batch time : update_bounds func: 0.9009	 prepare: 0.2849	 bound: 0.3722	 transfer: 0.0122	 finalize: 0.2240
Accumulated time: update_bounds func: 60.3073	 prepare: 17.0329	 bound: 23.3865	 transfer: 0.0122	 finalize: 18.0573
batch bounding time:  0.9029881954193115
Current worst splitting domains [lb, ub] (depth):
[-10.73331,   inf] (59), [-10.72474,   inf] (57), [-10.72068,   inf] (45), [-10.71973,   inf] (47), [-10.71965,   inf] (57), [-10.71912,   inf] (47), [-10.71899,   inf] (59), [-10.71894,   inf] (53), [-10.71871,   inf] (47), [-10.71863,   inf] (47), [-10.71842,   inf] (43), [-10.71832,   inf] (47), [-10.71828,   inf] (45), [-10.71822,   inf] (47), [-10.71819,   inf] (49), [-10.71790,   inf] (47), [-10.71777,   inf] (51), [-10.71756,   inf] (49), [-10.71738,   inf] (45), [-10.71730,   inf] (57), 
length of domains: 59392
Total time: 1.5852	 pickout: 0.2086	 decision: 0.2518	 get_bound: 0.9066	 add_domain: 0.2182
Current lb:-10.733314514160156
118720 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 119.13408875465393

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 58] [3, 70] [3, 58] [3, 90] [2, 28] [4, 35] [4, 49] [4, 7] [4, 6] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21188.78515625 with beta sum per layer: [0.0, 2.3124465942382812, 42.637672424316406, 771.0843505859375, 4137.474609375]
alpha/beta optimization time: 0.36970043182373047
This batch time : update_bounds func: 0.9071	 prepare: 0.2933	 bound: 0.3702	 transfer: 0.0123	 finalize: 0.2238
Accumulated time: update_bounds func: 61.2144	 prepare: 17.3262	 bound: 23.7566	 transfer: 0.0123	 finalize: 18.2811
batch bounding time:  0.9094204902648926
Current worst splitting domains [lb, ub] (depth):
[-10.73331,   inf] (61), [-10.72474,   inf] (59), [-10.71965,   inf] (59), [-10.71730,   inf] (59), [-10.71509,   inf] (59), [-10.71362,   inf] (53), [-10.71253,   inf] (57), [-10.71240,   inf] (47), [-10.71168,   inf] (51), [-10.71141,   inf] (45), [-10.71095,   inf] (49), [-10.71084,   inf] (47), [-10.71069,   inf] (43), [-10.71061,   inf] (49), [-10.71059,   inf] (47), [-10.70990,   inf] (47), [-10.70926,   inf] (47), [-10.70924,   inf] (47), [-10.70921,   inf] (43), [-10.70898,   inf] (45), 
length of domains: 60416
Total time: 3.5664	 pickout: 0.2033	 decision: 2.2285	 get_bound: 0.9131	 add_domain: 0.2215
Current lb:-10.733314514160156
120768 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 122.73460626602173

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [2, 99] [0, 2] [2, 99] [3, 26] [3, 58] [2, 99] [4, 35] [4, 49] [3, 90] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21162.4765625 with beta sum per layer: [0.29282766580581665, 2.3989529609680176, 33.997737884521484, 774.8992919921875, 4233.203125]
alpha/beta optimization time: 0.37430429458618164
This batch time : update_bounds func: 0.9067	 prepare: 0.2862	 bound: 0.3748	 transfer: 0.0121	 finalize: 0.2257
Accumulated time: update_bounds func: 62.1211	 prepare: 17.6124	 bound: 24.1314	 transfer: 0.0121	 finalize: 18.5068
batch bounding time:  0.9089071750640869
Current worst splitting domains [lb, ub] (depth):
[-10.72474,   inf] (61), [-10.71965,   inf] (61), [-10.71730,   inf] (61), [-10.71253,   inf] (59), [-10.70653,   inf] (61), [-10.70462,   inf] (61), [-10.70448,   inf] (55), [-10.70429,   inf] (47), [-10.70396,   inf] (47), [-10.70376,   inf] (41), [-10.70362,   inf] (53), [-10.70332,   inf] (51), [-10.70331,   inf] (45), [-10.70306,   inf] (45), [-10.70273,   inf] (45), [-10.70214,   inf] (53), [-10.70212,   inf] (45), [-10.70113,   inf] (49), [-10.70086,   inf] (43), [-10.70040,   inf] (49), 
length of domains: 61440
Total time: 1.6042	 pickout: 0.2110	 decision: 0.2603	 get_bound: 0.9125	 add_domain: 0.2204
Current lb:-10.724742889404297
122816 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 124.37396144866943

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 2] [4, 7] [4, 49] [4, 49] [4, 7] [3, 70] [4, 35] [4, 6] [4, 18] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21152.291015625 with beta sum per layer: [0.789307713508606, 3.3708391189575195, 29.045791625976562, 809.0891723632812, 4158.17138671875]
alpha/beta optimization time: 0.3728804588317871
This batch time : update_bounds func: 0.9093	 prepare: 0.2910	 bound: 0.3733	 transfer: 0.0121	 finalize: 0.2254
Accumulated time: update_bounds func: 63.0304	 prepare: 17.9034	 bound: 24.5047	 transfer: 0.0121	 finalize: 18.7322
batch bounding time:  0.9116368293762207
Current worst splitting domains [lb, ub] (depth):
[-10.69997,   inf] (51), [-10.69615,   inf] (57), [-10.69609,   inf] (49), [-10.69597,   inf] (59), [-10.69588,   inf] (49), [-10.69574,   inf] (47), [-10.69494,   inf] (49), [-10.69448,   inf] (57), [-10.69437,   inf] (55), [-10.69397,   inf] (53), [-10.69392,   inf] (43), [-10.69371,   inf] (47), [-10.69317,   inf] (55), [-10.69290,   inf] (51), [-10.69285,   inf] (45), [-10.69254,   inf] (55), [-10.69236,   inf] (49), [-10.69211,   inf] (47), [-10.69166,   inf] (57), [-10.69053,   inf] (45), 
length of domains: 62464
Total time: 1.5980	 pickout: 0.2162	 decision: 0.2449	 get_bound: 0.9154	 add_domain: 0.2215
Current lb:-10.699973106384277
124864 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 126.00702142715454

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 18] [4, 7] [4, 49] [4, 7] [4, 35] [4, 49] [4, 35] [4, 49] [4, 49] [3, 8] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21134.5625 with beta sum per layer: [0.30233797430992126, 2.4787161350250244, 30.791765213012695, 763.6583862304688, 4266.498046875]
alpha/beta optimization time: 0.370729923248291
This batch time : update_bounds func: 0.9004	 prepare: 0.2864	 bound: 0.3712	 transfer: 0.0120	 finalize: 0.2234
Accumulated time: update_bounds func: 63.9308	 prepare: 18.1898	 bound: 24.8759	 transfer: 0.0120	 finalize: 18.9556
batch bounding time:  0.9028260707855225
Current worst splitting domains [lb, ub] (depth):
[-10.69166,   inf] (59), [-10.68799,   inf] (49), [-10.68727,   inf] (49), [-10.68658,   inf] (51), [-10.68590,   inf] (47), [-10.68590,   inf] (57), [-10.68579,   inf] (53), [-10.68574,   inf] (47), [-10.68540,   inf] (45), [-10.68537,   inf] (53), [-10.68529,   inf] (53), [-10.68478,   inf] (45), [-10.68471,   inf] (45), [-10.68369,   inf] (45), [-10.68363,   inf] (47), [-10.68333,   inf] (47), [-10.68323,   inf] (55), [-10.68320,   inf] (53), [-10.68256,   inf] (45), [-10.68168,   inf] (49), 
length of domains: 63488
Total time: 1.5923	 pickout: 0.2101	 decision: 0.2522	 get_bound: 0.9068	 add_domain: 0.2233
Current lb:-10.691655158996582
126912 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 127.63397860527039

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 8] [4, 7] [4, 18] [4, 35] [3, 40] [3, 38] [4, 35] [4, 18] [4, 18] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21115.95703125 with beta sum per layer: [0.1460854411125183, 2.8408613204956055, 39.33521270751953, 814.97216796875, 4170.5458984375]
alpha/beta optimization time: 0.37442898750305176
This batch time : update_bounds func: 2.9778	 prepare: 0.2832	 bound: 0.3749	 transfer: 0.0122	 finalize: 2.3000
Accumulated time: update_bounds func: 66.9086	 prepare: 18.4730	 bound: 25.2508	 transfer: 0.0122	 finalize: 21.2556
batch bounding time:  2.980421781539917
Current worst splitting domains [lb, ub] (depth):
[-10.69166,   inf] (61), [-10.68590,   inf] (59), [-10.68320,   inf] (55), [-10.68007,   inf] (47), [-10.67976,   inf] (49), [-10.67958,   inf] (45), [-10.67956,   inf] (57), [-10.67956,   inf] (45), [-10.67813,   inf] (49), [-10.67767,   inf] (45), [-10.67759,   inf] (49), [-10.67753,   inf] (51), [-10.67750,   inf] (53), [-10.67733,   inf] (49), [-10.67672,   inf] (55), [-10.67663,   inf] (59), [-10.67579,   inf] (47), [-10.67556,   inf] (43), [-10.67534,   inf] (49), [-10.67427,   inf] (47), 
length of domains: 64512
Total time: 3.6675	 pickout: 0.2129	 decision: 0.2492	 get_bound: 2.9844	 add_domain: 0.2209
Current lb:-10.691655158996582
128960 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 131.3389003276825

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 53] [4, 7] [3, 53] [4, 6] [4, 49] [4, 6] [1, 81] [4, 6] [4, 35] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21099.4453125 with beta sum per layer: [0.3206236958503723, 4.139895439147949, 38.88523864746094, 740.1354370117188, 4270.9384765625]
alpha/beta optimization time: 0.3704204559326172
This batch time : update_bounds func: 0.9131	 prepare: 0.2955	 bound: 0.3709	 transfer: 0.0121	 finalize: 0.2267
Accumulated time: update_bounds func: 67.8216	 prepare: 18.7685	 bound: 25.6218	 transfer: 0.0121	 finalize: 21.4824
batch bounding time:  0.915503740310669
Current worst splitting domains [lb, ub] (depth):
[-10.68320,   inf] (57), [-10.67956,   inf] (59), [-10.67340,   inf] (59), [-10.67254,   inf] (59), [-10.67216,   inf] (51), [-10.67196,   inf] (47), [-10.67186,   inf] (47), [-10.67107,   inf] (45), [-10.67063,   inf] (63), [-10.67033,   inf] (47), [-10.67012,   inf] (45), [-10.66959,   inf] (47), [-10.66949,   inf] (45), [-10.66928,   inf] (59), [-10.66928,   inf] (47), [-10.66886,   inf] (43), [-10.66826,   inf] (51), [-10.66715,   inf] (57), [-10.66714,   inf] (59), [-10.66701,   inf] (45), 
length of domains: 65536
Total time: 1.5964	 pickout: 0.2038	 decision: 0.2518	 get_bound: 0.9194	 add_domain: 0.2213
Current lb:-10.683201789855957
131008 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 132.96924424171448

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 99] [3, 53] [3, 53] [2, 99] [4, 18] [3, 90] [4, 35] [2, 99] [0, 2] [4, 7] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21085.205078125 with beta sum per layer: [0.30069077014923096, 1.6668968200683594, 31.18368911743164, 849.9454345703125, 4210.30859375]
alpha/beta optimization time: 0.3687710762023926
This batch time : update_bounds func: 0.9054	 prepare: 0.2838	 bound: 0.3692	 transfer: 0.0123	 finalize: 0.2338
Accumulated time: update_bounds func: 68.7270	 prepare: 19.0522	 bound: 25.9910	 transfer: 0.0123	 finalize: 21.7161
batch bounding time:  0.9079840183258057
Current worst splitting domains [lb, ub] (depth):
[-10.68320,   inf] (59), [-10.67956,   inf] (61), [-10.67340,   inf] (61), [-10.67254,   inf] (61), [-10.67107,   inf] (47), [-10.66806,   inf] (61), [-10.66715,   inf] (59), [-10.66714,   inf] (61), [-10.66424,   inf] (59), [-10.66414,   inf] (55), [-10.66387,   inf] (63), [-10.66360,   inf] (47), [-10.66336,   inf] (45), [-10.66321,   inf] (45), [-10.66238,   inf] (51), [-10.66192,   inf] (63), [-10.66097,   inf] (43), [-10.66092,   inf] (63), [-10.65997,   inf] (49), [-10.65883,   inf] (47), 
length of domains: 66560
Total time: 1.5952	 pickout: 0.2044	 decision: 0.2445	 get_bound: 0.9121	 add_domain: 0.2341
Current lb:-10.683201789855957
133056 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 134.59919047355652

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [3, 70] [3, 8] [3, 38] [3, 90] [4, 49] [4, 49] [4, 49] [4, 49] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21071.328125 with beta sum per layer: [0.2982429563999176, 1.7315874099731445, 35.428070068359375, 810.793212890625, 4204.486328125]
alpha/beta optimization time: 0.3705759048461914
This batch time : update_bounds func: 0.8988	 prepare: 0.2851	 bound: 0.3711	 transfer: 0.0117	 finalize: 0.2233
Accumulated time: update_bounds func: 69.6259	 prepare: 19.3374	 bound: 26.3620	 transfer: 0.0117	 finalize: 21.9394
batch bounding time:  0.9010879993438721
Current worst splitting domains [lb, ub] (depth):
[-10.67254,   inf] (63), [-10.66489,   inf] (63), [-10.65794,   inf] (57), [-10.65626,   inf] (51), [-10.65595,   inf] (45), [-10.65485,   inf] (57), [-10.65483,   inf] (53), [-10.65470,   inf] (45), [-10.65458,   inf] (47), [-10.65394,   inf] (45), [-10.65389,   inf] (49), [-10.65356,   inf] (45), [-10.65300,   inf] (49), [-10.65264,   inf] (55), [-10.65180,   inf] (57), [-10.65140,   inf] (47), [-10.65137,   inf] (43), [-10.65071,   inf] (45), [-10.65002,   inf] (47), [-10.64987,   inf] (57), 
length of domains: 67584
Total time: 1.5842	 pickout: 0.2055	 decision: 0.2499	 get_bound: 0.9047	 add_domain: 0.2241
Current lb:-10.672540664672852
135104 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 136.22140979766846

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 2] [4, 49] [4, 7] [3, 70] [4, 18] [4, 49] [4, 49] [4, 18] [4, 18] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21059.396484375 with beta sum per layer: [0.14146466553211212, 2.138833999633789, 27.431934356689453, 740.0057373046875, 4290.2255859375]
alpha/beta optimization time: 0.37433481216430664
This batch time : update_bounds func: 0.9243	 prepare: 0.2911	 bound: 0.3748	 transfer: 0.0118	 finalize: 0.2394
Accumulated time: update_bounds func: 70.5502	 prepare: 19.6285	 bound: 26.7369	 transfer: 0.0118	 finalize: 22.1788
batch bounding time:  0.9266388416290283
Current worst splitting domains [lb, ub] (depth):
[-10.65264,   inf] (57), [-10.64836,   inf] (51), [-10.64828,   inf] (45), [-10.64700,   inf] (49), [-10.64674,   inf] (59), [-10.64672,   inf] (47), [-10.64638,   inf] (43), [-10.64625,   inf] (47), [-10.64610,   inf] (47), [-10.64560,   inf] (51), [-10.64485,   inf] (53), [-10.64476,   inf] (47), [-10.64447,   inf] (45), [-10.64390,   inf] (47), [-10.64389,   inf] (51), [-10.64318,   inf] (57), [-10.64306,   inf] (47), [-10.64295,   inf] (47), [-10.64203,   inf] (47), [-10.64166,   inf] (51), 
length of domains: 68608
Total time: 1.6126	 pickout: 0.1966	 decision: 0.2493	 get_bound: 0.9312	 add_domain: 0.2356
Current lb:-10.652637481689453
137152 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 137.88232851028442

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 8] [4, 49] [4, 35] [3, 92] [3, 53] [4, 35] [4, 6] [4, 7] [4, 6] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21032.81640625 with beta sum per layer: [0.4591604471206665, 3.528224468231201, 32.80185317993164, 810.1630859375, 4235.779296875]
alpha/beta optimization time: 0.37270045280456543
This batch time : update_bounds func: 0.9327	 prepare: 0.3040	 bound: 0.3732	 transfer: 0.0121	 finalize: 0.2338
Accumulated time: update_bounds func: 71.4829	 prepare: 19.9325	 bound: 27.1100	 transfer: 0.0121	 finalize: 22.4126
batch bounding time:  0.934891939163208
Current worst splitting domains [lb, ub] (depth):
[-10.65264,   inf] (59), [-10.64674,   inf] (61), [-10.64092,   inf] (43), [-10.64075,   inf] (53), [-10.64060,   inf] (49), [-10.64022,   inf] (47), [-10.64009,   inf] (57), [-10.63993,   inf] (47), [-10.63960,   inf] (61), [-10.63948,   inf] (63), [-10.63924,   inf] (57), [-10.63882,   inf] (49), [-10.63809,   inf] (53), [-10.63739,   inf] (51), [-10.63735,   inf] (45), [-10.63709,   inf] (55), [-10.63696,   inf] (41), [-10.63690,   inf] (55), [-10.63690,   inf] (59), [-10.63645,   inf] (55), 
length of domains: 69632
Total time: 3.8860	 pickout: 0.2080	 decision: 2.5153	 get_bound: 0.9387	 add_domain: 0.2241
Current lb:-10.652637481689453
139200 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 141.80818033218384

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [4, 7] [4, 35] [4, 35] [4, 6] [4, 49] [4, 49] [4, 6] [3, 40] [4, 7] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21029.08984375 with beta sum per layer: [0.9799317717552185, 1.5361326932907104, 29.22772789001465, 830.9005126953125, 4198.546875]
alpha/beta optimization time: 0.36820268630981445
This batch time : update_bounds func: 0.8970	 prepare: 0.2846	 bound: 0.3687	 transfer: 0.0120	 finalize: 0.2251
Accumulated time: update_bounds func: 72.3799	 prepare: 20.2171	 bound: 27.4787	 transfer: 0.0120	 finalize: 22.6377
batch bounding time:  0.8992791175842285
Current worst splitting domains [lb, ub] (depth):
[-10.63690,   inf] (57), [-10.63690,   inf] (61), [-10.63402,   inf] (55), [-10.63369,   inf] (49), [-10.63339,   inf] (45), [-10.63326,   inf] (47), [-10.63314,   inf] (49), [-10.63261,   inf] (47), [-10.63194,   inf] (47), [-10.63111,   inf] (47), [-10.63090,   inf] (49), [-10.63007,   inf] (47), [-10.62980,   inf] (57), [-10.62939,   inf] (49), [-10.62877,   inf] (47), [-10.62860,   inf] (61), [-10.62832,   inf] (47), [-10.62809,   inf] (45), [-10.62797,   inf] (57), [-10.62775,   inf] (45), 
length of domains: 70656
Total time: 1.5773	 pickout: 0.2068	 decision: 0.2459	 get_bound: 0.9037	 add_domain: 0.2209
Current lb:-10.636903762817383
141248 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 143.42365717887878

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 49] [4, 7] [4, 18] [4, 18] [4, 50] [3, 38] [4, 6] [4, 18] [4, 81] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 21007.5078125 with beta sum per layer: [0.0, 3.540639877319336, 30.258285522460938, 810.5823974609375, 4318.3486328125]
alpha/beta optimization time: 0.373140811920166
This batch time : update_bounds func: 0.9357	 prepare: 0.3179	 bound: 0.3737	 transfer: 0.0116	 finalize: 0.2245
Accumulated time: update_bounds func: 73.3156	 prepare: 20.5350	 bound: 27.8524	 transfer: 0.0116	 finalize: 22.8622
batch bounding time:  0.9378499984741211
Current worst splitting domains [lb, ub] (depth):
[-10.62606,   inf] (51), [-10.62599,   inf] (53), [-10.62546,   inf] (55), [-10.62532,   inf] (49), [-10.62483,   inf] (59), [-10.62447,   inf] (49), [-10.62428,   inf] (51), [-10.62390,   inf] (47), [-10.62387,   inf] (57), [-10.62360,   inf] (49), [-10.62291,   inf] (47), [-10.62286,   inf] (47), [-10.62280,   inf] (51), [-10.62277,   inf] (47), [-10.62246,   inf] (59), [-10.62177,   inf] (57), [-10.62112,   inf] (61), [-10.61990,   inf] (51), [-10.61926,   inf] (49), [-10.61883,   inf] (45), 
length of domains: 71680
Total time: 1.6694	 pickout: 0.2003	 decision: 0.2719	 get_bound: 0.9414	 add_domain: 0.2557
Current lb:-10.626060485839844
143296 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 145.13172101974487

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [3, 31] [4, 6] [4, 7] [3, 53] [4, 49] [4, 50] [4, 6] [4, 7] [4, 7] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20994.259765625 with beta sum per layer: [0.5064929723739624, 1.6569448709487915, 31.38188934326172, 824.2808227539062, 4253.412109375]
alpha/beta optimization time: 0.37354445457458496
This batch time : update_bounds func: 0.9149	 prepare: 0.2957	 bound: 0.3740	 transfer: 0.0122	 finalize: 0.2256
Accumulated time: update_bounds func: 74.2305	 prepare: 20.8307	 bound: 28.2264	 transfer: 0.0122	 finalize: 23.0877
batch bounding time:  0.9171290397644043
Current worst splitting domains [lb, ub] (depth):
[-10.62483,   inf] (61), [-10.62177,   inf] (59), [-10.61839,   inf] (49), [-10.61739,   inf] (53), [-10.61649,   inf] (55), [-10.61587,   inf] (47), [-10.61564,   inf] (47), [-10.61561,   inf] (61), [-10.61528,   inf] (45), [-10.61503,   inf] (45), [-10.61485,   inf] (53), [-10.61408,   inf] (47), [-10.61369,   inf] (47), [-10.61311,   inf] (55), [-10.61273,   inf] (45), [-10.61269,   inf] (51), [-10.61202,   inf] (57), [-10.61200,   inf] (45), [-10.61160,   inf] (51), [-10.61143,   inf] (33), 
length of domains: 72704
Total time: 1.5980	 pickout: 0.2024	 decision: 0.2543	 get_bound: 0.9209	 add_domain: 0.2205
Current lb:-10.624834060668945
145344 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 146.76450967788696

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 7] [4, 7] [4, 18] [1, 81] [4, 35] [4, 35] [4, 49] [4, 18] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20977.015625 with beta sum per layer: [0.3562905192375183, 3.877868175506592, 22.058212280273438, 820.5184936523438, 4290.650390625]
alpha/beta optimization time: 0.374614953994751
This batch time : update_bounds func: 0.9176	 prepare: 0.2965	 bound: 0.3751	 transfer: 0.0122	 finalize: 0.2264
Accumulated time: update_bounds func: 75.1481	 prepare: 21.1271	 bound: 28.6015	 transfer: 0.0122	 finalize: 23.3141
batch bounding time:  0.9198288917541504
Current worst splitting domains [lb, ub] (depth):
[-10.61649,   inf] (57), [-10.61485,   inf] (55), [-10.61311,   inf] (57), [-10.61142,   inf] (43), [-10.61095,   inf] (51), [-10.61090,   inf] (45), [-10.61069,   inf] (53), [-10.61057,   inf] (47), [-10.61019,   inf] (47), [-10.61015,   inf] (45), [-10.60996,   inf] (57), [-10.60986,   inf] (49), [-10.60892,   inf] (51), [-10.60845,   inf] (47), [-10.60820,   inf] (55), [-10.60797,   inf] (55), [-10.60788,   inf] (45), [-10.60784,   inf] (47), [-10.60763,   inf] (49), [-10.60742,   inf] (47), 
length of domains: 73728
Total time: 1.6045	 pickout: 0.2057	 decision: 0.2542	 get_bound: 0.9235	 add_domain: 0.2210
Current lb:-10.61648941040039
147392 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 148.40350127220154

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 99] [4, 49] [4, 81] [3, 26] [4, 18] [4, 6] [3, 53] [4, 6] [4, 18] [4, 18] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20966.5859375 with beta sum per layer: [0.15730692446231842, 3.4820263385772705, 31.294490814208984, 741.0003662109375, 4294.8193359375]
alpha/beta optimization time: 0.3741943836212158
This batch time : update_bounds func: 0.9117	 prepare: 0.2919	 bound: 0.3747	 transfer: 0.0118	 finalize: 0.2256
Accumulated time: update_bounds func: 76.0597	 prepare: 21.4190	 bound: 28.9762	 transfer: 0.0118	 finalize: 23.5397
batch bounding time:  0.913771390914917
Current worst splitting domains [lb, ub] (depth):
[-10.61649,   inf] (59), [-10.60996,   inf] (59), [-10.60797,   inf] (57), [-10.60488,   inf] (59), [-10.60354,   inf] (45), [-10.60308,   inf] (47), [-10.60291,   inf] (51), [-10.60229,   inf] (47), [-10.60227,   inf] (51), [-10.60217,   inf] (49), [-10.60211,   inf] (47), [-10.60184,   inf] (51), [-10.60169,   inf] (49), [-10.60165,   inf] (47), [-10.60165,   inf] (51), [-10.60126,   inf] (47), [-10.60073,   inf] (55), [-10.60054,   inf] (57), [-10.60046,   inf] (47), [-10.60016,   inf] (61), 
length of domains: 74752
Total time: 3.9865	 pickout: 0.2025	 decision: 2.6433	 get_bound: 0.9174	 add_domain: 0.2234
Current lb:-10.61648941040039
149440 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 152.4248764514923

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [3, 38] [3, 8] [4, 7] [2, 99] [4, 50] [4, 35] [2, 99] [4, 7] [3, 38] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20952.9609375 with beta sum per layer: [0.6711931824684143, 3.0512523651123047, 35.142826080322266, 859.8982543945312, 4228.3994140625]
alpha/beta optimization time: 0.37587404251098633
This batch time : update_bounds func: 0.9125	 prepare: 0.2932	 bound: 0.3764	 transfer: 0.0121	 finalize: 0.2234
Accumulated time: update_bounds func: 76.9723	 prepare: 21.7122	 bound: 29.3525	 transfer: 0.0121	 finalize: 23.7631
batch bounding time:  0.9146947860717773
Current worst splitting domains [lb, ub] (depth):
[-10.60996,   inf] (61), [-10.60797,   inf] (59), [-10.60354,   inf] (47), [-10.60073,   inf] (57), [-10.59717,   inf] (47), [-10.59699,   inf] (47), [-10.59681,   inf] (51), [-10.59670,   inf] (49), [-10.59645,   inf] (53), [-10.59643,   inf] (51), [-10.59628,   inf] (43), [-10.59616,   inf] (57), [-10.59599,   inf] (45), [-10.59584,   inf] (45), [-10.59549,   inf] (47), [-10.59488,   inf] (49), [-10.59450,   inf] (47), [-10.59437,   inf] (63), [-10.59411,   inf] (55), [-10.59380,   inf] (47), 
length of domains: 75776
Total time: 1.5990	 pickout: 0.2006	 decision: 0.2544	 get_bound: 0.9183	 add_domain: 0.2257
Current lb:-10.609959602355957
151488 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 154.05894589424133

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 99] [4, 49] [4, 18] [4, 81] [4, 18] [4, 18] [4, 6] [4, 7] [4, 81] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20943.181640625 with beta sum per layer: [0.0, 4.629333972930908, 35.04792785644531, 792.3538818359375, 4238.482421875]
alpha/beta optimization time: 0.3735833168029785
This batch time : update_bounds func: 0.9060	 prepare: 0.2882	 bound: 0.3741	 transfer: 0.0120	 finalize: 0.2243
Accumulated time: update_bounds func: 77.8783	 prepare: 22.0003	 bound: 29.7267	 transfer: 0.0120	 finalize: 23.9874
batch bounding time:  0.908350944519043
Current worst splitting domains [lb, ub] (depth):
[-10.60996,   inf] (63), [-10.59154,   inf] (61), [-10.59102,   inf] (57), [-10.59066,   inf] (47), [-10.59053,   inf] (49), [-10.59051,   inf] (47), [-10.59045,   inf] (49), [-10.59018,   inf] (47), [-10.58926,   inf] (49), [-10.58912,   inf] (45), [-10.58902,   inf] (47), [-10.58898,   inf] (51), [-10.58891,   inf] (49), [-10.58889,   inf] (47), [-10.58886,   inf] (43), [-10.58883,   inf] (47), [-10.58873,   inf] (57), [-10.58870,   inf] (49), [-10.58857,   inf] (47), [-10.58835,   inf] (47), 
length of domains: 76800
Total time: 1.5924	 pickout: 0.2014	 decision: 0.2540	 get_bound: 0.9121	 add_domain: 0.2249
Current lb:-10.609959602355957
153536 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 155.6854476928711

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 49] [3, 38] [4, 35] [3, 8] [2, 99] [4, 6] [3, 90] [4, 6] [4, 7] [4, 49] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20926.646484375 with beta sum per layer: [0.1662990152835846, 2.346665620803833, 42.800079345703125, 791.5344848632812, 4270.509765625]
alpha/beta optimization time: 0.37436604499816895
This batch time : update_bounds func: 0.9202	 prepare: 0.3017	 bound: 0.3749	 transfer: 0.0109	 finalize: 0.2250
Accumulated time: update_bounds func: 78.7985	 prepare: 22.3020	 bound: 30.1016	 transfer: 0.0109	 finalize: 24.2124
batch bounding time:  0.9225211143493652
Current worst splitting domains [lb, ub] (depth):
[-10.59154,   inf] (63), [-10.58509,   inf] (49), [-10.58422,   inf] (57), [-10.58410,   inf] (47), [-10.58401,   inf] (47), [-10.58393,   inf] (49), [-10.58380,   inf] (63), [-10.58367,   inf] (53), [-10.58357,   inf] (49), [-10.58342,   inf] (43), [-10.58321,   inf] (45), [-10.58306,   inf] (45), [-10.58299,   inf] (43), [-10.58254,   inf] (57), [-10.58215,   inf] (47), [-10.58212,   inf] (43), [-10.58156,   inf] (47), [-10.58148,   inf] (47), [-10.58145,   inf] (47), [-10.58082,   inf] (57), 
length of domains: 77824
Total time: 1.6071	 pickout: 0.1979	 decision: 0.2570	 get_bound: 0.9263	 add_domain: 0.2259
Current lb:-10.591537475585938
155584 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 157.32834792137146

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 70] [4, 18] [4, 35] [4, 49] [4, 18] [3, 38] [4, 49] [3, 65] [4, 81] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20908.767578125 with beta sum per layer: [0.6826520562171936, 6.382684230804443, 30.770187377929688, 743.6480102539062, 4415.2490234375]
alpha/beta optimization time: 0.3741018772125244
This batch time : update_bounds func: 0.9062	 prepare: 0.2898	 bound: 0.3746	 transfer: 0.0084	 finalize: 0.2260
Accumulated time: update_bounds func: 79.7048	 prepare: 22.5918	 bound: 30.4761	 transfer: 0.0084	 finalize: 24.4384
batch bounding time:  0.908484697341919
Current worst splitting domains [lb, ub] (depth):
[-10.58254,   inf] (59), [-10.58082,   inf] (59), [-10.57902,   inf] (57), [-10.57739,   inf] (59), [-10.57720,   inf] (49), [-10.57717,   inf] (57), [-10.57704,   inf] (63), [-10.57667,   inf] (59), [-10.57641,   inf] (61), [-10.57633,   inf] (47), [-10.57631,   inf] (51), [-10.57613,   inf] (49), [-10.57608,   inf] (49), [-10.57563,   inf] (65), [-10.57497,   inf] (47), [-10.57497,   inf] (57), [-10.57492,   inf] (47), [-10.57409,   inf] (55), [-10.57394,   inf] (63), [-10.57390,   inf] (57), 
length of domains: 78848
Total time: 1.5878	 pickout: 0.1938	 decision: 0.2578	 get_bound: 0.9122	 add_domain: 0.2240
Current lb:-10.582536697387695
157632 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 158.96043372154236

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 35] [2, 99] [4, 7] [3, 53] [3, 58] [4, 49] [0, 2] [4, 7] [4, 49] [4, 6] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20908.341796875 with beta sum per layer: [0.433860182762146, 2.37235164642334, 44.60640335083008, 761.5037841796875, 4317.75537109375]
alpha/beta optimization time: 0.3734583854675293
This batch time : update_bounds func: 0.9120	 prepare: 0.2938	 bound: 0.3739	 transfer: 0.0119	 finalize: 0.2247
Accumulated time: update_bounds func: 80.6168	 prepare: 22.8856	 bound: 30.8501	 transfer: 0.0119	 finalize: 24.6631
batch bounding time:  0.9144048690795898
Current worst splitting domains [lb, ub] (depth):
[-10.58082,   inf] (61), [-10.57739,   inf] (61), [-10.57081,   inf] (57), [-10.57068,   inf] (49), [-10.57057,   inf] (43), [-10.57029,   inf] (49), [-10.57023,   inf] (53), [-10.56988,   inf] (51), [-10.56986,   inf] (49), [-10.56925,   inf] (49), [-10.56925,   inf] (51), [-10.56916,   inf] (45), [-10.56915,   inf] (47), [-10.56802,   inf] (49), [-10.56740,   inf] (49), [-10.56717,   inf] (61), [-10.56702,   inf] (47), [-10.56698,   inf] (47), [-10.56692,   inf] (47), [-10.56671,   inf] (49), 
length of domains: 79872
Total time: 4.2398	 pickout: 0.2007	 decision: 0.2531	 get_bound: 0.9182	 add_domain: 2.8678
Current lb:-10.580821990966797
159680 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 163.23819160461426

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 7] [4, 7] [4, 81] [4, 6] [4, 50] [4, 18] [3, 53] [3, 17] [3, 31] [4, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 20890.9921875 with beta sum per layer: [0.2705928683280945, 0.562642514705658, 53.623382568359375, 749.0208740234375, 4327.994140625]
alpha/beta optimization time: 0.3721463680267334
This batch time : update_bounds func: 0.9152	 prepare: 0.2979	 bound: 0.3726	 transfer: 0.0119	 finalize: 0.2247
Accumulated time: update_bounds func: 81.5320	 prepare: 23.1835	 bound: 31.2227	 transfer: 0.0119	 finalize: 24.8878
batch bounding time:  0.9177381992340088
Current worst splitting domains [lb, ub] (depth):
[-10.57023,   inf] (55), [-10.56717,   inf] (63), [-10.56435,   inf] (43), [-10.56420,   inf] (49), [-10.56326,   inf] (51), [-10.56314,   inf] (51), [-10.56278,   inf] (45), [-10.56268,   inf] (49), [-10.56235,   inf] (49), [-10.56229,   inf] (45), [-10.56223,   inf] (47), [-10.56175,   inf] (45), [-10.56151,   inf] (49), [-10.56132,   inf] (43), [-10.56122,   inf] (47), [-10.56089,   inf] (47), [-10.56066,   inf] (47), [-10.56056,   inf] (49), [-10.56031,   inf] (63), [-10.56028,   inf] (49), 
length of domains: 80896
Total time: 1.6007	 pickout: 0.1962	 decision: 0.2592	 get_bound: 0.9217	 add_domain: 0.2236
Current lb:-10.57022762298584
161728 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Time out!!!!!!!!
Image 92 label 2 verification end, final lower bound -10.57022762298584, upper bound inf, time: 167.17174863815308
92 -10.57022762298584
Result: image 92 verification failure (with branch and bound).
Wall time: 903.1960937976837

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 0): []
verification failure idx (total 1): [92]
final verified acc: 0.0%[1]
verifier is called on 1 examples.
total verified: 0
mean time [cnt:1] (excluding attack success): 903.1150360107422
