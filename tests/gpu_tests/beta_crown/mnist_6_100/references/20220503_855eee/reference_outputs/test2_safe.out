Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_6_100_nat.pth
  name: mnist_6_100
data:
  start: 5
  end: 6
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 21:51:40 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_100]_start=5_end=6_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 1, correct label 1, image norm 54.333335876464844, logits tensor([-4.7250, 11.5023,  1.0272, -3.2290,  0.6359, -2.8726, -2.2377,  1.1579,
         1.3752, -2.3811], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-4.7250, 11.5023,  1.0272, -3.2290,  0.6359, -2.8726, -2.2377,  1.1579,
          1.3752, -2.3811]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-48.4515, -49.2391, -48.2552, -47.3599, -48.1597, -39.1093, -43.1400,
         -44.7019, -54.4206]], device='cuda:0') None
best_l after optimization: 271.88824462890625 with beta sum per layer: []
alpha/beta optimization time: 7.725603818893433
initial alpha-CROWN bounds: tensor([[-30.6538, -30.0703, -30.4463, -31.6674, -31.0793, -24.1114, -28.0108,
         -30.0566, -35.7923]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-35.7923, device='cuda:0', grad_fn=<MinBackward1>)
##### PGD attack: True label: 1, Tested against: ['all'] ######
pgd prediction: tensor([-3.7149,  8.0356,  2.0846, -2.3995,  0.5457, -2.7088, -2.1038,  1.3118,
         0.8452, -2.3432], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([11.7505,     inf,  5.9511, 10.4351,  7.4899, 10.7444, 10.1394,  6.7239,
         7.1904, 10.3788], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Sorted order for labels to verify: [2, 7, 8, 4, 6, 9, 3, 5, 0, 1]
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 713.2103763580322]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_3', 'lay4_4', 'lay4_96', 'lay4_19', 'lay4_78', 'lay4_5', 'lay4_87', 'lay4_61', 'lay4_93', 'lay4_1', 'lay4_12', 'lay4_99', 'lay4_82', 'lay4_43', 'lay4_31', 'lay4_68', 'lay4_18', 'lay4_70', 'lay4_67', 'lay4_22', 'lay4_92', 'lay4_26', 'lay4_49', 'lay4_34', 'lay4_30', 'lay4_15', 'lay4_52', 'lay4_28', 'lay4_58', 'lay4_21', 'lay4_71', 'lay4_56', 'lay4_53', 'lay4_38', 'lay4_10', 'lay4_79', 'lay4_40', 'lay4_75', 'lay4_23', 'lay4_41', 'lay4_7', 'lay4_89', 'lay4_36', 'lay4_80', 'lay4_9', 'lay4_33', 'lay4_81', 'lay4_95', 'lay4_74', 'lay4_57', 'lay4_63', 'lay4_51', 'lay4_54', 'lay4_24', 'lay4_66', 'lay4_13', 'lay4_76', 'lay4_11', 'lay4_83', 'lay4_84', 'lay4_8', 'lay4_2', 'lay4_86', 'lay4_32', 'lay4_72'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_68, [-1.4106035232543945,0.26885247230529785]=>[-1.4106035232543945,-1e-05] (-1,-1; 15,-1), time: 0.6094s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_99, [-1.5422320365905762,0.2166672646999359]=>[-1.5422320365905762,-1e-05] (-1,-1; 15,-1), time: 0.6442s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_93, [-1.7237257957458496,0.2890741229057312]=>[-1.7237257957458496,-1e-05] (-1,-1; 15,-1), time: 0.8480s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_70, [-1.984816312789917,0.11599963903427124]=>[-1.984816312789917,-1e-05] (-1,-1; 15,-1), time: 0.4249s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_4, [-1.5532147884368896,0.5462379455566406]=>[-1.5532147884368896,-1e-05] (-1,-1; 15,-1), time: 2.9881s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_87, [-1.61156165599823,0.38388001918792725]=>[-1.171102197520362,0.05911454449722712] (2,-1; 2,-1), time: 3.9164s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_31, [-1.1870731115341187,1.2218117713928223]=>[-0.6440163957857492,0.8289745766766483] (2,-1; 2,-1), time: 4.1845s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_12, [-0.6477610468864441,1.1359083652496338]=>[-0.106644793153325,0.9425409255626878] (2,-1; 2,-1), time: 4.6680s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_96, [-0.8808490633964539,0.8015782237052917]=>[-0.476285245673111,0.5584049998190993] (2,-1; 2,-1), time: 4.7957s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_19, [-1.0440187454223633,0.938413143157959]=>[-0.6018281005439525,0.5700008561405201] (2,-1; 2,-1), time: 5.2164s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_34, [-1.5587685108184814,0.2869029641151428]=>[-1.5587685108184814,-1e-05] (-1,-1; 15,-1), time: 0.5821s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_30, [-1.4246821403503418,0.24659204483032227]=>[-1.4246821403503418,-1e-05] (-1,-1; 15,-1), time: 0.7522s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_67, [-0.8926559686660767,0.6575905084609985]=>[-0.5394210071602724,0.43218874598752843] (2,-1; 2,-1), time: 4.7328s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_43, [-1.3637551069259644,0.849030613899231]=>[-0.8132260843504177,0.4653487713499379] (2,-1; 2,-1), time: 5.6442s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_5, [-1.6165392398834229,0.5242488384246826]=>[-1.0837612014974618,0.1244254600138186] (2,-1; 2,-1), time: 5.8641s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_78, [-2.0675506591796875,0.44541245698928833]=>[-1.339979599879939,0.004462199379331039] (2,-1; 2,-1), time: 6.1790s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_82, [-0.7793115377426147,1.2562470436096191]=>[-0.1895922602365425,1.0367756887790722] (2,-1; 2,-1), time: 7.0201s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_22, [-1.0818138122558594,0.5114628076553345]=>[-0.6792591036974237,0.21603078132847028] (2,-1; 2,-1), time: 6.2050s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_28, [-1.501865029335022,0.35406386852264404]=>[-1.501865029335022,-1e-05] (-1,-1; 15,-1), time: 1.9816s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_3, [-0.99709153175354,0.9986525774002075]=>[-0.39449234096256475,0.6721496359278158] (2,-1; 2,-1), time: 8.0480s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_79, [-1.905348777770996,0.03358560800552368]=>[-1.905348777770996,-1e-05] (-1,-1; 15,-1), time: 0.4249s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_71, [-1.2731046676635742,0.3715514540672302]=>[-1.2731046676635742,-0.002095445296578456] (-1,-1; 2,-1), time: 2.8838s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_40, [-1.8298985958099365,0.04233860969543457]=>[-1.8298985958099365,-1e-05] (-1,-1; 15,-1), time: 0.4136s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_75, [-1.653775930404663,0.07433682680130005]=>[-1.653775930404663,-1e-05] (-1,-1; 15,-1), time: 0.3157s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_49, [-1.3504469394683838,0.36479833722114563]=>[-0.883006722338973,0.11969274731368873] (2,-1; 2,-1), time: 4.9496s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_26, [-1.5110021829605103,0.5329591631889343]=>[-1.0348291227843798,0.1973749966896907] (2,-1; 2,-1), time: 5.2599s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_23, [-1.5926406383514404,0.2388077974319458]=>[-1.5926406383514404,-1e-05] (-1,-1; 15,-1), time: 0.7001s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_41, [-1.2823734283447266,0.2658105492591858]=>[-1.2823734283447266,-1e-05] (-1,-1; 15,-1), time: 0.8640s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_58, [-1.1697428226470947,0.4086167812347412]=>[-1.1697428226470947,-1e-05] (-1,-1; 15,-1), time: 5.1585s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_9, [-1.6033812761306763,0.07207044959068298]=>[-1.6033812761306763,-1e-05] (-1,-1; 15,-1), time: 0.3672s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_15, [-0.8768466114997864,1.0018682479858398]=>[-0.4449790103981973,0.5255002393304927] (2,-1; 2,-1), time: 6.3807s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_21, [-1.0918357372283936,0.5811935663223267]=>[-0.700668586180798,0.24945654214094354] (2,-1; 2,-1), time: 5.9930s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_92, [-1.201327919960022,0.536940336227417]=>[-0.698485694563981,0.204907424582579] (2,-1; 2,-1), time: 8.7800s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_36, [-1.4683547019958496,0.28366971015930176]=>[-1.4683547019958496,-0.003663547450714515] (-1,-1; 2,-1), time: 2.1961s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_1, [-0.8459725379943848,0.7456201314926147]=>[-0.39138496666706096,0.40892948853379973] (2,-1; 2,-1), time: 11.8657s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_7, [-0.6397197246551514,1.0907206535339355]=>[-0.29929112134374186,0.8714782438396995] (2,-1; 2,-1), time: 2.9517s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_52, [-0.9829039573669434,0.872938871383667]=>[-0.4918573560095644,0.5494474117631075] (2,-1; 2,-1), time: 7.0301s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_53, [-0.5476335287094116,1.3981777429580688]=>[-0.1138529307809732,1.037311820134307] (2,-1; 2,-1), time: 5.5665s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_54, [-0.0203210711479187,1.3692389726638794]=>[1e-05,1.3692389726638794] (15,-1; -1,-1), time: 0.3064s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_38, [-1.0436372756958008,0.5564340949058533]=>[-0.5360031523037091,0.36660404242462374] (2,-1; 2,-1), time: 5.8850s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_10, [-1.9229166507720947,0.49644309282302856]=>[-1.2571892662736646,0.23361378659078014] (2,-1; 2,-1), time: 6.0036s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_13, [-0.09589067101478577,1.7615153789520264]=>[1e-05,1.7615153789520264] (15,-1; -1,-1), time: 0.3946s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_56, [-0.46162149310112,0.8748063445091248]=>[-0.10352572694722573,0.5814353833372011] (2,-1; 2,-1), time: 7.6635s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_80, [-0.5947371125221252,0.8329920768737793]=>[-0.34535702989679223,0.44481184079548935] (2,-1; 2,-1), time: 4.3680s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_89, [-0.6170300245285034,1.032211184501648]=>[-0.23670917447281803,0.7555125031283484] (2,-1; 2,-1), time: 5.3996s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_18, [-1.5461506843566895,0.24849092960357666]=>[-0.9182552563308441,0.0632998585921766] (2,-1; 2,-1), time: 14.1777s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_61, [-1.62764310836792,1.0093905925750732]=>[-0.6095149998618999,0.8947926774941659] (9,-1; 2,-1), time: 15.7418s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_86, [-1.6729846000671387,0.0006523728370666504]=>[-1.6729846000671387,-1e-05] (-1,-1; 15,-1), time: 0.3601s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_57, [-0.9418900609016418,1.6046801805496216]=>[-0.2880296636099601,1.256452824065201] (2,-1; 2,-1), time: 4.6461s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_32, [-1.4378039836883545,0.35282403230667114]=>[-1.4378039836883545,-1e-05] (-1,-1; 15,-1), time: 0.9781s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_63, [-0.9445181488990784,0.5048359632492065]=>[-0.5626187356469117,0.2804220926573573] (2,-1; 2,-1), time: 5.3113s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_76, [-0.9283568859100342,0.734144926071167]=>[-0.6155594472341521,0.38216271386283207] (2,-1; 2,-1), time: 3.8416s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_81, [-0.8697413206100464,2.0896971225738525]=>[-0.3586117893661527,1.2281060298125326] (2,-1; 2,-1), time: 5.8587s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_11, [-0.5027392506599426,1.4160596132278442]=>[-0.05712518950697058,1.0966338544721286] (2,-1; 2,-1), time: 4.0802s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_51, [-1.321376919746399,0.4635508060455322]=>[-0.965184490611017,0.017062034925642015] (2,-1; 2,-1), time: 5.6914s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_95, [-1.3771393299102783,0.7690975666046143]=>[-0.9334941670191361,0.28758035354651756] (2,-1; 2,-1), time: 6.3187s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_33, [-0.7527289986610413,1.3148082494735718]=>[-0.20060207218421028,0.888678197935605] (2,-1; 2,-1), time: 7.3193s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_66, [-0.472766637802124,1.2035855054855347]=>[1e-05,1.2035855054855347] (15,-1; -1,-1), time: 5.9855s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_24, [-0.8605058193206787,0.8377134203910828]=>[-0.3760789908064306,0.5817913940700631] (2,-1; 2,-1), time: 6.2048s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_8, [-0.9138503074645996,0.7344340682029724]=>[-0.4593799562829408,0.48395053346267985] (2,-1; 2,-1), time: 5.0706s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_84, [-1.0358965396881104,0.7503576278686523]=>[-0.7222212630067767,0.2518382396609867] (2,-1; 2,-1), time: 5.4181s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_2, [-1.2652007341384888,0.6281626224517822]=>[-0.9657675103556038,0.10502030023345119] (2,-1; 2,-1), time: 4.9667s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_74, [-1.316764235496521,0.5350164175033569]=>[-0.7724772579449324,0.1769492658374137] (2,-1; 2,-1), time: 8.0203s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_83, [-1.0741523504257202,0.7498475313186646]=>[-0.6287624827043411,0.4426005876273494] (2,-1; 2,-1), time: 5.9424s, #vars: 1075, #constrs: 335, improved: True
Solving MIP for lay4_72, [-0.8605573177337646,0.5359375476837158]=>[-0.4561789385341203,0.28176598448335377] (2,-1; 2,-1), time: 5.7326s, #vars: 1075, #constrs: 335, improved: True
MIP improved 65 nodes out of 65 unstable nodes, lb improved 21.11922264099121, ub improved 18.867549896240234, time 22.9334
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_53', 'lay6_79', 'lay6_7', 'lay6_51', 'lay6_70', 'lay6_75', 'lay6_26', 'lay6_2', 'lay6_10', 'lay6_60', 'lay6_77', 'lay6_34', 'lay6_22', 'lay6_3', 'lay6_4', 'lay6_9', 'lay6_89', 'lay6_80', 'lay6_98', 'lay6_58', 'lay6_72', 'lay6_33', 'lay6_91', 'lay6_48', 'lay6_71', 'lay6_35', 'lay6_50', 'lay6_36', 'lay6_49', 'lay6_82', 'lay6_17', 'lay6_40', 'lay6_8', 'lay6_30', 'lay6_18', 'lay6_96', 'lay6_13', 'lay6_29', 'lay6_46', 'lay6_20', 'lay6_23', 'lay6_81', 'lay6_25', 'lay6_65', 'lay6_88', 'lay6_37', 'lay6_99', 'lay6_76', 'lay6_67', 'lay6_11', 'lay6_93', 'lay6_52', 'lay6_0', 'lay6_87', 'lay6_28', 'lay6_86', 'lay6_94', 'lay6_55', 'lay6_16', 'lay6_78', 'lay6_92', 'lay6_95', 'lay6_44', 'lay6_38', 'lay6_45', 'lay6_6', 'lay6_90', 'lay6_39', 'lay6_85', 'lay6_56', 'lay6_5', 'lay6_32', 'lay6_69', 'lay6_27', 'lay6_21', 'lay6_12', 'lay6_61', 'lay6_68', 'lay6_54', 'lay6_43', 'lay6_59', 'lay6_15', 'lay6_97', 'lay6_24', 'lay6_42', 'lay6_41', 'lay6_19', 'lay6_62', 'lay6_84', 'lay6_31', 'lay6_57', 'lay6_64', 'lay6_83', 'lay6_14', 'lay6_73'] filter: 1.0
Solving MIP for lay6_9, [-1.9717109203338623,0.2676381468772888]=>[-1.9717109203338623,-1e-05] (-1,-1; 15,-1), time: 0.1973s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_70, [-2.229349374771118,0.46868857741355896]=>[-2.229349374771118,-1e-05] (-1,-1; 15,-1), time: 0.2302s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_26, [-2.3269550800323486,0.33881640434265137]=>[-2.3269550800323486,-1e-05] (-1,-1; 15,-1), time: 0.2426s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_2, [-1.9565839767456055,0.3777475953102112]=>[-1.9565839767456055,-1e-05] (-1,-1; 15,-1), time: 0.2658s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_89, [-2.2641613483428955,0.586101233959198]=>[-2.2641613483428955,-1e-05] (-1,-1; 15,-1), time: 0.4367s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_4, [-1.8059865236282349,0.6552576422691345]=>[-1.8059865236282349,-1e-05] (-1,-1; 15,-1), time: 0.7257s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_80, [-1.64067542552948,0.4212080240249634]=>[-1.64067542552948,-1e-05] (-1,-1; 15,-1), time: 0.5346s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_91, [-2.0379366874694824,0.5606192350387573]=>[-2.0379366874694824,-1e-05] (-1,-1; 15,-1), time: 2.4997s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_3, [-2.0391147136688232,0.6907901167869568]=>[-2.0391147136688232,-1e-05] (-1,-1; 15,-1), time: 5.1940s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_60, [-1.8691778182983398,0.5688405632972717]=>[-1.8691778182983398,-1e-05] (-1,-1; 15,-1), time: 5.3726s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_7, [-2.0562379360198975,0.6374831199645996]=>[-2.0562379360198975,-1e-05] (-1,-1; 15,-1), time: 7.5325s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_50, [-2.1453452110290527,0.829231321811676]=>[-2.1453452110290527,-1e-05] (-1,-1; 15,-1), time: 3.6226s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_77, [-1.7718348503112793,0.6136808395385742]=>[-1.7718348503112793,-1e-05] (-1,-1; 15,-1), time: 11.1729s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_53, [-2.1378273963928223,0.8692939877510071]=>[-2.1378273963928223,-1e-05] (-1,-1; 15,-1), time: 13.8866s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_79, [-1.7494707107543945,1.1131095886230469]=>[-0.8943454823062803,0.20958233489771225] (2,-1; 9,-1), time: 22.5698s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_58, [-2.075551748275757,0.9068980813026428]=>[-1.1901871274182267,0.07216062378591818] (2,-1; 9,-1), time: 23.3083s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_40, [-1.8169914484024048,0.3308963179588318]=>[-1.8169914484024048,-1e-05] (-1,-1; 15,-1), time: 0.5975s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_8, [-2.823730945587158,0.20344725251197815]=>[-2.823730945587158,-1e-05] (-1,-1; 15,-1), time: 0.2752s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_30, [-3.197603464126587,0.2638202905654907]=>[-3.197603464126587,-1e-05] (-1,-1; 15,-1), time: 0.2436s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_75, [-1.4742565155029297,0.986253023147583]=>[-0.7127458144041408,0.26687442232931896] (9,-1; 9,-1), time: 30.0086s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_22, [-1.3574824333190918,0.707449197769165]=>[-0.6764255549222394,0.12569882418546507] (9,-1; 9,-1), time: 30.0142s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_10, [-1.6015939712524414,1.0076295137405396]=>[-0.8589925158849266,0.22694627374058812] (9,-1; 9,-1), time: 30.0230s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_51, [-1.8123583793640137,0.8775581121444702]=>[-0.9512010218786467,0.025308792963189938] (9,-1; 9,-1), time: 30.0362s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_34, [-1.5916492938995361,1.7558386325836182]=>[-0.5535134228431134,0.7799154397336923] (9,-1; 9,-1), time: 30.0484s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_98, [-2.1469247341156006,1.0288255214691162]=>[-1.253282802457055,0.06824910090700591] (9,-1; 9,-1), time: 30.0324s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_20, [-2.144782066345215,0.30446118116378784]=>[-2.144782066345215,-1e-05] (-1,-1; 15,-1), time: 0.2352s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_72, [-1.350750207901001,0.75192791223526]=>[-0.6219912995020106,0.21971007820700478] (9,-1; 9,-1), time: 30.0115s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_33, [-0.9290077090263367,1.5135650634765625]=>[-0.12653371272139433,0.8481754501309469] (9,-1; 9,-1), time: 30.0535s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_49, [-1.701723337173462,0.9243199825286865]=>[-0.9517113801002904,0.16868665303023547] (2,-1; 9,-1), time: 20.2770s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_35, [-1.3645925521850586,1.2743303775787354]=>[-0.5636162312456311,0.5111026804611225] (9,-1; 2,-1), time: 26.3801s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_48, [-1.280461072921753,0.457847535610199]=>[-0.5970004624057242,0.027990153781796815] (9,-1; 9,-1), time: 30.0248s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_71, [-1.6305012702941895,0.6578028202056885]=>[-0.8136732445752786,0.10403272650574014] (9,-1; 9,-1), time: 30.0190s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_76, [-0.5548626184463501,2.4781196117401123]=>[1e-05,2.4781196117401123] (15,-1; -1,-1), time: 0.6070s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_46, [-1.7858132123947144,0.6747442483901978]=>[-1.7858132123947144,-1e-05] (-1,-1; 15,-1), time: 8.6580s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_29, [-0.7591829299926758,1.4408153295516968]=>[1e-05,1.4408153295516968] (15,-1; -1,-1), time: 10.7153s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_36, [-1.2012536525726318,0.7960371971130371]=>[-0.5696986129569264,0.18900862520961942] (9,-1; 9,-1), time: 30.0061s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_52, [-2.004183053970337,0.18092143535614014]=>[-2.004183053970337,-1e-05] (-1,-1; 15,-1), time: 0.1763s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_0, [-0.6134734153747559,2.0810694694519043]=>[1e-05,2.0810694694519043] (15,-1; -1,-1), time: 0.8728s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_87, [-1.8748160600662231,0.5820916295051575]=>[-1.8748160600662231,-1e-05] (-1,-1; 15,-1), time: 0.9672s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_28, [-0.6778733134269714,2.4848313331604004]=>[1e-05,2.4848313331604004] (15,-1; -1,-1), time: 0.4491s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_82, [-1.7582669258117676,0.908501148223877]=>[-0.9878513301642771,0.18723677148228413] (9,-1; 9,-1), time: 30.0313s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_86, [-1.5978481769561768,0.3218616843223572]=>[-1.5978481769561768,-1e-05] (-1,-1; 15,-1), time: 0.4235s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_94, [-0.5013211965560913,2.598590135574341]=>[1e-05,2.598590135574341] (15,-1; -1,-1), time: 0.2306s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_55, [-0.4551520347595215,2.620650053024292]=>[1e-05,2.620650053024292] (15,-1; -1,-1), time: 0.1796s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_78, [-0.10831677913665771,2.0983293056488037]=>[1e-05,2.0983293056488037] (15,-1; -1,-1), time: 0.1804s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_11, [-0.9452783465385437,2.053887367248535]=>[1e-05,2.053887367248535] (15,-1; -1,-1), time: 6.7048s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_95, [-1.9064357280731201,0.3812875747680664]=>[-1.9064357280731201,-1e-05] (-1,-1; 15,-1), time: 0.4998s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_44, [-2.3028788566589355,0.5404459238052368]=>[-2.3028788566589355,-1e-05] (-1,-1; 15,-1), time: 0.2204s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_38, [-0.33328717947006226,1.781074047088623]=>[1e-05,1.781074047088623] (15,-1; -1,-1), time: 0.2694s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_45, [-1.6308658123016357,0.47582587599754333]=>[-1.6308658123016357,-1e-05] (-1,-1; 15,-1), time: 1.3621s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_92, [-0.7586420774459839,1.652906060218811]=>[1e-05,1.652906060218811] (15,-1; -1,-1), time: 4.6290s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_90, [-0.7806295156478882,2.0835158824920654]=>[1e-05,2.0835158824920654] (15,-1; -1,-1), time: 0.4747s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_39, [-0.45782339572906494,2.6816353797912598]=>[1e-05,2.6816353797912598] (15,-1; -1,-1), time: 0.4367s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_17, [-1.628636360168457,0.8531052470207214]=>[-0.9002479385197376,0.10440293316139597] (9,-1; 9,-1), time: 30.0124s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_56, [-0.4827733039855957,2.5576274394989014]=>[1e-05,2.5576274394989014] (15,-1; -1,-1), time: 0.4841s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_6, [-0.7076201438903809,1.413467526435852]=>[1e-05,1.413467526435852] (15,-1; -1,-1), time: 5.2687s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_5, [-0.41695380210876465,2.0616469383239746]=>[1e-05,2.0616469383239746] (15,-1; -1,-1), time: 0.2257s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_18, [-1.0959047079086304,1.01840341091156]=>[-0.4262652229796163,0.37554744003457746] (9,-1; 9,-1), time: 30.0193s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_25, [-1.1031051874160767,1.4806498289108276]=>[-0.29173750631325474,0.5816458998267224] (2,-1; 2,-1), time: 24.8749s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_96, [-0.7703106999397278,0.8355599641799927]=>[-0.24716907893105552,0.32716943616280786] (9,-1; 9,-1), time: 30.0117s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_13, [-1.667295217514038,1.1031982898712158]=>[-0.7884938331243728,0.29235096795169363] (9,-1; 9,-1), time: 30.0273s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_27, [-2.1028316020965576,0.7595576047897339]=>[-2.1028316020965576,-1e-05] (-1,-1; 15,-1), time: 5.3414s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_23, [-1.208139419555664,1.028181791305542]=>[-0.39838702673818555,0.4739982209917966] (9,-1; 9,-1), time: 30.0169s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_81, [-1.7137677669525146,0.8541940450668335]=>[-0.989708691020425,0.001390289971395581] (9,-1; 9,-1), time: 30.0329s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_61, [-1.9841039180755615,0.5399433374404907]=>[-1.9841039180755615,-1e-05] (-1,-1; 15,-1), time: 0.5083s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_65, [-1.0860600471496582,1.475158452987671]=>[-0.19634887626165612,0.765026836118169] (9,-1; 9,-1), time: 30.0202s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_15, [-0.24730248749256134,2.904052495956421]=>[1e-05,2.904052495956421] (15,-1; -1,-1), time: 0.1875s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_43, [-0.6169651746749878,1.9084957838058472]=>[1e-05,1.9084957838058472] (15,-1; -1,-1), time: 0.8796s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_88, [-1.2223539352416992,0.9969752430915833]=>[-0.42084796494664,0.3890865791735962] (9,-1; 9,-1), time: 30.0249s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_37, [-1.1036274433135986,1.5671340227127075]=>[-0.3426828334477997,0.755936115892575] (9,-1; 9,-1), time: 30.0113s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_24, [-0.5543410778045654,1.5882928371429443]=>[1e-05,1.5882928371429443] (15,-1; -1,-1), time: 0.6415s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_41, [-0.16339051723480225,2.4922657012939453]=>[1e-05,2.4922657012939453] (15,-1; -1,-1), time: 0.2221s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_19, [-0.4117128849029541,2.0303218364715576]=>[1e-05,2.0303218364715576] (15,-1; -1,-1), time: 0.2404s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_99, [-1.8767023086547852,1.216931939125061]=>[-1.1339025897317232,0.20632219997380274] (9,-1; 9,-1), time: 30.0088s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_31, [-1.8407009840011597,0.4177700877189636]=>[-1.8407009840011597,-1e-05] (-1,-1; 15,-1), time: 1.0562s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_67, [-1.512091875076294,1.0109741687774658]=>[-0.7076045675447781,0.3623050506018417] (9,-1; 9,-1), time: 30.0231s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_93, [-1.0108251571655273,1.8252760171890259]=>[-0.09205877605209502,0.8982505534804741] (9,-1; 9,-1), time: 30.0076s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_32, [-1.158578872680664,1.7428662776947021]=>[-0.2397850495030072,1.1225757084465167] (9,-1; 2,-1), time: 20.7687s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_16, [-1.2229582071304321,1.2182766199111938]=>[-0.5064693794450202,0.49452029298046235] (9,-1; 9,-1), time: 30.0240s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_62, [-1.3592815399169922,0.4420849680900574]=>[-1.3592815399169922,-1e-05] (-1,-1; 15,-1), time: 12.5354s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_83, [-0.7326035499572754,1.3746901750564575]=>[1e-05,1.3746901750564575] (15,-1; -1,-1), time: 7.2726s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_85, [-1.154996633529663,1.0835332870483398]=>[-0.25645797151640753,0.6258215190095515] (9,-1; 9,-1), time: 30.0152s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_12, [-1.3708926439285278,1.568651556968689]=>[-0.4898078326754594,0.6575370910178238] (9,-1; 2,-1), time: 21.5181s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_69, [-1.2619612216949463,1.4809463024139404]=>[-0.3774512041559122,0.7350631994664089] (9,-1; 9,-1), time: 30.0128s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_21, [-0.9997574090957642,0.8349890112876892]=>[-0.32934453409313164,0.39076568012432117] (9,-1; 9,-1), time: 30.0320s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_97, [-1.8003013134002686,0.9168577194213867]=>[-0.965868014276524,0.14452846157212673] (2,-1; 9,-1), time: 24.7675s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_68, [-1.117658019065857,1.0506116151809692]=>[-0.42167863587240373,0.41946076150068456] (9,-1; 9,-1), time: 30.0089s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_54, [-1.4491816759109497,1.4787969589233398]=>[-0.5606626431747521,0.5912630882574992] (9,-1; 9,-1), time: 30.0130s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_59, [-1.5890599489212036,2.274245023727417]=>[-0.7188339390412699,1.1197177269638383] (9,-1; 9,-1), time: 30.0179s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_42, [-0.8585280776023865,1.1295998096466064]=>[-0.22020025612015456,0.5258533015670757] (9,-1; 9,-1), time: 30.0044s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_84, [-0.8281700611114502,1.2827140092849731]=>[-0.16364086403168357,0.5914745603442694] (9,-1; 9,-1), time: 30.0121s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_57, [-1.1741122007369995,1.2342084646224976]=>[-0.47573099796153184,0.42568486590428134] (9,-1; 9,-1), time: 30.0294s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_64, [-1.0293982028961182,1.8947064876556396]=>[-0.07059628687212513,1.092405901486933] (9,-1; 9,-1), time: 30.0244s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_14, [-1.157202124595642,1.6133506298065186]=>[-0.25135595322239873,0.8818920712629819] (9,-1; 9,-1), time: 30.0138s, #vars: 1261, #constrs: 564, improved: True
Solving MIP for lay6_73, [-1.6963485479354858,0.9598754048347473]=>[-1.0013245857087258,0.08172433396549122] (9,-1; 9,-1), time: 30.0063s, #vars: 1261, #constrs: 564, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
best_l after optimization: 87.27186584472656 with beta sum per layer: []
alpha/beta optimization time: 5.685126781463623
alpha-CROWN with intermediate bounds by MIP: tensor([[ -8.3358, -11.4097,  -9.4665, -10.7069,  -9.0694,  -6.6754, -10.1279,
         -10.1124, -11.3678]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 95 nodes out of 95 unstable nodes, lb improved 46.86604690551758, ub improved 47.538307189941406, time 104.9415
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_76', 'lay8_12', 'lay8_14', 'lay8_21', 'lay8_85', 'lay8_92', 'lay8_3', 'lay8_62', 'lay8_23', 'lay8_61', 'lay8_91', 'lay8_45', 'lay8_2', 'lay8_7', 'lay8_64', 'lay8_56', 'lay8_17', 'lay8_13', 'lay8_82', 'lay8_49', 'lay8_60', 'lay8_46', 'lay8_24', 'lay8_9', 'lay8_20', 'lay8_94', 'lay8_43', 'lay8_89', 'lay8_0', 'lay8_6', 'lay8_44', 'lay8_70', 'lay8_8', 'lay8_71', 'lay8_5', 'lay8_99', 'lay8_68', 'lay8_78', 'lay8_74', 'lay8_59', 'lay8_54', 'lay8_37', 'lay8_75', 'lay8_79', 'lay8_30', 'lay8_87', 'lay8_98', 'lay8_90', 'lay8_77', 'lay8_42', 'lay8_88', 'lay8_57', 'lay8_34', 'lay8_40', 'lay8_33', 'lay8_63', 'lay8_51', 'lay8_83', 'lay8_65', 'lay8_11', 'lay8_41', 'lay8_96', 'lay8_73', 'lay8_95', 'lay8_66', 'lay8_69', 'lay8_32', 'lay8_27', 'lay8_19', 'lay8_10', 'lay8_25', 'lay8_47', 'lay8_28', 'lay8_84', 'lay8_58', 'lay8_50', 'lay8_72', 'lay8_31', 'lay8_35', 'lay8_26', 'lay8_39', 'lay8_53', 'lay8_4', 'lay8_80', 'lay8_48', 'lay8_67', 'lay8_29', 'lay8_1', 'lay8_36', 'lay8_15', 'lay8_22', 'lay8_81', 'lay8_38', 'lay8_97', 'lay8_55', 'lay8_18', 'lay8_86', 'lay8_16', 'lay8_93', 'lay8_52'] filter: 1.0
Solving MIP for lay8_2, [-2.7089319229125977,1.3674424886703491]=>[-2.7089319229125977,-1e-05] (-1,-1; 15,-1), time: 0.2790s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_85, [-3.601818561553955,1.2469000816345215]=>[-3.601818561553955,-1e-05] (-1,-1; 15,-1), time: 0.3565s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_61, [-1.7240267992019653,2.4069557189941406]=>[1e-05,2.4069557189941406] (15,-1; -1,-1), time: 0.3732s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_23, [-4.090543270111084,1.5769180059432983]=>[-4.090543270111084,-1e-05] (-1,-1; 15,-1), time: 0.4097s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_7, [-3.6933434009552,1.8609871864318848]=>[-3.6933434009552,-1e-05] (-1,-1; 15,-1), time: 0.4095s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_60, [-2.9626991748809814,1.2941830158233643]=>[-2.9626991748809814,-1e-05] (-1,-1; 15,-1), time: 0.3946s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_62, [-3.5345299243927,1.6522647142410278]=>[-3.5345299243927,-1e-05] (-1,-1; 15,-1), time: 0.8383s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_82, [-3.5202419757843018,1.7316722869873047]=>[-3.5202419757843018,-1e-05] (-1,-1; 15,-1), time: 0.7846s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_24, [-2.7300872802734375,1.2143373489379883]=>[-2.7300872802734375,-1e-05] (-1,-1; 15,-1), time: 0.3745s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_9, [-3.010258913040161,1.1431080102920532]=>[-3.010258913040161,-1e-05] (-1,-1; 15,-1), time: 0.3814s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_49, [-3.0448479652404785,1.729744553565979]=>[-3.0448479652404785,-1e-05] (-1,-1; 15,-1), time: 2.9479s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_43, [-0.9108486771583557,4.635963439941406]=>[1e-05,4.635963439941406] (15,-1; -1,-1), time: 0.3418s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_76, [-2.972874641418457,2.2932450771331787]=>[-1.5209689329730538,0.09333755536647327] (9,-1; 9,-1), time: 30.0070s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_45, [-2.2305753231048584,1.673824667930603]=>[-0.6365525314888372,0.2172162038489089] (9,-1; 9,-1), time: 30.0083s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_64, [-1.4890289306640625,2.4536027908325195]=>[-0.08023746379516296,1.0340279309853215] (9,-1; 9,-1), time: 30.0103s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_92, [-1.9395246505737305,2.589228868484497]=>[-0.1524616598134447,1.1295557614446816] (9,-1; 9,-1), time: 30.0135s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_56, [-2.5366954803466797,1.6289291381835938]=>[-0.903835560874792,0.12230596374619276] (9,-1; 9,-1), time: 30.0121s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_14, [-2.2312302589416504,2.23345947265625]=>[-0.8680603493775261,0.12637240388898838] (9,-1; 9,-1), time: 30.0159s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_21, [-2.6808412075042725,2.2413289546966553]=>[-1.0732964103984424,0.1489562516751829] (9,-1; 9,-1), time: 30.0181s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_91, [-2.619954824447632,1.4451228380203247]=>[-1.1009351320287044,0.02672810338365336] (9,-1; 9,-1), time: 30.0187s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_3, [-2.3332388401031494,2.4363934993743896]=>[-0.688544669868866,0.5713109425333898] (9,-1; 9,-1), time: 30.0254s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_12, [-3.128877878189087,2.174950122833252]=>[-1.3102225290131329,0.20765106206175338] (9,-1; 9,-1), time: 30.0269s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_13, [-2.573944091796875,1.7354435920715332]=>[-1.1650035425014857,0.04054279150270761] (9,-1; 9,-1), time: 30.0132s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_99, [-3.910400390625,0.5781718492507935]=>[-3.910400390625,-1e-05] (-1,-1; 15,-1), time: 0.3599s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_17, [-2.3066766262054443,2.393397808074951]=>[-1.0100193590048996,0.43875438774092834] (9,-1; 9,-1), time: 30.1180s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_54, [-1.6438865661621094,3.2612464427948]=>[1e-05,3.2612464427948] (15,-1; -1,-1), time: 0.2818s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_74, [-1.6338807344436646,4.283890247344971]=>[1e-05,4.283890247344971] (15,-1; -1,-1), time: 0.3872s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_46, [-2.2186434268951416,1.5500595569610596]=>[-0.7485412820423282,0.0757103874349031] (9,-1; 9,-1), time: 30.0336s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_20, [-2.225860118865967,1.5260117053985596]=>[-0.8903233379108759,0.10768930687618275] (9,-1; 9,-1), time: 30.0057s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_79, [-3.138577461242676,1.2140220403671265]=>[-3.138577461242676,-1e-05] (-1,-1; 15,-1), time: 0.3682s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_94, [-2.094397783279419,1.8425700664520264]=>[-0.643966412490182,0.3740589012221655] (9,-1; 9,-1), time: 30.0059s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_0, [-2.5326311588287354,1.469316840171814]=>[-2.5326311588287354,-1e-05] (-1,-1; 15,-1), time: 1.9831s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_98, [-2.770841121673584,1.6641720533370972]=>[-2.770841121673584,-1e-05] (-1,-1; 15,-1), time: 0.7717s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_89, [-2.5365967750549316,1.3589448928833008]=>[-0.8368071873652911,0.10467207562064412] (9,-1; 9,-1), time: 30.0432s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_71, [-2.1196627616882324,1.7633768320083618]=>[-0.32469939501152983,0.63474352800114] (9,-1; 9,-1), time: 30.0070s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_70, [-2.8196892738342285,1.6304384469985962]=>[-1.114271889172468,0.19989149106694673] (9,-1; 9,-1), time: 30.0117s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_44, [-2.8288333415985107,1.9716413021087646]=>[-0.5170777007552364,0.9252786774067809] (9,-1; 9,-1), time: 30.0231s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_6, [-2.0213019847869873,2.448706865310669]=>[-0.256542443862137,0.9727102971088724] (9,-1; 9,-1), time: 30.0290s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_68, [-2.1370861530303955,2.062506675720215]=>[-0.6985977387550614,0.3339131013046316] (9,-1; 9,-1), time: 30.0123s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_78, [-2.6131014823913574,1.6324857473373413]=>[-1.1255048556555018,0.10145731157159422] (9,-1; 9,-1), time: 30.0172s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_5, [-1.9335546493530273,1.9131004810333252]=>[-0.47319407424334536,0.41399942252656075] (9,-1; 9,-1), time: 30.0296s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_8, [-2.1125049591064453,2.3894331455230713]=>[-0.5646000394093463,0.5919303296557531] (9,-1; 9,-1), time: 30.0355s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_83, [-1.7930996417999268,2.5476930141448975]=>[1e-05,2.5476930141448975] (15,-1; -1,-1), time: 0.2775s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_59, [-1.8436286449432373,2.600867509841919]=>[-0.2052425781076558,1.0067087919865985] (9,-1; 9,-1), time: 30.0085s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_34, [-0.7156803607940674,4.804423809051514]=>[1e-05,4.804423809051514] (15,-1; -1,-1), time: 0.3755s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_51, [-1.441758632659912,3.671461582183838]=>[1e-05,3.671461582183838] (15,-1; -1,-1), time: 0.3619s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_33, [-1.4588541984558105,3.417530059814453]=>[1e-05,3.417530059814453] (15,-1; -1,-1), time: 0.3891s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_37, [-2.1979148387908936,2.134784698486328]=>[-0.8578387949996796,0.3353197004002858] (9,-1; 9,-1), time: 30.0248s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_96, [-1.0478225946426392,3.7804059982299805]=>[1e-05,3.7804059982299805] (15,-1; -1,-1), time: 0.3209s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_75, [-2.1237311363220215,2.5302109718322754]=>[-0.7251607601259036,0.6290924501044364] (9,-1; 9,-1), time: 30.0243s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_73, [-0.8870859742164612,4.489321708679199]=>[1e-05,4.489321708679199] (15,-1; -1,-1), time: 0.4112s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_63, [-2.329824686050415,4.050581455230713]=>[1e-05,4.050581455230713] (15,-1; -1,-1), time: 1.1209s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_30, [-2.1725823879241943,2.567626476287842]=>[-0.59803857157365,0.6195684951978147] (9,-1; 9,-1), time: 30.0070s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_87, [-2.300260066986084,3.3971927165985107]=>[-0.2859169677254648,1.4908314345661782] (9,-1; 9,-1), time: 30.0467s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_19, [-1.7445820569992065,3.225106716156006]=>[1e-05,3.225106716156006] (15,-1; -1,-1), time: 0.3435s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_25, [-3.450016975402832,1.2422664165496826]=>[-3.450016975402832,-1e-05] (-1,-1; 15,-1), time: 0.3675s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_27, [-2.8274025917053223,1.209080696105957]=>[-2.8274025917053223,-1e-05] (-1,-1; 15,-1), time: 0.8113s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_90, [-3.016502857208252,2.956078290939331]=>[-1.096993713846773,0.8022723213319983] (9,-1; 9,-1), time: 30.0348s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_95, [-2.1092047691345215,2.7208104133605957]=>[1e-05,2.7208104133605957] (15,-1; -1,-1), time: 1.5555s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_77, [-2.4474568367004395,1.4062719345092773]=>[-0.9757564159837476,0.05764878033649094] (9,-1; 9,-1), time: 30.0078s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_28, [-0.6825800538063049,5.2208571434021]=>[1e-05,5.2208571434021] (15,-1; -1,-1), time: 0.3837s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_42, [-2.0367050170898438,2.2352285385131836]=>[-0.16176106939860743,0.8094230728120833] (9,-1; 9,-1), time: 30.1336s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_50, [-1.5600286722183228,2.8558437824249268]=>[1e-05,2.8558437824249268] (15,-1; -1,-1), time: 1.6790s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_31, [-1.1724214553833008,4.86015510559082]=>[1e-05,4.86015510559082] (15,-1; -1,-1), time: 0.3801s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_65, [-1.536784052848816,2.7591495513916016]=>[1e-05,2.7591495513916016] (15,-1; -1,-1), time: 6.8467s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_39, [-1.4499627351760864,4.043333053588867]=>[1e-05,4.043333053588867] (15,-1; -1,-1), time: 0.2728s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_53, [-1.2892359495162964,3.5301904678344727]=>[1e-05,3.5301904678344727] (15,-1; -1,-1), time: 0.2704s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_69, [-1.6363356113433838,2.572033166885376]=>[1e-05,2.572033166885376] (15,-1; -1,-1), time: 8.7615s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_40, [-2.298771381378174,1.4507931470870972]=>[-2.298771381378174,-1e-05] (-1,-1; 15,-1), time: 14.3846s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_88, [-2.0921781063079834,3.1318540573120117]=>[-0.04173450498733596,1.6880834144374446] (9,-1; 9,-1), time: 30.0161s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_57, [-2.2945570945739746,3.7297580242156982]=>[-0.4561727398863063,1.5139699843464522] (9,-1; 9,-1), time: 30.0265s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_11, [-1.8565346002578735,2.0000081062316895]=>[-0.16208323321950405,0.7149547262708661] (9,-1; 9,-1), time: 30.0064s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_41, [-2.218235731124878,1.5107760429382324]=>[-0.4842610321445582,0.2411899335142547] (9,-1; 9,-1), time: 30.0820s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_66, [-2.1127731800079346,2.8892204761505127]=>[-0.251572230680767,1.3111051477289921] (9,-1; 9,-1), time: 30.0146s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_32, [-2.5974698066711426,1.4359253644943237]=>[-0.9644311399434087,0.15936247376926488] (9,-1; 9,-1), time: 30.0065s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_36, [-1.7540698051452637,3.0194454193115234]=>[1e-05,3.0194454193115234] (15,-1; -1,-1), time: 0.3957s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_15, [-1.2460503578186035,4.514712333679199]=>[1e-05,4.514712333679199] (15,-1; -1,-1), time: 0.4032s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_22, [-1.540748119354248,2.8608345985412598]=>[1e-05,2.8608345985412598] (15,-1; -1,-1), time: 0.3901s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_10, [-2.5009219646453857,2.1679868698120117]=>[-0.7063304726757044,0.5266706592146349] (9,-1; 9,-1), time: 30.0286s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_38, [-0.8024411201477051,6.041957855224609]=>[1e-05,6.041957855224609] (15,-1; -1,-1), time: 0.3657s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_97, [-2.7609612941741943,0.7645359039306641]=>[-2.7609612941741943,-1e-05] (-1,-1; 15,-1), time: 0.4055s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_47, [-2.1572508811950684,3.1954832077026367]=>[-0.16118219003994824,1.4193187816633792] (9,-1; 9,-1), time: 30.0074s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_84, [-2.2794623374938965,1.8371315002441406]=>[-0.6882616685548181,0.30454587359577734] (9,-1; 9,-1), time: 30.0309s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_58, [-2.3140861988067627,2.651615619659424]=>[-0.3628541747966307,1.0006894279715122] (9,-1; 9,-1), time: 30.0130s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_72, [-3.376030683517456,2.7908005714416504]=>[-1.2521304077298236,0.41551756563984604] (9,-1; 9,-1), time: 30.0495s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_55, [-2.8896331787109375,1.631547451019287]=>[-2.8896331787109375,-1e-05] (-1,-1; 15,-1), time: 1.2514s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_52, [-3.0113027095794678,1.5879828929901123]=>[-3.0113027095794678,-1e-05] (-1,-1; 15,-1), time: 1.7351s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_35, [-1.7801272869110107,2.305431365966797]=>[-0.1599733854334502,0.7866418255608045] (9,-1; 9,-1), time: 30.0236s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_26, [-2.286344051361084,3.291057586669922]=>[-0.34320932540112353,1.3531110087331244] (9,-1; 9,-1), time: 30.0092s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_4, [-2.084756374359131,1.8671163320541382]=>[-0.18825332716878895,0.7258446649395434] (9,-1; 9,-1), time: 30.1070s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_80, [-2.8946499824523926,1.8902716636657715]=>[-1.1605961569989636,0.1798670796752213] (9,-1; 9,-1), time: 30.0372s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_48, [-2.4097628593444824,1.9052529335021973]=>[-0.8254916240373968,0.27218416635937437] (9,-1; 9,-1), time: 30.0074s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_29, [-2.7092273235321045,2.078432321548462]=>[-1.215285615107172,0.12947119351254793] (9,-1; 9,-1), time: 30.0696s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_67, [-3.143770217895508,2.2360000610351562]=>[-1.0986239376268825,0.41845770748095373] (9,-1; 9,-1), time: 30.1016s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_1, [-2.537926197052002,1.7023762464523315]=>[-1.1104946425023077,0.1957471730684149] (9,-1; 9,-1), time: 30.0350s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_81, [-2.4248929023742676,2.921750545501709]=>[-0.6371551382894626,0.7200362671063495] (9,-1; 9,-1), time: 30.0348s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_18, [-2.5988831520080566,2.3604977130889893]=>[-0.7034960514568788,0.7898429570756362] (9,-1; 9,-1), time: 30.0519s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_86, [-2.756051540374756,2.0613319873809814]=>[-1.0671482160225068,0.1442334307162362] (9,-1; 9,-1), time: 30.0371s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_16, [-2.0101099014282227,1.9251224994659424]=>[-0.22466924380114522,0.6594769776832532] (9,-1; 9,-1), time: 30.0919s, #vars: 1451, #constrs: 799, improved: True
Solving MIP for lay8_93, [-2.6554126739501953,1.6553573608398438]=>[-0.944882484465964,0.21251928011069113] (9,-1; 9,-1), time: 30.0388s, #vars: 1451, #constrs: 799, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
best_l after optimization: 10.933974266052246 with beta sum per layer: []
alpha/beta optimization time: 5.9742138385772705
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.9583, -3.6312, -0.6018, -2.3928, -0.0395,  0.5880, -2.6636, -1.8827,
         -1.2685]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 128.22508239746094, ub improved 119.76018524169922, time 122.8543
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_2', 'lay10_34', 'lay10_11', 'lay10_49', 'lay10_24', 'lay10_17', 'lay10_13', 'lay10_45', 'lay10_36', 'lay10_43', 'lay10_3', 'lay10_57', 'lay10_69', 'lay10_51', 'lay10_27', 'lay10_30', 'lay10_99', 'lay10_81', 'lay10_64', 'lay10_86', 'lay10_67', 'lay10_40', 'lay10_58', 'lay10_78', 'lay10_15', 'lay10_42', 'lay10_37', 'lay10_97', 'lay10_70', 'lay10_31', 'lay10_91', 'lay10_26', 'lay10_41', 'lay10_79', 'lay10_7', 'lay10_87', 'lay10_44', 'lay10_63', 'lay10_55', 'lay10_74', 'lay10_32', 'lay10_14', 'lay10_6', 'lay10_77', 'lay10_39', 'lay10_0', 'lay10_33', 'lay10_19', 'lay10_21', 'lay10_10', 'lay10_4', 'lay10_65', 'lay10_38', 'lay10_66', 'lay10_20', 'lay10_93', 'lay10_95', 'lay10_82', 'lay10_46', 'lay10_56', 'lay10_89', 'lay10_48', 'lay10_60', 'lay10_35', 'lay10_62', 'lay10_54', 'lay10_98', 'lay10_71', 'lay10_8', 'lay10_28', 'lay10_76', 'lay10_83', 'lay10_92', 'lay10_59', 'lay10_88', 'lay10_73', 'lay10_90', 'lay10_1', 'lay10_68', 'lay10_22', 'lay10_16', 'lay10_96', 'lay10_9', 'lay10_61', 'lay10_85', 'lay10_18', 'lay10_94', 'lay10_52', 'lay10_47', 'lay10_53', 'lay10_75', 'lay10_84', 'lay10_5', 'lay10_25', 'lay10_29', 'lay10_72', 'lay10_50', 'lay10_23', 'lay10_12', 'lay10_80'] filter: 1.0
Solving MIP for lay10_24, [-6.7582221031188965,4.9453840255737305]=>[-6.7582221031188965,-1e-05] (-1,-1; 15,-1), time: 0.3672s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_51, [-5.761885166168213,2.668607234954834]=>[-5.761885166168213,-1e-05] (-1,-1; 15,-1), time: 0.4843s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_11, [-7.528286933898926,4.6296305656433105]=>[-7.528286933898926,-1e-05] (-1,-1; 15,-1), time: 0.5026s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_69, [-6.171937942504883,4.699965953826904]=>[-6.171937942504883,-1e-05] (-1,-1; 15,-1), time: 0.5171s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_2, [-6.485848903656006,6.068405628204346]=>[-6.485848903656006,-1e-05] (-1,-1; 15,-1), time: 0.5240s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_34, [-5.428971767425537,4.776427745819092]=>[-5.428971767425537,-1e-05] (-1,-1; 15,-1), time: 0.5609s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_64, [-6.420143127441406,3.796318769454956]=>[-6.420143127441406,-1e-05] (-1,-1; 15,-1), time: 0.4880s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_45, [-5.814543724060059,4.823607444763184]=>[-5.814543724060059,-1e-05] (-1,-1; 15,-1), time: 1.0669s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_58, [-6.602011680603027,4.512092590332031]=>[-6.602011680603027,-1e-05] (-1,-1; 15,-1), time: 1.0654s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_40, [-5.750241279602051,4.588938236236572]=>[-5.750241279602051,-1e-05] (-1,-1; 15,-1), time: 1.8333s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_15, [-5.81744384765625,3.35370135307312]=>[-5.81744384765625,-1e-05] (-1,-1; 15,-1), time: 0.5198s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_17, [-5.75938081741333,4.734729766845703]=>[-5.75938081741333,-1e-05] (-1,-1; 15,-1), time: 3.0999s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_99, [-5.891725540161133,4.096198081970215]=>[-5.891725540161133,-1e-05] (-1,-1; 15,-1), time: 12.1912s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_70, [-5.557713985443115,2.4152379035949707]=>[-5.557713985443115,-1e-05] (-1,-1; 15,-1), time: 0.5426s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_57, [-4.60701322555542,4.407046794891357]=>[-0.9047639903448219,0.3309280120433714] (9,-1; 9,-1), time: 30.0081s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_30, [-5.304986000061035,4.318295001983643]=>[-1.5562111202064008,0.19103651917131223] (9,-1; 9,-1), time: 30.0059s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_49, [-5.775417327880859,5.19202184677124]=>[-1.4974018905693776,0.2270064754926056] (9,-1; 9,-1), time: 30.0130s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_27, [-4.394597053527832,4.593663692474365]=>[-0.6812144244070709,0.7369977791215798] (9,-1; 9,-1), time: 30.0079s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_36, [-4.788397312164307,4.3703789710998535]=>[-0.9441494810011859,0.6348935610581029] (9,-1; 9,-1), time: 30.0096s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_43, [-4.579511642456055,4.933753967285156]=>[-1.3059804228297205,0.2658576398780593] (9,-1; 9,-1), time: 30.0126s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_3, [-6.08536434173584,5.348036766052246]=>[-1.1965085016287371,0.5703248786853118] (9,-1; 9,-1), time: 30.0089s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_13, [-5.892646312713623,4.940805435180664]=>[-2.0084264715195386,0.0283996598644731] (9,-1; 9,-1), time: 30.0209s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_81, [-4.603030681610107,4.579139232635498]=>[-0.9237797452882033,0.5948598889954622] (9,-1; 9,-1), time: 30.0076s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_67, [-4.274134159088135,4.0337748527526855]=>[-0.8965304678957529,0.27674499572948164] (9,-1; 9,-1), time: 30.0066s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_86, [-5.087871551513672,4.742131233215332]=>[-0.5608407273265842,1.1216754189500264] (9,-1; 9,-1), time: 30.0254s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_78, [-4.900116443634033,5.9116740226745605]=>[-0.440452337132419,1.5258012771283682] (9,-1; 9,-1), time: 30.0089s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_74, [-5.315805435180664,3.8696813583374023]=>[-5.315805435180664,-1e-05] (-1,-1; 15,-1), time: 0.9942s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_44, [-8.177352905273438,4.565801620483398]=>[-8.177352905273438,-1e-05] (-1,-1; 15,-1), time: 1.5959s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_55, [-5.209644317626953,3.7905356884002686]=>[-5.209644317626953,-1e-05] (-1,-1; 15,-1), time: 1.4765s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_26, [-5.8511528968811035,4.53224515914917]=>[-5.8511528968811035,-1e-05] (-1,-1; 15,-1), time: 2.2352s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_42, [-4.813824653625488,4.085336685180664]=>[-0.7193739364317175,0.5386916258849296] (9,-1; 9,-1), time: 30.0056s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_37, [-4.8114094734191895,3.740666627883911]=>[-1.148588684033618,0.14435669451142188] (9,-1; 9,-1), time: 30.0063s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_97, [-4.828620433807373,4.4741902351379395]=>[-0.8336458004350782,0.5436444574221204] (9,-1; 9,-1), time: 30.0066s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_21, [-4.58824348449707,9.679553031921387]=>[1e-05,9.679553031921387] (15,-1; -1,-1), time: 0.3631s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_91, [-5.4726057052612305,4.490130424499512]=>[-5.4726057052612305,-1e-05] (-1,-1; 15,-1), time: 5.5032s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_31, [-4.607316970825195,5.759975910186768]=>[-0.8123072811078658,1.189321100672541] (9,-1; 9,-1), time: 30.0058s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_65, [-5.155104160308838,3.9263861179351807]=>[-5.155104160308838,-1e-05] (-1,-1; 15,-1), time: 12.5910s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_38, [-4.691333293914795,8.078158378601074]=>[1e-05,8.078158378601074] (15,-1; -1,-1), time: 0.4260s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_41, [-5.261904716491699,4.058072090148926]=>[-1.242623198301418,0.3392093374506763] (9,-1; 9,-1), time: 30.0049s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_79, [-4.3361897468566895,5.49650239944458]=>[-0.20529993792323437,1.1602410229454885] (9,-1; 9,-1), time: 30.0065s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_87, [-5.1311116218566895,3.5833451747894287]=>[-1.0940769054241033,0.10318213103336454] (9,-1; 9,-1), time: 30.0054s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_63, [-4.407813549041748,4.63038444519043]=>[-0.8827520585639121,0.4885529353525636] (9,-1; 9,-1), time: 30.0102s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_7, [-5.5675811767578125,4.9874186515808105]=>[-0.9322343798328722,0.634628476894389] (9,-1; 9,-1), time: 30.0292s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_32, [-5.246675968170166,3.560464859008789]=>[-1.198870775312716,0.01547029331053141] (9,-1; 9,-1), time: 30.0061s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_95, [-4.496236801147461,5.010300636291504]=>[1e-05,5.010300636291504] (15,-1; -1,-1), time: 0.9699s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_93, [-4.250689506530762,5.47403621673584]=>[1e-05,5.47403621673584] (15,-1; -1,-1), time: 1.0051s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_14, [-4.794556617736816,4.7678937911987305]=>[-0.3755119914645671,1.105719657701751] (9,-1; 9,-1), time: 30.0058s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_56, [-4.174263954162598,7.541867256164551]=>[1e-05,7.541867256164551] (15,-1; -1,-1), time: 0.5365s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_6, [-4.841164588928223,5.536132335662842]=>[-1.2799493705325116,0.7232614401185806] (9,-1; 9,-1), time: 30.0083s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_77, [-4.822834491729736,4.11536979675293]=>[-0.4655244674426803,0.8542554080531869] (9,-1; 9,-1), time: 30.0070s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_82, [-4.59347677230835,5.140768527984619]=>[1e-05,5.140768527984619] (15,-1; -1,-1), time: 1.6577s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_39, [-5.240238666534424,3.8822407722473145]=>[-1.8243179753935175,0.12189254775400254] (9,-1; 9,-1), time: 30.0069s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_0, [-5.413051605224609,3.651089668273926]=>[-1.857007717114192,0.1982332938014827] (9,-1; 9,-1), time: 30.0049s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_33, [-4.836920738220215,5.885528087615967]=>[-0.0698430793139981,1.6869562765124029] (9,-1; 9,-1), time: 30.0048s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_19, [-3.9390628337860107,4.53847074508667]=>[-0.24390344486670526,1.1130200510614752] (9,-1; 9,-1), time: 30.0074s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_8, [-3.825870990753174,6.369698524475098]=>[1e-05,6.369698524475098] (15,-1; -1,-1), time: 0.4669s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_28, [-3.866238832473755,5.760611534118652]=>[1e-05,5.760611534118652] (15,-1; -1,-1), time: 0.5046s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_76, [-5.049335956573486,8.50490665435791]=>[1e-05,8.50490665435791] (15,-1; -1,-1), time: 0.4729s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_92, [-5.003279209136963,6.835005760192871]=>[1e-05,6.835005760192871] (15,-1; -1,-1), time: 0.4865s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_10, [-4.903266429901123,5.588852405548096]=>[-0.12387636027970311,1.6321763152083453] (9,-1; 9,-1), time: 30.0063s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_59, [-5.397718906402588,2.96280574798584]=>[-5.397718906402588,-1e-05] (-1,-1; 15,-1), time: 0.9762s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_4, [-4.908523082733154,4.137935161590576]=>[-1.5605243999115657,0.10625364427078884] (9,-1; 9,-1), time: 30.0068s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_1, [-4.972036361694336,7.672693252563477]=>[1e-05,7.672693252563477] (15,-1; -1,-1), time: 0.4979s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_68, [-3.6657166481018066,5.3333611488342285]=>[1e-05,5.3333611488342285] (15,-1; -1,-1), time: 0.4761s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_66, [-4.674299716949463,6.127083778381348]=>[1e-05,6.127083778381348] (15,-1; -1,-1), time: 10.5222s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_22, [-4.390188217163086,7.4897613525390625]=>[1e-05,7.4897613525390625] (15,-1; -1,-1), time: 0.4367s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_96, [-4.121707916259766,5.535050868988037]=>[1e-05,5.535050868988037] (15,-1; -1,-1), time: 0.4723s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_35, [-4.568943500518799,3.601304769515991]=>[-4.568943500518799,-1e-05] (-1,-1; 15,-1), time: 10.9927s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_20, [-5.819677352905273,5.011010646820068]=>[-0.013283381649738359,1.8348067714413947] (9,-1; 9,-1), time: 30.0267s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_46, [-5.29430627822876,4.732854843139648]=>[-1.4347716765079677,0.4051731107637409] (9,-1; 9,-1), time: 30.0075s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_89, [-4.645112037658691,5.506712436676025]=>[-0.25529401047281586,1.4968602785556329] (9,-1; 9,-1), time: 30.0113s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_48, [-4.653387546539307,3.8871102333068848]=>[-0.32773514556713307,1.0701272922922118] (9,-1; 9,-1), time: 30.0049s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_60, [-5.0397562980651855,3.1086807250976562]=>[-0.4211350324770513,0.7321640444372471] (9,-1; 9,-1), time: 30.0059s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_52, [-3.9118058681488037,7.7782392501831055]=>[1e-05,7.7782392501831055] (15,-1; -1,-1), time: 0.4936s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_62, [-4.836756706237793,4.936122894287109]=>[-0.3022597436716168,0.8808011089676827] (9,-1; 9,-1), time: 30.0086s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_54, [-5.085010528564453,4.535988807678223]=>[-1.0815571222333236,0.510656010483066] (9,-1; 9,-1), time: 30.0105s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_98, [-5.568042755126953,3.4920766353607178]=>[-0.5150282235682676,0.7011015787898119] (9,-1; 9,-1), time: 30.0109s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_71, [-5.19673490524292,5.73338508605957]=>[-0.35392816448130676,1.9891035153632972] (9,-1; 9,-1), time: 30.0100s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_84, [-4.313624382019043,5.549450397491455]=>[1e-05,5.549450397491455] (15,-1; -1,-1), time: 0.5490s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_25, [-5.94314432144165,4.034823417663574]=>[-5.94314432144165,-1e-05] (-1,-1; 15,-1), time: 0.4988s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_83, [-4.948461532592773,5.673824310302734]=>[-0.1920686094129878,1.829840721532673] (9,-1; 9,-1), time: 30.0106s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_94, [-3.9543089866638184,5.401369571685791]=>[1e-05,5.401369571685791] (15,-1; -1,-1), time: 1.7457s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_23, [-4.075462818145752,5.599190711975098]=>[1e-05,5.599190711975098] (15,-1; -1,-1), time: 0.4789s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_50, [-4.78160285949707,5.667879581451416]=>[1e-05,5.667879581451416] (15,-1; -1,-1), time: 0.5001s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_88, [-4.365492343902588,4.450140476226807]=>[-0.5246511144014959,0.7768724452130875] (9,-1; 9,-1), time: 30.0105s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_73, [-4.037509918212891,3.7336931228637695]=>[-0.4378150495670757,0.6423126756037423] (9,-1; 9,-1), time: 30.0034s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_90, [-5.344813823699951,5.087131500244141]=>[-1.504201690715613,0.4263478494013907] (9,-1; 9,-1), time: 30.0069s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_80, [-4.708449840545654,3.35740327835083]=>[-4.708449840545654,-1e-05] (-1,-1; 15,-1), time: 2.2885s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_16, [-4.410093307495117,3.523463249206543]=>[-0.4608607219557678,0.6009216149764316] (9,-1; 9,-1), time: 30.0201s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_9, [-4.455791473388672,3.4062392711639404]=>[-1.1621598018603714,0.020120679151148936] (9,-1; 9,-1), time: 30.0049s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_61, [-5.8463454246521,4.819042205810547]=>[-1.9510587554919046,0.15067716447468177] (9,-1; 9,-1), time: 30.0076s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_85, [-5.224498748779297,3.974820852279663]=>[-0.2161093754128478,1.0607827998063606] (9,-1; 9,-1), time: 30.0063s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_18, [-4.3493757247924805,5.096956253051758]=>[-0.3956045164951167,1.2173925460060653] (9,-1; 9,-1), time: 30.0066s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_47, [-4.195179462432861,4.658078670501709]=>[-0.7752215915364957,0.5477898467236456] (9,-1; 9,-1), time: 30.0295s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_53, [-5.07936429977417,5.650001525878906]=>[-1.37719817454689,0.6176527369215381] (9,-1; 9,-1), time: 30.0071s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_75, [-4.5971503257751465,4.781009197235107]=>[-0.3943846852626078,0.8280752448113637] (9,-1; 9,-1), time: 30.0072s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_5, [-4.64824914932251,4.667699813842773]=>[-0.62524659084423,0.694331475419449] (9,-1; 9,-1), time: 30.0036s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_29, [-4.604232311248779,5.142459869384766]=>[-0.13448781281954503,1.274921428662169] (9,-1; 9,-1), time: 30.0033s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_72, [-4.7611308097839355,5.808714389801025]=>[-0.0017723044958924538,1.8113233676572098] (9,-1; 9,-1), time: 30.0510s, #vars: 1663, #constrs: 1067, improved: True
Solving MIP for lay10_12, [-4.542023658752441,5.675022602081299]=>[-0.2923784990251423,1.6596982990235298] (9,-1; 9,-1), time: 30.0107s, #vars: 1663, #constrs: 1067, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
best_l after optimization: -11.094942092895508 with beta sum per layer: []
alpha/beta optimization time: 5.937070846557617
alpha-CROWN with intermediate bounds by MIP: tensor([[ 3.5058, -1.3412,  1.8545,  0.2904,  2.5528,  2.5339, -0.4293,  0.4328,
          1.6952]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 317.016845703125, ub improved 317.1999206542969, time 123.9750
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=10, bias=True) 5 12 torch.Size([10])
MIP finished with 376.40184593200684s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: -18.37592315673828 with beta sum per layer: []
alpha/beta optimization time: 5.666245460510254
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 4.1756, -0.5095,  2.8265,  1.1261,  3.4229,  3.2253,  0.2812,  1.2173,
          2.6106]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 4.1756,  0.0000, -0.5095,  2.8265,  1.1261,  3.4229,  3.2253,  0.2812,
          1.2173,  2.6106]], device='cuda:0') min: tensor(-0.5095, device='cuda:0')
time threshold left for bab: 509.4082922935486
##### [0:5] Tested against 2 ######
Model prediction is: tensor([[-4.7250, 11.5023,  1.0272, -3.2290,  0.6359, -2.8726, -2.2377,  1.1579,
          1.3752, -2.3811]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: 0.5099787712097168 with beta sum per layer: []
alpha/beta optimization time: 1.8302321434020996
alpha-CROWN with fixed intermediate bounds: tensor([[-0.5100]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.5099787712097168
layer 0 size torch.Size([100]) unstable 45
layer 1 size torch.Size([100]) unstable 43
layer 2 size torch.Size([100]) unstable 45
layer 3 size torch.Size([100]) unstable 56
layer 4 size torch.Size([100]) unstable 56
-----------------
# of unstable neurons: 245
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [2, 59] 
split level 1: [0, 1] 
split level 2: [0, 42] 
split level 3: [3, 90] 
split level 4: [1, 3] 
split level 5: [1, 61] 
regular batch size: 2*32, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -66.7997817993164 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.012983322143554688
This batch time : update_bounds func: 0.0286	 prepare: 0.0077	 bound: 0.0134	 transfer: 0.0008	 finalize: 0.0065
Accumulated time: update_bounds func: 0.0286	 prepare: 0.0077	 bound: 0.0134	 transfer: 0.0008	 finalize: 0.0065
batch bounding time:  0.028649568557739258
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0877	 pickout: 0.0012	 decision: 0.0475	 get_bound: 0.0389	 add_domain: 0.0000
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 2.414233446121216

Image 5 label 2 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 2.473508358001709
5 1.0000000116860974e-07
##### [0:5] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 0.28122806549072266
Image 5 label 7 verification end, final lower bound 0.28122806549072266, upper bound inf, time: 0.0003979206085205078
5 0.28122806549072266
##### [0:5] Tested against 8 ######
Initial alpha-CROWN verified for label 8 with bound 1.2172632217407227
Image 5 label 8 verification end, final lower bound 1.2172632217407227, upper bound inf, time: 0.0003695487976074219
5 1.2172632217407227
##### [0:5] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 1.126112937927246
Image 5 label 4 verification end, final lower bound 1.126112937927246, upper bound inf, time: 0.00036597251892089844
5 1.126112937927246
##### [0:5] Tested against 6 ######
Initial alpha-CROWN verified for label 6 with bound 3.2252769470214844
Image 5 label 6 verification end, final lower bound 3.2252769470214844, upper bound inf, time: 0.0003924369812011719
5 3.2252769470214844
##### [0:5] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 2.610586166381836
Image 5 label 9 verification end, final lower bound 2.610586166381836, upper bound inf, time: 0.0003833770751953125
5 2.610586166381836
##### [0:5] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 2.8265466690063477
Image 5 label 3 verification end, final lower bound 2.8265466690063477, upper bound inf, time: 0.0003752708435058594
5 2.8265466690063477
##### [0:5] Tested against 5 ######
Initial alpha-CROWN verified for label 5 with bound 3.4228782653808594
Image 5 label 5 verification end, final lower bound 3.4228782653808594, upper bound inf, time: 0.00037217140197753906
5 3.4228782653808594
##### [0:5] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 4.175562381744385
Image 5 label 0 verification end, final lower bound 4.175562381744385, upper bound inf, time: 0.0003876686096191406
5 4.175562381744385
##### [0:5] Tested against 1 ######
groundtruth label, skip!
Result: image 5 verification success (with branch and bound)!
Wall time: 394.08760380744934

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [5]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 393.0682644844055
