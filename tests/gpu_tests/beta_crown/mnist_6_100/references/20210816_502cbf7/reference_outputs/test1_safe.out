/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Mon Nov  1 22:14:10 2021 on huan-Super-Server
Namespace(batch_size=500, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', crown=False, data='MNIST_ERAN_UN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=5, epsilon=0.026, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='eran_models/mnist_6_100_nat_old.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=16, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='mnist_6_100', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='skip', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=4, timeout=300.0)
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1288: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  labels = torch.from_numpy(labels.astype(np.int))
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1292: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1,-1,1,1)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
saving results to Verified_ret_[mnist_6_100]_start=4_end=5_iter=50_b=500_int-beta=False_timeout=300.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  4  correct label  4 logits tensor([-1.3820, -1.5346, -0.5229, -2.8616,  6.9759,  0.0258, -2.4641,  0.4381,
        -0.5032,  4.0722], grad_fn=<SelectBackward0>)
Model prediction is: tensor([[-1.3820, -1.5346, -0.5229, -2.8616,  6.9759,  0.0258, -2.4641,  0.4381,
         -0.5032,  4.0722]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 120.32119750976562 with beta sum per layer: []
optimal alpha/beta time: 5.254690647125244
initial alpha-CROWN bounds: tensor([[-13.0582, -13.1080, -12.5255, -14.8745, -14.8996, -10.1389, -12.6094,
         -15.5623, -13.5448]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_32', 'lay4_8', 'lay4_52', 'lay4_80', 'lay4_45', 'lay4_40', 'lay4_54', 'lay4_74', 'lay4_51', 'lay4_43', 'lay4_71', 'lay4_6', 'lay4_64', 'lay4_13', 'lay4_16', 'lay4_25', 'lay4_48', 'lay4_34', 'lay4_27', 'lay4_18', 'lay4_21', 'lay4_0', 'lay4_86', 'lay4_42', 'lay4_23', 'lay4_55', 'lay4_66', 'lay4_76', 'lay4_84', 'lay4_46', 'lay4_38', 'lay4_60', 'lay4_67', 'lay4_68', 'lay4_96', 'lay4_81', 'lay4_41', 'lay4_10', 'lay4_37', 'lay4_62', 'lay4_94', 'lay4_12', 'lay4_33', 'lay4_20', 'lay4_69', 'lay4_49', 'lay4_24', 'lay4_78', 'lay4_93', 'lay4_99', 'lay4_22', 'lay4_26', 'lay4_83', 'lay4_31', 'lay4_79'] filter: 1.0
Solving MIP for lay4_54, [-1.3168599605560303,0.0977773368358612]=>[-1.3168599605560303,-1e-05] (-1,-1; 15,-1), time: 0.3105s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_45, [-0.11513510346412659,1.2277112007141113]=>[1e-05,1.2277112007141113] (15,-1; -1,-1), time: 0.3504s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_16, [-0.18724438548088074,1.645655632019043]=>[1e-05,1.645655632019043] (15,-1; -1,-1), time: 0.3877s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_48, [-1.7054427862167358,0.055054664611816406]=>[-1.7054427862167358,-1e-05] (-1,-1; 15,-1), time: 0.2565s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_8, [-0.2876444458961487,1.5348432064056396]=>[1e-05,1.5348432064056396] (15,-1; -1,-1), time: 0.6141s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_27, [-1.290568232536316,0.23579123616218567]=>[-1.290568232536316,-1e-05] (-1,-1; 15,-1), time: 0.5582s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_43, [-0.2856696844100952,1.8847436904907227]=>[-0.06674987167646693,1.548546443349266] (2,-1; 2,-1), time: 1.1701s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_86, [-1.3160529136657715,0.12743589282035828]=>[-1.3160529136657715,-1e-05] (-1,-1; 15,-1), time: 0.2538s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_64, [-0.34155839681625366,1.1143510341644287]=>[1e-05,1.1143510341644287] (15,-1; -1,-1), time: 1.6617s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_32, [-1.294992446899414,0.2200981080532074]=>[-1.0276997484852919,0.011614572558256438] (2,-1; 2,-1), time: 1.6825s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_25, [-1.1394362449645996,0.7240502238273621]=>[-0.8653236275628845,0.4953156603273315] (2,-1; 2,-1), time: 1.8005s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_66, [-1.4585434198379517,0.1319625973701477]=>[-1.4585434198379517,-1e-05] (-1,-1; 15,-1), time: 0.2475s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_13, [-1.5709009170532227,0.4001232385635376]=>[-1.3481396451333292,0.04205959179479843] (2,-1; 2,-1), time: 2.0589s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_40, [-0.793340265750885,0.7103768587112427]=>[-0.5343810430200926,0.46843317410737395] (2,-1; 2,-1), time: 2.1193s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_52, [-0.5754688382148743,1.1107170581817627]=>[-0.2980636069375512,0.791626939765959] (2,-1; 2,-1), time: 2.2660s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_80, [-1.3139874935150146,0.36571604013442993]=>[-1.1132895292939669,0.05331179535741139] (2,-1; 2,-1), time: 2.3108s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_84, [-1.519191026687622,0.146055668592453]=>[-1.519191026687622,-1e-05] (-1,-1; 15,-1), time: 0.2736s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_46, [-1.363826036453247,0.15748807787895203]=>[-1.363826036453247,-1e-05] (-1,-1; 15,-1), time: 0.2590s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_18, [-0.2823464870452881,1.0887303352355957]=>[-0.03757102148391662,0.9028227411421011] (2,-1; 2,-1), time: 1.8429s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_74, [-1.7472517490386963,0.4587542414665222]=>[-1.4942099308123868,0.008995490313713488] (2,-1; 2,-1), time: 2.4873s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_51, [-1.1245993375778198,0.32765907049179077]=>[-0.832710207001175,0.12970778927298254] (2,-1; 2,-1), time: 2.6040s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_21, [-1.085667610168457,0.5594513416290283]=>[-0.7770646443760754,0.27316414967683095] (2,-1; 2,-1), time: 2.0300s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_68, [-2.078958511352539,0.0016871094703674316]=>[-2.078958511352539,-1e-05] (-1,-1; 15,-1), time: 0.3211s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_60, [-1.4112123250961304,0.2157929539680481]=>[-1.4112123250961304,-1e-05] (-1,-1; 15,-1), time: 0.4009s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_81, [-2.948957681655884,0.1496562957763672]=>[-2.948957681655884,-1e-05] (-1,-1; 15,-1), time: 0.3211s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_41, [-0.14279770851135254,1.565112829208374]=>[1e-05,1.565112829208374] (15,-1; -1,-1), time: 0.3201s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_34, [-0.5516207218170166,1.2271416187286377]=>[-0.1135751129837552,1.016892342722423] (2,-1; 2,-1), time: 2.9814s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_0, [-0.8716055750846863,0.48296868801116943]=>[-0.5997094811032875,0.2381580998601195] (2,-1; 2,-1), time: 2.4257s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_55, [-1.471935749053955,0.28674352169036865]=>[-1.2088538347364357,0.03329206186148598] (2,-1; 2,-1), time: 1.7555s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_71, [-0.9337379932403564,0.8192538619041443]=>[-0.49469433567526916,0.6294033136234868] (2,-1; 2,-1), time: 3.4464s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_38, [-0.948736310005188,0.5468324422836304]=>[-0.642978070302834,0.3670017596186697] (2,-1; 2,-1), time: 1.4323s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_23, [-0.9416773915290833,0.6482608914375305]=>[-0.5937387672484773,0.45289271585387314] (2,-1; 2,-1), time: 2.2844s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_10, [-1.4068305492401123,0.595373272895813]=>[-1.0581931218254643,0.36590177106958394] (2,-1; 2,-1), time: 1.3259s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_42, [-1.0348176956176758,0.8554744720458984]=>[-0.7475612258385192,0.47357383935754477] (2,-1; 2,-1), time: 2.6966s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_67, [-1.2259999513626099,0.2644594609737396]=>[-1.0548934122109834,0.006016864495076237] (2,-1; 2,-1), time: 1.8530s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_78, [-2.4358627796173096,0.2921825647354126]=>[-2.4358627796173096,-1e-05] (-1,-1; 15,-1), time: 0.2675s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_96, [-1.0749226808547974,0.5691624283790588]=>[-0.7629896010068655,0.3154835785924742] (2,-1; 2,-1), time: 1.9384s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_76, [-0.8866302967071533,0.4837367534637451]=>[-0.6992551135762326,0.1830639454374467] (2,-1; 2,-1), time: 2.4183s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_62, [-1.110295295715332,0.5207010507583618]=>[-0.8382175234226799,0.22761806586575065] (2,-1; 2,-1), time: 1.8210s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_99, [-1.4660764932632446,0.2961752116680145]=>[-1.4660764932632446,-1e-05] (-1,-1; 15,-1), time: 0.7199s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_94, [-1.0693864822387695,0.4242565333843231]=>[-0.8186898555778183,0.1845715599306647] (2,-1; 2,-1), time: 2.0642s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_12, [-1.0489617586135864,0.5428224802017212]=>[-0.6663389617208733,0.37337119067336955] (2,-1; 2,-1), time: 2.2156s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_49, [-0.9279367923736572,0.7558038830757141]=>[-0.586253844186429,0.5342996238893081] (2,-1; 2,-1), time: 1.7295s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_20, [-0.9017752408981323,0.5919111967086792]=>[-0.5589606160937637,0.469679593978362] (2,-1; 2,-1), time: 1.8187s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_33, [-1.1407908201217651,0.32431837916374207]=>[-0.8631580984131354,0.04328843314772273] (2,-1; 2,-1), time: 2.0355s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_6, [-0.35955318808555603,0.9234927296638489]=>[-0.0755857327355086,0.6797670266039204] (2,-1; 2,-1), time: 5.3979s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_37, [-0.9633272886276245,0.1933695673942566]=>[-0.7252388765762687,0.011597968551888209] (2,-1; 2,-1), time: 2.8007s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_26, [-1.311302661895752,0.5730870962142944]=>[-0.9067079455843652,0.36191490529194886] (2,-1; 2,-1), time: 1.8613s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_69, [-1.0289807319641113,0.5536203384399414]=>[-0.581374082328001,0.411107372278535] (2,-1; 2,-1), time: 2.8624s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_31, [-1.8797717094421387,0.4064890742301941]=>[-1.4101323926153806,0.09196933848262992] (2,-1; 2,-1), time: 1.8418s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_24, [-1.2236623764038086,0.41573894023895264]=>[-0.8638215216953473,0.18343274805846133] (2,-1; 2,-1), time: 2.6722s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_83, [-0.7676722407341003,0.8182069063186646]=>[-0.4693126551009729,0.5492035221770446] (2,-1; 2,-1), time: 2.1333s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_79, [-1.4300256967544556,0.710170567035675]=>[-1.008291568486409,0.3596840316546249] (2,-1; 2,-1), time: 2.0650s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_93, [-1.399808406829834,0.32711976766586304]=>[-1.0136252565262749,0.11559276337239732] (2,-1; 2,-1), time: 2.6912s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_22, [-1.1376745700836182,0.6247614026069641]=>[-0.6298433536431,0.49763534993021596] (2,-1; 2,-1), time: 2.5798s, #vars: 1057, #constrs: 308, improved: True
MIP improved 55 nodes out of 55 unstable nodes, lb improved 12.950332641601562, ub improved 11.340866088867188, time 7.1500
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_60', 'lay6_24', 'lay6_64', 'lay6_47', 'lay6_0', 'lay6_82', 'lay6_29', 'lay6_79', 'lay6_43', 'lay6_6', 'lay6_21', 'lay6_55', 'lay6_96', 'lay6_54', 'lay6_5', 'lay6_78', 'lay6_88', 'lay6_14', 'lay6_33', 'lay6_17', 'lay6_19', 'lay6_12', 'lay6_98', 'lay6_46', 'lay6_45', 'lay6_36', 'lay6_89', 'lay6_41', 'lay6_62', 'lay6_28', 'lay6_94', 'lay6_86', 'lay6_32', 'lay6_38', 'lay6_66', 'lay6_81', 'lay6_16', 'lay6_44', 'lay6_20', 'lay6_42', 'lay6_87', 'lay6_25', 'lay6_90', 'lay6_67', 'lay6_84', 'lay6_8', 'lay6_52', 'lay6_11', 'lay6_74', 'lay6_37', 'lay6_80', 'lay6_50', 'lay6_76', 'lay6_30', 'lay6_77', 'lay6_27', 'lay6_3', 'lay6_15', 'lay6_70', 'lay6_95', 'lay6_1', 'lay6_61', 'lay6_49', 'lay6_91', 'lay6_97', 'lay6_40', 'lay6_83', 'lay6_35', 'lay6_72', 'lay6_75', 'lay6_93', 'lay6_4', 'lay6_68', 'lay6_2', 'lay6_65', 'lay6_9', 'lay6_26', 'lay6_10'] filter: 1.0
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
Solving MIP for lay6_6, [-1.3221163749694824,0.2621212899684906]=>[-1.3221163749694824,-1e-05] (-1,-1; 15,-1), time: 0.1644s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_79, [-0.011153459548950195,3.0021331310272217]=>[1e-05,3.0021331310272217] (15,-1; -1,-1), time: 0.1656s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_96, [-1.4351489543914795,0.1081271767616272]=>[-1.4351489543914795,-1e-05] (-1,-1; 15,-1), time: 0.1651s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_29, [-0.18464261293411255,1.206505537033081]=>[1e-05,1.206505537033081] (15,-1; -1,-1), time: 0.1711s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_43, [-0.1657397747039795,1.6357061862945557]=>[1e-05,1.6357061862945557] (15,-1; -1,-1), time: 0.1730s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_5, [-0.16325175762176514,1.293983817100525]=>[1e-05,1.293983817100525] (15,-1; -1,-1), time: 0.1722s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_47, [-1.9636815786361694,0.018919408321380615]=>[-1.9636815786361694,-1e-05] (-1,-1; 15,-1), time: 0.1771s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_14, [-2.3456037044525146,0.21761256456375122]=>[-2.3456037044525146,-1e-05] (-1,-1; 15,-1), time: 0.1460s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_33, [-0.26152169704437256,1.5554170608520508]=>[1e-05,1.5554170608520508] (15,-1; -1,-1), time: 0.1468s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_88, [-0.08251744508743286,1.539905071258545]=>[1e-05,1.539905071258545] (15,-1; -1,-1), time: 0.1481s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_19, [-1.3151134252548218,0.1151544451713562]=>[-1.3151134252548218,-1e-05] (-1,-1; 15,-1), time: 0.1652s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_54, [-0.4400758147239685,1.8400572538375854]=>[1e-05,1.8400572538375854] (15,-1; -1,-1), time: 0.3692s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_55, [-1.4262118339538574,0.359946608543396]=>[-1.4262118339538574,-1e-05] (-1,-1; 15,-1), time: 0.4084s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_45, [-0.011022210121154785,2.157688856124878]=>[1e-05,2.157688856124878] (15,-1; -1,-1), time: 0.1467s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_62, [-0.20417550206184387,1.126497507095337]=>[1e-05,1.126497507095337] (15,-1; -1,-1), time: 0.3270s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_94, [-1.5946035385131836,0.5351666212081909]=>[-1.5946035385131836,-1e-05] (-1,-1; 15,-1), time: 1.0831s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_86, [-1.2628839015960693,0.1685073971748352]=>[-1.2628839015960693,-1e-05] (-1,-1; 15,-1), time: 0.1415s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_17, [-1.2024708986282349,0.3620556592941284]=>[-1.2024708986282349,-1e-05] (-1,-1; 15,-1), time: 2.4228s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_38, [-1.765634298324585,0.03240644931793213]=>[-1.765634298324585,-1e-05] (-1,-1; 15,-1), time: 0.1266s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_82, [-1.3117876052856445,0.47564399242401123]=>[-1.3117876052856445,-1e-05] (-1,-1; 15,-1), time: 2.8198s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_98, [-1.6787174940109253,0.5655311942100525]=>[-1.6787174940109253,-1e-05] (-1,-1; 15,-1), time: 2.6897s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_12, [-0.6660083532333374,1.922737956047058]=>[1e-05,1.922737956047058] (15,-1; -1,-1), time: 2.8409s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_66, [-1.1925926208496094,0.27213865518569946]=>[-1.1925926208496094,-1e-05] (-1,-1; 15,-1), time: 0.2983s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_20, [-0.29308992624282837,1.343346357345581]=>[1e-05,1.343346357345581] (15,-1; -1,-1), time: 0.1441s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_44, [-1.7032551765441895,0.31381088495254517]=>[-1.7032551765441895,-1e-05] (-1,-1; 15,-1), time: 0.2502s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_64, [-0.5412737727165222,1.1029918193817139]=>[1e-05,1.1029918193817139] (15,-1; -1,-1), time: 3.5539s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_42, [-0.44510921835899353,1.4866750240325928]=>[1e-05,1.4866750240325928] (15,-1; -1,-1), time: 0.4204s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_24, [-1.0354024171829224,0.4230984151363373]=>[-1.0354024171829224,-1e-05] (-1,-1; 15,-1), time: 3.6760s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_90, [-1.7977558374404907,0.15746551752090454]=>[-1.7977558374404907,-1e-05] (-1,-1; 15,-1), time: 0.1363s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_84, [-1.6656429767608643,0.11510723829269409]=>[-1.6656429767608643,-1e-05] (-1,-1; 15,-1), time: 0.1481s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_8, [-1.8592665195465088,0.1852845549583435]=>[-1.8592665195465088,-1e-05] (-1,-1; 15,-1), time: 0.1259s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_41, [-0.4556385278701782,1.0148085355758667]=>[1e-05,1.0148085355758667] (15,-1; -1,-1), time: 4.4019s, #vars: 1233, #constrs: 522, improved: True
best_l after optimization: 31.352365493774414 with beta sum per layer: []
optimal alpha/beta time: 5.850305080413818
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.8146, -3.0633, -2.2736, -2.8325, -4.3943, -1.0551, -3.8484, -5.1514,
         -5.9192]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay6_16, [-1.2815003395080566,0.4906947910785675]=>[-1.2815003395080566,-1e-05] (-1,-1; 15,-1), time: 3.7972s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_21, [-0.7066245675086975,0.5552130341529846]=>[-0.2823930768480578,0.19354540818609858] (2,-1; 2,-1), time: 7.6429s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_37, [-0.235784113407135,1.5122754573822021]=>[1e-05,1.5122754573822021] (15,-1; -1,-1), time: 0.1219s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_67, [-0.5446023941040039,1.2526321411132812]=>[1e-05,1.2526321411132812] (15,-1; -1,-1), time: 4.5409s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_50, [-0.4218992590904236,2.247560501098633]=>[1e-05,2.247560501098633] (15,-1; -1,-1), time: 0.2665s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_32, [-0.7003895044326782,1.3926923274993896]=>[-0.1113178762154502,0.8815957700176997] (2,-1; 2,-1), time: 6.5759s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_0, [-0.5092307329177856,1.2599185705184937]=>[-0.10094424118121317,0.587701104221269] (2,-1; 2,-1), time: 8.7157s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_77, [-1.7355934381484985,0.04374665021896362]=>[-1.7355934381484985,-1e-05] (-1,-1; 15,-1), time: 0.1190s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_76, [-1.6758723258972168,0.44850122928619385]=>[-1.6758723258972168,-1e-05] (-1,-1; 15,-1), time: 0.3542s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_27, [-1.9029511213302612,0.09142035245895386]=>[-1.9029511213302612,-1e-05] (-1,-1; 15,-1), time: 0.1204s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_87, [-0.9930832982063293,0.9205546975135803]=>[-0.4099061675837135,0.4169501380926674] (2,-1; 2,-1), time: 6.4892s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_70, [-0.37540629506111145,1.7929222583770752]=>[1e-05,1.7929222583770752] (15,-1; -1,-1), time: 0.2501s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_95, [-1.3474111557006836,0.1640337109565735]=>[-1.3474111557006836,-1e-05] (-1,-1; 15,-1), time: 0.1208s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_52, [-0.9556332230567932,0.4315054714679718]=>[-0.9556332230567932,-1e-05] (-1,-1; 15,-1), time: 6.3016s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_61, [-1.376312255859375,0.29736945033073425]=>[-1.376312255859375,-1e-05] (-1,-1; 15,-1), time: 0.2769s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_74, [-1.1256444454193115,0.49182528257369995]=>[-1.1256444454193115,-1e-05] (-1,-1; 15,-1), time: 3.9432s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_25, [-1.2299907207489014,0.8955148458480835]=>[-0.6098175601544346,0.23017266356703994] (2,-1; 2,-1), time: 7.5483s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_36, [-0.8813940286636353,0.6501920223236084]=>[-0.35678432058594456,0.26795176117778163] (2,-1; 2,-1), time: 11.0356s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_97, [-1.6245172023773193,0.2905169725418091]=>[-1.6245172023773193,-1e-05] (-1,-1; 15,-1), time: 0.3419s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_15, [-0.9558157920837402,0.34769171476364136]=>[-0.9558157920837402,-1e-05] (-1,-1; 15,-1), time: 3.2065s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_35, [-1.6394881010055542,0.3437066078186035]=>[-1.6394881010055542,-1e-05] (-1,-1; 15,-1), time: 0.3582s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_72, [-1.2924177646636963,0.26375043392181396]=>[-1.2924177646636963,-1e-05] (-1,-1; 15,-1), time: 0.3992s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_3, [-0.6279720664024353,1.6539785861968994]=>[1e-05,1.6539785861968994] (15,-1; -1,-1), time: 5.0688s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_93, [-0.3024946451187134,1.664386510848999]=>[1e-05,1.664386510848999] (15,-1; -1,-1), time: 0.2957s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_4, [-1.3531684875488281,0.5251861214637756]=>[-1.3531684875488281,-1e-05] (-1,-1; 15,-1), time: 2.5329s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_89, [-0.6893578171730042,0.9318060278892517]=>[-0.1999635015412439,0.3811727440147678] (2,-1; 2,-1), time: 17.4400s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_2, [-1.3824987411499023,0.2906845510005951]=>[-1.3824987411499023,-1e-05] (-1,-1; 15,-1), time: 0.2895s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_78, [-0.5061036944389343,0.8808663487434387]=>[-0.031357484919647106,0.41736853939685137] (2,-1; 2,-1), time: 18.1210s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_11, [-1.0580652952194214,0.7938551902770996]=>[-0.37082844763566647,0.3103389495658615] (2,-1; 2,-1), time: 13.4415s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_46, [-1.0440640449523926,1.2599513530731201]=>[-0.4319674699223495,0.5504210638108458] (2,-1; 9,-1), time: 18.1169s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_65, [-1.6478627920150757,0.48242616653442383]=>[-1.6478627920150757,-1e-05] (-1,-1; 15,-1), time: 0.4889s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_60, [-0.7494757771492004,0.8441943526268005]=>[-0.12694753451762833,0.4469397012003996] (9,-1; 2,-1), time: 19.1440s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_28, [-1.0993082523345947,0.7822556495666504]=>[-0.48653789128017527,0.15146000590904] (9,-1; 2,-1), time: 18.7156s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_81, [-1.1411786079406738,0.7388123273849487]=>[-0.5220610365763311,0.16523306113159633] (2,-1; 9,-1), time: 18.3806s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_10, [-1.0969288349151611,0.5720990896224976]=>[-1.0969288349151611,-0.0006018738210752045] (-1,-1; 2,-1), time: 2.9534s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_30, [-1.005731463432312,1.1908926963806152]=>[-0.21763031481853745,0.5218000995865111] (2,-1; 2,-1), time: 13.2828s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_1, [-1.3493510484695435,0.6031341552734375]=>[-0.7831425287926589,0.021034878031960736] (2,-1; 2,-1), time: 11.9844s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_91, [-0.9992141723632812,0.862434983253479]=>[-0.4065847638734177,0.26624349204943865] (2,-1; 2,-1), time: 12.9983s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_80, [-0.8564990162849426,1.1113351583480835]=>[-0.18700485219942362,0.5605087341770303] (2,-1; 2,-1), time: 18.0696s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_68, [-0.8910305500030518,0.8709735870361328]=>[-0.3388116655983925,0.31759637489419756] (2,-1; 2,-1), time: 9.7380s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_9, [-0.7800891399383545,0.6901132464408875]=>[-0.225105819844455,0.3315097685074713] (2,-1; 2,-1), time: 11.4092s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_75, [-0.8072139620780945,0.7766262292861938]=>[-0.40022367660452,0.24179089972498696] (2,-1; 9,-1), time: 17.0365s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_49, [-1.0405354499816895,0.7523807883262634]=>[-0.4753194971453885,0.19718530917550164] (2,-1; 9,-1), time: 19.5344s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_40, [-0.943856954574585,0.6057595014572144]=>[-0.28901662091522473,0.21902926810530807] (9,-1; 2,-1), time: 19.0524s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_83, [-0.7092088460922241,0.7319392561912537]=>[-0.16983796667246315,0.2628193665783915] (2,-1; 9,-1), time: 21.8917s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_26, [-1.050748348236084,0.5966380834579468]=>[-0.47290045291321847,0.04104534737238233] (9,-1; 2,-1), time: 19.4225s, #vars: 1233, #constrs: 522, improved: True
MIP improved 78 nodes out of 78 unstable nodes, lb improved 20.168922424316406, ub improved 22.9808292388916, time 38.0392
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_66', 'lay8_15', 'lay8_25', 'lay8_89', 'lay8_57', 'lay8_12', 'lay8_19', 'lay8_36', 'lay8_31', 'lay8_13', 'lay8_51', 'lay8_97', 'lay8_53', 'lay8_39', 'lay8_38', 'lay8_69', 'lay8_63', 'lay8_55', 'lay8_59', 'lay8_27', 'lay8_58', 'lay8_70', 'lay8_65', 'lay8_9', 'lay8_40', 'lay8_95', 'lay8_18', 'lay8_87', 'lay8_22', 'lay8_67', 'lay8_10', 'lay8_28', 'lay8_20', 'lay8_26', 'lay8_73', 'lay8_32', 'lay8_42', 'lay8_37', 'lay8_47', 'lay8_88', 'lay8_29', 'lay8_11', 'lay8_90', 'lay8_16', 'lay8_96', 'lay8_83', 'lay8_33', 'lay8_75', 'lay8_81', 'lay8_41', 'lay8_34', 'lay8_5', 'lay8_48', 'lay8_52', 'lay8_71', 'lay8_49', 'lay8_54', 'lay8_77', 'lay8_98', 'lay8_35', 'lay8_43', 'lay8_99', 'lay8_74', 'lay8_93', 'lay8_30', 'lay8_61', 'lay8_78', 'lay8_79', 'lay8_8', 'lay8_4', 'lay8_94', 'lay8_82', 'lay8_23', 'lay8_46', 'lay8_84', 'lay8_17', 'lay8_85', 'lay8_56', 'lay8_1', 'lay8_24', 'lay8_6', 'lay8_50', 'lay8_0', 'lay8_68', 'lay8_62', 'lay8_45', 'lay8_92', 'lay8_60', 'lay8_21', 'lay8_86', 'lay8_80', 'lay8_2', 'lay8_64', 'lay8_7', 'lay8_3', 'lay8_14', 'lay8_91', 'lay8_76'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
Solving MIP for lay8_12, [-0.5500067472457886,3.893463134765625]=>[1e-05,3.893463134765625] (15,-1; -1,-1), time: 0.2408s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_51, [-2.1950736045837402,0.7218655347824097]=>[-2.1950736045837402,-1e-05] (-1,-1; 15,-1), time: 0.2425s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_66, [-1.79707932472229,0.8403337597846985]=>[-1.79707932472229,-1e-05] (-1,-1; 15,-1), time: 0.2441s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_89, [-2.062239646911621,0.4705196022987366]=>[-2.062239646911621,-1e-05] (-1,-1; 15,-1), time: 0.2440s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_38, [-0.6853436231613159,2.1780683994293213]=>[1e-05,2.1780683994293213] (15,-1; -1,-1), time: 0.2529s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_31, [-1.6756433248519897,0.7033094763755798]=>[-1.6756433248519897,-1e-05] (-1,-1; 15,-1), time: 0.2544s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_25, [-1.9096134901046753,0.3251637816429138]=>[-1.9096134901046753,-1e-05] (-1,-1; 15,-1), time: 0.2563s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_53, [-1.8010555505752563,0.3600160479545593]=>[-1.8010555505752563,-1e-05] (-1,-1; 15,-1), time: 0.2546s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_36, [-1.9407564401626587,0.5340094566345215]=>[-1.9407564401626587,-1e-05] (-1,-1; 15,-1), time: 0.2558s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_69, [-0.04305899143218994,2.1560869216918945]=>[1e-05,2.1560869216918945] (15,-1; -1,-1), time: 0.2581s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_97, [-1.468353509902954,0.41262203454971313]=>[-1.468353509902954,-1e-05] (-1,-1; 15,-1), time: 0.2601s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_15, [-1.9192246198654175,0.6840616464614868]=>[-1.9192246198654175,-1e-05] (-1,-1; 15,-1), time: 0.2649s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_70, [-1.8460907936096191,0.7422029972076416]=>[-1.8460907936096191,-1e-05] (-1,-1; 15,-1), time: 0.2249s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_87, [-2.262963056564331,0.7204806804656982]=>[-2.262963056564331,-1e-05] (-1,-1; 15,-1), time: 0.2218s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_9, [-2.8473105430603027,0.08955419063568115]=>[-2.8473105430603027,-1e-05] (-1,-1; 15,-1), time: 0.2426s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_18, [-0.5085952281951904,2.6263298988342285]=>[1e-05,2.6263298988342285] (15,-1; -1,-1), time: 0.2432s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_95, [-2.6615443229675293,0.6009081602096558]=>[-2.6615443229675293,-1e-05] (-1,-1; 15,-1), time: 0.2466s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_59, [-0.6561959981918335,1.699524164199829]=>[1e-05,1.699524164199829] (15,-1; -1,-1), time: 0.3637s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_58, [-0.9945157170295715,1.5175000429153442]=>[1e-05,1.5175000429153442] (15,-1; -1,-1), time: 0.4073s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_55, [-0.9979166388511658,1.613131046295166]=>[1e-05,1.613131046295166] (15,-1; -1,-1), time: 0.4438s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_10, [-0.39646756649017334,2.6153931617736816]=>[1e-05,2.6153931617736816] (15,-1; -1,-1), time: 0.2172s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_27, [-1.470104455947876,0.7226318717002869]=>[-1.470104455947876,-1e-05] (-1,-1; 15,-1), time: 0.5359s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_26, [-0.6573895215988159,3.0335092544555664]=>[1e-05,3.0335092544555664] (15,-1; -1,-1), time: 0.2241s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_42, [-0.41004669666290283,2.4034080505371094]=>[1e-05,2.4034080505371094] (15,-1; -1,-1), time: 0.1720s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_32, [-2.307966709136963,0.3517230749130249]=>[-2.307966709136963,-1e-05] (-1,-1; 15,-1), time: 0.2186s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_37, [-0.5254628658294678,1.704610824584961]=>[1e-05,1.704610824584961] (15,-1; -1,-1), time: 0.2202s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_47, [-0.66978919506073,2.596248149871826]=>[1e-05,2.596248149871826] (15,-1; -1,-1), time: 0.2343s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_29, [-0.9365636110305786,2.092902660369873]=>[1e-05,2.092902660369873] (15,-1; -1,-1), time: 0.2199s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_90, [-2.1340270042419434,0.6888108253479004]=>[-2.1340270042419434,-1e-05] (-1,-1; 15,-1), time: 0.2194s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_16, [-0.8407279253005981,1.5650217533111572]=>[1e-05,1.5650217533111572] (15,-1; -1,-1), time: 0.2190s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_22, [-0.9829556345939636,1.389236569404602]=>[1e-05,1.389236569404602] (15,-1; -1,-1), time: 4.2721s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_39, [-1.1633198261260986,0.8261160850524902]=>[-1.1633198261260986,-1e-05] (-1,-1; 15,-1), time: 4.9496s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_65, [-1.2551723718643188,0.8666990995407104]=>[-1.2551723718643188,-1e-05] (-1,-1; 15,-1), time: 4.7203s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_75, [-1.8591203689575195,0.4890216588973999]=>[-1.8591203689575195,-1e-05] (-1,-1; 15,-1), time: 0.1915s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_81, [-0.539152979850769,2.7323286533355713]=>[1e-05,2.7323286533355713] (15,-1; -1,-1), time: 0.1999s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_41, [-1.4973180294036865,0.5656096339225769]=>[-1.4973180294036865,-1e-05] (-1,-1; 15,-1), time: 0.3644s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_5, [-0.4236656427383423,2.6275625228881836]=>[1e-05,2.6275625228881836] (15,-1; -1,-1), time: 0.1945s, #vars: 1381, #constrs: 694, improved: True
best_l after optimization: -5.283962249755859 with beta sum per layer: []
optimal alpha/beta time: 5.785311937332153
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.4576,  1.3231,  1.5912,  1.6823,  0.0793,  2.5673, -0.1768, -0.8030,
         -2.4370]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay8_48, [-1.5859549045562744,0.7779058814048767]=>[-1.5859549045562744,-1e-05] (-1,-1; 15,-1), time: 0.5274s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_52, [-0.7318756580352783,1.7739460468292236]=>[1e-05,1.7739460468292236] (15,-1; -1,-1), time: 0.1926s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_11, [-1.3881020545959473,0.8424422144889832]=>[-1.3881020545959473,-1e-05] (-1,-1; 15,-1), time: 13.0640s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_49, [-0.7495592832565308,1.8022680282592773]=>[1e-05,1.8022680282592773] (15,-1; -1,-1), time: 0.3532s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_19, [-1.3391168117523193,1.084708571434021]=>[-0.33532461707310174,0.27071971941961465] (9,-1; 2,-1), time: 23.1454s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_77, [-2.0875489711761475,0.5262683033943176]=>[-2.0875489711761475,-1e-05] (-1,-1; 15,-1), time: 0.1896s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_98, [-1.9065747261047363,0.5317696332931519]=>[-1.9065747261047363,-1e-05] (-1,-1; 15,-1), time: 0.1888s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_35, [-0.7412002682685852,1.7079802751541138]=>[1e-05,1.7079802751541138] (15,-1; -1,-1), time: 0.1918s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_43, [-0.7906298041343689,2.1829142570495605]=>[1e-05,2.1829142570495605] (15,-1; -1,-1), time: 0.1880s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_99, [-2.099972724914551,0.24806547164916992]=>[-2.099972724914551,-1e-05] (-1,-1; 15,-1), time: 0.1908s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_67, [-1.2236778736114502,1.513922095298767]=>[-0.041108399700768114,0.6758350558925492] (9,-1; 2,-1), time: 25.8695s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_13, [-0.9641417860984802,1.1815255880355835]=>[-0.2005609709548745,0.30912846168446906] (9,-1; 9,-1), time: 30.0030s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_57, [-1.6898711919784546,1.2032088041305542]=>[-0.4679140365508959,0.25757183093923464] (9,-1; 9,-1), time: 30.0181s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_63, [-1.8141841888427734,1.7358803749084473]=>[-0.634472485461819,0.36439233635637014] (9,-1; 9,-1), time: 30.0076s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_40, [-0.8327842354774475,1.156677007675171]=>[-0.10567033002922896,0.44706872662411246] (9,-1; 9,-1), time: 30.0038s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_20, [-0.9264935851097107,1.00534987449646]=>[-0.1953932211743126,0.21528518042941566] (9,-1; 9,-1), time: 30.0025s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_28, [-0.9329319596290588,1.1187525987625122]=>[-0.21933545583391004,0.1972892511016419] (9,-1; 9,-1), time: 30.0155s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_79, [-1.9431134462356567,0.6746770143508911]=>[-1.9431134462356567,-1e-05] (-1,-1; 15,-1), time: 0.3252s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_73, [-1.0879249572753906,1.5351433753967285]=>[-0.211983922759144,0.438079420489014] (9,-1; 9,-1), time: 30.0028s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_4, [-1.5882816314697266,0.6092766523361206]=>[-1.5882816314697266,-1e-05] (-1,-1; 15,-1), time: 0.1937s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_88, [-0.9669913053512573,1.4342931509017944]=>[-0.2649113880889212,0.33630383220997456] (9,-1; 9,-1), time: 30.0117s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_23, [-0.5736594200134277,1.6383658647537231]=>[1e-05,1.6383658647537231] (15,-1; -1,-1), time: 0.1856s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_46, [-1.4466828107833862,0.6976673603057861]=>[-1.4466828107833862,-1e-05] (-1,-1; 15,-1), time: 0.1900s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_17, [-1.4467226266860962,0.7644403576850891]=>[-1.4467226266860962,-1e-05] (-1,-1; 15,-1), time: 0.1965s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_96, [-0.8484979271888733,1.4127144813537598]=>[-0.08536280060826745,0.5350629755583343] (9,-1; 9,-1), time: 30.0081s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_83, [-1.2996326684951782,0.8685458898544312]=>[-0.48824991729465345,0.03631630131988203] (9,-1; 9,-1), time: 30.0108s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_85, [-0.8759295344352722,1.5299286842346191]=>[1e-05,1.5299286842346191] (15,-1; -1,-1), time: 0.1943s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_56, [-1.6015125513076782,0.6327484846115112]=>[-1.6015125513076782,-1e-05] (-1,-1; 15,-1), time: 0.3246s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_24, [-1.4276535511016846,0.6242524981498718]=>[-1.4276535511016846,-1e-05] (-1,-1; 15,-1), time: 0.3406s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_33, [-1.008086085319519,1.1984626054763794]=>[-0.08645391128201182,0.40962415003792674] (9,-1; 9,-1), time: 30.0101s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_0, [-1.6805633306503296,0.4744279384613037]=>[-1.6805633306503296,-1e-05] (-1,-1; 15,-1), time: 0.1891s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_34, [-0.9577720165252686,1.661362648010254]=>[-0.27768517720199826,0.4143388848483341] (9,-1; 9,-1), time: 30.0051s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_62, [-2.6872053146362305,0.23247241973876953]=>[-2.6872053146362305,-1e-05] (-1,-1; 15,-1), time: 0.1922s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_71, [-1.384116291999817,0.7786581516265869]=>[-0.4432131572921918,0.09251982874541859] (9,-1; 9,-1), time: 30.0031s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_68, [-1.6361339092254639,1.1174352169036865]=>[-1.6361339092254639,-1e-05] (-1,-1; 15,-1), time: 2.9047s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_94, [-1.4410933256149292,0.642703652381897]=>[-1.4410933256149292,-1e-05] (-1,-1; 15,-1), time: 10.4514s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_60, [-1.4810619354248047,0.9086281657218933]=>[-1.4810619354248047,-1e-05] (-1,-1; 15,-1), time: 4.1567s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_86, [-1.800307035446167,0.5843631029129028]=>[-1.800307035446167,-1e-05] (-1,-1; 15,-1), time: 0.3407s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_54, [-1.141530990600586,1.1062172651290894]=>[-0.34770620640555194,0.20932788006324932] (9,-1; 9,-1), time: 30.0029s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_74, [-1.0200468301773071,1.8117841482162476]=>[-0.16215895036657774,0.6547573877661094] (9,-1; 9,-1), time: 30.0030s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_93, [-1.1322071552276611,1.0468170642852783]=>[-0.27453441256359823,0.240970584961958] (9,-1; 9,-1), time: 30.0036s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_7, [-2.3720626831054688,0.6048133969306946]=>[-2.3720626831054688,-1e-05] (-1,-1; 15,-1), time: 0.1903s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_30, [-1.0356035232543945,1.547252893447876]=>[-0.23887969933002298,0.4489553453860234] (9,-1; 9,-1), time: 30.0028s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_61, [-1.3184760808944702,0.7277997136116028]=>[-0.4654481391190656,0.020937170479172606] (9,-1; 9,-1), time: 30.0027s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_78, [-1.6499334573745728,0.8526676297187805]=>[-0.6172706713059339,0.061198654707544264] (9,-1; 9,-1), time: 30.0038s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_8, [-1.441890835762024,1.0407850742340088]=>[-0.4153812850978327,0.1529377543173266] (9,-1; 9,-1), time: 30.0028s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_82, [-1.166036605834961,1.7491945028305054]=>[-0.39423745411744054,0.4627285833140425] (9,-1; 9,-1), time: 30.0044s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_84, [-1.2003012895584106,0.9958702325820923]=>[-0.4090554902574643,0.12653981411178983] (9,-1; 9,-1), time: 30.0037s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_1, [-1.585680365562439,1.0868377685546875]=>[-0.6056312923181457,0.1387103597909564] (9,-1; 9,-1), time: 30.0028s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_6, [-1.224519968032837,0.847832202911377]=>[-0.3044513342670707,0.1552247178584909] (9,-1; 9,-1), time: 30.0039s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_50, [-1.344227910041809,1.112900733947754]=>[-0.5065359026749644,0.21205380927171102] (9,-1; 9,-1), time: 30.0040s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_45, [-0.9915527105331421,1.053236484527588]=>[-0.2120470168323456,0.2263004352221413] (9,-1; 9,-1), time: 30.0101s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_92, [-1.2583483457565308,1.5960174798965454]=>[-0.2933260405178024,0.580487241076789] (9,-1; 9,-1), time: 30.0054s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_64, [-1.0106126070022583,1.3368427753448486]=>[1e-05,1.3368427753448486] (15,-1; -1,-1), time: 13.6897s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_80, [-1.7090246677398682,1.225374460220337]=>[-0.8371879159090952,0.20779176094766844] (2,-1; 9,-1), time: 26.1717s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_2, [-0.8922715187072754,1.1921899318695068]=>[-0.01795871511772559,0.5451881511104413] (9,-1; 2,-1), time: 25.3270s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_21, [-1.1666611433029175,1.392873764038086]=>[-0.2790046482951058,0.3978879811103591] (9,-1; 9,-1), time: 30.0034s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_14, [-1.3453950881958008,1.4976253509521484]=>[-0.41650948555947226,0.3807859148042315] (2,-1; 9,-1), time: 25.1938s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_3, [-1.0504348278045654,1.7114167213439941]=>[-0.2685609198173915,0.4298934988938502] (9,-1; 9,-1), time: 30.0047s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_91, [-1.4878482818603516,0.9892783164978027]=>[-0.6591032044986237,0.12264644747380533] (9,-1; 9,-1), time: 30.0038s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_76, [-1.0620352029800415,1.2198752164840698]=>[-0.2757716698134701,0.22608271997254067] (2,-1; 9,-1), time: 29.8517s, #vars: 1381, #constrs: 694, improved: True
MIP improved 98 nodes out of 98 unstable nodes, lb improved 47.73341751098633, ub improved 56.90251922607422, time 90.5651
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_51', 'lay10_35', 'lay10_53', 'lay10_14', 'lay10_20', 'lay10_67', 'lay10_7', 'lay10_3', 'lay10_62', 'lay10_1', 'lay10_73', 'lay10_76', 'lay10_96', 'lay10_93', 'lay10_16', 'lay10_98', 'lay10_97', 'lay10_84', 'lay10_6', 'lay10_30', 'lay10_56', 'lay10_10', 'lay10_44', 'lay10_59', 'lay10_18', 'lay10_8', 'lay10_40', 'lay10_28', 'lay10_68', 'lay10_46', 'lay10_9', 'lay10_26', 'lay10_4', 'lay10_63', 'lay10_74', 'lay10_88', 'lay10_60', 'lay10_19', 'lay10_79', 'lay10_71', 'lay10_90', 'lay10_38', 'lay10_66', 'lay10_95', 'lay10_21', 'lay10_58', 'lay10_37', 'lay10_61', 'lay10_87', 'lay10_47', 'lay10_80', 'lay10_0', 'lay10_32', 'lay10_33', 'lay10_99', 'lay10_52', 'lay10_27', 'lay10_39', 'lay10_85', 'lay10_22', 'lay10_29', 'lay10_78', 'lay10_31', 'lay10_86', 'lay10_48', 'lay10_82', 'lay10_94', 'lay10_77', 'lay10_70', 'lay10_91', 'lay10_54', 'lay10_81', 'lay10_25', 'lay10_69', 'lay10_89', 'lay10_24', 'lay10_65', 'lay10_75', 'lay10_50', 'lay10_12', 'lay10_5', 'lay10_15', 'lay10_42', 'lay10_49', 'lay10_41', 'lay10_23', 'lay10_55', 'lay10_83', 'lay10_17', 'lay10_43', 'lay10_92', 'lay10_11', 'lay10_64', 'lay10_72', 'lay10_34', 'lay10_57', 'lay10_2', 'lay10_36', 'lay10_45', 'lay10_13'] filter: 1.0
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
Solving MIP for lay10_98, [-3.1945645809173584,1.2700724601745605]=>[-3.1945645809173584,-1e-05] (-1,-1; 15,-1), time: 0.3012s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_35, [-2.337756395339966,1.336718201637268]=>[-2.337756395339966,-1e-05] (-1,-1; 15,-1), time: 0.3133s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_20, [-3.338263988494873,1.6291751861572266]=>[-3.338263988494873,-1e-05] (-1,-1; 15,-1), time: 0.3131s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_51, [-2.939682960510254,1.2096011638641357]=>[-2.939682960510254,-1e-05] (-1,-1; 15,-1), time: 0.3140s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_1, [-3.06909441947937,2.157550811767578]=>[-3.06909441947937,-1e-05] (-1,-1; 15,-1), time: 0.3164s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_73, [-2.0284218788146973,1.4680919647216797]=>[-2.0284218788146973,-1e-05] (-1,-1; 15,-1), time: 0.3166s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_16, [-2.238339900970459,1.4090149402618408]=>[-2.238339900970459,-1e-05] (-1,-1; 15,-1), time: 0.3169s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_53, [-2.947155714035034,1.9043792486190796]=>[-2.947155714035034,-1e-05] (-1,-1; 15,-1), time: 0.3200s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_59, [-2.934798002243042,1.1870101690292358]=>[-2.934798002243042,-1e-05] (-1,-1; 15,-1), time: 0.2260s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_84, [-2.412276268005371,3.596848487854004]=>[1e-05,3.596848487854004] (15,-1; -1,-1), time: 0.2660s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_8, [-1.8048646450042725,3.2270429134368896]=>[1e-05,3.2270429134368896] (15,-1; -1,-1), time: 0.2609s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_40, [-1.9091579914093018,3.518005132675171]=>[1e-05,3.518005132675171] (15,-1; -1,-1), time: 0.2248s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_67, [-1.8677982091903687,2.4184751510620117]=>[1e-05,2.4184751510620117] (15,-1; -1,-1), time: 1.1116s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_28, [-1.758952021598816,3.278315544128418]=>[1e-05,3.278315544128418] (15,-1; -1,-1), time: 0.2378s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_68, [-1.7005634307861328,2.686145544052124]=>[1e-05,2.686145544052124] (15,-1; -1,-1), time: 0.2391s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_30, [-2.0434017181396484,2.381661891937256]=>[1e-05,2.381661891937256] (15,-1; -1,-1), time: 1.1750s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_26, [-2.5904996395111084,4.32668399810791]=>[1e-05,4.32668399810791] (15,-1; -1,-1), time: 0.2699s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_4, [-2.4703474044799805,1.4455339908599854]=>[-2.4703474044799805,-1e-05] (-1,-1; 15,-1), time: 0.2669s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_63, [-1.5805193185806274,3.012928009033203]=>[1e-05,3.012928009033203] (15,-1; -1,-1), time: 0.2649s, #vars: 1553, #constrs: 902, improved: True
best_l after optimization: -17.141704559326172 with beta sum per layer: []
optimal alpha/beta time: 5.1258978843688965
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.8974,  2.7288,  2.7861,  3.0737,  1.5156,  3.7161,  1.0408,  0.6730,
         -1.2898]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay10_96, [-2.2857940196990967,1.8152928352355957]=>[-2.2857940196990967,-1e-05] (-1,-1; 15,-1), time: 5.1456s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_88, [-1.697338581085205,2.6351776123046875]=>[1e-05,2.6351776123046875] (15,-1; -1,-1), time: 0.2345s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_60, [-3.355696201324463,1.0278757810592651]=>[-3.355696201324463,-1e-05] (-1,-1; 15,-1), time: 0.2372s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_19, [-1.3646259307861328,3.007101535797119]=>[1e-05,3.007101535797119] (15,-1; -1,-1), time: 0.2303s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_79, [-1.9153730869293213,3.386564254760742]=>[1e-05,3.386564254760742] (15,-1; -1,-1), time: 0.2344s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_71, [-2.1512138843536377,3.7855987548828125]=>[1e-05,3.7855987548828125] (15,-1; -1,-1), time: 0.2382s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_90, [-2.253166913986206,3.299386739730835]=>[1e-05,3.299386739730835] (15,-1; -1,-1), time: 0.2324s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_38, [-1.4930081367492676,3.9478492736816406]=>[1e-05,3.9478492736816406] (15,-1; -1,-1), time: 0.2430s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_66, [-1.608994722366333,3.588212251663208]=>[1e-05,3.588212251663208] (15,-1; -1,-1), time: 0.2368s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_95, [-1.6026382446289062,4.075028419494629]=>[1e-05,4.075028419494629] (15,-1; -1,-1), time: 0.2403s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_62, [-2.511178731918335,2.090400218963623]=>[-0.6048729972417248,0.19810401913037298] (9,-1; 9,-1), time: 30.0044s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_7, [-2.8006653785705566,2.3997550010681152]=>[-0.44596326646765516,0.4318394000259254] (9,-1; 9,-1), time: 30.0134s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_3, [-3.0861446857452393,2.531832695007324]=>[-0.599963107054039,0.4514344964746916] (9,-1; 9,-1), time: 30.0150s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_93, [-1.9954338073730469,2.199589252471924]=>[-0.7201241103178783,0.1565374598064219] (9,-1; 9,-1), time: 30.0141s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_14, [-2.355865716934204,2.3121604919433594]=>[-0.5719470700959354,0.3203061604109676] (9,-1; 9,-1), time: 30.0180s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_76, [-1.7316547632217407,3.1450133323669434]=>[-0.21026624841868435,0.48713378090957477] (9,-1; 9,-1), time: 30.0467s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_37, [-2.4768896102905273,1.617006540298462]=>[-2.4768896102905273,-1e-05] (-1,-1; 15,-1), time: 0.2272s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_47, [-1.629326581954956,3.9234659671783447]=>[1e-05,3.9234659671783447] (15,-1; -1,-1), time: 0.2228s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_87, [-1.978746771812439,3.1118814945220947]=>[1e-05,3.1118814945220947] (15,-1; -1,-1), time: 0.2309s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_80, [-2.41401743888855,1.4169518947601318]=>[-2.41401743888855,-1e-05] (-1,-1; 15,-1), time: 0.2304s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_97, [-2.5850841999053955,2.397148370742798]=>[-0.5838492136994887,0.3658839196092015] (9,-1; 9,-1), time: 30.0107s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_6, [-2.1936755180358887,2.36624813079834]=>[-0.32486279889226816,0.24866692290271505] (9,-1; 9,-1), time: 30.0128s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_44, [-3.7399792671203613,2.1972806453704834]=>[-1.124994263367018,0.021152635467785574] (9,-1; 9,-1), time: 30.0190s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_56, [-2.0932822227478027,2.3947079181671143]=>[-0.24630969508330802,0.24111852718852833] (9,-1; 9,-1), time: 30.0809s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_10, [-2.5560343265533447,2.51444935798645]=>[-0.5798547597945789,0.23967190949807585] (9,-1; 9,-1), time: 30.0854s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_0, [-2.6509668827056885,1.4800952672958374]=>[-2.6509668827056885,-1e-05] (-1,-1; 15,-1), time: 0.2306s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_33, [-1.3830151557922363,4.697627067565918]=>[1e-05,4.697627067565918] (15,-1; -1,-1), time: 0.2229s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_18, [-2.4212958812713623,2.194636583328247]=>[-0.6690025629393029,0.025464176970970493] (9,-1; 9,-1), time: 30.0106s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_85, [-2.962364435195923,1.3697268962860107]=>[-2.962364435195923,-1e-05] (-1,-1; 15,-1), time: 0.2329s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_22, [-2.1521105766296387,1.8123807907104492]=>[-2.1521105766296387,-1e-05] (-1,-1; 15,-1), time: 0.2346s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_39, [-2.7340729236602783,1.6337018013000488]=>[-2.7340729236602783,-1e-05] (-1,-1; 15,-1), time: 0.4327s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_48, [-2.980599880218506,1.2084360122680664]=>[-2.980599880218506,-1e-05] (-1,-1; 15,-1), time: 0.2419s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_46, [-2.7275233268737793,2.487046718597412]=>[-0.6150588075608909,0.48062922277692915] (9,-1; 9,-1), time: 30.0061s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_9, [-2.167505979537964,1.6602909564971924]=>[-0.5605255017917654,0.06714147114827124] (9,-1; 9,-1), time: 30.0085s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_70, [-2.729671001434326,0.8227894306182861]=>[-2.729671001434326,-1e-05] (-1,-1; 15,-1), time: 0.2274s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_77, [-2.4996135234832764,1.862473726272583]=>[-2.4996135234832764,-1e-05] (-1,-1; 15,-1), time: 0.7022s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_74, [-2.441765308380127,2.708437442779541]=>[-0.02117343889827216,0.6992451404007891] (9,-1; 9,-1), time: 30.0119s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_94, [-2.158262252807617,2.1494932174682617]=>[-2.158262252807617,-1e-05] (-1,-1; 15,-1), time: 5.8732s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_25, [-2.719708204269409,1.9318437576293945]=>[-2.719708204269409,-1e-05] (-1,-1; 15,-1), time: 0.2415s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_21, [-2.5192413330078125,3.3489255905151367]=>[-0.8328300755541088,0.3704275043183603] (9,-1; 9,-1), time: 30.0272s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_58, [-2.433277130126953,2.5110654830932617]=>[-0.22323144656847638,0.5654417996462083] (9,-1; 9,-1), time: 30.0082s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_61, [-2.4409260749816895,2.9783263206481934]=>[-0.21329536941207952,0.8742467576965897] (9,-1; 9,-1), time: 30.0147s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_32, [-2.552069664001465,1.738183856010437]=>[-0.38186485449256957,0.2284222400487683] (9,-1; 9,-1), time: 30.0136s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_99, [-2.3155977725982666,2.3019330501556396]=>[-0.1864184411134538,0.6537671001358119] (9,-1; 9,-1), time: 30.0080s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_52, [-1.9916770458221436,2.43523907661438]=>[-0.07877950566657116,0.6048637071639335] (9,-1; 9,-1), time: 30.0131s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_27, [-2.070852756500244,2.354736328125]=>[-0.5203770725565994,0.2545307067216911] (9,-1; 9,-1), time: 30.0095s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_65, [-3.0591928958892822,1.9590609073638916]=>[-3.0591928958892822,-1e-05] (-1,-1; 15,-1), time: 0.4308s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_29, [-2.1581103801727295,2.2274270057678223]=>[-0.3749587212515416,0.2530756432319605] (9,-1; 9,-1), time: 30.0130s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_78, [-2.2376832962036133,2.860206127166748]=>[-0.5106700999523951,0.43871475325979675] (9,-1; 9,-1), time: 30.0148s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_50, [-2.6493265628814697,1.881654977798462]=>[-2.6493265628814697,-1e-05] (-1,-1; 15,-1), time: 0.2345s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_31, [-2.539055585861206,3.039172649383545]=>[-1.001631026963003,0.28299363216998996] (9,-1; 9,-1), time: 30.0085s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_86, [-2.7668941020965576,2.0329670906066895]=>[-0.5138205741957929,0.41611130528613155] (9,-1; 9,-1), time: 30.0124s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_82, [-2.077413320541382,2.51344633102417]=>[-0.3348379490960808,0.4931638545289533] (9,-1; 9,-1), time: 30.0084s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_23, [-2.356890916824341,2.061033010482788]=>[-2.356890916824341,-1e-05] (-1,-1; 15,-1), time: 0.2275s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_83, [-3.341357946395874,2.2464776039123535]=>[-3.341357946395874,-1e-05] (-1,-1; 15,-1), time: 0.2238s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_91, [-2.571934223175049,2.5851802825927734]=>[-0.5877275903749195,0.3191146826303457] (9,-1; 9,-1), time: 30.0144s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_92, [-3.084439754486084,2.0969817638397217]=>[-3.084439754486084,-1e-05] (-1,-1; 15,-1), time: 0.2368s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_54, [-2.5860679149627686,2.2330894470214844]=>[-0.860033639719063,0.033358487199736823] (9,-1; 9,-1), time: 30.0083s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_81, [-2.4357059001922607,2.1559219360351562]=>[-0.6263706918615407,0.33333286454424427] (9,-1; 9,-1), time: 30.0033s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_72, [-2.651759624481201,2.017266273498535]=>[-2.651759624481201,-1e-05] (-1,-1; 15,-1), time: 0.4326s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_15, [-2.435960531234741,1.6509253978729248]=>[-2.435960531234741,-1e-05] (-1,-1; 15,-1), time: 4.9934s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_55, [-2.4828665256500244,1.818099021911621]=>[-2.4828665256500244,-1e-05] (-1,-1; 15,-1), time: 4.8311s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_2, [-2.2609121799468994,4.818037986755371]=>[1e-05,4.818037986755371] (15,-1; -1,-1), time: 0.2243s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_69, [-2.649709701538086,2.5642833709716797]=>[-0.5121963225148798,0.2035945320974672] (9,-1; 9,-1), time: 30.0294s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_89, [-2.5151798725128174,2.558328151702881]=>[-0.877925667628189,0.11572788933473271] (9,-1; 9,-1), time: 30.0160s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_13, [-3.462419033050537,2.401484251022339]=>[-3.462419033050537,-1e-05] (-1,-1; 15,-1), time: 0.4546s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_36, [-2.317884683609009,1.910644292831421]=>[-2.317884683609009,-1e-05] (-1,-1; 15,-1), time: 5.5861s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_24, [-2.6064584255218506,3.049391508102417]=>[-0.5281718734572156,0.5479078076335968] (9,-1; 9,-1), time: 30.0046s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_75, [-2.2611231803894043,2.4172894954681396]=>[-0.4371174533843984,0.3168285784207074] (9,-1; 9,-1), time: 30.0058s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_12, [-2.4998137950897217,2.691196918487549]=>[-0.7312563644504434,0.3477156838863447] (9,-1; 9,-1), time: 30.0030s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_5, [-2.0739712715148926,2.384014368057251]=>[-0.21859377211642358,0.36664827754428153] (9,-1; 9,-1), time: 30.0122s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_49, [-2.8689377307891846,2.460554838180542]=>[-0.5909063222891652,0.19590232019912304] (9,-1; 9,-1), time: 30.0036s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_42, [-2.600395917892456,2.0328757762908936]=>[-0.8549826939433246,0.04769912301390014] (9,-1; 9,-1), time: 30.0152s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_41, [-2.3963799476623535,2.1815149784088135]=>[-0.5513057219770091,0.23790388028037107] (9,-1; 9,-1), time: 30.0103s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_17, [-2.657325029373169,2.5016610622406006]=>[-0.253813006919304,0.5919789439479385] (9,-1; 9,-1), time: 30.0101s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_43, [-2.0959620475769043,2.902650833129883]=>[-0.3307023153202724,0.5804987855484328] (9,-1; 9,-1), time: 30.0050s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_11, [-2.438628673553467,2.6194870471954346]=>[-0.1782834582587494,0.6153090153113702] (9,-1; 9,-1), time: 30.0040s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_64, [-2.600414991378784,2.262497663497925]=>[-0.8525164438040925,0.190615616288746] (9,-1; 9,-1), time: 30.0066s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_34, [-2.4544119834899902,2.2850379943847656]=>[-0.3144674580988517,0.4414434653078816] (9,-1; 9,-1), time: 30.0182s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_57, [-2.27120304107666,2.0578532218933105]=>[-0.4709336708560044,0.10627486040268516] (9,-1; 9,-1), time: 30.0024s, #vars: 1553, #constrs: 902, improved: True
Solving MIP for lay10_45, [-2.451613426208496,2.4674196243286133]=>[-0.6401919910414967,0.20742030911414822] (9,-1; 9,-1), time: 30.0030s, #vars: 1553, #constrs: 902, improved: True
MIP improved 100 nodes out of 100 unstable nodes, lb improved 128.08274841308594, ub improved 151.89068603515625, time 97.4813
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=10, bias=True) 5 12 torch.Size([10])
MIP finished with 234.53931403160095s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: -22.154319763183594 with beta sum per layer: []
optimal alpha/beta time: 4.612098217010498
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 3.4485,  3.2224,  3.2580,  3.7296,  2.0627,  4.1537,  1.5463,  1.4296,
         -0.6965]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[ 3.4485,  3.2224,  3.2580,  3.7296,  0.0000,  2.0627,  4.1537,  1.5463,
          1.4296, -0.6965]], device='cuda:0') min: tensor(-0.6965, device='cuda:0')
time threshold left for bab: 54.95616340637207
##### [0:4] Tested against 0 ######
init opt crown verified for label 0 with bound 3.448460340499878
Image 4 pidx 0 verify end, Time cost: 0.0001728534698486328
4 3.448460340499878
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0]]
##### [0:4] Tested against 1 ######
init opt crown verified for label 1 with bound 3.222364902496338
Image 4 pidx 1 verify end, Time cost: 0.0002300739288330078
4 3.222364902496338
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1]]
##### [0:4] Tested against 2 ######
init opt crown verified for label 2 with bound 3.258005142211914
Image 4 pidx 2 verify end, Time cost: 0.0002391338348388672
4 3.258005142211914
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2]]
##### [0:4] Tested against 3 ######
init opt crown verified for label 3 with bound 3.7295844554901123
Image 4 pidx 3 verify end, Time cost: 0.00022149085998535156
4 3.7295844554901123
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2], [4, 3.7295844554901123, 0, 0.00022149085998535156, 0, 3]]
##### [0:4] Tested against 4 ######
correct label, skip!
##### [0:4] Tested against 5 ######
init opt crown verified for label 5 with bound 2.0626697540283203
Image 4 pidx 5 verify end, Time cost: 0.00022125244140625
4 2.0626697540283203
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2], [4, 3.7295844554901123, 0, 0.00022149085998535156, 0, 3], [4, 0, 0, 0, 0, 4], [4, 2.0626697540283203, 0, 0.00022125244140625, 0, 5]]
##### [0:4] Tested against 6 ######
init opt crown verified for label 6 with bound 4.15369987487793
Image 4 pidx 6 verify end, Time cost: 0.000232696533203125
4 4.15369987487793
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2], [4, 3.7295844554901123, 0, 0.00022149085998535156, 0, 3], [4, 0, 0, 0, 0, 4], [4, 2.0626697540283203, 0, 0.00022125244140625, 0, 5], [4, 4.15369987487793, 0, 0.000232696533203125, 0, 6]]
##### [0:4] Tested against 7 ######
init opt crown verified for label 7 with bound 1.5463473796844482
Image 4 pidx 7 verify end, Time cost: 0.00022745132446289062
4 1.5463473796844482
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2], [4, 3.7295844554901123, 0, 0.00022149085998535156, 0, 3], [4, 0, 0, 0, 0, 4], [4, 2.0626697540283203, 0, 0.00022125244140625, 0, 5], [4, 4.15369987487793, 0, 0.000232696533203125, 0, 6], [4, 1.5463473796844482, 0, 0.00022745132446289062, 0, 7]]
##### [0:4] Tested against 8 ######
init opt crown verified for label 8 with bound 1.4296438694000244
Image 4 pidx 8 verify end, Time cost: 0.00026106834411621094
4 1.4296438694000244
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2], [4, 3.7295844554901123, 0, 0.00022149085998535156, 0, 3], [4, 0, 0, 0, 0, 4], [4, 2.0626697540283203, 0, 0.00022125244140625, 0, 5], [4, 4.15369987487793, 0, 0.000232696533203125, 0, 6], [4, 1.5463473796844482, 0, 0.00022745132446289062, 0, 7], [4, 1.4296438694000244, 0, 0.00026106834411621094, 0, 8]]
##### [0:4] Tested against 9 ######
bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: 0.6964545249938965 with beta sum per layer: []
optimal alpha/beta time: 1.0892536640167236
alpha-CROWN with fixed intermediate bounds: tensor([[-0.6965]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-0.6964545249938965
layer 0 size torch.Size([100]) unstable 36
layer 1 size torch.Size([100]) unstable 38
layer 2 size torch.Size([100]) unstable 24
layer 3 size torch.Size([100]) unstable 36
layer 4 size torch.Size([100]) unstable 46
# of unstable neurons: 180
splitting decisions: [[1, 79]]
single_node_split: True
best_l after optimization: 1.207690715789795 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.7312095165252686
This batch time : update_bounds func: 0.7337	 prepare: 0.0014	 bound: 0.7314	 transfer: 0.0005	 finalize: 0.0004
Accumulated time: update_bounds func: 0.7337	 prepare: 0.0014	 bound: 0.7314	 transfer: 0.0005	 finalize: 0.0004
batch bounding time:  0.7337877750396729
Current worst domains: [-0.6066076755523682, -0.6010830402374268]
length of domains: 2
Total time: 0.8029	 pickout: 0.0488	 decision: 0.0201	 get_bound: 0.7338	 add_domain: 0.0002
Current lb:-0.6066076755523682
2 neurons visited

splitting decisions: [[0, 92], [0, 38]]
single_node_split: True
best_l after optimization: 1.9148708581924438 with beta sum per layer: [0.3616177439689636, 0.11801153421401978, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5656540393829346
This batch time : update_bounds func: 0.5683	 prepare: 0.0015	 bound: 0.5658	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 1.3020	 prepare: 0.0029	 bound: 1.2972	 transfer: 0.0006	 finalize: 0.0007
batch bounding time:  0.5683386325836182
Current worst domains: [-0.5208747386932373, -0.509607195854187, -0.4535696506500244, -0.4308192729949951]
length of domains: 4
Total time: 0.5861	 pickout: 0.0008	 decision: 0.0167	 get_bound: 0.5684	 add_domain: 0.0002
Current lb:-0.5208747386932373
6 neurons visited

splitting decisions: [[0, 41], [0, 33], [0, 33], [0, 41]]
single_node_split: True
best_l after optimization: 2.242309808731079 with beta sum per layer: [2.3414206504821777, 0.5248377323150635, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5646967887878418
This batch time : update_bounds func: 0.5678	 prepare: 0.0018	 bound: 0.5649	 transfer: 0.0006	 finalize: 0.0006
Accumulated time: update_bounds func: 1.8699	 prepare: 0.0046	 bound: 1.8621	 transfer: 0.0006	 finalize: 0.0013
batch bounding time:  0.5678935050964355
Current worst domains: [-0.45744097232818604, -0.4096488952636719, -0.36380577087402344, -0.3576282262802124, -0.3394765853881836, -0.29457640647888184, -0.06359744071960449]
length of domains: 7
Total time: 0.5860	 pickout: 0.0011	 decision: 0.0167	 get_bound: 0.5679	 add_domain: 0.0003
Current lb:-0.45744097232818604
14 neurons visited

splitting decisions: [[0, 33], [0, 92], [0, 33], [0, 92], [0, 92], [0, 92], [0, 33]]
single_node_split: True
best_l after optimization: 2.75113582611084 with beta sum per layer: [4.4147796630859375, 1.0725314617156982, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5644857883453369
This batch time : update_bounds func: 0.5685	 prepare: 0.0022	 bound: 0.5647	 transfer: 0.0006	 finalize: 0.0010
Accumulated time: update_bounds func: 2.4383	 prepare: 0.0068	 bound: 2.4268	 transfer: 0.0006	 finalize: 0.0023
batch bounding time:  0.5685164928436279
Current worst domains: [-0.3782939910888672, -0.33373141288757324, -0.3179131746292114, -0.2766704559326172, -0.25900471210479736, -0.2460474967956543, -0.2310781478881836, -0.20387768745422363, -0.194549560546875, -0.14513635635375977]
length of domains: 12
Total time: 0.5875	 pickout: 0.0014	 decision: 0.0170	 get_bound: 0.5685	 add_domain: 0.0005
Current lb:-0.3782939910888672
28 neurons visited

splitting decisions: [[0, 38], [0, 38], [0, 7], [0, 38], [0, 7], [0, 7], [0, 38], [0, 7], [0, 7], [0, 7]]
single_node_split: True
best_l after optimization: 1.8911329507827759 with beta sum per layer: [6.648336887359619, 2.8368844985961914, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5677793025970459
This batch time : update_bounds func: 0.5733	 prepare: 0.0029	 bound: 0.5680	 transfer: 0.0006	 finalize: 0.0018
Accumulated time: update_bounds func: 3.0117	 prepare: 0.0097	 bound: 2.9947	 transfer: 0.0006	 finalize: 0.0041
batch bounding time:  0.5733649730682373
Current worst domains: [-0.3032348155975342, -0.2688744068145752, -0.25302159786224365, -0.2521378993988037, -0.22614896297454834, -0.19983577728271484, -0.1911017894744873, -0.17615914344787598, -0.17220115661621094, -0.1502704620361328]
length of domains: 16
Total time: 0.5930	 pickout: 0.0019	 decision: 0.0171	 get_bound: 0.5734	 add_domain: 0.0006
Current lb:-0.3032348155975342
52 neurons visited

splitting decisions: [[1, 49], [1, 49], [0, 41], [1, 49], [1, 49], [1, 49], [0, 41], [0, 41], [1, 49], [1, 49]]
single_node_split: True
best_l after optimization: 1.1323977708816528 with beta sum per layer: [8.416402816772461, 4.723597526550293, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5694575309753418
This batch time : update_bounds func: 0.5765	 prepare: 0.0036	 bound: 0.5696	 transfer: 0.0007	 finalize: 0.0024
Accumulated time: update_bounds func: 3.5881	 prepare: 0.0133	 bound: 3.5644	 transfer: 0.0007	 finalize: 0.0065
batch bounding time:  0.576528787612915
Current worst domains: [-0.2559387683868408, -0.2219308614730835, -0.20415663719177246, -0.20199239253997803, -0.17845463752746582, -0.16484475135803223, -0.14927101135253906, -0.14161217212677002, -0.1266632080078125, -0.12605929374694824]
length of domains: 22
Total time: 0.5972	 pickout: 0.0024	 decision: 0.0172	 get_bound: 0.5766	 add_domain: 0.0009
Current lb:-0.2559387683868408
84 neurons visited

splitting decisions: [[0, 7], [0, 7], [0, 7], [4, 12], [0, 7], [4, 12], [0, 7], [1, 49], [4, 91], [4, 12]]
single_node_split: True
best_l after optimization: 0.7809665203094482 with beta sum per layer: [11.133761405944824, 5.75131893157959, 0.0, 0.0, 1.0770015716552734]
optimal alpha/beta time: 0.5730783939361572
This batch time : update_bounds func: 0.5815	 prepare: 0.0045	 bound: 0.5733	 transfer: 0.0008	 finalize: 0.0029
Accumulated time: update_bounds func: 4.1696	 prepare: 0.0178	 bound: 4.1376	 transfer: 0.0008	 finalize: 0.0094
batch bounding time:  0.581589937210083
Current worst domains: [-0.20729410648345947, -0.17318332195281982, -0.15646517276763916, -0.15480422973632812, -0.13053226470947266, -0.11255085468292236, -0.09786343574523926, -0.09753966331481934, -0.08427870273590088, -0.08325862884521484]
length of domains: 24
Total time: 0.6031	 pickout: 0.0030	 decision: 0.0175	 get_bound: 0.5817	 add_domain: 0.0010
Current lb:-0.20729410648345947
128 neurons visited

splitting decisions: [[0, 99], [0, 99], [0, 99], [4, 91], [0, 99], [0, 99], [4, 91], [4, 12], [4, 91], [4, 12]]
single_node_split: True
best_l after optimization: -1.7705694437026978 with beta sum per layer: [8.103658676147461, 6.326103687286377, 0.0, 0.0, 3.149318218231201]
optimal alpha/beta time: 0.57315993309021
This batch time : update_bounds func: 0.5822	 prepare: 0.0050	 bound: 0.5733	 transfer: 0.0007	 finalize: 0.0030
Accumulated time: update_bounds func: 4.7518	 prepare: 0.0228	 bound: 4.7110	 transfer: 0.0007	 finalize: 0.0124
batch bounding time:  0.5822765827178955
Current worst domains: [-0.1613541841506958, -0.12749814987182617, -0.11104404926300049, -0.11072778701782227, -0.08366870880126953, -0.0630044937133789, -0.050789594650268555, -0.05022096633911133, -0.046063780784606934, -0.036907315254211426]
length of domains: 15
Total time: 0.6044	 pickout: 0.0032	 decision: 0.0181	 get_bound: 0.5824	 add_domain: 0.0007
Current lb:-0.1613541841506958
176 neurons visited

splitting decisions: [[4, 12], [4, 12], [1, 49], [4, 12], [4, 12], [0, 82], [0, 99], [4, 12], [4, 64], [0, 99]]
single_node_split: True
best_l after optimization: -1.6083053350448608 with beta sum per layer: [3.7886154651641846, 2.212104320526123, 0.0, 0.0, 2.3317513465881348]
optimal alpha/beta time: 0.5766143798828125
This batch time : update_bounds func: 0.5831	 prepare: 0.0037	 bound: 0.5768	 transfer: 0.0006	 finalize: 0.0020
Accumulated time: update_bounds func: 5.3350	 prepare: 0.0265	 bound: 5.2878	 transfer: 0.0006	 finalize: 0.0144
batch bounding time:  0.5831747055053711
Current worst domains: [-0.11356234550476074, -0.08001041412353516, -0.07368707656860352, -0.06470322608947754, -0.041426777839660645, -0.037634968757629395, -0.013176679611206055, -0.009851455688476562, -0.00825965404510498]
length of domains: 9
Total time: 0.6035	 pickout: 0.0023	 decision: 0.0176	 get_bound: 0.5832	 add_domain: 0.0005
Current lb:-0.11356234550476074
206 neurons visited

splitting decisions: [[4, 64], [4, 64], [2, 30], [4, 64], [4, 64], [4, 64], [1, 49], [2, 30], [4, 64]]
single_node_split: True
best_l after optimization: -0.29730427265167236 with beta sum per layer: [1.4641926288604736, 0.4070690870285034, 0.0, 0.0, 0.9943379163742065]
optimal alpha/beta time: 0.578718900680542
This batch time : update_bounds func: 0.5835	 prepare: 0.0028	 bound: 0.5789	 transfer: 0.0006	 finalize: 0.0012
Accumulated time: update_bounds func: 5.9185	 prepare: 0.0293	 bound: 5.8667	 transfer: 0.0006	 finalize: 0.0156
batch bounding time:  0.5835540294647217
Current worst domains: [-0.056442856788635254, -0.05020785331726074, -0.044945359230041504, -0.014426708221435547, -0.01230478286743164, -0.005417346954345703]
length of domains: 6
Total time: 0.6027	 pickout: 0.0016	 decision: 0.0171	 get_bound: 0.5836	 add_domain: 0.0004
Current lb:-0.056442856788635254
224 neurons visited

splitting decisions: [[4, 91], [4, 24], [4, 91], [4, 91], [4, 91], [4, 91]]
single_node_split: True
best_l after optimization: -0.5290200710296631 with beta sum per layer: [0.5711078643798828, 0.2145726978778839, 0.0, 0.0, 0.2957760989665985]
optimal alpha/beta time: 0.5745935440063477
This batch time : update_bounds func: 0.5784	 prepare: 0.0022	 bound: 0.5748	 transfer: 0.0006	 finalize: 0.0008
Accumulated time: update_bounds func: 6.4968	 prepare: 0.0315	 bound: 6.4415	 transfer: 0.0006	 finalize: 0.0164
batch bounding time:  0.5784358978271484
Current worst domains: [-0.03186380863189697, -0.012111425399780273, -0.004325270652770996]
length of domains: 3
Total time: 0.5968	 pickout: 0.0013	 decision: 0.0168	 get_bound: 0.5785	 add_domain: 0.0002
Current lb:-0.03186380863189697
236 neurons visited

splitting decisions: [[4, 64], [2, 30], [2, 30]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -0.3240034580230713 with beta sum per layer: [0.0, 0.17131729423999786, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.007963418960571289
This batch time : update_bounds func: 0.0109	 prepare: 0.0018	 bound: 0.0081	 transfer: 0.0004	 finalize: 0.0005
Accumulated time: update_bounds func: 6.5077	 prepare: 0.0333	 bound: 6.4496	 transfer: 0.0004	 finalize: 0.0168
batch bounding time:  0.010910272598266602
Current worst domains: []
length of domains: 0
Total time: 0.0286	 pickout: 0.0009	 decision: 0.0168	 get_bound: 0.0109	 add_domain: 0.0000
No domains left, verification finished!
Image 4 pidx 9 verify end, Time cost: 8.100564002990723
4 999
[[4, 0, 0, 5.839319944381714, 0, -1], [4, 0, 0, 239.20452117919922, 0, -2], [4, 3.448460340499878, 0, 0.0001728534698486328, 0, 0], [4, 3.222364902496338, 0, 0.0002300739288330078, 0, 1], [4, 3.258005142211914, 0, 0.0002391338348388672, 0, 2], [4, 3.7295844554901123, 0, 0.00022149085998535156, 0, 3], [4, 0, 0, 0, 0, 4], [4, 2.0626697540283203, 0, 0.00022125244140625, 0, 5], [4, 4.15369987487793, 0, 0.000232696533203125, 0, 6], [4, 1.5463473796844482, 0, 0.00022745132446289062, 0, 7], [4, 1.4296438694000244, 0, 0.00026106834411621094, 0, 8], [4, 999, 242, 8.100564002990723, 0, 9]]
[[  4.           0.           0.           5.83931994   0.
   -1.        ]
 [  4.           0.           0.         239.20452118   0.
   -2.        ]
 [  4.           3.44846034   0.           0.00017285   0.
    0.        ]
 [  4.           3.2223649    0.           0.00023007   0.
    1.        ]
 [  4.           3.25800514   0.           0.00023913   0.
    2.        ]
 [  4.           3.72958446   0.           0.00022149   0.
    3.        ]
 [  4.           0.           0.           0.           0.
    4.        ]
 [  4.           2.06266975   0.           0.00022125   0.
    5.        ]
 [  4.           4.15369987   0.           0.0002327    0.
    6.        ]
 [  4.           1.54634738   0.           0.00022745   0.
    7.        ]
 [  4.           1.42964387   0.           0.00026107   0.
    8.        ]
 [  4.         999.         242.           8.100564     0.
    9.        ]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 253.14621114730835
mean time [cnt:1]: 253.14621114730835
