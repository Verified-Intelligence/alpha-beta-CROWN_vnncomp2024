Experiments at Wed Apr 13 14:09:04 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_100]_start=4_end=5_iter=20_b=1024_int-beta=False_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  4  correct label  4 logits tensor([-1.3820, -1.5346, -0.5229, -2.8616,  6.9759,  0.0258, -2.4641,  0.4381,
        -0.5032,  4.0722], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-1.3820, -1.5346, -0.5229, -2.8616,  6.9759,  0.0258, -2.4641,  0.4381,
         -0.5032,  4.0722]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-18.1569, -19.6753, -17.4166, -20.6416, -20.8003, -15.6187, -17.5978,
         -21.8895, -18.1589]], device='cuda:0') None
best_l after optimization: 120.32130432128906 with beta sum per layer: []
optimal alpha/beta time: 7.403005361557007
initial alpha-CROWN bounds: tensor([[-13.0582, -13.1081, -12.5255, -14.8745, -14.8996, -10.1389, -12.6094,
         -15.5623, -13.5448]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 4, Tested against: ['all'] ######
pgd prediction: tensor([-1.3664, -1.2384, -0.8580, -2.0522,  5.3785,  0.1459, -2.3900,  0.3396,
        -0.1560,  3.9496], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([6.7449, 6.6169, 6.2364, 7.4307,    inf, 5.2325, 7.7684, 5.0389, 5.5345,
        1.4289], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 713.8186311721802]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_79', 'lay4_31', 'lay4_83', 'lay4_26', 'lay4_22', 'lay4_99', 'lay4_93', 'lay4_78', 'lay4_24', 'lay4_49', 'lay4_69', 'lay4_20', 'lay4_33', 'lay4_12', 'lay4_94', 'lay4_62', 'lay4_37', 'lay4_10', 'lay4_41', 'lay4_81', 'lay4_96', 'lay4_68', 'lay4_67', 'lay4_60', 'lay4_38', 'lay4_46', 'lay4_84', 'lay4_76', 'lay4_66', 'lay4_55', 'lay4_23', 'lay4_42', 'lay4_86', 'lay4_0', 'lay4_21', 'lay4_18', 'lay4_27', 'lay4_34', 'lay4_48', 'lay4_25', 'lay4_16', 'lay4_13', 'lay4_64', 'lay4_6', 'lay4_71', 'lay4_43', 'lay4_51', 'lay4_74', 'lay4_54', 'lay4_40', 'lay4_45', 'lay4_80', 'lay4_52', 'lay4_8', 'lay4_32'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL_41a3/complete_verifier/utils.py:414: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_78, [-2.4358625411987305,0.2921825647354126]=>[-2.4358625411987305,-1e-05] (-1,-1; 15,-1), time: 0.3881s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_99, [-1.4660768508911133,0.2961752116680145]=>[-1.4660768508911133,-1e-05] (-1,-1; 15,-1), time: 1.0099s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_62, [-1.110295295715332,0.520700991153717]=>[-0.8382175234226799,0.22761806586575065] (2,-1; 2,-1), time: 2.0046s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_49, [-0.9279367327690125,0.7558038830757141]=>[-0.586253844186429,0.5342996238893081] (2,-1; 2,-1), time: 2.0885s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_94, [-1.069386601448059,0.4242565333843231]=>[-0.8109153714126196,0.1845715599306647] (2,-1; 2,-1), time: 2.2680s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_41, [-0.14279776811599731,1.565112829208374]=>[1e-05,1.565112829208374] (15,-1; -1,-1), time: 0.2865s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_79, [-1.4300258159637451,0.7101706862449646]=>[-1.008291568486409,0.3694046770824007] (2,-1; 2,-1), time: 2.3367s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_31, [-1.8797717094421387,0.4064890742301941]=>[-1.4101323926153806,0.09196933848262992] (2,-1; 2,-1), time: 2.3495s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_20, [-0.9017752408981323,0.5919111967086792]=>[-0.5589606160937637,0.469679593978362] (2,-1; 2,-1), time: 2.4236s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_81, [-2.948957920074463,0.14965635538101196]=>[-2.948957920074463,-1e-05] (-1,-1; 15,-1), time: 0.3415s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_26, [-1.3113025426864624,0.573087215423584]=>[-0.9067079455843652,0.36191490529194886] (2,-1; 2,-1), time: 2.4521s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_83, [-0.7676721811294556,0.8182068467140198]=>[-0.4693126551009729,0.5492035221770446] (2,-1; 2,-1), time: 2.6751s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_68, [-2.078958511352539,0.0016872286796569824]=>[-2.078958511352539,-1e-05] (-1,-1; 15,-1), time: 0.3653s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_46, [-1.363826036453247,0.15748810768127441]=>[-1.363826036453247,-1e-05] (-1,-1; 15,-1), time: 0.2730s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_33, [-1.1407907009124756,0.32431843876838684]=>[-0.8639500729550473,0.04328843314772273] (2,-1; 2,-1), time: 2.6910s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_84, [-1.519190788269043,0.1460556983947754]=>[-1.519190788269043,-1e-05] (-1,-1; 15,-1), time: 0.2906s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_12, [-1.0489617586135864,0.542822539806366]=>[-0.6663389617208733,0.37337119067336955] (2,-1; 2,-1), time: 2.7298s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_60, [-1.41121244430542,0.21579298377037048]=>[-1.41121244430542,-1e-05] (-1,-1; 15,-1), time: 0.4521s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_10, [-1.4068305492401123,0.595373272895813]=>[-1.0581931218254643,0.36399079102307247] (2,-1; 2,-1), time: 1.8896s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_86, [-1.3160529136657715,0.12743595242500305]=>[-1.3160529136657715,-1e-05] (-1,-1; 15,-1), time: 0.2703s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_66, [-1.4585435390472412,0.13196253776550293]=>[-1.4585435390472412,-1e-05] (-1,-1; 15,-1), time: 0.3403s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_93, [-1.399808406829834,0.3271197974681854]=>[-1.0136252565262749,0.11806863973903473] (2,-1; 2,-1), time: 3.2667s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_22, [-1.1376745700836182,0.6247613430023193]=>[-0.6298433536431,0.49763534993021596] (2,-1; 2,-1), time: 3.3418s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_69, [-1.0289807319641113,0.5536203384399414]=>[-0.581374082328001,0.411107372278535] (2,-1; 2,-1), time: 3.4607s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_24, [-1.2236623764038086,0.41573891043663025]=>[-0.8638215216953473,0.18343274805846133] (2,-1; 2,-1), time: 3.5230s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_48, [-1.7054427862167358,0.05505472421646118]=>[-1.7054427862167358,-1e-05] (-1,-1; 15,-1), time: 0.2548s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_37, [-0.9633272886276245,0.19336950778961182]=>[-0.7252388765762687,0.016211403496636793] (2,-1; 2,-1), time: 3.2294s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_27, [-1.290568232536316,0.2357911765575409]=>[-1.290568232536316,-0.009945172755011413] (-1,-1; 2,-1), time: 0.6036s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_16, [-0.18724441528320312,1.645655632019043]=>[1e-05,1.645655632019043] (15,-1; -1,-1), time: 0.3184s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_38, [-0.948736310005188,0.5468324422836304]=>[-0.642978070302834,0.3670017596186697] (2,-1; 2,-1), time: 1.5444s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_67, [-1.2260000705718994,0.2644594609737396]=>[-1.0548934122109834,0.006016864495076237] (2,-1; 2,-1), time: 2.0311s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_96, [-1.0749226808547974,0.5691623687744141]=>[-0.7629896010068655,0.3154835785924742] (2,-1; 2,-1), time: 2.1240s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_55, [-1.4719358682632446,0.28674352169036865]=>[-1.2074357457065028,0.03329206186148598] (2,-1; 2,-1), time: 1.8746s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_54, [-1.3168599605560303,0.0977773666381836]=>[-1.3168599605560303,-1e-05] (-1,-1; 15,-1), time: 0.2925s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_18, [-0.2823464870452881,1.0887303352355957]=>[-0.03757102148391662,0.9028227411421011] (2,-1; 2,-1), time: 1.9108s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_21, [-1.085667610168457,0.5594513416290283]=>[-0.7770646443760754,0.27316414967683095] (2,-1; 2,-1), time: 2.1997s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_43, [-0.2856696546077728,1.8847436904907227]=>[-0.06674987167646693,1.548546443349266] (2,-1; 2,-1), time: 1.1770s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_64, [-0.34155842661857605,1.1143511533737183]=>[1e-05,1.1143511533737183] (15,-1; -1,-1), time: 1.6244s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_45, [-0.11513516306877136,1.2277112007141113]=>[1e-05,1.2277112007141113] (15,-1; -1,-1), time: 0.3429s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_25, [-1.1394362449645996,0.7240502238273621]=>[-0.8653236275628845,0.4953156603273315] (2,-1; 2,-1), time: 1.8342s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_76, [-0.8866302967071533,0.4837367534637451]=>[-0.6992551135762326,0.1830639454374467] (2,-1; 2,-1), time: 2.6663s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_23, [-0.9416775107383728,0.6482608318328857]=>[-0.5937387672484773,0.45289271585387314] (2,-1; 2,-1), time: 2.6784s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_42, [-1.0348176956176758,0.8554744720458984]=>[-0.7475612258385192,0.47357383935754477] (2,-1; 2,-1), time: 2.8604s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_13, [-1.570900797843933,0.4001232385635376]=>[-1.3501253663732178,0.04205959179479843] (2,-1; 2,-1), time: 2.0167s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_0, [-0.871605396270752,0.48296865820884705]=>[-0.5997094811032875,0.2381580998601195] (2,-1; 2,-1), time: 2.9335s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_8, [-0.28764447569847107,1.5348432064056396]=>[1e-05,1.5348432064056396] (15,-1; -1,-1), time: 0.6090s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_34, [-0.5516207814216614,1.2271414995193481]=>[-0.1135751129837552,1.016892342722423] (2,-1; 2,-1), time: 3.0482s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_51, [-1.1245994567871094,0.32765907049179077]=>[-0.832710207001175,0.12970778927298254] (2,-1; 2,-1), time: 2.3965s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_32, [-1.2949923276901245,0.22009816765785217]=>[-1.0287216339693053,0.011614572558256438] (2,-1; 2,-1), time: 1.6150s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_74, [-1.7472518682479858,0.4587542414665222]=>[-1.4942099308123868,0.008995490313713488] (2,-1; 2,-1), time: 2.5138s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_71, [-0.9337379932403564,0.8192538619041443]=>[-0.49469433567526916,0.6294033136234868] (2,-1; 2,-1), time: 3.1288s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_52, [-0.575468897819519,1.1107169389724731]=>[-0.3011143399058533,0.791626939765959] (2,-1; 2,-1), time: 1.8044s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_40, [-0.7933403253555298,0.7103768587112427]=>[-0.5343810430200926,0.46843317410737395] (2,-1; 2,-1), time: 2.1313s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_80, [-1.3139874935150146,0.36571604013442993]=>[-1.1132895292939669,0.05334183324351914] (2,-1; 2,-1), time: 1.9263s, #vars: 1057, #constrs: 308, improved: True
Solving MIP for lay4_6, [-0.35955312848091125,0.9234927296638489]=>[-0.07699124469384995,0.6797670266039204] (2,-1; 2,-1), time: 4.9895s, #vars: 1057, #constrs: 308, improved: True
MIP improved 55 nodes out of 55 unstable nodes, lb improved 12.951272964477539, ub improved 11.335870742797852, time 9.5628
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_10', 'lay6_26', 'lay6_9', 'lay6_65', 'lay6_2', 'lay6_68', 'lay6_4', 'lay6_93', 'lay6_75', 'lay6_72', 'lay6_35', 'lay6_83', 'lay6_40', 'lay6_97', 'lay6_91', 'lay6_49', 'lay6_61', 'lay6_1', 'lay6_95', 'lay6_70', 'lay6_15', 'lay6_3', 'lay6_27', 'lay6_77', 'lay6_30', 'lay6_76', 'lay6_50', 'lay6_80', 'lay6_37', 'lay6_74', 'lay6_11', 'lay6_52', 'lay6_8', 'lay6_84', 'lay6_67', 'lay6_90', 'lay6_25', 'lay6_87', 'lay6_42', 'lay6_20', 'lay6_44', 'lay6_16', 'lay6_81', 'lay6_66', 'lay6_38', 'lay6_32', 'lay6_86', 'lay6_94', 'lay6_28', 'lay6_62', 'lay6_41', 'lay6_89', 'lay6_36', 'lay6_45', 'lay6_46', 'lay6_98', 'lay6_12', 'lay6_19', 'lay6_17', 'lay6_33', 'lay6_14', 'lay6_88', 'lay6_78', 'lay6_5', 'lay6_54', 'lay6_96', 'lay6_55', 'lay6_21', 'lay6_6', 'lay6_43', 'lay6_79', 'lay6_29', 'lay6_82', 'lay6_0', 'lay6_47', 'lay6_64', 'lay6_24', 'lay6_60'] filter: 1.0
Solving MIP for lay6_2, [-1.3824987411499023,0.2906842529773712]=>[-1.3824987411499023,-1e-05] (-1,-1; 15,-1), time: 0.3714s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_93, [-0.3024945557117462,1.664386510848999]=>[1e-05,1.664386510848999] (15,-1; -1,-1), time: 0.4121s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_97, [-1.6245169639587402,0.29051685333251953]=>[-1.6245169639587402,-1e-05] (-1,-1; 15,-1), time: 0.4231s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_35, [-1.6394879817962646,0.3437066078186035]=>[-1.6394879817962646,-1e-05] (-1,-1; 15,-1), time: 0.4704s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_95, [-1.3474111557006836,0.16403377056121826]=>[-1.3474111557006836,-1e-05] (-1,-1; 15,-1), time: 0.1413s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_72, [-1.2924177646636963,0.26375043392181396]=>[-1.2924177646636963,-1e-05] (-1,-1; 15,-1), time: 0.5795s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_65, [-1.6478627920150757,0.4824262261390686]=>[-1.6478627920150757,-1e-05] (-1,-1; 15,-1), time: 0.6429s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_61, [-1.376312255859375,0.29736948013305664]=>[-1.376312255859375,-1e-05] (-1,-1; 15,-1), time: 0.3040s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_70, [-0.37540629506111145,1.7929224967956543]=>[1e-05,1.7929224967956543] (15,-1; -1,-1), time: 0.2975s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_27, [-1.9029513597488403,0.09142029285430908]=>[-1.9029513597488403,-1e-05] (-1,-1; 15,-1), time: 0.1486s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_77, [-1.7355937957763672,0.04374665021896362]=>[-1.7355937957763672,-1e-05] (-1,-1; 15,-1), time: 0.1548s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_50, [-0.42189931869506836,2.247560739517212]=>[1e-05,2.247560739517212] (15,-1; -1,-1), time: 0.3260s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_76, [-1.6758723258972168,0.4485012888908386]=>[-1.6758723258972168,-1e-05] (-1,-1; 15,-1), time: 0.4089s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_37, [-0.23578178882598877,1.5122754573822021]=>[1e-05,1.5122754573822021] (15,-1; -1,-1), time: 0.1516s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_4, [-1.3531686067581177,0.5251860618591309]=>[-1.3531686067581177,-1e-05] (-1,-1; 15,-1), time: 3.6726s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_15, [-0.9558157920837402,0.34769171476364136]=>[-0.9558157920837402,-1e-05] (-1,-1; 15,-1), time: 3.3304s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_10, [-1.0969288349151611,0.5720990896224976]=>[-1.0969288349151611,-0.0012762773755225828] (-1,-1; 2,-1), time: 4.3074s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_8, [-1.8592665195465088,0.18528449535369873]=>[-1.8592665195465088,-1e-05] (-1,-1; 15,-1), time: 0.1514s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_84, [-1.6656432151794434,0.11510735750198364]=>[-1.6656432151794434,-1e-05] (-1,-1; 15,-1), time: 0.1469s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_3, [-0.6279721260070801,1.6539785861968994]=>[1e-05,1.6539785861968994] (15,-1; -1,-1), time: 5.4089s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_74, [-1.1256444454193115,0.49182531237602234]=>[-1.1256444454193115,-1e-05] (-1,-1; 15,-1), time: 4.6533s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_90, [-1.7977557182312012,0.1574656367301941]=>[-1.7977557182312012,-1e-05] (-1,-1; 15,-1), time: 0.1490s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_67, [-0.5446025133132935,1.2526319026947021]=>[1e-05,1.2526319026947021] (15,-1; -1,-1), time: 4.8854s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_42, [-0.4451102316379547,1.4866749048233032]=>[1e-05,1.4866749048233032] (15,-1; -1,-1), time: 0.4778s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_20, [-0.2930900752544403,1.343346357345581]=>[1e-05,1.343346357345581] (15,-1; -1,-1), time: 0.1507s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_44, [-1.7032554149627686,0.31381094455718994]=>[-1.7032554149627686,-1e-05] (-1,-1; 15,-1), time: 0.2904s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_52, [-0.9556334018707275,0.43150559067726135]=>[-0.9556334018707275,-1e-05] (-1,-1; 15,-1), time: 7.2701s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_68, [-0.8910304307937622,0.8709734678268433]=>[-0.3396156550044628,0.3175724536178404] (2,-1; 2,-1), time: 11.7108s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_66, [-1.1925926208496094,0.2721388339996338]=>[-1.1925926208496094,-1e-05] (-1,-1; 15,-1), time: 0.3083s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_38, [-1.7656344175338745,0.03240656852722168]=>[-1.7656344175338745,-1e-05] (-1,-1; 15,-1), time: 0.1333s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_87, [-0.9930832386016846,0.9205548763275146]=>[-0.4095903304154674,0.41712283859406996] (2,-1; 2,-1), time: 7.6309s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_86, [-1.2628840208053589,0.1685074269771576]=>[-1.2628840208053589,-1e-05] (-1,-1; 15,-1), time: 0.1439s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_9, [-0.7800893783569336,0.6901124119758606]=>[-0.2250526282347263,0.3312693094954343] (2,-1; 2,-1), time: 14.1398s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_25, [-1.2299906015396118,0.895514726638794]=>[-0.6102473930959506,0.22980957600530022] (2,-1; 2,-1), time: 8.2968s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_16, [-1.2815003395080566,0.49069488048553467]=>[-1.2815003395080566,-1e-05] (-1,-1; 15,-1), time: 4.2172s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_62, [-0.2041756510734558,1.1264976263046265]=>[1e-05,1.1264976263046265] (15,-1; -1,-1), time: 0.3314s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_1, [-1.3493510484695435,0.603134274482727]=>[-0.7830006469768303,0.0210540876915327] (2,-1; 2,-1), time: 15.1749s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_94, [-1.5946037769317627,0.5351666808128357]=>[-1.5946037769317627,-1e-05] (-1,-1; 15,-1), time: 2.6138s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_45, [-0.011022210121154785,2.157688856124878]=>[1e-05,2.157688856124878] (15,-1; -1,-1), time: 0.1491s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_75, [-0.8072138428688049,0.7766262292861938]=>[-0.4007784324439795,0.26067096605288187] (2,-1; 9,-1), time: 17.8146s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_91, [-0.999214231967926,0.8624343872070312]=>[-0.40731355312213874,0.26608147523271497] (2,-1; 2,-1), time: 18.0473s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_41, [-0.455638587474823,1.0148085355758667]=>[1e-05,1.0148085355758667] (15,-1; -1,-1), time: 4.4849s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_32, [-0.7003896236419678,1.3926923274993896]=>[-0.11142506357748112,0.88194633220064] (2,-1; 2,-1), time: 7.0532s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_19, [-1.315112829208374,0.11515450477600098]=>[-1.315112829208374,-1e-05] (-1,-1; 15,-1), time: 0.1498s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_33, [-0.26152175664901733,1.5554170608520508]=>[1e-05,1.5554170608520508] (15,-1; -1,-1), time: 0.1478s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_11, [-1.058065414428711,0.7938549518585205]=>[-0.37087145626154994,0.3103490544486851] (2,-1; 2,-1), time: 15.8870s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_14, [-2.345604419708252,0.2176128625869751]=>[-2.345604419708252,-1e-05] (-1,-1; 15,-1), time: 0.1471s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_88, [-0.08251756429672241,1.5399051904678345]=>[1e-05,1.5399051904678345] (15,-1; -1,-1), time: 0.1484s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_5, [-0.1632518172264099,1.2939839363098145]=>[1e-05,1.2939839363098145] (15,-1; -1,-1), time: 0.1526s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_30, [-1.005731463432312,1.190892219543457]=>[-0.21810273298547053,0.5216959062423796] (2,-1; 2,-1), time: 19.3452s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_54, [-0.4400758147239685,1.840057134628296]=>[1e-05,1.840057134628296] (15,-1; -1,-1), time: 0.3353s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_96, [-1.4351489543914795,0.10812723636627197]=>[-1.4351489543914795,-1e-05] (-1,-1; 15,-1), time: 0.1456s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_49, [-1.0405352115631104,0.7523808479309082]=>[-0.4750244622868652,0.22663970401678776] (2,-1; 9,-1), time: 20.4961s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_98, [-1.6787173748016357,0.5655311942100525]=>[-1.6787173748016357,-1e-05] (-1,-1; 15,-1), time: 2.7186s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_55, [-1.4262118339538574,0.35994669795036316]=>[-1.4262118339538574,-1e-05] (-1,-1; 15,-1), time: 0.3771s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_6, [-1.322116494178772,0.26212137937545776]=>[-1.322116494178772,-1e-05] (-1,-1; 15,-1), time: 0.1457s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_43, [-0.16573980450630188,1.6357063055038452]=>[1e-05,1.6357063055038452] (15,-1; -1,-1), time: 0.1386s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_79, [-0.011153697967529297,3.0021331310272217]=>[1e-05,3.0021331310272217] (15,-1; -1,-1), time: 0.1436s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_29, [-0.18464261293411255,1.2065054178237915]=>[1e-05,1.2065054178237915] (15,-1; -1,-1), time: 0.1479s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_47, [-1.9636814594268799,0.018919408321380615]=>[-1.9636814594268799,-1e-05] (-1,-1; 15,-1), time: 0.1521s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_26, [-1.050748348236084,0.5966380834579468]=>[-0.4807934598407656,0.04119370718664152] (9,-1; 2,-1), time: 20.9961s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_40, [-0.9438568353652954,0.6057594418525696]=>[-0.299635272977866,0.21883990357469044] (9,-1; 2,-1), time: 21.1637s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_12, [-0.6660082340240479,1.9227410554885864]=>[1e-05,1.9227410554885864] (15,-1; -1,-1), time: 3.3277s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_80, [-0.856499195098877,1.1113351583480835]=>[-0.22639867740886827,0.5607306502491629] (9,-1; 2,-1), time: 20.3837s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_17, [-1.2024708986282349,0.3620556592941284]=>[-1.2024708986282349,-1e-05] (-1,-1; 15,-1), time: 2.4912s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_82, [-1.3117876052856445,0.4756448268890381]=>[-1.3117876052856445,-1e-05] (-1,-1; 15,-1), time: 2.9960s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_24, [-1.0354022979736328,0.42309850454330444]=>[-1.0354022979736328,-1e-05] (-1,-1; 15,-1), time: 3.3631s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_64, [-0.541273832321167,1.1029918193817139]=>[1e-05,1.1029918193817139] (15,-1; -1,-1), time: 4.1827s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_83, [-0.7092046737670898,0.7319390177726746]=>[-0.17000422859629177,0.27299081999351443] (2,-1; 9,-1), time: 25.3402s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_89, [-0.6893578171730042,0.9318059086799622]=>[-0.19992875113012168,0.3805590880691886] (2,-1; 2,-1), time: 11.7423s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_36, [-0.8813940286636353,0.650192379951477]=>[-0.35677651361821416,0.26750378044228884] (2,-1; 2,-1), time: 11.7602s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_81, [-1.1411787271499634,0.7388122081756592]=>[-0.5225364257193611,0.12033447175032531] (2,-1; 2,-1), time: 17.0551s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_21, [-0.7066246867179871,0.5552131533622742]=>[-0.2826066783875559,0.19362101408906318] (2,-1; 2,-1), time: 8.1878s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_0, [-0.5092307329177856,1.2599185705184937]=>[-0.10094512974094676,0.5876336659683502] (2,-1; 2,-1), time: 8.9242s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_28, [-1.0993082523345947,0.7822557687759399]=>[-0.48426347311272355,0.1518817198868572] (9,-1; 2,-1), time: 19.5526s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_46, [-1.0440640449523926,1.2599514722824097]=>[-0.43442939821846066,0.5342895366235578] (2,-1; 9,-1), time: 18.1111s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_78, [-0.5061037540435791,0.880866289138794]=>[-0.031362069151178534,0.4172950555961104] (2,-1; 2,-1), time: 19.2681s, #vars: 1233, #constrs: 522, improved: True
Solving MIP for lay6_60, [-0.7494760751724243,0.8441934585571289]=>[-0.12112068408720346,0.4467682371693267] (9,-1; 2,-1), time: 19.1487s, #vars: 1233, #constrs: 522, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
best_l after optimization: 31.491741180419922 with beta sum per layer: []
optimal alpha/beta time: 7.647909879684448
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.8307, -3.0783, -2.2889, -2.8527, -4.4112, -1.0676, -3.8614, -5.1678,
         -5.9331]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 78 nodes out of 78 unstable nodes, lb improved 20.113496780395508, ub improved 22.98505973815918, time 41.3654
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_76', 'lay8_91', 'lay8_14', 'lay8_3', 'lay8_7', 'lay8_64', 'lay8_2', 'lay8_80', 'lay8_86', 'lay8_21', 'lay8_60', 'lay8_92', 'lay8_45', 'lay8_62', 'lay8_68', 'lay8_0', 'lay8_50', 'lay8_6', 'lay8_24', 'lay8_1', 'lay8_56', 'lay8_85', 'lay8_17', 'lay8_84', 'lay8_46', 'lay8_23', 'lay8_82', 'lay8_94', 'lay8_4', 'lay8_8', 'lay8_79', 'lay8_78', 'lay8_61', 'lay8_30', 'lay8_93', 'lay8_74', 'lay8_99', 'lay8_43', 'lay8_35', 'lay8_98', 'lay8_77', 'lay8_54', 'lay8_49', 'lay8_71', 'lay8_52', 'lay8_48', 'lay8_5', 'lay8_34', 'lay8_41', 'lay8_81', 'lay8_75', 'lay8_33', 'lay8_83', 'lay8_96', 'lay8_16', 'lay8_90', 'lay8_11', 'lay8_29', 'lay8_88', 'lay8_47', 'lay8_37', 'lay8_42', 'lay8_32', 'lay8_73', 'lay8_26', 'lay8_20', 'lay8_28', 'lay8_10', 'lay8_67', 'lay8_22', 'lay8_87', 'lay8_18', 'lay8_95', 'lay8_40', 'lay8_9', 'lay8_65', 'lay8_70', 'lay8_58', 'lay8_27', 'lay8_59', 'lay8_55', 'lay8_63', 'lay8_69', 'lay8_38', 'lay8_39', 'lay8_53', 'lay8_97', 'lay8_51', 'lay8_13', 'lay8_31', 'lay8_36', 'lay8_19', 'lay8_12', 'lay8_57', 'lay8_89', 'lay8_25', 'lay8_15', 'lay8_66'] filter: 1.0
Solving MIP for lay8_0, [-1.6805636882781982,0.47442740201950073]=>[-1.6805636882781982,-1e-05] (-1,-1; 15,-1), time: 0.2133s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_7, [-2.372063398361206,0.6048135161399841]=>[-2.372063398361206,-1e-05] (-1,-1; 15,-1), time: 0.3425s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_62, [-2.6872053146362305,0.23247277736663818]=>[-2.6872053146362305,-1e-05] (-1,-1; 15,-1), time: 0.3559s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_86, [-1.800307273864746,0.5843640565872192]=>[-1.800307273864746,-1e-05] (-1,-1; 15,-1), time: 0.6119s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_24, [-1.4276542663574219,0.624252438545227]=>[-1.4276542663574219,-1e-05] (-1,-1; 15,-1), time: 0.4272s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_56, [-1.6015121936798096,0.6327486634254456]=>[-1.6015121936798096,-1e-05] (-1,-1; 15,-1), time: 0.4383s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_85, [-0.8759296536445618,1.529929518699646]=>[1e-05,1.529929518699646] (15,-1; -1,-1), time: 0.2247s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_17, [-1.4467228651046753,0.7644402384757996]=>[-1.4467228651046753,-1e-05] (-1,-1; 15,-1), time: 0.4228s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_68, [-1.6361346244812012,1.1174348592758179]=>[-1.6361346244812012,-1e-05] (-1,-1; 15,-1), time: 3.5052s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_46, [-1.446682095527649,0.6976674199104309]=>[-1.446682095527649,-1e-05] (-1,-1; 15,-1), time: 0.2189s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_23, [-0.5736593008041382,1.6383671760559082]=>[1e-05,1.6383671760559082] (15,-1; -1,-1), time: 0.2128s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_60, [-1.4810627698898315,0.9086278676986694]=>[-1.4810627698898315,-1e-05] (-1,-1; 15,-1), time: 4.5930s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_94, [-1.4410935640335083,0.6427032351493835]=>[-1.4410935640335083,-1e-05] (-1,-1; 15,-1), time: 13.2704s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_4, [-1.5882821083068848,0.6092766523361206]=>[-1.5882821083068848,-1e-05] (-1,-1; 15,-1), time: 0.2165s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_80, [-1.7090246677398682,1.2253749370574951]=>[-0.8372620354789899,0.24214825481157626] (2,-1; 9,-1), time: 22.4073s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_79, [-1.9431132078170776,0.6746774315834045]=>[-1.9431132078170776,-1e-05] (-1,-1; 15,-1), time: 0.3784s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_14, [-1.3453953266143799,1.4976253509521484]=>[-0.4164476999608998,0.41000979349349087] (2,-1; 9,-1), time: 26.0902s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_2, [-0.8922709822654724,1.1921895742416382]=>[-0.023387075025935244,0.5454754030282044] (9,-1; 2,-1), time: 28.7854s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_76, [-1.0620360374450684,1.2198753356933594]=>[-0.29139801622367356,0.2404622145766296] (9,-1; 9,-1), time: 30.0113s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_92, [-1.2583482265472412,1.5960183143615723]=>[-0.3148253669302361,0.6073161732065298] (9,-1; 9,-1), time: 30.0113s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_21, [-1.1666613817214966,1.3928728103637695]=>[-0.27787935081619464,0.42021475026335464] (9,-1; 9,-1), time: 30.0106s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_3, [-1.0504343509674072,1.7114176750183105]=>[-0.2888797484033836,0.4465673603396813] (9,-1; 9,-1), time: 30.0120s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_64, [-1.0106085538864136,1.3368433713912964]=>[-0.0008195221702142035,0.6426528275490043] (9,-1; 9,-1), time: 30.0122s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_45, [-0.991551399230957,1.053239107131958]=>[-0.23564418179798005,0.25202151200501177] (9,-1; 9,-1), time: 30.0184s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_91, [-1.4878486394882202,0.9892777800559998]=>[-0.6815953344722253,0.12578991489389205] (9,-1; 9,-1), time: 30.0171s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_50, [-1.344227910041809,1.112900733947754]=>[-0.5265764104715966,0.22955568830288314] (9,-1; 9,-1), time: 30.0074s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_43, [-0.790630578994751,2.1829137802124023]=>[1e-05,2.1829137802124023] (15,-1; -1,-1), time: 0.2158s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_98, [-1.906575083732605,0.5317696332931519]=>[-1.906575083732605,-1e-05] (-1,-1; 15,-1), time: 0.2169s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_99, [-2.099972724914551,0.2480657398700714]=>[-2.099972724914551,-1e-05] (-1,-1; 15,-1), time: 0.2204s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_77, [-2.0875489711761475,0.526268482208252]=>[-2.0875489711761475,-1e-05] (-1,-1; 15,-1), time: 0.2162s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_35, [-0.7412006855010986,1.7079801559448242]=>[1e-05,1.7079801559448242] (15,-1; -1,-1), time: 0.2232s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_6, [-1.2245198488235474,0.847831666469574]=>[-0.319929189049283,0.18124096997945777] (9,-1; 9,-1), time: 30.0084s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_52, [-0.7318751215934753,1.773945927619934]=>[1e-05,1.773945927619934] (15,-1; -1,-1), time: 0.2187s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_5, [-0.42366600036621094,2.6275625228881836]=>[1e-05,2.6275625228881836] (15,-1; -1,-1), time: 0.2218s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_1, [-1.585681438446045,1.0868384838104248]=>[-0.6168251321479331,0.16729269297414928] (9,-1; 9,-1), time: 30.0075s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_49, [-0.7495589256286621,1.8022668361663818]=>[1e-05,1.8022668361663818] (15,-1; -1,-1), time: 0.3951s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_81, [-0.5391535758972168,2.732328176498413]=>[1e-05,2.732328176498413] (15,-1; -1,-1), time: 0.2184s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_48, [-1.5859549045562744,0.7779058218002319]=>[-1.5859549045562744,-1e-05] (-1,-1; 15,-1), time: 0.5849s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_75, [-1.8591196537017822,0.4890214204788208]=>[-1.8591196537017822,-1e-05] (-1,-1; 15,-1), time: 0.2134s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_41, [-1.4973183870315552,0.5656095743179321]=>[-1.4973183870315552,-1e-05] (-1,-1; 15,-1), time: 0.3975s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_16, [-0.8407285213470459,1.5650218725204468]=>[1e-05,1.5650218725204468] (15,-1; -1,-1), time: 0.2152s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_90, [-2.134026527404785,0.6888104677200317]=>[-2.134026527404785,-1e-05] (-1,-1; 15,-1), time: 0.2157s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_29, [-0.9365644454956055,2.0929036140441895]=>[1e-05,2.0929036140441895] (15,-1; -1,-1), time: 0.2124s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_84, [-1.200300931930542,0.9958707094192505]=>[-0.4121060281304883,0.15150515606075754] (9,-1; 9,-1), time: 30.0194s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_47, [-0.6697896718978882,2.5962471961975098]=>[1e-05,2.5962471961975098] (15,-1; -1,-1), time: 0.2139s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_37, [-0.5254744291305542,1.7046115398406982]=>[1e-05,1.7046115398406982] (15,-1; -1,-1), time: 0.2119s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_42, [-0.4100470542907715,2.4034078121185303]=>[1e-05,2.4034078121185303] (15,-1; -1,-1), time: 0.2138s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_32, [-2.3079659938812256,0.35172319412231445]=>[-2.3079659938812256,-1e-05] (-1,-1; 15,-1), time: 0.2168s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_82, [-1.1660369634628296,1.7491954565048218]=>[-0.4066448775353464,0.4669946495725664] (9,-1; 9,-1), time: 30.0090s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_26, [-0.6573892831802368,3.0335097312927246]=>[1e-05,3.0335097312927246] (15,-1; -1,-1), time: 0.2137s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_11, [-1.388102412223816,0.8424422740936279]=>[-1.388102412223816,-1e-05] (-1,-1; 15,-1), time: 13.8055s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_8, [-1.4418909549713135,1.0407845973968506]=>[-0.4262646433656853,0.17186435270446015] (9,-1; 9,-1), time: 30.0079s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_10, [-0.3964676856994629,2.6153931617736816]=>[1e-05,2.6153931617736816] (15,-1; -1,-1), time: 0.2096s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_78, [-1.6499334573745728,0.8526687026023865]=>[-0.6282130786319456,0.07168353953005625] (9,-1; 9,-1), time: 30.0119s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_61, [-1.3184758424758911,0.7278004288673401]=>[-0.47979309769282447,0.02524035419839569] (9,-1; 9,-1), time: 30.0094s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_87, [-2.262963056564331,0.7204809784889221]=>[-2.262963056564331,-1e-05] (-1,-1; 15,-1), time: 0.2142s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_18, [-0.5085956454277039,2.6263301372528076]=>[1e-05,2.6263301372528076] (15,-1; -1,-1), time: 0.2153s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_95, [-2.6615452766418457,0.6009074449539185]=>[-2.6615452766418457,-1e-05] (-1,-1; 15,-1), time: 0.2204s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_22, [-0.9829738140106201,1.3892372846603394]=>[1e-05,1.3892372846603394] (15,-1; -1,-1), time: 4.4396s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_9, [-2.847311019897461,0.0895543098449707]=>[-2.847311019897461,-1e-05] (-1,-1; 15,-1), time: 0.2164s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_30, [-1.035603642463684,1.547255039215088]=>[-0.25827770199480904,0.46620665450019755] (9,-1; 9,-1), time: 30.0100s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_70, [-1.8460922241210938,0.7422035932540894]=>[-1.8460922241210938,-1e-05] (-1,-1; 15,-1), time: 0.2193s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_58, [-0.9945157170295715,1.5175000429153442]=>[1e-05,1.5175000429153442] (15,-1; -1,-1), time: 0.3975s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_27, [-1.4701052904129028,0.7226341962814331]=>[-1.4701052904129028,-1e-05] (-1,-1; 15,-1), time: 0.5421s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_93, [-1.1322076320648193,1.0468171834945679]=>[-0.27462117248409024,0.24948872407317008] (9,-1; 9,-1), time: 30.0075s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_74, [-1.0200467109680176,1.8117835521697998]=>[-0.1771474736618881,0.6770855587888787] (9,-1; 9,-1), time: 30.0081s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_54, [-1.1415315866470337,1.1062121391296387]=>[-0.35930866493374725,0.22781617568812063] (9,-1; 9,-1), time: 30.0087s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_71, [-1.3841164112091064,0.7786582708358765]=>[-0.4626358243199966,0.0907307476903252] (9,-1; 9,-1), time: 30.0080s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_34, [-0.957771897315979,1.6613633632659912]=>[-0.29808070200736037,0.42477799230821656] (9,-1; 9,-1), time: 30.0072s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_59, [-0.6561957597732544,1.6995246410369873]=>[1e-05,1.6995246410369873] (15,-1; -1,-1), time: 0.3986s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_69, [-0.04305952787399292,2.1560873985290527]=>[1e-05,2.1560873985290527] (15,-1; -1,-1), time: 0.2155s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_38, [-0.6853438019752502,2.1780683994293213]=>[1e-05,2.1780683994293213] (15,-1; -1,-1), time: 0.2169s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_53, [-1.8010560274124146,0.3600160479545593]=>[-1.8010560274124146,-1e-05] (-1,-1; 15,-1), time: 0.2137s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_55, [-0.9979165196418762,1.6131312847137451]=>[1e-05,1.6131312847137451] (15,-1; -1,-1), time: 0.6236s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_33, [-1.0080864429473877,1.1984612941741943]=>[-0.10683575037249687,0.41820541882014783] (9,-1; 9,-1), time: 30.0120s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_97, [-1.4683533906936646,0.41262197494506836]=>[-1.4683533906936646,-1e-05] (-1,-1; 15,-1), time: 0.2149s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_51, [-2.1950736045837402,0.7218660712242126]=>[-2.1950736045837402,-1e-05] (-1,-1; 15,-1), time: 0.2159s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_83, [-1.2996336221694946,0.868545651435852]=>[-0.493257557989921,0.05401630793387204] (9,-1; 9,-1), time: 30.0077s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_96, [-0.8484981656074524,1.4127144813537598]=>[-0.0842689340771246,0.5348313831899117] (9,-1; 9,-1), time: 30.0091s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_31, [-1.6756435632705688,0.7033137083053589]=>[-1.6756435632705688,-1e-05] (-1,-1; 15,-1), time: 0.2159s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_36, [-1.9407570362091064,0.5340107679367065]=>[-1.9407570362091064,-1e-05] (-1,-1; 15,-1), time: 0.2152s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_12, [-0.5500055551528931,3.893462896347046]=>[1e-05,3.893462896347046] (15,-1; -1,-1), time: 0.2168s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_89, [-2.062239646911621,0.4705197811126709]=>[-2.062239646911621,-1e-05] (-1,-1; 15,-1), time: 0.2143s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_15, [-1.919224500656128,0.6840610504150391]=>[-1.919224500656128,-1e-05] (-1,-1; 15,-1), time: 0.2179s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_25, [-1.9096133708953857,0.32516366243362427]=>[-1.9096133708953857,-1e-05] (-1,-1; 15,-1), time: 0.2277s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_66, [-1.7970809936523438,0.8403277397155762]=>[-1.7970809936523438,-1e-05] (-1,-1; 15,-1), time: 0.2129s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_88, [-0.9669919610023499,1.4342927932739258]=>[-0.26723635424392483,0.3469245821079925] (9,-1; 9,-1), time: 30.0072s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_65, [-1.2551751136779785,0.8666995763778687]=>[-1.2551751136779785,-1e-05] (-1,-1; 15,-1), time: 4.8650s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_73, [-1.0879250764846802,1.5351461172103882]=>[-0.2285161786844285,0.44345709491542057] (9,-1; 9,-1), time: 30.0102s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_20, [-0.9264936447143555,1.0053489208221436]=>[-0.21500359778586234,0.2300959612287162] (9,-1; 9,-1), time: 30.0081s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_39, [-1.1633199453353882,0.8261162042617798]=>[-1.1633199453353882,-1e-05] (-1,-1; 15,-1), time: 5.6784s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_67, [-1.223677635192871,1.5139224529266357]=>[-0.05716470452117086,0.6758053999107618] (9,-1; 2,-1), time: 23.8261s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_28, [-0.9329317808151245,1.118750810623169]=>[-0.2196456229855552,0.21758242072169334] (9,-1; 9,-1), time: 30.0108s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_19, [-1.3391165733337402,1.0847088098526]=>[-0.347636983344773,0.2706523594226015] (9,-1; 2,-1), time: 22.3085s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_40, [-0.8327842950820923,1.15667724609375]=>[-0.12093503752966914,0.4517147418850452] (9,-1; 9,-1), time: 30.0073s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_63, [-1.8141847848892212,1.735880970954895]=>[-0.6378083297290837,0.3705161111639526] (9,-1; 9,-1), time: 30.0050s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_13, [-0.9641417264938354,1.1815261840820312]=>[-0.21257508882031578,0.3172631768753345] (9,-1; 9,-1), time: 30.0068s, #vars: 1381, #constrs: 694, improved: True
Solving MIP for lay8_57, [-1.6898713111877441,1.2032095193862915]=>[-0.47531769483653385,0.2644964568399717] (9,-1; 9,-1), time: 30.0140s, #vars: 1381, #constrs: 694, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
best_l after optimization: -5.198419570922852 with beta sum per layer: []
optimal alpha/beta time: 7.369250774383545
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.4395,  1.3213,  1.5801,  1.6754,  0.0650,  2.5533, -0.1875, -0.8057,
         -2.4428]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 98 nodes out of 98 unstable nodes, lb improved 47.311058044433594, ub improved 57.110595703125, time 91.8047
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_13', 'lay10_45', 'lay10_36', 'lay10_2', 'lay10_57', 'lay10_34', 'lay10_72', 'lay10_64', 'lay10_11', 'lay10_92', 'lay10_43', 'lay10_17', 'lay10_83', 'lay10_55', 'lay10_23', 'lay10_41', 'lay10_49', 'lay10_42', 'lay10_15', 'lay10_5', 'lay10_12', 'lay10_50', 'lay10_75', 'lay10_65', 'lay10_24', 'lay10_89', 'lay10_69', 'lay10_25', 'lay10_81', 'lay10_54', 'lay10_91', 'lay10_70', 'lay10_77', 'lay10_94', 'lay10_82', 'lay10_48', 'lay10_86', 'lay10_31', 'lay10_78', 'lay10_29', 'lay10_22', 'lay10_85', 'lay10_39', 'lay10_27', 'lay10_52', 'lay10_99', 'lay10_33', 'lay10_32', 'lay10_0', 'lay10_80', 'lay10_47', 'lay10_87', 'lay10_61', 'lay10_37', 'lay10_58', 'lay10_21', 'lay10_95', 'lay10_66', 'lay10_38', 'lay10_90', 'lay10_71', 'lay10_79', 'lay10_19', 'lay10_60', 'lay10_88', 'lay10_74', 'lay10_63', 'lay10_4', 'lay10_26', 'lay10_9', 'lay10_46', 'lay10_68', 'lay10_28', 'lay10_40', 'lay10_8', 'lay10_18', 'lay10_59', 'lay10_44', 'lay10_10', 'lay10_56', 'lay10_30', 'lay10_6', 'lay10_84', 'lay10_97', 'lay10_98', 'lay10_16', 'lay10_93', 'lay10_96', 'lay10_76', 'lay10_73', 'lay10_1', 'lay10_62', 'lay10_3', 'lay10_7', 'lay10_67', 'lay10_20', 'lay10_14', 'lay10_53', 'lay10_35', 'lay10_51'] filter: 1.0
Solving MIP for lay10_23, [-2.3568923473358154,2.061035633087158]=>[-2.3568923473358154,-1e-05] (-1,-1; 15,-1), time: 0.2658s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_2, [-2.2609145641326904,4.8180389404296875]=>[1e-05,4.8180389404296875] (15,-1; -1,-1), time: 0.3199s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_92, [-3.084439754486084,2.0969831943511963]=>[-3.084439754486084,-1e-05] (-1,-1; 15,-1), time: 0.3440s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_83, [-3.341359853744507,2.24647855758667]=>[-3.341359853744507,-1e-05] (-1,-1; 15,-1), time: 0.3585s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_13, [-3.462421417236328,2.4014854431152344]=>[-3.462421417236328,-1e-05] (-1,-1; 15,-1), time: 0.6172s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_72, [-2.651761293411255,2.0172688961029053]=>[-2.651761293411255,-1e-05] (-1,-1; 15,-1), time: 5.6784s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_15, [-2.435962438583374,1.6509257555007935]=>[-2.435962438583374,-1e-05] (-1,-1; 15,-1), time: 5.3533s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_50, [-2.6493282318115234,1.881656289100647]=>[-2.6493282318115234,-1e-05] (-1,-1; 15,-1), time: 0.2672s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_55, [-2.4828686714172363,1.8180994987487793]=>[-2.4828686714172363,-1e-05] (-1,-1; 15,-1), time: 6.3916s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_65, [-3.0591936111450195,1.9590628147125244]=>[-3.0591936111450195,-1e-05] (-1,-1; 15,-1), time: 0.4936s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_36, [-2.3178858757019043,1.910644292831421]=>[-2.3178858757019043,-1e-05] (-1,-1; 15,-1), time: 8.6764s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_11, [-2.438629388809204,2.619487762451172]=>[-0.1709827633827227,0.6323672080934826] (9,-1; 9,-1), time: 30.0181s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_45, [-2.4516148567199707,2.4674205780029297]=>[-0.6538161669852589,0.2111476618278669] (9,-1; 9,-1), time: 30.0275s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_43, [-2.0959620475769043,2.9026520252227783]=>[-0.33699741295650554,0.5788016711902222] (9,-1; 9,-1), time: 30.0310s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_57, [-2.271207571029663,2.0578551292419434]=>[-0.4721522341982858,0.10996697911778133] (9,-1; 9,-1), time: 30.0449s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_41, [-2.3963820934295654,2.181516647338867]=>[-0.5556804475331643,0.2505840222673001] (9,-1; 9,-1), time: 30.0791s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_34, [-2.454411506652832,2.2850406169891357]=>[-0.31094658812801523,0.4430140742758687] (9,-1; 9,-1), time: 30.0913s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_17, [-2.6573262214660645,2.5016629695892334]=>[-0.2749179810632684,0.6128353158793904] (9,-1; 9,-1), time: 30.0932s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_64, [-2.600416660308838,2.262497663497925]=>[-0.8582466401906625,0.18291384169363242] (9,-1; 9,-1), time: 30.1016s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_25, [-2.71970796585083,1.9318459033966064]=>[-2.71970796585083,-1e-05] (-1,-1; 15,-1), time: 0.2534s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_49, [-2.8689427375793457,2.4605553150177]=>[-0.623823367545458,0.199650433195771] (9,-1; 9,-1), time: 30.0233s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_70, [-2.729672908782959,0.8227908611297607]=>[-2.729672908782959,-1e-05] (-1,-1; 15,-1), time: 0.2562s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_42, [-2.600397825241089,2.032878875732422]=>[-0.8672072276005683,0.05356059806198231] (9,-1; 9,-1), time: 30.0867s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_5, [-2.073972225189209,2.3840150833129883]=>[-0.23473992899897042,0.39898559248222] (9,-1; 9,-1), time: 30.0612s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_48, [-2.980602979660034,1.2084311246871948]=>[-2.980602979660034,-1e-05] (-1,-1; 15,-1), time: 0.2539s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_12, [-2.49981427192688,2.691197395324707]=>[-0.7380151090020453,0.35244870301794623] (9,-1; 9,-1), time: 30.0152s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_22, [-2.1521105766296387,1.8123836517333984]=>[-2.1521105766296387,-1e-05] (-1,-1; 15,-1), time: 0.2576s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_85, [-2.962367057800293,1.3697283267974854]=>[-2.962367057800293,-1e-05] (-1,-1; 15,-1), time: 0.2524s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_39, [-2.7340753078460693,1.6337008476257324]=>[-2.7340753078460693,-1e-05] (-1,-1; 15,-1), time: 0.4721s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_77, [-2.4996166229248047,1.8624744415283203]=>[-2.4996166229248047,-1e-05] (-1,-1; 15,-1), time: 1.3214s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_75, [-2.2611243724823,2.417290687561035]=>[-0.4484405764911791,0.3305948899665371] (9,-1; 9,-1), time: 30.0274s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_33, [-1.3830151557922363,4.697628974914551]=>[1e-05,4.697628974914551] (15,-1; -1,-1), time: 0.2518s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_24, [-2.606457471847534,3.049386501312256]=>[-0.5341312495320197,0.5411669561818194] (9,-1; 9,-1), time: 30.0208s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_89, [-2.515180826187134,2.5583300590515137]=>[-0.8883339602424767,0.12612538188469558] (9,-1; 9,-1), time: 30.0060s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_0, [-2.6509687900543213,1.4800947904586792]=>[-2.6509687900543213,-1e-05] (-1,-1; 15,-1), time: 0.2644s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_80, [-2.414017677307129,1.4169540405273438]=>[-2.414017677307129,-1e-05] (-1,-1; 15,-1), time: 0.2647s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_47, [-1.6293296813964844,3.9234676361083984]=>[1e-05,3.9234676361083984] (15,-1; -1,-1), time: 0.2497s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_87, [-1.9787486791610718,3.1118838787078857]=>[1e-05,3.1118838787078857] (15,-1; -1,-1), time: 0.2652s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_37, [-2.476891279220581,1.6170059442520142]=>[-2.476891279220581,-1e-05] (-1,-1; 15,-1), time: 0.2576s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_69, [-2.649712562561035,2.5642850399017334]=>[-0.5091334216688759,0.19845874098895566] (9,-1; 9,-1), time: 30.0431s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_94, [-2.158264398574829,2.149493932723999]=>[-2.158264398574829,-1e-05] (-1,-1; 15,-1), time: 9.6452s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_95, [-1.6026391983032227,4.07503080368042]=>[1e-05,4.07503080368042] (15,-1; -1,-1), time: 0.2486s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_66, [-1.6089946031570435,3.5882132053375244]=>[1e-05,3.5882132053375244] (15,-1; -1,-1), time: 0.2546s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_38, [-1.493009328842163,3.9478516578674316]=>[1e-05,3.9478516578674316] (15,-1; -1,-1), time: 0.2563s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_90, [-2.2531700134277344,3.2993886470794678]=>[1e-05,3.2993886470794678] (15,-1; -1,-1), time: 0.2502s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_71, [-2.1512115001678467,3.7856009006500244]=>[1e-05,3.7856009006500244] (15,-1; -1,-1), time: 0.2508s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_79, [-1.9153740406036377,3.3865668773651123]=>[1e-05,3.3865668773651123] (15,-1; -1,-1), time: 0.2498s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_19, [-1.3646280765533447,3.0071027278900146]=>[1e-05,3.0071027278900146] (15,-1; -1,-1), time: 0.2496s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_60, [-3.3556981086730957,1.0278781652450562]=>[-3.3556981086730957,-1e-05] (-1,-1; 15,-1), time: 0.2498s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_88, [-1.6973403692245483,2.635179042816162]=>[1e-05,2.635179042816162] (15,-1; -1,-1), time: 0.2562s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_81, [-2.435706615447998,2.1559231281280518]=>[-0.6286049140873243,0.33486624958671846] (9,-1; 9,-1), time: 30.0192s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_91, [-2.5719356536865234,2.5851831436157227]=>[-0.5765847659977636,0.31834174304670476] (9,-1; 9,-1), time: 30.0250s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_54, [-2.5860698223114014,2.23309063911438]=>[-0.858618541171242,0.03637467369318566] (9,-1; 9,-1), time: 30.0926s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_82, [-2.0774154663085938,2.5134475231170654]=>[-0.34549743710677866,0.49506958529301837] (9,-1; 9,-1), time: 30.0575s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_63, [-1.5805212259292603,3.012930154800415]=>[1e-05,3.012930154800415] (15,-1; -1,-1), time: 0.2496s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_86, [-2.766892671585083,2.0329670906066895]=>[-0.5186171198365275,0.41392164779235596] (9,-1; 9,-1), time: 30.0335s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_4, [-2.4703478813171387,1.445536494255066]=>[-2.4703478813171387,-1e-05] (-1,-1; 15,-1), time: 0.2527s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_31, [-2.5390563011169434,3.0391759872436523]=>[-1.0069833707094074,0.28470505195425094] (9,-1; 9,-1), time: 30.0164s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_26, [-2.5904998779296875,4.326686859130859]=>[1e-05,4.326686859130859] (15,-1; -1,-1), time: 0.2565s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_29, [-2.158111810684204,2.227428436279297]=>[-0.39741201776952934,0.26128727645461647] (9,-1; 9,-1), time: 30.0158s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_78, [-2.2376837730407715,2.8602147102355957]=>[-0.5146053901679581,0.4350458495426449] (9,-1; 9,-1), time: 30.0780s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_28, [-1.7589530944824219,3.2783167362213135]=>[1e-05,3.2783167362213135] (15,-1; -1,-1), time: 0.2535s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_68, [-1.700566291809082,2.6861467361450195]=>[1e-05,2.6861467361450195] (15,-1; -1,-1), time: 0.2672s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_40, [-1.9091569185256958,3.5180063247680664]=>[1e-05,3.5180063247680664] (15,-1; -1,-1), time: 0.2446s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_8, [-1.8048663139343262,3.227045774459839]=>[1e-05,3.227045774459839] (15,-1; -1,-1), time: 0.2510s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_59, [-2.934800386428833,1.1870124340057373]=>[-2.934800386428833,-1e-05] (-1,-1; 15,-1), time: 0.2506s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_27, [-2.070854663848877,2.354738712310791]=>[-0.5239687047153087,0.260569173292785] (9,-1; 9,-1), time: 30.0531s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_84, [-2.4122796058654785,3.596850872039795]=>[1e-05,3.596850872039795] (15,-1; -1,-1), time: 0.2528s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_52, [-1.9916777610778809,2.4352433681488037]=>[-0.08474779671467551,0.6253134395268606] (9,-1; 9,-1), time: 30.0119s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_99, [-2.3155999183654785,2.3019344806671143]=>[-0.1835892728506508,0.6576871977470499] (9,-1; 9,-1), time: 30.0142s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_98, [-3.194563865661621,1.2700726985931396]=>[-3.194563865661621,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_16, [-2.2383413314819336,1.4090169668197632]=>[-2.2383413314819336,-1e-05] (-1,-1; 15,-1), time: 0.2595s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_30, [-2.0434038639068604,2.3816633224487305]=>[1e-05,2.3816633224487305] (15,-1; -1,-1), time: 1.5508s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_32, [-2.552072048187256,1.7381855249404907]=>[-0.39754951863997845,0.22936676129961514] (9,-1; 9,-1), time: 30.0940s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_73, [-2.0284245014190674,1.4680906534194946]=>[-2.0284245014190674,-1e-05] (-1,-1; 15,-1), time: 0.2492s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_1, [-3.0690975189208984,2.157555103302002]=>[-3.0690975189208984,-1e-05] (-1,-1; 15,-1), time: 0.2539s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_61, [-2.4409286975860596,2.97832989692688]=>[-0.21794382567885215,0.8588220883515421] (9,-1; 9,-1), time: 30.0128s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_58, [-2.4332799911499023,2.5110671520233154]=>[-0.23850303241834117,0.5707727211461396] (9,-1; 9,-1), time: 30.0187s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_96, [-2.2857961654663086,1.815291166305542]=>[-2.2857961654663086,-1e-05] (-1,-1; 15,-1), time: 5.6103s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_21, [-2.519242763519287,3.3489320278167725]=>[-0.8425322979424708,0.38360611023591873] (9,-1; 9,-1), time: 30.0809s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_67, [-1.8677994012832642,2.418475389480591]=>[1e-05,2.418475389480591] (15,-1; -1,-1), time: 1.5831s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_20, [-3.3382656574249268,1.629176378250122]=>[-3.3382656574249268,-1e-05] (-1,-1; 15,-1), time: 0.2507s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_53, [-2.9471569061279297,1.904381513595581]=>[-2.9471569061279297,-1e-05] (-1,-1; 15,-1), time: 0.2549s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_35, [-2.3377559185028076,1.3367195129394531]=>[-2.3377559185028076,-1e-05] (-1,-1; 15,-1), time: 0.2616s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_51, [-2.9396872520446777,1.2096019983291626]=>[-2.9396872520446777,-1e-05] (-1,-1; 15,-1), time: 0.2646s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_74, [-2.441768169403076,2.7084388732910156]=>[-0.031161460007244506,0.7088849520014942] (9,-1; 9,-1), time: 30.0227s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_9, [-2.1675074100494385,1.6602903604507446]=>[-0.5811660600595898,0.06511904726775872] (9,-1; 9,-1), time: 30.0827s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_46, [-2.7275257110595703,2.4870471954345703]=>[-0.61989942744169,0.48894097649158075] (9,-1; 9,-1), time: 30.0111s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_18, [-2.421297788619995,2.1946375370025635]=>[-0.7090305533071027,0.02496723319671644] (9,-1; 9,-1), time: 30.0572s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_44, [-3.739980459213257,2.1972811222076416]=>[-1.1678895398794522,0.014375144405180031] (9,-1; 9,-1), time: 30.0200s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_56, [-2.0932843685150146,2.3947105407714844]=>[-0.25139331212018684,0.24313701606263033] (9,-1; 9,-1), time: 30.0072s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_10, [-2.5560362339019775,2.514451742172241]=>[-0.578917307871075,0.2451858736205805] (9,-1; 9,-1), time: 30.0283s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_6, [-2.1936774253845215,2.3662497997283936]=>[-0.35590615664541064,0.26991568624827333] (9,-1; 9,-1), time: 30.0164s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_97, [-2.5850870609283447,2.3971495628356934]=>[-0.584371434826181,0.381548104823667] (9,-1; 9,-1), time: 30.0242s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_93, [-1.9954341650009155,2.1995902061462402]=>[-0.7240438371229376,0.15537019411684502] (9,-1; 9,-1), time: 30.0154s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_76, [-1.7316561937332153,3.1450138092041016]=>[-0.2183456173536423,0.4933435005163607] (9,-1; 9,-1), time: 30.0444s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_62, [-2.5111818313598633,2.090400457382202]=>[-0.6111812109962868,0.19395125649891992] (9,-1; 9,-1), time: 30.0177s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_3, [-3.086148500442505,2.5318331718444824]=>[-0.5968358818748836,0.44203884199949595] (9,-1; 9,-1), time: 30.0181s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_7, [-2.8006668090820312,2.3997578620910645]=>[-0.4462893807561804,0.4465850953722257] (9,-1; 9,-1), time: 30.0212s, #vars: 1555, #constrs: 905, improved: True
Solving MIP for lay10_14, [-2.3558671474456787,2.3121604919433594]=>[-0.6007207674442979,0.33396932426676945] (9,-1; 9,-1), time: 30.0104s, #vars: 1555, #constrs: 905, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
best_l after optimization: -16.395328521728516 with beta sum per layer: []
optimal alpha/beta time: 7.085205316543579
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.7975,  2.6571,  2.7123,  2.9890,  1.4164,  3.6373,  0.9623,  0.5890,
         -1.3656]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 127.66136169433594, ub improved 151.66445922851562, time 99.9734
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=10, bias=True) 5 12 torch.Size([10])
MIP finished with 244.38520431518555s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: -21.730247497558594 with beta sum per layer: []
optimal alpha/beta time: 6.412068605422974
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 3.3868,  3.1725,  3.2159,  3.6865,  2.0068,  4.1096,  1.4961,  1.3864,
         -0.7303]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 3.3868,  3.1725,  3.2159,  3.6865,  0.0000,  2.0068,  4.1096,  1.4961,
          1.3864, -0.7303]], device='cuda:0') min: tensor(-0.7303, device='cuda:0')
time threshold left for bab: 641.4428019523621
##### [0:4] Tested against 9 ######
Model prediction is: tensor([[-1.3820, -1.5346, -0.5229, -2.8616,  6.9759,  0.0258, -2.4641,  0.4381,
         -0.5032,  4.0722]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: 0.7302590608596802 with beta sum per layer: []
optimal alpha/beta time: 1.6161060333251953
alpha-CROWN with fixed intermediate bounds: tensor([[-0.7303]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.7302590608596802
layer 0 size torch.Size([100]) unstable 36
layer 1 size torch.Size([100]) unstable 38
layer 2 size torch.Size([100]) unstable 24
layer 3 size torch.Size([100]) unstable 37
layer 4 size torch.Size([100]) unstable 46
# of unstable neurons: 181
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 41]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.9572741985321045 with beta sum per layer: [0.658413827419281, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5515401363372803
This batch time : update_bounds func: 0.5550	 prepare: 0.0021	 bound: 0.5519	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 0.5550	 prepare: 0.0021	 bound: 0.5519	 transfer: 0.0006	 finalize: 0.0004
batch bounding time:  0.5551743507385254
Current worst splitting domains [lb, ub] (depth):
[-0.67350, 98.269737] (1), [-0.28378, 98.269737] (1), 
length of domains: 2
Total time: 0.5846	 pickout: 0.0011	 decision: 0.0282	 get_bound: 0.5552	 add_domain: 0.0001
Current lb:-0.6734976768493652
2 neurons visited
0 diving domains visited
Cumulative time: 2.443225383758545

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 24], [4, 24]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.8830200433731079 with beta sum per layer: [1.19508695602417, 0.0, 0.0, 0.0, 1.2415452003479004]
optimal alpha/beta time: 0.347475528717041
This batch time : update_bounds func: 0.3514	 prepare: 0.0024	 bound: 0.3478	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 0.9064	 prepare: 0.0045	 bound: 0.8996	 transfer: 0.0007	 finalize: 0.0009
batch bounding time:  0.3514890670776367
Current worst splitting domains [lb, ub] (depth):
[-0.67350, 98.269737] (2), [-0.26686, 98.269737] (2), [-0.04066, 98.269737] (2), 
length of domains: 3
Total time: 0.3791	 pickout: 0.0011	 decision: 0.0262	 get_bound: 0.3515	 add_domain: 0.0002
Current lb:-0.6734976768493652
6 neurons visited
0 diving domains visited
Cumulative time: 2.822432041168213

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 7], [0, 7], [0, 92]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 0.9998576641082764 with beta sum per layer: [2.7908987998962402, 0.0, 0.0, 0.0, 1.5787733793258667]
optimal alpha/beta time: 0.3479623794555664
This batch time : update_bounds func: 0.3523	 prepare: 0.0027	 bound: 0.3482	 transfer: 0.0007	 finalize: 0.0007
Accumulated time: update_bounds func: 1.2587	 prepare: 0.0071	 bound: 1.2479	 transfer: 0.0007	 finalize: 0.0015
batch bounding time:  0.3524510860443115
Current worst splitting domains [lb, ub] (depth):
[-0.63859, 98.269737] (3), [-0.34082, 98.269737] (3), [-0.20528, 98.269737] (3), 
length of domains: 3
Total time: 0.3801	 pickout: 0.0013	 decision: 0.0262	 get_bound: 0.3525	 add_domain: 0.0002
Current lb:-0.6385903358459473
12 neurons visited
0 diving domains visited
Cumulative time: 3.202669382095337

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 92], [0, 92], [0, 92]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 1.416197419166565 with beta sum per layer: [4.848261833190918, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3461611270904541
This batch time : update_bounds func: 0.3505	 prepare: 0.0027	 bound: 0.3464	 transfer: 0.0007	 finalize: 0.0007
Accumulated time: update_bounds func: 1.6093	 prepare: 0.0098	 bound: 1.5943	 transfer: 0.0007	 finalize: 0.0022
batch bounding time:  0.35065245628356934
Current worst splitting domains [lb, ub] (depth):
[-0.54654, 98.269737] (4), [-0.44078, 98.269737] (4), [-0.24191, 98.269737] (4), [-0.12301, 98.269737] (4), [-0.10226, 98.269737] (4), 
length of domains: 5
Total time: 0.3781	 pickout: 0.0013	 decision: 0.0259	 get_bound: 0.3507	 add_domain: 0.0003
Current lb:-0.5465420484542847
18 neurons visited
0 diving domains visited
Cumulative time: 3.5809152126312256

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 33], [0, 33], [1, 79], [1, 79], [0, 33]]
single_node_split: True
regular batch size: 2*5, diving batch size 1*0
best_l after optimization: 1.6385784149169922 with beta sum per layer: [6.549104690551758, 0.1997966766357422, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3538222312927246
This batch time : update_bounds func: 0.3594	 prepare: 0.0033	 bound: 0.3541	 transfer: 0.0008	 finalize: 0.0011
Accumulated time: update_bounds func: 1.9687	 prepare: 0.0131	 bound: 1.9484	 transfer: 0.0008	 finalize: 0.0033
batch bounding time:  0.35960888862609863
Current worst splitting domains [lb, ub] (depth):
[-0.45282, 98.269737] (5), [-0.40560, 98.269737] (5), [-0.34305, 98.269737] (5), [-0.29655, 98.269737] (5), [-0.16138, 98.269737] (5), [-0.04026, 98.269737] (5), [-0.02937, 98.269737] (5), 
length of domains: 7
Total time: 0.3878	 pickout: 0.0016	 decision: 0.0261	 get_bound: 0.3596	 add_domain: 0.0004
Current lb:-0.45282113552093506
28 neurons visited
0 diving domains visited
Cumulative time: 3.969047784805298

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 38], [1, 79], [1, 79], [1, 79], [0, 33], [0, 33], [0, 33]]
single_node_split: True
regular batch size: 2*7, diving batch size 1*0
best_l after optimization: 1.8205742835998535 with beta sum per layer: [7.457730293273926, 0.46008577942848206, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3520543575286865
This batch time : update_bounds func: 0.3587	 prepare: 0.0039	 bound: 0.3524	 transfer: 0.0007	 finalize: 0.0016
Accumulated time: update_bounds func: 2.3274	 prepare: 0.0170	 bound: 2.3008	 transfer: 0.0007	 finalize: 0.0050
batch bounding time:  0.35883331298828125
Current worst splitting domains [lb, ub] (depth):
[-0.37011, 98.269737] (6), [-0.32691, 98.269737] (6), [-0.31023, 98.269737] (6), [-0.27771, 98.269737] (6), [-0.25082, 98.269737] (6), [-0.20875, 98.269737] (6), [-0.20243, 98.269737] (6), [-0.15189, 98.269737] (6), [-0.06318, 98.269737] (6), [-0.02522, 98.269737] (6), 
length of domains: 10
Total time: 0.3884	 pickout: 0.0020	 decision: 0.0269	 get_bound: 0.3589	 add_domain: 0.0007
Current lb:-0.3701072931289673
42 neurons visited
0 diving domains visited
Cumulative time: 4.357705116271973

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 79], [1, 79], [4, 12], [0, 38], [4, 12], [0, 38], [4, 12], [0, 38], [4, 12], [4, 12]]
single_node_split: True
regular batch size: 2*10, diving batch size 1*0
best_l after optimization: 2.1906049251556396 with beta sum per layer: [7.169210910797119, 0.9524136185646057, 0.0, 0.0, 0.5837229490280151]
optimal alpha/beta time: 0.35001111030578613
This batch time : update_bounds func: 0.3583	 prepare: 0.0048	 bound: 0.3503	 transfer: 0.0009	 finalize: 0.0022
Accumulated time: update_bounds func: 2.6856	 prepare: 0.0218	 bound: 2.6511	 transfer: 0.0009	 finalize: 0.0072
batch bounding time:  0.3583805561065674
Current worst splitting domains [lb, ub] (depth):
[-0.28490, 98.269737] (7), [-0.27323, 98.269737] (7), [-0.24943, 98.269737] (7), [-0.22393, 98.269737] (7), [-0.20508, 98.269737] (7), [-0.18003, 98.269737] (7), [-0.16073, 98.269737] (7), [-0.15968, 98.269737] (7), [-0.14853, 98.269737] (7), [-0.12686, 98.269737] (7), [-0.09334, 98.269737] (7), [-0.09072, 98.269737] (7), [-0.07947, 98.269737] (7), [-0.03050, 98.269737] (7), [-0.01948, 98.269737] (7), [-0.01059, 98.269737] (7), 
length of domains: 16
Total time: 0.3894	 pickout: 0.0024	 decision: 0.0276	 get_bound: 0.3584	 add_domain: 0.0009
Current lb:-0.28490424156188965
62 neurons visited
0 diving domains visited
Cumulative time: 4.747356653213501

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 12], [3, 80], [4, 12], [1, 49], [3, 80], [1, 49], [3, 80], [3, 80], [1, 49], [0, 38]]
single_node_split: True
regular batch size: 2*16, diving batch size 1*0
best_l after optimization: 1.7910706996917725 with beta sum per layer: [8.975748062133789, 2.2458322048187256, 0.0, 2.1379127502441406, 1.7361505031585693]
optimal alpha/beta time: 0.3554112911224365
This batch time : update_bounds func: 0.3671	 prepare: 0.0066	 bound: 0.3558	 transfer: 0.0011	 finalize: 0.0035
Accumulated time: update_bounds func: 3.0527	 prepare: 0.0284	 bound: 3.0069	 transfer: 0.0011	 finalize: 0.0107
batch bounding time:  0.3672518730163574
Current worst splitting domains [lb, ub] (depth):
[-0.26905, 98.269737] (8), [-0.24473, 98.269737] (8), [-0.21029, 98.269737] (8), [-0.18020, 98.269737] (8), [-0.17834, 98.269737] (8), [-0.15745, 98.269737] (8), [-0.13919, 98.269737] (8), [-0.13457, 98.269737] (8), [-0.12404, 98.269737] (8), [-0.11655, 98.269737] (8), [-0.10691, 98.269737] (8), [-0.10645, 98.269737] (8), [-0.08563, 98.269737] (8), [-0.07559, 98.269737] (8), [-0.04909, 98.269737] (8), [-0.04896, 98.269737] (8), [-0.04824, 98.269737] (8), [-0.04711, 98.269737] (8), [-0.04182, 98.269737] (8), [-0.02308, 98.269737] (8), 
length of domains: 22
Total time: 0.3997	 pickout: 0.0034	 decision: 0.0277	 get_bound: 0.3673	 add_domain: 0.0013
Current lb:-0.26905322074890137
94 neurons visited
0 diving domains visited
Cumulative time: 5.14747428894043

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 99], [0, 99], [0, 99], [0, 99], [4, 12], [1, 49], [0, 99], [1, 49], [1, 49], [0, 38]]
single_node_split: True
regular batch size: 2*22, diving batch size 1*0
best_l after optimization: -0.24502408504486084 with beta sum per layer: [8.412195205688477, 3.5107216835021973, 0.0, 3.020076274871826, 3.6271297931671143]
optimal alpha/beta time: 0.3551595211029053
This batch time : update_bounds func: 0.3696	 prepare: 0.0081	 bound: 0.3555	 transfer: 0.0011	 finalize: 0.0047
Accumulated time: update_bounds func: 3.4223	 prepare: 0.0365	 bound: 3.3624	 transfer: 0.0011	 finalize: 0.0154
batch bounding time:  0.3697073459625244
Current worst splitting domains [lb, ub] (depth):
[-0.20907, 98.269737] (9), [-0.19169, 98.269737] (9), [-0.15636, 98.269737] (9), [-0.14001, 98.269737] (9), [-0.12064, 98.269737] (9), [-0.09816, 98.269737] (9), [-0.09535, 98.269737] (9), [-0.07779, 98.269737] (9), [-0.06772, 98.269737] (9), [-0.06174, 98.269737] (9), [-0.05824, 98.269737] (9), [-0.05517, 98.269737] (9), [-0.04307, 98.269737] (9), [-0.03087, 98.269737] (9), [-0.01766, 98.269737] (9), [-0.01538, 98.269737] (9), [-0.01366, 98.269737] (9), [-0.01005, 98.269737] (9), [-0.00402, 98.269737] (9), 
length of domains: 19
Total time: 0.4041	 pickout: 0.0044	 decision: 0.0287	 get_bound: 0.3698	 add_domain: 0.0012
Current lb:-0.20907151699066162
138 neurons visited
0 diving domains visited
Cumulative time: 5.552141189575195

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 49], [3, 80], [3, 80], [0, 99], [1, 49], [4, 12], [4, 91], [1, 49], [0, 99], [3, 80]]
single_node_split: True
regular batch size: 2*19, diving batch size 1*0
best_l after optimization: -0.42608654499053955 with beta sum per layer: [4.669426441192627, 2.9555749893188477, 0.0, 2.7309460639953613, 4.02503776550293]
optimal alpha/beta time: 0.35807085037231445
This batch time : update_bounds func: 0.3707	 prepare: 0.0074	 bound: 0.3584	 transfer: 0.0009	 finalize: 0.0039
Accumulated time: update_bounds func: 3.7930	 prepare: 0.0440	 bound: 3.7208	 transfer: 0.0009	 finalize: 0.0193
batch bounding time:  0.37090563774108887
Current worst splitting domains [lb, ub] (depth):
[-0.16976, 98.269737] (10), [-0.14890, 98.269737] (10), [-0.13541, 98.269737] (10), [-0.09434, 98.269737] (10), [-0.06276, 98.269737] (10), [-0.06144, 98.269737] (10), [-0.05663, 98.269737] (10), [-0.04385, 98.269737] (10), [-0.03086, 98.269737] (10), [-0.02228, 98.269737] (10), [-0.02182, 98.269737] (10), [-0.01348, 98.269737] (10), [-0.01302, 98.269737] (10), [-0.00934, 98.269737] (10), [-0.00118, 98.269737] (10), 
length of domains: 15
Total time: 0.4041	 pickout: 0.0039	 decision: 0.0282	 get_bound: 0.3710	 add_domain: 0.0010
Current lb:-0.16976451873779297
176 neurons visited
0 diving domains visited
Cumulative time: 5.956809759140015

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 49], [0, 38], [1, 49], [3, 80], [0, 99], [3, 80], [0, 38], [0, 38], [1, 49], [3, 80]]
single_node_split: True
regular batch size: 2*15, diving batch size 1*0
best_l after optimization: -0.9448748826980591 with beta sum per layer: [3.6790146827697754, 2.206817388534546, 0.0, 2.5451183319091797, 2.607625961303711]
optimal alpha/beta time: 0.3553028106689453
This batch time : update_bounds func: 0.3660	 prepare: 0.0065	 bound: 0.3556	 transfer: 0.0008	 finalize: 0.0030
Accumulated time: update_bounds func: 4.1590	 prepare: 0.0505	 bound: 4.0764	 transfer: 0.0008	 finalize: 0.0223
batch bounding time:  0.3661379814147949
Current worst splitting domains [lb, ub] (depth):
[-0.11006, 98.269737] (11), [-0.07550, 98.269737] (11), [-0.07262, 98.269737] (11), [-0.06205, 98.269737] (11), [-0.03324, 98.269737] (11), [-0.01515, 98.269737] (11), [-0.01050, 98.269737] (11), [-0.00969, 98.269737] (11), 
length of domains: 8
Total time: 0.3980	 pickout: 0.0033	 decision: 0.0279	 get_bound: 0.3662	 add_domain: 0.0006
Current lb:-0.11006391048431396
206 neurons visited
0 diving domains visited
Cumulative time: 6.355437517166138

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 46], [4, 46], [4, 46], [4, 46], [4, 46], [2, 30], [4, 91], [4, 46]]
single_node_split: True
regular batch size: 2*8, diving batch size 1*0
best_l after optimization: -0.3999220132827759 with beta sum per layer: [1.4233286380767822, 1.1564677953720093, 0.0, 0.0, 1.3661000728607178]
optimal alpha/beta time: 0.3604722023010254
This batch time : update_bounds func: 0.3678	 prepare: 0.0044	 bound: 0.3608	 transfer: 0.0008	 finalize: 0.0017
Accumulated time: update_bounds func: 4.5268	 prepare: 0.0549	 bound: 4.4372	 transfer: 0.0008	 finalize: 0.0240
batch bounding time:  0.36791491508483887
Current worst splitting domains [lb, ub] (depth):
[-0.07659, 98.269737] (12), [-0.04364, 98.269737] (12), [-0.03652, 98.269737] (12), [-0.03019, 98.269737] (12), [-0.00104, 98.269737] (12), 
length of domains: 5
Total time: 0.3975	 pickout: 0.0022	 decision: 0.0269	 get_bound: 0.3679	 add_domain: 0.0004
Current lb:-0.07659029960632324
222 neurons visited
0 diving domains visited
Cumulative time: 6.753216981887817

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 30], [2, 30], [2, 30], [2, 30], [2, 30]]
single_node_split: True
regular batch size: 2*5, diving batch size 1*0
best_l after optimization: -0.6275507211685181 with beta sum per layer: [1.0893499851226807, 0.305860698223114, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3571455478668213
This batch time : update_bounds func: 0.3630	 prepare: 0.0035	 bound: 0.3575	 transfer: 0.0007	 finalize: 0.0012
Accumulated time: update_bounds func: 4.8898	 prepare: 0.0584	 bound: 4.7947	 transfer: 0.0007	 finalize: 0.0252
batch bounding time:  0.3630962371826172
Current worst splitting domains [lb, ub] (depth):
[-0.05371, 98.269737] (13), [-0.02211, 98.269737] (13), [-0.01334, 98.269737] (13), [-0.00894, 98.269737] (13), 
length of domains: 4
Total time: 0.3917	 pickout: 0.0017	 decision: 0.0265	 get_bound: 0.3631	 add_domain: 0.0004
Current lb:-0.05370759963989258
232 neurons visited
0 diving domains visited
Cumulative time: 7.145148992538452

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 54], [0, 54], [4, 78], [0, 54]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: -0.4642772674560547 with beta sum per layer: [0.6635012626647949, 0.2880270481109619, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3565185070037842
This batch time : update_bounds func: 0.3619	 prepare: 0.0034	 bound: 0.3568	 transfer: 0.0007	 finalize: 0.0009
Accumulated time: update_bounds func: 5.2517	 prepare: 0.0618	 bound: 5.1515	 transfer: 0.0007	 finalize: 0.0261
batch bounding time:  0.3620486259460449
Current worst splitting domains [lb, ub] (depth):
[-0.00860, 98.269737] (14), [-0.00318, 98.269737] (14), 
length of domains: 2
Total time: 0.3904	 pickout: 0.0015	 decision: 0.0266	 get_bound: 0.3621	 add_domain: 0.0002
Current lb:-0.008601069450378418
240 neurons visited
0 diving domains visited
Cumulative time: 7.53574800491333

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 78], [4, 31]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -0.19815480709075928 with beta sum per layer: [0.0, 0.29826048016548157, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.012967348098754883
This batch time : update_bounds func: 0.0173	 prepare: 0.0027	 bound: 0.0133	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 5.2690	 prepare: 0.0645	 bound: 5.1648	 transfer: 0.0007	 finalize: 0.0266
batch bounding time:  0.01730036735534668
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0469	 pickout: 0.0011	 decision: 0.0284	 get_bound: 0.0173	 add_domain: 0.0000
No domains left, verification finished!
Cumulative time: 7.582783222198486

Image 4 pidx 9 verify end, final lower bound 999, upper bound 98.26973724365234, time: 7.643046617507935
4 999
##### [0:4] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 1.4960684776306152
Image 4 pidx 7 verify end, final lower bound 1.4960684776306152, upper bound inf, time: 0.0003941059112548828
4 1.4960684776306152
##### [0:4] Tested against 5 ######
Initial alpha-CROWN verified for label 5 with bound 2.006772518157959
Image 4 pidx 5 verify end, final lower bound 2.006772518157959, upper bound inf, time: 0.00035643577575683594
4 2.006772518157959
##### [0:4] Tested against 8 ######
Initial alpha-CROWN verified for label 8 with bound 1.3863916397094727
Image 4 pidx 8 verify end, final lower bound 1.3863916397094727, upper bound inf, time: 0.0003554821014404297
4 1.3863916397094727
##### [0:4] Tested against 2 ######
Initial alpha-CROWN verified for label 2 with bound 3.2158734798431396
Image 4 pidx 2 verify end, final lower bound 3.2158734798431396, upper bound inf, time: 0.0003616809844970703
4 3.2158734798431396
##### [0:4] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 3.172451972961426
Image 4 pidx 1 verify end, final lower bound 3.172451972961426, upper bound inf, time: 0.0003533363342285156
4 3.172451972961426
##### [0:4] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 3.3868002891540527
Image 4 pidx 0 verify end, final lower bound 3.3868002891540527, upper bound inf, time: 0.00033855438232421875
4 3.3868002891540527
##### [0:4] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 3.6865458488464355
Image 4 pidx 3 verify end, final lower bound 3.6865458488464355, upper bound inf, time: 0.00034356117248535156
4 3.6865458488464355
##### [0:4] Tested against 6 ######
Initial alpha-CROWN verified for label 6 with bound 4.109626770019531
Image 4 pidx 6 verify end, final lower bound 4.109626770019531, upper bound inf, time: 0.00034618377685546875
4 4.109626770019531
##### [0:4] Tested against 4 ######
correct label, skip!
[[  4.           0.           0.           7.72671437   0.
   -1.                  inf          inf]
 [  4.           0.           0.           0.65224528   0.
   -3.                  inf          inf]
 [  4.           0.           0.         250.8304925    0.
   -2.                  inf          inf]
 [  4.         999.         244.           7.64304662   0.
    9.          98.26973724   1.42886996]
 [  4.           1.49606848   0.           0.00039411   0.
    7.                  inf   5.03886843]
 [  4.           2.00677252   0.           0.00035644   0.
    5.                  inf   5.23252916]
 [  4.           1.38639164   0.           0.00035548   0.
    8.                  inf   5.53445959]
 [  4.           3.21587348   0.           0.00036168   0.
    2.                  inf   6.23643541]
 [  4.           3.17245197   0.           0.00035334   0.
    1.                  inf   6.61685562]
 [  4.           3.38680029   0.           0.00033855   0.
    0.                  inf   6.74488068]
 [  4.           3.68654585   0.           0.00034356   0.
    3.                  inf   7.4307003 ]
 [  4.           4.10962677   0.           0.00034618   0.
    6.                  inf   7.7684474 ]
 [  4.           0.           0.           0.           0.
    4.                  inf          inf]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [cnt:1] (excluding attack success): 266.20310282707214
