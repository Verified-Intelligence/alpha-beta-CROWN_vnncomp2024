Experiments at Mon Nov  1 21:36:05 2021 on huan-Super-Server
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_6_100]_start=20_end=21_iter=20_b=1024_int-beta=False_timeout=300_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  9  correct label  9 logits tensor([-1.3886, -0.7100, -2.2255, -0.0764,  1.1890, -0.3403, -4.0691,  2.6444,
        -0.5482,  6.5574], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-1.3886, -0.7100, -2.2255, -0.0764,  1.1890, -0.3403, -4.0691,  2.6444,
         -0.5482,  6.5574]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-29.2376, -28.0748, -31.4882, -28.3599, -20.1338, -27.8897, -28.6254,
         -28.3173, -26.2863]], device='cuda:0') None
best_l after optimization: 118.87956237792969 with beta sum per layer: []
optimal alpha/beta time: 5.966071128845215
initial alpha-CROWN bounds: tensor([[-13.5007, -13.5761, -15.3915, -14.1209,  -9.6594, -13.8574, -12.5532,
         -13.0459, -13.1746]], device='cuda:0', grad_fn=<AsStridedBackward>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 235.02644844055177]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_14', 'lay4_15', 'lay4_16', 'lay4_18', 'lay4_54', 'lay4_80', 'lay4_60', 'lay4_79', 'lay4_26', 'lay4_42', 'lay4_59', 'lay4_9', 'lay4_66', 'lay4_63', 'lay4_50', 'lay4_49', 'lay4_68', 'lay4_30', 'lay4_52', 'lay4_64', 'lay4_62', 'lay4_7', 'lay4_22', 'lay4_69', 'lay4_24', 'lay4_36', 'lay4_55', 'lay4_35', 'lay4_17', 'lay4_93', 'lay4_5', 'lay4_75', 'lay4_53', 'lay4_95', 'lay4_34', 'lay4_94', 'lay4_48', 'lay4_86', 'lay4_33', 'lay4_2', 'lay4_29', 'lay4_25', 'lay4_70', 'lay4_56', 'lay4_71', 'lay4_81', 'lay4_0', 'lay4_51', 'lay4_28', 'lay4_98', 'lay4_12', 'lay4_57', 'lay4_43', 'lay4_83'] filter: 1.0
/home/shiqi/CROWN-GENERAL/complete_verifier/utils.py:412: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_9, [-1.0645846128463745,0.10176452994346619]=>[-1.0645846128463745,-1e-05] (-1,-1; 15,-1), time: 0.2009s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_59, [-1.5643541812896729,0.1303337812423706]=>[-1.5643541812896729,-1e-05] (-1,-1; 15,-1), time: 0.2035s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_50, [-1.6092109680175781,0.112131267786026]=>[-1.6092109680175781,-1e-05] (-1,-1; 15,-1), time: 0.2332s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_18, [-1.2776954174041748,0.15768924355506897]=>[-1.2776954174041748,-1e-05] (-1,-1; 15,-1), time: 0.3052s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_66, [-1.3235784769058228,0.10866165161132812]=>[-1.3235784769058228,-1e-05] (-1,-1; 15,-1), time: 0.3136s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_62, [-1.2734403610229492,0.06848806142807007]=>[-1.2734403610229492,-1e-05] (-1,-1; 15,-1), time: 0.2143s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_64, [-1.0472948551177979,0.14740058779716492]=>[-1.0472948551177979,-1e-05] (-1,-1; 15,-1), time: 0.3076s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_22, [-1.3863441944122314,0.10048121213912964]=>[-1.3863441944122314,-1e-05] (-1,-1; 15,-1), time: 0.2472s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_16, [-0.8452985286712646,0.472209632396698]=>[-0.5759379595551835,0.2681918941846189] (2,-1; 2,-1), time: 1.1805s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_26, [-1.1031877994537354,0.7722219824790955]=>[-0.7671044904158749,0.5303496319191067] (2,-1; 2,-1), time: 1.3666s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_30, [-0.944024384021759,0.44566383957862854]=>[-0.7590185186888458,0.13755761588366944] (2,-1; 2,-1), time: 1.4290s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_52, [-0.7920870780944824,0.26067182421684265]=>[-0.6022855142957317,0.08050389530339819] (2,-1; 2,-1), time: 1.5523s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_55, [-1.544124722480774,0.034323662519454956]=>[-1.544124722480774,-1e-05] (-1,-1; 15,-1), time: 0.1816s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_54, [-0.7970567345619202,0.5278089046478271]=>[-0.48214211421652764,0.3365061154691242] (2,-1; 2,-1), time: 1.8989s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_14, [-1.156355381011963,0.3744584918022156]=>[-0.9095327520011243,0.12423035719514669] (2,-1; 2,-1), time: 1.9121s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_68, [-1.069022297859192,0.4109511077404022]=>[-0.7971314363680114,0.17539978925350483] (2,-1; 2,-1), time: 1.8176s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_80, [-0.6018922328948975,0.5441041588783264]=>[-0.2875397897102895,0.4483978085802509] (2,-1; 2,-1), time: 2.3693s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_15, [-0.9920099973678589,1.2529966831207275]=>[-0.5939818502902064,0.8367887474914474] (2,-1; 2,-1), time: 2.3739s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_49, [-0.6870503425598145,0.7857208847999573]=>[-0.3617385567439724,0.5129332013440807] (2,-1; 2,-1), time: 2.4267s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_53, [-0.07320669293403625,1.4670588970184326]=>[1e-05,1.4670588970184326] (15,-1; -1,-1), time: 0.2289s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_63, [-0.6167106032371521,0.7303062677383423]=>[-0.33796647030528437,0.4896448743153793] (2,-1; 2,-1), time: 2.6108s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_69, [-0.7140456438064575,0.8076013922691345]=>[-0.5396682013721896,0.4543767673330114] (2,-1; 2,-1), time: 1.7889s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_34, [-0.1725013256072998,1.3360915184020996]=>[1e-05,1.3360915184020996] (15,-1; -1,-1), time: 0.2760s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_48, [-0.141361266374588,1.6460790634155273]=>[1e-05,1.6460790634155273] (15,-1; -1,-1), time: 0.2335s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_79, [-1.0849652290344238,0.5434387922286987]=>[-0.7540883080356247,0.2571393766854468] (2,-1; 2,-1), time: 2.8496s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_42, [-1.013458490371704,0.2359848916530609]=>[-0.6743913496963082,0.0936289352287545] (2,-1; 2,-1), time: 2.9513s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_36, [-0.7696734070777893,1.0295742750167847]=>[-0.47044245528476475,0.7024082637160537] (2,-1; 2,-1), time: 1.6577s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_17, [-1.1613966226577759,0.4728769063949585]=>[-0.9120602778396308,0.20251680343924852] (2,-1; 2,-1), time: 1.2308s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_25, [-1.373347520828247,0.05430150032043457]=>[-1.373347520828247,-1e-05] (-1,-1; 15,-1), time: 0.2438s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_56, [-0.13027596473693848,1.096127986907959]=>[1e-05,1.096127986907959] (15,-1; -1,-1), time: 0.2084s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_60, [-0.9640235304832458,0.2146918922662735]=>[-0.6226180922077141,0.05341520683302286] (2,-1; 2,-1), time: 3.3657s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_5, [-0.5252713561058044,1.8416905403137207]=>[-0.05744120487635139,1.5291466281284927] (2,-1; 2,-1), time: 1.5128s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_75, [-0.38818860054016113,1.1661345958709717]=>[-0.1008023020631494,0.8929138681101626] (2,-1; 2,-1), time: 1.4532s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_0, [-1.3655149936676025,0.09408164024353027]=>[-1.3655149936676025,-1e-05] (-1,-1; 15,-1), time: 0.1788s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_28, [-0.0966956615447998,1.6636635065078735]=>[1e-05,1.6636635065078735] (15,-1; -1,-1), time: 0.1942s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_95, [-1.0849233865737915,0.7154901027679443]=>[-0.7785295430843334,0.36735704407803177] (2,-1; 2,-1), time: 1.3487s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_35, [-0.38219234347343445,1.494396448135376]=>[-0.061575071760976846,1.1883030336320477] (2,-1; 2,-1), time: 1.9640s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_24, [-0.7291580438613892,0.4432515799999237]=>[-0.5012731916196367,0.19385737516754148] (2,-1; 2,-1), time: 2.5975s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_12, [-0.022828951478004456,1.1324341297149658]=>[1e-05,1.1324341297149658] (15,-1; -1,-1), time: 0.2084s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_57, [-1.631080150604248,0.14694556593894958]=>[-1.631080150604248,-1e-05] (-1,-1; 15,-1), time: 0.1726s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_2, [-0.7149951457977295,0.7050505876541138]=>[-0.43162466234086544,0.5137133158236867] (2,-1; 2,-1), time: 1.0766s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_7, [-0.3380986452102661,0.5067189335823059]=>[-0.07589639273305918,0.3950986064866609] (2,-1; 2,-1), time: 3.5471s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_33, [-0.406345933675766,1.4576785564422607]=>[1e-05,1.4576785564422607] (15,-1; -1,-1), time: 1.6255s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_86, [-0.37698787450790405,0.6419070959091187]=>[-0.19970137978556265,0.4051487252699546] (2,-1; 2,-1), time: 1.7935s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_83, [-0.9242799282073975,0.9834696650505066]=>[-0.7193715682956843,0.6085230109559492] (2,-1; 2,-1), time: 0.7753s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_98, [-1.0352287292480469,0.23868736624717712]=>[-1.0352287292480469,-1e-05] (-1,-1; 15,-1), time: 1.0750s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_94, [-0.48822441697120667,0.8564286231994629]=>[-0.18410129865383815,0.6418014903511724] (2,-1; 2,-1), time: 2.0243s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_29, [-0.9653702974319458,0.5792796015739441]=>[-0.594416344233024,0.4037556525409469] (2,-1; 2,-1), time: 1.8068s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_93, [-0.9447112679481506,0.66164231300354]=>[-0.6658529669753213,0.2623339973615982] (2,-1; 2,-1), time: 2.9031s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_70, [-0.8920996189117432,0.5380619764328003]=>[-0.6442164103841312,0.25638839588968343] (2,-1; 2,-1), time: 2.1584s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_43, [-0.895167887210846,1.2331901788711548]=>[-0.544649323476818,0.8381092976334296] (2,-1; 2,-1), time: 1.6522s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_51, [-0.5063338279724121,0.8887364864349365]=>[-0.290555777711032,0.5853404151162355] (2,-1; 2,-1), time: 2.2102s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_71, [-0.7590310573577881,0.4315871000289917]=>[-0.4136357619798895,0.26078605329568133] (2,-1; 2,-1), time: 2.6876s, #vars: 1045, #constrs: 290, improved: True
Solving MIP for lay4_81, [-1.4761614799499512,0.8499495983123779]=>[-0.79659676793393,0.453235046622746] (2,-1; 2,-1), time: 2.7503s, #vars: 1045, #constrs: 290, improved: True
MIP improved 54 nodes out of 54 unstable nodes, lb improved 11.238849639892578, ub improved 10.413884162902832, time 6.3386
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_7', 'lay6_99', 'lay6_2', 'lay6_22', 'lay6_73', 'lay6_79', 'lay6_10', 'lay6_59', 'lay6_47', 'lay6_26', 'lay6_93', 'lay6_60', 'lay6_35', 'lay6_72', 'lay6_53', 'lay6_86', 'lay6_54', 'lay6_69', 'lay6_0', 'lay6_68', 'lay6_98', 'lay6_76', 'lay6_3', 'lay6_33', 'lay6_29', 'lay6_23', 'lay6_39', 'lay6_71', 'lay6_6', 'lay6_52', 'lay6_9', 'lay6_83', 'lay6_77', 'lay6_40', 'lay6_5', 'lay6_18', 'lay6_38', 'lay6_75', 'lay6_84', 'lay6_81', 'lay6_17', 'lay6_1', 'lay6_20', 'lay6_49', 'lay6_13', 'lay6_51', 'lay6_88', 'lay6_15', 'lay6_50', 'lay6_44', 'lay6_28', 'lay6_89', 'lay6_65', 'lay6_37', 'lay6_24', 'lay6_74', 'lay6_56', 'lay6_48', 'lay6_91', 'lay6_62', 'lay6_43', 'lay6_36', 'lay6_82', 'lay6_92', 'lay6_42', 'lay6_97', 'lay6_66', 'lay6_25', 'lay6_27', 'lay6_32', 'lay6_11', 'lay6_16', 'lay6_78', 'lay6_95', 'lay6_46', 'lay6_58', 'lay6_85', 'lay6_41', 'lay6_94', 'lay6_61', 'lay6_70', 'lay6_31', 'lay6_67', 'lay6_4', 'lay6_45', 'lay6_12', 'lay6_63', 'lay6_21', 'lay6_57', 'lay6_64', 'lay6_96'] filter: 1.0
Solving MIP for lay6_72, [-1.5138529539108276,0.12492737174034119]=>[-1.5138529539108276,-1e-05] (-1,-1; 15,-1), time: 0.1824s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_35, [-1.288095474243164,0.27534300088882446]=>[-1.288095474243164,-1e-05] (-1,-1; 15,-1), time: 0.3178s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_73, [-1.6734539270401,0.24275735020637512]=>[-1.6734539270401,-1e-05] (-1,-1; 15,-1), time: 0.4189s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_0, [-1.7905638217926025,0.16124171018600464]=>[-1.7905638217926025,-1e-05] (-1,-1; 15,-1), time: 0.1664s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_54, [-1.7492351531982422,0.3863850235939026]=>[-1.7492351531982422,-1e-05] (-1,-1; 15,-1), time: 0.4800s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_68, [-1.1629812717437744,0.1867990493774414]=>[-1.1629812717437744,-1e-05] (-1,-1; 15,-1), time: 0.1670s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_86, [-1.1473698616027832,0.235149085521698]=>[-1.1473698616027832,-1e-05] (-1,-1; 15,-1), time: 1.5703s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_3, [-1.6354564428329468,0.1281864047050476]=>[-1.6354564428329468,-1e-05] (-1,-1; 15,-1), time: 0.1605s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_33, [-1.704400658607483,0.1636766791343689]=>[-1.704400658607483,-1e-05] (-1,-1; 15,-1), time: 0.1711s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_53, [-0.8357539176940918,1.7766282558441162]=>[-0.18172799861039388,1.1096948702664722] (2,-1; 2,-1), time: 6.9781s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_23, [-1.4772231578826904,0.0686919093132019]=>[-1.4772231578826904,-1e-05] (-1,-1; 15,-1), time: 0.1343s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_98, [-0.9132826328277588,1.162217378616333]=>[-0.35999502042574083,0.5379674787709118] (2,-1; 2,-1), time: 6.8057s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_71, [-1.4400713443756104,0.3082209825515747]=>[-1.4400713443756104,-1e-05] (-1,-1; 15,-1), time: 0.9818s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_10, [-0.8037760257720947,0.8394696116447449]=>[-0.3057981829307854,0.28106634482055964] (2,-1; 2,-1), time: 9.9135s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_76, [-1.0800573825836182,0.8717957735061646]=>[-0.5398901412644133,0.2959699617667428] (2,-1; 2,-1), time: 9.5420s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_39, [-1.3121991157531738,0.5819936990737915]=>[-1.3121991157531738,-1e-05] (-1,-1; 15,-1), time: 3.2611s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_6, [-1.0091370344161987,0.3395520746707916]=>[-1.0091370344161987,-1e-05] (-1,-1; 15,-1), time: 2.6286s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_77, [-1.6786079406738281,0.057878851890563965]=>[-1.6786079406738281,-1e-05] (-1,-1; 15,-1), time: 0.1302s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_22, [-1.154163122177124,0.4683016538619995]=>[-0.5460348167748087,0.10894154756265582] (2,-1; 2,-1), time: 13.5599s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_93, [-1.3070499897003174,0.9786750078201294]=>[-0.6195627759136861,0.2250403971105186] (2,-1; 2,-1), time: 16.4568s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_26, [-0.768671452999115,0.7882728576660156]=>[-0.19298497775559179,0.42771123882737555] (9,-1; 2,-1), time: 17.1704s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_38, [-1.2644288539886475,0.1503933072090149]=>[-1.2644288539886475,-1e-05] (-1,-1; 15,-1), time: 0.1280s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_79, [-1.654284119606018,0.6354976892471313]=>[-0.9196874240696837,0.05929655579928974] (9,-1; 2,-1), time: 17.3555s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_84, [-1.4740335941314697,0.21644005179405212]=>[-1.4740335941314697,-1e-05] (-1,-1; 15,-1), time: 0.2975s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_9, [-1.2227492332458496,0.4026300609111786]=>[-0.6529648734303879,0.030292737826727385] (2,-1; 2,-1), time: 7.4846s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_69, [-1.4764827489852905,0.4540993571281433]=>[-0.8220874660881897,0.06175272551491988] (9,-1; 2,-1), time: 17.4731s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_2, [-1.5126694440841675,0.48561304807662964]=>[-0.7237427816897896,0.015712352457280154] (2,-1; 2,-1), time: 17.9909s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_52, [-1.2712628841400146,0.3955264389514923]=>[-0.656291497788534,0.0016916990760255613] (2,-1; 2,-1), time: 8.1940s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_1, [-1.3346264362335205,0.23331701755523682]=>[-1.3346264362335205,-1e-05] (-1,-1; 15,-1), time: 0.3393s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_60, [-1.0657116174697876,0.7877670526504517]=>[-0.3852684320336854,0.3861034873831066] (9,-1; 2,-1), time: 18.3027s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_49, [-1.293408751487732,0.34607189893722534]=>[-1.293408751487732,-1e-05] (-1,-1; 15,-1), time: 0.3249s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_88, [-1.684316635131836,0.12181663513183594]=>[-1.684316635131836,-1e-05] (-1,-1; 15,-1), time: 0.1323s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_15, [-1.3436484336853027,0.31053847074508667]=>[-1.3436484336853027,-1e-05] (-1,-1; 15,-1), time: 0.5778s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_99, [-0.811836838722229,0.8423513770103455]=>[-0.18678808796680008,0.3737416836709568] (9,-1; 2,-1), time: 19.1843s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_50, [-1.7945125102996826,0.4044487476348877]=>[-1.7945125102996826,-1e-05] (-1,-1; 15,-1), time: 0.3940s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_28, [-2.180086135864258,0.03343445062637329]=>[-2.180086135864258,-1e-05] (-1,-1; 15,-1), time: 0.1298s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_47, [-1.3165805339813232,0.4760769009590149]=>[-0.6260397974377647,0.04369121443640433] (9,-1; 2,-1), time: 20.0836s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_65, [-1.4237732887268066,0.1750374436378479]=>[-1.4237732887268066,-1e-05] (-1,-1; 15,-1), time: 0.1315s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_13, [-0.6146485805511475,2.1804020404815674]=>[1e-05,2.1804020404815674] (15,-1; -1,-1), time: 2.1349s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_24, [-1.1064660549163818,0.07104969024658203]=>[-1.1064660549163818,-1e-05] (-1,-1; 15,-1), time: 0.1281s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_74, [-1.40691077709198,0.19710299372673035]=>[-1.40691077709198,-1e-05] (-1,-1; 15,-1), time: 0.1269s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_20, [-1.3649725914001465,0.45484936237335205]=>[-1.3649725914001465,-1e-05] (-1,-1; 15,-1), time: 3.2031s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_48, [-1.4305256605148315,0.08901816606521606]=>[-1.4305256605148315,-1e-05] (-1,-1; 15,-1), time: 0.1302s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_37, [-0.46615996956825256,2.1201272010803223]=>[1e-05,2.1201272010803223] (15,-1; -1,-1), time: 1.8633s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_17, [-1.0964041948318481,0.7235122919082642]=>[-0.5695524469354217,0.24945840179821407] (2,-1; 2,-1), time: 4.4608s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_59, [-1.3292701244354248,0.715605616569519]=>[-0.6727458526886413,0.11563885728131125] (9,-1; 2,-1), time: 22.6418s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_29, [-0.880542516708374,0.5005208253860474]=>[-0.45857443487334754,0.05207542393456918] (2,-1; 9,-1), time: 21.5288s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_75, [-0.6586583852767944,1.980340838432312]=>[-0.15863826649528548,1.1533673706443706] (2,-1; 2,-1), time: 6.9140s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_83, [-1.117574691772461,0.42391228675842285]=>[-1.117574691772461,-1e-05] (-1,-1; 15,-1), time: 14.1257s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_42, [-1.6194047927856445,0.06083410978317261]=>[-1.6194047927856445,-1e-05] (-1,-1; 15,-1), time: 0.1284s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_97, [-0.1812780499458313,1.392589807510376]=>[1e-05,1.392589807510376] (15,-1; -1,-1), time: 0.1300s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_92, [-0.35170263051986694,1.2121703624725342]=>[1e-05,1.2121703624725342] (15,-1; -1,-1), time: 0.6289s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_25, [-0.3853088617324829,2.5814502239227295]=>[1e-05,2.5814502239227295] (15,-1; -1,-1), time: 0.3043s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_36, [-0.8483943939208984,0.44555938243865967]=>[-0.8483943939208984,-1e-05] (-1,-1; 15,-1), time: 3.1286s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_32, [-1.6758456230163574,0.16673603653907776]=>[-1.6758456230163574,-1e-05] (-1,-1; 15,-1), time: 0.1296s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_11, [-0.17665183544158936,2.1125032901763916]=>[1e-05,2.1125032901763916] (15,-1; -1,-1), time: 0.1312s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_81, [-0.7692165374755859,1.3432594537734985]=>[-0.2879171519477628,0.6024359617712782] (2,-1; 2,-1), time: 8.6265s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_62, [-1.0258668661117554,0.4123661518096924]=>[-1.0258668661117554,-1e-05] (-1,-1; 15,-1), time: 4.2853s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_95, [-1.1798899173736572,0.08365383744239807]=>[-1.1798899173736572,-1e-05] (-1,-1; 15,-1), time: 0.1315s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_78, [-0.22530293464660645,1.1229616403579712]=>[1e-05,1.1229616403579712] (15,-1; -1,-1), time: 0.3867s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_58, [-0.3749374449253082,2.124419689178467]=>[1e-05,2.124419689178467] (15,-1; -1,-1), time: 0.2597s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_7, [-1.1018084287643433,0.7369137406349182]=>[-0.3329772775166516,0.26985609883304573] (9,-1; 2,-1), time: 26.9959s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_40, [-0.8822040557861328,0.470447301864624]=>[-0.3825234155244039,0.11265648907812241] (2,-1; 2,-1), time: 15.8479s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_18, [-0.8034161329269409,0.8046583533287048]=>[-0.25745045379320436,0.3382774643421572] (2,-1; 2,-1), time: 10.6546s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_41, [-1.2765780687332153,0.12718018889427185]=>[-1.2765780687332153,-1e-05] (-1,-1; 15,-1), time: 0.1277s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_94, [-1.8441381454467773,0.2625105381011963]=>[-1.8441381454467773,-1e-05] (-1,-1; 15,-1), time: 0.1284s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_85, [-1.397426724433899,0.18545854091644287]=>[-1.397426724433899,-1e-05] (-1,-1; 15,-1), time: 0.2686s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_31, [-1.4134608507156372,0.049461543560028076]=>[-1.4134608507156372,-1e-05] (-1,-1; 15,-1), time: 0.1281s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_67, [-0.02914893627166748,1.617288589477539]=>[1e-05,1.617288589477539] (15,-1; -1,-1), time: 0.1329s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_4, [-0.027138710021972656,1.920274257659912]=>[1e-05,1.920274257659912] (15,-1; -1,-1), time: 0.1288s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_12, [-0.009997785091400146,2.3653743267059326]=>[1e-05,2.3653743267059326] (15,-1; -1,-1), time: 0.1263s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_16, [-0.4279094934463501,1.1826670169830322]=>[1e-05,1.1826670169830322] (15,-1; -1,-1), time: 2.3838s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_21, [-1.088670253753662,0.2446793019771576]=>[-1.088670253753662,-1e-05] (-1,-1; 15,-1), time: 0.2711s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_46, [-1.2733395099639893,0.4866001605987549]=>[-1.2733395099639893,-1e-05] (-1,-1; 15,-1), time: 2.8814s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_56, [-0.7529221773147583,1.183800220489502]=>[-0.2129926298214285,0.5618924153534337] (2,-1; 2,-1), time: 9.5987s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_43, [-0.8554026484489441,1.1327818632125854]=>[-0.30601040715496186,0.5555672427345264] (2,-1; 2,-1), time: 9.2591s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_51, [-1.1665700674057007,0.8571693897247314]=>[-0.6268786969465544,0.2800298270724974] (2,-1; 2,-1), time: 13.2183s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_89, [-0.7691608667373657,1.1302217245101929]=>[-0.24834429315338777,0.490652331461368] (2,-1; 2,-1), time: 13.1360s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_70, [-0.73755943775177,1.3216333389282227]=>[-0.2011337428774318,0.6775279635408721] (2,-1; 2,-1), time: 6.9281s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_61, [-1.0335428714752197,0.8469216823577881]=>[-0.4894682244967814,0.2702646313970495] (2,-1; 2,-1), time: 7.6564s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_64, [-0.9099006056785583,0.9773977398872375]=>[-0.40384934931178346,0.4329335289439604] (2,-1; 2,-1), time: 5.9829s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_5, [-0.7987401485443115,0.4414091110229492]=>[-0.4044834676323974,0.02450924294025759] (2,-1; 9,-1), time: 21.9863s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_96, [-0.6773463487625122,0.5691611766815186]=>[-0.27789883899717893,0.2495481128217847] (2,-1; 2,-1), time: 5.9466s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_45, [-1.063207983970642,0.6319589614868164]=>[-0.4529111417761771,0.21906788024649101] (2,-1; 2,-1), time: 9.9216s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_91, [-0.7145178914070129,1.0571088790893555]=>[-0.0605039352647484,0.6785021140128547] (9,-1; 2,-1), time: 17.3363s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_44, [-0.6542540192604065,1.1860651969909668]=>[-0.13840264235039423,0.5218490035386844] (9,-1; 2,-1), time: 19.5690s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_63, [-1.5066616535186768,0.8026231527328491]=>[-0.8115939666823937,0.09376596455953976] (2,-1; 2,-1), time: 11.7090s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_66, [-0.7083581686019897,0.8312100172042847]=>[-0.33431270879966424,0.36602442375764566] (9,-1; 2,-1), time: 16.9513s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_82, [-0.7719340324401855,1.0966627597808838]=>[-0.1677406181281473,0.4929392138353397] (2,-1; 2,-1), time: 18.6763s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_27, [-1.341468095779419,0.7810289263725281]=>[-0.6917492082194634,0.30073720189991415] (9,-1; 2,-1), time: 17.0374s, #vars: 1213, #constrs: 492, improved: True
Solving MIP for lay6_57, [-0.7805159687995911,1.1328314542770386]=>[-0.307695979618041,0.4418598111114249] (2,-1; 9,-1), time: 23.3814s, #vars: 1213, #constrs: 492, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
best_l after optimization: 43.47239685058594 with beta sum per layer: []
optimal alpha/beta time: 6.684720993041992
alpha-CROWN with intermediate bounds by MIP: tensor([[-5.1051, -4.5911, -4.9923, -5.8003, -2.8013, -5.5189, -2.8275, -7.0197,
         -4.8162]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 91 nodes out of 91 unstable nodes, lb improved 26.25301170349121, ub improved 30.123720169067383, time 52.4177
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_12', 'lay8_92', 'lay8_76', 'lay8_60', 'lay8_85', 'lay8_21', 'lay8_0', 'lay8_6', 'lay8_56', 'lay8_47', 'lay8_5', 'lay8_66', 'lay8_39', 'lay8_31', 'lay8_94', 'lay8_62', 'lay8_81', 'lay8_7', 'lay8_24', 'lay8_45', 'lay8_91', 'lay8_15', 'lay8_61', 'lay8_58', 'lay8_64', 'lay8_20', 'lay8_9', 'lay8_17', 'lay8_18', 'lay8_78', 'lay8_40', 'lay8_87', 'lay8_82', 'lay8_53', 'lay8_65', 'lay8_36', 'lay8_49', 'lay8_72', 'lay8_93', 'lay8_77', 'lay8_90', 'lay8_41', 'lay8_54', 'lay8_71', 'lay8_8', 'lay8_46', 'lay8_30', 'lay8_33', 'lay8_75', 'lay8_48', 'lay8_74', 'lay8_84', 'lay8_37', 'lay8_52', 'lay8_3', 'lay8_32', 'lay8_23', 'lay8_69', 'lay8_35', 'lay8_79', 'lay8_68', 'lay8_25', 'lay8_29', 'lay8_34', 'lay8_83', 'lay8_63', 'lay8_38', 'lay8_98', 'lay8_70', 'lay8_88', 'lay8_16', 'lay8_59', 'lay8_27', 'lay8_97', 'lay8_51', 'lay8_96', 'lay8_11', 'lay8_13', 'lay8_95', 'lay8_1', 'lay8_28', 'lay8_42', 'lay8_50', 'lay8_22', 'lay8_43', 'lay8_80', 'lay8_99', 'lay8_67', 'lay8_89', 'lay8_2', 'lay8_57', 'lay8_4', 'lay8_26', 'lay8_19', 'lay8_86', 'lay8_73', 'lay8_14', 'lay8_55', 'lay8_10'] filter: 1.0
Solving MIP for lay8_92, [-2.0244476795196533,0.5754640102386475]=>[-2.0244476795196533,-1e-05] (-1,-1; 15,-1), time: 0.2020s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_94, [-1.8669028282165527,0.638455867767334]=>[-1.8669028282165527,-1e-05] (-1,-1; 15,-1), time: 0.2169s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_66, [-1.9906291961669922,0.7204704284667969]=>[-1.9906291961669922,-1e-05] (-1,-1; 15,-1), time: 0.2216s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_31, [-1.8136028051376343,0.7657692432403564]=>[-1.8136028051376343,-1e-05] (-1,-1; 15,-1), time: 0.2228s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_7, [-2.367074966430664,0.48755908012390137]=>[-2.367074966430664,-1e-05] (-1,-1; 15,-1), time: 0.1955s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_60, [-1.8981602191925049,0.7767115831375122]=>[-1.8981602191925049,-1e-05] (-1,-1; 15,-1), time: 0.4252s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_91, [-2.1162848472595215,0.7311994433403015]=>[-2.1162848472595215,-1e-05] (-1,-1; 15,-1), time: 0.1870s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_61, [-1.6967589855194092,0.5160291194915771]=>[-1.6967589855194092,-1e-05] (-1,-1; 15,-1), time: 0.1875s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_81, [-2.1709868907928467,1.1956236362457275]=>[-2.1709868907928467,-1e-05] (-1,-1; 15,-1), time: 0.5962s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_58, [-2.1749603748321533,0.734365701675415]=>[-2.1749603748321533,-1e-05] (-1,-1; 15,-1), time: 0.1812s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_15, [-1.600348711013794,0.8134394288063049]=>[-1.600348711013794,-1e-05] (-1,-1; 15,-1), time: 0.8280s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_5, [-1.51725172996521,0.8942631483078003]=>[-1.51725172996521,-1e-05] (-1,-1; 15,-1), time: 5.4690s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_85, [-1.6118199825286865,0.9491062760353088]=>[-1.6118199825286865,-1e-05] (-1,-1; 15,-1), time: 6.7032s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_18, [-2.1486926078796387,0.5312576293945312]=>[-2.1486926078796387,-1e-05] (-1,-1; 15,-1), time: 0.1573s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_64, [-1.5454201698303223,2.2951865196228027]=>[-0.551415623931157,1.194791604235684] (2,-1; 9,-1), time: 21.4618s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_40, [-1.4748833179473877,0.5534776449203491]=>[-1.4748833179473877,-1e-05] (-1,-1; 15,-1), time: 0.2953s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_45, [-1.245485782623291,1.6389057636260986]=>[-0.046527352270067525,0.8909552559468088] (9,-1; 2,-1), time: 23.8285s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_0, [-1.3154460191726685,1.03565514087677]=>[-0.4412282429725712,0.2405399300433706] (9,-1; 9,-1), time: 30.0045s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_76, [-1.28383469581604,1.4786005020141602]=>[-0.42911268577099543,0.2859132309609019] (9,-1; 9,-1), time: 30.0067s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_12, [-2.4474568367004395,1.463860273361206]=>[-1.2377909438458725,0.0009316500419710252] (9,-1; 9,-1), time: 30.0072s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_6, [-1.6567579507827759,1.0185647010803223]=>[-0.7261164441689227,0.030239533987003582] (9,-1; 9,-1), time: 30.0078s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_21, [-1.6799051761627197,1.2155475616455078]=>[-0.7216520970582208,0.2633980154481419] (9,-1; 9,-1), time: 30.0090s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_39, [-1.1880054473876953,1.0541658401489258]=>[-0.2519391988262359,0.27695114150019495] (9,-1; 9,-1), time: 30.0102s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_47, [-1.596112847328186,1.2636626958847046]=>[-0.672088550550709,0.1298403766027792] (9,-1; 9,-1), time: 30.0123s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_62, [-1.4377501010894775,1.4006716012954712]=>[-0.3692921693623073,0.39794450674396903] (9,-1; 9,-1), time: 30.0139s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_56, [-1.1696470975875854,1.2045139074325562]=>[-0.21297452472259992,0.3607227957487187] (9,-1; 9,-1), time: 30.0158s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_93, [-2.0451056957244873,0.3131934404373169]=>[-2.0451056957244873,-1e-05] (-1,-1; 15,-1), time: 0.1557s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_77, [-2.0913374423980713,0.4134711027145386]=>[-2.0913374423980713,-1e-05] (-1,-1; 15,-1), time: 0.1575s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_72, [-0.7317622900009155,3.849093198776245]=>[1e-05,3.849093198776245] (15,-1; -1,-1), time: 0.1615s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_24, [-1.3689987659454346,0.837116003036499]=>[-0.45093940304378305,0.09901067364159928] (9,-1; 9,-1), time: 30.0178s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_54, [-0.9035446643829346,2.505941152572632]=>[1e-05,2.505941152572632] (15,-1; -1,-1), time: 0.1586s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_71, [-1.70695161819458,0.6117389798164368]=>[-1.70695161819458,-1e-05] (-1,-1; 15,-1), time: 0.1605s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_53, [-1.5328224897384644,0.7214769124984741]=>[-1.5328224897384644,-1e-05] (-1,-1; 15,-1), time: 0.4151s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_8, [-1.9944791793823242,0.8345834016799927]=>[-1.9944791793823242,-1e-05] (-1,-1; 15,-1), time: 0.3102s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_30, [-0.6944261193275452,2.4050140380859375]=>[1e-05,2.4050140380859375] (15,-1; -1,-1), time: 0.1631s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_20, [-1.054434895515442,1.326688528060913]=>[-0.06297811585977801,0.6037083625244618] (9,-1; 2,-1), time: 29.5831s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_46, [-0.8145449161529541,1.6251771450042725]=>[1e-05,1.6251771450042725] (15,-1; -1,-1), time: 0.3246s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_48, [-0.5091099143028259,1.8846240043640137]=>[1e-05,1.8846240043640137] (15,-1; -1,-1), time: 0.1605s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_74, [-0.44215989112854004,3.1667113304138184]=>[1e-05,3.1667113304138184] (15,-1; -1,-1), time: 0.1622s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_3, [-0.7205073237419128,1.7737605571746826]=>[1e-05,1.7737605571746826] (15,-1; -1,-1), time: 0.2997s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_32, [-1.5903587341308594,0.5567935109138489]=>[-1.5903587341308594,-1e-05] (-1,-1; 15,-1), time: 0.1572s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_9, [-1.5436159372329712,0.7119829058647156]=>[-0.539225428386476,0.018687358943761175] (9,-1; 9,-1), time: 30.0061s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_23, [-0.5421135425567627,2.78774094581604]=>[1e-05,2.78774094581604] (15,-1; -1,-1), time: 0.1548s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_69, [-0.7908304929733276,1.5985848903656006]=>[1e-05,1.5985848903656006] (15,-1; -1,-1), time: 0.1623s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_79, [-0.8434650897979736,2.0459704399108887]=>[1e-05,2.0459704399108887] (15,-1; -1,-1), time: 0.1590s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_68, [-0.36030489206314087,2.295527696609497]=>[1e-05,2.295527696609497] (15,-1; -1,-1), time: 0.1619s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_33, [-1.5419385433197021,0.9401925802230835]=>[-1.5419385433197021,-1e-05] (-1,-1; 15,-1), time: 3.5636s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_17, [-1.094212532043457,1.401597023010254]=>[-0.37300779506558335,0.36597253377278416] (9,-1; 9,-1), time: 30.0100s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_34, [-0.6153309345245361,1.9514799118041992]=>[1e-05,1.9514799118041992] (15,-1; -1,-1), time: 0.1642s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_83, [-2.0069305896759033,0.38668328523635864]=>[-2.0069305896759033,-1e-05] (-1,-1; 15,-1), time: 0.1596s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_78, [-1.1364612579345703,1.579545021057129]=>[-0.11860297483960622,0.7367989984141291] (9,-1; 9,-1), time: 30.0074s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_52, [-1.165966272354126,1.688127040863037]=>[1e-05,1.688127040863037] (15,-1; -1,-1), time: 6.8942s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_29, [-0.8980295062065125,1.889215111732483]=>[1e-05,1.889215111732483] (15,-1; -1,-1), time: 4.8103s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_70, [-1.7759242057800293,0.7168648838996887]=>[-1.7759242057800293,-1e-05] (-1,-1; 15,-1), time: 0.4734s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_88, [-0.40986084938049316,2.734795093536377]=>[1e-05,2.734795093536377] (15,-1; -1,-1), time: 0.1626s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_16, [-1.8318157196044922,0.7116595506668091]=>[-1.8318157196044922,-1e-05] (-1,-1; 15,-1), time: 0.1617s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_63, [-1.388084888458252,3.0928902626037598]=>[1e-05,3.0928902626037598] (15,-1; -1,-1), time: 3.7721s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_59, [-0.9914201498031616,2.0339393615722656]=>[1e-05,2.0339393615722656] (15,-1; -1,-1), time: 4.1313s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_87, [-1.5585628747940063,1.5589698553085327]=>[-0.5345175437008299,0.34949182979747534] (2,-1; 9,-1), time: 28.2179s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_82, [-1.5888149738311768,1.1698287725448608]=>[-0.6115210178564713,0.14350530917779789] (9,-1; 9,-1), time: 30.0038s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_35, [-1.695665717124939,1.5637184381484985]=>[-0.6879985317557362,0.46867155543397665] (9,-1; 2,-1), time: 23.7142s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_11, [-0.9799456000328064,1.7881536483764648]=>[1e-05,1.7881536483764648] (15,-1; -1,-1), time: 0.3517s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_13, [-0.7554121613502502,1.4740290641784668]=>[1e-05,1.4740290641784668] (15,-1; -1,-1), time: 0.3412s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_95, [-2.288973808288574,0.6455786824226379]=>[-2.288973808288574,-1e-05] (-1,-1; 15,-1), time: 0.1620s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_96, [-1.6528549194335938,0.8952327966690063]=>[-1.6528549194335938,-1e-05] (-1,-1; 15,-1), time: 3.1215s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_37, [-0.9004355669021606,1.9659231901168823]=>[-0.08939335665365582,0.8860287577965131] (2,-1; 9,-1), time: 29.0264s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_42, [-1.7388544082641602,0.7394377589225769]=>[-1.7388544082641602,-1e-05] (-1,-1; 15,-1), time: 0.1603s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_50, [-0.48430150747299194,2.5968737602233887]=>[1e-05,2.5968737602233887] (15,-1; -1,-1), time: 0.1545s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_65, [-1.46842360496521,0.7603846788406372]=>[-0.5506389908710169,0.0014998436308697105] (9,-1; 9,-1), time: 30.0027s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_49, [-1.4202791452407837,1.5648566484451294]=>[-0.3552936850695141,0.5304085304197984] (9,-1; 9,-1), time: 30.0056s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_41, [-1.2878187894821167,0.8126309514045715]=>[-0.24458062184564888,0.22338336810128095] (9,-1; 9,-1), time: 30.0026s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_36, [-1.3136266469955444,0.8598566055297852]=>[-0.34629277208344017,0.1469615283925976] (9,-1; 9,-1), time: 30.0111s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_90, [-1.6748478412628174,1.9107309579849243]=>[-0.4517866602967945,0.7951630199822723] (9,-1; 9,-1), time: 30.0099s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_80, [-0.1746554970741272,2.9687981605529785]=>[1e-05,2.9687981605529785] (15,-1; -1,-1), time: 0.1605s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_99, [-1.857826828956604,0.42688679695129395]=>[-1.857826828956604,-1e-05] (-1,-1; 15,-1), time: 0.1607s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_75, [-1.01111900806427,1.6364989280700684]=>[-0.1876281094851315,0.529577533516366] (9,-1; 9,-1), time: 30.0045s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_84, [-1.3427122831344604,0.9867963790893555]=>[-0.4327437117105061,0.20335279829056604] (9,-1; 9,-1), time: 30.0026s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_26, [-2.3784408569335938,1.0253252983093262]=>[-2.3784408569335938,-1e-05] (-1,-1; 15,-1), time: 1.1271s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_25, [-1.719132423400879,0.9248856902122498]=>[-0.5766391160079968,0.11525646459511517] (9,-1; 9,-1), time: 30.0033s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_89, [-1.521024227142334,0.7888087034225464]=>[-1.521024227142334,-1e-05] (-1,-1; 15,-1), time: 3.0346s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_57, [-2.712311267852783,1.3519445657730103]=>[-2.712311267852783,-1e-05] (-1,-1; 15,-1), time: 5.5014s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_38, [-1.3540329933166504,1.181065320968628]=>[-0.4197213105975283,0.17781398207346846] (9,-1; 9,-1), time: 30.0139s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_98, [-1.2203959226608276,1.4405990839004517]=>[-0.3625392599468509,0.3813315061293872] (9,-1; 9,-1), time: 30.0031s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_27, [-1.4596662521362305,0.7890768051147461]=>[-0.4973417630046765,0.2169467998045968] (9,-1; 9,-1), time: 30.0030s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_97, [-1.3073681592941284,0.7305495738983154]=>[-0.339763174477343,0.14536183206727413] (9,-1; 9,-1), time: 30.0114s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_1, [-1.3371070623397827,1.2117173671722412]=>[-0.5501006927471671,0.21531731341146926] (2,-1; 9,-1), time: 21.7841s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_51, [-2.213655471801758,1.7289577722549438]=>[-1.0417753743354612,0.5801551347563861] (9,-1; 9,-1), time: 30.0074s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_28, [-1.3335565328598022,1.0587427616119385]=>[-0.45984929966199706,0.15031546848443003] (9,-1; 9,-1), time: 30.0051s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_22, [-1.2416341304779053,1.9130665063858032]=>[-0.21219866460177236,0.9200294867394995] (9,-1; 9,-1), time: 30.0038s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_43, [-1.4250483512878418,2.3152692317962646]=>[-0.47544613040775124,0.9605183391205165] (9,-1; 9,-1), time: 30.0068s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_67, [-1.652571678161621,1.630170226097107]=>[-0.6123880713329966,0.4999651460713154] (9,-1; 9,-1), time: 30.0041s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_2, [-1.014291524887085,1.1714199781417847]=>[-0.1587246122714912,0.3604049892114521] (9,-1; 9,-1), time: 30.0029s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_4, [-1.3264997005462646,1.165764331817627]=>[-0.27946693489328894,0.4988560423060332] (9,-1; 9,-1), time: 30.0067s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_19, [-1.5639207363128662,1.1820615530014038]=>[-0.3738254605165107,0.33673778408922206] (9,-1; 9,-1), time: 30.0025s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_86, [-2.0515689849853516,1.485795259475708]=>[-1.0848649223604938,0.26487226547613507] (9,-1; 9,-1), time: 30.0029s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_73, [-1.3650383949279785,1.0658282041549683]=>[-0.5333057545492313,0.07816338302853182] (9,-1; 9,-1), time: 30.0025s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_14, [-1.116943597793579,2.686706066131592]=>[-0.15569365210932945,1.3580440647796037] (9,-1; 9,-1), time: 30.0032s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_55, [-1.6187539100646973,1.6631332635879517]=>[-0.5181061913953393,0.6896063008478331] (9,-1; 9,-1), time: 30.0038s, #vars: 1393, #constrs: 712, improved: True
Solving MIP for lay8_10, [-1.1755439043045044,1.4750537872314453]=>[-0.16666002802545796,0.614951075681125] (9,-1; 9,-1), time: 30.0090s, #vars: 1393, #constrs: 712, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
best_l after optimization: -1.0146387815475464 with beta sum per layer: []
optimal alpha/beta time: 6.731716871261597
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.2217,  0.6969,  1.1575, -1.0521,  1.2079, -0.8527,  2.8781, -3.5439,
          0.3014]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 99 nodes out of 99 unstable nodes, lb improved 60.222869873046875, ub improved 66.76060485839844, time 97.9151
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_2', 'lay10_34', 'lay10_72', 'lay10_3', 'lay10_45', 'lay10_81', 'lay10_36', 'lay10_92', 'lay10_86', 'lay10_49', 'lay10_11', 'lay10_99', 'lay10_23', 'lay10_57', 'lay10_50', 'lay10_37', 'lay10_14', 'lay10_84', 'lay10_79', 'lay10_26', 'lay10_43', 'lay10_0', 'lay10_21', 'lay10_70', 'lay10_52', 'lay10_67', 'lay10_51', 'lay10_7', 'lay10_96', 'lay10_5', 'lay10_1', 'lay10_13', 'lay10_28', 'lay10_41', 'lay10_69', 'lay10_54', 'lay10_8', 'lay10_22', 'lay10_97', 'lay10_89', 'lay10_48', 'lay10_33', 'lay10_32', 'lay10_42', 'lay10_94', 'lay10_17', 'lay10_15', 'lay10_55', 'lay10_61', 'lay10_47', 'lay10_66', 'lay10_95', 'lay10_87', 'lay10_4', 'lay10_38', 'lay10_91', 'lay10_60', 'lay10_58', 'lay10_24', 'lay10_90', 'lay10_85', 'lay10_46', 'lay10_19', 'lay10_44', 'lay10_64', 'lay10_88', 'lay10_39', 'lay10_10', 'lay10_71', 'lay10_74', 'lay10_9', 'lay10_93', 'lay10_78', 'lay10_65', 'lay10_12', 'lay10_40', 'lay10_20', 'lay10_63', 'lay10_25', 'lay10_27', 'lay10_62', 'lay10_68', 'lay10_31', 'lay10_73', 'lay10_30', 'lay10_80', 'lay10_82', 'lay10_59', 'lay10_76', 'lay10_75', 'lay10_18', 'lay10_83', 'lay10_16', 'lay10_56', 'lay10_6', 'lay10_77', 'lay10_35', 'lay10_98', 'lay10_53', 'lay10_29'] filter: 1.0
Solving MIP for lay10_37, [-3.075817584991455,1.8604296445846558]=>[-3.075817584991455,-1e-05] (-1,-1; 15,-1), time: 0.2542s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_49, [-3.836907148361206,2.3050384521484375]=>[-3.836907148361206,-1e-05] (-1,-1; 15,-1), time: 0.2553s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_72, [-3.148932695388794,2.468388557434082]=>[-3.148932695388794,-1e-05] (-1,-1; 15,-1), time: 0.2586s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_86, [-3.8946609497070312,1.5930230617523193]=>[-3.8946609497070312,-1e-05] (-1,-1; 15,-1), time: 0.2679s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_79, [-3.455204486846924,2.4140865802764893]=>[-3.455204486846924,-1e-05] (-1,-1; 15,-1), time: 0.2373s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_26, [-3.2286453247070312,2.2354023456573486]=>[-3.2286453247070312,-1e-05] (-1,-1; 15,-1), time: 0.4628s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_3, [-4.0621538162231445,2.4871437549591064]=>[-4.0621538162231445,-1e-05] (-1,-1; 15,-1), time: 1.7793s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_23, [-2.602797031402588,2.30850887298584]=>[-2.602797031402588,-1e-05] (-1,-1; 15,-1), time: 6.5884s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_70, [-2.7982993125915527,1.170928716659546]=>[-2.7982993125915527,-1e-05] (-1,-1; 15,-1), time: 0.2604s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_84, [-2.8973169326782227,2.3978323936462402]=>[-2.8973169326782227,-1e-05] (-1,-1; 15,-1), time: 8.2909s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_11, [-3.110325336456299,2.4424376487731934]=>[-0.7047822497511766,0.18383578325098665] (9,-1; 9,-1), time: 30.0067s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_34, [-2.7690024375915527,2.891258955001831]=>[-0.5857984730788224,0.46618160930372904] (9,-1; 9,-1), time: 30.0115s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_50, [-2.6144814491271973,2.4117774963378906]=>[-0.4498002151817783,0.28553665654258287] (9,-1; 9,-1), time: 30.0124s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_81, [-2.9833009243011475,2.8060219287872314]=>[-1.1495109516039597,0.46738316297985505] (9,-1; 9,-1), time: 30.0144s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_99, [-3.5387966632843018,2.729349136352539]=>[-1.467259509827308,0.46134793537062346] (9,-1; 9,-1), time: 30.0159s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_36, [-2.308443784713745,2.6537928581237793]=>[-0.2625523888651824,0.530157258968565] (9,-1; 9,-1), time: 30.0198s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_2, [-3.310131788253784,3.8239831924438477]=>[-0.9616324244144345,0.21801481106795345] (9,-1; 9,-1), time: 30.0253s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_57, [-2.5612869262695312,2.474752187728882]=>[-0.6013556327615233,0.1725108604144547] (9,-1; 9,-1), time: 30.0306s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_92, [-2.9812676906585693,2.370248556137085]=>[-0.7508187079220755,0.12468541976009134] (9,-1; 9,-1), time: 30.0429s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_45, [-2.748910427093506,2.895401954650879]=>[-0.3804196864652511,0.6236324690425655] (9,-1; 9,-1), time: 30.0443s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_1, [-3.4603538513183594,2.2496747970581055]=>[-3.4603538513183594,-1e-05] (-1,-1; 15,-1), time: 0.1891s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_54, [-3.1008613109588623,1.8563165664672852]=>[-3.1008613109588623,-1e-05] (-1,-1; 15,-1), time: 0.1913s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_14, [-2.996750831604004,2.212798595428467]=>[-0.8376533019152853,0.07348839448959708] (9,-1; 9,-1), time: 30.0085s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_96, [-2.8332223892211914,1.9147433042526245]=>[-2.8332223892211914,-1e-05] (-1,-1; 15,-1), time: 0.4051s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_43, [-2.386273145675659,3.598172664642334]=>[-0.4599885940196021,1.1950607244616591] (9,-1; 9,-1), time: 30.0074s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_48, [-2.899895191192627,1.6714842319488525]=>[-2.899895191192627,-1e-05] (-1,-1; 15,-1), time: 0.1977s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_0, [-2.563657760620117,2.005917549133301]=>[-0.3109112513238721,0.3987756019333281] (9,-1; 9,-1), time: 30.0591s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_21, [-2.874624729156494,3.1677377223968506]=>[-0.7653319447384132,0.20246962563960857] (9,-1; 9,-1), time: 30.0162s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_52, [-2.3917629718780518,2.5944013595581055]=>[-0.7799120770310637,0.02493931154398951] (9,-1; 9,-1), time: 30.0179s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_22, [-2.7413887977600098,2.0808067321777344]=>[-2.7413887977600098,-1e-05] (-1,-1; 15,-1), time: 6.8171s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_67, [-2.769218921661377,2.310032367706299]=>[-1.1336324557983415,0.15556525191755738] (9,-1; 9,-1), time: 30.0110s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_8, [-2.661278486251831,2.6853458881378174]=>[-0.93676057420474,-1e-05] (9,-1; 15,-1), time: 21.2500s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_51, [-3.0627994537353516,1.5480523109436035]=>[-0.7808060580640862,0.0847304919057652] (9,-1; 9,-1), time: 30.0038s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_5, [-2.6455492973327637,2.4401421546936035]=>[-0.5725668898327503,0.23947745231917633] (9,-1; 9,-1), time: 30.0030s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_13, [-2.8155863285064697,3.394083023071289]=>[-0.20972357741542827,1.2447615370688228] (9,-1; 9,-1), time: 30.0069s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_7, [-3.0240862369537354,2.5232431888580322]=>[-0.5930168461103148,0.3994932643476338] (9,-1; 9,-1), time: 30.0188s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_28, [-2.594852924346924,2.402811050415039]=>[-0.6087528420032462,0.19067012971764855] (9,-1; 9,-1), time: 30.0077s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_41, [-3.1283581256866455,2.0746023654937744]=>[-0.8978800112788256,0.18380422350893746] (9,-1; 9,-1), time: 30.0035s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_69, [-3.2346739768981934,2.394246816635132]=>[-0.9992213518583524,0.018837625103995587] (9,-1; 9,-1), time: 30.0070s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_66, [-2.325159788131714,5.120223045349121]=>[1e-05,5.120223045349121] (15,-1; -1,-1), time: 0.1916s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_38, [-2.205162525177002,4.306429862976074]=>[1e-05,4.306429862976074] (15,-1; -1,-1), time: 0.1896s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_97, [-2.794729709625244,2.1700382232666016]=>[-0.6236638732385535,0.2084044468450964] (9,-1; 9,-1), time: 30.0193s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_89, [-2.9611973762512207,2.6583762168884277]=>[-0.9139150175692022,0.2260039687572333] (9,-1; 9,-1), time: 30.0136s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_24, [-2.88370680809021,5.162810325622559]=>[1e-05,5.162810325622559] (15,-1; -1,-1), time: 0.1839s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_91, [-2.854748249053955,4.469988822937012]=>[1e-05,4.469988822937012] (15,-1; -1,-1), time: 0.4309s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_33, [-2.99294114112854,3.71055006980896]=>[-0.2896420009307886,1.5517675897953411] (9,-1; 9,-1), time: 30.0057s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_32, [-2.9042890071868896,1.8881983757019043]=>[-0.6598981474234654,0.07936453459863284] (9,-1; 9,-1), time: 30.0033s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_46, [-2.148137331008911,3.977430582046509]=>[1e-05,3.977430582046509] (15,-1; -1,-1), time: 0.1887s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_42, [-2.864224910736084,2.3431334495544434]=>[-0.6821397737468858,0.3568656106984879] (9,-1; 9,-1), time: 30.0185s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_60, [-3.1238527297973633,1.5056222677230835]=>[-3.1238527297973633,-1e-05] (-1,-1; 15,-1), time: 4.3578s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_4, [-3.309783458709717,2.0194413661956787]=>[-3.309783458709717,-1e-05] (-1,-1; 15,-1), time: 4.5765s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_88, [-2.374469041824341,3.5988969802856445]=>[1e-05,3.5988969802856445] (15,-1; -1,-1), time: 0.1898s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_94, [-2.407716989517212,2.188671588897705]=>[-0.5494049248673095,0.07107913073785405] (9,-1; 9,-1), time: 30.0025s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_17, [-2.4080941677093506,3.283226728439331]=>[-0.1739708957322479,1.22201879220203] (9,-1; 9,-1), time: 30.0226s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_15, [-2.657334089279175,1.9765057563781738]=>[-0.6981993836251584,0.14914821068046408] (9,-1; 9,-1), time: 30.0058s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_55, [-2.2558212280273438,2.472073793411255]=>[-0.1500569846266907,0.6471412611882793] (9,-1; 9,-1), time: 30.0026s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_61, [-2.7381436824798584,3.20402193069458]=>[-0.2838233545203276,1.0076772920943293] (9,-1; 9,-1), time: 30.0134s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_47, [-2.1421468257904053,3.241943597793579]=>[-0.06514458136524341,1.2790519907437232] (9,-1; 9,-1), time: 30.0145s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_95, [-2.933642625808716,2.8248233795166016]=>[-0.564593303961742,0.5456051818406434] (9,-1; 9,-1), time: 30.0051s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_87, [-2.790849208831787,2.4814274311065674]=>[-0.4073585335394345,0.7934716582292177] (9,-1; 9,-1), time: 30.0210s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_58, [-2.7554497718811035,2.868917465209961]=>[-0.19888058589551455,0.8285561203391346] (9,-1; 9,-1), time: 30.0133s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_90, [-3.8136348724365234,4.020732402801514]=>[-0.7105304383269394,1.0313768473324207] (9,-1; 9,-1), time: 30.0035s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_85, [-2.874427318572998,1.7858994007110596]=>[-0.5762729326470806,0.06962336207483645] (9,-1; 9,-1), time: 30.0106s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_19, [-2.1582682132720947,2.5849812030792236]=>[-0.17179163179806264,0.6130012523144531] (9,-1; 9,-1), time: 30.0140s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_44, [-3.9898061752319336,2.901529550552368]=>[-0.7945808366978336,0.9213894783189659] (9,-1; 9,-1), time: 30.0037s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_64, [-2.4585883617401123,2.6028048992156982]=>[-0.2750332471575902,0.6797368362935489] (9,-1; 9,-1), time: 30.0026s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_39, [-2.8280930519104004,1.9644854068756104]=>[-0.619406780294052,0.1941317503071215] (9,-1; 9,-1), time: 30.0036s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_10, [-2.8675742149353027,3.0258231163024902]=>[-0.6479570681990597,0.3971569733979777] (9,-1; 9,-1), time: 30.0026s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_71, [-2.7798566818237305,3.395205020904541]=>[-0.130320852008172,1.1558736345617098] (9,-1; 9,-1), time: 30.0032s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_74, [-3.084320068359375,2.376018524169922]=>[-0.795354976187904,0.42465078797870204] (9,-1; 9,-1), time: 30.0125s, #vars: 1585, #constrs: 950, improved: True
Solving MIP for lay10_9, [-2.2367653846740723,1.7866771221160889]=>[-0.47663281922011425,0.10089754713011886] (9,-1; 9,-1), time: 30.0128s, #vars: 1585, #constrs: 950, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
best_l after optimization: -13.421278953552246 with beta sum per layer: []
optimal alpha/beta time: 6.60046124458313
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.6891,  2.1265,  2.8485,  0.3647,  2.3361,  0.4334,  4.3590, -2.3963,
          1.6603]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 71 nodes out of 100 unstable nodes, lb improved 120.90614318847656, ub improved 138.64639282226562, time 98.9415
maximum relu layer improved by MIP so far 4
MIP finished with 256.95020842552185s
Run final alpha-CROWN after MIP solving on layer 10 and relu idx 4
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: -17.443971633911133 with beta sum per layer: []
optimal alpha/beta time: 4.961225748062134
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.2364,  2.5550,  3.3061,  0.7834,  2.7263,  0.8884,  4.8067, -2.0242,
          2.1657]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.2364,  2.5550,  3.3061,  0.7834,  2.7263,  0.8884,  4.8067, -2.0242,
          2.1657,  0.0000]], device='cuda:0') min: tensor(-2.0242, device='cuda:0')
time threshold left for bab: 31.815441370010376
##### [0:20] Tested against 7 ######
Model prediction is: tensor([[-1.3886, -0.7100, -2.2255, -0.0764,  1.1890, -0.3403, -4.0691,  2.6444,
         -0.5482,  6.5574]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /22 start_node /23
setting alpha for layer /22 start_node /25
setting alpha for layer /22 start_node /27
setting alpha for layer /22 start_node /29
not setting layer /22 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /24 start_node /25
setting alpha for layer /24 start_node /27
setting alpha for layer /24 start_node /29
not setting layer /24 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /26 start_node /27
setting alpha for layer /26 start_node /29
not setting layer /26 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /28 start_node /29
not setting layer /28 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /30 start_node /31 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /21 torch.Size([1, 100])
1 /23 torch.Size([1, 100])
2 /25 torch.Size([1, 100])
3 /27 torch.Size([1, 100])
4 /29 torch.Size([1, 100])
best_l after optimization: 2.024674892425537 with beta sum per layer: []
optimal alpha/beta time: 1.350985050201416
alpha-CROWN with fixed intermediate bounds: tensor([[-2.0247]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-2.024674892425537
layer 0 size torch.Size([100]) unstable 30
layer 1 size torch.Size([100]) unstable 34
layer 2 size torch.Size([100]) unstable 40
layer 3 size torch.Size([100]) unstable 46
layer 4 size torch.Size([100]) unstable 70
# of unstable neurons: 220
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 99]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 3.6225991249084473 with beta sum per layer: [0.1347724199295044, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.4360485076904297
This batch time : update_bounds func: 0.4385	 prepare: 0.0014	 bound: 0.4363	 transfer: 0.0005	 finalize: 0.0003
Accumulated time: update_bounds func: 0.4385	 prepare: 0.0014	 bound: 0.4363	 transfer: 0.0005	 finalize: 0.0003
batch bounding time:  0.43877196311950684
Current worst splitting domains [lb, ub] (depth):
[-1.92794, 96.975327] (1), [-1.69466, 96.975327] (1), 
length of domains: 2
Total time: 0.4598	 pickout: 0.0008	 decision: 0.0200	 get_bound: 0.4388	 add_domain: 0.0002
Current lb:-1.927943229675293
2 neurons visited
0 diving domains visited
Cumulative time: 2.006319284439087

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 81], [4, 81]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 6.184372901916504 with beta sum per layer: [0.2999294400215149, 0.0, 0.0, 0.0, 1.5586283206939697]
optimal alpha/beta time: 0.25655198097229004
This batch time : update_bounds func: 0.2592	 prepare: 0.0016	 bound: 0.2568	 transfer: 0.0004	 finalize: 0.0004
Accumulated time: update_bounds func: 0.6977	 prepare: 0.0030	 bound: 0.6931	 transfer: 0.0004	 finalize: 0.0006
batch bounding time:  0.25931620597839355
Current worst splitting domains [lb, ub] (depth):
[-1.92794, 96.975327] (2), [-1.67077, 96.975327] (2), [-1.35029, 96.975327] (2), [-1.19946, 96.975327] (2), 
length of domains: 4
Total time: 0.2806	 pickout: 0.0009	 decision: 0.0201	 get_bound: 0.2593	 add_domain: 0.0002
Current lb:-1.927943229675293
6 neurons visited
0 diving domains visited
Cumulative time: 2.28703236579895

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 64], [3, 64], [4, 6], [4, 6]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 7.990318775177002 with beta sum per layer: [0.40556201338768005, 0.0, 0.0, 1.5747723579406738, 7.335224628448486]
optimal alpha/beta time: 0.25560975074768066
This batch time : update_bounds func: 0.2590	 prepare: 0.0019	 bound: 0.2558	 transfer: 0.0005	 finalize: 0.0006
Accumulated time: update_bounds func: 0.9567	 prepare: 0.0050	 bound: 0.9489	 transfer: 0.0005	 finalize: 0.0013
batch bounding time:  0.2590663433074951
Current worst splitting domains [lb, ub] (depth):
[-1.92794, 96.975327] (3), [-1.65147, 96.975327] (3), [-1.13979, 96.975327] (3), [-1.03465, 96.975327] (3), [-0.73106, 96.975327] (3), [-0.66317, 96.975327] (3), [-0.47408, 96.975327] (3), [-0.30388, 96.975327] (3), 
length of domains: 8
Total time: 0.2796	 pickout: 0.0010	 decision: 0.0192	 get_bound: 0.2591	 add_domain: 0.0003
Current lb:-1.927943229675293
14 neurons visited
0 diving domains visited
Cumulative time: 2.56675124168396

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 95], [0, 95], [4, 53], [3, 64], [4, 53], [4, 53], [4, 53], [4, 53]]
single_node_split: True
regular batch size: 2*8, diving batch size 1*0
best_l after optimization: 10.023884773254395 with beta sum per layer: [0.6286934614181519, 0.0, 0.0, 5.9044342041015625, 18.133066177368164]
optimal alpha/beta time: 0.25679707527160645
This batch time : update_bounds func: 0.2616	 prepare: 0.0027	 bound: 0.2570	 transfer: 0.0006	 finalize: 0.0013
Accumulated time: update_bounds func: 1.2183	 prepare: 0.0077	 bound: 1.2059	 transfer: 0.0006	 finalize: 0.0025
batch bounding time:  0.2617182731628418
Current worst splitting domains [lb, ub] (depth):
[-1.85662, 96.975327] (4), [-1.77265, 96.975327] (4), [-1.45966, 96.975327] (4), [-1.40048, 96.975327] (4), [-1.04305, 96.975327] (4), [-0.97614, 96.975327] (4), [-0.64724, 96.975327] (4), [-0.49804, 96.975327] (4), [-0.44731, 96.975327] (4), [-0.42331, 96.975327] (4), [-0.36863, 96.975327] (4), [-0.00351, 96.975327] (4), 
length of domains: 12
Total time: 0.2830	 pickout: 0.0015	 decision: 0.0194	 get_bound: 0.2617	 add_domain: 0.0004
Current lb:-1.856616735458374
30 neurons visited
0 diving domains visited
Cumulative time: 2.849966049194336

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 6], [4, 6], [0, 53], [0, 53], [3, 51], [4, 53], [3, 64], [4, 99], [4, 99], [4, 99]]
single_node_split: True
regular batch size: 2*12, diving batch size 1*0
best_l after optimization: 15.87341594696045 with beta sum per layer: [2.641946792602539, 0.0, 0.0, 2.8904905319213867, 40.13433074951172]
optimal alpha/beta time: 0.2614736557006836
This batch time : update_bounds func: 0.2677	 prepare: 0.0034	 bound: 0.2617	 transfer: 0.0006	 finalize: 0.0019
Accumulated time: update_bounds func: 1.4860	 prepare: 0.0111	 bound: 1.4676	 transfer: 0.0006	 finalize: 0.0044
batch bounding time:  0.2678215503692627
Current worst splitting domains [lb, ub] (depth):
[-1.81429, 96.975327] (5), [-1.72641, 96.975327] (5), [-1.41252, 96.975327] (5), [-1.34895, 96.975327] (5), [-1.34058, 96.975327] (5), [-1.28454, 96.975327] (5), [-1.07973, 96.975327] (5), [-0.97884, 96.975327] (5), [-0.96381, 96.975327] (5), [-0.87350, 96.975327] (5), [-0.63758, 96.975327] (5), [-0.53507, 96.975327] (5), [-0.51846, 96.975327] (5), [-0.44640, 96.975327] (5), [-0.39036, 96.975327] (5), [-0.35397, 96.975327] (5), [-0.29421, 96.975327] (5), [-0.16946, 96.975327] (5), [-0.10812, 96.975327] (5), [-0.04786, 96.975327] (5), 
length of domains: 20
Total time: 0.2903	 pickout: 0.0019	 decision: 0.0197	 get_bound: 0.2679	 add_domain: 0.0008
Current lb:-1.814292550086975
54 neurons visited
0 diving domains visited
Cumulative time: 3.1404972076416016

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 53], [4, 53], [4, 53], [4, 6], [4, 53], [4, 6], [0, 28], [3, 64], [0, 28], [3, 51]]
single_node_split: True
regular batch size: 2*20, diving batch size 1*0
best_l after optimization: 23.036422729492188 with beta sum per layer: [5.545567512512207, 0.0, 0.0, 7.600805282592773, 74.48684692382812]
optimal alpha/beta time: 0.25849223136901855
This batch time : update_bounds func: 0.2671	 prepare: 0.0048	 bound: 0.2587	 transfer: 0.0007	 finalize: 0.0029
Accumulated time: update_bounds func: 1.7531	 prepare: 0.0159	 bound: 1.7263	 transfer: 0.0007	 finalize: 0.0072
batch bounding time:  0.26723527908325195
Current worst splitting domains [lb, ub] (depth):
[-1.75994, 96.975327] (6), [-1.66839, 96.975327] (6), [-1.43470, 96.975327] (6), [-1.35562, 96.975327] (6), [-1.26997, 96.975327] (6), [-1.20257, 96.975327] (6), [-1.12590, 96.975327] (6), [-1.06652, 96.975327] (6), [-0.99709, 96.975327] (6), [-0.98725, 96.975327] (6), [-0.93640, 96.975327] (6), [-0.93520, 96.975327] (6), [-0.92541, 96.975327] (6), [-0.89541, 96.975327] (6), [-0.85336, 96.975327] (6), [-0.79745, 96.975327] (6), [-0.76870, 96.975327] (6), [-0.73134, 96.975327] (6), [-0.51664, 96.975327] (6), [-0.47918, 96.975327] (6), 
length of domains: 33
Total time: 0.2923	 pickout: 0.0029	 decision: 0.0206	 get_bound: 0.2673	 add_domain: 0.0016
Current lb:-1.759940505027771
94 neurons visited
0 diving domains visited
Cumulative time: 3.433199167251587

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 53], [0, 53], [0, 53], [0, 53], [4, 53], [4, 53], [0, 53], [0, 53], [0, 28], [0, 53]]
single_node_split: True
regular batch size: 2*33, diving batch size 1*0
best_l after optimization: 33.789527893066406 with beta sum per layer: [16.729354858398438, 0.0, 0.0, 12.896997451782227, 135.057861328125]
optimal alpha/beta time: 0.2582521438598633
This batch time : update_bounds func: 0.2709	 prepare: 0.0070	 bound: 0.2585	 transfer: 0.0008	 finalize: 0.0045
Accumulated time: update_bounds func: 2.0240	 prepare: 0.0229	 bound: 1.9848	 transfer: 0.0008	 finalize: 0.0117
batch bounding time:  0.2710435390472412
Current worst splitting domains [lb, ub] (depth):
[-1.68819, 96.975327] (7), [-1.59210, 96.975327] (7), [-1.43540, 96.975327] (7), [-1.29361, 96.975327] (7), [-1.29245, 96.975327] (7), [-1.21960, 96.975327] (7), [-1.19785, 96.975327] (7), [-1.12955, 96.975327] (7), [-1.09525, 96.975327] (7), [-1.02396, 96.975327] (7), [-0.98292, 96.975327] (7), [-0.95714, 96.975327] (7), [-0.86725, 96.975327] (7), [-0.85945, 96.975327] (7), [-0.82669, 96.975327] (7), [-0.80418, 96.975327] (7), [-0.76779, 96.975327] (7), [-0.76099, 96.975327] (7), [-0.75155, 96.975327] (7), [-0.72507, 96.975327] (7), 
length of domains: 51
Total time: 0.2992	 pickout: 0.0043	 decision: 0.0219	 get_bound: 0.2711	 add_domain: 0.0018
Current lb:-1.6881927251815796
160 neurons visited
0 diving domains visited
Cumulative time: 3.7330291271209717

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 43], [3, 43], [1, 83], [1, 83], [0, 28], [0, 28], [0, 28], [0, 28], [0, 28], [0, 28]]
single_node_split: True
regular batch size: 2*51, diving batch size 1*0
best_l after optimization: 48.22296905517578 with beta sum per layer: [31.19147491455078, 1.5249176025390625, 0.0, 19.767566680908203, 218.34634399414062]
optimal alpha/beta time: 0.2620508670806885
This batch time : update_bounds func: 0.2803	 prepare: 0.0103	 bound: 0.2623	 transfer: 0.0010	 finalize: 0.0066
Accumulated time: update_bounds func: 2.3043	 prepare: 0.0332	 bound: 2.2471	 transfer: 0.0010	 finalize: 0.0183
batch bounding time:  0.2804603576660156
Current worst splitting domains [lb, ub] (depth):
[-1.68819, 96.975327] (8), [-1.59089, 96.975327] (8), [-1.38409, 96.975327] (8), [-1.22496, 96.975327] (8), [-1.10054, 96.975327] (8), [-1.06415, 96.975327] (8), [-1.02793, 96.975327] (8), [-1.02654, 96.975327] (8), [-1.02640, 96.975327] (8), [-1.01379, 96.975327] (8), [-0.99066, 96.975327] (8), [-0.96015, 96.975327] (8), [-0.95753, 96.975327] (8), [-0.90614, 96.975327] (8), [-0.89111, 96.975327] (8), [-0.84147, 96.975327] (8), [-0.83642, 96.975327] (8), [-0.77273, 96.975327] (8), [-0.76875, 96.975327] (8), [-0.76616, 96.975327] (8), 
length of domains: 86
Total time: 0.3139	 pickout: 0.0063	 decision: 0.0229	 get_bound: 0.2806	 add_domain: 0.0041
Current lb:-1.6881927251815796
262 neurons visited
0 diving domains visited
Cumulative time: 4.047717094421387

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 83], [1, 83], [0, 28], [0, 28], [3, 51], [3, 51], [3, 51], [3, 51], [3, 51], [3, 43]]
single_node_split: True
regular batch size: 2*86, diving batch size 1*0
best_l after optimization: 59.04262924194336 with beta sum per layer: [58.62840270996094, 6.927997589111328, 0.32981717586517334, 58.08259201049805, 360.77227783203125]
optimal alpha/beta time: 0.26633715629577637
This batch time : update_bounds func: 0.2964	 prepare: 0.0166	 bound: 0.2666	 transfer: 0.0014	 finalize: 0.0116
Accumulated time: update_bounds func: 2.6007	 prepare: 0.0498	 bound: 2.5137	 transfer: 0.0014	 finalize: 0.0299
batch bounding time:  0.2965729236602783
Current worst splitting domains [lb, ub] (depth):
[-1.67726, 96.975327] (9), [-1.56601, 96.975327] (9), [-1.22755, 96.975327] (9), [-1.22123, 96.975327] (9), [-1.19996, 96.975327] (9), [-1.15074, 96.975327] (9), [-1.05548, 96.975327] (9), [-1.03351, 96.975327] (9), [-1.02926, 96.975327] (9), [-1.01069, 96.975327] (9), [-0.99521, 96.975327] (9), [-0.95458, 96.975327] (9), [-0.94686, 96.975327] (9), [-0.93540, 96.975327] (9), [-0.92893, 96.975327] (9), [-0.92007, 96.975327] (9), [-0.86532, 96.975327] (9), [-0.83661, 96.975327] (9), [-0.79622, 96.975327] (9), [-0.75368, 96.975327] (9), 
length of domains: 149
Total time: 0.3377	 pickout: 0.0102	 decision: 0.0248	 get_bound: 0.2968	 add_domain: 0.0058
Current lb:-1.677256464958191
434 neurons visited
0 diving domains visited
Cumulative time: 4.386534690856934

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 28], [0, 28], [3, 51], [3, 43], [3, 43], [3, 51], [3, 51], [1, 81], [3, 51], [4, 99]]
single_node_split: True
regular batch size: 2*149, diving batch size 1*0
best_l after optimization: 57.47282409667969 with beta sum per layer: [94.08511352539062, 20.51651382446289, 0.756568431854248, 153.62118530273438, 649.94873046875]
optimal alpha/beta time: 0.26773953437805176
This batch time : update_bounds func: 0.3183	 prepare: 0.0278	 bound: 0.2680	 transfer: 0.0020	 finalize: 0.0201
Accumulated time: update_bounds func: 2.9190	 prepare: 0.0776	 bound: 2.7816	 transfer: 0.0020	 finalize: 0.0500
batch bounding time:  0.318605899810791
Current worst splitting domains [lb, ub] (depth):
[-1.53499, 96.975327] (10), [-1.50211, 96.975327] (10), [-1.42016, 96.975327] (10), [-1.39223, 96.975327] (10), [-1.21057, 96.975327] (10), [-1.18880, 96.975327] (10), [-1.15391, 96.975327] (10), [-1.07468, 96.975327] (10), [-1.03183, 96.975327] (10), [-1.00476, 96.975327] (10), [-0.98885, 96.975327] (10), [-0.94057, 96.975327] (10), [-0.93549, 96.975327] (10), [-0.91298, 96.975327] (10), [-0.89124, 96.975327] (10), [-0.86747, 96.975327] (10), [-0.85848, 96.975327] (10), [-0.83910, 96.975327] (10), [-0.79732, 96.975327] (10), [-0.78415, 96.975327] (10), 
length of domains: 170
Total time: 0.3718	 pickout: 0.0174	 decision: 0.0284	 get_bound: 0.3190	 add_domain: 0.0071
Current lb:-1.5349948406219482
732 neurons visited
0 diving domains visited
Cumulative time: 4.761137962341309

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 51], [3, 51], [3, 51], [3, 51], [3, 51], [3, 51], [1, 81], [1, 81], [3, 43], [3, 43]]
single_node_split: True
regular batch size: 2*170, diving batch size 1*0
best_l after optimization: 64.41354370117188 with beta sum per layer: [119.55079650878906, 31.766921997070312, 14.772639274597168, 173.43972778320312, 717.5918579101562]
optimal alpha/beta time: 0.2669336795806885
This batch time : update_bounds func: 0.3235	 prepare: 0.0321	 bound: 0.2672	 transfer: 0.0020	 finalize: 0.0219
Accumulated time: update_bounds func: 3.2425	 prepare: 0.1097	 bound: 3.0488	 transfer: 0.0020	 finalize: 0.0719
batch bounding time:  0.3238701820373535
Current worst splitting domains [lb, ub] (depth):
[-1.53499, 96.975327] (11), [-1.50211, 96.975327] (11), [-1.42016, 96.975327] (11), [-1.39223, 96.975327] (11), [-1.20631, 96.975327] (11), [-1.18482, 96.975327] (11), [-1.07120, 96.975327] (11), [-1.02030, 96.975327] (11), [-1.00879, 96.975327] (11), [-0.99888, 96.975327] (11), [-0.98189, 96.975327] (11), [-0.94505, 96.975327] (11), [-0.93342, 96.975327] (11), [-0.91100, 96.975327] (11), [-0.91004, 96.975327] (11), [-0.85558, 96.975327] (11), [-0.85360, 96.975327] (11), [-0.82506, 96.975327] (11), [-0.82196, 96.975327] (11), [-0.80740, 96.975327] (11), 
length of domains: 205
Total time: 0.3822	 pickout: 0.0203	 decision: 0.0288	 get_bound: 0.3243	 add_domain: 0.0088
Current lb:-1.5349948406219482
1072 neurons visited
0 diving domains visited
Cumulative time: 5.14640736579895

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 81], [4, 99], [1, 81], [1, 81], [1, 81], [1, 81], [4, 99], [4, 99], [1, 81], [4, 99]]
single_node_split: True
regular batch size: 2*205, diving batch size 1*0
best_l after optimization: 77.93213653564453 with beta sum per layer: [140.66168212890625, 59.11648941040039, 35.38035583496094, 240.28619384765625, 786.751220703125]
optimal alpha/beta time: 0.26690244674682617
This batch time : update_bounds func: 0.3367	 prepare: 0.0393	 bound: 0.2672	 transfer: 0.0021	 finalize: 0.0276
Accumulated time: update_bounds func: 3.5792	 prepare: 0.1490	 bound: 3.3160	 transfer: 0.0021	 finalize: 0.0995
batch bounding time:  0.3371312618255615
Current worst splitting domains [lb, ub] (depth):
[-1.49096, 96.975327] (12), [-1.48488, 96.975327] (12), [-1.41669, 96.975327] (12), [-1.36488, 96.975327] (12), [-1.32805, 96.975327] (12), [-1.27601, 96.975327] (12), [-1.27229, 96.975327] (12), [-1.25995, 96.975327] (12), [-1.13768, 96.975327] (12), [-1.10760, 96.975327] (12), [-1.03070, 96.975327] (12), [-1.01682, 96.975327] (12), [-1.01444, 96.975327] (12), [-0.94909, 96.975327] (12), [-0.93954, 96.975327] (12), [-0.93331, 96.975327] (12), [-0.89653, 96.975327] (12), [-0.85796, 96.975327] (12), [-0.84161, 96.975327] (12), [-0.83714, 96.975327] (12), 
length of domains: 262
Total time: 0.4454	 pickout: 0.0245	 decision: 0.0704	 get_bound: 0.3377	 add_domain: 0.0129
Current lb:-1.490964651107788
1482 neurons visited
0 diving domains visited
Cumulative time: 5.596013069152832

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 81], [4, 99], [4, 99], [0, 72], [0, 72], [4, 99], [1, 81], [4, 21], [0, 72], [0, 72]]
single_node_split: True
regular batch size: 2*262, diving batch size 1*0
best_l after optimization: 99.0615463256836 with beta sum per layer: [164.00173950195312, 105.05641174316406, 43.0250244140625, 334.2033386230469, 993.415283203125]
optimal alpha/beta time: 0.26921796798706055
This batch time : update_bounds func: 0.3585	 prepare: 0.0504	 bound: 0.2695	 transfer: 0.0031	 finalize: 0.0347
Accumulated time: update_bounds func: 3.9377	 prepare: 0.1994	 bound: 3.5854	 transfer: 0.0031	 finalize: 0.1342
batch bounding time:  0.3589627742767334
Current worst splitting domains [lb, ub] (depth):
[-1.47379, 96.975327] (13), [-1.42209, 96.975327] (13), [-1.37258, 96.975327] (13), [-1.35021, 96.975327] (13), [-1.27369, 96.975327] (13), [-1.24114, 96.975327] (13), [-1.21939, 96.975327] (13), [-1.21062, 96.975327] (13), [-1.20826, 96.975327] (13), [-1.19333, 96.975327] (13), [-1.16640, 96.975327] (13), [-1.16168, 96.975327] (13), [-1.14622, 96.975327] (13), [-1.12992, 96.975327] (13), [-1.06405, 96.975327] (13), [-1.05643, 96.975327] (13), [-1.03677, 96.975327] (13), [-1.00798, 96.975327] (13), [-0.97146, 96.975327] (13), [-0.95891, 96.975327] (13), 
length of domains: 350
Total time: 0.4425	 pickout: 0.0317	 decision: 0.0348	 get_bound: 0.3596	 add_domain: 0.0165
Current lb:-1.4737944602966309
2006 neurons visited
0 diving domains visited
Cumulative time: 6.04311990737915

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 72], [0, 72], [4, 21], [0, 98], [4, 99], [4, 99], [4, 21], [4, 21], [4, 21], [4, 99]]
single_node_split: True
regular batch size: 2*350, diving batch size 1*0
best_l after optimization: 132.5770263671875 with beta sum per layer: [240.080078125, 184.0911865234375, 51.9251594543457, 419.3624267578125, 1354.261474609375]
optimal alpha/beta time: 0.2712223529815674
This batch time : update_bounds func: 0.3936	 prepare: 0.0681	 bound: 0.2715	 transfer: 0.0046	 finalize: 0.0485
Accumulated time: update_bounds func: 4.3313	 prepare: 0.2674	 bound: 3.8569	 transfer: 0.0046	 finalize: 0.1827
batch bounding time:  0.3941981792449951
Current worst splitting domains [lb, ub] (depth):
[-1.38173, 96.975327] (14), [-1.33392, 96.975327] (14), [-1.32894, 96.975327] (14), [-1.31110, 96.975327] (14), [-1.29384, 96.975327] (14), [-1.26962, 96.975327] (14), [-1.24333, 96.975327] (14), [-1.21025, 96.975327] (14), [-1.18150, 96.975327] (14), [-1.15568, 96.975327] (14), [-1.14862, 96.975327] (14), [-1.14239, 96.975327] (14), [-1.10929, 96.975327] (14), [-1.09998, 96.975327] (14), [-1.09405, 96.975327] (14), [-1.06690, 96.975327] (14), [-1.06140, 96.975327] (14), [-1.04749, 96.975327] (14), [-1.04560, 96.975327] (14), [-1.02982, 96.975327] (14), 
length of domains: 471
Total time: 0.5311	 pickout: 0.0420	 decision: 0.0697	 get_bound: 0.3951	 add_domain: 0.0242
Current lb:-1.3817296028137207
2706 neurons visited
0 diving domains visited
Cumulative time: 6.5820252895355225

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 21], [4, 21], [4, 21], [2, 64], [4, 21], [4, 21], [0, 21], [0, 21], [2, 64], [2, 64]]
single_node_split: True
regular batch size: 2*471, diving batch size 1*0
best_l after optimization: 165.6331024169922 with beta sum per layer: [398.838134765625, 341.1596984863281, 96.15219116210938, 475.2337341308594, 1815.870849609375]
optimal alpha/beta time: 0.27237629890441895
This batch time : update_bounds func: 0.4660	 prepare: 0.0934	 bound: 0.2726	 transfer: 0.0062	 finalize: 0.0643
Accumulated time: update_bounds func: 4.7972	 prepare: 0.3609	 bound: 4.1296	 transfer: 0.0062	 finalize: 0.2471
batch bounding time:  0.46674513816833496
Current worst splitting domains [lb, ub] (depth):
[-1.32552, 96.975327] (15), [-1.31110, 96.975327] (15), [-1.27767, 96.975327] (15), [-1.27071, 96.975327] (15), [-1.23122, 96.975327] (15), [-1.20934, 96.975327] (15), [-1.20112, 96.975327] (15), [-1.18963, 96.975327] (15), [-1.16724, 96.975327] (15), [-1.15857, 96.975327] (15), [-1.15496, 96.975327] (15), [-1.14855, 96.975327] (15), [-1.14259, 96.975327] (15), [-1.14239, 96.975327] (15), [-1.10940, 96.975327] (15), [-1.10263, 96.975327] (15), [-1.09420, 96.975327] (15), [-1.08578, 96.975327] (15), [-1.06675, 96.975327] (15), [-1.03180, 96.975327] (15), 
length of domains: 598
Total time: 0.6056	 pickout: 0.0581	 decision: 0.0481	 get_bound: 0.4679	 add_domain: 0.0315
Current lb:-1.325517177581787
3648 neurons visited
0 diving domains visited
Cumulative time: 7.198622941970825

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 21], [0, 98], [0, 21], [0, 21], [2, 64], [0, 21], [4, 21], [0, 21], [4, 21], [1, 29]]
single_node_split: True
regular batch size: 2*598, diving batch size 1*0
best_l after optimization: 199.86004638671875 with beta sum per layer: [605.828369140625, 550.1044921875, 204.47784423828125, 396.34149169921875, 2411.631103515625]
optimal alpha/beta time: 0.2785966396331787
This batch time : update_bounds func: 0.4876	 prepare: 0.1181	 bound: 0.2789	 transfer: 0.0076	 finalize: 0.0811
Accumulated time: update_bounds func: 5.2849	 prepare: 0.4790	 bound: 4.4084	 transfer: 0.0076	 finalize: 0.3282
batch bounding time:  0.48857617378234863
Current worst splitting domains [lb, ub] (depth):
[-1.28595, 96.975327] (16), [-1.25596, 96.975327] (16), [-1.23951, 96.975327] (16), [-1.23122, 96.975327] (16), [-1.22853, 96.975327] (16), [-1.16782, 96.975327] (16), [-1.14651, 96.975327] (16), [-1.12212, 96.975327] (16), [-1.11484, 96.975327] (16), [-1.11182, 96.975327] (16), [-1.10799, 96.975327] (16), [-1.07790, 96.975327] (16), [-1.07628, 96.975327] (16), [-1.06521, 96.975327] (16), [-1.06224, 96.975327] (16), [-1.04995, 96.975327] (16), [-1.04774, 96.975327] (16), [-1.04750, 96.975327] (16), [-1.02991, 96.975327] (16), [-1.02314, 96.975327] (16), 
length of domains: 761
Total time: 0.6934	 pickout: 0.0738	 decision: 0.0883	 get_bound: 0.4901	 add_domain: 0.0411
Current lb:-1.2859491109848022
4844 neurons visited
0 diving domains visited
Cumulative time: 7.906262636184692

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 98], [1, 15], [0, 98], [1, 15], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [2, 64]]
single_node_split: True
regular batch size: 2*761, diving batch size 1*0
best_l after optimization: 220.08192443847656 with beta sum per layer: [839.4619140625, 801.5822143554688, 382.3025207519531, 418.6142272949219, 3064.69873046875]
optimal alpha/beta time: 0.28406858444213867
This batch time : update_bounds func: 0.6100	 prepare: 0.1514	 bound: 0.2844	 transfer: 0.0105	 finalize: 0.1614
Accumulated time: update_bounds func: 5.8949	 prepare: 0.6304	 bound: 4.6928	 transfer: 0.0105	 finalize: 0.4896
batch bounding time:  0.6114053726196289
Current worst splitting domains [lb, ub] (depth):
[-1.23441, 96.975327] (17), [-1.22619, 96.975327] (17), [-1.20342, 96.975327] (17), [-1.18680, 96.975327] (17), [-1.17836, 96.975327] (17), [-1.11486, 96.975327] (17), [-1.11182, 96.975327] (17), [-1.09750, 96.975327] (17), [-1.07628, 96.975327] (17), [-1.06663, 96.975327] (17), [-1.05796, 96.975327] (17), [-1.05210, 96.975327] (17), [-1.04499, 96.975327] (17), [-1.02522, 96.975327] (17), [-1.02314, 96.975327] (17), [-1.01870, 96.975327] (17), [-1.01557, 96.975327] (17), [-1.01531, 96.975327] (17), [-1.00117, 96.975327] (17), [-0.99881, 96.975327] (17), 
length of domains: 913
Total time: 0.8617	 pickout: 0.0964	 decision: 0.0997	 get_bound: 0.6135	 add_domain: 0.0521
Current lb:-1.2344096899032593
6366 neurons visited
0 diving domains visited
Cumulative time: 8.789358854293823

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 64], [2, 75], [2, 75], [2, 64], [2, 64], [2, 64], [1, 15], [2, 64], [1, 15], [2, 75]]
single_node_split: True
regular batch size: 2*913, diving batch size 1*0
best_l after optimization: 232.6107177734375 with beta sum per layer: [1042.263916015625, 1109.5601806640625, 564.9996337890625, 415.32550048828125, 3796.28857421875]
optimal alpha/beta time: 0.2847750186920166
This batch time : update_bounds func: 0.6068	 prepare: 0.1827	 bound: 0.2851	 transfer: 0.0121	 finalize: 0.1242
Accumulated time: update_bounds func: 6.5017	 prepare: 0.8131	 bound: 4.9779	 transfer: 0.0121	 finalize: 0.6138
batch bounding time:  0.6082332134246826
Current worst splitting domains [lb, ub] (depth):
[-1.23441, 96.975327] (18), [-1.22491, 96.975327] (18), [-1.20210, 96.975327] (18), [-1.18680, 96.975327] (18), [-1.17836, 96.975327] (18), [-1.11486, 96.975327] (18), [-1.10035, 96.975327] (18), [-1.09750, 96.975327] (18), [-1.06419, 96.975327] (18), [-1.06087, 96.975327] (18), [-1.05515, 96.975327] (18), [-1.03997, 96.975327] (18), [-1.01194, 96.975327] (18), [-1.00847, 96.975327] (18), [-0.99974, 96.975327] (18), [-0.99495, 96.975327] (18), [-0.99387, 96.975327] (18), [-0.96567, 96.975327] (18), [-0.95132, 96.975327] (18), [-0.94819, 96.975327] (18), 
length of domains: 1073
Total time: 0.9597	 pickout: 0.1179	 decision: 0.1122	 get_bound: 0.6108	 add_domain: 0.1188
Current lb:-1.2344096899032593
8192 neurons visited
0 diving domains visited
Cumulative time: 9.77501392364502

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 15], [3, 14], [3, 14], [1, 15], [1, 15], [1, 15], [0, 98], [1, 15], [3, 14], [0, 98]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 224.9752960205078 with beta sum per layer: [1207.23974609375, 1444.3494873046875, 636.451904296875, 436.78106689453125, 4315.8818359375]
optimal alpha/beta time: 0.28693532943725586
This batch time : update_bounds func: 0.6911	 prepare: 0.2079	 bound: 0.2873	 transfer: 0.0123	 finalize: 0.1396
Accumulated time: update_bounds func: 7.1929	 prepare: 1.0209	 bound: 5.2651	 transfer: 0.0123	 finalize: 0.7534
batch bounding time:  0.6926484107971191
Current worst splitting domains [lb, ub] (depth):
[-1.22478, 96.975327] (19), [-1.22241, 96.975327] (19), [-1.20122, 96.975327] (19), [-1.18006, 96.975327] (19), [-1.16148, 96.975327] (19), [-1.10348, 96.975327] (19), [-1.08665, 96.975327] (19), [-1.06243, 96.975327] (19), [-1.05264, 96.975327] (19), [-1.05093, 96.975327] (19), [-1.01630, 96.975327] (19), [-1.01311, 96.975327] (19), [-1.00649, 96.975327] (19), [-0.99377, 96.975327] (19), [-0.99273, 96.975327] (19), [-0.99060, 96.975327] (19), [-0.97876, 96.975327] (19), [-0.96060, 96.975327] (19), [-0.94078, 96.975327] (19), [-0.93628, 96.975327] (19), 
length of domains: 1236
Total time: 1.0462	 pickout: 0.1345	 decision: 0.0793	 get_bound: 0.6953	 add_domain: 0.1371
Current lb:-1.2247769832611084
10240 neurons visited
0 diving domains visited
Cumulative time: 10.851373434066772

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 29], [1, 29], [1, 29], [1, 29], [1, 29], [2, 75], [1, 29], [1, 29], [1, 29], [2, 75]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 252.2267608642578 with beta sum per layer: [1198.989013671875, 1542.919189453125, 523.5147094726562, 471.572509765625, 4266.9404296875]
optimal alpha/beta time: 0.28531980514526367
This batch time : update_bounds func: 0.6986	 prepare: 0.2087	 bound: 0.2856	 transfer: 0.0150	 finalize: 0.1417
Accumulated time: update_bounds func: 7.8915	 prepare: 1.2296	 bound: 5.5507	 transfer: 0.0150	 finalize: 0.8951
batch bounding time:  0.7002537250518799
Current worst splitting domains [lb, ub] (depth):
[-1.12424, 96.975327] (20), [-1.12293, 96.975327] (20), [-1.11045, 96.975327] (20), [-1.10715, 96.975327] (20), [-1.10518, 96.975327] (20), [-1.10348, 96.975327] (20), [-1.08447, 96.975327] (20), [-1.07622, 96.975327] (20), [-1.06275, 96.975327] (20), [-1.06096, 96.975327] (20), [-1.05093, 96.975327] (20), [-1.04932, 96.975327] (20), [-1.01630, 96.975327] (20), [-1.01311, 96.975327] (20), [-0.99377, 96.975327] (20), [-0.97770, 96.975327] (20), [-0.97567, 96.975327] (20), [-0.96060, 96.975327] (20), [-0.95837, 96.975327] (20), [-0.95050, 96.975327] (20), 
length of domains: 1486
Total time: 1.0651	 pickout: 0.1370	 decision: 0.0795	 get_bound: 0.7031	 add_domain: 0.1456
Current lb:-1.1242363452911377
12288 neurons visited
0 diving domains visited
Cumulative time: 11.947152376174927

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 7], [2, 75], [2, 75], [4, 7], [4, 7], [1, 29], [3, 14], [4, 7], [3, 14], [2, 75]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 337.08941650390625 with beta sum per layer: [1215.27197265625, 1468.792236328125, 456.70556640625, 602.9637451171875, 4270.0908203125]
optimal alpha/beta time: 0.28501367568969727
This batch time : update_bounds func: 0.7057	 prepare: 0.2114	 bound: 0.2853	 transfer: 0.0149	 finalize: 0.1415
Accumulated time: update_bounds func: 8.5972	 prepare: 1.4410	 bound: 5.8361	 transfer: 0.0149	 finalize: 1.0366
batch bounding time:  0.7073535919189453
Current worst splitting domains [lb, ub] (depth):
[-1.12293, 96.975327] (21), [-1.11315, 96.975327] (21), [-1.11045, 96.975327] (21), [-1.09394, 96.975327] (21), [-1.09338, 96.975327] (21), [-1.08396, 96.975327] (21), [-1.06254, 96.975327] (21), [-1.06193, 96.975327] (21), [-1.06096, 96.975327] (21), [-1.04932, 96.975327] (21), [-1.00962, 96.975327] (21), [-0.98640, 96.975327] (21), [-0.97770, 96.975327] (21), [-0.97567, 96.975327] (21), [-0.95311, 96.975327] (21), [-0.94551, 96.975327] (21), [-0.93837, 96.975327] (21), [-0.93790, 96.975327] (21), [-0.93654, 96.975327] (21), [-0.92212, 96.975327] (21), 
length of domains: 1919
Total time: 1.0969	 pickout: 0.1388	 decision: 0.0814	 get_bound: 0.7102	 add_domain: 0.1665
Current lb:-1.1229325532913208
14336 neurons visited
0 diving domains visited
Cumulative time: 13.074620008468628

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 14], [1, 36], [0, 36], [2, 43], [1, 36], [2, 75], [0, 21], [2, 75], [3, 14], [0, 36]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 389.06634521484375 with beta sum per layer: [1246.4661865234375, 1479.162353515625, 424.7461242675781, 743.9885864257812, 4138.3759765625]
optimal alpha/beta time: 0.2862567901611328
This batch time : update_bounds func: 0.6575	 prepare: 0.2107	 bound: 0.2866	 transfer: 0.0150	 finalize: 0.1418
Accumulated time: update_bounds func: 9.2547	 prepare: 1.6517	 bound: 6.1226	 transfer: 0.0150	 finalize: 1.1784
batch bounding time:  0.659099817276001
Current worst splitting domains [lb, ub] (depth):
[-1.12293, 96.975327] (22), [-1.09775, 96.975327] (22), [-1.08906, 96.975327] (22), [-1.08396, 96.975327] (22), [-1.07708, 96.975327] (22), [-1.07269, 96.975327] (22), [-1.06193, 96.975327] (22), [-1.06096, 96.975327] (22), [-1.02413, 96.975327] (22), [-1.01130, 96.975327] (22), [-1.00806, 96.975327] (22), [-0.97770, 96.975327] (22), [-0.95115, 96.975327] (22), [-0.94343, 96.975327] (22), [-0.94185, 96.975327] (22), [-0.92699, 96.975327] (22), [-0.92013, 96.975327] (22), [-0.91699, 96.975327] (22), [-0.91350, 96.975327] (22), [-0.91068, 96.975327] (22), 
length of domains: 2488
Total time: 1.1332	 pickout: 0.1402	 decision: 0.1442	 get_bound: 0.6618	 add_domain: 0.1870
Current lb:-1.1229325532913208
16384 neurons visited
0 diving domains visited
Cumulative time: 14.236002445220947

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 36], [1, 69], [1, 36], [1, 36], [1, 69], [3, 14], [1, 36], [1, 36], [1, 36], [3, 14]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 438.18408203125 with beta sum per layer: [1215.7640380859375, 1409.61279296875, 425.78509521484375, 893.9673461914062, 4372.603515625]
optimal alpha/beta time: 0.2852785587310791
This batch time : update_bounds func: 0.7494	 prepare: 0.2118	 bound: 0.2856	 transfer: 0.0145	 finalize: 0.2342
Accumulated time: update_bounds func: 10.0041	 prepare: 1.8635	 bound: 6.4082	 transfer: 0.0145	 finalize: 1.4126
batch bounding time:  0.7513818740844727
Current worst splitting domains [lb, ub] (depth):
[-1.10974, 96.975327] (23), [-1.07493, 96.975327] (23), [-1.07155, 96.975327] (23), [-1.06832, 96.975327] (23), [-1.05911, 96.975327] (23), [-1.04483, 96.975327] (23), [-1.04303, 96.975327] (23), [-1.04097, 96.975327] (23), [-1.00898, 96.975327] (23), [-1.00711, 96.975327] (23), [-0.98632, 96.975327] (23), [-0.95839, 96.975327] (23), [-0.95596, 96.975327] (23), [-0.94053, 96.975327] (23), [-0.93985, 96.975327] (23), [-0.93586, 96.975327] (23), [-0.92851, 96.975327] (23), [-0.91916, 96.975327] (23), [-0.91350, 96.975327] (23), [-0.90773, 96.975327] (23), 
length of domains: 3129
Total time: 1.1725	 pickout: 0.1444	 decision: 0.1567	 get_bound: 0.7545	 add_domain: 0.1169
Current lb:-1.109737515449524
18432 neurons visited
0 diving domains visited
Cumulative time: 15.439332962036133

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 7], [4, 43], [1, 36], [4, 7], [2, 43], [4, 7], [4, 7], [2, 43], [1, 36], [2, 43]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 478.6776123046875 with beta sum per layer: [1125.5374755859375, 1393.3193359375, 543.998046875, 1036.362548828125, 4509.6337890625]
optimal alpha/beta time: 0.29297351837158203
This batch time : update_bounds func: 0.7929	 prepare: 0.2129	 bound: 0.2933	 transfer: 0.0148	 finalize: 0.2686
Accumulated time: update_bounds func: 10.7970	 prepare: 2.0763	 bound: 6.7015	 transfer: 0.0148	 finalize: 1.6812
batch bounding time:  0.7948062419891357
Current worst splitting domains [lb, ub] (depth):
[-1.09359, 96.975327] (24), [-1.06396, 96.975327] (24), [-1.05521, 96.975327] (24), [-1.05126, 96.975327] (24), [-1.05105, 96.975327] (24), [-1.03598, 96.975327] (24), [-1.02897, 96.975327] (24), [-1.02538, 96.975327] (24), [-0.99962, 96.975327] (24), [-0.98675, 96.975327] (24), [-0.96919, 96.975327] (24), [-0.94134, 96.975327] (24), [-0.91770, 96.975327] (24), [-0.91692, 96.975327] (24), [-0.91105, 96.975327] (24), [-0.89723, 96.975327] (24), [-0.88038, 96.975327] (24), [-0.87963, 96.975327] (24), [-0.87734, 96.975327] (24), [-0.87277, 96.975327] (24), 
length of domains: 3844
Total time: 1.2392	 pickout: 0.1418	 decision: 0.1741	 get_bound: 0.7978	 add_domain: 0.1255
Current lb:-1.0935944318771362
20480 neurons visited
0 diving domains visited
Cumulative time: 16.70963406562805

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 43], [1, 69], [4, 43], [4, 7], [2, 43], [4, 43], [2, 43], [2, 43], [4, 43], [4, 7]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 509.5491943359375 with beta sum per layer: [1084.4237060546875, 1354.6683349609375, 552.3631591796875, 1153.1142578125, 4259.25634765625]
optimal alpha/beta time: 0.286212682723999
This batch time : update_bounds func: 0.7952	 prepare: 0.2166	 bound: 0.2866	 transfer: 0.0146	 finalize: 0.2742
Accumulated time: update_bounds func: 11.5922	 prepare: 2.2929	 bound: 6.9880	 transfer: 0.0146	 finalize: 1.9555
batch bounding time:  0.7970352172851562
Current worst splitting domains [lb, ub] (depth):
[-1.08528, 96.975327] (25), [-1.04324, 96.975327] (25), [-1.04055, 96.975327] (25), [-1.03904, 96.975327] (25), [-1.02433, 96.975327] (25), [-1.02429, 96.975327] (25), [-1.01697, 96.975327] (25), [-1.01509, 96.975327] (25), [-0.98893, 96.975327] (25), [-0.97393, 96.975327] (25), [-0.95614, 96.975327] (25), [-0.92966, 96.975327] (25), [-0.92015, 96.975327] (25), [-0.90761, 96.975327] (25), [-0.90688, 96.975327] (25), [-0.89842, 96.975327] (25), [-0.86956, 96.975327] (25), [-0.86619, 96.975327] (25), [-0.86341, 96.975327] (25), [-0.86009, 96.975327] (25), 
length of domains: 4606
Total time: 1.2673	 pickout: 0.1424	 decision: 0.1931	 get_bound: 0.8000	 add_domain: 0.1317
Current lb:-1.0852786302566528
22528 neurons visited
0 diving domains visited
Cumulative time: 18.008009910583496

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 43], [4, 34], [4, 43], [2, 43], [4, 34], [4, 34], [4, 43], [4, 43], [1, 69], [2, 43]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 496.88482666015625 with beta sum per layer: [1096.6953125, 1357.579345703125, 608.4976806640625, 1042.93798828125, 3769.80126953125]
optimal alpha/beta time: 0.2879469394683838
This batch time : update_bounds func: 0.8137	 prepare: 0.2137	 bound: 0.2882	 transfer: 0.0148	 finalize: 0.2936
Accumulated time: update_bounds func: 12.4059	 prepare: 2.5067	 bound: 7.2763	 transfer: 0.0148	 finalize: 2.2490
batch bounding time:  0.8157129287719727
Current worst splitting domains [lb, ub] (depth):
[-1.07791, 96.975327] (26), [-1.03306, 96.975327] (26), [-1.03201, 96.975327] (26), [-1.01711, 96.975327] (26), [-1.00900, 96.975327] (26), [-1.00702, 96.975327] (26), [-0.99857, 96.975327] (26), [-0.99726, 96.975327] (26), [-0.96440, 96.975327] (26), [-0.95060, 96.975327] (26), [-0.94796, 96.975327] (26), [-0.92117, 96.975327] (26), [-0.89379, 96.975327] (26), [-0.89362, 96.975327] (26), [-0.88962, 96.975327] (26), [-0.86026, 96.975327] (26), [-0.85983, 96.975327] (26), [-0.85168, 96.975327] (26), [-0.84629, 96.975327] (26), [-0.84472, 96.975327] (26), 
length of domains: 5345
Total time: 1.3170	 pickout: 0.1428	 decision: 0.2178	 get_bound: 0.8188	 add_domain: 0.1376
Current lb:-1.0779104232788086
24576 neurons visited
0 diving domains visited
Cumulative time: 19.356862783432007

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 4], [0, 4], [4, 43], [0, 4], [1, 69], [0, 4], [3, 21], [0, 4], [4, 43], [4, 34]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 508.0226745605469 with beta sum per layer: [1158.7408447265625, 1338.956787109375, 660.7556762695312, 743.6435546875, 3875.824462890625]
optimal alpha/beta time: 0.2877216339111328
This batch time : update_bounds func: 0.6714	 prepare: 0.2163	 bound: 0.2880	 transfer: 0.0145	 finalize: 0.1490
Accumulated time: update_bounds func: 13.0773	 prepare: 2.7229	 bound: 7.5643	 transfer: 0.0145	 finalize: 2.3981
batch bounding time:  0.6729686260223389
Current worst splitting domains [lb, ub] (depth):
[-1.05984, 96.975327] (27), [-1.02210, 96.975327] (27), [-1.01550, 96.975327] (27), [-0.99884, 96.975327] (27), [-0.99182, 96.975327] (27), [-0.98887, 96.975327] (27), [-0.97870, 96.975327] (27), [-0.97565, 96.975327] (27), [-0.95428, 96.975327] (27), [-0.92943, 96.975327] (27), [-0.92170, 96.975327] (27), [-0.90256, 96.975327] (27), [-0.88295, 96.975327] (27), [-0.88213, 96.975327] (27), [-0.87018, 96.975327] (27), [-0.84558, 96.975327] (27), [-0.83393, 96.975327] (27), [-0.82941, 96.975327] (27), [-0.82350, 96.975327] (27), [-0.82317, 96.975327] (27), 
length of domains: 6108
Total time: 1.3780	 pickout: 0.1446	 decision: 0.2400	 get_bound: 0.6758	 add_domain: 0.3176
Current lb:-1.0598434209823608
26624 neurons visited
0 diving domains visited
Cumulative time: 20.766164302825928

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 69], [1, 69], [1, 69], [0, 25], [0, 4], [1, 69], [0, 25], [0, 36], [1, 69], [1, 69]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 542.1874389648438 with beta sum per layer: [1040.8646240234375, 1265.9959716796875, 670.7093505859375, 493.48297119140625, 4104.07470703125]
optimal alpha/beta time: 0.2864344120025635
This batch time : update_bounds func: 0.8483	 prepare: 0.2141	 bound: 0.2867	 transfer: 0.0145	 finalize: 0.3297
Accumulated time: update_bounds func: 13.9255	 prepare: 2.9370	 bound: 7.8510	 transfer: 0.0145	 finalize: 2.7278
batch bounding time:  0.8499059677124023
Current worst splitting domains [lb, ub] (depth):
[-1.03163, 96.975327] (28), [-0.98937, 96.975327] (28), [-0.98630, 96.975327] (28), [-0.97476, 96.975327] (28), [-0.96121, 96.975327] (28), [-0.94370, 96.975327] (28), [-0.93790, 96.975327] (28), [-0.92172, 96.975327] (28), [-0.92154, 96.975327] (28), [-0.90547, 96.975327] (28), [-0.90262, 96.975327] (28), [-0.87312, 96.975327] (28), [-0.86314, 96.975327] (28), [-0.84927, 96.975327] (28), [-0.84249, 96.975327] (28), [-0.84123, 96.975327] (28), [-0.84060, 96.975327] (28), [-0.83888, 96.975327] (28), [-0.82548, 96.975327] (28), [-0.81482, 96.975327] (28), 
length of domains: 6902
Total time: 1.2351	 pickout: 0.1462	 decision: 0.0879	 get_bound: 0.8527	 add_domain: 0.1482
Current lb:-1.031630039215088
28672 neurons visited
0 diving domains visited
Cumulative time: 22.034852027893066

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 34], [0, 4], [4, 34], [4, 18], [4, 34], [3, 21], [0, 4], [3, 21], [0, 4], [3, 21]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 577.8414306640625 with beta sum per layer: [917.3717041015625, 1116.348388671875, 642.0174560546875, 503.1065673828125, 4051.006591796875]
optimal alpha/beta time: 0.2888040542602539
This batch time : update_bounds func: 0.8948	 prepare: 0.2163	 bound: 0.2891	 transfer: 0.0145	 finalize: 0.3717
Accumulated time: update_bounds func: 14.8203	 prepare: 3.1534	 bound: 8.1401	 transfer: 0.0145	 finalize: 3.0995
batch bounding time:  0.8970704078674316
Current worst splitting domains [lb, ub] (depth):
[-1.00840, 96.975327] (29), [-0.97164, 96.975327] (29), [-0.96292, 96.975327] (29), [-0.94854, 96.975327] (29), [-0.93679, 96.975327] (29), [-0.93422, 96.975327] (29), [-0.91978, 96.975327] (29), [-0.91276, 96.975327] (29), [-0.90357, 96.975327] (29), [-0.89888, 96.975327] (29), [-0.87766, 96.975327] (29), [-0.84814, 96.975327] (29), [-0.84512, 96.975327] (29), [-0.82978, 96.975327] (29), [-0.82959, 96.975327] (29), [-0.82914, 96.975327] (29), [-0.81456, 96.975327] (29), [-0.81343, 96.975327] (29), [-0.80479, 96.975327] (29), [-0.79637, 96.975327] (29), 
length of domains: 7746
Total time: 1.4907	 pickout: 0.1458	 decision: 0.2893	 get_bound: 0.9004	 add_domain: 0.1553
Current lb:-1.0083963871002197
30720 neurons visited
0 diving domains visited
Cumulative time: 23.559109210968018

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 18], [4, 34], [4, 18], [4, 45], [4, 18], [4, 18], [4, 34], [4, 18], [4, 34], [4, 18]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 584.757080078125 with beta sum per layer: [885.497314453125, 1143.9615478515625, 630.8995971679688, 530.0698852539062, 3654.4794921875]
optimal alpha/beta time: 0.28696680068969727
This batch time : update_bounds func: 0.9016	 prepare: 0.2178	 bound: 0.2873	 transfer: 0.0144	 finalize: 0.3788
Accumulated time: update_bounds func: 15.7219	 prepare: 3.3711	 bound: 8.4274	 transfer: 0.0144	 finalize: 3.4784
batch bounding time:  0.9032659530639648
Current worst splitting domains [lb, ub] (depth):
[-0.98184, 96.975327] (30), [-0.94572, 96.975327] (30), [-0.93514, 96.975327] (30), [-0.92666, 96.975327] (30), [-0.90949, 96.975327] (30), [-0.90533, 96.975327] (30), [-0.89301, 96.975327] (30), [-0.88353, 96.975327] (30), [-0.87735, 96.975327] (30), [-0.87177, 96.975327] (30), [-0.86381, 96.975327] (30), [-0.85003, 96.975327] (30), [-0.82296, 96.975327] (30), [-0.82103, 96.975327] (30), [-0.81690, 96.975327] (30), [-0.80385, 96.975327] (30), [-0.80355, 96.975327] (30), [-0.79796, 96.975327] (30), [-0.79751, 96.975327] (30), [-0.78753, 96.975327] (30), 
length of domains: 8571
Total time: 1.3029	 pickout: 0.1464	 decision: 0.0914	 get_bound: 0.9062	 add_domain: 0.1589
Current lb:-0.9818376302719116
32768 neurons visited
0 diving domains visited
Cumulative time: 24.896600008010864

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 21], [0, 30], [3, 21], [4, 56], [3, 21], [4, 45], [0, 30], [4, 45], [0, 30], [4, 45]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 595.8706665039062 with beta sum per layer: [892.6992797851562, 1250.302734375, 570.9266357421875, 617.9488525390625, 3246.9140625]
optimal alpha/beta time: 0.2890796661376953
This batch time : update_bounds func: 0.6813	 prepare: 0.2201	 bound: 0.2894	 transfer: 0.0141	 finalize: 0.1538
Accumulated time: update_bounds func: 16.4032	 prepare: 3.5912	 bound: 8.7167	 transfer: 0.0141	 finalize: 3.6321
batch bounding time:  0.6829183101654053
Current worst splitting domains [lb, ub] (depth):
[-0.97950, 96.975327] (31), [-0.93265, 96.975327] (31), [-0.90520, 96.975327] (31), [-0.90372, 96.975327] (31), [-0.88992, 96.975327] (31), [-0.88118, 96.975327] (31), [-0.85949, 96.975327] (31), [-0.85100, 96.975327] (31), [-0.84994, 96.975327] (31), [-0.84477, 96.975327] (31), [-0.83596, 96.975327] (31), [-0.82410, 96.975327] (31), [-0.81553, 96.975327] (31), [-0.81515, 96.975327] (31), [-0.81325, 96.975327] (31), [-0.78113, 96.975327] (31), [-0.77185, 96.975327] (31), [-0.77095, 96.975327] (31), [-0.76153, 96.975327] (31), [-0.75737, 96.975327] (31), 
length of domains: 9415
Total time: 1.3488	 pickout: 0.1464	 decision: 0.3531	 get_bound: 0.6859	 add_domain: 0.1634
Current lb:-0.9794958233833313
34816 neurons visited
0 diving domains visited
Cumulative time: 26.291856288909912

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 45], [4, 45], [4, 45], [3, 21], [2, 99], [2, 99], [4, 56], [1, 80], [3, 21], [4, 45]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 606.6162109375 with beta sum per layer: [870.8212890625, 1425.5048828125, 512.773681640625, 681.09619140625, 2978.4677734375]
optimal alpha/beta time: 0.28940486907958984
This batch time : update_bounds func: 0.6843	 prepare: 0.2178	 bound: 0.2897	 transfer: 0.0142	 finalize: 0.1590
Accumulated time: update_bounds func: 17.0875	 prepare: 3.8091	 bound: 9.0064	 transfer: 0.0142	 finalize: 3.7911
batch bounding time:  0.6861042976379395
Current worst splitting domains [lb, ub] (depth):
[-0.96130, 96.975327] (32), [-0.91510, 96.975327] (32), [-0.89725, 96.975327] (32), [-0.88699, 96.975327] (32), [-0.85919, 96.975327] (32), [-0.84595, 96.975327] (32), [-0.84253, 96.975327] (32), [-0.84199, 96.975327] (32), [-0.83487, 96.975327] (32), [-0.82958, 96.975327] (32), [-0.82753, 96.975327] (32), [-0.82697, 96.975327] (32), [-0.82041, 96.975327] (32), [-0.80348, 96.975327] (32), [-0.79785, 96.975327] (32), [-0.76948, 96.975327] (32), [-0.76818, 96.975327] (32), [-0.76249, 96.975327] (32), [-0.75749, 96.975327] (32), [-0.75305, 96.975327] (32), 
length of domains: 10250
Total time: 1.4098	 pickout: 0.1532	 decision: 0.3934	 get_bound: 0.6892	 add_domain: 0.1740
Current lb:-0.9612973928451538
36864 neurons visited
0 diving domains visited
Cumulative time: 27.747413635253906

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 36], [1, 80], [4, 18], [0, 36], [3, 86], [4, 56], [1, 80], [4, 18], [1, 80], [4, 56]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 617.853759765625 with beta sum per layer: [844.2615356445312, 1569.1951904296875, 513.977783203125, 605.455810546875, 2877.8759765625]
optimal alpha/beta time: 0.2929046154022217
This batch time : update_bounds func: 0.6810	 prepare: 0.2169	 bound: 0.2932	 transfer: 0.0145	 finalize: 0.1531
Accumulated time: update_bounds func: 17.7685	 prepare: 4.0259	 bound: 9.2996	 transfer: 0.0145	 finalize: 3.9442
batch bounding time:  0.6826143264770508
Current worst splitting domains [lb, ub] (depth):
[-0.93137, 96.975327] (33), [-0.89083, 96.975327] (33), [-0.87224, 96.975327] (33), [-0.85844, 96.975327] (33), [-0.83700, 96.975327] (33), [-0.81859, 96.975327] (33), [-0.81646, 96.975327] (33), [-0.81058, 96.975327] (33), [-0.80617, 96.975327] (33), [-0.80250, 96.975327] (33), [-0.80190, 96.975327] (33), [-0.79814, 96.975327] (33), [-0.79184, 96.975327] (33), [-0.77741, 96.975327] (33), [-0.77022, 96.975327] (33), [-0.76183, 96.975327] (33), [-0.75842, 96.975327] (33), [-0.75734, 96.975327] (33), [-0.73415, 96.975327] (33), [-0.72800, 96.975327] (33), 
length of domains: 11099
Total time: 1.8065	 pickout: 0.1541	 decision: 0.4169	 get_bound: 0.6855	 add_domain: 0.5500
Current lb:-0.9313705563545227
38912 neurons visited
0 diving domains visited
Cumulative time: 29.587740421295166

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 56], [4, 56], [4, 45], [1, 80], [2, 66], [4, 68], [4, 45], [4, 68], [1, 80], [0, 36]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 630.3016357421875 with beta sum per layer: [892.3536376953125, 1562.6502685546875, 516.141845703125, 458.85235595703125, 2792.882080078125]
optimal alpha/beta time: 0.2885715961456299
This batch time : update_bounds func: 0.6752	 prepare: 0.2170	 bound: 0.2889	 transfer: 0.0148	 finalize: 0.1511
Accumulated time: update_bounds func: 18.4437	 prepare: 4.2429	 bound: 9.5885	 transfer: 0.0148	 finalize: 4.0953
batch bounding time:  0.6768388748168945
Current worst splitting domains [lb, ub] (depth):
[-0.89459, 96.975327] (34), [-0.85592, 96.975327] (34), [-0.84898, 96.975327] (34), [-0.83145, 96.975327] (34), [-0.82724, 96.975327] (34), [-0.80867, 96.975327] (34), [-0.80489, 96.975327] (34), [-0.79716, 96.975327] (34), [-0.79367, 96.975327] (34), [-0.78407, 96.975327] (34), [-0.78336, 96.975327] (34), [-0.77941, 96.975327] (34), [-0.77468, 96.975327] (34), [-0.77256, 96.975327] (34), [-0.76089, 96.975327] (34), [-0.75984, 96.975327] (34), [-0.75353, 96.975327] (34), [-0.75277, 96.975327] (34), [-0.74360, 96.975327] (34), [-0.74178, 96.975327] (34), 
length of domains: 11956
Total time: 1.5039	 pickout: 0.1497	 decision: 0.0923	 get_bound: 0.6798	 add_domain: 0.5821
Current lb:-0.8945943713188171
40960 neurons visited
0 diving domains visited
Cumulative time: 31.12801241874695

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 30], [3, 86], [4, 56], [4, 56], [1, 80], [4, 68], [2, 76], [4, 56], [1, 80], [4, 68]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 612.7894287109375 with beta sum per layer: [820.648681640625, 1539.8232421875, 472.5521545410156, 459.17108154296875, 2948.03857421875]
optimal alpha/beta time: 0.29010772705078125
This batch time : update_bounds func: 0.6766	 prepare: 0.2170	 bound: 0.2904	 transfer: 0.0140	 finalize: 0.1519
Accumulated time: update_bounds func: 19.1203	 prepare: 4.4599	 bound: 9.8789	 transfer: 0.0140	 finalize: 4.2473
batch bounding time:  0.6782965660095215
Current worst splitting domains [lb, ub] (depth):
[-0.86080, 96.975327] (35), [-0.84192, 96.975327] (35), [-0.81206, 96.975327] (35), [-0.79851, 96.975327] (35), [-0.79679, 96.975327] (35), [-0.79431, 96.975327] (35), [-0.77600, 96.975327] (35), [-0.77320, 96.975327] (35), [-0.77170, 96.975327] (35), [-0.77170, 96.975327] (35), [-0.75827, 96.975327] (35), [-0.74753, 96.975327] (35), [-0.74736, 96.975327] (35), [-0.74685, 96.975327] (35), [-0.74109, 96.975327] (35), [-0.74070, 96.975327] (35), [-0.73995, 96.975327] (35), [-0.73722, 96.975327] (35), [-0.72962, 96.975327] (35), [-0.72509, 96.975327] (35), 
length of domains: 12826
Total time: 1.1029	 pickout: 0.1482	 decision: 0.0915	 get_bound: 0.6813	 add_domain: 0.1820
Current lb:-0.8608043789863586
43008 neurons visited
0 diving domains visited
Time out!!!!!!!!
Image 20 pidx 7 verify end, final lower bound -0.8608043789863586, upper bound 96.97532653808594, time: 32.57211399078369
20 -0.8608043789863586
[[   20.             0.             0.             6.2169416
      0.            -1.                    inf            inf]
 [   20.             0.             0.           261.96762252
      0.            -2.                    inf            inf]
 [   20.            -0.86080438 43008.            32.57211399
      0.             7.            96.97532654            inf]]
final verified acc: 0.0%[1]
Total verification count: 1 total verified: 0
mean time [cnt:1] (excluding attack success): 300.75667810440063
