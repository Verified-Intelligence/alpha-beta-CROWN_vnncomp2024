Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: specify-target
  complete_verifier: bab
  enable_incomplete_verification: false
  get_crown_verified_acc: false
model:
  path: cifar_wide.pth
  name: cifar_model_wide
data:
  start: 0
  end: 1
  num_outputs: 10
  mean: [0.485, 0.456, 0.406]
  std: [0.225, 0.225, 0.225]
  pkl_path: wide_100.pkl
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: null
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 30
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: fsb
    candidates: 1
    reduceop: min
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Tue May  3 01:33:24 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
No epsilon defined!
Files already downloaded and verified
Overwrite epsilon that saved in .pkl file, they should be after normalized!
Task length: 1
saving results to Verified_ret_[cifar_model_wide]_start=0_end=1_iter=20_b=1024_timeout=30_branching=fsb-min-1_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 6, correct label 6, image norm 1910.714599609375, logits tensor([-0.2631, -1.7949,  0.9299,  0.4320,  1.0850, -0.0413,  2.4011,  0.0753,
        -2.0413, -0.7826], device='cuda:0', grad_fn=<SelectBackward>)
##### [0:0] Tested against 0 ######
Model prediction is: tensor([[-0.2631, -1.7949,  0.9299,  0.4320,  1.0850, -0.0413,  2.4011,  0.0753,
         -2.0413, -0.7826]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-1.0592]], device='cuda:0') None
best_l after optimization: 0.7651883959770203 with beta sum per layer: []
alpha/beta optimization time: 7.516599178314209
initial alpha-CROWN bounds: tensor([[-0.7652]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-0.7652, device='cuda:0', grad_fn=<MinBackward1>)
-0.765188455581665
layer 0 size torch.Size([4096]) unstable 1069
layer 1 size torch.Size([2048]) unstable 369
layer 2 size torch.Size([100]) unstable 42
-----------------
# of unstable neurons: 1480
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 16, 16]) pre split depth:  6
batch:  torch.Size([1, 16, 16, 16]) post split depth:  6
splitting decisions: 
split level 0: [2, 31] 
split level 1: [2, 6] 
split level 2: [2, 83] 
split level 3: [2, 58] 
split level 4: [2, 10] 
split level 5: [2, 45] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: -28.79168701171875 with beta sum per layer: [0.0, 0.0, 7.500908374786377]
alpha/beta optimization time: 0.252366304397583
This batch time : update_bounds func: 0.2652	 prepare: 0.0056	 bound: 0.2527	 transfer: 0.0025	 finalize: 0.0041
Accumulated time: update_bounds func: 0.2652	 prepare: 0.0056	 bound: 0.2527	 transfer: 0.0025	 finalize: 0.0041
batch bounding time:  0.26538896560668945
Current worst splitting domains [lb, ub] (depth):
[-0.30961,   inf] (7), [-0.18938,   inf] (7), [-0.13728,   inf] (7), [-0.10978,   inf] (7), [-0.09173,   inf] (7), 
length of domains: 5
Total time: 0.3447	 pickout: 0.0009	 decision: 0.0709	 get_bound: 0.2725	 add_domain: 0.0003
Current lb:-0.3096051514148712
64 neurons visited
0 diving domains visited
Global ub: tensor([[inf]], device='cuda:0'), batch ub: inf
Cumulative time: 9.629394769668579

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([5, 16, 16, 16]) pre split depth:  4
batch:  torch.Size([5, 16, 16, 16]) post split depth:  4
splitting decisions: 
split level 0: [2, 98] [2, 98] [2, 98] [2, 98] [2, 98] 
split level 1: [2, 89] [2, 89] [2, 89] [2, 89] [2, 89] 
split level 2: [2, 23] [2, 23] [2, 23] [2, 23] [2, 23] 
split level 3: [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] 
regular batch size: 2*40, diving batch size 1*0
best_l after optimization: -10.821161270141602 with beta sum per layer: [0.0, 0.0, 40.62375259399414]
alpha/beta optimization time: 0.24510908126831055
This batch time : update_bounds func: 0.2610	 prepare: 0.0078	 bound: 0.2454	 transfer: 0.0030	 finalize: 0.0046
Accumulated time: update_bounds func: 0.5262	 prepare: 0.0133	 bound: 0.4981	 transfer: 0.0030	 finalize: 0.0086
batch bounding time:  0.2611517906188965
Current worst splitting domains [lb, ub] (depth):
[-0.07756,   inf] (12), [-0.02766,   inf] (12), [-0.01833,   inf] (12), [-0.01713,   inf] (12), 
length of domains: 4
Total time: 0.3312	 pickout: 0.0015	 decision: 0.0601	 get_bound: 0.2694	 add_domain: 0.0002
Current lb:-0.07756107300519943
144 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 9.960999965667725

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([4, 16, 16, 16]) pre split depth:  4
batch:  torch.Size([4, 16, 16, 16]) post split depth:  4
splitting decisions: 
split level 0: [2, 40] [2, 40] [2, 40] [2, 40] 
split level 1: [2, 42] [2, 42] [2, 42] [2, 42] 
split level 2: [2, 92] [2, 92] [2, 92] [2, 92] 
split level 3: [1, 421] [2, 3] [2, 3] [1, 1253] 
regular batch size: 2*32, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -13.350126266479492 with beta sum per layer: [0.0, 0.0, 20.044347763061523]
alpha/beta optimization time: 0.008918523788452148
This batch time : update_bounds func: 0.0219	 prepare: 0.0068	 bound: 0.0092	 transfer: 0.0015	 finalize: 0.0042
Accumulated time: update_bounds func: 0.5481	 prepare: 0.0201	 bound: 0.5072	 transfer: 0.0015	 finalize: 0.0129
batch bounding time:  0.021993398666381836
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0844	 pickout: 0.0012	 decision: 0.0544	 get_bound: 0.0287	 add_domain: 0.0000
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 10.04579472541809

Image 0 label 0 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 10.110213041305542
0 1.0000000116860974e-07
Result: image 0 verification success (with branch and bound)!
Wall time: 10.156982660293579

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [0]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 10.110213041305542
