Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: false
  get_crown_verified_acc: false
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cifar_model_deep
  path: cifar_deep.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 20
  end: 21
  select_instance: null
  num_outputs: 10
  mean: [0.485, 0.456, 0.406]
  std: [0.225, 0.225, 0.225]
  pkl_path: deep_100.pkl
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: specify-target
  norm: .inf
  epsilon: null
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 54.0
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    _tmp_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: fsb
    candidates: 1
    reduceop: min
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Sep 15 00:22:15 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(8, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=512, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
No epsilon defined!
Files already downloaded and verified
Overwrite epsilon that saved in .pkl file, they should be after normalized!
Internal results will be saved to Verified_ret_[cifar_model_deep]_start=20_end=21_iter=20_b=1024_timeout=54.0_branching=fsb-min-1_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1

Properties batch 0, size 1
Remaining timeout: 52.76911211013794
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0. -1.  0.  0.  0.  1.  0.]]]
thresholds: [0] ######
Model prediction is: tensor([ 1.21560407, -0.26283705,  0.42838904, -0.99122924,  0.45992526,
        -1.35115933, -0.35104254, -1.05085170,  1.50520909,  0.39801991],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [160]; unstable size 160; total size 2048 (torch.Size([1, 8, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 213 total_size 2048 output_shape (8, 16, 16)
layer /input.4 start_node /input.16 using sparse-spec alpha with unstable size 234 total_size 2048 output_shape (8, 16, 16)
layer /input.4 start_node /input.24 using sparse-spec alpha with unstable size 67 total_size 512 output_shape (8, 8, 8)
layer /input.4 start_node /input.28 using sparse-spec alpha with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /31 using full alpha with unstable size None total_size 1 output_shape 1
layer /input.12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 (torch.Size([1, 8, 16, 16]))
layer /input.12 start_node /input.16 using sparse-spec alpha with unstable size 234 total_size 2048 output_shape (8, 16, 16)
layer /input.12 start_node /input.24 using sparse-spec alpha with unstable size 67 total_size 512 output_shape (8, 8, 8)
layer /input.12 start_node /input.28 using sparse-spec alpha with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.12 start_node /31 using full alpha with unstable size None total_size 1 output_shape 1
layer /input.20 using sparse-features alpha with shape [234]; unstable size 234; total size 2048 (torch.Size([1, 8, 16, 16]))
layer /input.20 start_node /input.24 using sparse-spec alpha with unstable size 67 total_size 512 output_shape (8, 8, 8)
layer /input.20 start_node /input.28 using sparse-spec alpha with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.20 start_node /31 using full alpha with unstable size None total_size 1 output_shape 1
layer /20 using sparse-features alpha with shape [67]; unstable size 67; total size 512 (torch.Size([1, 8, 8, 8]))
layer /20 start_node /input.28 using sparse-spec alpha with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /20 start_node /31 using full alpha with unstable size None total_size 1 output_shape 1
layer /30 using sparse-features alpha with shape [32]; unstable size 32; total size 100 (torch.Size([1, 100]))
layer /30 start_node /31 using full alpha with unstable size None total_size 1 output_shape 1
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.44273138]], device='cuda:0') None
best_l after optimization: -0.28995847702026367 with beta sum per layer: []
alpha/beta optimization time: 9.850730895996094
initial alpha-CROWN bounds: tensor([[-0.28995848]], device='cuda:0')
Worst class: (+ rhs) -0.28995847702026367
Keeping slopes for these layers: ['/31']
layer 0 size torch.Size([2048]) unstable 160
layer 1 size torch.Size([2048]) unstable 209
layer 2 size torch.Size([2048]) unstable 232
layer 3 size torch.Size([512]) unstable 65
layer 4 size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 697
-----------------

batch:  torch.Size([1, 8, 16, 16]) pre split depth:  6
batch:  torch.Size([1, 8, 16, 16]) post split depth:  6
splitting decisions: 
split level 0: [4, 10] 
split level 1: [4, 49] 
split level 2: [4, 51] 
split level 3: [4, 83] 
split level 4: [4, 59] 
split level 5: [3, 476] 
(64, 3, 32, 32) torch.Size([64, 1, 10]) torch.Size([64, 1])
best_l after optimization: 7.825328350067139 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 1.1966439485549927]
alpha/beta optimization time: 0.5480837821960449
pruning_in_iteration open status: True
ratio of positive domain = 56 / 64 = 0.875
pruning-in-iteration extra time: 0.013978719711303711
Tensors transferred: pre=0.8247M lA=0.0515M alpha=0.0862M beta=0.0004M
This batch time : update_bounds func: 0.5628	 prepare: 0.0080	 bound: 0.5486	 transfer: 0.0037	 finalize: 0.0024
Accumulated time: update_bounds func: 0.5628	 prepare: 0.0080	 bound: 0.5486	 transfer: 0.0037	 finalize: 0.0024
batch bounding time:  0.5628640651702881
Current worst splitting domains lb-rhs (depth):
-0.03663 (6), -0.03663 (6), -0.02502 (6), -0.02185 (6), -0.01897 (6), -0.01497 (6), -0.00374 (6), -0.00269 (6), 
length of domains: 8
Total time: 0.7907	 pickout: 0.0015	 decision: 0.2126	 get_bound: 0.5728	 add_domain: 0.0038
Accumulated time:	 pickout: 0.0015	 decision: 0.2126	 get_bound: 0.5728	 add_domain: 0.0038
Current (lb-rhs): -0.03663146495819092
56 domains visited
Cumulative time: 12.269188165664673

batch:  torch.Size([8, 8, 16, 16]) pre split depth:  3
batch:  torch.Size([8, 8, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [3, 93] [3, 92] [3, 92] [3, 93] [3, 93] [3, 92] [3, 93] [3, 93] 
split level 1: [3, 92] [3, 93] [2, 292] [3, 92] [3, 92] [3, 93] [3, 92] [3, 92] 
split level 2: [3, 101] [1, 425] [3, 469] [2, 308] [3, 101] [1, 425] [2, 308] [2, 308] 
(64, 3, 32, 32) torch.Size([64, 1, 10]) torch.Size([64, 1])
best_l after optimization: 0.10136115550994873 with beta sum per layer: [0.0, 2.054750442504883, 0.0, 1.005603551864624, 9.281854629516602]
alpha/beta optimization time: 0.37669944763183594
pruning_in_iteration open status: True
ratio of positive domain = 34 / 64 = 0.53125
pruning-in-iteration extra time: 0.014246702194213867
Tensors transferred: pre=0.8247M lA=0.1933M alpha=0.0862M beta=0.0007M
This batch time : update_bounds func: 0.3922	 prepare: 0.0094	 bound: 0.3774	 transfer: 0.0027	 finalize: 0.0026
Accumulated time: update_bounds func: 0.9550	 prepare: 0.0174	 bound: 0.9261	 transfer: 0.0064	 finalize: 0.0049
batch bounding time:  0.39229440689086914
Current worst splitting domains lb-rhs (depth):
-0.02685 (9), -0.02677 (9), -0.02081 (9), -0.02077 (9), -0.02000 (9), -0.01979 (9), -0.01930 (9), -0.01915 (9), -0.01573 (9), -0.01558 (9), -0.01320 (9), -0.01310 (9), -0.01303 (9), -0.01236 (9), -0.01206 (9), -0.01161 (9), -0.01026 (9), -0.01014 (9), -0.00935 (9), -0.00794 (9), 
length of domains: 30
Total time: 0.5320	 pickout: 0.0017	 decision: 0.1246	 get_bound: 0.4000	 add_domain: 0.0057
Accumulated time:	 pickout: 0.0032	 decision: 0.3372	 get_bound: 0.9727	 add_domain: 0.0095
Current (lb-rhs): -0.026845574378967285
90 domains visited
Cumulative time: 12.80173134803772

batch:  torch.Size([30, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([30, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1945] [1, 153] [2, 1945] [2, 1945] [1, 153] [1, 153] [2, 1945] [2, 1945] [2, 1945] [2, 1945] 
(60, 3, 32, 32) torch.Size([60, 1, 10]) torch.Size([60, 1])
best_l after optimization: -0.14468276500701904 with beta sum per layer: [0.0, 4.18001127243042, 0.0, 1.9772675037384033, 3.3729753494262695]
alpha/beta optimization time: 0.3772764205932617
pruning_in_iteration open status: True
ratio of positive domain = 29 / 60 = 0.4833333333333333
pruning-in-iteration extra time: 0.01386880874633789
Tensors transferred: pre=0.7732M lA=0.1997M alpha=0.0808M beta=0.0007M
This batch time : update_bounds func: 0.3919	 prepare: 0.0089	 bound: 0.3778	 transfer: 0.0025	 finalize: 0.0026
Accumulated time: update_bounds func: 1.3469	 prepare: 0.0263	 bound: 1.3039	 transfer: 0.0089	 finalize: 0.0075
batch bounding time:  0.39194512367248535
Current worst splitting domains lb-rhs (depth):
-0.02328 (10), -0.02318 (10), -0.02313 (10), -0.02302 (10), -0.01741 (10), -0.01729 (10), -0.01727 (10), -0.01715 (10), -0.01657 (10), -0.01629 (10), -0.01547 (10), -0.01526 (10), -0.01235 (10), -0.01208 (10), -0.00994 (10), -0.00948 (10), -0.00926 (10), -0.00910 (10), -0.00815 (10), -0.00782 (10), 
length of domains: 31
Total time: 0.4648	 pickout: 0.0018	 decision: 0.0655	 get_bound: 0.3920	 add_domain: 0.0055
Accumulated time:	 pickout: 0.0051	 decision: 0.4027	 get_bound: 1.3647	 add_domain: 0.0150
Current (lb-rhs): -0.023278355598449707
119 domains visited
Cumulative time: 13.267080068588257

batch:  torch.Size([31, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([31, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [1, 153] [2, 1945] [3, 101] [2, 1945] [3, 101] [1, 153] [1, 153] [3, 101] [1, 153] [3, 101] 
(62, 3, 32, 32) torch.Size([62, 1, 10]) torch.Size([62, 1])
best_l after optimization: 0.5603812336921692 with beta sum per layer: [0.0, 5.8684234619140625, 0.0, 1.816756248474121, 1.7272794246673584]
alpha/beta optimization time: 0.38258957862854004
pruning_in_iteration open status: True
ratio of positive domain = 27 / 62 = 0.4354838709677419
pruning-in-iteration extra time: 0.013851165771484375
Tensors transferred: pre=0.7989M lA=0.2255M alpha=0.0835M beta=0.0008M
This batch time : update_bounds func: 0.3981	 prepare: 0.0094	 bound: 0.3831	 transfer: 0.0026	 finalize: 0.0028
Accumulated time: update_bounds func: 1.7450	 prepare: 0.0357	 bound: 1.6870	 transfer: 0.0115	 finalize: 0.0103
batch bounding time:  0.3981189727783203
Current worst splitting domains lb-rhs (depth):
-0.01991 (11), -0.01976 (11), -0.01976 (11), -0.01962 (11), -0.01399 (11), -0.01390 (11), -0.01375 (11), -0.01347 (11), -0.01331 (11), -0.01303 (11), -0.01293 (11), -0.01276 (11), -0.01260 (11), -0.01246 (11), -0.00915 (11), -0.00896 (11), -0.00874 (11), -0.00851 (11), -0.00668 (11), -0.00638 (11), 
length of domains: 35
Total time: 0.4685	 pickout: 0.0018	 decision: 0.0626	 get_bound: 0.3982	 add_domain: 0.0059
Accumulated time:	 pickout: 0.0069	 decision: 0.4653	 get_bound: 1.7629	 add_domain: 0.0209
Current (lb-rhs): -0.01991403102874756
146 domains visited
Cumulative time: 13.736134052276611

batch:  torch.Size([35, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([35, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [4, 41] [3, 101] [1, 153] [3, 101] [2, 1945] [4, 41] [3, 101] [1, 153] [3, 101] [1, 153] 
(70, 3, 32, 32) torch.Size([70, 1, 10]) torch.Size([70, 1])
best_l after optimization: 1.6057813167572021 with beta sum per layer: [0.0, 7.934117794036865, 0.0, 2.033198833465576, 1.5680711269378662]
alpha/beta optimization time: 0.3788321018218994
pruning_in_iteration open status: True
ratio of positive domain = 41 / 70 = 0.5857142857142856
pruning-in-iteration extra time: 0.013683795928955078
Tensors transferred: pre=0.9020M lA=0.1868M alpha=0.0943M beta=0.0009M
This batch time : update_bounds func: 0.3953	 prepare: 0.0101	 bound: 0.3794	 transfer: 0.0028	 finalize: 0.0029
Accumulated time: update_bounds func: 2.1403	 prepare: 0.0458	 bound: 2.0664	 transfer: 0.0143	 finalize: 0.0132
batch bounding time:  0.39539289474487305
Current worst splitting domains lb-rhs (depth):
-0.01661 (12), -0.01643 (12), -0.01643 (12), -0.01628 (12), -0.01011 (12), -0.00998 (12), -0.00997 (12), -0.00990 (12), -0.00984 (12), -0.00972 (12), -0.00953 (12), -0.00942 (12), -0.00924 (12), -0.00905 (12), -0.00525 (12), -0.00502 (12), -0.00496 (12), -0.00479 (12), -0.00350 (12), -0.00275 (12), 
length of domains: 29
Total time: 0.4679	 pickout: 0.0019	 decision: 0.0657	 get_bound: 0.3954	 add_domain: 0.0049
Accumulated time:	 pickout: 0.0087	 decision: 0.5310	 get_bound: 2.1583	 add_domain: 0.0258
Current (lb-rhs): -0.016606569290161133
187 domains visited
Cumulative time: 14.204779863357544

batch:  torch.Size([29, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([29, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [1, 425] [3, 494] [1, 425] [3, 467] [1, 425] [3, 494] [3, 467] [3, 494] [3, 467] [3, 494] 
(58, 3, 32, 32) torch.Size([58, 1, 10]) torch.Size([58, 1])
best_l after optimization: 1.1217432022094727 with beta sum per layer: [0.0, 6.52152681350708, 0.0, 1.737034797668457, 1.0581287145614624]
alpha/beta optimization time: 0.3892641067504883
pruning_in_iteration open status: True
ratio of positive domain = 35 / 58 = 0.603448275862069
pruning-in-iteration extra time: 0.01418924331665039
Tensors transferred: pre=0.7474M lA=0.1482M alpha=0.0781M beta=0.0009M
This batch time : update_bounds func: 0.4038	 prepare: 0.0090	 bound: 0.3898	 transfer: 0.0024	 finalize: 0.0025
Accumulated time: update_bounds func: 2.5440	 prepare: 0.0548	 bound: 2.4562	 transfer: 0.0167	 finalize: 0.0157
batch bounding time:  0.40383267402648926
Current worst splitting domains lb-rhs (depth):
-0.01455 (13), -0.01439 (13), -0.01427 (13), -0.01412 (13), -0.00806 (13), -0.00787 (13), -0.00784 (13), -0.00783 (13), -0.00769 (13), -0.00764 (13), -0.00742 (13), -0.00724 (13), -0.00720 (13), -0.00707 (13), -0.00309 (13), -0.00289 (13), -0.00269 (13), -0.00243 (13), -0.00120 (13), -0.00080 (13), 
length of domains: 23
Total time: 0.4718	 pickout: 0.0018	 decision: 0.0615	 get_bound: 0.4039	 add_domain: 0.0046
Accumulated time:	 pickout: 0.0106	 decision: 0.5925	 get_bound: 2.5622	 add_domain: 0.0304
Current (lb-rhs): -0.014545559883117676
222 domains visited
Cumulative time: 14.677146673202515

batch:  torch.Size([23, 8, 16, 16]) pre split depth:  2
batch:  torch.Size([23, 8, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [1, 119] [1, 119] [2, 170] [4, 41] [3, 494] [1, 119] [1, 119] [4, 41] [3, 494] [1, 119] 
split level 1: [3, 469] [3, 469] [1, 119] [3, 469] [4, 17] [3, 469] [3, 469] [3, 469] [4, 17] [4, 17] 
(92, 3, 32, 32) torch.Size([92, 1, 10]) torch.Size([92, 1])
best_l after optimization: 3.5194790363311768 with beta sum per layer: [0.0, 5.501725196838379, 0.0, 3.168736457824707, 0.922971248626709]
alpha/beta optimization time: 0.3800680637359619
pruning_in_iteration open status: True
ratio of positive domain = 68 / 92 = 0.7391304347826086
pruning-in-iteration extra time: 0.013870954513549805
Tensors transferred: pre=1.1855M lA=0.1546M alpha=0.1239M beta=0.0017M
This batch time : update_bounds func: 0.4006	 prepare: 0.0125	 bound: 0.3807	 transfer: 0.0034	 finalize: 0.0038
Accumulated time: update_bounds func: 2.9446	 prepare: 0.0673	 bound: 2.8369	 transfer: 0.0201	 finalize: 0.0194
batch bounding time:  0.40064358711242676
Current worst splitting domains lb-rhs (depth):
-0.01031 (15), -0.01020 (15), -0.01019 (15), -0.01005 (15), -0.00995 (15), -0.00985 (15), -0.00983 (15), -0.00968 (15), -0.00386 (15), -0.00381 (15), -0.00369 (15), -0.00364 (15), -0.00362 (15), -0.00358 (15), -0.00354 (15), -0.00345 (15), -0.00345 (15), -0.00334 (15), -0.00326 (15), -0.00305 (15), 
length of domains: 24
Total time: 0.5228	 pickout: 0.0018	 decision: 0.1080	 get_bound: 0.4083	 add_domain: 0.0047
Accumulated time:	 pickout: 0.0123	 decision: 0.7005	 get_bound: 2.9705	 add_domain: 0.0351
Current (lb-rhs): -0.01031482219696045
290 domains visited
Cumulative time: 15.200602293014526

batch:  torch.Size([24, 8, 16, 16]) pre split depth:  2
batch:  torch.Size([24, 8, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [1, 395] [3, 494] [4, 90] [4, 90] [4, 41] [3, 494] [4, 90] [3, 494] [1, 395] [3, 494] 
split level 1: [4, 17] [1, 168] [3, 74] [4, 41] [3, 74] [4, 17] [3, 467] [1, 168] [4, 17] [1, 168] 
(96, 3, 32, 32) torch.Size([96, 1, 10]) torch.Size([96, 1])
best_l after optimization: 4.850404739379883 with beta sum per layer: [0.0, 5.54643440246582, 0.0, 2.5092437267303467, 0.26895588636398315]
alpha/beta optimization time: 0.3783907890319824
pruning_in_iteration open status: True
ratio of positive domain = 76 / 96 = 0.7916666666666666
pruning-in-iteration extra time: 0.013734102249145508
Tensors transferred: pre=1.2371M lA=0.1289M alpha=0.1293M beta=0.0018M
This batch time : update_bounds func: 0.3989	 prepare: 0.0129	 bound: 0.3789	 transfer: 0.0031	 finalize: 0.0038
Accumulated time: update_bounds func: 3.3435	 prepare: 0.0802	 bound: 3.2158	 transfer: 0.0232	 finalize: 0.0233
batch bounding time:  0.3989710807800293
Current worst splitting domains lb-rhs (depth):
-0.00633 (17), -0.00632 (17), -0.00627 (17), -0.00626 (17), -0.00619 (17), -0.00608 (17), -0.00599 (17), -0.00581 (17), -0.00442 (17), -0.00435 (17), -0.00430 (17), -0.00420 (17), -0.00414 (17), -0.00411 (17), -0.00350 (17), -0.00325 (17), -0.00088 (17), -0.00083 (17), -0.00068 (17), -0.00056 (17), 
length of domains: 20
Total time: 0.5233	 pickout: 0.0018	 decision: 0.1095	 get_bound: 0.4069	 add_domain: 0.0052
Accumulated time:	 pickout: 0.0141	 decision: 0.8100	 get_bound: 3.3773	 add_domain: 0.0403
Current (lb-rhs): -0.006332278251647949
366 domains visited
Cumulative time: 15.724599838256836

batch:  torch.Size([20, 8, 16, 16]) pre split depth:  2
batch:  torch.Size([20, 8, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [4, 90] [1, 395] [3, 467] [4, 90] [4, 90] [1, 395] [4, 90] [3, 467] [1, 395] [1, 395] 
split level 1: [4, 41] [4, 17] [1, 168] [3, 83] [4, 41] [4, 17] [3, 83] [1, 168] [4, 17] [4, 17] 
(80, 3, 32, 32) torch.Size([80, 1, 10]) torch.Size([80, 1])
best_l after optimization: 5.501618385314941 with beta sum per layer: [0.0, 5.321170330047607, 0.0, 0.9400107860565186, 0.20640918612480164]
alpha/beta optimization time: 0.3774757385253906
pruning_in_iteration open status: True
ratio of positive domain = 66 / 80 = 0.825
pruning-in-iteration extra time: 0.01379704475402832
Tensors transferred: pre=1.0309M lA=0.0902M alpha=0.1077M beta=0.0017M
This batch time : update_bounds func: 0.3950	 prepare: 0.0110	 bound: 0.3780	 transfer: 0.0028	 finalize: 0.0031
Accumulated time: update_bounds func: 3.7385	 prepare: 0.0912	 bound: 3.5939	 transfer: 0.0260	 finalize: 0.0263
batch bounding time:  0.3950612545013428
Current worst splitting domains lb-rhs (depth):
-0.00247 (19), -0.00247 (19), -0.00244 (19), -0.00242 (19), -0.00238 (19), -0.00224 (19), -0.00169 (19), -0.00152 (19), -0.00061 (19), -0.00053 (19), -0.00049 (19), -0.00036 (19), -0.00034 (19), -0.00026 (19), 
length of domains: 14
Total time: 0.5111	 pickout: 0.0017	 decision: 0.1034	 get_bound: 0.4018	 add_domain: 0.0042
Accumulated time:	 pickout: 0.0158	 decision: 0.9134	 get_bound: 3.7792	 add_domain: 0.0445
Current (lb-rhs): -0.002474665641784668
432 domains visited
Cumulative time: 16.236329078674316

batch:  torch.Size([14, 8, 16, 16]) pre split depth:  2
batch:  torch.Size([14, 8, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [3, 467] [3, 467] [4, 90] [4, 90] [4, 90] [4, 90] [4, 90] [4, 90] [4, 90] [4, 90] 
split level 1: [1, 411] [1, 411] [4, 41] [4, 41] [4, 41] [4, 41] [4, 41] [4, 41] [4, 41] [4, 41] 
(56, 3, 32, 32) torch.Size([56, 1, 10]) torch.Size([56, 1])

all verified at 0th iter
best_l after optimization: 7.4155755043029785 with beta sum per layer: [0.0, 5.489950656890869, 0.0, 0.0, 0.06378739327192307]
alpha/beta optimization time: 0.010195732116699219
pruning_in_iteration open status: False
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.00010657310485839844
Tensors transferred: pre=0.7216M lA=0.3608M alpha=0.0754M beta=0.0011M
This batch time : update_bounds func: 0.0236	 prepare: 0.0083	 bound: 0.0107	 transfer: 0.0023	 finalize: 0.0022
Accumulated time: update_bounds func: 3.7621	 prepare: 0.0995	 bound: 3.6046	 transfer: 0.0283	 finalize: 0.0285
batch bounding time:  0.023660659790039062
length of domains: 0
Total time: 0.1260	 pickout: 0.0017	 decision: 0.0941	 get_bound: 0.0286	 add_domain: 0.0016
Accumulated time:	 pickout: 0.0175	 decision: 1.0075	 get_bound: 3.8078	 add_domain: 0.0461
No domains left, verification finished!
488 domains visited
Cumulative time: 16.36256194114685

Result: safe in 19.0358 seconds<frozen importlib._bootstrap>:219: RuntimeWarning: numpy.ufunc size changed, may indicate binary incompatibility. Expected 216 from C header, got 232 from PyObject
/home/zhouxingshi/miniconda3/envs/zshi/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)

############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time (total 1): 19.035638949259308, max time: 19.035829305648804
safe (total 1): [0]
