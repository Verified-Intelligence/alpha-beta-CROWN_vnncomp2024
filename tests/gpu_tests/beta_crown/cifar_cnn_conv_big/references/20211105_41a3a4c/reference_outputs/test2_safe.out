/home/huan/projects/CROWN-GENERAL/complete_verifier/utils.py:365: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp / std).reshape(1, -1, 1, 1)
Experiments at Thu Nov  4 23:36:47 2021 on huan-Naples-server
Sequential(
  (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(32, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): ReLU()
  (8): Flatten()
  (9): Linear(in_features=4096, out_features=512, bias=True)
  (10): ReLU()
  (11): Linear(in_features=512, out_features=512, bias=True)
  (12): ReLU()
  (13): Linear(in_features=512, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([1000, 3, 32, 32]) torch.Size([1000]) torch.Size([1000])
X range: tensor(2.7537) tensor(-2.4291) tensor(0.0238)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0388]],

         [[0.0393]],

         [[0.0390]]]]), data_max = tensor([[[[2.5141]],

         [[2.5968]],

         [[2.7537]]]]), data_min = tensor([[[[-2.4291]],

         [[-2.4183]],

         [[-2.2214]]]])
Task length: 1
saving results to Verified_ret_[cifar_conv_big]_start=580_end=581_iter=20_b=64_int-beta=False_timeout=180_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 580 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  4  correct label  4 logits tensor([-1.7239, -4.4812,  1.2682, -0.2974,  1.5516, -0.5039,  1.0932, -0.1089,
        -4.0056, -3.7354], device='cuda:0', grad_fn=<SelectBackward>)
False
##### PGD attack: True label: 4, Tested against: ['all'] ######
pgd prediction: tensor([-1.6521, -4.4915,  1.3081, -0.2770,  1.5158, -0.4826,  1.1429, -0.2052,
        -3.9454, -3.6461], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([3.1679, 6.0073, 0.2077, 1.7928,    inf, 1.9984, 0.3729, 1.7210, 5.4612,
        5.1619], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-1.7239, -4.4812,  1.2682, -0.2974,  1.5516, -0.5039,  1.0932, -0.1089,
         -4.0056, -3.7354]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.2006,  4.4483, -0.0086,  1.4988,  1.6604, -0.0419,  1.1247,  4.5630,
          4.1085]], device='cuda:0') None

all verified at 5th iter
best_l after optimization: -19.981056213378906 with beta sum per layer: []
optimal alpha/beta time: 3.126824378967285
initial alpha-CROWN bounds: tensor([[2.2547, 4.5475, 0.0117, 1.5166, 1.6858, 0.0054, 1.1650, 4.6152, 4.1792]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
verified with init bound!
incomplete verified success!
[[580.           0.           0.           3.97560596   0.
   -3.                  inf          inf]
 [580.           0.           0.           4.09092093   0.
   -1.                  inf          inf]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [cnt:1] (excluding attack success): 4.090920925140381
