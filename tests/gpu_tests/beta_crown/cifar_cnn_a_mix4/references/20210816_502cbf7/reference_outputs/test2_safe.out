/home/kx46@drexel.edu/anaconda3/envs/pyt18/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/kx46@drexel.edu/workspace/CROWN-GENERAL/examples/vision/plnn/utils.py:1189: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  y = torch.from_numpy(y.astype(np.int))
Experiments at Fri Nov  5 21:27:34 2021 on CCI-2CPKMH3
Namespace(batch_size=4096, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab', conv_mode='patches', crown=False, data='CIFAR_SDP', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=19, epsilon=None, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=20, load='sdp_models/cnn_a_mix4.model', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='cnn_4layer_mix4', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=18, timeout=200.0)
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.1256) tensor(-1.9889) tensor(-0.0131)
############################
epsilon after preprocession: tensor([[[[0.0317]],

         [[0.0322]],

         [[0.0300]]]]), data_max = tensor([[[[2.0587]],

         [[2.1256]],

         [[2.1154]]]]), data_min = tensor([[[[-1.9889]],

         [[-1.9807]],

         [[-1.7076]]]])
saving results to Verified_ret_[cnn_4layer_mix4]_start=18_end=19_iter=20_b=4096_int-beta=False_timeout=200.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  6  correct label  6 logits tensor([-20.9676, -23.5111, -16.1824, -18.4509, -16.2646, -17.9439, -14.7369,
        -18.4408, -24.0755, -22.6382], grad_fn=<SelectBackward>)
##### PGD attack: True label: 6, Tested against: all others ######
pgd prediction: tensor([-21.1479, -24.0953, -16.3851, -18.9940, -16.7056, -18.4769, -15.5736,
        -18.8869, -24.3527, -23.2091], device='cuda:0',
       grad_fn=<SqueezeBackward1>)
attack margin tensor([5.5744, 8.5218, 0.8116, 3.4205, 1.1320, 2.9034,    inf, 3.3133, 8.7791,
        7.6355], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-20.9676, -23.5111, -16.1824, -18.4509, -16.2646, -17.9439, -14.7369,
         -18.4408, -24.0755, -22.6382]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.

all verified at 8th iter
best_l after optimization: -30.202983856201172 with beta sum per layer: []
optimal alpha/beta time: 1.28065824508667
initial alpha-CROWN bounds: tensor([[4.0623e+00, 6.7782e+00, 3.2362e-02, 2.5448e+00, 1.9045e-03, 1.9026e+00,
         1.8601e+00, 7.0888e+00, 5.9319e+00]], device='cuda:0',
       grad_fn=<AsStridedBackward>) None
verified with init bound!
incomplete verified success!
[[18.          0.          0.          1.60100985  0.         -1.        ]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 1.6010098457336426
mean time [cnt:1]: 1.6010098457336426
