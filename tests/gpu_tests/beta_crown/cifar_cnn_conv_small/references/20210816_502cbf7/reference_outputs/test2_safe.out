Experiments at Thu Nov  4 23:11:10 2021 on huan-Naples-server
Namespace(batch_size=2048, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab', conv_mode='patches', crown=False, data='CIFAR_ERAN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=817, epsilon=None, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=20, load='eran_models/cifar_conv_small_pgd.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='cifar_conv_small', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=816, timeout=120.0)
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=1152, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([1000, 3, 32, 32]) torch.Size([1000]) torch.Size([1000])
X range: tensor(2.7537) tensor(-2.4291) tensor(0.0238)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0388]],

         [[0.0393]],

         [[0.0390]]]]), data_max = tensor([[[[2.5141]],

         [[2.5968]],

         [[2.7537]]]]), data_min = tensor([[[[-2.4291]],

         [[-2.4183]],

         [[-2.2214]]]])
saving results to Verified_ret_[cifar_conv_small]_start=816_end=817_iter=20_b=2048_int-beta=False_timeout=120.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 816 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  9  correct label  9 logits tensor([-4.4560,  0.8333, -1.9997,  1.8334, -0.5348, -0.0605,  0.5062,  0.5131,
        -0.0481,  4.8714], grad_fn=<SelectBackward>)
##### PGD attack: True label: 9, Tested against: all others ######
pgd prediction: tensor([-4.6750,  0.1512, -1.7527,  2.4510, -0.2413,  0.5159,  0.8424,  0.6657,
        -0.3605,  3.8950], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([8.5700, 3.7438, 5.6477, 1.4440, 4.1363, 3.3791, 3.0525, 3.2293, 4.2555,
           inf], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-4.4560,  0.8333, -1.9997,  1.8334, -0.5348, -0.0605,  0.5062,  0.5131,
         -0.0481,  4.8714]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.

all verified at 7th iter
best_l after optimization: -17.441017150878906 with beta sum per layer: []
optimal alpha/beta time: 2.2542402744293213
initial alpha-CROWN bounds: tensor([[5.6208, 1.5923, 3.1452, 0.0099, 1.4943, 1.5567, 1.2419, 0.7728, 2.0072]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
verified with init bound!
incomplete verified success!
[[816.           0.           0.           2.88323927   0.
   -1.        ]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 2.883239269256592
mean time [cnt:1]: 2.883239269256592
