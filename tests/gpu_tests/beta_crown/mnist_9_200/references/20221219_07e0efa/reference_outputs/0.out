Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_200
  path: mnist_9_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 24
  end: 25
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 03:09:22 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_200]_start=24_end=25_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ -960.60522461, -1598.82580566, -1900.80297852, -2114.30004883,
         -1818.29174805, -1546.59924316, -1461.50671387, -1890.52355957,
         -1596.00024414]], device='cuda:0') None
best_l after optimization: -10399.50390625 with beta sum per layer: []
alpha/beta optimization time: 10.978910684585571
initial alpha-CROWN bounds: tensor([[ -696.59332275, -1083.29089355, -1338.28356934, -1458.10083008,
         -1290.01208496, -1100.26892090, -1004.36328125, -1309.33068848,
         -1119.26025391]], device='cuda:0')
Worst class: (+ rhs) -1458.100830078125
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.94488865, -1.92304623,  0.52204627, -3.27151704,  6.61245489,
          -1.08669364,  0.41012126, -0.33979398, -0.37520438,  1.86208010],
         [-0.94488865, -1.92304623,  0.52204627, -3.27151704,  6.61245489,
          -1.08669364,  0.41012126, -0.33979398, -0.37520438,  1.86208010]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.55734348, 8.53550148, 6.09040880, 9.88397217, 7.69914865,
          6.20233345, 6.95224905, 6.98765945, 4.75037479]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6907 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_51', 'lay4_55', 'lay4_142', 'lay4_45', 'lay4_194', 'lay4_143', 'lay4_69', 'lay4_99', 'lay4_13', 'lay4_44', 'lay4_175', 'lay4_129', 'lay4_145', 'lay4_151', 'lay4_15', 'lay4_162', 'lay4_12', 'lay4_140', 'lay4_6', 'lay4_53', 'lay4_173', 'lay4_61', 'lay4_59', 'lay4_76', 'lay4_67', 'lay4_43', 'lay4_180', 'lay4_195', 'lay4_101', 'lay4_115', 'lay4_41', 'lay4_187', 'lay4_120', 'lay4_181', 'lay4_11', 'lay4_164', 'lay4_104', 'lay4_93', 'lay4_33', 'lay4_169', 'lay4_176', 'lay4_26', 'lay4_128', 'lay4_7', 'lay4_198', 'lay4_36', 'lay4_196', 'lay4_138', 'lay4_56', 'lay4_30', 'lay4_17', 'lay4_58', 'lay4_178', 'lay4_38', 'lay4_147', 'lay4_137', 'lay4_32', 'lay4_77', 'lay4_103', 'lay4_199', 'lay4_52', 'lay4_8', 'lay4_48', 'lay4_114', 'lay4_80', 'lay4_88', 'lay4_112', 'lay4_111', 'lay4_106'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:645: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7512s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2283s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3658s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-0.4939655330499903,0.1840592850098553] (2,-1; 2,-1), time: 2.0592s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.2184067756367363,0.5373208499990273] (2,-1; 2,-1), time: 2.9165s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0355s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.8449892717769235,0.049085402501457986] (2,-1; 2,-1), time: 3.1698s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[-0.32826881714231515,0.42907715300269234] (2,-1; 2,-1), time: 3.5680s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5656s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3520s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-0.1456149651544935,0.5368392069310332] (2,-1; 2,-1), time: 3.9510s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3377s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.11562688796938689,0.47522937351739986] (2,-1; 2,-1), time: 4.3804s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6222s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.4860297802247118,0.1272659783503301] (2,-1; 2,-1), time: 4.1133s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.115680778699645,0.39476993480740796] (2,-1; 2,-1), time: 5.0463s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[-inf,-0.011605190255872838] (-1,-1; 2,-1), time: 0.7019s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_151, [-inf,inf]=>[-0.5429035795490192,0.14445723401377109] (2,-1; 2,-1), time: 5.1072s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3251s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[1e-05,0.8799447872078766] (15,-1; 2,-1), time: 1.4618s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.16441167958775102,0.37427387425188635] (2,-1; 2,-1), time: 5.6802s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.30329129189060056,0.2429665298254032] (2,-1; 2,-1), time: 5.8930s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_140, [-inf,inf]=>[-0.5034155254172584,0.18120223253708784] (2,-1; 2,-1), time: 4.9578s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.5473879083334787,0.006108669512863298] (2,-1; 2,-1), time: 4.9500s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6662s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3699s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.5179620527560375,0.052008242652376836] (2,-1; 2,-1), time: 3.7577s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2701s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-0.40345083055079073,0.2484321178392733] (2,-1; 2,-1), time: 4.4166s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2811s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-0.3978837542670797,0.276857342475283] (2,-1; 2,-1), time: 7.7845s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_164, [-inf,inf]=>[-0.17748778251856323,0.43373619724193985] (2,-1; 2,-1), time: 2.5550s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.31285138240250243,0.3456218777941852] (2,-1; 2,-1), time: 2.7723s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2726s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3256s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.14164348511008418,0.43256513937750407] (2,-1; 2,-1), time: 3.6373s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7139s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_181, [-inf,inf]=>[-0.5951305937805159,0.07988729164200056] (2,-1; 2,-1), time: 3.6137s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5444s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2879s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3028s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.0045572695817047044,0.5442752229198643] (2,-1; 2,-1), time: 9.2039s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.082567148583268] (15,-1; 2,-1), time: 1.2235s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8222s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_195, [-inf,inf]=>[-0.26009126605170807,0.2253369901835655] (2,-1; 2,-1), time: 5.7836s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3264s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[1e-05,0.7467029392352333] (15,-1; 2,-1), time: 1.6970s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.513781916020179,0.0707428762711244] (2,-1; 2,-1), time: 10.5317s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3346s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2294s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.1591478407535879,0.48206800538383276] (2,-1; 2,-1), time: 5.9432s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2824s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3282s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.4964848007376834,0.08165267865290632] (2,-1; 2,-1), time: 4.5682s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-inf,-0.0013955701773113727] (-1,-1; 2,-1), time: 1.2493s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_17, [-inf,inf]=>[-0.027765165550538526,0.5018433973163334] (2,-1; 2,-1), time: 3.7961s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_104, [-inf,inf]=>[-0.35449177550456074,0.15685486276982474] (2,-1; 2,-1), time: 6.6490s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.11903935489718719,0.5780223931220813] (2,-1; 2,-1), time: 4.3849s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.2894043400132795,0.3651006453806827] (2,-1; 2,-1), time: 2.4414s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_56, [-inf,inf]=>[-0.16493979220356925,0.4547371576306901] (2,-1; 2,-1), time: 5.4406s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_169, [-inf,inf]=>[-0.24044442886782838,0.3573803276761943] (2,-1; 2,-1), time: 7.1132s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_32, [-inf,inf]=>[-0.4979849666988582,0.038850078419510756] (2,-1; 2,-1), time: 4.5111s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.3696357081915237,0.148081766566866] (2,-1; 2,-1), time: 4.4773s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-0.33732993514491105,0.25943326411251977] (2,-1; 2,-1), time: 5.2170s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.0038387174117586564,0.4652234876991486] (2,-1; 2,-1), time: 3.9628s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.4428270348924554,0.39641345580399906] (2,-1; 2,-1), time: 3.6984s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_176, [-inf,inf]=>[-0.5415858805183373,0.08509720157945229] (2,-1; 2,-1), time: 8.0253s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.1014644280411474,0.49679118863242344] (2,-1; 2,-1), time: 4.3136s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_106, [-inf,inf]=>[-0.5563797867656204,0.03538538109464213] (2,-1; 2,-1), time: 4.4673s, #vars: 1289, #constrs: 556, improved: True
PGD done for relu layer 2
MIP improved 69 nodes out of 69 unstable nodes, lb improved 9.921821594238281, ub improved 12.968194961547852, time 17.3537
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_62', 'lay6_124', 'lay6_118', 'lay6_106', 'lay6_10', 'lay6_41', 'lay6_100', 'lay6_7', 'lay6_22', 'lay6_32', 'lay6_30', 'lay6_190', 'lay6_3', 'lay6_68', 'lay6_125', 'lay6_143', 'lay6_34', 'lay6_54', 'lay6_44', 'lay6_160', 'lay6_20', 'lay6_79', 'lay6_158', 'lay6_8', 'lay6_109', 'lay6_131', 'lay6_65', 'lay6_115', 'lay6_127', 'lay6_67', 'lay6_73', 'lay6_60', 'lay6_162', 'lay6_87', 'lay6_114', 'lay6_95', 'lay6_112', 'lay6_197', 'lay6_55', 'lay6_148', 'lay6_123', 'lay6_150', 'lay6_97', 'lay6_23', 'lay6_166', 'lay6_181', 'lay6_163', 'lay6_94', 'lay6_102', 'lay6_15', 'lay6_101', 'lay6_43', 'lay6_50', 'lay6_78', 'lay6_5', 'lay6_155', 'lay6_25', 'lay6_71', 'lay6_42', 'lay6_64', 'lay6_176', 'lay6_130', 'lay6_81', 'lay6_18', 'lay6_135', 'lay6_1', 'lay6_119', 'lay6_184', 'lay6_192', 'lay6_72', 'lay6_74', 'lay6_179', 'lay6_19', 'lay6_164', 'lay6_185', 'lay6_12', 'lay6_138', 'lay6_117', 'lay6_136', 'lay6_75', 'lay6_141', 'lay6_139', 'lay6_156', 'lay6_111', 'lay6_83', 'lay6_92', 'lay6_167', 'lay6_161', 'lay6_186', 'lay6_70', 'lay6_85', 'lay6_145', 'lay6_170', 'lay6_53', 'lay6_29', 'lay6_104', 'lay6_4', 'lay6_120', 'lay6_199', 'lay6_69', 'lay6_61', 'lay6_107', 'lay6_132', 'lay6_122', 'lay6_0', 'lay6_137', 'lay6_147', 'lay6_113', 'lay6_47', 'lay6_110', 'lay6_144'] filter: 1.0
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5340s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3040s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9525s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9556s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1039s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1711s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4127s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6847s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8243s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9620s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8156s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3639s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2795s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9178s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5344s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.9321s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.7268s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.2286s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3099s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2930s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3825s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8366s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6473s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3633s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3059s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7581s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,0.5933991696230223] (15,-1; 9,-1), time: 15.9172s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.5676588665309683] (15,-1; 2,-1), time: 11.6929s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2983s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3485s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.40985784391621294,0.1174384686082069] (9,-1; 2,-1), time: 21.3612s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.33187365773575866,0.1268977490031567] (9,-1; 2,-1), time: 22.5695s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.29121464968114374,0.11666455115440993] (2,-1; 9,-1), time: 22.5867s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3086s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.4443455245465956,0.02444295588171619] (2,-1; 9,-1), time: 23.7465s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3521s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5566s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2802s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3509s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-0.3281903012265883,0.2680144575733497] (9,-1; 2,-1), time: 24.9895s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.2659s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8284s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3373s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-0.38003956763953356,0.06278004844701486] (2,-1; 9,-1), time: 27.2298s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6738s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3654s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_115, [-inf,inf]=>[-0.007436265637712937,0.46604806631041884] (9,-1; 2,-1), time: 26.4166s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3362s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.1236962398249999,0.2974891005681962] (9,-1; 9,-1), time: 30.0226s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.4147544572908103,0.03768522198931633] (9,-1; 9,-1), time: 30.0211s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.06187914266583582,0.37142587713652375] (9,-1; 9,-1), time: 30.0533s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-0.4535928965467524,0.02973114004151106] (9,-1; 9,-1), time: 30.1109s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3883s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3782s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2880s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8574s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9262s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2941s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-0.7162162612209755,0.027532907525982715] (2,-1; 2,-1), time: 16.2611s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2719s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.15137722576739976,0.3645431336759367] (9,-1; 9,-1), time: 30.0172s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2724s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7662s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.6343529969038297,0.009470761351828366] (9,-1; 2,-1), time: 23.5787s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8073s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9549s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.5695814167968568,0.003602071166892374] (9,-1; 2,-1), time: 22.0721s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[1e-05,0.9697942401947506] (15,-1; 2,-1), time: 8.4961s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.7868258753879478,0.014750188191881008] (9,-1; 2,-1), time: 19.5172s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,1.024759123844562] (15,-1; 2,-1), time: 12.9894s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3476s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[1e-05,1.8925611483442841] (15,-1; 2,-1), time: 4.4079s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4909s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[1e-05,0.7996643673360562] (15,-1; 9,-1), time: 15.3179s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3917s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[1e-05,0.6215952117292116] (15,-1; 2,-1), time: 14.2261s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3555s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.4179123688396484,0.05714351882036756] (9,-1; 2,-1), time: 23.9528s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.24506911507067242,0.23094633378139634] (2,-1; 9,-1), time: 28.8483s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-0.2648279721004544,0.13089540257156387] (9,-1; 2,-1), time: 28.2608s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3457s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.1921550506831527,0.37662705012390846] (2,-1; 9,-1), time: 27.1536s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-0.3451798220231859,0.1722658782577614] (9,-1; 2,-1), time: 27.9759s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.40827232817697917,0.06708431560139577] (9,-1; 9,-1), time: 30.0194s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.2685892654624077,0.30909846059436974] (2,-1; 2,-1), time: 22.9639s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5079302626089329,0.21530140558663394] (9,-1; 9,-1), time: 30.0107s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-0.2356670984602139,0.21675244139124578] (9,-1; 2,-1), time: 22.0446s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_185, [-inf,inf]=>[-0.13702965271105816,0.43735877858652616] (9,-1; 9,-1), time: 30.0520s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2805s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3161s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[1e-05,0.9285513160581422] (15,-1; 2,-1), time: 7.5090s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[1e-05,0.893210511017947] (15,-1; 9,-1), time: 15.9498s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.17760649397234948,0.3601239515111348] (9,-1; 2,-1), time: 23.4300s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3034s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.4571425990272397,0.05858176827673672] (9,-1; 9,-1), time: 30.0098s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4913s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[1e-05,1.0100016546077444] (15,-1; 2,-1), time: 5.6628s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.596314295968832,0.44409051130819827] (2,-1; 2,-1), time: 15.6511s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.5272193218546369,0.22795820700470285] (9,-1; 2,-1), time: 20.7680s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[1e-05,0.9820507588839932] (15,-1; 9,-1), time: 15.4604s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[1e-05,0.5782523507219232] (15,-1; 9,-1), time: 15.6772s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[1e-05,1.2721175572788288] (15,-1; 2,-1), time: 7.4237s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.24832615547412631,0.2957284775996951] (9,-1; 9,-1), time: 30.0196s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[1e-05,0.8393375315234142] (15,-1; 9,-1), time: 15.3812s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.3402424646680135,0.15935554106536995] (9,-1; 9,-1), time: 30.0450s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.36766348188501374,0.09244668220551308] (9,-1; 9,-1), time: 30.3439s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.214894363555218] (15,-1; 2,-1), time: 10.2887s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[1e-05,0.9241346651278374] (15,-1; 9,-1), time: 15.3766s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.14638959329329548,0.19276077288940377] (9,-1; 2,-1), time: 29.0607s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[1e-05,1.1448406175170214] (15,-1; 9,-1), time: 15.3062s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_104, [-inf,inf]=>[-0.2671753162268294,0.22045284859065042] (2,-1; 9,-1), time: 29.7065s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[-0.15487319762590357,0.3434798214771554] (9,-1; 9,-1), time: 30.0103s, #vars: 1567, #constrs: 873, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(51, -1), (194, -1), (143, -1), (53, -1), (59, -1), (76, -1), (67, 1), (43, -1), (180, -1), (101, -1), (41, -1), (11, -1), (93, -1), (33, -1), (26, -1), (128, -1), (198, -1), (36, -1), (196, -1), (138, -1), (30, 1), (58, -1), (38, 1), (137, -1), (77, -1), (199, -1), (114, -1), (80, -1), (88, -1), (111, -1)]
best_l after optimization: -1925.2999267578125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.26900315284729
alpha-CROWN with intermediate bounds by MIP: tensor([[-129.20474243, -200.34933472, -247.51364136, -269.52227783,
         -239.17393494, -203.46697998, -185.66873169, -242.81864929,
         -207.58171082]], device='cuda:0') None
MIP improved 112 nodes out of 112 unstable nodes, lb improved 21.999675750732422, ub improved 34.81850051879883, time 95.9189
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_140', 'lay8_60', 'lay8_25', 'lay8_42', 'lay8_54', 'lay8_21', 'lay8_15', 'lay8_14', 'lay8_85', 'lay8_86', 'lay8_118', 'lay8_35', 'lay8_63', 'lay8_113', 'lay8_149', 'lay8_122', 'lay8_142', 'lay8_23', 'lay8_76', 'lay8_112', 'lay8_102', 'lay8_156', 'lay8_158', 'lay8_170', 'lay8_104', 'lay8_187', 'lay8_27', 'lay8_144', 'lay8_110', 'lay8_151', 'lay8_100', 'lay8_61', 'lay8_178', 'lay8_24', 'lay8_121', 'lay8_34', 'lay8_37', 'lay8_105', 'lay8_185', 'lay8_115', 'lay8_94', 'lay8_164', 'lay8_89', 'lay8_137', 'lay8_169', 'lay8_13', 'lay8_10', 'lay8_73', 'lay8_29', 'lay8_166', 'lay8_50', 'lay8_68', 'lay8_189', 'lay8_120', 'lay8_53', 'lay8_161', 'lay8_190', 'lay8_154', 'lay8_45', 'lay8_71', 'lay8_146', 'lay8_163', 'lay8_91', 'lay8_150', 'lay8_172', 'lay8_56', 'lay8_59', 'lay8_48', 'lay8_128', 'lay8_88', 'lay8_19', 'lay8_47', 'lay8_135', 'lay8_174', 'lay8_106', 'lay8_84', 'lay8_39', 'lay8_40', 'lay8_125', 'lay8_195', 'lay8_95', 'lay8_155', 'lay8_33', 'lay8_171', 'lay8_188', 'lay8_129', 'lay8_83', 'lay8_62', 'lay8_103', 'lay8_148', 'lay8_75', 'lay8_153', 'lay8_96', 'lay8_167', 'lay8_17', 'lay8_147', 'lay8_132', 'lay8_184', 'lay8_107', 'lay8_93', 'lay8_152', 'lay8_4', 'lay8_134', 'lay8_6', 'lay8_36', 'lay8_198', 'lay8_182', 'lay8_191', 'lay8_199', 'lay8_183', 'lay8_168', 'lay8_126', 'lay8_44', 'lay8_116', 'lay8_108', 'lay8_90', 'lay8_196', 'lay8_173', 'lay8_58', 'lay8_80', 'lay8_31', 'lay8_79', 'lay8_11', 'lay8_194', 'lay8_162', 'lay8_51', 'lay8_52', 'lay8_43', 'lay8_141', 'lay8_16', 'lay8_32', 'lay8_20', 'lay8_41', 'lay8_64', 'lay8_81', 'lay8_7', 'lay8_2', 'lay8_57', 'lay8_130', 'lay8_117', 'lay8_70', 'lay8_99', 'lay8_12', 'lay8_49', 'lay8_111', 'lay8_157', 'lay8_101', 'lay8_8', 'lay8_82', 'lay8_46', 'lay8_69', 'lay8_165', 'lay8_18', 'lay8_1', 'lay8_177', 'lay8_127', 'lay8_143', 'lay8_65', 'lay8_78', 'lay8_179', 'lay8_3', 'lay8_180', 'lay8_74', 'lay8_139', 'lay8_97', 'lay8_145', 'lay8_197', 'lay8_30', 'lay8_0', 'lay8_181', 'lay8_92', 'lay8_131', 'lay8_159', 'lay8_133', 'lay8_9', 'lay8_5', 'lay8_28', 'lay8_123', 'lay8_193', 'lay8_109', 'lay8_55', 'lay8_72'] filter: 1.0
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3990s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4154s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4291s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4492s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4443s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4614s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5576s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3750s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3611s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0906s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5265s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5456s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3378s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0722s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4742s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3322s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1489s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3583s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.6184s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4166s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4305s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4307s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3539s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4263s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.8033s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[1e-05,1.3065895831507437] (15,-1; 9,-1), time: 15.3795s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4392s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[1e-05,0.5991691737412929] (15,-1; 9,-1), time: 26.5918s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[1e-05,0.4909625308542729] (15,-1; 9,-1), time: 18.2771s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4309s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.8218478051457716] (15,-1; 9,-1), time: 15.3915s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4375s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4233s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3575s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.2869741587931676,0.28538478005144113] (9,-1; 9,-1), time: 30.0216s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-0.24298994055771572,0.22368702085261044] (9,-1; 9,-1), time: 30.0323s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.24392274629108582,0.11967259304687487] (9,-1; 9,-1), time: 30.0186s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-0.6364453825568162,0.0024053937272904722] (9,-1; 9,-1), time: 30.0192s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.4251162638124736,0.1419749955689423] (9,-1; 9,-1), time: 30.0497s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4295s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-0.012047032293643635,0.5206995797361134] (9,-1; 9,-1), time: 30.0290s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.036643691150915036,0.5112050594930486] (9,-1; 9,-1), time: 30.0159s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-0.7376632339054192,0.025842444197064746] (9,-1; 9,-1), time: 30.8518s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.42695493696486686,0.07894824647577695] (9,-1; 9,-1), time: 30.0388s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.29622936913639936,0.22208390540782816] (9,-1; 9,-1), time: 30.0176s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3380s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4075s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.17561940491714353,0.28123813282950705] (9,-1; 9,-1), time: 30.0141s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8200s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5208s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3555s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.1563118938944808,0.29296875628308067] (9,-1; 9,-1), time: 30.0237s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.38270840070148693,0.2587039231928] (9,-1; 9,-1), time: 30.0261s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7813s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3469s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3300s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4061s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4168s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[1e-05,0.7009093648613688] (15,-1; 9,-1), time: 21.9093s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[1e-05,0.3894864227921488] (15,-1; 9,-1), time: 22.8837s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[1e-05,0.5219180146045] (15,-1; 9,-1), time: 24.6444s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3661s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-0.5080841788696948,0.05647584459376676] (9,-1; 9,-1), time: 30.0149s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3411s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.5619165033494322,0.09063275711719529] (9,-1; 9,-1), time: 30.0223s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4258s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.1591117844744273,0.22741029186169648] (9,-1; 9,-1), time: 30.0652s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4393s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4272s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3587s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3502s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.16028767040537692,0.2779572412040736] (9,-1; 9,-1), time: 30.0157s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.3298258938922438,0.07159666516843954] (9,-1; 9,-1), time: 30.0169s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-0.1514362787266063,0.3020419180575561] (9,-1; 9,-1), time: 30.2539s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4478s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[-0.4676776092666521,0.019305343840493892] (9,-1; 9,-1), time: 30.0192s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3471s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4173s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-0.3968198394826277,0.10608164914916769] (9,-1; 9,-1), time: 30.1171s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4350s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,0.7123600560509701] (15,-1; 9,-1), time: 15.4869s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3865s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3522s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-0.2467503546739495,0.2745905489157613] (9,-1; 9,-1), time: 30.3491s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3779s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4403s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3559s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0903s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4238s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3541s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.44858519150078435,0.09100695600784643] (9,-1; 9,-1), time: 30.0158s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.04226216602450212,0.3376544909439661] (9,-1; 9,-1), time: 30.0208s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5008s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[1e-05,1.931505618029559] (15,-1; 9,-1), time: 15.5369s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[1e-05,1.3964797480761677] (15,-1; 9,-1), time: 16.0791s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[1e-05,0.9832799760101445] (15,-1; 9,-1), time: 15.5252s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4201s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,0.6631004591488145] (15,-1; 9,-1), time: 15.3795s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4254s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-0.09380343346472331,0.4108810107871054] (9,-1; 9,-1), time: 30.0493s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.16538170837134425,0.20718105374597545] (9,-1; 9,-1), time: 30.0178s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9027s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.3989669397987777,0.06022000321002955] (9,-1; 9,-1), time: 30.0235s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3459s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.3780632897580253,0.1185301223212605] (9,-1; 9,-1), time: 30.0122s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4175s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1237s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.3718334008391186] (15,-1; 9,-1), time: 15.3575s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.2609565514275607,0.5483649128462663] (9,-1; 9,-1), time: 30.0317s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[1e-05,0.675256256788657] (15,-1; 9,-1), time: 15.6709s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3483s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3610s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3664s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4568s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-0.3332561628245222,0.13192669285853043] (9,-1; 9,-1), time: 30.0606s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4374s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3653s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.19174168481159645,0.20798904013034675] (9,-1; 9,-1), time: 30.0172s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3558s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4330s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-0.31191377157385114,0.382847116011142] (9,-1; 9,-1), time: 30.0790s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3458s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-0.26849660852712187,0.22705148353614038] (9,-1; 9,-1), time: 30.0318s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.4632431250182254,0.02531537777050405] (9,-1; 9,-1), time: 30.0196s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-0.12890026698004414,0.27368534308176573] (9,-1; 9,-1), time: 30.0567s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3518s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.4739538938837133,0.04977534679804266] (9,-1; 9,-1), time: 30.0223s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4960s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.0074s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[1e-05,2.4990072642484127] (15,-1; 9,-1), time: 15.6742s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[1e-05,1.2316569555745087] (15,-1; 9,-1), time: 15.3767s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.2328349728911801,0.2004378083139556] (9,-1; 9,-1), time: 30.0833s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-0.380034454344442,0.08076556882757004] (9,-1; 9,-1), time: 30.0326s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[1e-05,1.3871624717142208] (15,-1; 9,-1), time: 15.4391s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3526s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3412s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.4599580553262075,0.06950216566039302] (9,-1; 9,-1), time: 30.0585s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,1.6082545673230741] (15,-1; 9,-1), time: 15.4637s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.49027999783808623,0.17315345836964943] (9,-1; 9,-1), time: 30.1970s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-0.11253597181606326,0.3330989063078452] (9,-1; 9,-1), time: 30.4142s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.41199014976349735,0.026308849580218976] (9,-1; 9,-1), time: 30.0698s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3732s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.4598456946363157,0.16233008810049418] (9,-1; 9,-1), time: 30.0315s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[1e-05,0.9917841666866892] (15,-1; 9,-1), time: 15.4244s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.055506859946796536,0.6781953266913104] (9,-1; 9,-1), time: 30.0174s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.2936844630965901,0.16499989544800242] (9,-1; 9,-1), time: 30.0286s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3577s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.333960479153326,0.19471142388476453] (9,-1; 9,-1), time: 30.3269s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1600s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.45356402582604877,0.005877518733944194] (9,-1; 9,-1), time: 30.4016s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3547s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3301s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[1e-05,1.2379781739031792] (15,-1; 9,-1), time: 15.5476s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[1e-05,0.8185706022125622] (15,-1; 9,-1), time: 15.3796s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.5985315886676362] (15,-1; 9,-1), time: 15.3595s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-0.29979110159904676,0.14580122373947108] (9,-1; 9,-1), time: 30.0135s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3970s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,1.3079720360240308] (15,-1; 9,-1), time: 15.4641s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3631s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4391s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[1e-05,1.3951023691394215] (15,-1; 9,-1), time: 15.3560s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[1e-05,0.5734494506189203] (15,-1; 9,-1), time: 25.3294s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3394s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.0170948103286284] (15,-1; 9,-1), time: 15.3714s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.4325419121418007,0.15341016882913444] (9,-1; 9,-1), time: 30.0295s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3344s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3481s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-0.021901904097547265,0.3928143979190025] (9,-1; 9,-1), time: 30.1448s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.18594122943297473,0.22964742439644714] (9,-1; 9,-1), time: 30.0373s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[1e-05,0.8978235964442011] (15,-1; 9,-1), time: 15.3444s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.2923235753082793] (15,-1; 9,-1), time: 15.3335s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[1e-05,0.5113687055453711] (15,-1; 9,-1), time: 23.5424s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,1.872958795787626] (15,-1; 9,-1), time: 15.3656s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[1e-05,0.8940779231157906] (15,-1; 9,-1), time: 15.3785s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,2.076356935828367] (15,-1; 2,-1), time: 13.9292s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,1.891675513585206] (15,-1; 9,-1), time: 15.3480s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-0.4327421404533386,0.021096029158873566] (9,-1; 9,-1), time: 30.0166s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.1318462886349847] (15,-1; 9,-1), time: 15.3515s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-0.3452144303404726,0.07338658250565001] (9,-1; 9,-1), time: 30.0127s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-0.4523329731353753,0.06610804158707052] (9,-1; 9,-1), time: 30.0270s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.05366741393672841,0.3970303236100786] (9,-1; 9,-1), time: 30.4565s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.3638261781108248,0.03331052730624725] (9,-1; 9,-1), time: 30.0919s, #vars: 1839, #constrs: 1181, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (62, -1), (118, -1), (22, -1), (32, -1), (190, -1), (3, -1), (125, -1), (143, -1), (34, -1), (54, -1), (20, 1), (79, -1), (158, -1), (8, -1), (109, -1), (131, -1), (65, -1), (67, -1), (73, 1), (60, -1), (162, -1), (114, -1), (95, -1), (112, -1), (197, -1), (55, -1), (148, -1), (97, -1), (23, -1), (166, -1), (181, -1), (163, -1), (15, -1), (43, -1), (50, -1), (5, -1), (155, -1), (25, -1), (64, -1), (176, -1), (81, -1), (18, -1), (135, -1), (1, 1), (119, -1), (184, -1), (72, 1), (74, -1), (179, 1), (19, -1), (164, -1), (12, -1), (117, 1), (136, -1), (75, -1), (139, 1), (83, -1), (92, -1), (161, -1), (85, -1), (145, 1), (29, -1), (120, 1), (199, 1), (69, 1), (61, 1), (107, -1), (132, -1), (122, 1), (0, 1), (137, -1), (113, -1), (47, 1), (110, 1), (144, 1)]
best_l after optimization: -253.09890747070312 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.48627495765686
alpha-CROWN with intermediate bounds by MIP: tensor([[-18.31717682, -26.35834885, -32.28289795, -34.15766144, -31.38234711,
         -27.25662231, -23.81186485, -31.99407387, -27.53789711]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 75.45331573486328, ub improved 110.52667236328125, time 163.1818
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_31', 'lay10_50', 'lay10_64', 'lay10_86', 'lay10_34', 'lay10_191', 'lay10_45', 'lay10_22', 'lay10_184', 'lay10_72', 'lay10_169', 'lay10_38', 'lay10_58', 'lay10_144', 'lay10_36', 'lay10_183', 'lay10_11', 'lay10_111', 'lay10_196', 'lay10_48', 'lay10_54', 'lay10_67', 'lay10_77', 'lay10_163', 'lay10_157', 'lay10_56', 'lay10_106', 'lay10_156', 'lay10_199', 'lay10_89', 'lay10_15', 'lay10_39', 'lay10_29', 'lay10_164', 'lay10_12', 'lay10_66', 'lay10_152', 'lay10_25', 'lay10_90', 'lay10_142', 'lay10_118', 'lay10_194', 'lay10_130', 'lay10_93', 'lay10_124', 'lay10_197', 'lay10_143', 'lay10_53', 'lay10_44', 'lay10_99', 'lay10_63', 'lay10_73', 'lay10_171', 'lay10_116', 'lay10_167', 'lay10_42', 'lay10_132', 'lay10_131', 'lay10_195', 'lay10_76', 'lay10_162', 'lay10_182', 'lay10_91', 'lay10_3', 'lay10_40', 'lay10_5', 'lay10_159', 'lay10_100', 'lay10_185', 'lay10_135', 'lay10_138', 'lay10_149', 'lay10_23', 'lay10_6', 'lay10_160', 'lay10_96', 'lay10_102', 'lay10_52', 'lay10_122', 'lay10_49', 'lay10_30', 'lay10_125', 'lay10_57', 'lay10_10', 'lay10_20', 'lay10_16', 'lay10_88', 'lay10_79', 'lay10_18', 'lay10_28', 'lay10_155', 'lay10_110', 'lay10_9', 'lay10_47', 'lay10_85', 'lay10_146', 'lay10_127', 'lay10_74', 'lay10_65', 'lay10_8', 'lay10_61', 'lay10_112', 'lay10_95', 'lay10_174', 'lay10_147', 'lay10_46', 'lay10_108', 'lay10_35', 'lay10_71', 'lay10_97', 'lay10_32', 'lay10_26', 'lay10_126', 'lay10_114', 'lay10_128', 'lay10_115', 'lay10_19', 'lay10_94', 'lay10_43', 'lay10_55', 'lay10_78', 'lay10_139', 'lay10_134', 'lay10_82', 'lay10_158', 'lay10_178', 'lay10_75', 'lay10_101', 'lay10_168', 'lay10_192', 'lay10_189', 'lay10_187', 'lay10_37', 'lay10_2', 'lay10_176', 'lay10_24', 'lay10_4', 'lay10_69', 'lay10_120', 'lay10_161', 'lay10_181', 'lay10_175', 'lay10_186', 'lay10_109', 'lay10_166', 'lay10_41', 'lay10_190', 'lay10_14', 'lay10_193', 'lay10_98', 'lay10_117', 'lay10_173', 'lay10_165', 'lay10_17', 'lay10_81', 'lay10_151', 'lay10_123', 'lay10_80', 'lay10_148', 'lay10_129', 'lay10_27', 'lay10_105', 'lay10_170', 'lay10_136', 'lay10_68', 'lay10_51', 'lay10_119', 'lay10_154', 'lay10_141', 'lay10_180', 'lay10_62', 'lay10_0', 'lay10_113', 'lay10_145', 'lay10_59', 'lay10_103', 'lay10_1', 'lay10_172', 'lay10_153', 'lay10_107', 'lay10_87', 'lay10_84', 'lay10_33', 'lay10_13', 'lay10_92', 'lay10_60', 'lay10_137', 'lay10_198', 'lay10_177', 'lay10_7', 'lay10_21', 'lay10_188', 'lay10_70', 'lay10_121', 'lay10_133', 'lay10_140', 'lay10_104', 'lay10_179', 'lay10_150'] filter: 1.0
Solving MIP for lay10_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6906s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6845s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6981s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7028s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7450s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7592s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7843s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8159s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8131s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8456s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6213s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6369s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6936s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6231s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6909s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6584s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7094s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7227s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7195s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5949s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5727s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0491s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6256s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6613s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6356s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7455s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5952s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6138s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5736s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6706s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5782s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5716s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5703s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5643s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5816s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5678s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5933s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6243s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6615s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6608s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.9924s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6060s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[1e-05,2.9133389611777862] (15,-1; 9,-1), time: 15.6132s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[1e-05,0.6492226523197023] (15,-1; 9,-1), time: 19.4511s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6930s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,0.7618650659792233] (15,-1; 9,-1), time: 16.5972s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6416s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5651s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.10654054883018473,0.8183377062980952] (9,-1; 9,-1), time: 30.0206s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.12551631426143728,0.4786922920335285] (9,-1; 9,-1), time: 30.0262s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6350s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-0.6301918499765194,0.0940811846165115] (9,-1; 9,-1), time: 30.0119s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-0.3113613933318402,0.2592698584375554] (9,-1; 9,-1), time: 30.0142s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.4943218545285707,0.07175225254405646] (9,-1; 9,-1), time: 30.0290s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6609s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5701s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.009363280250510808,0.5264157851009775] (9,-1; 9,-1), time: 30.0130s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6522s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5829s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.5138010641676428,0.12780357115907018] (9,-1; 9,-1), time: 30.0128s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-0.2660655867752952,0.34221947921618623] (9,-1; 9,-1), time: 30.0129s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6717s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6795s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-0.08497767761475924,0.5771932100897158] (9,-1; 9,-1), time: 30.0128s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6438s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.4105883928559063,0.2246021323980709] (9,-1; 9,-1), time: 30.0121s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7044s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5776s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5673s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6401s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5387s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6818s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5824s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.44048046610439767,0.19397416785420216] (9,-1; 9,-1), time: 30.0217s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6631s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5776s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.2329118374915102,0.21761789650790347] (9,-1; 9,-1), time: 30.0111s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.791388119709589] (15,-1; 9,-1), time: 15.5921s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6223s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6067s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[1e-05,1.296269483115365] (15,-1; 9,-1), time: 15.6553s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5437s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6222s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-0.2568047110490663,0.43766633029348434] (9,-1; 9,-1), time: 30.0125s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-0.4978213652978182,0.13532925604660356] (9,-1; 9,-1), time: 30.0229s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[1e-05,1.0226762898769073] (15,-1; 9,-1), time: 15.6306s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6589s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6563s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[1e-05,0.6648056732882672] (15,-1; 9,-1), time: 18.0669s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.7950792853542061] (15,-1; 9,-1), time: 15.6991s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6220s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6316s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6422s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6668s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5704s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[1e-05,0.6133746731271008] (15,-1; 9,-1), time: 18.5302s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5871s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6014s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[1e-05,1.4557216989262591] (15,-1; 9,-1), time: 15.5898s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6523s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5900s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5761s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5777s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5655s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6719s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5719s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6568s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6126s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6276s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[1e-05,1.7733364373969513] (15,-1; 9,-1), time: 15.6498s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2984s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6072s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-0.5603591123140943,0.20911594699346656] (9,-1; 9,-1), time: 30.0167s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-0.11418317291213,0.7303266352006907] (9,-1; 9,-1), time: 30.0351s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5427s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.5687400207639245,0.034487462447546205] (9,-1; 9,-1), time: 30.0143s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5522s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.17260110381550978,0.5975950741481911] (9,-1; 9,-1), time: 30.0123s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5897s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5637s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.49251042255071015,0.31550278592991204] (9,-1; 9,-1), time: 30.0159s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6563s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5895s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.17682111847265117,0.4925830321905262] (9,-1; 9,-1), time: 30.0123s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.18675593494497955,0.3501438111488148] (9,-1; 9,-1), time: 30.0112s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5975s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.17445697115443395,0.4415412969301937] (9,-1; 9,-1), time: 30.0109s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6446s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[1e-05,2.595553526742572] (15,-1; 9,-1), time: 15.6398s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.21447964416241877,0.2679288317112391] (9,-1; 9,-1), time: 30.0121s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5605s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6318s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6449s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5810s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.167884104221865] (15,-1; 9,-1), time: 15.6343s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4372s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6501s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6499s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5787s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5708s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5543s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.744326679197451] (15,-1; 9,-1), time: 15.5670s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.7246256359322014,0.041988485853075026] (9,-1; 9,-1), time: 30.0145s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5692s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[1e-05,0.8334297662937301] (15,-1; 9,-1), time: 15.7019s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6087s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6015s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[1e-05,0.9239918214124347] (15,-1; 9,-1), time: 15.6118s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.08111500165366262,0.4206981652735948] (9,-1; 9,-1), time: 30.0111s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,2.5707334359643617] (15,-1; 9,-1), time: 15.6542s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.34342784262102105,0.25368785423525847] (9,-1; 9,-1), time: 30.0121s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5652s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[1e-05,1.7265738030392135] (15,-1; 9,-1), time: 15.6056s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-0.42737694780145297,0.26351009230154443] (9,-1; 9,-1), time: 30.0133s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5656s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6390s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[1e-05,4.9708253746590545] (15,-1; 9,-1), time: 15.5956s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[1e-05,1.2991074345263647] (15,-1; 9,-1), time: 15.5806s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5609s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-0.09527750060583673,0.4479913818560031] (9,-1; 9,-1), time: 30.0122s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6031s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-0.7497154043030857,0.16333875061560404] (9,-1; 9,-1), time: 30.0374s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6625s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6781s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[1e-05,1.4545034955992653] (15,-1; 9,-1), time: 15.6183s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-0.6978706623646087,0.002577526391538759] (9,-1; 9,-1), time: 30.0112s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.41303998294896677,0.11577121346587037] (9,-1; 9,-1), time: 30.0122s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.09860471340966762,0.6138553123467203] (9,-1; 9,-1), time: 30.0296s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5640s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6383s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5534s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5832s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5565s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5915s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5793s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5770s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.3868478957406627,0.21414422333760996] (9,-1; 9,-1), time: 30.0117s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-0.49006620326824024,0.009798963206882238] (9,-1; 9,-1), time: 30.0138s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6440s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7735s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5684s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6601s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.06747695036406687,0.46966141105096165] (9,-1; 9,-1), time: 30.0288s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5823s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6714s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.4613784710618247,0.16278465682712678] (9,-1; 9,-1), time: 30.0114s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.25941037500657205,0.32400401054148736] (9,-1; 9,-1), time: 30.0139s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[1e-05,1.2786383881504113] (15,-1; 9,-1), time: 15.6181s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[1e-05,0.8570450313463588] (15,-1; 9,-1), time: 16.4618s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.25041685507564987,0.3035016808683303] (9,-1; 9,-1), time: 30.0114s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-0.4680490525145003,0.17229848193209893] (9,-1; 9,-1), time: 30.0120s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.5017s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.4354096933317462,0.08605820707102631] (9,-1; 9,-1), time: 30.0129s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.6116338662657947,0.013842947114743097] (9,-1; 9,-1), time: 30.0107s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.21279434014616852,0.3623467012314251] (9,-1; 9,-1), time: 30.0489s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-0.5700771860862118,0.030439491294917655] (9,-1; 9,-1), time: 30.0133s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-0.4251112758632689,0.12986406867273706] (9,-1; 9,-1), time: 30.0120s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.5487249533376376,0.11111891174766525] (9,-1; 9,-1), time: 30.0125s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.5218422734753945,0.056182634192960886] (9,-1; 9,-1), time: 30.0124s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.8242741418426481,0.09282775826596973] (9,-1; 9,-1), time: 30.0135s, #vars: 2151, #constrs: 1549, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(60, -1), (25, -1), (42, -1), (21, -1), (15, -1), (14, -1), (85, -1), (86, -1), (35, -1), (63, -1), (149, 1), (122, -1), (76, -1), (112, -1), (156, 1), (158, -1), (104, -1), (27, -1), (110, -1), (151, -1), (100, -1), (178, -1), (24, 1), (121, -1), (34, -1), (37, -1), (105, -1), (185, -1), (115, 1), (164, -1), (137, -1), (13, -1), (10, -1), (73, -1), (68, -1), (53, 1), (190, 1), (71, -1), (146, -1), (163, 1), (91, -1), (172, -1), (56, -1), (48, 1), (128, -1), (88, -1), (19, -1), (47, -1), (135, -1), (39, -1), (125, -1), (195, -1), (95, -1), (155, 1), (33, -1), (171, 1), (188, -1), (129, -1), (62, -1), (148, -1), (153, -1), (96, -1), (167, 1), (17, -1), (147, -1), (132, -1), (184, -1), (107, -1), (152, -1), (4, 1), (6, -1), (36, -1), (191, -1), (183, 1), (168, 1), (126, -1), (116, -1), (196, -1), (58, -1), (80, -1), (79, -1), (194, -1), (162, 1), (51, -1), (52, -1), (43, -1), (141, -1), (32, -1), (20, -1), (41, -1), (7, 1), (2, -1), (130, -1), (117, 1), (70, -1), (12, -1), (49, 1), (157, 1), (46, -1), (69, -1), (165, 1), (18, 1), (1, 1), (177, 1), (127, 1), (143, -1), (65, 1), (78, 1), (179, 1), (180, -1), (139, -1), (97, -1), (145, -1), (0, 1), (181, 1), (92, 1), (131, -1), (159, 1), (133, -1), (9, -1), (28, 1), (123, -1), (193, 1), (109, 1), (55, -1), (72, -1)]
best_l after optimization: -19.48453140258789 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.825971126556396
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.24124718, -0.98054504, -3.20779753, -1.04599571, -2.51272774,
         -2.82483101, -0.58735561, -2.87664413, -3.20738697]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 199.95838928222656, ub improved 424.2394104003906, time 132.8420
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_61', 'lay12_197', 'lay12_58', 'lay12_13', 'lay12_129', 'lay12_183', 'lay12_15', 'lay12_145', 'lay12_187', 'lay12_86', 'lay12_111', 'lay12_152', 'lay12_1', 'lay12_41', 'lay12_118', 'lay12_34', 'lay12_199', 'lay12_98', 'lay12_174', 'lay12_46', 'lay12_117', 'lay12_84', 'lay12_175', 'lay12_142', 'lay12_96', 'lay12_90', 'lay12_160', 'lay12_74', 'lay12_103', 'lay12_35', 'lay12_128', 'lay12_115', 'lay12_139', 'lay12_47', 'lay12_95', 'lay12_30', 'lay12_107', 'lay12_109', 'lay12_82', 'lay12_184', 'lay12_150', 'lay12_97', 'lay12_71', 'lay12_27', 'lay12_125', 'lay12_93', 'lay12_77', 'lay12_8', 'lay12_4', 'lay12_127', 'lay12_148', 'lay12_23', 'lay12_146', 'lay12_21', 'lay12_165', 'lay12_25', 'lay12_154', 'lay12_173', 'lay12_171', 'lay12_65', 'lay12_151', 'lay12_172', 'lay12_119', 'lay12_116', 'lay12_130', 'lay12_55', 'lay12_68', 'lay12_57', 'lay12_63', 'lay12_132', 'lay12_182', 'lay12_9', 'lay12_141', 'lay12_170', 'lay12_24', 'lay12_113', 'lay12_194', 'lay12_83', 'lay12_186', 'lay12_56', 'lay12_104', 'lay12_69', 'lay12_36', 'lay12_190', 'lay12_31', 'lay12_120', 'lay12_75', 'lay12_176', 'lay12_188', 'lay12_28', 'lay12_50', 'lay12_19', 'lay12_163', 'lay12_52', 'lay12_169', 'lay12_17', 'lay12_180', 'lay12_54', 'lay12_42', 'lay12_12', 'lay12_72', 'lay12_106', 'lay12_89', 'lay12_123', 'lay12_108', 'lay12_3', 'lay12_161', 'lay12_94', 'lay12_114', 'lay12_62', 'lay12_91', 'lay12_134', 'lay12_149', 'lay12_66', 'lay12_32', 'lay12_38', 'lay12_124', 'lay12_177', 'lay12_64', 'lay12_122', 'lay12_136', 'lay12_39', 'lay12_79', 'lay12_22', 'lay12_88', 'lay12_147', 'lay12_133', 'lay12_60', 'lay12_14', 'lay12_44', 'lay12_53', 'lay12_45', 'lay12_40', 'lay12_168', 'lay12_85', 'lay12_80', 'lay12_121', 'lay12_2', 'lay12_78', 'lay12_76', 'lay12_179', 'lay12_20', 'lay12_81', 'lay12_18', 'lay12_101', 'lay12_198', 'lay12_51', 'lay12_5', 'lay12_67', 'lay12_156', 'lay12_26', 'lay12_59', 'lay12_153', 'lay12_16', 'lay12_159', 'lay12_110', 'lay12_195', 'lay12_162', 'lay12_137', 'lay12_143', 'lay12_193', 'lay12_10', 'lay12_0', 'lay12_181', 'lay12_140', 'lay12_100', 'lay12_105', 'lay12_43', 'lay12_191', 'lay12_126', 'lay12_112', 'lay12_6', 'lay12_70', 'lay12_87', 'lay12_49', 'lay12_92', 'lay12_192', 'lay12_33', 'lay12_11', 'lay12_135', 'lay12_155', 'lay12_167', 'lay12_7', 'lay12_102', 'lay12_166', 'lay12_131', 'lay12_157', 'lay12_158', 'lay12_189', 'lay12_164', 'lay12_73', 'lay12_196', 'lay12_48', 'lay12_185', 'lay12_178', 'lay12_144', 'lay12_37', 'lay12_99', 'lay12_138', 'lay12_29'] filter: 1.0
Solving MIP for lay12_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7639s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8955s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9895s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0539s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0775s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1057s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1089s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1138s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1338s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1305s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1677s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8248s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8553s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9928s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9107s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8596s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8816s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9207s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9184s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9423s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8566s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8962s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9282s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9181s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8692s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[1e-05,1.3125567261583322] (15,-1; 9,-1), time: 15.8204s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[1e-05,1.6080174905274616] (15,-1; 9,-1), time: 15.9323s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8589s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7419s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7978s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8797s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[1e-05,0.6567007851249289] (15,-1; 9,-1), time: 27.0649s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-0.23570489137829242,0.2725505237307659] (9,-1; 9,-1), time: 30.0181s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-0.4293111748713509,0.13090333504605603] (9,-1; 9,-1), time: 30.0184s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.7663766595444788,0.09163788774775178] (9,-1; 9,-1), time: 30.0403s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[-0.35287091978630303,0.27720724907227023] (9,-1; 9,-1), time: 30.0590s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-0.17895049459995943,0.49857853353150666] (9,-1; 9,-1), time: 30.3447s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[-0.5854792132587914,0.08796475978016055] (9,-1; 9,-1), time: 30.0166s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8410s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8914s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-0.36566912753121605,0.2097330363559334] (9,-1; 9,-1), time: 30.0401s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9335s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.22739836484030546,0.49792042804226533] (9,-1; 9,-1), time: 30.3733s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8058s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8779s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8350s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-0.5219136128169427,0.09586195026729642] (9,-1; 9,-1), time: 30.0132s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8462s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8119s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8077s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9112s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.46413137861574283,0.07365044564466498] (9,-1; 9,-1), time: 30.1107s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-0.7739319498738019,0.1516602396214042] (9,-1; 9,-1), time: 30.2431s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8609s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-0.3446555027064982,0.3084954769390835] (9,-1; 9,-1), time: 30.4137s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8228s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9111s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-0.7651430896301729,0.2643283146389934] (9,-1; 9,-1), time: 30.1048s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8080s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9189s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8932s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8898s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.6297s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7383s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7835s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.0738s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.7382320134762268,0.2933342790898796] (9,-1; 9,-1), time: 30.0624s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[1e-05,1.0040437485075542] (15,-1; 9,-1), time: 15.8523s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9526s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7874s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.21650841314325575,0.5029956223843509] (9,-1; 9,-1), time: 30.0211s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[1e-05,0.6868671689895905] (15,-1; 9,-1), time: 15.7730s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8261s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9063s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.09388386188452852,0.7326589944860729] (9,-1; 9,-1), time: 30.0135s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-0.12144601348939119,0.4606875220051543] (9,-1; 9,-1), time: 30.0200s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.49616954629155796,0.14173079712992648] (9,-1; 9,-1), time: 30.0724s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8681s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.30654382170353567,0.4630087602484125] (9,-1; 9,-1), time: 30.0270s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-0.564182610095322,0.1350349172013647] (9,-1; 9,-1), time: 30.0256s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7543s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.3810716269551576,0.28933009864250153] (9,-1; 9,-1), time: 30.1612s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9113s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8294s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9448s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.6083101597213205,0.049655417215157774] (9,-1; 9,-1), time: 30.0326s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8969s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-0.5460619741087914,0.1557505748806184] (9,-1; 9,-1), time: 30.5747s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-0.16408047378807533,0.38336010248800284] (9,-1; 9,-1), time: 30.0141s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8232s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.28908612455404603,0.46302693509413184] (9,-1; 9,-1), time: 30.0303s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8751s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8205s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8747s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8023s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8421s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9833s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7184s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.9117s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,1.2333205477673967] (15,-1; 9,-1), time: 15.8938s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-0.5639596141067749,0.045268613461994296] (9,-1; 9,-1), time: 30.0214s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[1e-05,0.8140324646328556] (15,-1; 9,-1), time: 17.0866s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9025s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.5104003411994416,0.09138447710419985] (9,-1; 9,-1), time: 30.0235s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.00783189402257788,0.7972956492535217] (9,-1; 9,-1), time: 30.0153s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[1e-05,1.0084977355632292] (15,-1; 9,-1), time: 16.1830s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[-0.4166462294597938,0.1820530597882509] (9,-1; 9,-1), time: 30.0153s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.20157536860742745,0.45501818231955526] (9,-1; 9,-1), time: 30.0129s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8567s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[1e-05,1.8206785297384467] (15,-1; 9,-1), time: 15.9478s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7661s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.3372260871568474,0.20241300930815728] (9,-1; 9,-1), time: 30.0541s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8259s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.4229092733820266] (15,-1; 9,-1), time: 15.8022s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[-0.2589213427795625,0.30004830365582974] (9,-1; 9,-1), time: 30.0210s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7370s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-0.46470276775345976,0.20818294947882013] (9,-1; 9,-1), time: 30.0351s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.61418542312753,0.24907889589698345] (9,-1; 9,-1), time: 30.0343s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.1439559669987009,0.5917075581064031] (9,-1; 9,-1), time: 30.0344s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8097s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8073s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8165s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_147, [-inf,inf]=>[1e-05,2.8514213381467264] (15,-1; 9,-1), time: 15.7019s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[1e-05,1.4862076159946913] (15,-1; 9,-1), time: 16.1957s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8660s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.2500526699305966,0.6331172485015135] (9,-1; 9,-1), time: 30.2714s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8901s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.06266155981951284,0.5662352076351687] (9,-1; 9,-1), time: 30.0152s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-0.48417301367465004,0.01202809745323392] (9,-1; 9,-1), time: 30.0134s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8503s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.4978056720102226,0.27929049704286185] (9,-1; 9,-1), time: 30.0463s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.48984941802603504,0.08258756520530226] (9,-1; 9,-1), time: 30.0554s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8369s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8644s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.211328439530825] (15,-1; 9,-1), time: 15.7880s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7984s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8222s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-1.2875102894987205,0.22543417412154226] (9,-1; 9,-1), time: 30.0144s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7915s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.6179715576812708,0.0721666234562794] (9,-1; 9,-1), time: 30.3565s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9407s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.1625063830576082,0.6015191681983485] (9,-1; 9,-1), time: 30.0103s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7958s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[1e-05,4.069479066955292] (15,-1; 9,-1), time: 15.7042s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9204s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7834s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7980s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9540s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8136s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.25275179012253707,0.4057885280393868] (9,-1; 9,-1), time: 30.0274s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8149s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[1e-05,1.5268901434716418] (15,-1; 9,-1), time: 15.8741s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.3058428309143145,0.38511688338747824] (9,-1; 9,-1), time: 30.1170s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8820s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[1e-05,0.8918442429581313] (15,-1; 9,-1), time: 15.8274s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,4.28119609540847] (15,-1; 9,-1), time: 15.8554s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.4170793117038571,0.10438480438743598] (9,-1; 9,-1), time: 30.0160s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8054s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7963s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6419s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[1e-05,2.735294944487787] (15,-1; 9,-1), time: 15.8232s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.140780311713721] (15,-1; 9,-1), time: 15.7930s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[1e-05,1.6655162675978827] (15,-1; 9,-1), time: 16.2535s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7992s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8230s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7835s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8205s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.5282377671329441,0.19138864203725736] (9,-1; 9,-1), time: 30.0102s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8272s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,1.3140254658467707] (15,-1; 9,-1), time: 16.1389s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8006s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.6123s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8101s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[1e-05,1.635327954371674] (15,-1; 9,-1), time: 16.0955s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8199s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8392s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[1e-05,0.706846108733063] (15,-1; 9,-1), time: 17.5640s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7421s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.10959516136011305,0.608730337152997] (9,-1; 9,-1), time: 30.2646s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8864s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-0.4726265306109822,0.3606750763157898] (9,-1; 9,-1), time: 30.0132s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8583s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.3188s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-0.43539230518161953,0.15694904872252763] (9,-1; 9,-1), time: 30.0109s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8331s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-0.3017601142133357,0.35473364745461883] (9,-1; 9,-1), time: 30.0138s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-0.594345585655917,0.3454017361070551] (9,-1; 9,-1), time: 30.4647s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-0.7980479076728744,0.03796013611260604] (9,-1; 9,-1), time: 30.6090s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7911s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[1e-05,1.2498837429704202] (15,-1; 9,-1), time: 15.8345s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-0.2621514407468868,0.5756451109573997] (9,-1; 9,-1), time: 30.3464s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.4342147699445521,0.21021281130952418] (9,-1; 9,-1), time: 30.2412s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.7037353252153844,0.06175385524223977] (9,-1; 9,-1), time: 30.1903s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.5450834100532245,0.13300659039564466] (9,-1; 9,-1), time: 30.0212s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-0.38028602795106,0.5013700121747922] (9,-1; 9,-1), time: 30.1425s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[1e-05,1.2887462703485706] (15,-1; 9,-1), time: 15.8917s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-0.19000503693591894,0.35453117496545317] (9,-1; 9,-1), time: 30.1884s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-0.18645871969937294,0.49197026451281345] (9,-1; 9,-1), time: 30.0115s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-0.8646067769422265,0.0396551257170656] (9,-1; 9,-1), time: 30.1359s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-0.4392228067466927,0.27947464708816205] (9,-1; 9,-1), time: 30.0527s, #vars: 2445, #constrs: 1890, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(83, -1), (50, -1), (64, -1), (86, -1), (34, -1), (191, -1), (45, -1), (22, -1), (184, 1), (169, -1), (38, -1), (58, -1), (144, 1), (36, -1), (183, -1), (11, -1), (111, -1), (196, -1), (48, -1), (54, -1), (67, -1), (77, -1), (163, -1), (157, -1), (56, -1), (106, -1), (89, -1), (39, -1), (29, -1), (164, -1), (12, -1), (152, -1), (25, -1), (90, -1), (118, -1), (130, -1), (93, -1), (143, -1), (53, -1), (44, -1), (99, -1), (63, -1), (171, 1), (116, -1), (42, -1), (195, -1), (76, 1), (162, -1), (182, -1), (91, 1), (3, -1), (40, -1), (159, -1), (100, -1), (135, -1), (138, 1), (149, -1), (23, -1), (160, -1), (96, -1), (102, -1), (122, 1), (49, -1), (30, -1), (57, -1), (10, -1), (20, -1), (16, -1), (79, -1), (18, 1), (110, -1), (9, 1), (47, -1), (85, -1), (146, -1), (127, 1), (65, 1), (61, -1), (112, -1), (174, -1), (147, -1), (46, -1), (108, -1), (35, -1), (71, -1), (97, 1), (32, -1), (26, -1), (126, -1), (114, -1), (128, -1), (115, -1), (19, -1), (94, -1), (43, -1), (55, 1), (139, -1), (134, -1), (82, -1), (178, -1), (75, 1), (101, 1), (168, -1), (192, -1), (189, -1), (187, -1), (2, -1), (176, -1), (24, 1), (69, 1), (120, -1), (161, -1), (109, -1), (166, -1), (41, -1), (190, -1), (14, -1), (193, 1), (98, -1), (117, -1), (173, -1), (165, -1), (81, -1), (123, 1), (80, -1), (148, -1), (129, 1), (27, -1), (136, 1), (51, -1), (141, -1), (180, -1), (113, -1), (145, -1), (103, -1), (1, -1), (87, -1), (84, -1), (13, -1), (92, -1), (60, 1), (137, -1), (198, -1), (177, -1), (7, -1), (21, 1), (70, -1), (121, -1), (133, -1), (140, -1), (104, -1), (179, -1), (150, -1)]
best_l after optimization: 12.639820098876953 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.862772941589355
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.94341850,  2.66772795,  0.52214193,  3.46886158,  1.54125977,
          0.63651180,  2.29599452,  0.84096336, -0.27706003]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 1039.15869140625, ub improved 1631.1248779296875, time 172.7588
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_174', 'lay14_197', 'lay14_7', 'lay14_40', 'lay14_11', 'lay14_126', 'lay14_82', 'lay14_129', 'lay14_106', 'lay14_69', 'lay14_21', 'lay14_16', 'lay14_145', 'lay14_0', 'lay14_134', 'lay14_136', 'lay14_41', 'lay14_167', 'lay14_74', 'lay14_146', 'lay14_47', 'lay14_153', 'lay14_58', 'lay14_193', 'lay14_10', 'lay14_39', 'lay14_184', 'lay14_149', 'lay14_23', 'lay14_70', 'lay14_36', 'lay14_97', 'lay14_61', 'lay14_154', 'lay14_125', 'lay14_118', 'lay14_12', 'lay14_178', 'lay14_114', 'lay14_87', 'lay14_8', 'lay14_163', 'lay14_64', 'lay14_148', 'lay14_102', 'lay14_92', 'lay14_179', 'lay14_34', 'lay14_30', 'lay14_144', 'lay14_113', 'lay14_173', 'lay14_107', 'lay14_150', 'lay14_177', 'lay14_66', 'lay14_181', 'lay14_140', 'lay14_59', 'lay14_56', 'lay14_186', 'lay14_195', 'lay14_170', 'lay14_135', 'lay14_111', 'lay14_26', 'lay14_183', 'lay14_165', 'lay14_89', 'lay14_88', 'lay14_141', 'lay14_121', 'lay14_48', 'lay14_161', 'lay14_128', 'lay14_90', 'lay14_123', 'lay14_6', 'lay14_160', 'lay14_43', 'lay14_81', 'lay14_57', 'lay14_55', 'lay14_157', 'lay14_51', 'lay14_31', 'lay14_77', 'lay14_49', 'lay14_32', 'lay14_127', 'lay14_124', 'lay14_190', 'lay14_27', 'lay14_65', 'lay14_71', 'lay14_14', 'lay14_29', 'lay14_94', 'lay14_4', 'lay14_63', 'lay14_76', 'lay14_25', 'lay14_158', 'lay14_130', 'lay14_52', 'lay14_103', 'lay14_139', 'lay14_104', 'lay14_194', 'lay14_162', 'lay14_166', 'lay14_156', 'lay14_93', 'lay14_147', 'lay14_142', 'lay14_168', 'lay14_98', 'lay14_37', 'lay14_172', 'lay14_95', 'lay14_110', 'lay14_73', 'lay14_151', 'lay14_180', 'lay14_75', 'lay14_99', 'lay14_83', 'lay14_185', 'lay14_143', 'lay14_68', 'lay14_122', 'lay14_155', 'lay14_188', 'lay14_22', 'lay14_28', 'lay14_72', 'lay14_78', 'lay14_38', 'lay14_115', 'lay14_33', 'lay14_24', 'lay14_13', 'lay14_84', 'lay14_19', 'lay14_159', 'lay14_85', 'lay14_117', 'lay14_196', 'lay14_86', 'lay14_79', 'lay14_15', 'lay14_3', 'lay14_54', 'lay14_101', 'lay14_164', 'lay14_45', 'lay14_17', 'lay14_62', 'lay14_109', 'lay14_50', 'lay14_152', 'lay14_176', 'lay14_1', 'lay14_80', 'lay14_67', 'lay14_120', 'lay14_35', 'lay14_53', 'lay14_108', 'lay14_96', 'lay14_198', 'lay14_138', 'lay14_20', 'lay14_169', 'lay14_119', 'lay14_105', 'lay14_175', 'lay14_9', 'lay14_46', 'lay14_132', 'lay14_199', 'lay14_137', 'lay14_5', 'lay14_42', 'lay14_18', 'lay14_131', 'lay14_44', 'lay14_60', 'lay14_187', 'lay14_2', 'lay14_91', 'lay14_171', 'lay14_191', 'lay14_133', 'lay14_192', 'lay14_189', 'lay14_182', 'lay14_112', 'lay14_100', 'lay14_116'] filter: 1.0
Solving MIP for lay14_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9290s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2352s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4749s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4749s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4870s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6120s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6159s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6177s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6231s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6570s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6930s, #vars: 2769, #constrs: 2276, improved: True
Solving MIP for lay14_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7429s, #vars: 2769, #constrs: 2276, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(61, -1), (58, -1), (13, -1), (183, -1), (145, -1), (86, -1), (111, -1), (1, -1), (41, -1), (118, -1), (34, -1), (98, -1), (174, -1), (117, -1), (175, -1), (142, -1), (96, -1), (90, -1), (160, -1), (74, -1), (103, 1), (35, -1), (115, -1), (139, -1), (47, -1), (95, 1), (30, 1), (107, -1), (97, -1), (71, -1), (125, -1), (93, -1), (4, -1), (23, -1), (146, -1), (21, -1), (165, -1), (154, -1), (171, -1), (151, -1), (172, -1), (119, -1), (116, -1), (130, -1), (55, -1), (57, -1), (132, -1), (182, 1), (9, -1), (170, -1), (113, -1), (194, -1), (83, 1), (186, -1), (56, -1), (36, -1), (190, -1), (75, -1), (188, -1), (50, -1), (19, 1), (52, 1), (169, -1), (17, -1), (180, -1), (54, -1), (42, -1), (72, -1), (106, -1), (89, -1), (123, 1), (108, -1), (3, -1), (161, -1), (94, -1), (62, -1), (134, -1), (149, 1), (66, 1), (124, -1), (79, -1), (88, -1), (147, 1), (133, -1), (14, 1), (53, -1), (40, 1), (168, -1), (85, -1), (80, 1), (121, -1), (78, 1), (76, -1), (179, 1), (20, -1), (81, 1), (18, -1), (101, -1), (198, -1), (51, 1), (5, 1), (67, 1), (156, -1), (26, -1), (153, -1), (16, -1), (159, -1), (110, -1), (195, -1), (162, -1), (143, 1), (193, -1), (10, -1), (0, -1), (43, 1), (191, -1), (126, 1), (6, -1), (70, -1), (87, -1), (92, -1), (192, -1), (33, -1), (135, -1), (167, -1), (7, -1), (166, -1), (157, -1), (158, -1), (189, -1), (164, 1), (73, -1), (48, -1), (178, -1), (144, -1), (37, 1), (99, -1), (29, -1)]

all verified at 0th iter
best_l after optimization: 22.411827087402344 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06843876838684082
alpha-CROWN with intermediate bounds by MIP: tensor([[2.07286429, 3.75248146, 1.61697364, 4.75315857, 2.78446007, 1.67723823,
         3.14076138, 1.96573305, 0.64815617]], device='cuda:0') None
min of alpha-CROWN bounds 0.6481561660766602>=0, verified!
MIP finished with 589.6749303340912s
Run final alpha-CROWN after MIP solving on layer 13 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.411827087402344 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06473565101623535
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.07286429, 3.75248146, 1.61697364, 4.75315857, 2.78446007, 1.67723823,
         3.14076138, 1.96573305, 0.64815617]], device='cuda:0') None
refined global lb: tensor([[2.07286429],
        [3.75248146],
        [1.61697364],
        [4.75315857],
        [2.78446007],
        [1.67723823],
        [3.14076138],
        [1.96573305],
        [0.64815617]], device='cuda:0') min: tensor(0.64815617, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 604.6647 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 604.6586486764221, max time: 604.6646952629089
mean time for verified SAFE instances (total 1): 604.6646952629089, max time: 604.6646952629089
safe-incomplete-refine (total 1), index: [0]
