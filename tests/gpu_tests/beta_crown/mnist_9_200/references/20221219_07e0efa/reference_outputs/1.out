Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_200
  path: mnist_9_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 29
  end: 30
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 03:19:29 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_200]_start=29_end=30_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-2.16338611,  5.30384254, -1.20036507, -1.64464474, -1.12465823,
         -0.42532042, -0.87205631,  0.64180928, -0.16331589, -0.73633993]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [54]; unstable size 54; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 89 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [89]; unstable size 89; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [127]; unstable size 127; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 187; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1580.42028809, -2390.69653320, -2224.83471680, -2375.12744141,
         -2344.69653320, -2217.63476562, -2045.18090820, -2443.73046875,
         -2620.33105469]], device='cuda:0') None
best_l after optimization: -13277.20703125 with beta sum per layer: []
alpha/beta optimization time: 11.019900798797607
initial alpha-CROWN bounds: tensor([[-1039.53979492, -1594.15686035, -1478.17883301, -1562.80895996,
         -1585.20703125, -1481.22583008, -1257.20251465, -1581.46813965,
         -1697.41979980]], device='cuda:0')
Worst class: (+ rhs) -1697.4197998046875
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.16338611,  5.30384254, -1.20036507, -1.64464474, -1.12465823,
         -0.42532042, -0.87205631,  0.64180928, -0.16331589, -0.73633993]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.87137723,  4.45603848, -1.00063455, -1.39739299, -0.94871521,
          -0.27914742, -0.75020701,  0.53441483, -0.02167296, -0.57753658],
         [-1.87137723,  4.45603848, -1.00063455, -1.39739299, -0.94871521,
          -0.27914742, -0.75020701,  0.53441483, -0.02167296, -0.57753658]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.32741547, 5.45667315, 5.85343170, 5.40475368, 4.73518610,
          5.20624542, 3.92162371, 4.47771168, 5.03357506]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7070 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [54]; unstable size 54; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 89 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [89]; unstable size 89; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 127 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [127]; unstable size 127; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 187 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 187; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_9', 'lay4_121', 'lay4_73', 'lay4_87', 'lay4_95', 'lay4_27', 'lay4_6', 'lay4_92', 'lay4_13', 'lay4_93', 'lay4_81', 'lay4_60', 'lay4_145', 'lay4_167', 'lay4_141', 'lay4_77', 'lay4_45', 'lay4_136', 'lay4_137', 'lay4_43', 'lay4_19', 'lay4_97', 'lay4_175', 'lay4_51', 'lay4_50', 'lay4_8', 'lay4_128', 'lay4_139', 'lay4_88', 'lay4_84', 'lay4_1', 'lay4_99', 'lay4_124', 'lay4_178', 'lay4_138', 'lay4_30', 'lay4_184', 'lay4_168', 'lay4_115', 'lay4_42', 'lay4_116', 'lay4_39', 'lay4_194', 'lay4_173', 'lay4_192', 'lay4_183', 'lay4_120', 'lay4_15', 'lay4_90', 'lay4_5', 'lay4_53', 'lay4_3', 'lay4_165', 'lay4_114', 'lay4_172', 'lay4_98', 'lay4_199', 'lay4_37', 'lay4_133', 'lay4_123', 'lay4_64', 'lay4_134', 'lay4_20', 'lay4_171', 'lay4_154', 'lay4_57', 'lay4_122', 'lay4_75', 'lay4_35', 'lay4_65', 'lay4_26', 'lay4_197', 'lay4_25', 'lay4_186', 'lay4_103', 'lay4_112', 'lay4_28', 'lay4_58', 'lay4_91', 'lay4_54', 'lay4_18', 'lay4_33', 'lay4_162', 'lay4_166', 'lay4_70', 'lay4_153'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:645: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3646s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5138s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5438s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_27, [-inf,inf]=>[1e-05,0.7449830461510835] (15,-1; 2,-1), time: 3.3289s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.6330223394161696,0.062113530752598275] (2,-1; 2,-1), time: 3.7702s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.04623278519544983,0.7793735786194349] (2,-1; 2,-1), time: 4.3902s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_141, [-inf,inf]=>[-0.5559669467749352,0.06708821589263457] (2,-1; 2,-1), time: 4.6288s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_73, [-inf,inf]=>[-0.3762728967141096,0.28572144542018413] (2,-1; 2,-1), time: 5.0547s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.26598803597911086,0.3520940153481919] (2,-1; 2,-1), time: 5.2682s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-0.15385767228105954,0.37705830355916886] (2,-1; 2,-1), time: 5.3343s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3855s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_81, [-inf,inf]=>[-0.46849357721589135,0.02670045589225019] (2,-1; 2,-1), time: 5.9461s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5199s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.5096337444922816,0.12553122002858497] (2,-1; 2,-1), time: 5.9800s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_121, [-inf,inf]=>[-0.3379248348020089,0.2532166363806252] (2,-1; 2,-1), time: 6.1523s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.44150115651416877,0.08276130312182192] (2,-1; 2,-1), time: 6.4853s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7069s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_167, [-inf,inf]=>[-0.5005693442616885,0.051984438730198375] (2,-1; 2,-1), time: 6.7404s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-0.3983179352261309,0.06776360968763036] (2,-1; 2,-1), time: 6.7903s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.051046459706391545,0.5114210091614988] (2,-1; 2,-1), time: 7.1515s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-0.6228715989306477,0.017554818111300163] (2,-1; 2,-1), time: 4.7698s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5223s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[1e-05,0.9157347848494191] (15,-1; 2,-1), time: 2.9981s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5123s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2970s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[1e-05,0.8872293800944342] (15,-1; 2,-1), time: 3.1828s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2541s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-0.4114241306310109,0.11411740224680496] (2,-1; 2,-1), time: 8.4451s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3473s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-0.2469840701461924,0.33683835125663636] (2,-1; 2,-1), time: 5.7719s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6648s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_19, [-inf,inf]=>[-0.5695154365920668,0.06202105805447575] (2,-1; 2,-1), time: 5.4179s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0153s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_42, [-inf,inf]=>[1e-05,0.9572957570525532] (15,-1; 2,-1), time: 2.1354s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5521s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_124, [-inf,inf]=>[-0.10417670425781934,0.643433654198468] (2,-1; 2,-1), time: 3.2999s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3004s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2672s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.18435999172707804,0.36701664206793727] (2,-1; 2,-1), time: 5.6598s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6129s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.5856234163442181,0.01726611894879508] (2,-1; 2,-1), time: 4.3314s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[-0.31931495944497934,0.3972026594710798] (2,-1; 2,-1), time: 4.6019s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0320s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.592963733501088,0.038008634671616776] (2,-1; 2,-1), time: 6.3165s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_50, [-inf,inf]=>[-0.08860976625284651,0.45608716404186617] (2,-1; 2,-1), time: 7.3821s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3395s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0317s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.35000724829409147,0.4561307471235125] (2,-1; 2,-1), time: 4.9692s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3541s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_37, [-inf,inf]=>[1e-05,0.8975345406828092] (15,-1; 2,-1), time: 1.3868s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_192, [-inf,inf]=>[-0.5645895276347931,0.04956978354030646] (2,-1; 2,-1), time: 4.4277s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3505s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2689s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_90, [-inf,inf]=>[1e-05,0.6585045019483186] (15,-1; 2,-1), time: 4.4729s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_183, [-inf,inf]=>[-0.0035573117990244435,0.5541733803927712] (2,-1; 2,-1), time: 5.1830s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3544s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_116, [-inf,inf]=>[-0.4318697184344515,0.02293121238173443] (2,-1; 2,-1), time: 6.8341s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.2463633931217485,0.37073098940080745] (2,-1; 2,-1), time: 5.2886s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3111s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7349s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.3629494877402256,0.23903273261021457] (2,-1; 2,-1), time: 5.1450s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[1e-05,0.8787738892584991] (15,-1; 2,-1), time: 1.9627s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3263s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3158s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-0.43723989344038655,0.06561010190200953] (2,-1; 2,-1), time: 9.2551s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_123, [-inf,inf]=>[-0.11951074834773377,0.37818222565256604] (2,-1; 2,-1), time: 4.6121s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.43854598617628,0.03294288028444513] (2,-1; 2,-1), time: 8.3790s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_172, [-inf,inf]=>[1e-05,0.5177224786448151] (15,-1; 2,-1), time: 7.4897s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[1e-05,0.7092988206576195] (15,-1; 2,-1), time: 2.5418s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_171, [-inf,inf]=>[1e-05,0.5668661765826889] (15,-1; 2,-1), time: 6.3672s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_64, [-inf,inf]=>[-0.31932957513513766,0.2925234022828486] (2,-1; 2,-1), time: 6.8396s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-0.40047658923708557,0.19261790867916256] (2,-1; 2,-1), time: 4.1001s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[0.0011717705593689317,0.6451526457163343] (2,-1; 2,-1), time: 5.4506s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_186, [-inf,inf]=>[-0.5979158714506958,0.0011867175539986077] (2,-1; 2,-1), time: 5.3371s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.5641977568721208,0.0027772701381470156] (2,-1; 2,-1), time: 4.5735s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_35, [-inf,inf]=>[-0.2958676336637768,0.17848274187858912] (2,-1; 2,-1), time: 6.3270s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_57, [-inf,inf]=>[-0.4888341413897129,0.04424701961810793] (2,-1; 2,-1), time: 6.8407s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.0530s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.5114930151738211,0.01767165821587143] (2,-1; 2,-1), time: 5.9454s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_166, [-inf,inf]=>[1e-05,0.7539914622401108] (15,-1; 2,-1), time: 2.1434s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[1e-05,0.8013222502925902] (15,-1; 2,-1), time: 3.1573s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-0.14881213170151739,0.30710110522418094] (2,-1; 2,-1), time: 10.8224s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-0.6933712662514897,0.07783896771001235] (2,-1; 2,-1), time: 3.1928s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-0.7068738955359002,0.12260633314032457] (2,-1; 2,-1), time: 5.3219s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_153, [-inf,inf]=>[-0.4179765850331192,0.3826300332509154] (2,-1; 2,-1), time: 4.7860s, #vars: 1293, #constrs: 562, improved: True
Solving MIP for lay4_20, [-inf,inf]=>[-0.23668280673373027,0.294017168341513] (2,-1; 2,-1), time: 14.4129s, #vars: 1293, #constrs: 562, improved: True
PGD done for relu layer 2
MIP improved 86 nodes out of 86 unstable nodes, lb improved 13.460704803466797, ub improved 15.394975662231445, time 28.6015
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_8', 'lay6_34', 'lay6_61', 'lay6_10', 'lay6_190', 'lay6_124', 'lay6_18', 'lay6_189', 'lay6_35', 'lay6_133', 'lay6_172', 'lay6_62', 'lay6_36', 'lay6_123', 'lay6_75', 'lay6_179', 'lay6_106', 'lay6_111', 'lay6_192', 'lay6_30', 'lay6_90', 'lay6_154', 'lay6_167', 'lay6_49', 'lay6_132', 'lay6_88', 'lay6_145', 'lay6_72', 'lay6_21', 'lay6_100', 'lay6_96', 'lay6_31', 'lay6_58', 'lay6_55', 'lay6_110', 'lay6_1', 'lay6_105', 'lay6_139', 'lay6_118', 'lay6_17', 'lay6_183', 'lay6_9', 'lay6_130', 'lay6_93', 'lay6_65', 'lay6_43', 'lay6_101', 'lay6_152', 'lay6_138', 'lay6_135', 'lay6_4', 'lay6_146', 'lay6_2', 'lay6_144', 'lay6_153', 'lay6_68', 'lay6_78', 'lay6_163', 'lay6_69', 'lay6_136', 'lay6_84', 'lay6_76', 'lay6_141', 'lay6_186', 'lay6_122', 'lay6_156', 'lay6_41', 'lay6_20', 'lay6_109', 'lay6_199', 'lay6_15', 'lay6_42', 'lay6_12', 'lay6_117', 'lay6_170', 'lay6_95', 'lay6_3', 'lay6_158', 'lay6_85', 'lay6_0', 'lay6_94', 'lay6_103', 'lay6_187', 'lay6_5', 'lay6_164', 'lay6_149', 'lay6_140', 'lay6_127', 'lay6_47', 'lay6_74', 'lay6_161', 'lay6_134', 'lay6_51', 'lay6_180', 'lay6_162', 'lay6_191', 'lay6_83', 'lay6_29', 'lay6_107', 'lay6_165', 'lay6_27', 'lay6_175', 'lay6_137', 'lay6_53', 'lay6_188', 'lay6_86', 'lay6_119', 'lay6_147', 'lay6_81', 'lay6_112', 'lay6_82', 'lay6_46', 'lay6_73', 'lay6_142', 'lay6_28', 'lay6_37', 'lay6_166'] filter: 1.0
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3242s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4497s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4539s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4523s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5763s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3896s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1665s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0265s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3744s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3828s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2866s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3072s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6115s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9898s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2965s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.7750s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3270s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9778s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4064s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.6749s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3026s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3194s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3800s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3822s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.0561s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.6847s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.41200184904101644,0.3779417696852823] (2,-1; 2,-1), time: 19.1028s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[1e-05,0.6305256255169074] (15,-1; 9,-1), time: 18.8317s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2972s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-0.5761555757113141,0.14689179527597834] (2,-1; 2,-1), time: 19.9390s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3445s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_31, [-inf,inf]=>[1e-05,0.885572073174877] (15,-1; 9,-1), time: 15.4097s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3863s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.44000268113597146,0.1257807525716344] (9,-1; 2,-1), time: 21.9131s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.5568274973014645,0.07234639141585508] (2,-1; 9,-1), time: 22.2705s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.5658565264106639,0.061419661437346465] (2,-1; 9,-1), time: 21.9527s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3543s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.0530s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2955s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.4586323839390487,0.07738079548952677] (9,-1; 2,-1), time: 22.9758s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-0.5478883171045165,0.10226772169514887] (9,-1; 9,-1), time: 30.0238s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.16264346437037022,0.3340016007428721] (9,-1; 9,-1), time: 30.0367s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2950s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-0.42653860021977513,0.012769359820592192] (9,-1; 2,-1), time: 26.3346s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_154, [-inf,inf]=>[-0.44551924011108784,0.0767893420254033] (9,-1; 9,-1), time: 30.0245s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3760s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[-0.2559496817856352,0.2505884067803559] (9,-1; 9,-1), time: 30.0284s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3728s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_152, [-inf,inf]=>[1e-05,0.961620821531903] (15,-1; 2,-1), time: 11.1090s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2927s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-0.19201683203212108,0.2533698965431406] (9,-1; 2,-1), time: 26.4403s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_17, [-inf,inf]=>[-0.07680852424345741,0.397146159314947] (9,-1; 2,-1), time: 20.9749s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3479s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3052s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9155s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.20560864293033163,0.31091953941327133] (2,-1; 2,-1), time: 16.4327s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-0.30864205171042175,0.19720053008690963] (2,-1; 9,-1), time: 20.2954s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_183, [-inf,inf]=>[-0.5015364376449576,0.0037589393021297646] (9,-1; 9,-1), time: 30.0164s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-0.3519770644200573,0.12384605336562887] (9,-1; 9,-1), time: 30.0201s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3021s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-0.20313770193088612,0.29951991392184524] (9,-1; 9,-1), time: 30.0204s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_146, [-inf,inf]=>[-0.2941229213957805,0.1839695340169233] (9,-1; 9,-1), time: 30.0167s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6932s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[-0.47345300035354404,0.08284225674348754] (9,-1; 9,-1), time: 30.0119s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6414s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[-0.4494893266120103,0.015704619875387286] (2,-1; 9,-1), time: 23.0278s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.07872020521605749,0.4469976091815338] (9,-1; 2,-1), time: 26.4106s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3687s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_153, [-inf,inf]=>[-0.10192181074363177,0.42832503806095007] (9,-1; 9,-1), time: 30.2859s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3009s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-0.1006524980317929,0.4696999518407086] (9,-1; 2,-1), time: 25.2753s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2979s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2989s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-0.31692535890370155,0.20043682495934384] (9,-1; 9,-1), time: 30.0524s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-0.19436666772595446,0.2217993343070824] (9,-1; 9,-1), time: 30.0568s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2765s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3197s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[-0.3997204686981477,0.12313112564512704] (9,-1; 9,-1), time: 30.0254s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.2426409297685017,0.41334640075351914] (9,-1; 9,-1), time: 30.0193s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3680s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3249s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3118s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[-0.3380311776141281,0.16057678953216337] (9,-1; 9,-1), time: 30.0468s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_187, [-inf,inf]=>[1e-05,0.7653044695696012] (15,-1; 2,-1), time: 9.3385s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3344s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[1e-05,0.7158432560674405] (15,-1; 9,-1), time: 15.3813s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-0.2809014530867276,0.3244737950534538] (9,-1; 9,-1), time: 30.2839s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[1e-05,0.7159693053476991] (15,-1; 9,-1), time: 15.3234s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.2519977092350471,0.1948715934976345] (9,-1; 9,-1), time: 30.0235s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4855s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.1239s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3714s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[1e-05,1.4565011822866167] (15,-1; 2,-1), time: 5.6152s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.1839s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[1e-05,0.9673946574815872] (15,-1; 2,-1), time: 5.5874s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[1e-05,0.6554683527672819] (15,-1; 9,-1), time: 15.8027s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.47291965206797004,0.017092566134144338] (9,-1; 9,-1), time: 30.5016s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[1e-05,1.1240454645161515] (15,-1; 2,-1), time: 7.1087s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4193s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-0.31376720595404844,0.30331326975752265] (9,-1; 2,-1), time: 19.3398s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-0.10595884396597331,0.34521629932774633] (9,-1; 9,-1), time: 30.2696s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3142s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[1e-05,1.2040633468804476] (15,-1; 2,-1), time: 10.0710s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.012612668714600123,0.5199843804128964] (9,-1; 9,-1), time: 30.0196s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_103, [-inf,inf]=>[-0.5333688383639184,0.09895198736202664] (9,-1; 9,-1), time: 30.0190s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[1e-05,0.9359298666702568] (15,-1; 9,-1), time: 15.3063s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-0.16943396457525894,0.2548487525965659] (9,-1; 9,-1), time: 30.0138s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-0.04724738548352964,0.44387027125137235] (9,-1; 2,-1), time: 25.7929s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.27042393071741416,0.2955210107389466] (9,-1; 9,-1), time: 30.0104s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[1e-05,0.7487887098137447] (15,-1; 9,-1), time: 15.2948s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_134, [-inf,inf]=>[-0.4560007318528381,0.024835750872649692] (9,-1; 9,-1), time: 30.0278s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_180, [-inf,inf]=>[-0.5551925110852308,0.04541703272589445] (9,-1; 9,-1), time: 30.0192s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_188, [-inf,inf]=>[-0.0762871760523245,0.387762860397184] (2,-1; 9,-1), time: 22.4537s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_142, [-inf,inf]=>[1e-05,0.9430836760585932] (15,-1; 2,-1), time: 11.8129s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[1e-05,0.5990805048258355] (15,-1; 2,-1), time: 19.3593s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[1e-05,0.6656988963538722] (15,-1; 9,-1), time: 18.8200s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[1e-05,1.1055364706651654] (15,-1; 9,-1), time: 15.3371s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[1e-05,0.5314810888863145] (15,-1; 9,-1), time: 16.2663s, #vars: 1581, #constrs: 894, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(27, 1), (92, -1), (45, -1), (136, -1), (97, 1), (175, 1), (51, -1), (128, -1), (139, -1), (84, -1), (1, -1), (99, -1), (178, -1), (184, -1), (168, -1), (42, 1), (194, -1), (173, -1), (90, 1), (5, -1), (53, -1), (165, -1), (172, 1), (98, -1), (199, -1), (37, 1), (133, -1), (134, -1), (171, 1), (154, -1), (122, -1), (75, 1), (65, -1), (26, 1), (197, -1), (25, -1), (28, -1), (91, -1), (54, -1), (18, 1), (162, 1), (166, 1)]
best_l after optimization: -1778.3492431640625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.235725164413452
alpha-CROWN with intermediate bounds by MIP: tensor([[-139.29409790, -212.80072021, -197.76951599, -209.43412781,
         -212.86929321, -197.70011902, -168.39381409, -211.92398071,
         -228.16358948]], device='cuda:0') None
MIP improved 118 nodes out of 118 unstable nodes, lb improved 26.551969528198242, ub improved 37.757450103759766, time 99.9466
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_193', 'lay8_160', 'lay8_36', 'lay8_119', 'lay8_91', 'lay8_29', 'lay8_76', 'lay8_124', 'lay8_130', 'lay8_155', 'lay8_18', 'lay8_162', 'lay8_28', 'lay8_34', 'lay8_71', 'lay8_170', 'lay8_181', 'lay8_125', 'lay8_19', 'lay8_22', 'lay8_190', 'lay8_114', 'lay8_85', 'lay8_100', 'lay8_15', 'lay8_149', 'lay8_52', 'lay8_167', 'lay8_118', 'lay8_156', 'lay8_40', 'lay8_65', 'lay8_113', 'lay8_102', 'lay8_195', 'lay8_12', 'lay8_154', 'lay8_176', 'lay8_158', 'lay8_92', 'lay8_134', 'lay8_20', 'lay8_39', 'lay8_142', 'lay8_37', 'lay8_140', 'lay8_44', 'lay8_35', 'lay8_60', 'lay8_45', 'lay8_33', 'lay8_186', 'lay8_128', 'lay8_0', 'lay8_30', 'lay8_122', 'lay8_105', 'lay8_4', 'lay8_187', 'lay8_131', 'lay8_83', 'lay8_56', 'lay8_189', 'lay8_98', 'lay8_179', 'lay8_188', 'lay8_111', 'lay8_93', 'lay8_117', 'lay8_84', 'lay8_94', 'lay8_42', 'lay8_151', 'lay8_8', 'lay8_141', 'lay8_104', 'lay8_137', 'lay8_168', 'lay8_129', 'lay8_192', 'lay8_157', 'lay8_50', 'lay8_103', 'lay8_163', 'lay8_139', 'lay8_184', 'lay8_153', 'lay8_73', 'lay8_173', 'lay8_90', 'lay8_126', 'lay8_133', 'lay8_66', 'lay8_199', 'lay8_96', 'lay8_183', 'lay8_99', 'lay8_145', 'lay8_1', 'lay8_13', 'lay8_49', 'lay8_185', 'lay8_43', 'lay8_95', 'lay8_164', 'lay8_53', 'lay8_79', 'lay8_194', 'lay8_6', 'lay8_46', 'lay8_51', 'lay8_5', 'lay8_97', 'lay8_16', 'lay8_48', 'lay8_63', 'lay8_68', 'lay8_135', 'lay8_70', 'lay8_69', 'lay8_198', 'lay8_177', 'lay8_64', 'lay8_101', 'lay8_75', 'lay8_81', 'lay8_78', 'lay8_25', 'lay8_57', 'lay8_3', 'lay8_116', 'lay8_47', 'lay8_21', 'lay8_175', 'lay8_174', 'lay8_159', 'lay8_166', 'lay8_123', 'lay8_150', 'lay8_115', 'lay8_144', 'lay8_14', 'lay8_82', 'lay8_54', 'lay8_59', 'lay8_178', 'lay8_172', 'lay8_74', 'lay8_152', 'lay8_32', 'lay8_58', 'lay8_10', 'lay8_132', 'lay8_11', 'lay8_112', 'lay8_107', 'lay8_7', 'lay8_86', 'lay8_9', 'lay8_72', 'lay8_180', 'lay8_147', 'lay8_171', 'lay8_165', 'lay8_110', 'lay8_121', 'lay8_38', 'lay8_27', 'lay8_55', 'lay8_169', 'lay8_26', 'lay8_196', 'lay8_23', 'lay8_17', 'lay8_120', 'lay8_2', 'lay8_106', 'lay8_143', 'lay8_109', 'lay8_87', 'lay8_127', 'lay8_88'] filter: 1.0
Solving MIP for lay8_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4762s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5607s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5858s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5839s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6232s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6352s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6774s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7249s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7550s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7910s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6302s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6678s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1286s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5521s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4178s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4558s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2747s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5656s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4528s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5270s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4534s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5152s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5418s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.5717s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_114, [-inf,inf]=>[1e-05,0.7852804534241103] (15,-1; 9,-1), time: 16.2454s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4326s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[1e-05,0.8395253666306436] (15,-1; 9,-1), time: 15.4346s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4267s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4090s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[1e-05,0.6170497952354272] (15,-1; 9,-1), time: 18.6365s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[1e-05,0.6298863275895054] (15,-1; 9,-1), time: 16.4420s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4196s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_160, [-inf,inf]=>[-0.21875800380802088,0.31725067702147386] (9,-1; 9,-1), time: 30.0237s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-0.21572747615148904,0.2860499029271291] (9,-1; 9,-1), time: 30.0359s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.08093054279920704,0.3859531704173173] (9,-1; 9,-1), time: 30.0274s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4545s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4633s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-0.3453359419312544,0.17178591506599447] (9,-1; 9,-1), time: 30.0208s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[-0.3357570038532313,0.21947178945636922] (9,-1; 9,-1), time: 30.0250s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.29845946693727543,0.2597699236470031] (9,-1; 9,-1), time: 30.0195s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[-0.05239528748400484,0.5338464670558766] (9,-1; 9,-1), time: 30.0203s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-0.5578512448957559,0.03746972428401478] (9,-1; 9,-1), time: 30.0925s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4685s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4250s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5170s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4549s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[-0.2676384368393146,0.3014796829185296] (9,-1; 9,-1), time: 30.0163s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5197s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4486s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[-0.08117178459193983,0.48406233707954877] (9,-1; 9,-1), time: 30.0332s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5281s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4228s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4436s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.5062798107207908,0.043963981896824184] (9,-1; 9,-1), time: 30.2329s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4380s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4207s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2634s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[1e-05,1.1313409386196194] (15,-1; 9,-1), time: 15.4132s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4286s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4222s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4272s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5051s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[1e-05,0.7330196117046731] (15,-1; 9,-1), time: 15.4483s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4597s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4556s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4720s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4609s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6032s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4602s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4790s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4704s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-0.059211005507770746,0.5440280160666956] (9,-1; 9,-1), time: 30.0228s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4532s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.0368s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5353s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-0.9910939761394716,0.22198814701402972] (9,-1; 9,-1), time: 30.2011s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.4359860951118607,0.14306388486772056] (9,-1; 9,-1), time: 30.0134s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[1e-05,1.9121225577085321] (15,-1; 9,-1), time: 15.6154s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4833s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4383s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4444s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4841s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.2943s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4612s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.33727946025585814,0.4664415474900921] (9,-1; 9,-1), time: 30.2610s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-0.18493592676895493,0.4074227191523444] (9,-1; 9,-1), time: 30.0760s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.5207540084381832,0.052454098635698464] (9,-1; 9,-1), time: 30.0638s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-0.29152869623245314,0.11110492415935533] (9,-1; 9,-1), time: 30.0130s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.4896391197801955,0.07255319696499452] (9,-1; 9,-1), time: 30.0157s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-0.3813026442319854,0.14562916883139823] (9,-1; 9,-1), time: 30.0251s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4923s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4515s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4988s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.3375943616060875,0.3369782812313672] (9,-1; 9,-1), time: 30.0318s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4872s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[-0.42056170871477155,0.17772240655045293] (9,-1; 9,-1), time: 30.3991s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4478s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4645s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-0.233670891165411,0.24030484736807997] (9,-1; 9,-1), time: 30.0136s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4510s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[-0.2571089835760534,0.2414177468189577] (9,-1; 9,-1), time: 30.2116s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[1e-05,0.6065337909861898] (15,-1; 9,-1), time: 16.2441s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4123s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4241s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4084s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6566s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-0.33035614063032837,0.15026951111920608] (9,-1; 9,-1), time: 30.0371s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[1e-05,0.9169500089647464] (15,-1; 9,-1), time: 15.6557s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.44105529864537835,0.0982678685926313] (9,-1; 9,-1), time: 30.0513s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-0.6852809734825197,0.0525980355398092] (9,-1; 9,-1), time: 30.0229s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5356s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,0.8027055091982992] (15,-1; 9,-1), time: 15.4633s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.6347510855467795,0.12617843856556882] (9,-1; 9,-1), time: 30.0278s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4408s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,1.3552017555527203] (15,-1; 9,-1), time: 15.5311s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4364s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4353s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[1e-05,0.6788734704375169] (15,-1; 9,-1), time: 16.2456s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4367s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5160s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4228s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.8417592812062056] (15,-1; 9,-1), time: 15.4975s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-0.49744814624961214,0.023138144743473078] (9,-1; 9,-1), time: 30.0224s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-0.6836204121292264,0.1098635084190506] (9,-1; 9,-1), time: 30.0218s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.1489728902812733,0.3810183858060283] (9,-1; 9,-1), time: 30.0146s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[1e-05,1.314423683536285] (15,-1; 9,-1), time: 15.8876s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-0.6311809240485746,0.02982970280015483] (9,-1; 9,-1), time: 30.0471s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.5294927931118351,0.10311739234413957] (9,-1; 9,-1), time: 30.1013s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.07424070905833802,0.4712540059745608] (9,-1; 9,-1), time: 30.0127s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[1e-05,0.6536118339579411] (15,-1; 9,-1), time: 15.4659s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[1e-05,1.2821851214338897] (15,-1; 9,-1), time: 15.5183s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.39206589206747905,0.11398230177212856] (9,-1; 9,-1), time: 30.0141s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4434s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1005s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.3787991904490756,0.16301875791253304] (9,-1; 9,-1), time: 30.0188s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.45478286751947605,0.09864079607002156] (9,-1; 9,-1), time: 30.0201s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4599s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4746s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.19896240177693805,0.3640761616518866] (9,-1; 9,-1), time: 30.0157s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5062s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.39070085918947844,0.1100385601937] (9,-1; 9,-1), time: 30.0328s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.7933435615836215] (15,-1; 9,-1), time: 15.4644s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[1e-05,0.7639016688179301] (15,-1; 9,-1), time: 15.4637s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4541s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.7692s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5146s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4666s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4433s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[1e-05,0.7199605385779344] (15,-1; 9,-1), time: 22.3303s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[1e-05,0.9452919251103663] (15,-1; 2,-1), time: 14.1743s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.3644s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4853s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-0.22157400522625006,0.43444423970948864] (9,-1; 9,-1), time: 30.0137s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[1e-05,0.6791891404359623] (15,-1; 9,-1), time: 15.4328s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[1e-05,1.3887180664112242] (15,-1; 9,-1), time: 15.7395s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5162s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4323s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[1e-05,1.3356160655112688] (15,-1; 9,-1), time: 15.4801s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5319s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.18915002217182258,0.27906186596668126] (9,-1; 9,-1), time: 30.0243s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-0.28153196741897246,0.26418633887578746] (9,-1; 9,-1), time: 30.0120s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.5316019534879552,0.13840323706788027] (9,-1; 9,-1), time: 30.0234s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[1e-05,1.2322500730813803] (15,-1; 9,-1), time: 15.4497s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[1e-05,0.8254776482675886] (15,-1; 9,-1), time: 15.5171s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4800s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[1e-05,1.3380485049028676] (15,-1; 9,-1), time: 15.5071s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4993s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[1e-05,0.4569374781491151] (15,-1; 9,-1), time: 22.6814s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[1e-05,1.028633182696839] (15,-1; 9,-1), time: 15.4250s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[1e-05,1.0255212812990802] (15,-1; 9,-1), time: 15.5947s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[1e-05,1.6829823198321463] (15,-1; 9,-1), time: 15.5736s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.35746844641088116,0.22525146414614552] (9,-1; 9,-1), time: 30.0558s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-0.021126206784735094,0.4911584813566374] (9,-1; 9,-1), time: 30.0170s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[1e-05,1.4270618823132302] (15,-1; 9,-1), time: 15.5991s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[-0.37233259747127484,0.11279117051121193] (9,-1; 9,-1), time: 30.0146s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-0.2211399488350418,0.25143389164129964] (9,-1; 9,-1), time: 30.0144s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-0.26651942618363866,0.3264974952461331] (9,-1; 9,-1), time: 30.4020s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.5868070794074418] (15,-1; 9,-1), time: 15.4305s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,2.373711519926646] (15,-1; 9,-1), time: 15.4022s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.4986224863670548,0.044537134928208] (9,-1; 9,-1), time: 30.0202s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.2483775828326762,0.2187422671417557] (9,-1; 9,-1), time: 30.0296s, #vars: 1865, #constrs: 1220, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.4559843555822963,0.20965136608208518] (9,-1; 9,-1), time: 30.5086s, #vars: 1865, #constrs: 1220, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (34, -1), (190, -1), (18, -1), (189, -1), (35, -1), (133, -1), (172, -1), (123, -1), (75, -1), (179, -1), (106, -1), (192, 1), (30, -1), (90, -1), (167, -1), (49, -1), (132, -1), (88, -1), (100, -1), (96, -1), (31, 1), (58, -1), (110, -1), (1, -1), (105, -1), (139, -1), (118, -1), (130, -1), (93, -1), (43, -1), (101, -1), (152, 1), (4, -1), (2, -1), (68, -1), (136, -1), (84, -1), (186, -1), (122, -1), (156, -1), (41, -1), (12, -1), (117, -1), (95, 1), (158, 1), (85, -1), (0, -1), (187, 1), (5, -1), (149, -1), (140, -1), (47, -1), (74, -1), (161, 1), (51, -1), (162, -1), (191, -1), (107, -1), (165, -1), (27, 1), (175, -1), (137, -1), (53, 1), (86, -1), (119, 1), (147, 1), (81, 1), (112, 1), (82, 1), (46, 1), (73, -1), (142, 1), (28, 1), (37, -1), (166, 1)]
best_l after optimization: -239.74777221679688 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.165642976760864
alpha-CROWN with intermediate bounds by MIP: tensor([[-19.41213417, -27.36633301, -25.89164352, -28.30129242, -28.93586349,
         -26.16478729, -23.33828545, -28.62739944, -31.71003342]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 79.38858032226562, ub improved 122.59851837158203, time 154.4718
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_91', 'lay10_193', 'lay10_69', 'lay10_191', 'lay10_167', 'lay10_64', 'lay10_97', 'lay10_31', 'lay10_56', 'lay10_158', 'lay10_22', 'lay10_39', 'lay10_174', 'lay10_194', 'lay10_101', 'lay10_54', 'lay10_85', 'lay10_163', 'lay10_95', 'lay10_155', 'lay10_160', 'lay10_144', 'lay10_42', 'lay10_104', 'lay10_99', 'lay10_18', 'lay10_156', 'lay10_15', 'lay10_123', 'lay10_153', 'lay10_11', 'lay10_183', 'lay10_96', 'lay10_86', 'lay10_94', 'lay10_74', 'lay10_184', 'lay10_134', 'lay10_138', 'lay10_89', 'lay10_10', 'lay10_106', 'lay10_188', 'lay10_114', 'lay10_73', 'lay10_38', 'lay10_40', 'lay10_76', 'lay10_117', 'lay10_65', 'lay10_199', 'lay10_110', 'lay10_58', 'lay10_23', 'lay10_57', 'lay10_70', 'lay10_53', 'lay10_82', 'lay10_142', 'lay10_67', 'lay10_6', 'lay10_12', 'lay10_50', 'lay10_125', 'lay10_1', 'lay10_169', 'lay10_36', 'lay10_0', 'lay10_135', 'lay10_139', 'lay10_152', 'lay10_37', 'lay10_164', 'lay10_130', 'lay10_143', 'lay10_47', 'lay10_129', 'lay10_30', 'lay10_2', 'lay10_79', 'lay10_92', 'lay10_60', 'lay10_115', 'lay10_19', 'lay10_48', 'lay10_93', 'lay10_35', 'lay10_63', 'lay10_154', 'lay10_162', 'lay10_52', 'lay10_168', 'lay10_16', 'lay10_55', 'lay10_102', 'lay10_149', 'lay10_61', 'lay10_14', 'lay10_112', 'lay10_182', 'lay10_5', 'lay10_192', 'lay10_197', 'lay10_111', 'lay10_159', 'lay10_34', 'lay10_124', 'lay10_157', 'lay10_62', 'lay10_41', 'lay10_100', 'lay10_109', 'lay10_185', 'lay10_128', 'lay10_72', 'lay10_176', 'lay10_75', 'lay10_24', 'lay10_171', 'lay10_27', 'lay10_9', 'lay10_43', 'lay10_68', 'lay10_45', 'lay10_173', 'lay10_131', 'lay10_7', 'lay10_122', 'lay10_166', 'lay10_8', 'lay10_126', 'lay10_90', 'lay10_195', 'lay10_189', 'lay10_181', 'lay10_98', 'lay10_46', 'lay10_29', 'lay10_127', 'lay10_161', 'lay10_105', 'lay10_26', 'lay10_77', 'lay10_187', 'lay10_21', 'lay10_165', 'lay10_136', 'lay10_107', 'lay10_71', 'lay10_28', 'lay10_3', 'lay10_121', 'lay10_150', 'lay10_196', 'lay10_80', 'lay10_44', 'lay10_84', 'lay10_51', 'lay10_146', 'lay10_120', 'lay10_113', 'lay10_4', 'lay10_186', 'lay10_81', 'lay10_132', 'lay10_49', 'lay10_198', 'lay10_32', 'lay10_88', 'lay10_33', 'lay10_141', 'lay10_180', 'lay10_151', 'lay10_147', 'lay10_119', 'lay10_118', 'lay10_20', 'lay10_145', 'lay10_178', 'lay10_103', 'lay10_190', 'lay10_116', 'lay10_87', 'lay10_13', 'lay10_172', 'lay10_170', 'lay10_78', 'lay10_177', 'lay10_148', 'lay10_108', 'lay10_17', 'lay10_59', 'lay10_137', 'lay10_175', 'lay10_25', 'lay10_66', 'lay10_133', 'lay10_140', 'lay10_179'] filter: 1.0
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8190s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8311s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8508s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8766s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9459s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9592s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9987s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7801s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8363s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8020s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7406s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4750s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0004s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5903s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6376s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1705s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8399s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[1e-05,1.104433585274182] (15,-1; 9,-1), time: 15.6281s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6100s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-0.09470581650801906,0.794354558004426] (9,-1; 9,-1), time: 30.0155s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-0.052721784683137915,0.7513550814843613] (9,-1; 9,-1), time: 30.0246s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-0.10113536467424983,0.8103688103292865] (9,-1; 9,-1), time: 30.0295s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[-0.5427688716290122,0.16132812418489584] (9,-1; 9,-1), time: 30.0264s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.36156991668054733,0.5581673201036336] (9,-1; 9,-1), time: 30.0267s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[-0.011160941209924334,0.5411860796197511] (9,-1; 9,-1), time: 30.0453s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6209s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6435s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6374s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6810s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7285s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.25069840539186905,0.33250988461912695] (9,-1; 9,-1), time: 30.0189s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.08530675746321251,0.634311072755243] (9,-1; 9,-1), time: 30.0168s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.5341938815837068,0.08599138694842105] (9,-1; 9,-1), time: 30.0238s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-0.31040777839764294,0.23129023682012415] (9,-1; 9,-1), time: 30.0283s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[-0.7320239441123215,0.04598403791848442] (9,-1; 9,-1), time: 30.0431s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6746s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7053s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6436s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8279s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6201s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6037s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5886s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6707s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.13838434551619413,0.5105967617611173] (9,-1; 9,-1), time: 30.0168s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5686s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6298s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6122s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.7129733592111906,0.023814327757936453] (9,-1; 9,-1), time: 30.0140s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[-0.7092581269627034,0.33740044939217106] (9,-1; 9,-1), time: 30.0194s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6397s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7011s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5666s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6888s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-0.25057922646463676,0.38070891855460387] (9,-1; 9,-1), time: 30.0131s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6428s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5988s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6502s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[1e-05,0.7596289148074932] (15,-1; 9,-1), time: 15.6739s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3218s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.9323s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.0168s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6236s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5855s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6220s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[1e-05,0.8076414345612745] (15,-1; 9,-1), time: 15.6121s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[1e-05,1.8672962153628814] (15,-1; 9,-1), time: 15.7273s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7090s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,4.182772483866665] (15,-1; 9,-1), time: 15.5860s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5898s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6570s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[1e-05,2.040548487471581] (15,-1; 9,-1), time: 15.6111s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.2733s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5934s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[-0.529148180843966,0.1352353011028615] (9,-1; 9,-1), time: 30.0137s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6177s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-0.37987301519288125,0.44383103741622854] (9,-1; 9,-1), time: 30.0123s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.39384975548300116,0.22771664400971123] (9,-1; 9,-1), time: 30.0155s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-0.01809756708514913,0.5242916644005805] (9,-1; 9,-1), time: 30.0131s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.7923842785377532,0.020709867392803238] (9,-1; 9,-1), time: 30.0128s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-0.1379267642130649,0.5257512962538456] (9,-1; 9,-1), time: 30.0128s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5979s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6717s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7125s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6047s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5755s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6643s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6187s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6735s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6069s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-0.5334439921676538,0.27347697242914776] (9,-1; 9,-1), time: 30.0132s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-0.038029254104189864,0.7049925140994566] (9,-1; 9,-1), time: 30.0312s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5891s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5907s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7621s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5620s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6163s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-0.4365194495908664,0.05479204896322395] (9,-1; 9,-1), time: 30.0121s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7096s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6324s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5390s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6604s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6407s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6160s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-0.7777513511677137,0.14119150600630387] (9,-1; 9,-1), time: 30.0114s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[1e-05,2.550917260812728] (15,-1; 9,-1), time: 15.6021s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[1e-05,0.9763371257271066] (15,-1; 9,-1), time: 15.7598s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[1e-05,1.2579021981525678] (15,-1; 9,-1), time: 15.7327s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7369s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-0.451443074425844,0.22340757581924497] (9,-1; 9,-1), time: 30.0111s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[1e-05,3.8299090005468193] (15,-1; 9,-1), time: 15.5654s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.42798844011827986,0.11116583582610809] (9,-1; 9,-1), time: 30.0151s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-0.5663538069196055,0.0997992752318169] (9,-1; 9,-1), time: 30.0100s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5814s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6016s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6704s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-0.7509531465622815,0.09614890922539095] (9,-1; 9,-1), time: 30.0112s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-0.34337390211808333,0.3005798841933497] (9,-1; 9,-1), time: 30.0543s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5821s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5544s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6726s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[1e-05,0.9465788337253864] (15,-1; 9,-1), time: 15.6680s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6583s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-0.4278978957431344,0.26156469082734773] (9,-1; 9,-1), time: 30.0165s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6766s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[1e-05,1.378883008981125] (15,-1; 9,-1), time: 15.6209s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[1e-05,0.7125366952773149] (15,-1; 9,-1), time: 17.4032s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7291s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6690s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6090s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5589s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5988s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6663s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,2.7031811352684736] (15,-1; 9,-1), time: 15.6090s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-0.7559523359234408,0.256781895323439] (9,-1; 9,-1), time: 30.0137s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6704s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[1e-05,0.7122139649852224] (15,-1; 9,-1), time: 18.8655s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5851s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-0.5107665728292495,0.09525930059254945] (9,-1; 9,-1), time: 30.0124s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-0.03769633380881747,0.6069067116864281] (9,-1; 9,-1), time: 30.0138s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-0.6234393423293207,0.012818117236123066] (9,-1; 9,-1), time: 30.0186s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.4872772790953902,0.054948668702142545] (9,-1; 9,-1), time: 30.0202s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6127s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-0.4825555342284799,0.22704373607418046] (9,-1; 9,-1), time: 30.0126s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5663s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[-0.3374753549950313,0.22897040423091494] (9,-1; 9,-1), time: 30.0119s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-0.5460034424385732,0.15703202986386214] (9,-1; 9,-1), time: 30.0144s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6210s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6770s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-0.5616640780972869,0.0913078173642997] (9,-1; 9,-1), time: 30.0162s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-0.3456336342369836,0.24055905054829121] (9,-1; 9,-1), time: 30.0115s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5803s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.4642060171933923,0.24054763592446735] (9,-1; 9,-1), time: 30.0151s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6959s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6309s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7068s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6762s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[-0.06081423911456143,0.5620659067341891] (9,-1; 9,-1), time: 30.0141s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6615s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6634s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.2975136337027069,0.16889484484971506] (9,-1; 9,-1), time: 30.0180s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6593s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.5783s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5685s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6226s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[-0.562565475895037,0.17637281455871304] (9,-1; 9,-1), time: 30.0118s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6350s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[1e-05,0.8144335668439684] (15,-1; 9,-1), time: 15.5857s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6536s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6116s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6431s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.6005519352091427,0.13971242830637004] (9,-1; 9,-1), time: 30.0129s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6088s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[1e-05,2.126790562697883] (15,-1; 9,-1), time: 15.6705s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[1e-05,0.9180031506122251] (15,-1; 9,-1), time: 16.8933s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.5217145136526008,0.1521170293534407] (9,-1; 9,-1), time: 30.0137s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[1e-05,2.083031088171204] (15,-1; 9,-1), time: 15.5904s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6661s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[1e-05,3.152910080370158] (15,-1; 9,-1), time: 15.5790s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6325s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6065s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6208s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6682s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6570s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-0.4400624217847537,0.36292874738607195] (9,-1; 9,-1), time: 30.0230s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6002s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[1e-05,3.16491178693592] (15,-1; 9,-1), time: 15.5915s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[1e-05,1.909793190801414] (15,-1; 9,-1), time: 15.6197s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-0.04255030440262319,0.6150415876753952] (9,-1; 9,-1), time: 30.0220s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-0.508406492680155,0.17456955849512829] (9,-1; 9,-1), time: 30.0156s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-0.08642532217326723,0.7198681591570107] (9,-1; 9,-1), time: 30.0136s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.24712420542847816,0.5080167216138679] (9,-1; 9,-1), time: 30.0111s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.7613s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.19217756741948014,0.5095450472821662] (9,-1; 9,-1), time: 30.0361s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-0.09616794489451837,0.5179268961718401] (9,-1; 9,-1), time: 30.0120s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-0.20306168029443025,0.5451976333271092] (9,-1; 9,-1), time: 30.0241s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-0.6111206159610731,0.13360590750208132] (9,-1; 9,-1), time: 30.0155s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.2315741273638268,0.358394063162492] (9,-1; 9,-1), time: 30.0110s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-0.49672232003089173,0.12391873904480828] (9,-1; 9,-1), time: 30.0155s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.41235152520473906,0.2588082483676918] (9,-1; 9,-1), time: 30.0126s, #vars: 2167, #constrs: 1573, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.11518353237305007,0.650354784087564] (9,-1; 9,-1), time: 30.0214s, #vars: 2167, #constrs: 1573, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(193, -1), (36, -1), (119, -1), (91, -1), (29, -1), (76, 1), (124, -1), (155, -1), (18, -1), (162, -1), (34, -1), (71, -1), (170, -1), (181, -1), (125, -1), (19, -1), (114, 1), (85, -1), (52, -1), (118, -1), (65, -1), (113, 1), (102, -1), (195, -1), (12, -1), (154, -1), (176, -1), (158, 1), (134, -1), (20, -1), (39, -1), (142, 1), (44, -1), (35, 1), (45, -1), (33, -1), (186, -1), (128, -1), (0, -1), (30, -1), (122, -1), (4, -1), (56, -1), (189, -1), (179, -1), (188, -1), (111, -1), (93, -1), (94, -1), (42, 1), (151, -1), (8, -1), (141, -1), (104, -1), (129, -1), (192, -1), (157, -1), (50, -1), (103, -1), (163, -1), (139, -1), (184, -1), (73, -1), (173, -1), (133, -1), (66, -1), (199, -1), (183, -1), (99, -1), (145, 1), (1, -1), (13, 1), (49, 1), (95, -1), (164, -1), (79, -1), (194, -1), (6, -1), (46, -1), (5, -1), (97, -1), (48, 1), (63, 1), (135, -1), (70, -1), (69, -1), (177, 1), (81, -1), (25, 1), (57, -1), (3, -1), (116, -1), (21, -1), (175, -1), (174, 1), (159, -1), (166, 1), (123, 1), (115, 1), (144, 1), (54, 1), (59, -1), (178, 1), (172, -1), (74, -1), (152, 1), (32, -1), (58, 1), (10, -1), (132, -1), (112, -1), (107, 1), (86, -1), (9, -1), (72, -1), (180, -1), (147, 1), (165, 1), (38, -1), (27, 1), (55, 1), (169, 1), (26, -1), (196, -1), (23, 1), (17, -1), (106, 1), (143, -1), (109, 1), (127, 1), (88, -1)]
best_l after optimization: -25.26507568359375 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 10.739359140396118
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.05202484, -1.98573303, -1.67598200, -3.39079762, -3.32736492,
         -2.54575396, -2.74754620, -3.15798807, -4.38188648]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 248.8729705810547, ub improved 469.7743225097656, time 155.2914
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_71', 'lay12_30', 'lay12_61', 'lay12_3', 'lay12_68', 'lay12_109', 'lay12_197', 'lay12_39', 'lay12_40', 'lay12_91', 'lay12_93', 'lay12_147', 'lay12_81', 'lay12_154', 'lay12_132', 'lay12_95', 'lay12_80', 'lay12_175', 'lay12_111', 'lay12_52', 'lay12_74', 'lay12_96', 'lay12_145', 'lay12_146', 'lay12_35', 'lay12_41', 'lay12_118', 'lay12_116', 'lay12_58', 'lay12_125', 'lay12_174', 'lay12_183', 'lay12_67', 'lay12_119', 'lay12_60', 'lay12_70', 'lay12_98', 'lay12_65', 'lay12_46', 'lay12_19', 'lay12_103', 'lay12_172', 'lay12_83', 'lay12_124', 'lay12_14', 'lay12_127', 'lay12_12', 'lay12_164', 'lay12_163', 'lay12_107', 'lay12_15', 'lay12_5', 'lay12_114', 'lay12_87', 'lay12_84', 'lay12_136', 'lay12_90', 'lay12_28', 'lay12_47', 'lay12_151', 'lay12_139', 'lay12_86', 'lay12_21', 'lay12_79', 'lay12_117', 'lay12_4', 'lay12_131', 'lay12_24', 'lay12_120', 'lay12_82', 'lay12_27', 'lay12_176', 'lay12_129', 'lay12_22', 'lay12_148', 'lay12_2', 'lay12_160', 'lay12_7', 'lay12_149', 'lay12_17', 'lay12_57', 'lay12_66', 'lay12_99', 'lay12_188', 'lay12_20', 'lay12_190', 'lay12_1', 'lay12_128', 'lay12_142', 'lay12_173', 'lay12_130', 'lay12_115', 'lay12_101', 'lay12_187', 'lay12_13', 'lay12_140', 'lay12_34', 'lay12_150', 'lay12_69', 'lay12_51', 'lay12_62', 'lay12_97', 'lay12_199', 'lay12_43', 'lay12_121', 'lay12_194', 'lay12_75', 'lay12_63', 'lay12_141', 'lay12_55', 'lay12_170', 'lay12_48', 'lay12_44', 'lay12_38', 'lay12_73', 'lay12_152', 'lay12_78', 'lay12_8', 'lay12_110', 'lay12_143', 'lay12_181', 'lay12_196', 'lay12_31', 'lay12_177', 'lay12_133', 'lay12_16', 'lay12_180', 'lay12_106', 'lay12_25', 'lay12_9', 'lay12_123', 'lay12_159', 'lay12_158', 'lay12_153', 'lay12_36', 'lay12_122', 'lay12_169', 'lay12_156', 'lay12_195', 'lay12_45', 'lay12_167', 'lay12_10', 'lay12_182', 'lay12_85', 'lay12_178', 'lay12_193', 'lay12_89', 'lay12_50', 'lay12_29', 'lay12_179', 'lay12_198', 'lay12_76', 'lay12_186', 'lay12_72', 'lay12_49', 'lay12_53', 'lay12_56', 'lay12_184', 'lay12_105', 'lay12_88', 'lay12_191', 'lay12_0', 'lay12_100', 'lay12_54', 'lay12_113', 'lay12_165', 'lay12_162', 'lay12_168', 'lay12_161', 'lay12_92', 'lay12_42', 'lay12_137', 'lay12_171', 'lay12_126', 'lay12_192', 'lay12_6', 'lay12_23', 'lay12_33', 'lay12_135', 'lay12_26', 'lay12_155', 'lay12_64', 'lay12_11', 'lay12_157', 'lay12_104', 'lay12_166', 'lay12_102', 'lay12_108', 'lay12_112', 'lay12_134', 'lay12_18', 'lay12_189', 'lay12_77', 'lay12_185', 'lay12_59', 'lay12_32', 'lay12_37', 'lay12_144', 'lay12_138', 'lay12_94'] filter: 1.0
Solving MIP for lay12_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1278s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1252s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2036s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2066s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2096s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2474s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2688s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2854s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3406s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3875s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4738s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7369s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0234s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0290s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9214s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0285s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1299s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7961s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8274s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8801s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8906s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8284s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[1e-05,1.5442965793098138] (15,-1; 9,-1), time: 15.9625s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8772s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[1e-05,1.0187847331605009] (15,-1; 9,-1), time: 16.0356s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8949s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7501s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.383228916039711] (15,-1; 9,-1), time: 16.1167s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7218s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7749s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3271s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7564s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8357s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7885s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-0.12558302863892243,0.8255227314680551] (9,-1; 9,-1), time: 30.0313s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-0.8251232411010185,0.06111238797754515] (9,-1; 9,-1), time: 30.0362s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.3818882036029452,0.432681178113539] (9,-1; 9,-1), time: 30.1051s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[-0.8553033315964019,0.1525623553062349] (9,-1; 9,-1), time: 30.3880s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8054s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9822s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-0.4732177909538966,0.4560805497498288] (9,-1; 9,-1), time: 30.0217s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7972s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-0.24996351546556989,0.442437668210127] (9,-1; 9,-1), time: 30.0742s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[-0.6835394517090231,0.18710683171270884] (9,-1; 9,-1), time: 30.0339s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.38327492097670834,0.3614982375605589] (9,-1; 9,-1), time: 30.1100s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7713s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7705s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7632s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7878s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8288s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9831s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-0.8297765597718927,0.06364750697689078] (9,-1; 9,-1), time: 30.0169s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-1.014169946085297,0.03556145068003688] (9,-1; 9,-1), time: 30.1002s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8731s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_183, [-inf,inf]=>[-1.048274021685855,0.08504409612941657] (9,-1; 9,-1), time: 30.2066s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8161s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8604s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9346s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9001s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8391s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.1473684431661568,0.7178127407956685] (9,-1; 9,-1), time: 30.1151s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.24850834401655367,0.5802405230424927] (9,-1; 9,-1), time: 30.0227s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8894s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7852s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[1e-05,1.5825869958305563] (15,-1; 9,-1), time: 16.0280s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7466s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[1e-05,1.0657105768309467] (15,-1; 9,-1), time: 18.8572s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7960s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.4809s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7820s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7935s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7669s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,1.1889975351710464] (15,-1; 9,-1), time: 15.9517s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[1e-05,1.1556326348494643] (15,-1; 9,-1), time: 15.8908s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9560s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[-0.4524372823059762,0.5028557839792873] (9,-1; 9,-1), time: 30.2666s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7800s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[1e-05,1.090443448419554] (15,-1; 9,-1), time: 15.8859s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[1e-05,2.1532716848097775] (15,-1; 9,-1), time: 16.0862s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[1e-05,0.8970058419643082] (15,-1; 9,-1), time: 15.8622s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7619s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8183s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8849s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9207s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[1e-05,2.1968122505509355] (15,-1; 9,-1), time: 15.8922s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8824s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8561s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7513s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9045s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7258s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7509s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.393389887937876] (15,-1; 9,-1), time: 15.8252s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9148s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7579s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8247s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8533s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7831s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.5020693492820731,0.26310811063080713] (9,-1; 9,-1), time: 30.0131s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-0.6170906747219839,0.19515421731761] (9,-1; 9,-1), time: 30.0235s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-0.8765720670555656,0.06227293095273319] (9,-1; 9,-1), time: 30.1689s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.5055394840363971,0.31653408354802376] (9,-1; 9,-1), time: 30.0177s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7983s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.5566735850441815,0.2900682975826284] (9,-1; 9,-1), time: 30.1026s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8813s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8194s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8480s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[-0.2457820648369291,0.5490473945451604] (9,-1; 9,-1), time: 30.0973s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[1e-05,0.8658824804024896] (15,-1; 9,-1), time: 16.1056s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7789s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-0.6465168508803677,0.1602954974935716] (9,-1; 9,-1), time: 30.0382s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8152s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7236s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[1e-05,2.361121343034399] (15,-1; 9,-1), time: 15.7359s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8788s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9008s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8412s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8706s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9023s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[1e-05,1.0966213782747274] (15,-1; 9,-1), time: 15.8479s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8886s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8118s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-0.926435761715612,0.002689550735462221] (9,-1; 9,-1), time: 30.2866s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.8993764638928293,0.06558257425327964] (9,-1; 9,-1), time: 30.0121s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-0.776246081308924,0.12083853757562552] (9,-1; 9,-1), time: 30.2250s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8309s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-0.01632977002105493,0.8588117543756154] (9,-1; 9,-1), time: 30.2804s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,2.729577176097887] (15,-1; 9,-1), time: 16.0373s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8974s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8106s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8471s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8045s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[1e-05,4.120502863658184] (15,-1; 9,-1), time: 15.8024s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7429s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-0.011732301594385514,0.8094641283341194] (9,-1; 9,-1), time: 30.2051s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8354s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9075s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8911s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[1e-05,2.1066431737180236] (15,-1; 9,-1), time: 15.8828s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8204s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8500s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8425s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7723s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8524s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9284s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.15915301185319636,0.7394505227703068] (9,-1; 9,-1), time: 30.0172s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8177s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8892s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.6311207888337629,0.11796614046801225] (9,-1; 9,-1), time: 30.1461s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8597s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-0.5794388224180853,0.22076333767201886] (9,-1; 9,-1), time: 30.6461s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8779s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-0.5891042011805143,0.14629150813595165] (9,-1; 9,-1), time: 30.4806s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[1e-05,1.3050946205569116] (15,-1; 9,-1), time: 15.8654s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8174s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8777s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8032s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8545s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7862s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.1909s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0017s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[1e-05,3.1818116771620977] (15,-1; 9,-1), time: 15.7953s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[-0.5114326581972731,0.21849060222358213] (9,-1; 9,-1), time: 30.0261s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7509s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7288s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.2784674143810887,0.5984455992931482] (9,-1; 9,-1), time: 30.2399s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.14906969538117676,0.7398980792205336] (9,-1; 9,-1), time: 30.0183s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7954s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8440s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-0.6294312006859366,0.195270621624111] (9,-1; 9,-1), time: 30.0293s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8321s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7702s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8506s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7411s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8857s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[1e-05,4.036042091593549] (15,-1; 9,-1), time: 15.6966s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8205s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[1e-05,1.9512090824184156] (15,-1; 9,-1), time: 16.0556s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8532s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8115s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.4069666536037113,0.28453505624102227] (9,-1; 9,-1), time: 30.0680s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8624s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7856s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[-0.7580924800829548,0.17282438495417723] (9,-1; 9,-1), time: 30.0140s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8096s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9113s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9299s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[1e-05,1.7742932414351211] (15,-1; 9,-1), time: 15.8723s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-0.6813079364698371,0.014801539211148157] (9,-1; 9,-1), time: 30.3105s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[1e-05,1.7210984909016402] (15,-1; 9,-1), time: 15.7608s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.5621851396971737,0.2862969703196418] (9,-1; 9,-1), time: 30.3220s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[1e-05,1.1969043273818851] (15,-1; 9,-1), time: 17.4038s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-0.33122581680593344,0.4150429800201633] (9,-1; 9,-1), time: 30.0375s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-0.8560845278520041,0.07508959231699117] (9,-1; 9,-1), time: 30.0172s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-0.6961335233968016,0.0797195246270035] (9,-1; 9,-1), time: 30.0506s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-0.19627111773882672,0.667903157907037] (9,-1; 9,-1), time: 30.0239s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.6129496168844539,0.3424751679079381] (9,-1; 9,-1), time: 30.0238s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-0.38868870763628527,0.45324907875152465] (9,-1; 9,-1), time: 30.0516s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-0.3080649269920636,0.39726570460182703] (9,-1; 9,-1), time: 30.1012s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-0.8171856493717736,0.05077862584910555] (9,-1; 9,-1), time: 30.0716s, #vars: 2487, #constrs: 1953, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-0.6257129318265761,0.12026091416508117] (9,-1; 9,-1), time: 30.0611s, #vars: 2487, #constrs: 1953, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(91, -1), (167, -1), (64, -1), (31, -1), (56, -1), (158, -1), (22, -1), (39, -1), (194, -1), (101, -1), (54, -1), (163, -1), (42, -1), (104, -1), (99, -1), (156, -1), (153, -1), (183, 1), (96, -1), (86, 1), (94, -1), (74, -1), (184, -1), (134, -1), (89, -1), (10, -1), (38, -1), (40, -1), (76, -1), (65, -1), (199, -1), (110, -1), (58, -1), (23, -1), (57, -1), (70, -1), (53, -1), (82, 1), (142, -1), (67, 1), (6, -1), (12, -1), (50, 1), (125, -1), (1, -1), (169, -1), (36, -1), (0, 1), (135, -1), (37, -1), (164, -1), (47, -1), (129, -1), (30, -1), (2, -1), (92, -1), (19, -1), (35, -1), (154, -1), (162, 1), (52, 1), (168, 1), (16, -1), (55, -1), (102, -1), (149, -1), (61, -1), (14, -1), (112, -1), (182, -1), (5, -1), (192, 1), (197, -1), (159, -1), (34, -1), (124, 1), (157, -1), (62, -1), (41, -1), (100, 1), (109, -1), (185, 1), (128, -1), (72, -1), (176, -1), (75, -1), (171, 1), (27, -1), (173, -1), (131, -1), (7, -1), (8, -1), (126, -1), (90, -1), (195, 1), (189, -1), (29, -1), (161, -1), (26, -1), (77, -1), (187, -1), (21, -1), (165, -1), (71, -1), (3, -1), (150, 1), (196, 1), (80, 1), (44, -1), (84, -1), (51, 1), (120, -1), (4, -1), (186, -1), (81, -1), (132, 1), (49, -1), (32, -1), (33, -1), (141, -1), (180, -1), (151, -1), (147, -1), (118, -1), (145, -1), (103, -1), (190, -1), (116, -1), (87, -1), (172, -1), (170, 1), (177, 1), (108, -1), (137, -1), (175, -1), (25, -1), (66, -1), (133, -1), (140, -1), (179, -1)]
best_l after optimization: 6.965864181518555 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 10.898384809494019
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.32304335,  1.46549606,  1.77499580,  0.45260334,  0.57814312,
          1.01741695,  0.12423515,  0.48402071, -0.25409031]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 891.5616455078125, ub improved 1817.0301513671875, time 139.9678
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_39', 'lay14_41', 'lay14_48', 'lay14_121', 'lay14_156', 'lay14_174', 'lay14_78', 'lay14_21', 'lay14_146', 'lay14_106', 'lay14_188', 'lay14_36', 'lay14_74', 'lay14_58', 'lay14_173', 'lay14_56', 'lay14_167', 'lay14_126', 'lay14_159', 'lay14_197', 'lay14_37', 'lay14_87', 'lay14_161', 'lay14_26', 'lay14_179', 'lay14_0', 'lay14_118', 'lay14_165', 'lay14_49', 'lay14_51', 'lay14_69', 'lay14_127', 'lay14_81', 'lay14_139', 'lay14_76', 'lay14_54', 'lay14_14', 'lay14_135', 'lay14_149', 'lay14_176', 'lay14_154', 'lay14_93', 'lay14_92', 'lay14_119', 'lay14_11', 'lay14_59', 'lay14_2', 'lay14_67', 'lay14_5', 'lay14_61', 'lay14_35', 'lay14_184', 'lay14_82', 'lay14_84', 'lay14_175', 'lay14_143', 'lay14_43', 'lay14_71', 'lay14_110', 'lay14_145', 'lay14_20', 'lay14_128', 'lay14_122', 'lay14_178', 'lay14_13', 'lay14_162', 'lay14_75', 'lay14_28', 'lay14_101', 'lay14_97', 'lay14_12', 'lay14_7', 'lay14_40', 'lay14_134', 'lay14_125', 'lay14_47', 'lay14_136', 'lay14_88', 'lay14_73', 'lay14_64', 'lay14_170', 'lay14_44', 'lay14_103', 'lay14_183', 'lay14_114', 'lay14_102', 'lay14_100', 'lay14_23', 'lay14_70', 'lay14_4', 'lay14_46', 'lay14_182', 'lay14_130', 'lay14_117', 'lay14_112', 'lay14_163', 'lay14_29', 'lay14_42', 'lay14_94', 'lay14_148', 'lay14_158', 'lay14_113', 'lay14_66', 'lay14_199', 'lay14_38', 'lay14_45', 'lay14_25', 'lay14_9', 'lay14_53', 'lay14_153', 'lay14_166', 'lay14_27', 'lay14_30', 'lay14_192', 'lay14_120', 'lay14_138', 'lay14_194', 'lay14_190', 'lay14_144', 'lay14_150', 'lay14_57', 'lay14_24', 'lay14_108', 'lay14_72', 'lay14_129', 'lay14_68', 'lay14_31', 'lay14_63', 'lay14_33', 'lay14_151', 'lay14_55', 'lay14_124', 'lay14_22', 'lay14_85', 'lay14_32', 'lay14_115', 'lay14_3', 'lay14_79', 'lay14_10', 'lay14_15', 'lay14_196', 'lay14_19', 'lay14_147', 'lay14_16', 'lay14_80', 'lay14_107', 'lay14_193', 'lay14_111', 'lay14_96', 'lay14_104', 'lay14_86', 'lay14_116', 'lay14_17', 'lay14_185', 'lay14_99', 'lay14_62', 'lay14_169', 'lay14_34', 'lay14_50', 'lay14_1', 'lay14_123', 'lay14_89', 'lay14_155', 'lay14_152', 'lay14_77', 'lay14_132', 'lay14_52', 'lay14_133', 'lay14_164', 'lay14_109', 'lay14_172', 'lay14_160', 'lay14_198', 'lay14_168', 'lay14_105', 'lay14_137', 'lay14_142', 'lay14_95', 'lay14_187', 'lay14_195', 'lay14_18', 'lay14_177', 'lay14_65', 'lay14_181', 'lay14_186', 'lay14_191', 'lay14_8', 'lay14_91', 'lay14_189', 'lay14_83', 'lay14_60', 'lay14_141', 'lay14_171', 'lay14_90', 'lay14_131', 'lay14_140', 'lay14_98', 'lay14_157', 'lay14_180', 'lay14_6'] filter: 1.0
Solving MIP for lay14_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5025s, #vars: 2781, #constrs: 2294, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4947s, #vars: 2781, #constrs: 2294, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(30, -1), (61, 1), (3, -1), (68, -1), (109, -1), (197, -1), (39, -1), (40, -1), (147, -1), (154, -1), (132, -1), (95, -1), (111, -1), (74, -1), (96, -1), (145, -1), (146, 1), (35, -1), (118, -1), (58, -1), (125, -1), (67, 1), (119, -1), (60, -1), (70, -1), (46, -1), (19, -1), (103, -1), (172, -1), (124, -1), (14, -1), (127, -1), (12, -1), (164, -1), (163, 1), (107, 1), (15, -1), (5, -1), (87, -1), (84, -1), (136, -1), (90, -1), (28, -1), (47, -1), (151, -1), (139, -1), (86, 1), (21, -1), (4, 1), (131, -1), (24, -1), (120, 1), (82, -1), (27, 1), (129, 1), (22, -1), (2, -1), (160, 1), (7, -1), (57, -1), (66, 1), (99, -1), (188, -1), (20, -1), (190, -1), (1, -1), (128, -1), (142, -1), (130, -1), (115, -1), (101, -1), (140, -1), (150, -1), (69, 1), (51, -1), (62, -1), (97, -1), (199, 1), (43, -1), (121, -1), (75, 1), (63, -1), (141, -1), (55, -1), (170, -1), (48, -1), (152, -1), (78, -1), (8, -1), (143, 1), (181, -1), (196, -1), (31, -1), (177, -1), (133, 1), (16, -1), (180, -1), (106, -1), (25, -1), (9, -1), (159, -1), (158, -1), (153, 1), (156, -1), (195, 1), (167, -1), (10, -1), (85, -1), (178, -1), (193, 1), (89, -1), (50, -1), (29, -1), (179, -1), (198, -1), (186, -1), (72, -1), (53, -1), (56, -1), (184, -1), (105, -1), (88, -1), (191, 1), (0, -1), (100, -1), (113, 1), (165, -1), (162, -1), (168, -1), (161, -1), (92, -1), (42, -1), (137, -1), (126, 1), (192, -1), (6, -1), (135, -1), (26, -1), (64, 1), (11, 1), (157, -1), (104, -1), (102, -1), (108, -1), (112, -1), (18, -1), (77, -1), (185, -1), (59, -1), (32, -1), (144, -1), (138, -1), (94, -1)]

all verified at 0th iter
best_l after optimization: 13.946908950805664 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.0673360824584961
alpha-CROWN with intermediate bounds by MIP: tensor([[2.16420650, 2.17835402, 2.46621776, 1.29509163, 1.37522435, 1.83670807,
         0.78053641, 1.20535278, 0.64521694]], device='cuda:0') None
min of alpha-CROWN bounds 0.6452169418334961>=0, verified!
MIP finished with 585.8695764541626s
Run final alpha-CROWN after MIP solving on layer 13 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 13.946908950805664 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06377530097961426
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.16420650, 2.17835402, 2.46621776, 1.29509163, 1.37522435, 1.83670807,
         0.78053641, 1.20535278, 0.64521694]], device='cuda:0') None
refined global lb: tensor([[2.16420650],
        [2.17835402],
        [2.46621776],
        [1.29509163],
        [1.37522435],
        [1.83670807],
        [0.78053641],
        [1.20535278],
        [0.64521694]], device='cuda:0') min: tensor(0.64521694, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 601.5904 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 601.5844072630746, max time: 601.5904231071472
mean time for verified SAFE instances (total 1): 601.5904231071472, max time: 601.5904231071472
safe-incomplete-refine (total 1), index: [0]
