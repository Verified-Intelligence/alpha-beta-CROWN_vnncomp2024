Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: null
  root_path: ''
model:
  path: mnist_9_200_nat.pth
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_9_200
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 24
  end: 25
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 14:58:04 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
saving results to Verified_ret_[mnist_9_200]_start=24_end=25_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ -960.60522461, -1598.82580566, -1900.80297852, -2114.30004883,
         -1818.29174805, -1546.59924316, -1461.50671387, -1890.52355957,
         -1596.00024414]], device='cuda:0') None
best_l after optimization: -10399.50390625 with beta sum per layer: []
alpha/beta optimization time: 12.4878408908844
initial alpha-CROWN bounds: tensor([[ -696.59332275, -1083.29089355, -1338.28356934, -1458.10083008,
         -1290.01208496, -1100.26892090, -1004.36328125, -1309.33068848,
         -1119.26025391]], device='cuda:0')
Worst class: (+ rhs) -1458.100830078125
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
model output: tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
pgd prediction: tensor([[[-0.94488865, -1.92304623,  0.52204627, -3.27151704,  6.61245489,
          -1.08669364,  0.41012126, -0.33979398, -0.37520438,  1.86208010],
         [-0.94488865, -1.92304623,  0.52204627, -3.27151704,  6.61245489,
          -1.08669364,  0.41012126, -0.33979398, -0.37520438,  1.86208010]]],
       device='cuda:0')
pgd attack margin tensor([[[7.55734348, 8.53550148, 6.09040880, 9.88397217, 7.69914865,
          6.20233345, 6.95224905, 6.98765945, 4.75037479]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7557 seconds.
pgd attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_51', 'lay4_55', 'lay4_142', 'lay4_45', 'lay4_194', 'lay4_143', 'lay4_69', 'lay4_99', 'lay4_13', 'lay4_44', 'lay4_175', 'lay4_129', 'lay4_145', 'lay4_151', 'lay4_15', 'lay4_162', 'lay4_12', 'lay4_140', 'lay4_6', 'lay4_53', 'lay4_173', 'lay4_61', 'lay4_59', 'lay4_76', 'lay4_67', 'lay4_43', 'lay4_180', 'lay4_195', 'lay4_101', 'lay4_115', 'lay4_41', 'lay4_187', 'lay4_120', 'lay4_181', 'lay4_11', 'lay4_164', 'lay4_104', 'lay4_93', 'lay4_33', 'lay4_169', 'lay4_176', 'lay4_26', 'lay4_128', 'lay4_7', 'lay4_198', 'lay4_36', 'lay4_196', 'lay4_138', 'lay4_56', 'lay4_30', 'lay4_17', 'lay4_58', 'lay4_178', 'lay4_38', 'lay4_147', 'lay4_137', 'lay4_32', 'lay4_77', 'lay4_103', 'lay4_199', 'lay4_52', 'lay4_8', 'lay4_48', 'lay4_114', 'lay4_80', 'lay4_88', 'lay4_112', 'lay4_111', 'lay4_106'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:701: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6882s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1238s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3195s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-0.4939655330499903,0.1840592850098553] (2,-1; 2,-1), time: 1.8114s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.2184067756367363,0.5373208499990273] (2,-1; 2,-1), time: 2.7125s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0329s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.8449892717769235,0.049085402501457986] (2,-1; 2,-1), time: 2.9957s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[-0.32826881714231515,0.42907715300269234] (2,-1; 2,-1), time: 3.4373s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5739s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-0.1456149651544935,0.5368392069310332] (2,-1; 2,-1), time: 3.7640s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3657s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3612s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.11562688796938689,0.47522937351739986] (2,-1; 2,-1), time: 4.2221s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6327s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.4860297802247118,0.1272659783503301] (2,-1; 2,-1), time: 3.9446s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.115680778699645,0.39476993480740796] (2,-1; 2,-1), time: 4.7473s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[-inf,-0.011605190255872838] (-1,-1; 2,-1), time: 0.7010s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3337s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[1e-05,0.8799447872078766] (15,-1; 2,-1), time: 1.4746s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_151, [-inf,inf]=>[-0.5429035795490192,0.14445723401377109] (2,-1; 2,-1), time: 5.2309s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.16441167958775102,0.37427387425188635] (2,-1; 2,-1), time: 5.7125s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_140, [-inf,inf]=>[-0.5034155254172584,0.18120223253708784] (2,-1; 2,-1), time: 4.8307s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.30329129189060056,0.2429665298254032] (2,-1; 2,-1), time: 6.0259s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.5473879083334787,0.006108669512863298] (2,-1; 2,-1), time: 4.9617s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3702s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.5179620527560375,0.052008242652376836] (2,-1; 2,-1), time: 3.7644s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6761s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2765s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-0.40345083055079073,0.2484321178392733] (2,-1; 2,-1), time: 4.3279s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2720s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-0.3978837542670797,0.276857342475283] (2,-1; 2,-1), time: 7.6147s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.31285138240250243,0.3456218777941852] (2,-1; 2,-1), time: 2.8122s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_164, [-inf,inf]=>[-0.17748778251856323,0.43373619724193985] (2,-1; 2,-1), time: 2.5210s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2783s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7029s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.14164348511008418,0.43256513937750407] (2,-1; 2,-1), time: 3.6441s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3327s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5544s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_181, [-inf,inf]=>[-0.5951305937805159,0.07988729164200056] (2,-1; 2,-1), time: 3.6661s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.0045572695817047044,0.5442752229198643] (2,-1; 2,-1), time: 8.8296s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2878s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2926s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.082567148583268] (15,-1; 2,-1), time: 1.2666s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8250s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_195, [-inf,inf]=>[-0.26009126605170807,0.2253369901835655] (2,-1; 2,-1), time: 5.8526s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3512s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[1e-05,0.7467029392352333] (15,-1; 2,-1), time: 1.7292s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.513781916020179,0.0707428762711244] (2,-1; 2,-1), time: 10.3983s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.1591478407535879,0.48206800538383276] (2,-1; 2,-1), time: 5.7200s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4149s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2376s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2836s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3246s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.4964848007376834,0.08165267865290632] (2,-1; 2,-1), time: 4.6177s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-inf,-0.0013955701773113727] (-1,-1; 2,-1), time: 1.2563s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_17, [-inf,inf]=>[-0.027765165550538526,0.5018433973163334] (2,-1; 2,-1), time: 3.8283s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_104, [-inf,inf]=>[-0.35449177550456074,0.15685486276982474] (2,-1; 2,-1), time: 6.6495s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.11903935489718719,0.5780223931220813] (2,-1; 2,-1), time: 4.4284s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.2894043400132795,0.3651006453806827] (2,-1; 2,-1), time: 2.4556s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_56, [-inf,inf]=>[-0.16493979220356925,0.4547371576306901] (2,-1; 2,-1), time: 5.4263s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_169, [-inf,inf]=>[-0.24044442886782838,0.3573803276761943] (2,-1; 2,-1), time: 7.1083s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_32, [-inf,inf]=>[-0.4979849666988582,0.038850078419510756] (2,-1; 2,-1), time: 4.5605s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.3696357081915237,0.148081766566866] (2,-1; 2,-1), time: 4.4950s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-0.33732993514491105,0.25943326411251977] (2,-1; 2,-1), time: 5.3021s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.0038387174117586564,0.4652234876991486] (2,-1; 2,-1), time: 3.9820s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.4428270348924554,0.39641345580399906] (2,-1; 2,-1), time: 3.7150s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_176, [-inf,inf]=>[-0.5415858805183373,0.08509720157945229] (2,-1; 2,-1), time: 8.1145s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.1014644280411474,0.49679118863242344] (2,-1; 2,-1), time: 4.3059s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_106, [-inf,inf]=>[-0.5563797867656204,0.03538538109464213] (2,-1; 2,-1), time: 4.4984s, #vars: 1289, #constrs: 556, improved: True
PGD done for relu layer 2
MIP improved 69 nodes out of 69 unstable nodes, lb improved 9.921821594238281, ub improved 12.968194961547852, time 16.9967
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_62', 'lay6_124', 'lay6_118', 'lay6_106', 'lay6_10', 'lay6_41', 'lay6_100', 'lay6_7', 'lay6_22', 'lay6_32', 'lay6_30', 'lay6_190', 'lay6_3', 'lay6_68', 'lay6_125', 'lay6_143', 'lay6_34', 'lay6_54', 'lay6_44', 'lay6_160', 'lay6_20', 'lay6_79', 'lay6_158', 'lay6_8', 'lay6_109', 'lay6_131', 'lay6_65', 'lay6_115', 'lay6_127', 'lay6_67', 'lay6_73', 'lay6_60', 'lay6_162', 'lay6_87', 'lay6_114', 'lay6_95', 'lay6_112', 'lay6_197', 'lay6_55', 'lay6_148', 'lay6_123', 'lay6_150', 'lay6_97', 'lay6_23', 'lay6_166', 'lay6_181', 'lay6_163', 'lay6_94', 'lay6_102', 'lay6_15', 'lay6_101', 'lay6_43', 'lay6_50', 'lay6_78', 'lay6_5', 'lay6_155', 'lay6_25', 'lay6_71', 'lay6_42', 'lay6_64', 'lay6_176', 'lay6_130', 'lay6_81', 'lay6_18', 'lay6_135', 'lay6_1', 'lay6_119', 'lay6_184', 'lay6_192', 'lay6_72', 'lay6_74', 'lay6_179', 'lay6_19', 'lay6_164', 'lay6_185', 'lay6_12', 'lay6_138', 'lay6_117', 'lay6_136', 'lay6_75', 'lay6_141', 'lay6_139', 'lay6_156', 'lay6_111', 'lay6_83', 'lay6_92', 'lay6_167', 'lay6_161', 'lay6_186', 'lay6_70', 'lay6_85', 'lay6_145', 'lay6_170', 'lay6_53', 'lay6_29', 'lay6_104', 'lay6_4', 'lay6_120', 'lay6_199', 'lay6_69', 'lay6_61', 'lay6_107', 'lay6_132', 'lay6_122', 'lay6_0', 'lay6_137', 'lay6_147', 'lay6_113', 'lay6_47', 'lay6_110', 'lay6_144'] filter: 1.0
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4377s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2940s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0293s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0328s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0455s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1215s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4039s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5325s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7616s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8049s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8185s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3517s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2880s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9215s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5613s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.7240s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5120s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3198s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3474s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3012s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3862s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8417s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6584s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3886s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4594s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7732s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,0.5933991696230223] (15,-1; 9,-1), time: 15.9136s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.5676588665309683] (15,-1; 2,-1), time: 11.9042s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3103s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3623s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.33187365773575866,0.1268977490031567] (9,-1; 2,-1), time: 22.4810s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.40985784391621294,0.1174384686082069] (9,-1; 2,-1), time: 21.4494s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.29121464968114374,0.11431694502831784] (2,-1; 9,-1), time: 22.7029s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3099s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.4443455245465956,0.02444295588171619] (2,-1; 9,-1), time: 23.7196s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3606s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5925s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3033s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3680s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-0.33027715596094703,0.2680144575733497] (9,-1; 2,-1), time: 25.2048s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.2797s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8369s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6811s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-0.38003956763953356,0.06278004844701486] (2,-1; 9,-1), time: 27.3731s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3245s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_115, [-inf,inf]=>[-0.007436265637712937,0.46604806631041884] (9,-1; 2,-1), time: 26.4088s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3937s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3598s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.41326320745993006,0.03768522198931633] (9,-1; 9,-1), time: 30.0157s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.1236962398249999,0.2974891005681962] (9,-1; 9,-1), time: 30.0214s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.06033047805696178,0.37142587713652375] (9,-1; 9,-1), time: 30.0706s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-0.4535928965467524,0.029193657619753142] (9,-1; 9,-1), time: 30.1289s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3672s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3743s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2826s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8872s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9578s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3748s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-0.7162162612209755,0.027532907525982715] (2,-1; 2,-1), time: 16.4591s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2866s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.15137722576739976,0.3645431336759367] (9,-1; 9,-1), time: 30.0182s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2955s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8154s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.6343529969038297,0.009470761351828366] (9,-1; 2,-1), time: 23.7666s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7830s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9810s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.5695814167968568,0.003602071166892374] (9,-1; 2,-1), time: 22.0706s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[1e-05,0.9697942401947506] (15,-1; 2,-1), time: 9.0275s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.7873336289012828,0.014750188191881008] (9,-1; 2,-1), time: 19.5325s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,1.024759123844562] (15,-1; 2,-1), time: 13.3199s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[1e-05,1.8925611483442841] (15,-1; 2,-1), time: 4.4290s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3640s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4808s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[1e-05,0.7996643673360562] (15,-1; 9,-1), time: 15.3699s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3945s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[1e-05,0.6215952117292116] (15,-1; 2,-1), time: 14.6814s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3769s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.4179123688396484,0.05714351882036756] (9,-1; 2,-1), time: 23.7845s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-0.2648279721004544,0.13089540257156387] (9,-1; 2,-1), time: 28.1100s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.24506911507067242,0.23094633378139634] (2,-1; 9,-1), time: 29.4439s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.2685892654624077,0.30909846059436974] (2,-1; 2,-1), time: 19.7960s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3532s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.1921550506831527,0.37662705012390846] (2,-1; 9,-1), time: 26.7253s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-0.3455795414327995,0.1722658782577614] (9,-1; 2,-1), time: 28.2271s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.4080980078448215,0.06821621021512674] (9,-1; 9,-1), time: 30.0177s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[1e-05,0.9285513160581422] (15,-1; 2,-1), time: 7.6758s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5086816296661845,0.21812695990583456] (9,-1; 9,-1), time: 30.0106s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-0.2356670984602139,0.21675244139124578] (9,-1; 2,-1), time: 22.0735s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3014s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_185, [-inf,inf]=>[-0.13751183359427158,0.4375153521722374] (9,-1; 9,-1), time: 30.0114s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2780s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[1e-05,0.893210511017947] (15,-1; 9,-1), time: 16.1019s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4585s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2843s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.4571425990272397,0.05899599831059955] (9,-1; 9,-1), time: 30.0094s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.17760649397234948,0.3601239515111348] (9,-1; 2,-1), time: 23.8381s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[1e-05,1.0100016546077444] (15,-1; 2,-1), time: 5.6718s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.596314295968832,0.44409051130819827] (2,-1; 2,-1), time: 15.6785s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.5276608535332785,0.22795820700470285] (9,-1; 2,-1), time: 20.7141s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[1e-05,0.5782523507219232] (15,-1; 9,-1), time: 15.7221s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[1e-05,0.9820507588839932] (15,-1; 9,-1), time: 15.3981s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[1e-05,1.2721175572788288] (15,-1; 2,-1), time: 7.4766s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.25038555084412967,0.2957284775996951] (9,-1; 9,-1), time: 30.0647s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[1e-05,0.8393375315234142] (15,-1; 9,-1), time: 15.3737s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.36766348188501374,0.09244668220551308] (9,-1; 9,-1), time: 30.0187s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.34168526778132136,0.15935554106536995] (9,-1; 9,-1), time: 30.0328s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.214894363555218] (15,-1; 2,-1), time: 10.4963s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[1e-05,0.9241346651278374] (15,-1; 9,-1), time: 15.4336s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[1e-05,1.1459641008774621] (15,-1; 9,-1), time: 15.2540s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.14638959329329548,0.19276077288940377] (9,-1; 2,-1), time: 29.6579s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_104, [-inf,inf]=>[-0.2671753162268294,0.22045284859065042] (2,-1; 9,-1), time: 30.0461s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[-0.15487319762590357,0.34443654406624824] (9,-1; 9,-1), time: 30.0158s, #vars: 1567, #constrs: 873, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(51, -1), (194, -1), (143, -1), (53, -1), (59, -1), (76, -1), (67, 1), (43, -1), (180, -1), (101, -1), (41, -1), (11, -1), (93, -1), (33, -1), (26, -1), (128, -1), (198, -1), (36, -1), (196, -1), (138, -1), (30, 1), (58, -1), (38, 1), (137, -1), (77, -1), (199, -1), (114, -1), (80, -1), (88, -1), (111, -1)]
best_l after optimization: -1925.2999267578125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 13.235595941543579
alpha-CROWN with intermediate bounds by MIP: tensor([[-129.20474243, -200.34933472, -247.51364136, -269.52227783,
         -239.17393494, -203.46697998, -185.66873169, -242.81864929,
         -207.58171082]], device='cuda:0') None
MIP improved 112 nodes out of 112 unstable nodes, lb improved 21.994720458984375, ub improved 34.81478500366211, time 95.0887
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_140', 'lay8_60', 'lay8_25', 'lay8_42', 'lay8_54', 'lay8_21', 'lay8_15', 'lay8_14', 'lay8_85', 'lay8_86', 'lay8_118', 'lay8_35', 'lay8_63', 'lay8_113', 'lay8_149', 'lay8_122', 'lay8_142', 'lay8_23', 'lay8_76', 'lay8_112', 'lay8_102', 'lay8_156', 'lay8_158', 'lay8_170', 'lay8_104', 'lay8_187', 'lay8_27', 'lay8_144', 'lay8_110', 'lay8_151', 'lay8_100', 'lay8_61', 'lay8_178', 'lay8_24', 'lay8_121', 'lay8_34', 'lay8_37', 'lay8_105', 'lay8_185', 'lay8_115', 'lay8_94', 'lay8_164', 'lay8_89', 'lay8_137', 'lay8_169', 'lay8_13', 'lay8_10', 'lay8_73', 'lay8_29', 'lay8_166', 'lay8_50', 'lay8_68', 'lay8_189', 'lay8_120', 'lay8_53', 'lay8_161', 'lay8_190', 'lay8_154', 'lay8_45', 'lay8_71', 'lay8_146', 'lay8_163', 'lay8_91', 'lay8_150', 'lay8_172', 'lay8_56', 'lay8_59', 'lay8_48', 'lay8_128', 'lay8_88', 'lay8_19', 'lay8_47', 'lay8_135', 'lay8_174', 'lay8_106', 'lay8_84', 'lay8_39', 'lay8_40', 'lay8_125', 'lay8_195', 'lay8_95', 'lay8_155', 'lay8_33', 'lay8_171', 'lay8_188', 'lay8_129', 'lay8_83', 'lay8_62', 'lay8_103', 'lay8_148', 'lay8_75', 'lay8_153', 'lay8_96', 'lay8_167', 'lay8_17', 'lay8_147', 'lay8_132', 'lay8_184', 'lay8_107', 'lay8_93', 'lay8_152', 'lay8_4', 'lay8_134', 'lay8_6', 'lay8_36', 'lay8_198', 'lay8_182', 'lay8_191', 'lay8_199', 'lay8_183', 'lay8_168', 'lay8_126', 'lay8_44', 'lay8_116', 'lay8_108', 'lay8_90', 'lay8_196', 'lay8_173', 'lay8_58', 'lay8_80', 'lay8_31', 'lay8_79', 'lay8_11', 'lay8_194', 'lay8_162', 'lay8_51', 'lay8_52', 'lay8_43', 'lay8_141', 'lay8_16', 'lay8_32', 'lay8_20', 'lay8_41', 'lay8_64', 'lay8_81', 'lay8_7', 'lay8_2', 'lay8_57', 'lay8_130', 'lay8_117', 'lay8_70', 'lay8_99', 'lay8_12', 'lay8_49', 'lay8_111', 'lay8_157', 'lay8_101', 'lay8_8', 'lay8_82', 'lay8_46', 'lay8_69', 'lay8_165', 'lay8_18', 'lay8_1', 'lay8_177', 'lay8_127', 'lay8_143', 'lay8_65', 'lay8_78', 'lay8_179', 'lay8_3', 'lay8_180', 'lay8_74', 'lay8_139', 'lay8_97', 'lay8_145', 'lay8_197', 'lay8_30', 'lay8_0', 'lay8_181', 'lay8_92', 'lay8_131', 'lay8_159', 'lay8_133', 'lay8_9', 'lay8_5', 'lay8_28', 'lay8_123', 'lay8_193', 'lay8_109', 'lay8_55', 'lay8_72'] filter: 1.0
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4301s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4558s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4876s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5064s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5378s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5451s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5908s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4299s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4485s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2406s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3158s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4069s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6653s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2033s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.4206s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3743s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.7687s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3870s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.9614s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4684s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5024s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4828s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4029s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.2407s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4672s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[1e-05,1.303002760638033] (15,-1; 9,-1), time: 15.3826s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4561s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[1e-05,0.5992647584119918] (15,-1; 9,-1), time: 23.2544s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4628s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[1e-05,0.4895040110958037] (15,-1; 9,-1), time: 18.2197s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4807s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4375s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.8223231989092699] (15,-1; 9,-1), time: 15.3763s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3936s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.249181331312804,0.12027525751904103] (9,-1; 9,-1), time: 30.0137s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-0.2418837146979345,0.21527487262697637] (9,-1; 9,-1), time: 30.0158s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.27194870787165376,0.27888164500749185] (9,-1; 9,-1), time: 30.0561s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.41546995234274325,0.14164042012125777] (9,-1; 9,-1), time: 30.0190s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4699s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-0.012295428803640693,0.5243044855702261] (9,-1; 9,-1), time: 30.0350s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-0.7316024011275233,0.032168771091610635] (9,-1; 9,-1), time: 30.4111s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.03367298065059463,0.5019550794360558] (9,-1; 9,-1), time: 30.0211s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.41828586827525566,0.08047997502938871] (9,-1; 9,-1), time: 30.0165s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.2910675033241433,0.2292510741422139] (9,-1; 9,-1), time: 30.0199s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3603s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3540s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-0.5140688562755166,0.006030861020195515] (9,-1; 9,-1), time: 30.0214s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4525s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.17493222309244008,0.27873811528118353] (9,-1; 9,-1), time: 30.2362s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4483s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3728s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.1590647671688832,0.295062875355177] (9,-1; 9,-1), time: 30.0233s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.3831169584265652,0.2738588378023846] (9,-1; 9,-1), time: 30.0722s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8318s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3738s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3595s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4429s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4543s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-0.5015558001190963,0.049463455375142865] (9,-1; 9,-1), time: 30.0252s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[1e-05,0.7122734334756976] (15,-1; 9,-1), time: 23.4132s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[1e-05,0.3916083001597617] (15,-1; 9,-1), time: 21.8078s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3842s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.5700224335329113,0.09021711895523368] (9,-1; 9,-1), time: 30.0163s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.15868489728447507,0.22314637494072134] (9,-1; 9,-1), time: 30.0350s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,0.701676537356759] (15,-1; 9,-1), time: 15.4879s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3389s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4550s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4838s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4683s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3593s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3652s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.17363981689105876,0.2724437108829055] (9,-1; 9,-1), time: 30.0130s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-0.15110295270876223,0.29664745970708234] (9,-1; 9,-1), time: 30.0168s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.33074521352880804,0.07994143103132166] (9,-1; 9,-1), time: 30.0197s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4760s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.0019356186057530723,0.5251889786392475] (9,-1; 9,-1), time: 30.0488s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[-0.4693012775155638,0.009159200675544642] (9,-1; 9,-1), time: 30.0265s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3714s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4538s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4707s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-0.23917441043413448,0.2784826630689686] (9,-1; 9,-1), time: 30.0718s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3859s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3809s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3872s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4493s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-0.40498852195966223,0.093165267705269] (9,-1; 9,-1), time: 31.2169s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4260s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4150s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4663s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3924s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.44720195100503074,0.08850808050905021] (9,-1; 9,-1), time: 30.2095s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.038645966353385776,0.33701458393885136] (9,-1; 9,-1), time: 30.0196s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4322s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[1e-05,1.3991737769237105] (15,-1; 9,-1), time: 15.5089s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[1e-05,1.9403372624232338] (15,-1; 9,-1), time: 15.5434s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[1e-05,0.9809917072098211] (15,-1; 9,-1), time: 15.4431s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4578s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,0.6645569213077328] (15,-1; 9,-1), time: 15.3941s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4215s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-0.09304219648621555,0.39938521411546396] (9,-1; 9,-1), time: 30.1730s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.17504003773256988,0.20802959199980986] (9,-1; 9,-1), time: 30.0160s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.4056788020765408,0.05843376568075419] (9,-1; 9,-1), time: 30.4271s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.38063918893216125,0.11672677757750567] (9,-1; 9,-1), time: 30.0302s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3687s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4636s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8994s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1072s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[1e-05,0.6803195859174513] (15,-1; 9,-1), time: 15.3552s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4148s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.373071163502003] (15,-1; 9,-1), time: 15.4818s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.26729903600727073,0.5505364667299268] (9,-1; 9,-1), time: 30.2537s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4090s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3756s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-0.3421581198761299,0.13694950640722514] (9,-1; 9,-1), time: 30.0125s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4848s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.18550197826498988,0.21527907458260054] (9,-1; 9,-1), time: 30.0143s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4475s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4029s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3862s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4508s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-0.2956134487897276,0.378094920829106] (9,-1; 9,-1), time: 30.0270s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3718s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-0.2683440366194527,0.23110225095718628] (9,-1; 9,-1), time: 30.4753s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.4596726241832731,0.023446066461220758] (9,-1; 9,-1), time: 30.0434s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-0.12350261196176378,0.27694957173018186] (9,-1; 9,-1), time: 30.4068s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3647s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.475129246995632,0.05769067391927039] (9,-1; 9,-1), time: 30.0150s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4207s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6813s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[1e-05,2.523788769478644] (15,-1; 9,-1), time: 15.3537s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[1e-05,1.2227801873265896] (15,-1; 9,-1), time: 15.3855s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.23184877856457026,0.20618858824283298] (9,-1; 9,-1), time: 30.3865s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-0.39296163434906567,0.08158700036938422] (9,-1; 9,-1), time: 30.0203s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[1e-05,1.391454727653686] (15,-1; 9,-1), time: 15.5872s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3730s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3552s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.4618489470409995,0.07145254029265326] (9,-1; 9,-1), time: 30.0544s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,1.615534219755759] (15,-1; 9,-1), time: 15.4648s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.48333037744126367,0.18399255440453208] (9,-1; 9,-1), time: 30.0307s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-0.1129405353718531,0.31975612659001673] (9,-1; 9,-1), time: 30.0299s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.42182912775425907,0.0385117529004178] (9,-1; 9,-1), time: 30.0142s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3753s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[1e-05,0.9916816635430141] (15,-1; 9,-1), time: 15.4567s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.4592107658581164,0.15746054837110762] (9,-1; 9,-1), time: 30.0232s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.06334411511585664,0.663124631403455] (9,-1; 9,-1), time: 30.2007s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.29225599150030296,0.17091606438913962] (9,-1; 9,-1), time: 30.0132s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3859s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.3343597268151856,0.19646909323069314] (9,-1; 9,-1), time: 30.3239s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5190s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3622s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[1e-05,1.2416936819917679] (15,-1; 9,-1), time: 15.4610s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3595s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.4455818369662454,0.0038634910415183098] (9,-1; 9,-1), time: 30.0518s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[1e-05,0.796841169923909] (15,-1; 9,-1), time: 15.3973s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.598261190052166] (15,-1; 9,-1), time: 15.4083s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,1.3024166074125287] (15,-1; 9,-1), time: 15.4617s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-0.2998342391530761,0.13728623316805547] (9,-1; 9,-1), time: 30.0163s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3820s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3806s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4400s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[1e-05,1.3979840037057845] (15,-1; 9,-1), time: 15.4153s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.0276635443768012] (15,-1; 9,-1), time: 15.3733s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[1e-05,0.5801948634098671] (15,-1; 9,-1), time: 25.6431s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3545s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.4259552846279209,0.14765341671831897] (9,-1; 9,-1), time: 30.0213s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3476s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3662s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-0.01789733060893124,0.39751108673687435] (9,-1; 9,-1), time: 30.0346s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.19007948335487596,0.23366328418778134] (9,-1; 9,-1), time: 30.0322s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[1e-05,0.890374945585864] (15,-1; 9,-1), time: 15.3629s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[1e-05,0.522565692963743] (15,-1; 9,-1), time: 23.0715s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.3043145331556005] (15,-1; 9,-1), time: 15.6267s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,1.8776809680421789] (15,-1; 9,-1), time: 15.3784s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[1e-05,0.8895775300435788] (15,-1; 9,-1), time: 15.3785s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,2.0762965574155037] (15,-1; 2,-1), time: 14.7499s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-0.4272654725906822,0.012168238064362607] (9,-1; 9,-1), time: 30.0395s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,1.8960288250720478] (15,-1; 9,-1), time: 15.3560s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.127136953835491] (15,-1; 9,-1), time: 15.3689s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-0.3450117886880931,0.07527251874498095] (9,-1; 9,-1), time: 30.0126s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-0.44889344883595844,0.08065593353408085] (9,-1; 9,-1), time: 30.0672s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.052302706721890864,0.39771629525101804] (9,-1; 9,-1), time: 30.1897s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.3610575778087471,0.027393279377787322] (9,-1; 9,-1), time: 30.0245s, #vars: 1839, #constrs: 1181, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (62, -1), (118, -1), (22, -1), (32, -1), (190, -1), (3, -1), (125, -1), (143, -1), (34, -1), (54, -1), (20, 1), (79, -1), (158, -1), (8, -1), (109, -1), (131, -1), (65, -1), (67, -1), (73, 1), (60, -1), (162, -1), (114, -1), (95, -1), (112, -1), (197, -1), (55, -1), (148, -1), (97, -1), (23, -1), (166, -1), (181, -1), (163, -1), (15, -1), (43, -1), (50, -1), (5, -1), (155, -1), (25, -1), (64, -1), (176, -1), (81, -1), (18, -1), (135, -1), (1, 1), (119, -1), (184, -1), (72, 1), (74, -1), (179, 1), (19, -1), (164, -1), (12, -1), (117, 1), (136, -1), (75, -1), (139, 1), (83, -1), (92, -1), (161, -1), (85, -1), (145, 1), (29, -1), (120, 1), (199, 1), (69, 1), (61, 1), (107, -1), (132, -1), (122, 1), (0, 1), (137, -1), (113, -1), (47, 1), (110, 1), (144, 1)]
best_l after optimization: -253.31520080566406 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.449990510940552
alpha-CROWN with intermediate bounds by MIP: tensor([[-18.33096504, -26.38091278, -32.31052399, -34.18847656, -31.40937042,
         -27.27938652, -23.83291817, -32.02139664, -27.56123734]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 75.51444244384766, ub improved 110.4827880859375, time 163.1536
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_31', 'lay10_50', 'lay10_64', 'lay10_86', 'lay10_34', 'lay10_191', 'lay10_45', 'lay10_22', 'lay10_184', 'lay10_72', 'lay10_169', 'lay10_38', 'lay10_58', 'lay10_144', 'lay10_36', 'lay10_183', 'lay10_11', 'lay10_111', 'lay10_196', 'lay10_48', 'lay10_54', 'lay10_67', 'lay10_77', 'lay10_163', 'lay10_157', 'lay10_56', 'lay10_106', 'lay10_156', 'lay10_199', 'lay10_89', 'lay10_15', 'lay10_39', 'lay10_29', 'lay10_164', 'lay10_12', 'lay10_66', 'lay10_152', 'lay10_25', 'lay10_90', 'lay10_142', 'lay10_118', 'lay10_194', 'lay10_130', 'lay10_93', 'lay10_124', 'lay10_197', 'lay10_143', 'lay10_53', 'lay10_44', 'lay10_99', 'lay10_63', 'lay10_73', 'lay10_171', 'lay10_116', 'lay10_167', 'lay10_42', 'lay10_132', 'lay10_131', 'lay10_195', 'lay10_76', 'lay10_162', 'lay10_182', 'lay10_91', 'lay10_3', 'lay10_40', 'lay10_5', 'lay10_159', 'lay10_100', 'lay10_185', 'lay10_135', 'lay10_138', 'lay10_149', 'lay10_23', 'lay10_6', 'lay10_160', 'lay10_96', 'lay10_102', 'lay10_52', 'lay10_122', 'lay10_49', 'lay10_30', 'lay10_125', 'lay10_57', 'lay10_10', 'lay10_20', 'lay10_16', 'lay10_88', 'lay10_79', 'lay10_18', 'lay10_28', 'lay10_155', 'lay10_110', 'lay10_9', 'lay10_47', 'lay10_85', 'lay10_146', 'lay10_127', 'lay10_74', 'lay10_65', 'lay10_8', 'lay10_61', 'lay10_112', 'lay10_95', 'lay10_174', 'lay10_147', 'lay10_46', 'lay10_108', 'lay10_35', 'lay10_71', 'lay10_97', 'lay10_32', 'lay10_26', 'lay10_126', 'lay10_114', 'lay10_128', 'lay10_115', 'lay10_19', 'lay10_94', 'lay10_43', 'lay10_55', 'lay10_78', 'lay10_139', 'lay10_134', 'lay10_82', 'lay10_158', 'lay10_178', 'lay10_75', 'lay10_101', 'lay10_168', 'lay10_192', 'lay10_189', 'lay10_187', 'lay10_37', 'lay10_2', 'lay10_176', 'lay10_24', 'lay10_4', 'lay10_69', 'lay10_120', 'lay10_161', 'lay10_181', 'lay10_175', 'lay10_186', 'lay10_109', 'lay10_166', 'lay10_41', 'lay10_190', 'lay10_14', 'lay10_193', 'lay10_98', 'lay10_117', 'lay10_173', 'lay10_165', 'lay10_17', 'lay10_81', 'lay10_151', 'lay10_123', 'lay10_80', 'lay10_148', 'lay10_129', 'lay10_27', 'lay10_105', 'lay10_170', 'lay10_136', 'lay10_68', 'lay10_51', 'lay10_119', 'lay10_154', 'lay10_141', 'lay10_180', 'lay10_62', 'lay10_0', 'lay10_113', 'lay10_145', 'lay10_59', 'lay10_103', 'lay10_1', 'lay10_172', 'lay10_153', 'lay10_107', 'lay10_87', 'lay10_84', 'lay10_33', 'lay10_13', 'lay10_92', 'lay10_60', 'lay10_137', 'lay10_198', 'lay10_177', 'lay10_7', 'lay10_21', 'lay10_188', 'lay10_70', 'lay10_121', 'lay10_133', 'lay10_140', 'lay10_104', 'lay10_179', 'lay10_150'] filter: 1.0
Solving MIP for lay10_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6970s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7314s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7885s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7883s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8119s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8249s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8891s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9329s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9360s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9475s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6441s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7341s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7484s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8253s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7391s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7356s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7681s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8194s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8662s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0168s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7526s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6471s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6766s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7386s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6594s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7118s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6208s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1393s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5971s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6854s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5859s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5849s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5780s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3251s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6356s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5883s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6492s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6595s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6371s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6600s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[1e-05,2.890314941693829] (15,-1; 9,-1), time: 15.6373s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6280s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[1e-05,0.6445741577414276] (15,-1; 9,-1), time: 19.3492s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,0.762234789755335] (15,-1; 9,-1), time: 16.8402s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5971s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.13751039644047267,0.47529338431185775] (9,-1; 9,-1), time: 30.0205s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.1260361251567336,0.8259636166816783] (9,-1; 9,-1), time: 30.0206s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6187s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-0.6635220649220449,0.0007385585933652102] (9,-1; 9,-1), time: 30.0199s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7042s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6829s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-0.6551477447402723,0.11213846093675561] (9,-1; 9,-1), time: 30.0231s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-0.3134916419971268,0.24383497341798605] (9,-1; 9,-1), time: 30.0305s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.47156539514162976,0.07584771761461195] (9,-1; 9,-1), time: 30.0118s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6578s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.0025695658173626235,0.5354379758853259] (9,-1; 9,-1), time: 30.0137s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6391s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6699s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.5262971954848803,0.13791054606153685] (9,-1; 9,-1), time: 30.0199s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-0.26883157594330576,0.34940695601922767] (9,-1; 9,-1), time: 30.0121s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6770s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6745s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6868s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-0.08107490718636445,0.573120911906638] (9,-1; 9,-1), time: 30.0154s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.4030288901315531,0.22492356103868563] (9,-1; 9,-1), time: 30.0128s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6101s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6818s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7492s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5818s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5456s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6368s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.441401181484142,0.18904519696468947] (9,-1; 9,-1), time: 30.0222s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6825s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6641s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6779s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5794s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.25139807653718604,0.21717585854737217] (9,-1; 9,-1), time: 30.0122s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5900s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.7788491976713325] (15,-1; 9,-1), time: 15.6228s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6384s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0056s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6430s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-0.26363254996336516,0.4320000195125465] (9,-1; 9,-1), time: 30.0161s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[1e-05,1.2801327133009295] (15,-1; 9,-1), time: 15.7375s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[1e-05,1.0342274251053347] (15,-1; 9,-1), time: 15.6469s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-0.4980475978603947,0.13186671190597712] (9,-1; 9,-1), time: 30.0294s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5876s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5894s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[1e-05,0.6636876257223844] (15,-1; 9,-1), time: 17.7720s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5963s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.7952224304903184] (15,-1; 9,-1), time: 15.6780s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6631s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6450s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6864s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6010s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[1e-05,0.6234368009969016] (15,-1; 9,-1), time: 18.3327s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6475s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5885s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6569s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5896s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5631s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5695s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6622s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6019s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5884s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5985s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[1e-05,1.4644038653213822] (15,-1; 9,-1), time: 15.6257s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6722s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6370s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7265s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-0.5670486993197953,0.22037976511191318] (9,-1; 9,-1), time: 30.0172s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-0.10964782061814195,0.7508286865571553] (9,-1; 9,-1), time: 30.0114s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6535s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[1e-05,1.7641310599175444] (15,-1; 9,-1), time: 15.7097s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.571285471164288,0.043359306205133355] (9,-1; 9,-1), time: 30.0129s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5757s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.1714406706780085,0.6078135128498058] (9,-1; 9,-1), time: 30.0118s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6087s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5867s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.5449031812130927,0.3093823953338665] (9,-1; 9,-1), time: 30.0276s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5944s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5775s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6018s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.16480193730255494,0.4961719594388329] (9,-1; 9,-1), time: 30.0134s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.18936890768352319,0.3525583998123767] (9,-1; 9,-1), time: 30.0117s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6123s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.17560501022976413,0.4411734539224742] (9,-1; 9,-1), time: 30.0112s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5794s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[1e-05,2.567287755201232] (15,-1; 9,-1), time: 15.6821s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5691s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6376s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5702s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.1379578775050716] (15,-1; 9,-1), time: 15.5848s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4600s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6552s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6577s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6125s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6451s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6118s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.21415518116910118,0.26033761850609766] (9,-1; 9,-1), time: 30.0193s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6700s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.748167877630681] (15,-1; 9,-1), time: 15.6742s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[1e-05,0.8326259176195264] (15,-1; 9,-1), time: 15.6204s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.7266358097097178,0.04837612766732184] (9,-1; 9,-1), time: 30.0144s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6391s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5951s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.9322s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6377s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[1e-05,0.9203885946169662] (15,-1; 9,-1), time: 15.6403s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,2.5655698401727283] (15,-1; 9,-1), time: 15.5894s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.07479143303154699,0.41852570860583016] (9,-1; 9,-1), time: 30.0168s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5680s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.3781102417221022,0.26386153899583525] (9,-1; 9,-1), time: 30.0124s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[1e-05,1.7286528122123455] (15,-1; 9,-1), time: 15.6316s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5856s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5647s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-0.4008002644666718,0.24083134877410864] (9,-1; 9,-1), time: 30.0158s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[1e-05,5.006693441591769] (15,-1; 9,-1), time: 15.6992s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-0.09426629069494402,0.44976276119551717] (9,-1; 9,-1), time: 30.0197s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5949s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-0.7270507055154006,0.16566330201005847] (9,-1; 9,-1), time: 30.0163s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7083s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[1e-05,1.3093068206295353] (15,-1; 9,-1), time: 15.5860s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6008s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7108s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[1e-05,1.4454165291418741] (15,-1; 9,-1), time: 15.7045s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.40527264764342175,0.1275523821638872] (9,-1; 9,-1), time: 30.0200s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.06268639768864155,0.611551916788681] (9,-1; 9,-1), time: 30.0123s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6690s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5774s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5690s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6508s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6518s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6178s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6114s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5665s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.3851024789283763,0.2114728601380067] (9,-1; 9,-1), time: 30.0179s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-0.49086089400060345,0.016144422772154495] (9,-1; 9,-1), time: 30.0119s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7090s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.06532013594720765,0.47607922366908245] (9,-1; 9,-1), time: 30.0149s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.46978072763128564,0.1896062308963857] (9,-1; 9,-1), time: 30.0103s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6636s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5841s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.25693516223405294,0.3070218852219101] (9,-1; 9,-1), time: 30.0103s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7038s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6089s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5851s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.22470560265430536,0.30164676894217624] (9,-1; 9,-1), time: 30.0159s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[1e-05,1.284177187960299] (15,-1; 9,-1), time: 15.7177s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[1e-05,0.8603373786232521] (15,-1; 9,-1), time: 16.5971s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-0.4840654806985914,0.17189782225393133] (9,-1; 9,-1), time: 30.0124s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.4312841396048842,0.07793149993752777] (9,-1; 9,-1), time: 30.0167s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.4311s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.6341726276841293,0.03110807926791984] (9,-1; 9,-1), time: 30.0126s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.21164675541370556,0.3776201626296002] (9,-1; 9,-1), time: 30.0111s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-0.5413806497636681,0.03987676636551802] (9,-1; 9,-1), time: 30.0132s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-0.43493510009108977,0.09857202502477788] (9,-1; 9,-1), time: 30.0860s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.533803018289966,0.10992351154157774] (9,-1; 9,-1), time: 30.0181s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.5181355854500902,0.05695606191047585] (9,-1; 9,-1), time: 30.0145s, #vars: 2153, #constrs: 1552, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.8037161682459015,0.09712310161330863] (9,-1; 9,-1), time: 30.0123s, #vars: 2153, #constrs: 1552, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(60, -1), (25, -1), (42, -1), (21, -1), (15, -1), (14, -1), (85, -1), (86, -1), (35, -1), (63, -1), (113, -1), (149, 1), (122, -1), (76, -1), (112, -1), (156, 1), (158, -1), (104, -1), (27, -1), (110, -1), (100, -1), (178, -1), (24, 1), (121, -1), (34, -1), (37, -1), (105, -1), (185, -1), (115, 1), (164, -1), (137, -1), (13, -1), (10, -1), (73, -1), (68, -1), (190, 1), (71, -1), (146, -1), (163, 1), (91, -1), (172, -1), (56, -1), (48, 1), (128, -1), (88, -1), (19, -1), (47, -1), (135, -1), (39, -1), (125, -1), (195, -1), (95, -1), (155, 1), (33, -1), (171, 1), (188, -1), (129, -1), (62, -1), (148, -1), (153, -1), (96, -1), (167, 1), (17, -1), (147, -1), (132, -1), (184, -1), (107, -1), (152, -1), (4, 1), (6, -1), (36, -1), (191, -1), (183, 1), (168, 1), (126, -1), (116, -1), (196, -1), (58, -1), (80, -1), (79, -1), (194, -1), (162, 1), (51, -1), (52, -1), (43, -1), (141, -1), (32, -1), (20, -1), (41, -1), (7, 1), (2, -1), (130, -1), (117, 1), (70, -1), (12, -1), (49, 1), (157, 1), (46, -1), (69, -1), (165, 1), (18, 1), (1, 1), (177, 1), (127, 1), (143, -1), (65, 1), (78, 1), (179, 1), (180, -1), (139, -1), (97, -1), (145, -1), (0, 1), (181, 1), (92, 1), (131, -1), (159, 1), (133, -1), (9, -1), (28, 1), (123, -1), (193, 1), (109, 1), (55, -1), (72, -1)]
best_l after optimization: -19.759681701660156 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.159872770309448
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.26259089, -1.01434422, -3.23866844, -1.08624554, -2.54758549,
         -2.85192728, -0.61454773, -2.90902805, -3.23474550]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 199.76611328125, ub improved 424.2020263671875, time 135.7380
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_61', 'lay12_197', 'lay12_58', 'lay12_13', 'lay12_129', 'lay12_183', 'lay12_15', 'lay12_145', 'lay12_187', 'lay12_86', 'lay12_111', 'lay12_152', 'lay12_1', 'lay12_41', 'lay12_118', 'lay12_34', 'lay12_199', 'lay12_98', 'lay12_174', 'lay12_46', 'lay12_117', 'lay12_84', 'lay12_175', 'lay12_142', 'lay12_96', 'lay12_90', 'lay12_160', 'lay12_74', 'lay12_103', 'lay12_35', 'lay12_128', 'lay12_115', 'lay12_139', 'lay12_47', 'lay12_95', 'lay12_30', 'lay12_107', 'lay12_109', 'lay12_82', 'lay12_184', 'lay12_150', 'lay12_97', 'lay12_71', 'lay12_27', 'lay12_125', 'lay12_93', 'lay12_77', 'lay12_8', 'lay12_4', 'lay12_127', 'lay12_148', 'lay12_23', 'lay12_146', 'lay12_21', 'lay12_165', 'lay12_25', 'lay12_154', 'lay12_173', 'lay12_171', 'lay12_65', 'lay12_151', 'lay12_172', 'lay12_119', 'lay12_116', 'lay12_130', 'lay12_55', 'lay12_68', 'lay12_57', 'lay12_63', 'lay12_132', 'lay12_182', 'lay12_9', 'lay12_141', 'lay12_170', 'lay12_24', 'lay12_113', 'lay12_194', 'lay12_83', 'lay12_186', 'lay12_56', 'lay12_104', 'lay12_69', 'lay12_36', 'lay12_190', 'lay12_31', 'lay12_120', 'lay12_75', 'lay12_176', 'lay12_188', 'lay12_28', 'lay12_50', 'lay12_19', 'lay12_163', 'lay12_52', 'lay12_169', 'lay12_17', 'lay12_180', 'lay12_54', 'lay12_42', 'lay12_12', 'lay12_72', 'lay12_106', 'lay12_89', 'lay12_123', 'lay12_108', 'lay12_3', 'lay12_161', 'lay12_94', 'lay12_114', 'lay12_62', 'lay12_91', 'lay12_134', 'lay12_149', 'lay12_66', 'lay12_32', 'lay12_38', 'lay12_124', 'lay12_177', 'lay12_64', 'lay12_122', 'lay12_136', 'lay12_39', 'lay12_79', 'lay12_22', 'lay12_88', 'lay12_147', 'lay12_133', 'lay12_60', 'lay12_14', 'lay12_44', 'lay12_53', 'lay12_45', 'lay12_40', 'lay12_168', 'lay12_85', 'lay12_80', 'lay12_121', 'lay12_2', 'lay12_78', 'lay12_76', 'lay12_179', 'lay12_20', 'lay12_81', 'lay12_18', 'lay12_101', 'lay12_198', 'lay12_51', 'lay12_5', 'lay12_67', 'lay12_156', 'lay12_26', 'lay12_59', 'lay12_153', 'lay12_16', 'lay12_159', 'lay12_110', 'lay12_195', 'lay12_162', 'lay12_137', 'lay12_143', 'lay12_193', 'lay12_10', 'lay12_0', 'lay12_181', 'lay12_140', 'lay12_100', 'lay12_105', 'lay12_43', 'lay12_191', 'lay12_126', 'lay12_112', 'lay12_6', 'lay12_70', 'lay12_87', 'lay12_49', 'lay12_92', 'lay12_192', 'lay12_33', 'lay12_11', 'lay12_135', 'lay12_155', 'lay12_167', 'lay12_7', 'lay12_102', 'lay12_166', 'lay12_131', 'lay12_157', 'lay12_158', 'lay12_189', 'lay12_164', 'lay12_73', 'lay12_196', 'lay12_48', 'lay12_185', 'lay12_178', 'lay12_144', 'lay12_37', 'lay12_99', 'lay12_138', 'lay12_29'] filter: 1.0
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9922s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0111s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0605s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0695s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0724s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0811s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0744s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1095s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1250s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1413s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1574s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8924s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9612s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9856s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9795s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0110s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0376s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0953s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0556s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9018s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8592s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9373s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9008s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9533s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8726s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[1e-05,1.3604172838466604] (15,-1; 9,-1), time: 15.9020s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[1e-05,1.6125828898638652] (15,-1; 9,-1), time: 16.0852s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8533s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8878s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7558s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8000s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[-0.34387041276817537,0.2384517753096719] (9,-1; 9,-1), time: 30.0136s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.7698463603209449,0.1290449748166158] (9,-1; 9,-1), time: 30.0191s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-0.44231805369025734,0.11810770683138111] (9,-1; 9,-1), time: 30.0373s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-0.14897208551039048,0.5283325079114807] (9,-1; 9,-1), time: 30.0422s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-0.22398607432766282,0.271669260984968] (9,-1; 9,-1), time: 30.0430s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8369s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[-0.5838401956097901,0.07530121943956244] (9,-1; 9,-1), time: 30.0332s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8886s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.23476686465370622,0.49277857858088875] (9,-1; 9,-1), time: 30.1557s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-0.3648019910626744,0.22690920890629024] (9,-1; 9,-1), time: 30.1655s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[1e-05,0.6337260045730515] (15,-1; 9,-1), time: 28.6211s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8748s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8571s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8867s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8313s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-0.5247561048703885,0.11502347043782463] (9,-1; 9,-1), time: 30.0184s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9086s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8832s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8392s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9117s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.4660822549747902,0.08234384645273317] (9,-1; 9,-1), time: 30.0331s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-0.3450573395593765,0.30977543046866207] (9,-1; 9,-1), time: 30.0360s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-0.7734151775023871,0.14856355719462] (9,-1; 9,-1), time: 30.2295s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7538s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7826s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7963s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-0.7657666448895158,0.23818810367446164] (9,-1; 9,-1), time: 30.1646s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9624s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8490s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8364s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8139s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.9848s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.2736s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7452s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8479s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.7101156177030663,0.30863087269105244] (9,-1; 9,-1), time: 30.0113s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[1e-05,1.0340723135469987] (15,-1; 9,-1), time: 15.9449s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8357s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7874s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[1e-05,0.7093565009500598] (15,-1; 9,-1), time: 15.7706s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.17625820375382756,0.5037529387709405] (9,-1; 9,-1), time: 30.0244s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8464s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8381s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.09326604963532248,0.7437203991742499] (9,-1; 9,-1), time: 30.0137s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-0.12278683511194641,0.48640470639675515] (9,-1; 9,-1), time: 30.0489s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.46475169911022346,0.14708381645634583] (9,-1; 9,-1), time: 30.0201s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7731s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.3058670568705798,0.45177946885864595] (9,-1; 9,-1), time: 30.1583s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-0.5315957075442321,0.135896205207766] (9,-1; 9,-1), time: 30.1032s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.382611606482145,0.25597656530314505] (9,-1; 9,-1), time: 30.2669s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8280s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8983s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8595s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.611483273252397,0.04731660597417598] (9,-1; 9,-1), time: 30.0493s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9228s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-0.5199198353671346,0.15958359430021513] (9,-1; 9,-1), time: 30.0128s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-0.15743981145090044,0.36510808749471274] (9,-1; 9,-1), time: 30.0125s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8086s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8836s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9421s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.29582118335316987,0.4656335651304713] (9,-1; 9,-1), time: 30.1845s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8527s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8205s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9272s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8354s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9784s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5559s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.9632s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-0.5612969728711751,0.05283729035676307] (9,-1; 9,-1), time: 30.0197s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,1.206146277210272] (15,-1; 9,-1), time: 15.9064s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.5115392595766627,0.0932872686965009] (9,-1; 9,-1), time: 30.0199s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[1e-05,0.8269176668604352] (15,-1; 9,-1), time: 17.3188s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9775s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.014305131674447491,0.8151972495692974] (9,-1; 9,-1), time: 30.0338s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[1e-05,1.0088965848580882] (15,-1; 9,-1), time: 16.0742s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[-0.398389328721788,0.18670401872882136] (9,-1; 9,-1), time: 30.0132s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.20266369473824972,0.4466126946637489] (9,-1; 9,-1), time: 30.0126s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8871s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[1e-05,1.8178353199680637] (15,-1; 9,-1), time: 15.8374s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7945s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.33858060575528215,0.20131818919607258] (9,-1; 9,-1), time: 30.2117s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8632s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.4380994556098117] (15,-1; 9,-1), time: 15.8483s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[-0.259731007153328,0.29981944269437266] (9,-1; 9,-1), time: 30.0207s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9360s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-0.47088258769858704,0.20651151514421792] (9,-1; 9,-1), time: 30.1835s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.14483395921932346,0.5991215113643364] (9,-1; 9,-1), time: 30.0163s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.614516597108298,0.26180447250175415] (9,-1; 9,-1), time: 30.1818s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8456s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8964s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7440s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_147, [-inf,inf]=>[1e-05,2.8632621232606756] (15,-1; 9,-1), time: 15.7547s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[1e-05,1.4889552115265914] (15,-1; 9,-1), time: 15.8068s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9031s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.30568925843431066,0.6320676676811086] (9,-1; 9,-1), time: 30.0497s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9546s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.056768124709973805,0.5667272334543485] (9,-1; 9,-1), time: 30.0205s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-0.48476694143424137,0.004895111138970922] (9,-1; 9,-1), time: 30.0134s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.48442144952588473,0.27963974014901866] (9,-1; 9,-1), time: 30.1493s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9114s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8417s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.49062804573171953,0.08148850148328544] (9,-1; 9,-1), time: 30.0812s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9549s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.2347570996755974] (15,-1; 9,-1), time: 15.8005s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9133s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-1.2971252919158753,0.21015869658430286] (9,-1; 9,-1), time: 30.0140s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7689s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.6017225300665215,0.07364738550284242] (9,-1; 9,-1), time: 30.0318s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8586s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8170s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9540s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.15714790057860048,0.5994302435511777] (9,-1; 9,-1), time: 30.0119s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8564s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7537s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7333s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[1e-05,4.074845185748629] (15,-1; 9,-1), time: 15.8038s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8888s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8542s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8869s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.2726468860469891,0.40782937871150376] (9,-1; 9,-1), time: 30.1518s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[1e-05,1.5256551784600811] (15,-1; 9,-1), time: 15.8214s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.30929925376644735,0.382724555272815] (9,-1; 9,-1), time: 30.1675s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7227s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[1e-05,0.8770857383722029] (15,-1; 9,-1), time: 15.8312s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.41814730830794733,0.10293694004024459] (9,-1; 9,-1), time: 30.0111s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7941s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,4.293759021629665] (15,-1; 9,-1), time: 16.0015s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8168s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[1e-05,2.7283214630730876] (15,-1; 9,-1), time: 15.8106s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[1e-05,1.6703152131286616] (15,-1; 9,-1), time: 16.0213s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.140697151188724] (15,-1; 9,-1), time: 15.8634s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7639s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8693s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9182s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1094s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8433s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.5424596429233391,0.19176038580871207] (9,-1; 9,-1), time: 30.0185s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,1.3131608505387817] (15,-1; 9,-1), time: 15.8036s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8347s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7228s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.8544s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8836s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[1e-05,1.632699889243479] (15,-1; 9,-1), time: 16.0033s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7655s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7928s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[1e-05,0.7121772906462371] (15,-1; 9,-1), time: 17.4316s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7801s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.0947438156737074,0.5771646726000972] (9,-1; 9,-1), time: 30.0181s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9219s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-0.4920829883724231,0.359645485027578] (9,-1; 9,-1), time: 30.0117s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7975s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9210s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-0.4357969045137301,0.1319116686395012] (9,-1; 9,-1), time: 30.0245s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-0.7983717674991336,0.04077388552000365] (9,-1; 9,-1), time: 30.0219s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-0.5766364591674206,0.3488078354708041] (9,-1; 9,-1), time: 30.3166s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-0.3025910332951708,0.35387814562158065] (9,-1; 9,-1), time: 30.2537s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8983s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[1e-05,1.2741563444312125] (15,-1; 9,-1), time: 15.9134s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-0.27860598685151194,0.5725996716542273] (9,-1; 9,-1), time: 30.0137s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.43780924924627485,0.19682511071571931] (9,-1; 9,-1), time: 30.1109s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.7079081296657299,0.044465686567323415] (9,-1; 9,-1), time: 30.2773s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.5447428222493645,0.1522183455495693] (9,-1; 9,-1), time: 30.0556s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-0.3793275235390431,0.5324666453447742] (9,-1; 9,-1), time: 30.0432s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[1e-05,1.2879867077424543] (15,-1; 9,-1), time: 16.2718s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-0.19285580712945344,0.3566080608776898] (9,-1; 9,-1), time: 30.0202s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-0.7503404187233097,0.015411434916060923] (9,-1; 9,-1), time: 30.0145s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-0.17984612550985996,0.4933787406268346] (9,-1; 9,-1), time: 30.0769s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-0.8668153921993181,0.04242117276387997] (9,-1; 9,-1), time: 30.1326s, #vars: 2447, #constrs: 1893, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-0.440153725894024,0.28222640549059363] (9,-1; 9,-1), time: 30.0203s, #vars: 2447, #constrs: 1893, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(83, -1), (50, -1), (64, -1), (86, -1), (34, -1), (191, -1), (45, -1), (22, -1), (184, 1), (169, -1), (38, -1), (58, -1), (144, 1), (36, -1), (11, -1), (111, -1), (196, -1), (48, -1), (54, -1), (67, -1), (77, -1), (163, -1), (157, -1), (56, -1), (106, -1), (89, -1), (39, -1), (29, -1), (164, -1), (12, -1), (152, -1), (25, -1), (90, -1), (118, -1), (130, -1), (93, -1), (143, -1), (53, -1), (44, -1), (99, -1), (63, -1), (171, 1), (116, -1), (42, -1), (195, -1), (76, 1), (162, -1), (182, -1), (91, 1), (3, -1), (40, -1), (159, -1), (100, -1), (135, -1), (138, 1), (149, -1), (23, -1), (160, -1), (96, -1), (102, -1), (122, 1), (49, -1), (30, -1), (57, -1), (10, -1), (20, -1), (16, -1), (79, -1), (18, 1), (110, -1), (9, 1), (47, -1), (85, -1), (146, -1), (127, 1), (65, 1), (61, -1), (112, -1), (174, -1), (147, -1), (46, -1), (108, -1), (35, -1), (71, -1), (97, 1), (32, -1), (26, -1), (126, -1), (114, -1), (128, -1), (115, -1), (19, -1), (94, -1), (43, -1), (55, 1), (139, -1), (134, -1), (82, -1), (178, -1), (75, 1), (101, 1), (168, -1), (192, -1), (189, -1), (187, -1), (2, -1), (176, -1), (24, 1), (69, 1), (120, -1), (161, -1), (181, -1), (109, -1), (166, -1), (41, -1), (190, -1), (14, -1), (193, 1), (98, -1), (117, -1), (173, -1), (165, -1), (81, -1), (123, 1), (80, -1), (148, -1), (129, 1), (27, -1), (136, 1), (51, -1), (141, -1), (180, -1), (113, -1), (145, -1), (103, -1), (1, -1), (87, -1), (84, -1), (13, -1), (92, -1), (60, 1), (137, -1), (198, -1), (177, -1), (7, -1), (21, 1), (70, -1), (121, -1), (133, -1), (140, -1), (104, -1), (179, -1), (150, -1)]
best_l after optimization: 12.136310577392578 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.69233250617981
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.88640070,  2.61016440,  0.46480560,  3.39668560,  1.47602510,
          0.58802700,  2.24985123,  0.78531742, -0.32096672]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 1056.5584716796875, ub improved 1630.9632568359375, time 173.0160
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_174', 'lay14_197', 'lay14_7', 'lay14_40', 'lay14_11', 'lay14_126', 'lay14_82', 'lay14_129', 'lay14_106', 'lay14_69', 'lay14_21', 'lay14_16', 'lay14_145', 'lay14_0', 'lay14_134', 'lay14_136', 'lay14_41', 'lay14_167', 'lay14_74', 'lay14_146', 'lay14_47', 'lay14_153', 'lay14_58', 'lay14_193', 'lay14_10', 'lay14_39', 'lay14_184', 'lay14_149', 'lay14_23', 'lay14_70', 'lay14_36', 'lay14_97', 'lay14_61', 'lay14_154', 'lay14_125', 'lay14_118', 'lay14_12', 'lay14_178', 'lay14_114', 'lay14_87', 'lay14_8', 'lay14_163', 'lay14_64', 'lay14_148', 'lay14_102', 'lay14_92', 'lay14_179', 'lay14_34', 'lay14_30', 'lay14_144', 'lay14_113', 'lay14_173', 'lay14_107', 'lay14_150', 'lay14_177', 'lay14_66', 'lay14_181', 'lay14_140', 'lay14_59', 'lay14_56', 'lay14_186', 'lay14_195', 'lay14_170', 'lay14_135', 'lay14_111', 'lay14_26', 'lay14_183', 'lay14_165', 'lay14_89', 'lay14_88', 'lay14_141', 'lay14_121', 'lay14_48', 'lay14_161', 'lay14_128', 'lay14_90', 'lay14_123', 'lay14_6', 'lay14_160', 'lay14_43', 'lay14_81', 'lay14_57', 'lay14_55', 'lay14_157', 'lay14_51', 'lay14_31', 'lay14_77', 'lay14_49', 'lay14_32', 'lay14_127', 'lay14_124', 'lay14_190', 'lay14_27', 'lay14_65', 'lay14_71', 'lay14_14', 'lay14_29', 'lay14_94', 'lay14_4', 'lay14_63', 'lay14_76', 'lay14_25', 'lay14_158', 'lay14_130', 'lay14_52', 'lay14_103', 'lay14_139', 'lay14_104', 'lay14_194', 'lay14_162', 'lay14_166', 'lay14_156', 'lay14_93', 'lay14_147', 'lay14_142', 'lay14_168', 'lay14_98', 'lay14_37', 'lay14_172', 'lay14_95', 'lay14_110', 'lay14_73', 'lay14_151', 'lay14_180', 'lay14_75', 'lay14_99', 'lay14_83', 'lay14_185', 'lay14_143', 'lay14_68', 'lay14_122', 'lay14_155', 'lay14_188', 'lay14_22', 'lay14_28', 'lay14_72', 'lay14_78', 'lay14_38', 'lay14_115', 'lay14_33', 'lay14_24', 'lay14_13', 'lay14_84', 'lay14_19', 'lay14_159', 'lay14_85', 'lay14_117', 'lay14_196', 'lay14_86', 'lay14_79', 'lay14_15', 'lay14_3', 'lay14_54', 'lay14_101', 'lay14_164', 'lay14_45', 'lay14_17', 'lay14_62', 'lay14_109', 'lay14_50', 'lay14_152', 'lay14_176', 'lay14_1', 'lay14_80', 'lay14_67', 'lay14_120', 'lay14_35', 'lay14_53', 'lay14_108', 'lay14_96', 'lay14_198', 'lay14_138', 'lay14_20', 'lay14_169', 'lay14_119', 'lay14_105', 'lay14_175', 'lay14_9', 'lay14_46', 'lay14_132', 'lay14_199', 'lay14_137', 'lay14_5', 'lay14_42', 'lay14_18', 'lay14_131', 'lay14_44', 'lay14_60', 'lay14_187', 'lay14_2', 'lay14_91', 'lay14_171', 'lay14_191', 'lay14_133', 'lay14_192', 'lay14_189', 'lay14_182', 'lay14_112', 'lay14_100', 'lay14_116'] filter: 1.0
Solving MIP for lay14_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1890s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2042s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2319s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2767s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2929s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3055s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3111s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3321s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4170s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4482s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5725s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6347s, #vars: 2773, #constrs: 2282, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6563s, #vars: 2773, #constrs: 2282, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(61, -1), (58, -1), (13, -1), (183, -1), (145, -1), (86, -1), (111, -1), (1, -1), (41, -1), (118, -1), (34, -1), (98, -1), (174, -1), (117, -1), (175, -1), (142, -1), (96, -1), (90, -1), (160, -1), (74, -1), (103, 1), (35, -1), (115, -1), (139, -1), (47, -1), (95, 1), (30, 1), (107, -1), (97, -1), (71, -1), (125, -1), (93, -1), (4, -1), (23, -1), (146, -1), (21, -1), (165, -1), (154, -1), (171, -1), (151, -1), (172, -1), (119, -1), (116, -1), (130, -1), (55, -1), (57, -1), (132, -1), (182, 1), (9, -1), (170, -1), (113, -1), (194, -1), (83, 1), (186, -1), (56, -1), (36, -1), (190, -1), (75, -1), (188, -1), (50, -1), (19, 1), (52, 1), (169, -1), (17, -1), (180, -1), (54, -1), (42, -1), (72, -1), (106, -1), (89, -1), (123, 1), (108, -1), (3, -1), (161, -1), (94, -1), (62, -1), (134, -1), (149, 1), (66, 1), (124, -1), (79, -1), (88, -1), (147, 1), (133, -1), (14, 1), (53, -1), (40, 1), (168, -1), (85, -1), (80, 1), (121, -1), (78, 1), (76, -1), (179, 1), (20, -1), (81, 1), (18, -1), (101, -1), (198, -1), (51, 1), (5, 1), (67, 1), (156, -1), (26, -1), (153, -1), (16, -1), (159, -1), (110, -1), (195, -1), (162, -1), (143, 1), (193, -1), (10, -1), (0, -1), (43, 1), (191, -1), (126, 1), (6, -1), (70, -1), (87, -1), (92, -1), (192, -1), (33, -1), (135, -1), (167, -1), (7, -1), (166, -1), (157, -1), (189, -1), (164, 1), (73, -1), (48, -1), (178, -1), (144, -1), (37, 1), (99, -1), (29, -1)]

all verified at 0th iter
best_l after optimization: 22.32111358642578 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.07397198677062988
alpha-CROWN with intermediate bounds by MIP: tensor([[2.06878090, 3.73863077, 1.60248756, 4.73408079, 2.77046514, 1.67587638,
         3.13075304, 1.95903826, 0.64100027]], device='cuda:0') None
min of alpha-CROWN bounds 0.6410002708435059>=0, verified!
MIP finished with 592.9850900173187s
Run final alpha-CROWN after MIP solving on layer 13 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.32111358642578 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06827211380004883
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.06878090, 3.73863077, 1.60248756, 4.73408079, 2.77046514, 1.67587638,
         3.13075304, 1.95903826, 0.64100027]], device='cuda:0') None
refined global lb: tensor([[2.06878090],
        [3.73863077],
        [1.60248756],
        [4.73408079],
        [2.77046514],
        [1.67587638],
        [3.13075304],
        [1.95903826],
        [0.64100027]], device='cuda:0') min: tensor(0.64100027, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 609.6826 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time [1] 609.6825942993164 max time 609.6825942993164
safe-incomplete-refine (total 1): [0]
