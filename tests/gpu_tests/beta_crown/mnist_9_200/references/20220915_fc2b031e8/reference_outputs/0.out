Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_200
  path: mnist_9_200_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 24
  end: 25
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.015
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 1500
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    _tmp_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Wed Sep 14 17:47:30 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_200]_start=24_end=25_iter=20_b=1024_timeout=1500_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ -960.60522461, -1598.82580566, -1900.80297852, -2114.30004883,
         -1818.29174805, -1546.59924316, -1461.50671387, -1890.52355957,
         -1596.00024414]], device='cuda:0') None
best_l after optimization: -10399.50390625 with beta sum per layer: []
alpha/beta optimization time: 11.038026571273804
initial alpha-CROWN bounds: tensor([[ -696.59332275, -1083.29089355, -1338.28356934, -1458.10083008,
         -1290.01208496, -1100.26892090, -1004.36328125, -1309.33068848,
         -1119.26025391]], device='cuda:0')
Worst class: (+ rhs) -1458.100830078125
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.003750000149011612, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.92123181, -2.21978331,  0.80034137, -3.92385435,  7.73548937,
         -1.33190620,  0.63018954, -0.44093281, -0.48657018,  1.78281856]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.94490069, -1.92307091,  0.52202260, -3.27154565,  6.61249924,
          -1.08670354,  0.41012007, -0.33979699, -0.37521046,  1.86212325],
         [-0.94490069, -1.92307091,  0.52202260, -3.27154565,  6.61249924,
          -1.08670354,  0.41012007, -0.33979699, -0.37521046,  1.86212325]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[7.55739975, 8.53557014, 6.09047651, 9.88404465, 7.69920254,
          6.20237923, 6.95229626, 6.98770952, 4.75037575]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6511 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [52]; unstable size 52; total size 200 (torch.Size([1, 200]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 69 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [69]; unstable size 69; total size 200 (torch.Size([1, 200]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 118 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [118]; unstable size 118; total size 200 (torch.Size([1, 200]))
layer /32 start_node /input.11 using full alpha with unstable size 186 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([200]); unstable size 186; total size 200 (torch.Size([1, 200]))
layer /34 start_node /input.15 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /36 start_node /input.19 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /38 start_node /input.23 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /40 start_node /input.27 using full alpha with unstable size 200 total_size 200 output_shape torch.Size([200])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([200]); unstable size 200; total size 200 (torch.Size([1, 200]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 1200.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_51', 'lay4_55', 'lay4_142', 'lay4_45', 'lay4_194', 'lay4_143', 'lay4_69', 'lay4_99', 'lay4_13', 'lay4_44', 'lay4_175', 'lay4_129', 'lay4_145', 'lay4_151', 'lay4_15', 'lay4_162', 'lay4_12', 'lay4_140', 'lay4_6', 'lay4_53', 'lay4_173', 'lay4_61', 'lay4_59', 'lay4_76', 'lay4_67', 'lay4_43', 'lay4_180', 'lay4_195', 'lay4_101', 'lay4_115', 'lay4_41', 'lay4_187', 'lay4_120', 'lay4_181', 'lay4_11', 'lay4_164', 'lay4_104', 'lay4_93', 'lay4_33', 'lay4_169', 'lay4_176', 'lay4_26', 'lay4_128', 'lay4_7', 'lay4_198', 'lay4_36', 'lay4_196', 'lay4_138', 'lay4_56', 'lay4_30', 'lay4_17', 'lay4_58', 'lay4_178', 'lay4_38', 'lay4_147', 'lay4_137', 'lay4_32', 'lay4_77', 'lay4_103', 'lay4_199', 'lay4_52', 'lay4_8', 'lay4_48', 'lay4_114', 'lay4_80', 'lay4_88', 'lay4_112', 'lay4_111', 'lay4_106'] filter: 1.0
PGD done for relu layer 1
<frozen importlib._bootstrap>:219: RuntimeWarning: numpy.ufunc size changed, may indicate binary incompatibility. Expected 216 from C header, got 232 from PyObject
/home/zhouxingshi/miniconda3/envs/zshi/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/zhouxingshi/gputest/CROWN-GENERAL_release/complete_verifier/utils.py:622: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6877s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1574s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3218s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-0.4939655330499903,0.1840592850098553] (2,-1; 2,-1), time: 1.8979s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.2184067756367363,0.5373208499990273] (2,-1; 2,-1), time: 2.7949s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0356s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_142, [-inf,inf]=>[-0.8449892717769235,0.049085402501457986] (2,-1; 2,-1), time: 3.1334s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_175, [-inf,inf]=>[-0.32826881714231515,0.42907715300269234] (2,-1; 2,-1), time: 3.4814s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6022s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3584s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-0.1456149651544935,0.5368392069310332] (2,-1; 2,-1), time: 3.9064s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_129, [-inf,inf]=>[-0.11562688796938689,0.47522937351739986] (2,-1; 2,-1), time: 4.2482s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3535s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6455s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.4860297802247118,0.1272659783503301] (2,-1; 2,-1), time: 3.9834s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_145, [-inf,inf]=>[-0.115680778699645,0.39476993480740796] (2,-1; 2,-1), time: 4.7821s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_101, [-inf,inf]=>[-inf,-0.011605190255872838] (-1,-1; 2,-1), time: 0.7021s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3306s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_151, [-inf,inf]=>[-0.5429035795490192,0.14445723401377109] (2,-1; 2,-1), time: 5.2942s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[1e-05,0.8799447872078766] (15,-1; 2,-1), time: 1.5602s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_162, [-inf,inf]=>[-0.16441167958775102,0.37427387425188635] (2,-1; 2,-1), time: 5.8376s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_140, [-inf,inf]=>[-0.5034155254172584,0.18120223253708784] (2,-1; 2,-1), time: 4.8204s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_15, [-inf,inf]=>[-0.30329129189060056,0.2429665298254032] (2,-1; 2,-1), time: 6.0165s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[-0.5473879083334787,0.006108669512863298] (2,-1; 2,-1), time: 5.0181s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3728s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6682s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.5179620527560375,0.052008242652376836] (2,-1; 2,-1), time: 3.7552s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2745s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_173, [-inf,inf]=>[-0.40345083055079073,0.2484321178392733] (2,-1; 2,-1), time: 4.3116s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2796s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-0.3978837542670797,0.276857342475283] (2,-1; 2,-1), time: 7.5343s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_120, [-inf,inf]=>[-0.31285138240250243,0.3456218777941852] (2,-1; 2,-1), time: 2.7975s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2854s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_164, [-inf,inf]=>[-0.17748778251856323,0.43373619724193985] (2,-1; 2,-1), time: 2.6446s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_138, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3272s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7049s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_115, [-inf,inf]=>[-0.14164348511008418,0.43256513937750407] (2,-1; 2,-1), time: 3.6142s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5568s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_181, [-inf,inf]=>[-0.5951305937805159,0.07988729164200056] (2,-1; 2,-1), time: 3.6701s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2588s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_13, [-inf,inf]=>[-0.0045572695817047044,0.5442752229198643] (2,-1; 2,-1), time: 9.0102s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.082567148583268] (15,-1; 2,-1), time: 1.2251s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2920s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8387s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_195, [-inf,inf]=>[-0.26009126605170807,0.2253369901835655] (2,-1; 2,-1), time: 5.8076s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.513781916020179,0.0707428762711244] (2,-1; 2,-1), time: 10.2675s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_199, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3461s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[1e-05,0.7467029392352333] (15,-1; 2,-1), time: 1.7353s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_187, [-inf,inf]=>[-0.1591478407535879,0.48206800538383276] (2,-1; 2,-1), time: 5.7808s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4562s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2414s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2899s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3399s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.4964848007376834,0.08165267865290632] (2,-1; 2,-1), time: 4.5694s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_114, [-inf,inf]=>[-inf,-0.0013955701773113727] (-1,-1; 2,-1), time: 1.2538s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_17, [-inf,inf]=>[-0.027765165550538526,0.5018433973163334] (2,-1; 2,-1), time: 3.8577s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_178, [-inf,inf]=>[-0.11903935489718719,0.5780223931220813] (2,-1; 2,-1), time: 4.4022s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_104, [-inf,inf]=>[-0.35449177550456074,0.15685486276982474] (2,-1; 2,-1), time: 6.7488s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.2894043400132795,0.3651006453806827] (2,-1; 2,-1), time: 2.5152s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_56, [-inf,inf]=>[-0.16493979220356925,0.4547371576306901] (2,-1; 2,-1), time: 5.5262s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_169, [-inf,inf]=>[-0.24044442886782838,0.3573803276761943] (2,-1; 2,-1), time: 7.2439s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_32, [-inf,inf]=>[-0.4979849666988582,0.038850078419510756] (2,-1; 2,-1), time: 4.5752s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_103, [-inf,inf]=>[-0.3696357081915237,0.148081766566866] (2,-1; 2,-1), time: 4.4169s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.4428270348924554,0.39641345580399906] (2,-1; 2,-1), time: 3.7277s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_147, [-inf,inf]=>[-0.33732993514491105,0.25943326411251977] (2,-1; 2,-1), time: 5.3481s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.0038387174117586564,0.4652234876991486] (2,-1; 2,-1), time: 3.9769s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_176, [-inf,inf]=>[-0.5415858805183373,0.08509720157945229] (2,-1; 2,-1), time: 8.1206s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_112, [-inf,inf]=>[-0.1014644280411474,0.49679118863242344] (2,-1; 2,-1), time: 4.3390s, #vars: 1289, #constrs: 556, improved: True
Solving MIP for lay4_106, [-inf,inf]=>[-0.5563797867656204,0.03538538109464213] (2,-1; 2,-1), time: 4.5959s, #vars: 1289, #constrs: 556, improved: True
PGD done for relu layer 2
MIP improved 69 nodes out of 69 unstable nodes, lb improved 9.921821594238281, ub improved 12.968194961547852, time 17.2569
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_159', 'lay6_62', 'lay6_124', 'lay6_118', 'lay6_106', 'lay6_10', 'lay6_41', 'lay6_100', 'lay6_7', 'lay6_22', 'lay6_32', 'lay6_30', 'lay6_190', 'lay6_3', 'lay6_68', 'lay6_125', 'lay6_143', 'lay6_34', 'lay6_54', 'lay6_44', 'lay6_160', 'lay6_20', 'lay6_79', 'lay6_158', 'lay6_8', 'lay6_109', 'lay6_131', 'lay6_65', 'lay6_115', 'lay6_127', 'lay6_67', 'lay6_73', 'lay6_60', 'lay6_162', 'lay6_87', 'lay6_114', 'lay6_95', 'lay6_112', 'lay6_197', 'lay6_55', 'lay6_148', 'lay6_123', 'lay6_150', 'lay6_97', 'lay6_23', 'lay6_166', 'lay6_181', 'lay6_163', 'lay6_94', 'lay6_102', 'lay6_15', 'lay6_101', 'lay6_43', 'lay6_50', 'lay6_78', 'lay6_5', 'lay6_155', 'lay6_25', 'lay6_71', 'lay6_42', 'lay6_64', 'lay6_176', 'lay6_130', 'lay6_81', 'lay6_18', 'lay6_135', 'lay6_1', 'lay6_119', 'lay6_184', 'lay6_192', 'lay6_72', 'lay6_74', 'lay6_179', 'lay6_19', 'lay6_164', 'lay6_185', 'lay6_12', 'lay6_138', 'lay6_117', 'lay6_136', 'lay6_75', 'lay6_141', 'lay6_139', 'lay6_156', 'lay6_111', 'lay6_83', 'lay6_92', 'lay6_167', 'lay6_161', 'lay6_186', 'lay6_70', 'lay6_85', 'lay6_145', 'lay6_170', 'lay6_53', 'lay6_29', 'lay6_104', 'lay6_4', 'lay6_120', 'lay6_199', 'lay6_69', 'lay6_61', 'lay6_107', 'lay6_132', 'lay6_122', 'lay6_0', 'lay6_137', 'lay6_147', 'lay6_113', 'lay6_47', 'lay6_110', 'lay6_144'] filter: 1.0
Solving MIP for lay6_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5485s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3510s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9627s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0117s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2152s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2369s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4190s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8518s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9201s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0584s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3726s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9927s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2925s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0344s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6150s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.9871s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.6710s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3380s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.3614s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3239s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4063s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8618s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6821s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3978s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3335s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7858s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,0.5934127253389792] (15,-1; 9,-1), time: 15.9463s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.5676588665309683] (15,-1; 2,-1), time: 11.8427s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3298s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3770s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-0.33187365773575866,0.1268977490031567] (9,-1; 2,-1), time: 22.6551s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.29121464968114374,0.11570445072275826] (2,-1; 9,-1), time: 22.6959s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_181, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3272s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_160, [-inf,inf]=>[-0.41058769451385607,0.1174384686082069] (9,-1; 2,-1), time: 22.0364s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3725s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.4443455245465956,0.02444295588171619] (2,-1; 9,-1), time: 24.1562s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5938s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3237s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-0.3281903012265883,0.2680144575733497] (9,-1; 2,-1), time: 25.1556s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3974s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3334s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_106, [-inf,inf]=>[-0.38003956763953356,0.06278004844701486] (2,-1; 9,-1), time: 26.9027s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3261s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8361s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_155, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7067s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_115, [-inf,inf]=>[-0.007436265637712937,0.46604806631041884] (9,-1; 2,-1), time: 26.2279s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4055s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3858s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_124, [-inf,inf]=>[-0.12440840427655589,0.2987975173353303] (9,-1; 9,-1), time: 30.0214s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.41326320745993006,0.03881577207962536] (9,-1; 9,-1), time: 30.0158s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.06033047805696178,0.3720790452341213] (9,-1; 9,-1), time: 30.0195s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_100, [-inf,inf]=>[-0.4535928965467524,0.030545823889284673] (9,-1; 9,-1), time: 30.1544s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3998s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4066s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3121s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8959s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9880s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3320s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_123, [-inf,inf]=>[-0.7162162612209755,0.027532907525982715] (2,-1; 2,-1), time: 16.3176s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2887s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_127, [-inf,inf]=>[-0.15137722576739976,0.3645431336759367] (9,-1; 9,-1), time: 30.0225s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8114s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2928s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-0.6343529969038297,0.009470761351828366] (9,-1; 2,-1), time: 23.6972s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7668s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9484s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_150, [-inf,inf]=>[-0.5695814167968568,0.003602071166892374] (9,-1; 2,-1), time: 22.1436s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[1e-05,0.9697942401947506] (15,-1; 2,-1), time: 8.6165s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.7872901925762149,0.014750188191881008] (9,-1; 2,-1), time: 19.5840s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,1.024759123844562] (15,-1; 2,-1), time: 13.0295s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3685s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_139, [-inf,inf]=>[1e-05,1.8925611483442841] (15,-1; 2,-1), time: 4.5005s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4978s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4041s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_179, [-inf,inf]=>[1e-05,0.7996643673360562] (15,-1; 9,-1), time: 15.4146s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_117, [-inf,inf]=>[1e-05,0.6215952117292116] (15,-1; 2,-1), time: 14.6512s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3962s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.4179123688396484,0.05714351882036756] (9,-1; 2,-1), time: 23.8148s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_138, [-inf,inf]=>[-0.2685892654624077,0.30909846059436974] (2,-1; 2,-1), time: 19.4479s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_102, [-inf,inf]=>[-0.24506911507067242,0.23094633378139634] (2,-1; 9,-1), time: 29.3274s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3767s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-0.1921550506831527,0.3766661575832334] (2,-1; 9,-1), time: 27.0844s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_101, [-inf,inf]=>[-0.2648279721004544,0.13089540257156387] (9,-1; 2,-1), time: 29.1615s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.4089885065746967,0.06708431560139577] (9,-1; 9,-1), time: 30.0204s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_130, [-inf,inf]=>[-0.3451798220231859,0.1722658782577614] (9,-1; 2,-1), time: 28.3779s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_192, [-inf,inf]=>[-0.5086816296661845,0.2167336915566328] (9,-1; 9,-1), time: 30.0109s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_120, [-inf,inf]=>[1e-05,0.9285513160581422] (15,-1; 2,-1), time: 7.8351s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_156, [-inf,inf]=>[-0.2356670984602139,0.21675244139124578] (9,-1; 2,-1), time: 22.1838s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3113s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_185, [-inf,inf]=>[-0.13751183359427158,0.43735877858652616] (9,-1; 9,-1), time: 30.0302s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3126s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_145, [-inf,inf]=>[1e-05,0.893210511017947] (15,-1; 9,-1), time: 16.1607s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4762s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2886s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_141, [-inf,inf]=>[-0.4571425990272397,0.058990293258625225] (9,-1; 9,-1), time: 30.0095s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_111, [-inf,inf]=>[-0.17760649397234948,0.3601239515111348] (9,-1; 2,-1), time: 23.6774s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_122, [-inf,inf]=>[1e-05,1.0100016546077444] (15,-1; 2,-1), time: 5.7550s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.596314295968832,0.44409051130819827] (2,-1; 2,-1), time: 15.1998s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[1e-05,0.9820507588839932] (15,-1; 9,-1), time: 15.4088s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_199, [-inf,inf]=>[1e-05,0.5781959489166317] (15,-1; 9,-1), time: 15.7169s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.5276608535332785,0.22795820700470285] (9,-1; 2,-1), time: 20.7876s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_110, [-inf,inf]=>[1e-05,1.2721175572788288] (15,-1; 2,-1), time: 7.4082s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_167, [-inf,inf]=>[-0.25038555084412967,0.2957284775996951] (9,-1; 9,-1), time: 30.1867s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[1e-05,0.8393375315234142] (15,-1; 9,-1), time: 15.3943s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.3402424646680135,0.15935554106536995] (9,-1; 9,-1), time: 30.0284s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_144, [-inf,inf]=>[1e-05,1.214894363555218] (15,-1; 2,-1), time: 10.4929s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_186, [-inf,inf]=>[-0.36766348188501374,0.09244668220551308] (9,-1; 9,-1), time: 30.5128s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[1e-05,0.9241346651278374] (15,-1; 9,-1), time: 15.4354s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_170, [-inf,inf]=>[-0.14638959329329548,0.19276077288940377] (9,-1; 2,-1), time: 29.1862s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_47, [-inf,inf]=>[1e-05,1.145317667065232] (15,-1; 9,-1), time: 15.2580s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_104, [-inf,inf]=>[-0.2671753162268294,0.22045284859065042] (2,-1; 9,-1), time: 29.8698s, #vars: 1567, #constrs: 873, improved: True
Solving MIP for lay6_147, [-inf,inf]=>[-0.15487319762590357,0.3444740786942483] (9,-1; 9,-1), time: 30.0104s, #vars: 1567, #constrs: 873, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 1 has unstable to stable neurons: [(51, -1), (194, -1), (143, -1), (53, -1), (59, -1), (76, -1), (67, 1), (43, -1), (180, -1), (101, -1), (41, -1), (11, -1), (93, -1), (33, -1), (26, -1), (128, -1), (198, -1), (36, -1), (196, -1), (138, -1), (30, 1), (58, -1), (38, 1), (137, -1), (77, -1), (199, -1), (114, -1), (80, -1), (88, -1), (111, -1)]
best_l after optimization: -1925.2999267578125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.378668069839478
alpha-CROWN with intermediate bounds by MIP: tensor([[-129.20474243, -200.34933472, -247.51364136, -269.52227783,
         -239.17393494, -203.46697998, -185.66873169, -242.81864929,
         -207.58171082]], device='cuda:0') None
MIP improved 112 nodes out of 112 unstable nodes, lb improved 21.996360778808594, ub improved 34.812252044677734, time 95.0145
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_140', 'lay8_60', 'lay8_25', 'lay8_42', 'lay8_54', 'lay8_21', 'lay8_15', 'lay8_14', 'lay8_85', 'lay8_86', 'lay8_118', 'lay8_35', 'lay8_63', 'lay8_113', 'lay8_149', 'lay8_122', 'lay8_142', 'lay8_23', 'lay8_76', 'lay8_112', 'lay8_102', 'lay8_156', 'lay8_158', 'lay8_170', 'lay8_104', 'lay8_187', 'lay8_27', 'lay8_144', 'lay8_110', 'lay8_151', 'lay8_100', 'lay8_61', 'lay8_178', 'lay8_24', 'lay8_121', 'lay8_34', 'lay8_37', 'lay8_105', 'lay8_185', 'lay8_115', 'lay8_94', 'lay8_164', 'lay8_89', 'lay8_137', 'lay8_169', 'lay8_13', 'lay8_10', 'lay8_73', 'lay8_29', 'lay8_166', 'lay8_50', 'lay8_68', 'lay8_189', 'lay8_120', 'lay8_53', 'lay8_161', 'lay8_190', 'lay8_154', 'lay8_45', 'lay8_71', 'lay8_146', 'lay8_163', 'lay8_91', 'lay8_150', 'lay8_172', 'lay8_56', 'lay8_59', 'lay8_48', 'lay8_128', 'lay8_88', 'lay8_19', 'lay8_47', 'lay8_135', 'lay8_174', 'lay8_106', 'lay8_84', 'lay8_39', 'lay8_40', 'lay8_125', 'lay8_195', 'lay8_95', 'lay8_155', 'lay8_33', 'lay8_171', 'lay8_188', 'lay8_129', 'lay8_83', 'lay8_62', 'lay8_103', 'lay8_148', 'lay8_75', 'lay8_153', 'lay8_96', 'lay8_167', 'lay8_17', 'lay8_147', 'lay8_132', 'lay8_184', 'lay8_107', 'lay8_93', 'lay8_152', 'lay8_4', 'lay8_134', 'lay8_6', 'lay8_36', 'lay8_198', 'lay8_182', 'lay8_191', 'lay8_199', 'lay8_183', 'lay8_168', 'lay8_126', 'lay8_44', 'lay8_116', 'lay8_108', 'lay8_90', 'lay8_196', 'lay8_173', 'lay8_58', 'lay8_80', 'lay8_31', 'lay8_79', 'lay8_11', 'lay8_194', 'lay8_162', 'lay8_51', 'lay8_52', 'lay8_43', 'lay8_141', 'lay8_16', 'lay8_32', 'lay8_20', 'lay8_41', 'lay8_64', 'lay8_81', 'lay8_7', 'lay8_2', 'lay8_57', 'lay8_130', 'lay8_117', 'lay8_70', 'lay8_99', 'lay8_12', 'lay8_49', 'lay8_111', 'lay8_157', 'lay8_101', 'lay8_8', 'lay8_82', 'lay8_46', 'lay8_69', 'lay8_165', 'lay8_18', 'lay8_1', 'lay8_177', 'lay8_127', 'lay8_143', 'lay8_65', 'lay8_78', 'lay8_179', 'lay8_3', 'lay8_180', 'lay8_74', 'lay8_139', 'lay8_97', 'lay8_145', 'lay8_197', 'lay8_30', 'lay8_0', 'lay8_181', 'lay8_92', 'lay8_131', 'lay8_159', 'lay8_133', 'lay8_9', 'lay8_5', 'lay8_28', 'lay8_123', 'lay8_193', 'lay8_109', 'lay8_55', 'lay8_72'] filter: 1.0
Solving MIP for lay8_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4186s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4601s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4615s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4667s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4941s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5016s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_122, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5769s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4173s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_158, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4314s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2997s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2357s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8095s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3686s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3776s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9264s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3807s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.0468s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1791s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3968s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4691s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5027s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4756s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_105, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3891s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_185, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4693s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.3490s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_156, [-inf,inf]=>[1e-05,1.3032998632572586] (15,-1; 9,-1), time: 15.4469s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4591s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[1e-05,0.4924710314441622] (15,-1; 9,-1), time: 17.5563s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_149, [-inf,inf]=>[1e-05,0.5998255249150194] (15,-1; 9,-1), time: 26.0576s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_115, [-inf,inf]=>[1e-05,0.824135382252875] (15,-1; 9,-1), time: 15.4026s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4604s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4396s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4904s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3857s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_118, [-inf,inf]=>[-0.24784618050449375,0.11713434551653443] (9,-1; 9,-1), time: 30.0173s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-0.24459705142360869,0.22106363681566443] (9,-1; 9,-1), time: 30.0212s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_113, [-inf,inf]=>[-0.6373747766606126,0.007074715066943251] (9,-1; 9,-1), time: 30.3692s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4494s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.42070894890664917,0.14999743275729938] (9,-1; 9,-1), time: 30.0378s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_102, [-inf,inf]=>[-0.01703974916015229,0.5211121457172743] (9,-1; 9,-1), time: 30.0257s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_140, [-inf,inf]=>[-0.26976149277237954,0.28027240560188404] (9,-1; 9,-1), time: 30.7376s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_142, [-inf,inf]=>[-0.7368295088521957,0.035145300322796114] (9,-1; 9,-1), time: 30.3702s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_170, [-inf,inf]=>[-0.031059140738799684,0.4978970909659768] (9,-1; 9,-1), time: 30.0456s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_187, [-inf,inf]=>[-0.413064484539616,0.07783202822726631] (9,-1; 9,-1), time: 30.0362s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3517s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_144, [-inf,inf]=>[-0.29193862299611023,0.22142766371910771] (9,-1; 9,-1), time: 30.0538s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3542s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1941s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.17892142844159042,0.27884137805697534] (9,-1; 9,-1), time: 30.0245s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4679s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3740s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.1543573399854346,0.29188250977901076] (9,-1; 9,-1), time: 30.2627s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.3874368187438817,0.2596796233301463] (9,-1; 9,-1), time: 30.0989s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1203s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3933s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3795s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4536s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4734s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_163, [-inf,inf]=>[1e-05,0.3909568517779347] (15,-1; 9,-1), time: 20.6229s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_190, [-inf,inf]=>[1e-05,0.698917556181048] (15,-1; 9,-1), time: 22.3513s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[1e-05,0.5216679071540004] (15,-1; 9,-1), time: 24.0101s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3786s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_169, [-inf,inf]=>[-0.5004585794236885,0.05155590248684445] (9,-1; 9,-1), time: 30.0205s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3590s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.5637927749699397,0.09416303851667888] (9,-1; 9,-1), time: 30.1818s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4352s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_166, [-inf,inf]=>[-0.16154744167164767,0.2300109050155916] (9,-1; 9,-1), time: 30.0157s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4697s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4667s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3845s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3640s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[1e-05,0.6875268543617103] (15,-1; 9,-1), time: 15.4631s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.1582296952770928,0.2756730987105322] (9,-1; 9,-1), time: 30.0137s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4653s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3821s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_189, [-inf,inf]=>[-0.15018734858045374,0.30494296119034797] (9,-1; 9,-1), time: 30.0561s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_161, [-inf,inf]=>[-0.48214381617872004,0.0018609315497316653] (9,-1; 9,-1), time: 30.0465s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_120, [-inf,inf]=>[-0.33369719086103183,0.07326390531973026] (9,-1; 9,-1), time: 30.1031s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4566s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_154, [-inf,inf]=>[-0.3989479318294406,0.10189913531556352] (9,-1; 9,-1), time: 30.1615s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-0.24527369465519605,0.2775239782981198] (9,-1; 9,-1), time: 30.0377s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4781s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3942s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3773s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_184, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3874s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4543s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4435s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1866s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4762s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3898s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_150, [-inf,inf]=>[-0.44737090452766903,0.0859917293492147] (9,-1; 9,-1), time: 30.1692s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-0.04765048739033538,0.33750216366025] (9,-1; 9,-1), time: 30.0110s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4588s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_155, [-inf,inf]=>[1e-05,1.4071049907681863] (15,-1; 9,-1), time: 15.7236s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_171, [-inf,inf]=>[1e-05,1.9303546354202847] (15,-1; 9,-1), time: 15.7776s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_167, [-inf,inf]=>[1e-05,0.9776269928843121] (15,-1; 9,-1), time: 15.3968s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4516s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[1e-05,0.6719601910442419] (15,-1; 9,-1), time: 15.3782s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4440s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_174, [-inf,inf]=>[-0.09510450213671638,0.4060983183262201] (9,-1; 9,-1), time: 30.0205s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_106, [-inf,inf]=>[-0.1695465067543797,0.20997520848475404] (9,-1; 9,-1), time: 30.0155s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.39755059471223864,0.06195182400386573] (9,-1; 9,-1), time: 30.0280s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9168s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3840s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.37622365764862414,0.11692303507585519] (9,-1; 9,-1), time: 30.0307s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4698s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1103s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_183, [-inf,inf]=>[1e-05,0.6710512711259936] (15,-1; 9,-1), time: 15.3649s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.25565190940213844,0.5525616938541338] (9,-1; 9,-1), time: 30.0334s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3574s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_168, [-inf,inf]=>[1e-05,1.3794235690520495] (15,-1; 9,-1), time: 15.4090s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3598s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3954s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4530s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4643s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3936s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_103, [-inf,inf]=>[-0.3373493353972832,0.1351716669747132] (9,-1; 9,-1), time: 30.0401s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3826s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.1863765591215641,0.21671717715411784] (9,-1; 9,-1), time: 30.0158s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4665s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-0.30432336964279916,0.3919891668641605] (9,-1; 9,-1), time: 30.0196s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3737s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_134, [-inf,inf]=>[-0.2711027119355517,0.23088866830184945] (9,-1; 9,-1), time: 30.4620s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_198, [-inf,inf]=>[-0.4503950136329169,0.024631164453115244] (9,-1; 9,-1), time: 30.0211s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_182, [-inf,inf]=>[-0.12710207338876567,0.26980264867243453] (9,-1; 9,-1), time: 30.0166s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3502s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_199, [-inf,inf]=>[-0.477171533921045,0.058959743080331084] (9,-1; 9,-1), time: 30.0153s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4387s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5034s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_162, [-inf,inf]=>[1e-05,2.5131371406312337] (15,-1; 9,-1), time: 15.3938s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[1e-05,1.222226644972423] (15,-1; 9,-1), time: 15.3968s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.23167694497825692,0.20475950914661187] (9,-1; 9,-1), time: 30.0137s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_108, [-inf,inf]=>[-0.38690695007526443,0.08022289505256848] (9,-1; 9,-1), time: 30.4289s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_117, [-inf,inf]=>[1e-05,1.3972542532468404] (15,-1; 9,-1), time: 15.8185s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3702s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3614s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.4568966719319995,0.07359844367804301] (9,-1; 9,-1), time: 30.0189s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,1.6162093128402262] (15,-1; 9,-1), time: 15.5090s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_173, [-inf,inf]=>[-0.5108054283290879,0.17498231051981925] (9,-1; 9,-1), time: 30.0469s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-0.11120651921860243,0.32760302461031204] (9,-1; 9,-1), time: 30.4027s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.4134815369656085,0.03424290916480354] (9,-1; 9,-1), time: 30.0291s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4043s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[-0.461546398327924,0.15385758379467676] (9,-1; 9,-1), time: 30.0228s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_157, [-inf,inf]=>[1e-05,0.9969213184023215] (15,-1; 9,-1), time: 15.4774s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.049790332825825276,0.661224200019922] (9,-1; 9,-1), time: 30.0139s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.2882905531638863,0.1631827388082452] (9,-1; 9,-1), time: 30.0124s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3880s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.3367208088547398,0.194094339745057] (9,-1; 9,-1), time: 30.0187s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.4535223409602735,0.005868102897892129] (9,-1; 9,-1), time: 30.0175s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1612s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3590s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3635s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[1e-05,1.2464624908837494] (15,-1; 9,-1), time: 15.4658s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[1e-05,0.7991719236571196] (15,-1; 9,-1), time: 15.3970s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_177, [-inf,inf]=>[1e-05,0.5965305148232167] (15,-1; 9,-1), time: 15.3823s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_127, [-inf,inf]=>[1e-05,1.31323792967574] (15,-1; 9,-1), time: 15.4859s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_111, [-inf,inf]=>[-0.2991583624744886,0.1457529771261214] (9,-1; 9,-1), time: 30.0187s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_131, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3937s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3830s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4525s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[1e-05,1.4138598128763673] (15,-1; 9,-1), time: 15.3802s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_165, [-inf,inf]=>[1e-05,0.5732608247761232] (15,-1; 9,-1), time: 24.5140s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.018398559076737] (15,-1; 9,-1), time: 15.3716s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_123, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3764s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_101, [-inf,inf]=>[-0.4392754183939872,0.1628067687214891] (9,-1; 9,-1), time: 30.0133s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3806s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-0.017937814162470787,0.3993492019125414] (9,-1; 9,-1), time: 30.1387s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3832s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-0.18073100866663808,0.22740930462719908] (9,-1; 9,-1), time: 30.0120s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[1e-05,0.8925708348346221] (15,-1; 9,-1), time: 15.3501s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_181, [-inf,inf]=>[1e-05,1.2925625831209453] (15,-1; 9,-1), time: 15.3822s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,1.8695334164870758] (15,-1; 9,-1), time: 15.3779s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_179, [-inf,inf]=>[1e-05,0.5112600297499856] (15,-1; 9,-1), time: 24.9769s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_159, [-inf,inf]=>[1e-05,0.8882582872942422] (15,-1; 9,-1), time: 15.3936s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[1e-05,2.0933069600215197] (15,-1; 9,-1), time: 15.3695s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_193, [-inf,inf]=>[1e-05,1.9027869714975498] (15,-1; 9,-1), time: 15.3614s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_109, [-inf,inf]=>[1e-05,1.1233750347226024] (15,-1; 9,-1), time: 15.3580s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-0.42418139804179544,0.016505438194044052] (9,-1; 9,-1), time: 30.0578s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-0.3440493936319618,0.07382032508610142] (9,-1; 9,-1), time: 30.0140s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_197, [-inf,inf]=>[-0.4451987071656557,0.07530335466001835] (9,-1; 9,-1), time: 30.0363s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.07629040332580968,0.3975623003996426] (9,-1; 9,-1), time: 30.3103s, #vars: 1839, #constrs: 1181, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.35797700751353273,0.021576306661278282] (9,-1; 9,-1), time: 30.0658s, #vars: 1839, #constrs: 1181, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 2 has unstable to stable neurons: [(159, -1), (62, -1), (118, -1), (22, -1), (32, -1), (190, -1), (3, -1), (125, -1), (143, -1), (34, -1), (54, -1), (20, 1), (79, -1), (158, -1), (8, -1), (109, -1), (131, -1), (65, -1), (67, -1), (73, 1), (60, -1), (162, -1), (114, -1), (95, -1), (112, -1), (197, -1), (55, -1), (148, -1), (97, -1), (23, -1), (166, -1), (181, -1), (163, -1), (15, -1), (43, -1), (50, -1), (5, -1), (155, -1), (25, -1), (64, -1), (176, -1), (81, -1), (18, -1), (135, -1), (1, 1), (119, -1), (184, -1), (72, 1), (74, -1), (179, 1), (19, -1), (164, -1), (12, -1), (117, 1), (136, -1), (75, -1), (139, 1), (83, -1), (92, -1), (161, -1), (85, -1), (145, 1), (29, -1), (120, 1), (199, 1), (69, 1), (61, 1), (107, -1), (132, -1), (122, 1), (0, 1), (137, -1), (113, -1), (47, 1), (110, 1), (144, 1)]
best_l after optimization: -253.46279907226562 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.196816444396973
alpha-CROWN with intermediate bounds by MIP: tensor([[-18.34055710, -26.39668465, -32.32922745, -34.20950317, -31.42760658,
         -27.29467010, -23.84723282, -32.04004288, -27.57728004]],
       device='cuda:0') None
MIP improved 182 nodes out of 182 unstable nodes, lb improved 75.47274780273438, ub improved 110.49193572998047, time 162.7971
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_83', 'lay10_31', 'lay10_50', 'lay10_64', 'lay10_86', 'lay10_34', 'lay10_191', 'lay10_45', 'lay10_22', 'lay10_184', 'lay10_72', 'lay10_169', 'lay10_38', 'lay10_58', 'lay10_144', 'lay10_36', 'lay10_183', 'lay10_11', 'lay10_111', 'lay10_196', 'lay10_48', 'lay10_54', 'lay10_67', 'lay10_77', 'lay10_163', 'lay10_157', 'lay10_56', 'lay10_106', 'lay10_156', 'lay10_199', 'lay10_89', 'lay10_15', 'lay10_39', 'lay10_29', 'lay10_164', 'lay10_12', 'lay10_66', 'lay10_152', 'lay10_25', 'lay10_90', 'lay10_142', 'lay10_118', 'lay10_194', 'lay10_130', 'lay10_93', 'lay10_124', 'lay10_197', 'lay10_143', 'lay10_53', 'lay10_44', 'lay10_99', 'lay10_63', 'lay10_73', 'lay10_171', 'lay10_116', 'lay10_167', 'lay10_42', 'lay10_132', 'lay10_131', 'lay10_195', 'lay10_76', 'lay10_162', 'lay10_182', 'lay10_91', 'lay10_3', 'lay10_40', 'lay10_5', 'lay10_159', 'lay10_100', 'lay10_185', 'lay10_135', 'lay10_138', 'lay10_149', 'lay10_23', 'lay10_6', 'lay10_160', 'lay10_96', 'lay10_102', 'lay10_52', 'lay10_122', 'lay10_49', 'lay10_30', 'lay10_125', 'lay10_57', 'lay10_10', 'lay10_20', 'lay10_16', 'lay10_88', 'lay10_79', 'lay10_18', 'lay10_28', 'lay10_155', 'lay10_110', 'lay10_9', 'lay10_47', 'lay10_85', 'lay10_146', 'lay10_127', 'lay10_74', 'lay10_65', 'lay10_8', 'lay10_61', 'lay10_112', 'lay10_95', 'lay10_174', 'lay10_147', 'lay10_46', 'lay10_108', 'lay10_35', 'lay10_71', 'lay10_97', 'lay10_32', 'lay10_26', 'lay10_126', 'lay10_114', 'lay10_128', 'lay10_115', 'lay10_19', 'lay10_94', 'lay10_43', 'lay10_55', 'lay10_78', 'lay10_139', 'lay10_134', 'lay10_82', 'lay10_158', 'lay10_178', 'lay10_75', 'lay10_101', 'lay10_168', 'lay10_192', 'lay10_189', 'lay10_187', 'lay10_37', 'lay10_2', 'lay10_176', 'lay10_24', 'lay10_4', 'lay10_69', 'lay10_120', 'lay10_161', 'lay10_181', 'lay10_175', 'lay10_186', 'lay10_109', 'lay10_166', 'lay10_41', 'lay10_190', 'lay10_14', 'lay10_193', 'lay10_98', 'lay10_117', 'lay10_173', 'lay10_165', 'lay10_17', 'lay10_81', 'lay10_151', 'lay10_123', 'lay10_80', 'lay10_148', 'lay10_129', 'lay10_27', 'lay10_105', 'lay10_170', 'lay10_136', 'lay10_68', 'lay10_51', 'lay10_119', 'lay10_154', 'lay10_141', 'lay10_180', 'lay10_62', 'lay10_0', 'lay10_113', 'lay10_145', 'lay10_59', 'lay10_103', 'lay10_1', 'lay10_172', 'lay10_153', 'lay10_107', 'lay10_87', 'lay10_84', 'lay10_33', 'lay10_13', 'lay10_92', 'lay10_60', 'lay10_137', 'lay10_198', 'lay10_177', 'lay10_7', 'lay10_21', 'lay10_188', 'lay10_70', 'lay10_121', 'lay10_133', 'lay10_140', 'lay10_104', 'lay10_179', 'lay10_150'] filter: 1.0
Solving MIP for lay10_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7136s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7289s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7411s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7554s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7761s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8279s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8189s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9105s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9205s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9119s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_196, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6835s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7295s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8182s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7998s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7601s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7515s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_163, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8435s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8583s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0866s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1453s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6730s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6865s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6918s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6877s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8783s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_164, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6619s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6600s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_152, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6571s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6121s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7782s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6082s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6082s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5946s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6428s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_143, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7222s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6363s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6688s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6825s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7338s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6954s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.3427s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6709s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_144, [-inf,inf]=>[1e-05,2.9039885984428273] (15,-1; 9,-1), time: 15.6625s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_184, [-inf,inf]=>[1e-05,0.6468804965147497] (15,-1; 9,-1), time: 19.0972s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6221s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_171, [-inf,inf]=>[1e-05,0.7584968517260905] (15,-1; 9,-1), time: 16.6414s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6755s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_182, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6032s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[-0.10484248291083281,0.8201307236258252] (9,-1; 9,-1), time: 30.0253s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.13817256618947038,0.46016398312942214] (9,-1; 9,-1), time: 30.0159s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6880s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_156, [-inf,inf]=>[-0.6301687342882423,0.10320696357259403] (9,-1; 9,-1), time: 30.0140s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_199, [-inf,inf]=>[-0.32187926613808865,0.250134239125846] (9,-1; 9,-1), time: 30.0197s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.47233759709568857,0.07359582062677242] (9,-1; 9,-1), time: 30.0150s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.005918644379939995,0.5378599568950226] (9,-1; 9,-1), time: 30.0189s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5895s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_100, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6943s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4636s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_142, [-inf,inf]=>[-0.5140593252162183,0.1319431384569254] (9,-1; 9,-1), time: 30.0180s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6344s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_194, [-inf,inf]=>[-0.267942189775252,0.32574611036782647] (9,-1; 9,-1), time: 30.0285s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_149, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6977s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6844s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_124, [-inf,inf]=>[-0.08494468408642179,0.5630877969867465] (9,-1; 9,-1), time: 30.1068s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_197, [-inf,inf]=>[-0.40150523444482217,0.21307631963249427] (9,-1; 9,-1), time: 30.0172s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7137s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7199s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_102, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6215s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6332s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5997s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5790s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6897s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5875s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.44464837291169373,0.19180641223808093] (9,-1; 9,-1), time: 30.0390s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6035s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5703s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.7743570016485697] (15,-1; 9,-1), time: 15.6881s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_167, [-inf,inf]=>[-0.23120007534232884,0.22628367249560208] (9,-1; 9,-1), time: 30.0161s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6689s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6517s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4930s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[1e-05,1.2969663900116264] (15,-1; 9,-1), time: 15.6983s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6625s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_132, [-inf,inf]=>[-0.26183152373669233,0.44056277562889795] (9,-1; 9,-1), time: 30.0146s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_131, [-inf,inf]=>[-0.49972703603020924,0.1518467108583281] (9,-1; 9,-1), time: 30.0125s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_138, [-inf,inf]=>[1e-05,1.0307076130362063] (15,-1; 9,-1), time: 15.6620s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6934s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_112, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5982s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.8055310508987623] (15,-1; 9,-1), time: 15.6501s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_122, [-inf,inf]=>[1e-05,0.6478662496072095] (15,-1; 9,-1), time: 18.3330s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7306s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_147, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6571s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7212s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7057s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6245s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6099s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[1e-05,0.6108780255840968] (15,-1; 9,-1), time: 19.0567s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_127, [-inf,inf]=>[1e-05,1.4828272633941482] (15,-1; 9,-1), time: 15.6294s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6127s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6346s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5989s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_114, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6108s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_128, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5778s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6090s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6973s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6888s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6825s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6919s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[1e-05,1.7645780207035207] (15,-1; 9,-1), time: 15.6643s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5896s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7937s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-0.5977350029313175,0.2170658740181234] (9,-1; 9,-1), time: 30.0118s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6062s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_185, [-inf,inf]=>[-0.12240931124630244,0.7456474517269459] (9,-1; 9,-1), time: 30.0133s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5598s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.5716169067726965,0.014798186818523214] (9,-1; 9,-1), time: 30.0132s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5872s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.17940275908849473,0.5847491609309132] (9,-1; 9,-1), time: 30.0127s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6502s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_187, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6014s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_125, [-inf,inf]=>[-0.5095302752483833,0.31046623435147536] (9,-1; 9,-1), time: 30.0132s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6832s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_176, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6316s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.16912570699821977,0.49513847761151625] (9,-1; 9,-1), time: 30.0114s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.1859362746615731,0.3487511215313798] (9,-1; 9,-1), time: 30.0146s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_155, [-inf,inf]=>[-0.17677836328176688,0.4447883484337991] (9,-1; 9,-1), time: 30.0124s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_120, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6444s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5846s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.21365051612707076,0.27429818517207116] (9,-1; 9,-1), time: 30.0135s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[1e-05,2.589824423552603] (15,-1; 9,-1), time: 15.6924s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_109, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6923s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6805s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6221s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6663s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.168131581356696] (15,-1; 9,-1), time: 15.7231s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4368s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6322s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6980s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6168s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_173, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6899s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6312s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.7268183002799885,0.0488950881597635] (9,-1; 9,-1), time: 30.0119s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,2.73927063484016] (15,-1; 9,-1), time: 15.6078s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_101, [-inf,inf]=>[1e-05,0.840131760992303] (15,-1; 9,-1), time: 15.7018s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5979s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_148, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6005s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7048s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.07599149292429813,0.43904954927410766] (9,-1; 9,-1), time: 30.0208s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[1e-05,0.9208007258166494] (15,-1; 9,-1), time: 15.6304s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,2.5507513469982] (15,-1; 9,-1), time: 15.7094s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-0.36506554151536025,0.2591787662283359] (9,-1; 9,-1), time: 30.0287s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5631s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_193, [-inf,inf]=>[1e-05,1.7374612318315497] (15,-1; 9,-1), time: 15.6528s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_158, [-inf,inf]=>[-0.40315016611531446,0.25119733461091687] (9,-1; 9,-1), time: 30.0251s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_141, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5965s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6129s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_123, [-inf,inf]=>[1e-05,5.0129469545075365] (15,-1; 9,-1), time: 15.6248s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_129, [-inf,inf]=>[1e-05,1.2967157518097439] (15,-1; 9,-1), time: 15.6238s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5854s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-0.09342527828316857,0.45034781315697764] (9,-1; 9,-1), time: 30.0131s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6271s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-0.7491924266413247,0.16061274875462173] (9,-1; 9,-1), time: 30.0241s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_103, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7019s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_136, [-inf,inf]=>[1e-05,1.463748310446946] (15,-1; 9,-1), time: 15.6009s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7005s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_181, [-inf,inf]=>[-0.7229725765957593,0.0012768012578698502] (9,-1; 9,-1), time: 30.0128s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_175, [-inf,inf]=>[-0.41151562121796526,0.12518465204853252] (9,-1; 9,-1), time: 30.0225s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_186, [-inf,inf]=>[-0.07201535601694833,0.6143423309695041] (9,-1; 9,-1), time: 30.0141s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5947s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6808s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5966s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6539s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_137, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6616s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6294s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_177, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6116s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5751s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.392660254049366,0.21017587995734344] (9,-1; 9,-1), time: 30.0120s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_151, [-inf,inf]=>[-0.48781439176439095,0.012845328137291301] (9,-1; 9,-1), time: 30.0256s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6642s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6777s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6019s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_140, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6861s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_105, [-inf,inf]=>[-0.07878699192702542,0.4746901291831651] (9,-1; 9,-1), time: 30.0116s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_179, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6419s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_150, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6305s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_170, [-inf,inf]=>[-0.4576164591811907,0.19051005604248988] (9,-1; 9,-1), time: 30.0278s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.25729895411682807,0.32070709400119524] (9,-1; 9,-1), time: 30.0179s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[1e-05,1.2838359098099497] (15,-1; 9,-1), time: 15.6050s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[1e-05,0.846491183266972] (15,-1; 9,-1), time: 16.4007s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_119, [-inf,inf]=>[-0.23959819997095078,0.2818882973892848] (9,-1; 9,-1), time: 30.0134s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_154, [-inf,inf]=>[-0.510799622620673,0.1680478140171396] (9,-1; 9,-1), time: 30.0156s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_104, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.9718s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.4338714767390518,0.09441076220345831] (9,-1; 9,-1), time: 30.0119s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.6052108691510442,0.051435373362558365] (9,-1; 9,-1), time: 30.0181s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.2121854434364619,0.35784904854788474] (9,-1; 9,-1), time: 30.0256s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_172, [-inf,inf]=>[-0.5730422444910933,0.03081664147417955] (9,-1; 9,-1), time: 30.0127s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_107, [-inf,inf]=>[-0.5607737623902682,0.11141161055280395] (9,-1; 9,-1), time: 30.0116s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_153, [-inf,inf]=>[-0.4206917719186572,0.12010057630176124] (9,-1; 9,-1), time: 30.0154s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.5240434431603175,0.0583099446845987] (9,-1; 9,-1), time: 30.0142s, #vars: 2151, #constrs: 1549, improved: True
Solving MIP for lay10_188, [-inf,inf]=>[-0.8141520985203594,0.11136232660527622] (9,-1; 9,-1), time: 30.0101s, #vars: 2151, #constrs: 1549, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 3 has unstable to stable neurons: [(60, -1), (25, -1), (42, -1), (21, -1), (15, -1), (14, -1), (85, -1), (86, -1), (35, -1), (63, -1), (149, 1), (122, -1), (76, -1), (112, -1), (156, 1), (158, -1), (104, -1), (27, -1), (110, -1), (151, -1), (100, -1), (178, -1), (24, 1), (121, -1), (34, -1), (37, -1), (105, -1), (185, -1), (115, 1), (164, -1), (137, -1), (13, -1), (10, -1), (73, -1), (68, -1), (53, 1), (190, 1), (71, -1), (146, -1), (163, 1), (91, -1), (172, -1), (56, -1), (48, 1), (128, -1), (88, -1), (19, -1), (47, -1), (135, -1), (39, -1), (125, -1), (195, -1), (95, -1), (155, 1), (33, -1), (171, 1), (188, -1), (129, -1), (62, -1), (148, -1), (153, -1), (96, -1), (167, 1), (17, -1), (147, -1), (132, -1), (184, -1), (107, -1), (152, -1), (4, 1), (6, -1), (36, -1), (191, -1), (183, 1), (168, 1), (126, -1), (116, -1), (196, -1), (58, -1), (80, -1), (79, -1), (194, -1), (162, 1), (51, -1), (52, -1), (43, -1), (141, -1), (32, -1), (20, -1), (41, -1), (7, 1), (2, -1), (130, -1), (117, 1), (70, -1), (12, -1), (49, 1), (157, 1), (46, -1), (69, -1), (165, 1), (18, 1), (1, 1), (177, 1), (127, 1), (143, -1), (65, 1), (78, 1), (179, 1), (180, -1), (139, -1), (97, -1), (145, -1), (0, 1), (181, 1), (92, 1), (131, -1), (159, 1), (133, -1), (9, -1), (28, 1), (123, -1), (193, 1), (109, 1), (55, -1), (72, -1)]
best_l after optimization: -19.788619995117188 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.35570216178894
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.26472473, -1.01815128, -3.24229336, -1.08900166, -2.55033588,
         -2.85780191, -0.61682653, -2.91272783, -3.23675585]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 199.87059020996094, ub improved 424.16253662109375, time 133.3329
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_61', 'lay12_197', 'lay12_58', 'lay12_13', 'lay12_129', 'lay12_183', 'lay12_15', 'lay12_145', 'lay12_187', 'lay12_86', 'lay12_111', 'lay12_152', 'lay12_1', 'lay12_41', 'lay12_118', 'lay12_34', 'lay12_199', 'lay12_98', 'lay12_174', 'lay12_46', 'lay12_117', 'lay12_84', 'lay12_175', 'lay12_142', 'lay12_96', 'lay12_90', 'lay12_160', 'lay12_74', 'lay12_103', 'lay12_35', 'lay12_128', 'lay12_115', 'lay12_139', 'lay12_47', 'lay12_95', 'lay12_30', 'lay12_107', 'lay12_109', 'lay12_82', 'lay12_184', 'lay12_150', 'lay12_97', 'lay12_71', 'lay12_27', 'lay12_125', 'lay12_93', 'lay12_77', 'lay12_8', 'lay12_4', 'lay12_127', 'lay12_148', 'lay12_23', 'lay12_146', 'lay12_21', 'lay12_165', 'lay12_25', 'lay12_154', 'lay12_173', 'lay12_171', 'lay12_65', 'lay12_151', 'lay12_172', 'lay12_119', 'lay12_116', 'lay12_130', 'lay12_55', 'lay12_68', 'lay12_57', 'lay12_63', 'lay12_132', 'lay12_182', 'lay12_9', 'lay12_141', 'lay12_170', 'lay12_24', 'lay12_113', 'lay12_194', 'lay12_83', 'lay12_186', 'lay12_56', 'lay12_104', 'lay12_69', 'lay12_36', 'lay12_190', 'lay12_31', 'lay12_120', 'lay12_75', 'lay12_176', 'lay12_188', 'lay12_28', 'lay12_50', 'lay12_19', 'lay12_163', 'lay12_52', 'lay12_169', 'lay12_17', 'lay12_180', 'lay12_54', 'lay12_42', 'lay12_12', 'lay12_72', 'lay12_106', 'lay12_89', 'lay12_123', 'lay12_108', 'lay12_3', 'lay12_161', 'lay12_94', 'lay12_114', 'lay12_62', 'lay12_91', 'lay12_134', 'lay12_149', 'lay12_66', 'lay12_32', 'lay12_38', 'lay12_124', 'lay12_177', 'lay12_64', 'lay12_122', 'lay12_136', 'lay12_39', 'lay12_79', 'lay12_22', 'lay12_88', 'lay12_147', 'lay12_133', 'lay12_60', 'lay12_14', 'lay12_44', 'lay12_53', 'lay12_45', 'lay12_40', 'lay12_168', 'lay12_85', 'lay12_80', 'lay12_121', 'lay12_2', 'lay12_78', 'lay12_76', 'lay12_179', 'lay12_20', 'lay12_81', 'lay12_18', 'lay12_101', 'lay12_198', 'lay12_51', 'lay12_5', 'lay12_67', 'lay12_156', 'lay12_26', 'lay12_59', 'lay12_153', 'lay12_16', 'lay12_159', 'lay12_110', 'lay12_195', 'lay12_162', 'lay12_137', 'lay12_143', 'lay12_193', 'lay12_10', 'lay12_0', 'lay12_181', 'lay12_140', 'lay12_100', 'lay12_105', 'lay12_43', 'lay12_191', 'lay12_126', 'lay12_112', 'lay12_6', 'lay12_70', 'lay12_87', 'lay12_49', 'lay12_92', 'lay12_192', 'lay12_33', 'lay12_11', 'lay12_135', 'lay12_155', 'lay12_167', 'lay12_7', 'lay12_102', 'lay12_166', 'lay12_131', 'lay12_157', 'lay12_158', 'lay12_189', 'lay12_164', 'lay12_73', 'lay12_196', 'lay12_48', 'lay12_185', 'lay12_178', 'lay12_144', 'lay12_37', 'lay12_99', 'lay12_138', 'lay12_29'] filter: 1.0
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8247s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0707s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_118, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1333s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2056s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_111, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2121s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2290s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2459s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_183, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3169s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3159s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3371s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3541s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1308s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2403s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1349s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_175, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2276s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_117, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3339s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2288s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_142, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2734s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_160, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2804s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1908s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0953s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9774s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_115, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0700s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_139, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0702s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_107, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8740s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_103, [-inf,inf]=>[1e-05,1.3499185896010846] (15,-1; 9,-1), time: 15.8285s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[1e-05,1.6149157400240501] (15,-1; 9,-1), time: 15.8158s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8126s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7530s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_125, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7991s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7571s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_129, [-inf,inf]=>[-0.3578662963107331,0.2746468803197436] (9,-1; 9,-1), time: 30.0159s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-0.4445160956439939,0.11659594793221519] (9,-1; 9,-1), time: 30.0266s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_187, [-inf,inf]=>[-0.7688883173241008,0.11848428322519354] (9,-1; 9,-1), time: 30.0321s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_197, [-inf,inf]=>[-0.225820602568858,0.27161111433123936] (9,-1; 9,-1), time: 30.0338s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_152, [-inf,inf]=>[-0.17908355290404682,0.5299899856722654] (9,-1; 9,-1), time: 30.3582s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_199, [-inf,inf]=>[-0.5561839765158056,0.078044777452166] (9,-1; 9,-1), time: 30.0167s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8242s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8792s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-0.3352037475326244,0.22186483455024916] (9,-1; 9,-1), time: 30.0293s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.2329755365074503,0.5205786049384145] (9,-1; 9,-1), time: 30.0697s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_146, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7606s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[1e-05,0.6346241486679437] (15,-1; 9,-1), time: 28.2719s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8649s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_165, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8133s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_154, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8171s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_171, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7532s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_128, [-inf,inf]=>[-0.5610590471677749,0.09772698406588227] (9,-1; 9,-1), time: 30.0656s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_151, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7837s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_172, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8442s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_119, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8969s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_116, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8137s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_109, [-inf,inf]=>[-0.811179980268727,0.1494663517245637] (9,-1; 9,-1), time: 30.0339s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_130, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7883s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.46723775872195283,0.07493692980244081] (9,-1; 9,-1), time: 30.0447s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_184, [-inf,inf]=>[-0.3461836014800917,0.3102180315023074] (9,-1; 9,-1), time: 30.0537s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8942s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8912s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_132, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8141s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_150, [-inf,inf]=>[-0.7693128631409036,0.23986619581652058] (9,-1; 9,-1), time: 30.0283s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_170, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8171s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_113, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9060s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.8201s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_186, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7049s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7245s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.7296644618428426,0.2954571395428938] (9,-1; 9,-1), time: 30.0442s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_182, [-inf,inf]=>[1e-05,1.0288660709084365] (15,-1; 9,-1), time: 15.8312s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_194, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.6936s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8436s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_190, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7982s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.18801035387647702,0.5052769912096509] (9,-1; 9,-1), time: 30.0143s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[1e-05,0.7080913674399473] (15,-1; 9,-1), time: 15.7694s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8374s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_188, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8640s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.07944093442107537,0.7446013746337451] (9,-1; 9,-1), time: 30.0205s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_127, [-inf,inf]=>[-0.07473629630523827,0.46854014995102017] (9,-1; 9,-1), time: 30.0191s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_148, [-inf,inf]=>[-0.46527213572613485,0.1454126454044503] (9,-1; 9,-1), time: 30.0228s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7520s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.30499285277446075,0.44740710759126245] (9,-1; 9,-1), time: 30.1342s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.377556577456399,0.2622655677174967] (9,-1; 9,-1), time: 30.0138s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_173, [-inf,inf]=>[-0.5235825472031276,0.13898887089011927] (9,-1; 9,-1), time: 30.1951s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_169, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7515s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_180, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8357s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9079s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8368s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.6035132892631101,0.048705553622880746] (9,-1; 9,-1), time: 30.0135s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-0.5489999419749118,0.1482804441254367] (9,-1; 9,-1), time: 30.0378s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8507s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_141, [-inf,inf]=>[-0.17289169166985127,0.3667147389173028] (9,-1; 9,-1), time: 30.0139s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_106, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8600s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7896s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.29918534530931135,0.4631249987289818] (9,-1; 9,-1), time: 30.0871s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_108, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8698s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8590s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_161, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6830s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8869s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8176s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8649s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 11.7514s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,1.2527637334438477] (15,-1; 9,-1), time: 15.8640s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[1e-05,0.8198636073602875] (15,-1; 9,-1), time: 17.6309s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_104, [-inf,inf]=>[-0.5974152693371012,0.0516433943242903] (9,-1; 9,-1), time: 30.1312s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_124, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9214s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.49336514939921755,0.11476580224601632] (9,-1; 9,-1), time: 30.0166s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_123, [-inf,inf]=>[1e-05,1.0098862693254933] (15,-1; 9,-1), time: 16.1538s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.029621097510877735,0.815361986509817] (9,-1; 9,-1), time: 30.0107s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_120, [-inf,inf]=>[-0.4032120433906439,0.16259731149512116] (9,-1; 9,-1), time: 30.0139s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_176, [-inf,inf]=>[-0.2313969451835332,0.44388398920658945] (9,-1; 9,-1), time: 30.0120s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8436s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_149, [-inf,inf]=>[1e-05,1.8172142814730825] (15,-1; 9,-1), time: 15.8784s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8222s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.33726724702267896,0.21252757810760417] (9,-1; 9,-1), time: 30.3495s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_133, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8806s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.4248765909454142] (15,-1; 9,-1), time: 15.7775s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_163, [-inf,inf]=>[-0.2600638423250749,0.3302638103401656] (9,-1; 9,-1), time: 30.0330s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7370s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-0.48098739315793454,0.206589156844386] (9,-1; 9,-1), time: 30.1550s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_114, [-inf,inf]=>[-0.6043253482741289,0.265116027887195] (9,-1; 9,-1), time: 30.0099s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.14405490532213466,0.635048800318345] (9,-1; 9,-1), time: 30.0520s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_168, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9049s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7236s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_121, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7767s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_147, [-inf,inf]=>[1e-05,2.853939542080097] (15,-1; 9,-1), time: 15.7268s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[1e-05,1.4844517547964429] (15,-1; 9,-1), time: 15.8915s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8371s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.28556753633480864,0.6334698270260948] (9,-1; 9,-1), time: 30.0110s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8081s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-0.0485741825132746,0.5660496100332956] (9,-1; 9,-1), time: 30.0331s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8755s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_177, [-inf,inf]=>[-0.48578462076072637,0.0058332828093064755] (9,-1; 9,-1), time: 30.2151s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_101, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8093s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.4961283172448083,0.27767848662250383] (9,-1; 9,-1), time: 30.0128s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.2378870431696036] (15,-1; 9,-1), time: 15.8750s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_122, [-inf,inf]=>[-0.48918383774388374,0.08887364174065303] (9,-1; 9,-1), time: 30.0667s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_198, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8277s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8186s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_156, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8282s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_136, [-inf,inf]=>[-1.2932027567950415,0.1937484243158137] (9,-1; 9,-1), time: 30.2837s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.5806920676816404,0.07270787179893964] (9,-1; 9,-1), time: 30.0222s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7834s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9038s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_159, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8017s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.1585107171750875,0.5971167904551733] (9,-1; 9,-1), time: 30.3544s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_110, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8227s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[1e-05,4.077013357060435] (15,-1; 9,-1), time: 16.0654s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_195, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7671s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_162, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8186s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_193, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7904s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8597s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9051s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.24450735719090072,0.40647637059933495] (9,-1; 9,-1), time: 30.1740s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[1e-05,1.5280191431660035] (15,-1; 9,-1), time: 15.8568s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.32251394364496894,0.38485131368354386] (9,-1; 9,-1), time: 30.1748s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_191, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7711s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_179, [-inf,inf]=>[1e-05,0.8893917524656005] (15,-1; 9,-1), time: 15.8130s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.41754671429538665,0.10542148928808259] (9,-1; 9,-1), time: 30.0121s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,4.288762600640893] (15,-1; 9,-1), time: 16.1525s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8874s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8472s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.2710s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[1e-05,1.6657812897988773] (15,-1; 9,-1), time: 15.9163s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[1e-05,3.1036273741152387] (15,-1; 9,-1), time: 15.8738s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[1e-05,2.735597026345201] (15,-1; 9,-1), time: 16.0783s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7261s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8915s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_135, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7769s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8681s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.5446800807821732,0.2012875225319711] (9,-1; 9,-1), time: 30.1865s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7519s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_143, [-inf,inf]=>[1e-05,1.3120097848619052] (15,-1; 9,-1), time: 16.1932s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_166, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8161s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_157, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7580s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_192, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4507s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[1e-05,1.6378680054914063] (15,-1; 9,-1), time: 15.7476s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_189, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8221s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8209s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_126, [-inf,inf]=>[1e-05,0.7287137340509694] (15,-1; 9,-1), time: 16.9484s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8238s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.08345369305658845,0.6077492904832194] (9,-1; 9,-1), time: 30.0698s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_178, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8217s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_137, [-inf,inf]=>[-0.46741277811781395,0.35925529770342884] (9,-1; 9,-1), time: 30.0124s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_144, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9613s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8289s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_181, [-inf,inf]=>[-0.5566266946923588,0.3449495571973554] (9,-1; 9,-1), time: 30.2772s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_140, [-inf,inf]=>[-0.41744789818795686,0.1590692628830357] (9,-1; 9,-1), time: 30.0117s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_100, [-inf,inf]=>[-0.7991573940593796,0.0381950592759073] (9,-1; 9,-1), time: 30.0312s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_105, [-inf,inf]=>[-0.30255540038586537,0.3399838180121085] (9,-1; 9,-1), time: 30.0238s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8704s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_164, [-inf,inf]=>[1e-05,1.2692581018485807] (15,-1; 9,-1), time: 15.9743s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_112, [-inf,inf]=>[-0.26836918790790665,0.5711402266287455] (9,-1; 9,-1), time: 30.1441s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.43664979673260373,0.2118169878680798] (9,-1; 9,-1), time: 30.0365s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.7082008167771277,0.043152323266766865] (9,-1; 9,-1), time: 30.2122s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_155, [-inf,inf]=>[-0.547378705823972,0.13531470757988084] (9,-1; 9,-1), time: 30.0168s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_102, [-inf,inf]=>[-0.3757752624411717,0.5192630071158576] (9,-1; 9,-1), time: 30.0182s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[1e-05,1.2791701461302523] (15,-1; 9,-1), time: 15.8283s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_131, [-inf,inf]=>[-0.2222769675098903,0.3572380244064031] (9,-1; 9,-1), time: 30.0117s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_158, [-inf,inf]=>[-0.761716098072772,0.01474186897029632] (9,-1; 9,-1), time: 30.0367s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_196, [-inf,inf]=>[-0.17734825414194993,0.4934608330423391] (9,-1; 9,-1), time: 30.0298s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_185, [-inf,inf]=>[-0.8643865028234228,0.028869180861608997] (9,-1; 9,-1), time: 30.2297s, #vars: 2445, #constrs: 1890, improved: True
Solving MIP for lay12_138, [-inf,inf]=>[-0.43064375821679335,0.2773169595962782] (9,-1; 9,-1), time: 30.0776s, #vars: 2445, #constrs: 1890, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 4 has unstable to stable neurons: [(83, -1), (50, -1), (64, -1), (86, -1), (34, -1), (191, -1), (45, -1), (22, -1), (184, 1), (169, -1), (38, -1), (58, -1), (144, 1), (36, -1), (183, -1), (11, -1), (111, -1), (196, -1), (48, -1), (54, -1), (67, -1), (77, -1), (163, -1), (157, -1), (56, -1), (106, -1), (89, -1), (39, -1), (29, -1), (164, -1), (12, -1), (152, -1), (25, -1), (90, -1), (118, -1), (130, -1), (93, -1), (143, -1), (53, -1), (44, -1), (99, -1), (63, -1), (171, 1), (116, -1), (42, -1), (195, -1), (76, 1), (162, -1), (182, -1), (91, 1), (3, -1), (40, -1), (159, -1), (100, -1), (135, -1), (138, 1), (149, -1), (23, -1), (160, -1), (96, -1), (102, -1), (122, 1), (49, -1), (30, -1), (57, -1), (10, -1), (20, -1), (16, -1), (79, -1), (18, 1), (110, -1), (9, 1), (47, -1), (85, -1), (146, -1), (127, 1), (65, 1), (61, -1), (112, -1), (174, -1), (147, -1), (46, -1), (108, -1), (35, -1), (71, -1), (97, 1), (32, -1), (26, -1), (126, -1), (114, -1), (128, -1), (115, -1), (19, -1), (94, -1), (43, -1), (55, 1), (139, -1), (134, -1), (82, -1), (178, -1), (75, 1), (101, 1), (168, -1), (192, -1), (189, -1), (187, -1), (2, -1), (176, -1), (24, 1), (69, 1), (120, -1), (161, -1), (109, -1), (166, -1), (41, -1), (190, -1), (14, -1), (193, 1), (98, -1), (117, -1), (173, -1), (165, -1), (81, -1), (123, 1), (80, -1), (148, -1), (129, 1), (27, -1), (136, 1), (51, -1), (141, -1), (180, -1), (113, -1), (145, -1), (103, -1), (1, -1), (87, -1), (84, -1), (13, -1), (92, -1), (60, 1), (137, -1), (198, -1), (177, -1), (7, -1), (21, 1), (70, -1), (121, -1), (133, -1), (140, -1), (104, -1), (179, -1), (150, -1)]
best_l after optimization: 11.887350082397461 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.012436628341675
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.85700130,  2.58071566,  0.44069767,  3.36481428,  1.44467735,
          0.55837512,  2.22859430,  0.75590611, -0.34343100]], device='cuda:0') None
MIP improved 200 nodes out of 200 unstable nodes, lb improved 1056.5426025390625, ub improved 1630.9073486328125, time 173.4578
maximum relu layer improved by MIP so far 5
Linear(in_features=200, out_features=200, bias=True) 6 14 torch.Size([200])
sorted candidates ['lay14_174', 'lay14_197', 'lay14_7', 'lay14_40', 'lay14_11', 'lay14_126', 'lay14_82', 'lay14_129', 'lay14_106', 'lay14_69', 'lay14_21', 'lay14_16', 'lay14_145', 'lay14_0', 'lay14_134', 'lay14_136', 'lay14_41', 'lay14_167', 'lay14_74', 'lay14_146', 'lay14_47', 'lay14_153', 'lay14_58', 'lay14_193', 'lay14_10', 'lay14_39', 'lay14_184', 'lay14_149', 'lay14_23', 'lay14_70', 'lay14_36', 'lay14_97', 'lay14_61', 'lay14_154', 'lay14_125', 'lay14_118', 'lay14_12', 'lay14_178', 'lay14_114', 'lay14_87', 'lay14_8', 'lay14_163', 'lay14_64', 'lay14_148', 'lay14_102', 'lay14_92', 'lay14_179', 'lay14_34', 'lay14_30', 'lay14_144', 'lay14_113', 'lay14_173', 'lay14_107', 'lay14_150', 'lay14_177', 'lay14_66', 'lay14_181', 'lay14_140', 'lay14_59', 'lay14_56', 'lay14_186', 'lay14_195', 'lay14_170', 'lay14_135', 'lay14_111', 'lay14_26', 'lay14_183', 'lay14_165', 'lay14_89', 'lay14_88', 'lay14_141', 'lay14_121', 'lay14_48', 'lay14_161', 'lay14_128', 'lay14_90', 'lay14_123', 'lay14_6', 'lay14_160', 'lay14_43', 'lay14_81', 'lay14_57', 'lay14_55', 'lay14_157', 'lay14_51', 'lay14_31', 'lay14_77', 'lay14_49', 'lay14_32', 'lay14_127', 'lay14_124', 'lay14_190', 'lay14_27', 'lay14_65', 'lay14_71', 'lay14_14', 'lay14_29', 'lay14_94', 'lay14_4', 'lay14_63', 'lay14_76', 'lay14_25', 'lay14_158', 'lay14_130', 'lay14_52', 'lay14_103', 'lay14_139', 'lay14_104', 'lay14_194', 'lay14_162', 'lay14_166', 'lay14_156', 'lay14_93', 'lay14_147', 'lay14_142', 'lay14_168', 'lay14_98', 'lay14_37', 'lay14_172', 'lay14_95', 'lay14_110', 'lay14_73', 'lay14_151', 'lay14_180', 'lay14_75', 'lay14_99', 'lay14_83', 'lay14_185', 'lay14_143', 'lay14_68', 'lay14_122', 'lay14_155', 'lay14_188', 'lay14_22', 'lay14_28', 'lay14_72', 'lay14_78', 'lay14_38', 'lay14_115', 'lay14_33', 'lay14_24', 'lay14_13', 'lay14_84', 'lay14_19', 'lay14_159', 'lay14_85', 'lay14_117', 'lay14_196', 'lay14_86', 'lay14_79', 'lay14_15', 'lay14_3', 'lay14_54', 'lay14_101', 'lay14_164', 'lay14_45', 'lay14_17', 'lay14_62', 'lay14_109', 'lay14_50', 'lay14_152', 'lay14_176', 'lay14_1', 'lay14_80', 'lay14_67', 'lay14_120', 'lay14_35', 'lay14_53', 'lay14_108', 'lay14_96', 'lay14_198', 'lay14_138', 'lay14_20', 'lay14_169', 'lay14_119', 'lay14_105', 'lay14_175', 'lay14_9', 'lay14_46', 'lay14_132', 'lay14_199', 'lay14_137', 'lay14_5', 'lay14_42', 'lay14_18', 'lay14_131', 'lay14_44', 'lay14_60', 'lay14_187', 'lay14_2', 'lay14_91', 'lay14_171', 'lay14_191', 'lay14_133', 'lay14_192', 'lay14_189', 'lay14_182', 'lay14_112', 'lay14_100', 'lay14_116'] filter: 1.0
Solving MIP for lay14_197, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2358s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3908s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_145, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4114s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4458s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_174, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4668s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_134, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5026s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_136, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5090s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_129, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5305s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_126, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5880s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5877s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5989s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6632s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4366s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2617s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_167, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3390s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2472s, #vars: 2771, #constrs: 2279, improved: True
Solving MIP for lay14_153, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3695s, #vars: 2771, #constrs: 2279, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])
relu layer: 5 has unstable to stable neurons: [(61, -1), (58, -1), (13, -1), (183, -1), (145, -1), (86, -1), (111, -1), (1, -1), (41, -1), (118, -1), (34, -1), (98, -1), (174, -1), (117, -1), (175, -1), (142, -1), (96, -1), (90, -1), (160, -1), (74, -1), (103, 1), (35, -1), (115, -1), (139, -1), (47, -1), (95, 1), (30, 1), (107, -1), (97, -1), (71, -1), (125, -1), (93, -1), (4, -1), (23, -1), (146, -1), (21, -1), (165, -1), (154, -1), (171, -1), (151, -1), (172, -1), (119, -1), (116, -1), (130, -1), (55, -1), (57, -1), (132, -1), (182, 1), (9, -1), (170, -1), (113, -1), (194, -1), (83, 1), (186, -1), (56, -1), (36, -1), (190, -1), (75, -1), (188, -1), (50, -1), (19, 1), (52, 1), (169, -1), (17, -1), (180, -1), (54, -1), (42, -1), (72, -1), (106, -1), (89, -1), (123, 1), (108, -1), (3, -1), (161, -1), (94, -1), (62, -1), (134, -1), (149, 1), (66, 1), (124, -1), (79, -1), (88, -1), (147, 1), (133, -1), (14, 1), (53, -1), (40, 1), (168, -1), (85, -1), (80, 1), (121, -1), (78, 1), (76, -1), (179, 1), (20, -1), (81, 1), (18, -1), (101, -1), (198, -1), (51, 1), (5, 1), (67, 1), (156, -1), (26, -1), (153, -1), (16, -1), (159, -1), (110, -1), (195, -1), (162, -1), (143, 1), (193, -1), (10, -1), (0, -1), (43, 1), (191, -1), (126, 1), (6, -1), (70, -1), (87, -1), (92, -1), (192, -1), (33, -1), (135, -1), (167, -1), (7, -1), (166, -1), (157, -1), (189, -1), (164, 1), (73, -1), (48, -1), (178, -1), (144, -1), (37, 1), (99, -1), (29, -1)]

all verified at 0th iter
best_l after optimization: 22.355792999267578 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.10190558433532715
alpha-CROWN with intermediate bounds by MIP: tensor([[2.06383896, 3.74282789, 1.60932565, 4.74130535, 2.77351570, 1.67425275,
         3.13462496, 1.96698427, 0.64911890]], device='cuda:0') None
min of alpha-CROWN bounds 0.6491189002990723>=0, verified!
MIP finished with 590.5245461463928s
Run final alpha-CROWN after MIP solving on layer 13 and relu idx 6
0 /input torch.Size([1, 200])
1 /input.3 torch.Size([1, 200])
2 /input.7 torch.Size([1, 200])
3 /input.11 torch.Size([1, 200])
4 /input.15 torch.Size([1, 200])
5 /input.19 torch.Size([1, 200])
6 /input.23 torch.Size([1, 200])
7 /input.27 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: 22.355792999267578 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06916928291320801
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.06383896, 3.74282789, 1.60932565, 4.74130535, 2.77351570, 1.67425275,
         3.13462496, 1.96698427, 0.64911890]], device='cuda:0') None
refined global lb: tensor([[2.06383896],
        [3.74282789],
        [1.60932565],
        [4.74130535],
        [2.77351570],
        [1.67425275],
        [3.13462496],
        [1.96698427],
        [0.64911890]], device='cuda:0') min: tensor(0.64911890, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 604.8860 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time (total 1): 604.8799415818249, max time: 604.8859903812408
safe-incomplete-refine (total 1): [0]
