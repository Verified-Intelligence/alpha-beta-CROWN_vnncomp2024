Experiments at Wed Nov  3 23:56:33 2021 on huan-Super-Server
Namespace(batch_size=500, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', crown=False, data='MNIST_ERAN_UN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=951, epsilon=0.015, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='eran_models/mnist_9_200_nat_old.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=16, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='mnist_9_200', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='skip', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=950, timeout=500.0)
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=200, bias=True)
  (2): ReLU()
  (3): Linear(in_features=200, out_features=200, bias=True)
  (4): ReLU()
  (5): Linear(in_features=200, out_features=200, bias=True)
  (6): ReLU()
  (7): Linear(in_features=200, out_features=200, bias=True)
  (8): ReLU()
  (9): Linear(in_features=200, out_features=200, bias=True)
  (10): ReLU()
  (11): Linear(in_features=200, out_features=200, bias=True)
  (12): ReLU()
  (13): Linear(in_features=200, out_features=200, bias=True)
  (14): ReLU()
  (15): Linear(in_features=200, out_features=200, bias=True)
  (16): ReLU()
  (17): Linear(in_features=200, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0150]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
saving results to Verified_ret_[mnist_9_200]_start=950_end=951_iter=50_b=500_int-beta=False_timeout=500.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 950 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  7  correct label  7 logits tensor([-2.8573, -0.1995,  0.2406,  2.8375, -1.4131, -0.9079, -3.6561,  4.7164,
         0.1773,  2.1798], grad_fn=<SelectBackward0>)
Model prediction is: tensor([[-2.8573, -0.1995,  0.2406,  2.8375, -1.4131, -0.9079, -3.6561,  4.7164,
          0.1773,  2.1798]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 5030.6484375 with beta sum per layer: []
optimal alpha/beta time: 13.108261823654175
initial alpha-CROWN bounds: tensor([[-407.3080, -563.1781, -650.8111, -701.7691, -598.0439, -600.1354,
         -660.8174, -390.2936, -458.2916]], device='cuda:0',
       grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 400.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_62', 'lay4_79', 'lay4_42', 'lay4_197', 'lay4_146', 'lay4_69', 'lay4_84', 'lay4_123', 'lay4_91', 'lay4_1', 'lay4_190', 'lay4_161', 'lay4_191', 'lay4_150', 'lay4_32', 'lay4_74', 'lay4_101', 'lay4_133', 'lay4_193', 'lay4_181', 'lay4_174', 'lay4_188', 'lay4_64', 'lay4_2', 'lay4_52', 'lay4_136', 'lay4_56', 'lay4_17', 'lay4_60', 'lay4_9', 'lay4_81', 'lay4_61', 'lay4_182', 'lay4_33', 'lay4_130', 'lay4_87', 'lay4_137', 'lay4_172', 'lay4_53', 'lay4_8', 'lay4_176', 'lay4_38', 'lay4_43', 'lay4_169', 'lay4_128', 'lay4_199', 'lay4_13', 'lay4_145', 'lay4_164', 'lay4_86', 'lay4_108', 'lay4_102', 'lay4_71', 'lay4_167', 'lay4_107', 'lay4_158', 'lay4_97', 'lay4_73', 'lay4_92'] filter: 1.0
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1288: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  labels = torch.from_numpy(labels.astype(np.int))
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1292: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1,-1,1,1)
Solving MIP for lay4_79, [-0.766548752784729,0.019375145435333252]=>[-0.766548752784729,-1e-05] (-1,-1; 15,-1), time: 0.5324s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_42, [-1.1598639488220215,0.017802223563194275]=>[-1.1598639488220215,-1e-05] (-1,-1; 15,-1), time: 0.5459s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_1, [-0.8027317523956299,0.04068902134895325]=>[-0.8027317523956299,-1e-05] (-1,-1; 15,-1), time: 0.5756s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_69, [-0.06982901692390442,0.7954726815223694]=>[1e-05,0.7954726815223694] (15,-1; -1,-1), time: 0.5858s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_146, [-0.06935936212539673,0.7175433039665222]=>[1e-05,0.7175433039665222] (15,-1; -1,-1), time: 0.6188s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_123, [-0.042559608817100525,0.7624971270561218]=>[1e-05,0.7624971270561218] (15,-1; -1,-1), time: 0.6512s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_191, [-0.9742432832717896,0.018708080053329468]=>[-0.9742432832717896,-1e-05] (-1,-1; 15,-1), time: 0.6545s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_64, [-0.8606107234954834,0.044974565505981445]=>[-0.8606107234954834,-1e-05] (-1,-1; 15,-1), time: 0.5638s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_2, [-0.7856360673904419,0.05022713541984558]=>[-0.7856360673904419,-1e-05] (-1,-1; 15,-1), time: 0.5276s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_84, [-0.24305838346481323,0.638683557510376]=>[-0.09715721597540176,0.5561845385334001] (2,-1; 2,-1), time: 1.7733s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_197, [-0.30050531029701233,0.5584658980369568]=>[-0.18214104405406317,0.42182012518326845] (2,-1; 2,-1), time: 1.8239s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_74, [-0.749131441116333,0.41140216588974]=>[-0.6075459348866321,0.27049761790496035] (2,-1; 2,-1), time: 2.1913s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_62, [-0.18269464373588562,0.6219481229782104]=>[-0.077258198168692,0.530514219722014] (2,-1; 2,-1), time: 2.2841s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_161, [-0.3297479748725891,0.8419322371482849]=>[-0.27532408686764365,0.6113646301590704] (2,-1; 2,-1), time: 2.3739s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_32, [-0.3431110978126526,0.5434619188308716]=>[-0.18249087858983712,0.44206369208916013] (2,-1; 2,-1), time: 2.6071s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_150, [-0.5099098086357117,0.11483576893806458]=>[-0.4300497604831469,0.05011851695251687] (2,-1; 2,-1), time: 2.7706s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_91, [-0.4166545867919922,0.357511043548584]=>[-0.2929539777168153,0.24859385932515102] (2,-1; 2,-1), time: 2.9136s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_101, [-0.5215083956718445,0.3200262188911438]=>[-0.3620370997794003,0.2627512539706609] (2,-1; 2,-1), time: 2.5426s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_133, [-0.44999951124191284,0.1607828140258789]=>[-0.31954799760647784,0.08627361496296101] (2,-1; 2,-1), time: 2.5428s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_174, [-0.704043984413147,0.2752034664154053]=>[-0.5068186525392443,0.20144856671607078] (2,-1; 2,-1), time: 2.7312s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_193, [-0.714129626750946,0.21007628738880157]=>[-0.5567689302524658,0.13146821135568262] (2,-1; 2,-1), time: 2.8608s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_136, [-0.543299674987793,0.3757929503917694]=>[-0.41895122043224475,0.2491431616187551] (2,-1; 2,-1), time: 1.7268s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_181, [-0.2524968981742859,0.584601640701294]=>[-0.08474515728791797,0.5081649558983751] (2,-1; 2,-1), time: 2.9208s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_130, [-0.5637903213500977,0.08131420612335205]=>[-0.5637903213500977,-1e-05] (-1,-1; 15,-1), time: 0.7162s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_56, [-0.7091379761695862,0.20049771666526794]=>[-0.6223592433930274,0.014394708135066821] (2,-1; 2,-1), time: 2.3332s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_188, [-0.4727379381656647,0.22696465253829956]=>[-0.31451361416704343,0.15554189190649] (2,-1; 2,-1), time: 3.6383s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_33, [-0.835480272769928,0.5045274496078491]=>[-0.6245571218494915,0.4051087091555786] (2,-1; 2,-1), time: 1.4783s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_17, [-0.48702120780944824,0.3753836750984192]=>[-0.37453741009211117,0.2545943193947406] (2,-1; 2,-1), time: 2.3975s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_38, [-0.8384822607040405,0.0886526107788086]=>[-0.8384822607040405,-1e-05] (-1,-1; 15,-1), time: 0.4069s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_61, [-0.8546063899993896,0.06278599798679352]=>[-0.6492720949017624,0.011737872303577198] (2,-1; 2,-1), time: 2.1646s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_9, [-0.5236671566963196,0.37018540501594543]=>[-0.3878239739325845,0.2757966573460841] (2,-1; 2,-1), time: 2.6876s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_81, [-0.33920884132385254,0.2958710193634033]=>[-0.28952827292383554,0.2305881800719856] (2,-1; 2,-1), time: 2.5502s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_190, [-0.3168810307979584,0.5403273105621338]=>[-0.27063450561442387,0.3082751826962498] (2,-1; 2,-1), time: 5.1800s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_199, [-1.0230095386505127,0.11011898517608643]=>[-1.0230095386505127,-1e-05] (-1,-1; 15,-1), time: 0.3334s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_8, [-0.43080687522888184,0.575771689414978]=>[-0.2712857078124159,0.5160941062743511] (2,-1; 2,-1), time: 1.8396s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_176, [-0.5201314091682434,0.15769444406032562]=>[-0.3871804551021355,0.08432093974805639] (2,-1; 2,-1), time: 1.7010s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_53, [-0.6106796860694885,0.20845672488212585]=>[-0.47246314537355005,0.11737449213885374] (2,-1; 2,-1), time: 2.3517s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_60, [-0.7067497968673706,0.14150233566761017]=>[-0.47218562500732214,0.09039904996611997] (2,-1; 2,-1), time: 3.7442s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_137, [-0.5188961625099182,0.19316652417182922]=>[-0.4115029364692691,0.07721032597773698] (2,-1; 2,-1), time: 2.6835s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_52, [-0.5894087553024292,0.08284352719783783]=>[-0.4197823465303148,0.04235303298565775] (2,-1; 2,-1), time: 4.4767s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_87, [-0.3067761957645416,1.1016572713851929]=>[-0.05318740594418697,0.9777206880406981] (2,-1; 2,-1), time: 2.9135s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_182, [-0.33936265110969543,0.8143064975738525]=>[-0.16749786295127925,0.6237899917393998] (2,-1; 2,-1), time: 3.3746s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_43, [-0.662380576133728,0.07391711324453354]=>[-0.5416559769502617,0.002862510783110478] (2,-1; 2,-1), time: 1.7725s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_86, [-0.6890468597412109,0.19026610255241394]=>[-0.6343099719901785,0.07155562905297577] (2,-1; 2,-1), time: 1.0587s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_172, [-0.4256644546985626,0.3509710729122162]=>[-0.31523209165196064,0.2168896269792639] (2,-1; 2,-1), time: 2.8933s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_128, [-0.22870472073554993,0.8916134238243103]=>[-0.08010289734187778,0.7157079730600742] (2,-1; 2,-1), time: 2.1032s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_108, [-0.5887365341186523,0.4865097999572754]=>[-0.5100534531861725,0.32445771485293295] (2,-1; 2,-1), time: 1.9883s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_92, [-0.7720299959182739,0.36073076725006104]=>[-0.6649594983962144,0.19479003958742436] (2,-1; 2,-1), time: 1.4519s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_102, [-0.6159684658050537,0.21238550543785095]=>[-0.5111470021894574,0.08818330077569866] (2,-1; 2,-1), time: 1.9756s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_145, [-0.36126673221588135,0.36813628673553467]=>[-0.247102493976236,0.29181880039105623] (2,-1; 2,-1), time: 2.7511s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_73, [-0.5257531404495239,0.4086899161338806]=>[-0.3984773634589788,0.30046355000874014] (2,-1; 2,-1), time: 1.7397s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_167, [-0.2779000401496887,0.6555138826370239]=>[-0.14004607255363385,0.534167079326537] (2,-1; 2,-1), time: 2.0534s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_164, [-0.5640397071838379,0.32240521907806396]=>[-0.3807167619511357,0.2398145252621925] (2,-1; 2,-1), time: 2.9376s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_13, [-0.21888621151447296,0.6496029496192932]=>[-0.049291077190410454,0.5516961707392357] (2,-1; 2,-1), time: 3.0552s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_97, [-0.5324184894561768,0.5753068923950195]=>[-0.44154460672007856,0.434948660699602] (2,-1; 2,-1), time: 1.8504s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_169, [-0.5269854664802551,0.46387356519699097]=>[-0.29445153024499404,0.3774930046351314] (2,-1; 2,-1), time: 3.5620s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_107, [-0.3148118555545807,0.6951162219047546]=>[-0.11716196685737419,0.6125973796654814] (2,-1; 2,-1), time: 2.2068s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_158, [-0.30469101667404175,0.6602544784545898]=>[-0.19704136778618186,0.49840386533037734] (2,-1; 2,-1), time: 2.2104s, #vars: 1235, #constrs: 475, improved: True
Solving MIP for lay4_71, [-0.573952853679657,0.3456672430038452]=>[-0.46352614706831546,0.18882425157869587] (2,-1; 2,-1), time: 2.8655s, #vars: 1235, #constrs: 475, improved: True
MIP improved 59 nodes out of 59 unstable nodes, lb improved 6.6179375648498535, ub improved 5.649197578430176, time 9.3417
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_166', 'lay6_102', 'lay6_123', 'lay6_41', 'lay6_195', 'lay6_60', 'lay6_155', 'lay6_92', 'lay6_144', 'lay6_16', 'lay6_61', 'lay6_27', 'lay6_186', 'lay6_169', 'lay6_70', 'lay6_148', 'lay6_170', 'lay6_20', 'lay6_179', 'lay6_110', 'lay6_197', 'lay6_141', 'lay6_74', 'lay6_79', 'lay6_101', 'lay6_90', 'lay6_31', 'lay6_109', 'lay6_85', 'lay6_71', 'lay6_68', 'lay6_93', 'lay6_118', 'lay6_172', 'lay6_12', 'lay6_107', 'lay6_121', 'lay6_130', 'lay6_10', 'lay6_104', 'lay6_185', 'lay6_67', 'lay6_5', 'lay6_78', 'lay6_17', 'lay6_138', 'lay6_99', 'lay6_132', 'lay6_8', 'lay6_39', 'lay6_73', 'lay6_96', 'lay6_22', 'lay6_49', 'lay6_161', 'lay6_28', 'lay6_94', 'lay6_15', 'lay6_120', 'lay6_139', 'lay6_156', 'lay6_174', 'lay6_89', 'lay6_65', 'lay6_190', 'lay6_154', 'lay6_0', 'lay6_53', 'lay6_72'] filter: 1.0
Solving MIP for lay6_41, [-1.0123250484466553,0.021770358085632324]=>[-1.0123250484466553,-1e-05] (-1,-1; 15,-1), time: 0.2698s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_148, [-0.9982168674468994,0.053772032260894775]=>[-0.9982168674468994,-1e-05] (-1,-1; 15,-1), time: 0.3855s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_195, [-0.09650731086730957,1.0904189348220825]=>[1e-05,1.0904189348220825] (15,-1; -1,-1), time: 0.4022s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_169, [-1.1402161121368408,0.0783437192440033]=>[-1.1402161121368408,-1e-05] (-1,-1; 15,-1), time: 0.4092s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_144, [-1.12970769405365,0.06793156266212463]=>[-1.12970769405365,-1e-05] (-1,-1; 15,-1), time: 0.4118s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_123, [-0.002035200595855713,1.4548324346542358]=>[1e-05,1.4548324346542358] (15,-1; -1,-1), time: 0.4169s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_141, [-1.070450782775879,0.06725136935710907]=>[-1.070450782775879,-1e-05] (-1,-1; 15,-1), time: 0.3380s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_60, [-0.10489434003829956,1.4246960878372192]=>[1e-05,1.4246960878372192] (15,-1; -1,-1), time: 0.7649s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_92, [-1.248678207397461,0.12650543451309204]=>[-1.248678207397461,-1e-05] (-1,-1; 15,-1), time: 0.7930s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_155, [-0.1366087794303894,1.3267751932144165]=>[1e-05,1.3267751932144165] (15,-1; -1,-1), time: 0.9855s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_170, [-0.9308802485466003,0.12748420238494873]=>[-0.9308802485466003,-1e-05] (-1,-1; 15,-1), time: 0.7410s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_110, [-0.9984923005104065,0.14853578805923462]=>[-0.9984923005104065,-1e-05] (-1,-1; 15,-1), time: 0.8381s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_27, [-0.22708764672279358,1.5240662097930908]=>[1e-05,1.5240662097930908] (15,-1; -1,-1), time: 1.3036s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_31, [-1.0216904878616333,0.08907103538513184]=>[-1.0216904878616333,-1e-05] (-1,-1; 15,-1), time: 0.4776s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_85, [-0.8678985834121704,0.1277444213628769]=>[-0.8678985834121704,-1e-05] (-1,-1; 15,-1), time: 0.6835s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_71, [-0.9941760301589966,0.13925433158874512]=>[-0.9941760301589966,-1e-05] (-1,-1; 15,-1), time: 0.5207s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_109, [-1.0586477518081665,0.14624446630477905]=>[-1.0586477518081665,-1e-05] (-1,-1; 15,-1), time: 0.8755s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_93, [-0.9083237648010254,0.023416906595230103]=>[-0.9083237648010254,-1e-05] (-1,-1; 15,-1), time: 0.2613s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_102, [-0.8772373199462891,0.14590080082416534]=>[-0.8772373199462891,-1e-05] (-1,-1; 15,-1), time: 5.5340s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_61, [-0.813103973865509,0.23176787793636322]=>[-0.813103973865509,-1e-05] (-1,-1; 15,-1), time: 6.4318s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_107, [-0.9891737103462219,0.10334441065788269]=>[-0.9891737103462219,-1e-05] (-1,-1; 15,-1), time: 0.7248s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_16, [-0.2594730854034424,0.9978294372558594]=>[1e-05,0.9978294372558594] (15,-1; -1,-1), time: 7.2611s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_70, [-0.9724312424659729,0.24983328580856323]=>[-0.9724312424659729,-1e-05] (-1,-1; 15,-1), time: 7.5930s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_79, [-0.7560406923294067,0.1886015087366104]=>[-0.7560406923294067,-1e-05] (-1,-1; 15,-1), time: 8.3256s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_68, [-0.8815627098083496,0.2018686980009079]=>[-0.8815627098083496,-1e-05] (-1,-1; 15,-1), time: 7.5636s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_104, [-0.9858406782150269,0.06802147626876831]=>[-0.9858406782150269,-1e-05] (-1,-1; 15,-1), time: 0.7153s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_166, [-0.2842690944671631,0.8097156882286072]=>[1e-05,0.8097156882286072] (15,-1; -1,-1), time: 10.8258s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_67, [-0.9940871000289917,0.18455111980438232]=>[-0.9940871000289917,-1e-05] (-1,-1; 15,-1), time: 1.2947s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_78, [-1.4634039402008057,0.05318272113800049]=>[-1.4634039402008057,-1e-05] (-1,-1; 15,-1), time: 0.3498s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_17, [-0.9786584377288818,0.10384103655815125]=>[-0.9786584377288818,-1e-05] (-1,-1; 15,-1), time: 0.3500s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_20, [-0.7253330945968628,0.22078119218349457]=>[-0.7253330945968628,-1e-05] (-1,-1; 15,-1), time: 11.8443s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_138, [-0.7641546726226807,0.13008448481559753]=>[-0.7641546726226807,-1e-05] (-1,-1; 15,-1), time: 6.4116s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_132, [-0.1308220624923706,0.968472421169281]=>[1e-05,0.968472421169281] (15,-1; -1,-1), time: 0.3563s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_74, [-0.5033960342407227,0.6099299192428589]=>[-0.1794596368096079,0.405941121368594] (9,-1; 2,-1), time: 20.1344s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_39, [-1.2723889350891113,0.14107424020767212]=>[-1.2723889350891113,-1e-05] (-1,-1; 15,-1), time: 0.7392s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_179, [-0.892292320728302,0.3033103346824646]=>[-0.5334350342704227,0.10455301503592437] (9,-1; 2,-1), time: 21.4543s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_96, [-1.0963685512542725,0.15762710571289062]=>[-1.0963685512542725,-1e-05] (-1,-1; 15,-1), time: 0.7697s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_90, [-0.580000638961792,0.5968494415283203]=>[-0.28399947800829634,0.2291007737037921] (9,-1; 2,-1), time: 23.9122s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_10, [-0.5969951748847961,1.1012630462646484]=>[-0.15351756472417302,0.7739517403787121] (9,-1; 2,-1), time: 19.2279s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_101, [-0.35882288217544556,0.9020136594772339]=>[-0.007695876537640117,0.5920595234756854] (9,-1; 2,-1), time: 26.3383s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_8, [-1.0111329555511475,0.32968807220458984]=>[-1.0111329555511475,-1e-05] (-1,-1; 15,-1), time: 8.7262s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_73, [-0.8671623468399048,0.1730368733406067]=>[-0.8671623468399048,-1e-05] (-1,-1; 15,-1), time: 5.9685s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_186, [-0.4602201581001282,0.4096880853176117]=>[-0.19019178054421762,0.21151925605789168] (9,-1; 2,-1), time: 27.9237s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_49, [-0.7796467542648315,0.15278688073158264]=>[-0.7796467542648315,-1e-05] (-1,-1; 15,-1), time: 3.0196s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_12, [-0.6491649746894836,0.5349146127700806]=>[-0.27375511008658315,0.3038468271690382] (9,-1; 2,-1), time: 22.6911s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_120, [-1.0353498458862305,0.16249042749404907]=>[-1.0353498458862305,-1e-05] (-1,-1; 15,-1), time: 0.7741s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_118, [-0.9421048760414124,0.2839192748069763]=>[-0.5475260608174853,0.07528942552051174] (9,-1; 2,-1), time: 26.7485s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_172, [-0.8203713893890381,0.34986406564712524]=>[-0.48881827346683804,0.02692337608698409] (2,-1; 9,-1), time: 27.9617s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_197, [-0.3025237023830414,0.4486292600631714]=>[-0.07254147981953116,0.22693804234065962] (9,-1; 9,-1), time: 30.0147s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_185, [-0.49166110157966614,0.7938122749328613]=>[-0.16162765173347413,0.4962551733544274] (9,-1; 2,-1), time: 21.7333s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_99, [-0.9094629287719727,0.37998318672180176]=>[-0.4821140001013206,0.11725688905406972] (2,-1; 2,-1), time: 19.5643s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_89, [-1.1915777921676636,0.2518405020236969]=>[-1.1915777921676636,-1e-05] (-1,-1; 15,-1), time: 3.8839s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_139, [-1.7898592948913574,0.6433227062225342]=>[-1.7898592948913574,-1e-05] (-1,-1; 15,-1), time: 5.4355s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_5, [-0.46769601106643677,0.8108212947845459]=>[-0.13095314897901353,0.5316192307582583] (9,-1; 2,-1), time: 23.0924s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_121, [-0.3337412476539612,0.826573371887207]=>[-0.049078013965579384,0.5238083570013071] (2,-1; 9,-1), time: 26.8816s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_130, [-0.6891237497329712,0.523856520652771]=>[-0.3650531773214886,0.2560817228788589] (9,-1; 9,-1), time: 30.0242s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_22, [-0.7765026688575745,0.4713916778564453]=>[-0.5335025248125438,0.11539422935333264] (2,-1; 2,-1), time: 17.3286s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_53, [-0.7162381410598755,0.5415113568305969]=>[-0.4593974664000687,0.23883522352496633] (2,-1; 2,-1), time: 9.6744s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_190, [-0.7690584659576416,0.8782603740692139]=>[-0.41688499696166165,0.4736716003079542] (2,-1; 2,-1), time: 12.4454s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_65, [-0.5266953706741333,0.4387000799179077]=>[-0.28077231919110934,0.18614310489597957] (2,-1; 2,-1), time: 14.2695s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_0, [-0.8517698645591736,0.46776825189590454]=>[-0.5475869484323566,0.13425935852507223] (2,-1; 2,-1), time: 14.1792s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_156, [-0.6934343576431274,0.37129056453704834]=>[-0.3337669830525588,0.10287044795067027] (2,-1; 2,-1), time: 19.6106s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_94, [-0.7605258226394653,0.47710907459259033]=>[-0.42511035138114023,0.1553837078206511] (2,-1; 2,-1), time: 22.0699s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_72, [-0.8272608518600464,0.6188871264457703]=>[-0.4145969093891644,0.3509618160179684] (2,-1; 2,-1), time: 18.4908s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_154, [-0.8813919425010681,0.5150241851806641]=>[-0.5952188733398028,0.09663141335491233] (2,-1; 9,-1), time: 20.9071s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_161, [-0.7614560723304749,0.35349130630493164]=>[-0.3801081949409887,0.05932173297273979] (2,-1; 9,-1), time: 25.6311s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_28, [-0.6733773946762085,0.33965447545051575]=>[-0.27858019811174906,0.1241149662287262] (2,-1; 2,-1), time: 26.5879s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_15, [-0.43496280908584595,0.5735975503921509]=>[-0.1332736257061823,0.29007638163560145] (9,-1; 2,-1), time: 28.3580s, #vars: 1529, #constrs: 816, improved: True
Solving MIP for lay6_174, [-0.5168015360832214,0.4608820974826813]=>[-0.22882371956679154,0.18804447324246387] (9,-1; 9,-1), time: 30.0052s, #vars: 1529, #constrs: 816, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
best_l after optimization: 1906.322021484375 with beta sum per layer: []
optimal alpha/beta time: 18.377503633499146
alpha-CROWN with intermediate bounds by MIP: tensor([[-154.4388, -212.7310, -246.3072, -265.4046, -226.3752, -227.9171,
         -249.9333, -148.8675, -174.3472]], device='cuda:0',
       grad_fn=<AsStridedBackward0>) None
MIP improved 69 nodes out of 69 unstable nodes, lb improved 10.481441497802734, ub improved 13.10344409942627, time 59.7823
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_9', 'lay8_77', 'lay8_63', 'lay8_51', 'lay8_130', 'lay8_72', 'lay8_56', 'lay8_132', 'lay8_71', 'lay8_54', 'lay8_100', 'lay8_157', 'lay8_75', 'lay8_105', 'lay8_99', 'lay8_162', 'lay8_180', 'lay8_139', 'lay8_8', 'lay8_25', 'lay8_115', 'lay8_57', 'lay8_112', 'lay8_10', 'lay8_120', 'lay8_161', 'lay8_3', 'lay8_27', 'lay8_44', 'lay8_169', 'lay8_158', 'lay8_123', 'lay8_192', 'lay8_170', 'lay8_83', 'lay8_101', 'lay8_52', 'lay8_141', 'lay8_166', 'lay8_102', 'lay8_184', 'lay8_129', 'lay8_179', 'lay8_193', 'lay8_187', 'lay8_41', 'lay8_124', 'lay8_20', 'lay8_4', 'lay8_78', 'lay8_14', 'lay8_131', 'lay8_43', 'lay8_126', 'lay8_189', 'lay8_80', 'lay8_65', 'lay8_199', 'lay8_194', 'lay8_91', 'lay8_85', 'lay8_73', 'lay8_39', 'lay8_196', 'lay8_106', 'lay8_127', 'lay8_88', 'lay8_6', 'lay8_95', 'lay8_154', 'lay8_11', 'lay8_62', 'lay8_107', 'lay8_136', 'lay8_190', 'lay8_103', 'lay8_29', 'lay8_70', 'lay8_22', 'lay8_31', 'lay8_163', 'lay8_40', 'lay8_121', 'lay8_48', 'lay8_84', 'lay8_186', 'lay8_53', 'lay8_98', 'lay8_117', 'lay8_23', 'lay8_147', 'lay8_87', 'lay8_114', 'lay8_174', 'lay8_69', 'lay8_81', 'lay8_137', 'lay8_21', 'lay8_181', 'lay8_144', 'lay8_150', 'lay8_19', 'lay8_159', 'lay8_119', 'lay8_176', 'lay8_45', 'lay8_197', 'lay8_35', 'lay8_1', 'lay8_155', 'lay8_118', 'lay8_46', 'lay8_82', 'lay8_12', 'lay8_173', 'lay8_160', 'lay8_185', 'lay8_149', 'lay8_61', 'lay8_92', 'lay8_89', 'lay8_90', 'lay8_79', 'lay8_167', 'lay8_33', 'lay8_18'] filter: 1.0
Solving MIP for lay8_51, [-0.24296322464942932,1.4296629428863525]=>[1e-05,1.4296629428863525] (15,-1; -1,-1), time: 0.3363s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_100, [-0.0289270281791687,1.7642228603363037]=>[1e-05,1.7642228603363037] (15,-1; -1,-1), time: 0.3738s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_75, [-0.09070396423339844,1.318269968032837]=>[1e-05,1.318269968032837] (15,-1; -1,-1), time: 0.4638s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_157, [-0.14736956357955933,1.7660536766052246]=>[1e-05,1.7660536766052246] (15,-1; -1,-1), time: 0.5035s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_130, [-1.4845558404922485,0.001876533031463623]=>[-1.4845558404922485,-1e-05] (-1,-1; 15,-1), time: 0.5069s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_63, [-1.6979165077209473,0.029471516609191895]=>[-1.6979165077209473,-1e-05] (-1,-1; 15,-1), time: 0.5081s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_56, [-0.013947725296020508,1.6126153469085693]=>[1e-05,1.6126153469085693] (15,-1; -1,-1), time: 0.5083s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_99, [-0.35953107476234436,1.3799569606781006]=>[1e-05,1.3799569606781006] (15,-1; -1,-1), time: 0.5075s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_72, [-1.3793511390686035,0.07791179418563843]=>[-1.3793511390686035,-1e-05] (-1,-1; 15,-1), time: 0.5154s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_77, [-1.4695699214935303,0.21149718761444092]=>[-1.4695699214935303,-1e-05] (-1,-1; 15,-1), time: 0.5240s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_132, [-1.4982072114944458,0.019900202751159668]=>[-1.4982072114944458,-1e-05] (-1,-1; 15,-1), time: 0.5238s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_54, [-1.4030125141143799,0.18305125832557678]=>[-1.4030125141143799,-1e-05] (-1,-1; 15,-1), time: 0.5253s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_139, [-1.472794771194458,0.3229798376560211]=>[-1.472794771194458,-1e-05] (-1,-1; 15,-1), time: 0.3254s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_8, [-1.2979234457015991,0.1293826699256897]=>[-1.2979234457015991,-1e-05] (-1,-1; 15,-1), time: 0.4276s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_162, [-0.2966000735759735,1.9193356037139893]=>[1e-05,1.9193356037139893] (15,-1; -1,-1), time: 0.9035s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_3, [-0.2153969407081604,1.1387825012207031]=>[1e-05,1.1387825012207031] (15,-1; -1,-1), time: 0.4286s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_115, [-1.1054506301879883,0.34761446714401245]=>[-1.1054506301879883,-1e-05] (-1,-1; 15,-1), time: 0.4734s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_120, [-1.180649995803833,0.22310888767242432]=>[-1.180649995803833,-1e-05] (-1,-1; 15,-1), time: 0.4790s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_44, [-1.2959554195404053,0.1575579047203064]=>[-1.2959554195404053,-1e-05] (-1,-1; 15,-1), time: 0.3205s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_57, [-1.2083499431610107,0.31705552339553833]=>[-1.2083499431610107,-1e-05] (-1,-1; 15,-1), time: 0.9692s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_158, [-0.40384823083877563,1.4699466228485107]=>[1e-05,1.4699466228485107] (15,-1; -1,-1), time: 0.8961s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_52, [-0.45532459020614624,1.4593294858932495]=>[1e-05,1.4593294858932495] (15,-1; -1,-1), time: 0.4609s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_10, [-1.0418697595596313,0.3545180559158325]=>[-1.0418697595596313,-1e-05] (-1,-1; 15,-1), time: 5.8447s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_161, [-0.8710017204284668,0.27421557903289795]=>[-0.8710017204284668,-1e-05] (-1,-1; 15,-1), time: 6.8029s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_25, [-1.5582165718078613,0.51270991563797]=>[-1.5582165718078613,-1e-05] (-1,-1; 15,-1), time: 6.8635s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_71, [-1.2558788061141968,0.393024206161499]=>[-1.2558788061141968,-1e-05] (-1,-1; 15,-1), time: 8.2945s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_27, [-0.9501588344573975,0.4181910753250122]=>[-0.9501588344573975,-1e-05] (-1,-1; 15,-1), time: 8.1381s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_169, [-0.9047208428382874,0.36111849546432495]=>[-0.9047208428382874,-1e-05] (-1,-1; 15,-1), time: 7.8784s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_179, [-0.2208312749862671,1.7669727802276611]=>[1e-05,1.7669727802276611] (15,-1; -1,-1), time: 0.3263s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_193, [-1.6288478374481201,0.0335429310798645]=>[-1.6288478374481201,-1e-05] (-1,-1; 15,-1), time: 0.4528s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_187, [-1.4484944343566895,0.14899057149887085]=>[-1.4484944343566895,-1e-05] (-1,-1; 15,-1), time: 0.3081s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_192, [-0.5626864433288574,1.0522125959396362]=>[1e-05,1.0522125959396362] (15,-1; -1,-1), time: 8.4321s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_124, [-1.078046441078186,0.3154132664203644]=>[-1.078046441078186,-1e-05] (-1,-1; 15,-1), time: 0.3156s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_180, [-0.8563400506973267,0.3636038601398468]=>[-0.8563400506973267,-1e-05] (-1,-1; 15,-1), time: 10.5005s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_41, [-0.4559517502784729,0.8881662487983704]=>[1e-05,0.8881662487983704] (15,-1; -1,-1), time: 2.6269s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_14, [-1.186349630355835,0.016853749752044678]=>[-1.186349630355835,-1e-05] (-1,-1; 15,-1), time: 0.4497s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_102, [-1.0796219110488892,0.35335418581962585]=>[-1.0796219110488892,-1e-05] (-1,-1; 15,-1), time: 5.2482s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_43, [-1.2064918279647827,0.05186265707015991]=>[-1.2064918279647827,-1e-05] (-1,-1; 15,-1), time: 0.3062s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_129, [-0.6494030952453613,0.9736894369125366]=>[1e-05,0.9736894369125366] (15,-1; -1,-1), time: 10.6054s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_105, [-0.9219342470169067,0.975635826587677]=>[-0.39062426539638984,0.42061225011713305] (2,-1; 9,-1), time: 28.1268s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_80, [-1.3441566228866577,0.2488630712032318]=>[-1.3441566228866577,-1e-05] (-1,-1; 15,-1), time: 0.3107s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_65, [-1.079814076423645,0.2474888563156128]=>[-1.079814076423645,-1e-05] (-1,-1; 15,-1), time: 0.3185s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_189, [-0.4594675302505493,1.419978380203247]=>[1e-05,1.419978380203247] (15,-1; -1,-1), time: 10.2183s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_9, [-1.0747628211975098,0.4560841917991638]=>[-0.47225180116781856,0.04434788385533644] (9,-1; 9,-1), time: 30.0179s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_194, [-1.5187997817993164,0.3129597306251526]=>[-1.5187997817993164,-1e-05] (-1,-1; 15,-1), time: 0.8234s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_91, [-1.7148144245147705,0.009135067462921143]=>[-1.7148144245147705,-1e-05] (-1,-1; 15,-1), time: 0.4409s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_112, [-1.0089510679244995,0.33325862884521484]=>[-0.4430901816202559,0.030760196496421116] (9,-1; 9,-1), time: 30.0180s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_39, [-1.4694926738739014,0.2490997314453125]=>[-1.4694926738739014,-1e-05] (-1,-1; 15,-1), time: 0.3178s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_85, [-0.3298143148422241,0.8011967539787292]=>[1e-05,0.8011967539787292] (15,-1; -1,-1), time: 0.8413s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_73, [-1.4396268129348755,0.0828557014465332]=>[-1.4396268129348755,-1e-05] (-1,-1; 15,-1), time: 0.4444s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_123, [-0.9625478386878967,0.43640100955963135]=>[-0.4331637998393896,0.04966351936528144] (9,-1; 9,-1), time: 30.0183s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_83, [-0.9394239187240601,0.7687665224075317]=>[-0.4017994837215378,0.24638302693249503] (9,-1; 9,-1), time: 30.0120s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_170, [-0.6620063185691833,0.7428471446037292]=>[-0.16332467703030254,0.379172165818013] (9,-1; 9,-1), time: 30.0545s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_196, [-0.09461653232574463,2.040320873260498]=>[1e-05,2.040320873260498] (15,-1; -1,-1), time: 0.3242s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_101, [-0.6188113689422607,0.6553946137428284]=>[-0.16221782124645245,0.29296734008529274] (9,-1; 9,-1), time: 30.0943s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_11, [-1.332384467124939,0.13223221898078918]=>[-1.332384467124939,-1e-05] (-1,-1; 15,-1), time: 0.3227s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_95, [-0.9737557768821716,0.218397855758667]=>[-0.9737557768821716,-1e-05] (-1,-1; 15,-1), time: 0.8529s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_107, [-1.4889743328094482,0.00488203763961792]=>[-1.4889743328094482,-1e-05] (-1,-1; 15,-1), time: 0.4605s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_141, [-0.7348935604095459,0.5944527983665466]=>[-0.1535902508532105,0.2523701783254158] (9,-1; 9,-1), time: 30.1979s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_136, [-1.10281240940094,0.13436584174633026]=>[-1.10281240940094,-1e-05] (-1,-1; 15,-1), time: 0.4544s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_190, [-1.1691203117370605,0.19910964369773865]=>[-1.1691203117370605,-1e-05] (-1,-1; 15,-1), time: 0.4472s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_103, [-1.0806738138198853,0.08655676245689392]=>[-1.0806738138198853,-1e-05] (-1,-1; 15,-1), time: 0.4644s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_20, [-1.3096044063568115,0.7011721730232239]=>[-0.5737516059563168,0.16590565678069522] (2,-1; 2,-1), time: 25.7468s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_166, [-0.7389132976531982,0.8781594634056091]=>[-0.19978089097880988,0.4040019561014116] (9,-1; 9,-1), time: 30.0057s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_6, [-0.5277542471885681,1.11376953125]=>[1e-05,1.11376953125] (15,-1; -1,-1), time: 5.7039s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_184, [-1.1657726764678955,0.6808907985687256]=>[-0.444213203535607,0.21143506962507905] (9,-1; 9,-1), time: 30.1693s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_4, [-0.6358349323272705,0.7067019939422607]=>[-0.21419902195923385,0.2509104614490343] (9,-1; 9,-1), time: 30.0278s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_121, [-1.1256052255630493,0.19759458303451538]=>[-1.1256052255630493,-1e-05] (-1,-1; 15,-1), time: 0.3220s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_62, [-0.831828773021698,0.3193507790565491]=>[-0.831828773021698,-1e-05] (-1,-1; 15,-1), time: 8.2446s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_78, [-0.88820481300354,0.477912962436676]=>[-0.4311125646091133,0.05733845113790288] (9,-1; 9,-1), time: 30.0196s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_186, [-1.4344909191131592,0.004619896411895752]=>[-1.4344909191131592,-1e-05] (-1,-1; 15,-1), time: 0.4454s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_131, [-0.8952789306640625,0.4977993071079254]=>[-0.3897625774404972,0.08834461933165905] (9,-1; 9,-1), time: 30.0583s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_126, [-0.6115317344665527,0.8703405261039734]=>[-0.08859004325190521,0.47978968831789487] (9,-1; 9,-1), time: 30.0206s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_48, [-0.9942022562026978,0.3731996417045593]=>[-0.9942022562026978,-1e-05] (-1,-1; 15,-1), time: 7.7627s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_23, [-1.7610688209533691,0.05348634719848633]=>[-1.7610688209533691,-1e-05] (-1,-1; 15,-1), time: 0.3169s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_147, [-1.103583812713623,0.05896899104118347]=>[-1.103583812713623,-1e-05] (-1,-1; 15,-1), time: 0.3275s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_117, [-0.770597517490387,0.5465345978736877]=>[-0.770597517490387,-1e-05] (-1,-1; 15,-1), time: 7.5823s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_199, [-1.213107943534851,0.55479896068573]=>[-0.6957365338231043,0.0748986126779574] (2,-1; 9,-1), time: 21.7759s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_174, [-1.2466511726379395,0.30360692739486694]=>[-1.2466511726379395,-1e-05] (-1,-1; 15,-1), time: 0.3191s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_98, [-0.8364887237548828,0.45649075508117676]=>[-0.8364887237548828,-1e-05] (-1,-1; 15,-1), time: 8.4642s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_114, [-1.4178688526153564,0.4443874955177307]=>[-1.4178688526153564,-1e-05] (-1,-1; 15,-1), time: 0.5930s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_69, [-0.27753984928131104,0.9442222118377686]=>[1e-05,0.9442222118377686] (15,-1; -1,-1), time: 0.3122s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_81, [-1.1117513179779053,0.11776405572891235]=>[-1.1117513179779053,-1e-05] (-1,-1; 15,-1), time: 0.4679s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_137, [-1.0617733001708984,0.08923479914665222]=>[-1.0617733001708984,-1e-05] (-1,-1; 15,-1), time: 0.3093s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_21, [-0.9656619429588318,0.3083740472793579]=>[-0.9656619429588318,-1e-05] (-1,-1; 15,-1), time: 0.3070s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_181, [-1.1521135568618774,0.27445030212402344]=>[-1.1521135568618774,-1e-05] (-1,-1; 15,-1), time: 0.4274s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_19, [-1.1740808486938477,0.35905206203460693]=>[-1.1740808486938477,-1e-05] (-1,-1; 15,-1), time: 0.8532s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_87, [-1.1174640655517578,0.2986733913421631]=>[-1.1174640655517578,-1e-05] (-1,-1; 15,-1), time: 4.8435s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_119, [-1.2880234718322754,0.15497052669525146]=>[-1.2880234718322754,-1e-05] (-1,-1; 15,-1), time: 0.2972s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_176, [-0.20373320579528809,1.6491786241531372]=>[1e-05,1.6491786241531372] (15,-1; -1,-1), time: 0.3007s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_45, [-1.4948606491088867,0.09467649459838867]=>[-1.4948606491088867,-1e-05] (-1,-1; 15,-1), time: 0.3029s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_197, [-1.3930869102478027,0.08337149024009705]=>[-1.3930869102478027,-1e-05] (-1,-1; 15,-1), time: 0.3122s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_35, [-0.49441492557525635,1.123611330986023]=>[1e-05,1.123611330986023] (15,-1; -1,-1), time: 0.6244s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_1, [-1.2319036722183228,0.25397300720214844]=>[-1.2319036722183228,-1e-05] (-1,-1; 15,-1), time: 0.3050s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_163, [-0.5551894307136536,0.7439912557601929]=>[-0.09888153892502047,0.42907731654462294] (9,-1; 2,-1), time: 22.6785s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_118, [-1.2568016052246094,0.17442262172698975]=>[-1.2568016052246094,-1e-05] (-1,-1; 15,-1), time: 0.3054s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_46, [-1.5941686630249023,0.003955096006393433]=>[-1.5941686630249023,-1e-05] (-1,-1; 15,-1), time: 0.3066s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_82, [-1.5358850955963135,0.24127721786499023]=>[-1.5358850955963135,-1e-05] (-1,-1; 15,-1), time: 0.3119s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_12, [-0.2969299554824829,1.4262661933898926]=>[1e-05,1.4262661933898926] (15,-1; -1,-1), time: 0.3134s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_106, [-0.5264273285865784,0.5713067054748535]=>[-0.13291946107186675,0.18427933987971973] (9,-1; 9,-1), time: 30.0473s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_88, [-0.9287112951278687,0.3643690347671509]=>[-0.3988954971847157,0.022442915479699708] (9,-1; 9,-1), time: 30.0291s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_155, [-1.9875938892364502,0.6368123292922974]=>[-1.9875938892364502,-1e-05] (-1,-1; 15,-1), time: 5.6897s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_154, [-0.8139328360557556,0.6593123078346252]=>[-0.25354003884263354,0.3081740678779214] (9,-1; 9,-1), time: 30.0112s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_173, [-1.3347338438034058,0.3556079864501953]=>[-1.3347338438034058,-1e-05] (-1,-1; 15,-1), time: 0.5930s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_127, [-0.9397381544113159,0.3785228133201599]=>[-0.3903346001766041,0.0020864091052862476] (9,-1; 9,-1), time: 30.3775s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_160, [-1.0187381505966187,0.11082679033279419]=>[-1.0187381505966187,-1e-05] (-1,-1; 15,-1), time: 0.4441s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_185, [-1.109351634979248,0.26557910442352295]=>[-1.109351634979248,-1e-05] (-1,-1; 15,-1), time: 0.4420s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_61, [-1.3253988027572632,0.2623613476753235]=>[-1.3253988027572632,-1e-05] (-1,-1; 15,-1), time: 0.3176s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_92, [-1.6217180490493774,0.19371122121810913]=>[-1.6217180490493774,-1e-05] (-1,-1; 15,-1), time: 0.3070s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_29, [-0.89264315366745,0.6036155819892883]=>[-0.4747524962483762,0.09926867699681938] (9,-1; 9,-1), time: 30.0058s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_70, [-0.8167276978492737,0.5455895662307739]=>[-0.34592434307982556,0.13005446770046866] (9,-1; 9,-1), time: 30.0266s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_18, [-1.281572699546814,0.42468351125717163]=>[-1.281572699546814,-1e-05] (-1,-1; 15,-1), time: 0.8715s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_22, [-0.5985857844352722,0.5765701532363892]=>[-0.2857161906024004,0.13713811910527304] (9,-1; 9,-1), time: 30.0205s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_31, [-0.7423601746559143,0.8293129205703735]=>[-0.20190181958741546,0.41474917587408355] (9,-1; 9,-1), time: 30.0083s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_79, [-0.8109380006790161,0.30421876907348633]=>[-0.8109380006790161,-1e-05] (-1,-1; 15,-1), time: 5.6611s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_40, [-0.8796927332878113,0.6231198906898499]=>[-0.2615827533587186,0.2356169951578335] (9,-1; 9,-1), time: 30.0269s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_84, [-0.5194816589355469,0.7685010433197021]=>[-0.1433507802278067,0.3114396228204786] (9,-1; 9,-1), time: 30.0121s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_53, [-0.7427952289581299,0.8379312753677368]=>[-0.2916567327759416,0.288219730899277] (9,-1; 9,-1), time: 30.0966s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_144, [-0.6392098665237427,0.3692111074924469]=>[-0.2136406947386792,0.0892321982492495] (9,-1; 9,-1), time: 30.0677s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_150, [-0.9557147026062012,0.43203380703926086]=>[-0.4346038429694161,0.016588980650767242] (9,-1; 9,-1), time: 30.0157s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_167, [-1.4550977945327759,0.7939631938934326]=>[-0.7215054468218525,0.27097608625208] (9,-1; 2,-1), time: 20.6251s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_159, [-0.683777928352356,0.5244612693786621]=>[-0.24178621360775757,0.16283009561660367] (9,-1; 9,-1), time: 30.1235s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_149, [-0.7933359742164612,1.0433969497680664]=>[-0.41040932296314203,0.32544529203745365] (9,-1; 9,-1), time: 30.0190s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_89, [-1.1504504680633545,0.5703942775726318]=>[-0.5192500859830749,0.06767165990667912] (9,-1; 9,-1), time: 30.0189s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_90, [-0.7028954029083252,0.8479782342910767]=>[-0.264813439057669,0.3363390507973853] (9,-1; 9,-1), time: 30.0185s, #vars: 1785, #constrs: 1100, improved: True
Solving MIP for lay8_33, [-0.6363860368728638,0.723632276058197]=>[-0.1627941428718224,0.3044204058266458] (9,-1; 9,-1), time: 30.1242s, #vars: 1785, #constrs: 1100, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
best_l after optimization: 450.0135803222656 with beta sum per layer: []
optimal alpha/beta time: 22.37998366355896
alpha-CROWN with intermediate bounds by MIP: tensor([[-36.8619, -48.8938, -57.7296, -62.3162, -52.8609, -54.2385, -58.0459,
         -36.6455, -42.4213]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 126 nodes out of 126 unstable nodes, lb improved 25.277244567871094, ub improved 30.864543914794922, time 92.4740
maximum relu layer improved by MIP so far 3
Linear(in_features=200, out_features=200, bias=True) 4 10 torch.Size([200])
sorted candidates ['lay10_191', 'lay10_127', 'lay10_150', 'lay10_80', 'lay10_184', 'lay10_126', 'lay10_155', 'lay10_60', 'lay10_93', 'lay10_109', 'lay10_106', 'lay10_66', 'lay10_78', 'lay10_41', 'lay10_157', 'lay10_28', 'lay10_179', 'lay10_104', 'lay10_22', 'lay10_108', 'lay10_17', 'lay10_140', 'lay10_84', 'lay10_182', 'lay10_79', 'lay10_67', 'lay10_139', 'lay10_121', 'lay10_133', 'lay10_170', 'lay10_42', 'lay10_16', 'lay10_87', 'lay10_116', 'lay10_94', 'lay10_156', 'lay10_58', 'lay10_89', 'lay10_175', 'lay10_95', 'lay10_70', 'lay10_169', 'lay10_65', 'lay10_188', 'lay10_64', 'lay10_25', 'lay10_195', 'lay10_4', 'lay10_10', 'lay10_88', 'lay10_59', 'lay10_132', 'lay10_148', 'lay10_51', 'lay10_134', 'lay10_119', 'lay10_6', 'lay10_177', 'lay10_137', 'lay10_55', 'lay10_3', 'lay10_107', 'lay10_37', 'lay10_160', 'lay10_23', 'lay10_178', 'lay10_102', 'lay10_174', 'lay10_68', 'lay10_180', 'lay10_90', 'lay10_21', 'lay10_12', 'lay10_33', 'lay10_77', 'lay10_152', 'lay10_158', 'lay10_100', 'lay10_141', 'lay10_49', 'lay10_63', 'lay10_35', 'lay10_198', 'lay10_146', 'lay10_117', 'lay10_176', 'lay10_32', 'lay10_185', 'lay10_61', 'lay10_18', 'lay10_114', 'lay10_145', 'lay10_131', 'lay10_165', 'lay10_74', 'lay10_40', 'lay10_118', 'lay10_92', 'lay10_26', 'lay10_113', 'lay10_120', 'lay10_151', 'lay10_1', 'lay10_186', 'lay10_172', 'lay10_34', 'lay10_14', 'lay10_111', 'lay10_27', 'lay10_135', 'lay10_181', 'lay10_47', 'lay10_98', 'lay10_7', 'lay10_136', 'lay10_13', 'lay10_29', 'lay10_99', 'lay10_54', 'lay10_69', 'lay10_190', 'lay10_122', 'lay10_147', 'lay10_196', 'lay10_48', 'lay10_103', 'lay10_128', 'lay10_187', 'lay10_44', 'lay10_193', 'lay10_142', 'lay10_38', 'lay10_192', 'lay10_194', 'lay10_105', 'lay10_71', 'lay10_197', 'lay10_162', 'lay10_130', 'lay10_143', 'lay10_173', 'lay10_166', 'lay10_124', 'lay10_171', 'lay10_81', 'lay10_2', 'lay10_161', 'lay10_45', 'lay10_53', 'lay10_75', 'lay10_62', 'lay10_5', 'lay10_189', 'lay10_164', 'lay10_83', 'lay10_149', 'lay10_30', 'lay10_24', 'lay10_96', 'lay10_168', 'lay10_110', 'lay10_154', 'lay10_163', 'lay10_31', 'lay10_50', 'lay10_199', 'lay10_57', 'lay10_8', 'lay10_46', 'lay10_36', 'lay10_73', 'lay10_9', 'lay10_97', 'lay10_43', 'lay10_101', 'lay10_76', 'lay10_125', 'lay10_20', 'lay10_138', 'lay10_19', 'lay10_112', 'lay10_15', 'lay10_129', 'lay10_115', 'lay10_52', 'lay10_82', 'lay10_123', 'lay10_72', 'lay10_56', 'lay10_91', 'lay10_85', 'lay10_0', 'lay10_153', 'lay10_11', 'lay10_86', 'lay10_167', 'lay10_183', 'lay10_144', 'lay10_39'] filter: 1.0
Solving MIP for lay10_80, [-2.129652500152588,0.5158430933952332]=>[-2.129652500152588,-1e-05] (-1,-1; 15,-1), time: 0.5850s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_66, [-2.799038887023926,0.17869281768798828]=>[-2.799038887023926,-1e-05] (-1,-1; 15,-1), time: 0.5851s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_184, [-2.4164676666259766,0.4609728455543518]=>[-2.4164676666259766,-1e-05] (-1,-1; 15,-1), time: 0.5951s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_150, [-2.242812395095825,0.47410309314727783]=>[-2.242812395095825,-1e-05] (-1,-1; 15,-1), time: 0.5959s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_155, [-1.8343793153762817,0.715563178062439]=>[-1.8343793153762817,-1e-05] (-1,-1; 15,-1), time: 0.6002s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_106, [-2.8307266235351562,0.17000770568847656]=>[-2.8307266235351562,-1e-05] (-1,-1; 15,-1), time: 0.6011s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_41, [-1.7581743001937866,0.49116623401641846]=>[-1.7581743001937866,-1e-05] (-1,-1; 15,-1), time: 0.6010s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_78, [-2.2456531524658203,0.5379286408424377]=>[-2.2456531524658203,-1e-05] (-1,-1; 15,-1), time: 0.6025s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_127, [-0.005060076713562012,2.997443914413452]=>[1e-05,2.997443914413452] (15,-1; -1,-1), time: 0.6100s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_182, [-0.8792197704315186,1.7445931434631348]=>[1e-05,1.7445931434631348] (15,-1; -1,-1), time: 0.5480s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_140, [-2.2152814865112305,0.3615652322769165]=>[-2.2152814865112305,-1e-05] (-1,-1; 15,-1), time: 0.5631s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_22, [-2.3038158416748047,0.34440213441848755]=>[-2.3038158416748047,-1e-05] (-1,-1; 15,-1), time: 0.5796s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_84, [-1.0730584859848022,2.254241943359375]=>[1e-05,2.254241943359375] (15,-1; -1,-1), time: 0.5786s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_104, [-2.1321306228637695,0.5087369084358215]=>[-2.1321306228637695,-1e-05] (-1,-1; 15,-1), time: 0.5944s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_17, [-1.7430202960968018,1.0416756868362427]=>[-1.7430202960968018,-1e-05] (-1,-1; 15,-1), time: 0.5987s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_179, [-1.5986971855163574,0.8058861494064331]=>[-1.5986971855163574,-1e-05] (-1,-1; 15,-1), time: 1.0342s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_108, [-1.2500704526901245,0.7135461568832397]=>[-1.2500704526901245,-1e-05] (-1,-1; 15,-1), time: 1.1021s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_67, [-1.9377191066741943,0.5785532593727112]=>[-1.9377191066741943,-1e-05] (-1,-1; 15,-1), time: 0.5402s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_42, [-0.4816131591796875,2.4532623291015625]=>[1e-05,2.4532623291015625] (15,-1; -1,-1), time: 0.5539s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_121, [-2.150479793548584,0.6527255773544312]=>[-2.150479793548584,-1e-05] (-1,-1; 15,-1), time: 0.5951s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_170, [-2.0548651218414307,0.8846434354782104]=>[-2.0548651218414307,-1e-05] (-1,-1; 15,-1), time: 0.5904s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_133, [-1.9778103828430176,0.5354247689247131]=>[-1.9778103828430176,-1e-05] (-1,-1; 15,-1), time: 0.5958s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_16, [-2.857282876968384,0.12279069423675537]=>[-2.857282876968384,-1e-05] (-1,-1; 15,-1), time: 0.5485s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_116, [-1.5122690200805664,0.843241810798645]=>[-1.5122690200805664,-1e-05] (-1,-1; 15,-1), time: 0.5817s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_94, [-2.5999505519866943,0.21858227252960205]=>[-2.5999505519866943,-1e-05] (-1,-1; 15,-1), time: 0.6089s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_89, [-1.83110511302948,0.6550424098968506]=>[-1.83110511302948,-1e-05] (-1,-1; 15,-1), time: 0.6068s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_175, [-2.630924940109253,0.5252748727798462]=>[-2.630924940109253,-1e-05] (-1,-1; 15,-1), time: 0.5295s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_95, [-1.8916038274765015,0.7118344902992249]=>[-1.8916038274765015,-1e-05] (-1,-1; 15,-1), time: 0.5361s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_169, [-1.3941783905029297,0.43012911081314087]=>[-1.3941783905029297,-1e-05] (-1,-1; 15,-1), time: 0.5337s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_70, [-1.936383605003357,0.5559178590774536]=>[-1.936383605003357,-1e-05] (-1,-1; 15,-1), time: 0.5482s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_25, [-1.6803832054138184,0.5802841186523438]=>[-1.6803832054138184,-1e-05] (-1,-1; 15,-1), time: 0.5492s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_195, [-2.4405040740966797,0.5808548331260681]=>[-2.4405040740966797,-1e-05] (-1,-1; 15,-1), time: 0.5146s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_4, [-0.15546166896820068,2.6998491287231445]=>[1e-05,2.6998491287231445] (15,-1; -1,-1), time: 0.5596s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_10, [-2.753054618835449,0.07739466428756714]=>[-2.753054618835449,-1e-05] (-1,-1; 15,-1), time: 0.5384s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_88, [-0.21515774726867676,3.0709729194641113]=>[1e-05,3.0709729194641113] (15,-1; -1,-1), time: 0.4963s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_64, [-1.6631653308868408,1.0657225847244263]=>[-1.6631653308868408,-1e-05] (-1,-1; 15,-1), time: 4.9272s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_132, [-2.0704119205474854,0.7086742520332336]=>[-2.0704119205474854,-1e-05] (-1,-1; 15,-1), time: 0.3861s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_148, [-1.4951965808868408,0.7629298567771912]=>[-1.4951965808868408,-1e-05] (-1,-1; 15,-1), time: 0.3786s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_51, [-2.340365409851074,0.6769530773162842]=>[-2.340365409851074,-1e-05] (-1,-1; 15,-1), time: 0.3764s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_156, [-1.2565925121307373,1.8807568550109863]=>[1e-05,1.8807568550109863] (15,-1; -1,-1), time: 9.6873s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_119, [-2.4514060020446777,0.31926631927490234]=>[-2.4514060020446777,-1e-05] (-1,-1; 15,-1), time: 0.3715s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_65, [-1.6043822765350342,1.0114538669586182]=>[-1.6043822765350342,-1e-05] (-1,-1; 15,-1), time: 12.3634s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_177, [-0.7568682432174683,2.0949010848999023]=>[1e-05,2.0949010848999023] (15,-1; -1,-1), time: 0.5445s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_134, [-1.6983808279037476,0.8110087513923645]=>[-1.6983808279037476,-1e-05] (-1,-1; 15,-1), time: 6.6854s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_55, [-1.5568187236785889,1.0649338960647583]=>[-1.5568187236785889,-1e-05] (-1,-1; 15,-1), time: 0.3855s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_137, [-1.8112883567810059,0.6726894378662109]=>[-1.8112883567810059,-1e-05] (-1,-1; 15,-1), time: 0.5923s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_3, [-2.2753679752349854,0.5661526918411255]=>[-2.2753679752349854,-1e-05] (-1,-1; 15,-1), time: 0.3961s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_107, [-2.1129236221313477,0.764819860458374]=>[-2.1129236221313477,-1e-05] (-1,-1; 15,-1), time: 0.5480s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_37, [-1.92630136013031,0.5376875400543213]=>[-1.92630136013031,-1e-05] (-1,-1; 15,-1), time: 0.3990s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_160, [-1.467523455619812,0.836108922958374]=>[-1.467523455619812,-1e-05] (-1,-1; 15,-1), time: 10.2438s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_126, [-1.429863691329956,0.8658561706542969]=>[-0.3752094781010577,0.09199029319319517] (9,-1; 9,-1), time: 30.0070s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_109, [-1.4477545022964478,0.6947565078735352]=>[-0.3009649881142775,0.10270480899142202] (9,-1; 9,-1), time: 30.0102s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_93, [-1.5212647914886475,1.0773388147354126]=>[-0.5242753615821855,0.11052769708315739] (9,-1; 9,-1), time: 30.0222s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_191, [-1.6155985593795776,1.4772385358810425]=>[-0.2312701142540431,0.6952036092140906] (9,-1; 9,-1), time: 30.1120s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_157, [-1.4909907579421997,1.1683896780014038]=>[-0.4280863057524541,0.2797383575823305] (9,-1; 9,-1), time: 30.1519s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_28, [-1.4299460649490356,1.0427889823913574]=>[-0.4869766891349033,0.14685059995639768] (9,-1; 9,-1), time: 30.1729s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_60, [-1.4092589616775513,1.3976318836212158]=>[-0.3670373534207676,0.2797638520180955] (9,-1; 9,-1), time: 30.2816s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_102, [-1.8316864967346191,0.6387911438941956]=>[-1.8316864967346191,-1e-05] (-1,-1; 15,-1), time: 0.3326s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_174, [-2.440214157104492,0.6129772663116455]=>[-2.440214157104492,-1e-05] (-1,-1; 15,-1), time: 0.3367s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_21, [-3.227290630340576,0.4917426109313965]=>[-3.227290630340576,-1e-05] (-1,-1; 15,-1), time: 0.3468s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_79, [-1.1862139701843262,1.4564286470413208]=>[-0.19818078380332863,0.5533811394240618] (9,-1; 9,-1), time: 30.0081s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_33, [-2.016702175140381,0.6732207536697388]=>[-2.016702175140381,-1e-05] (-1,-1; 15,-1), time: 0.3227s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_77, [-0.6919503211975098,2.6981394290924072]=>[1e-05,2.6981394290924072] (15,-1; -1,-1), time: 0.3158s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_12, [-1.729811668395996,0.8218140006065369]=>[-1.729811668395996,-1e-05] (-1,-1; 15,-1), time: 0.4033s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_152, [-0.5349452495574951,3.5643749237060547]=>[1e-05,3.5643749237060547] (15,-1; -1,-1), time: 0.3232s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_141, [-2.524275779724121,0.3716983199119568]=>[-2.524275779724121,-1e-05] (-1,-1; 15,-1), time: 0.3270s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_49, [-1.779921293258667,0.8467965126037598]=>[-1.779921293258667,-1e-05] (-1,-1; 15,-1), time: 0.4144s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_63, [-1.6044315099716187,0.8753840327262878]=>[-1.6044315099716187,-1e-05] (-1,-1; 15,-1), time: 0.3343s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_139, [-1.826474666595459,1.2793885469436646]=>[-0.8333549853264933,0.051130091390072685] (9,-1; 9,-1), time: 30.0423s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_146, [-0.6157430410385132,2.0665125846862793]=>[1e-05,2.0665125846862793] (15,-1; -1,-1), time: 0.3251s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_198, [-1.9482065439224243,0.7442618608474731]=>[-1.9482065439224243,-1e-05] (-1,-1; 15,-1), time: 0.4084s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_117, [-2.281405448913574,0.36929577589035034]=>[-2.281405448913574,-1e-05] (-1,-1; 15,-1), time: 0.3301s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_87, [-1.3186209201812744,1.121320128440857]=>[-0.18085533300061715,0.2513409572226819] (9,-1; 9,-1), time: 30.0135s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_58, [-1.38897705078125,0.7833213210105896]=>[-0.4117750876823573,0.011536526588797183] (9,-1; 9,-1), time: 30.0244s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_176, [-0.7382824420928955,2.5717906951904297]=>[1e-05,2.5717906951904297] (15,-1; -1,-1), time: 0.3283s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_18, [-1.6168930530548096,0.9537500143051147]=>[-1.6168930530548096,-1e-05] (-1,-1; 15,-1), time: 0.3270s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_114, [-1.877970576286316,0.5414655208587646]=>[-1.877970576286316,-1e-05] (-1,-1; 15,-1), time: 0.3454s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_145, [-1.986352801322937,0.5675252676010132]=>[-1.986352801322937,-1e-05] (-1,-1; 15,-1), time: 0.3492s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_131, [-1.8994183540344238,0.7329056859016418]=>[-1.8994183540344238,-1e-05] (-1,-1; 15,-1), time: 0.3379s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_165, [-2.1310675144195557,0.5344305038452148]=>[-2.1310675144195557,-1e-05] (-1,-1; 15,-1), time: 0.3261s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_74, [-1.9543691873550415,0.6801256537437439]=>[-1.9543691873550415,-1e-05] (-1,-1; 15,-1), time: 0.3272s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_188, [-1.0924673080444336,1.767408013343811]=>[-0.024979590148214305,0.7370488746296259] (9,-1; 9,-1), time: 30.0199s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_40, [-1.6966830492019653,0.6130297780036926]=>[-1.6966830492019653,-1e-05] (-1,-1; 15,-1), time: 0.3398s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_26, [-2.4908194541931152,0.3675895929336548]=>[-2.4908194541931152,-1e-05] (-1,-1; 15,-1), time: 0.3293s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_113, [-1.8633902072906494,0.6964149475097656]=>[-1.8633902072906494,-1e-05] (-1,-1; 15,-1), time: 0.3334s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_120, [-1.6644045114517212,0.9225975275039673]=>[-1.6644045114517212,-1e-05] (-1,-1; 15,-1), time: 0.3456s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_151, [-1.9830899238586426,0.5072382092475891]=>[-1.9830899238586426,-1e-05] (-1,-1; 15,-1), time: 0.3273s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_59, [-1.2755452394485474,1.1967601776123047]=>[-0.1682029908858969,0.2528590067768997] (9,-1; 9,-1), time: 30.0165s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_186, [-1.0121121406555176,1.5328748226165771]=>[1e-05,1.5328748226165771] (15,-1; -1,-1), time: 0.3433s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_172, [-2.3484578132629395,0.21482694149017334]=>[-2.3484578132629395,-1e-05] (-1,-1; 15,-1), time: 0.3323s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_34, [-1.9352006912231445,0.7504073977470398]=>[-1.9352006912231445,-1e-05] (-1,-1; 15,-1), time: 0.3321s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_68, [-1.3571131229400635,0.8338749408721924]=>[-1.3571131229400635,-1e-05] (-1,-1; 15,-1), time: 7.9853s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_178, [-1.7143833637237549,0.8459203243255615]=>[-1.7143833637237549,-1e-05] (-1,-1; 15,-1), time: 11.1823s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_111, [-1.042651653289795,2.156183958053589]=>[1e-05,2.156183958053589] (15,-1; -1,-1), time: 0.3211s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_27, [-1.8899070024490356,0.6407769322395325]=>[-1.8899070024490356,-1e-05] (-1,-1; 15,-1), time: 0.3322s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_135, [-1.8250470161437988,0.9552286863327026]=>[-1.8250470161437988,-1e-05] (-1,-1; 15,-1), time: 0.3390s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_181, [-1.930189847946167,0.8048093914985657]=>[-1.930189847946167,-1e-05] (-1,-1; 15,-1), time: 0.3360s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_47, [-0.7038975954055786,2.2786409854888916]=>[1e-05,2.2786409854888916] (15,-1; -1,-1), time: 0.3276s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_98, [-1.8559705018997192,0.7092216610908508]=>[-1.8559705018997192,-1e-05] (-1,-1; 15,-1), time: 0.3376s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_7, [-2.1034634113311768,0.33411693572998047]=>[-2.1034634113311768,-1e-05] (-1,-1; 15,-1), time: 0.3283s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_13, [-1.804799199104309,0.6475734710693359]=>[-1.804799199104309,-1e-05] (-1,-1; 15,-1), time: 0.3341s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_92, [-1.7534085512161255,0.7917132377624512]=>[-1.7534085512161255,-1e-05] (-1,-1; 15,-1), time: 7.1124s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_29, [-1.7477021217346191,0.8650068044662476]=>[-1.7477021217346191,-1e-05] (-1,-1; 15,-1), time: 0.3291s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_99, [-1.9316469430923462,0.49620044231414795]=>[-1.9316469430923462,-1e-05] (-1,-1; 15,-1), time: 0.3320s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_54, [-2.3595569133758545,0.05928981304168701]=>[-2.3595569133758545,-1e-05] (-1,-1; 15,-1), time: 0.3535s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_6, [-1.1575360298156738,1.4777685403823853]=>[-0.10522724789958848,0.6244042852458209] (9,-1; 9,-1), time: 30.0050s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_23, [-1.450785517692566,1.1563856601715088]=>[-0.13188689201555306,0.33536215562110977] (9,-1; 9,-1), time: 30.1232s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_147, [-2.7010176181793213,0.28807854652404785]=>[-2.7010176181793213,-1e-05] (-1,-1; 15,-1), time: 0.3181s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_196, [-1.1421505212783813,1.9530682563781738]=>[1e-05,1.9530682563781738] (15,-1; -1,-1), time: 0.6458s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_136, [-1.5322903394699097,0.962304413318634]=>[-1.5322903394699097,-1e-05] (-1,-1; 15,-1), time: 10.6168s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_103, [-0.9945164918899536,1.6796824932098389]=>[1e-05,1.6796824932098389] (15,-1; -1,-1), time: 0.6309s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_128, [-2.043166160583496,0.7400450706481934]=>[-2.043166160583496,-1e-05] (-1,-1; 15,-1), time: 0.3220s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_187, [-2.1195003986358643,0.49121445417404175]=>[-2.1195003986358643,-1e-05] (-1,-1; 15,-1), time: 0.3114s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_180, [-1.6089184284210205,1.043182373046875]=>[-0.48704549887994514,0.13951084577963643] (9,-1; 9,-1), time: 30.0317s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_90, [-1.163489580154419,1.4545552730560303]=>[-0.09750948512846226,0.5546432648577285] (9,-1; 9,-1), time: 30.0315s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_193, [-2.7310233116149902,0.7827448844909668]=>[-2.7310233116149902,-1e-05] (-1,-1; 15,-1), time: 0.3159s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_142, [-1.8463457822799683,0.8367156386375427]=>[-1.8463457822799683,-1e-05] (-1,-1; 15,-1), time: 0.3263s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_44, [-1.1862461566925049,1.4986953735351562]=>[1e-05,1.4986953735351562] (15,-1; -1,-1), time: 9.4133s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_158, [-1.4345418214797974,1.0939788818359375]=>[-0.43041618622860706,0.10434973126418019] (9,-1; 9,-1), time: 30.0246s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_100, [-1.8797320127487183,0.9478848576545715]=>[-0.6674285293100202,0.013279538589573217] (9,-1; 9,-1), time: 30.1240s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_38, [-2.0774922370910645,0.6346162557601929]=>[-2.0774922370910645,-1e-05] (-1,-1; 15,-1), time: 0.3278s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_194, [-3.165259838104248,0.18763947486877441]=>[-3.165259838104248,-1e-05] (-1,-1; 15,-1), time: 0.3131s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_35, [-1.4231338500976562,1.1989377737045288]=>[-0.12337546058171682,0.5293175332464458] (9,-1; 9,-1), time: 30.0736s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_197, [-2.4928417205810547,0.3426910638809204]=>[-2.4928417205810547,-1e-05] (-1,-1; 15,-1), time: 0.3104s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_162, [-1.552793025970459,0.7909327745437622]=>[-1.552793025970459,-1e-05] (-1,-1; 15,-1), time: 0.3143s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_32, [-1.4278572797775269,0.9581956267356873]=>[-0.3038147804772096,0.1348717018855448] (9,-1; 9,-1), time: 30.0373s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_185, [-1.2964118719100952,1.4497599601745605]=>[-0.4693434599987281,0.14706446264777195] (9,-1; 9,-1), time: 30.0198s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_173, [-1.8604693412780762,0.7406049966812134]=>[-1.8604693412780762,-1e-05] (-1,-1; 15,-1), time: 0.3149s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_143, [-1.0775424242019653,1.9746434688568115]=>[1e-05,1.9746434688568115] (15,-1; -1,-1), time: 0.6197s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_61, [-1.8097105026245117,0.8371641635894775]=>[-0.6385232801280893,0.03256627234892631] (9,-1; 9,-1), time: 30.0279s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_124, [-1.0051743984222412,1.6829746961593628]=>[1e-05,1.6829746961593628] (15,-1; -1,-1), time: 0.3126s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_171, [-2.1774439811706543,0.8485275506973267]=>[-2.1774439811706543,-1e-05] (-1,-1; 15,-1), time: 0.3168s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_2, [-0.5470860004425049,2.411802291870117]=>[1e-05,2.411802291870117] (15,-1; -1,-1), time: 0.3227s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_161, [-2.083613395690918,0.6326257586479187]=>[-2.083613395690918,-1e-05] (-1,-1; 15,-1), time: 0.3218s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_45, [-0.7165971994400024,2.4440085887908936]=>[1e-05,2.4440085887908936] (15,-1; -1,-1), time: 0.3137s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_75, [-2.1290249824523926,1.0108489990234375]=>[-2.1290249824523926,-1e-05] (-1,-1; 15,-1), time: 0.3185s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_53, [-1.0804146528244019,1.3387075662612915]=>[1e-05,1.3387075662612915] (15,-1; -1,-1), time: 0.6323s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_5, [-2.335449695587158,0.7991604804992676]=>[-2.335449695587158,-1e-05] (-1,-1; 15,-1), time: 0.3113s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_118, [-1.6075022220611572,0.7347040176391602]=>[-0.3910248190298791,0.0001466906399496435] (9,-1; 9,-1), time: 30.0943s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_83, [-2.302940607070923,0.5416829586029053]=>[-2.302940607070923,-1e-05] (-1,-1; 15,-1), time: 0.3259s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_164, [-1.6460307836532593,1.0439167022705078]=>[-1.6460307836532593,-1e-05] (-1,-1; 15,-1), time: 0.6046s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_149, [-1.6550191640853882,0.7677657008171082]=>[-1.6550191640853882,-1e-05] (-1,-1; 15,-1), time: 0.3262s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_30, [-2.492516040802002,0.2601194977760315]=>[-2.492516040802002,-1e-05] (-1,-1; 15,-1), time: 0.3416s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_96, [-2.147488594055176,0.49835503101348877]=>[-2.147488594055176,-1e-05] (-1,-1; 15,-1), time: 0.3160s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_24, [-1.213214635848999,0.9068855047225952]=>[-1.213214635848999,-1e-05] (-1,-1; 15,-1), time: 0.6338s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_168, [-0.7619931697845459,1.5332653522491455]=>[1e-05,1.5332653522491455] (15,-1; -1,-1), time: 0.3169s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_110, [-1.9862680435180664,0.5021222233772278]=>[-1.9862680435180664,-1e-05] (-1,-1; 15,-1), time: 0.3199s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_1, [-1.556499719619751,0.8311755061149597]=>[-0.3272836916664387,0.19001832008779246] (9,-1; 9,-1), time: 30.1436s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_154, [-2.05497145652771,0.6194498538970947]=>[-2.05497145652771,-1e-05] (-1,-1; 15,-1), time: 0.3188s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_163, [-0.8067391514778137,1.8319685459136963]=>[1e-05,1.8319685459136963] (15,-1; -1,-1), time: 0.3240s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_50, [-2.293862819671631,0.8967097997665405]=>[-2.293862819671631,-1e-05] (-1,-1; 15,-1), time: 0.3216s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_199, [-2.059943199157715,0.7763978838920593]=>[-2.059943199157715,-1e-05] (-1,-1; 15,-1), time: 0.3186s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_57, [-1.7220919132232666,0.7749608159065247]=>[-1.7220919132232666,-1e-05] (-1,-1; 15,-1), time: 0.3238s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_8, [-2.1976399421691895,0.9046612977981567]=>[-2.1976399421691895,-1e-05] (-1,-1; 15,-1), time: 0.3203s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_46, [-2.7468740940093994,0.28412675857543945]=>[-2.7468740940093994,-1e-05] (-1,-1; 15,-1), time: 0.3258s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_14, [-1.3864104747772217,1.0169076919555664]=>[-0.2927766531530366,0.12523819349799648] (9,-1; 9,-1), time: 30.0634s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_192, [-1.5783036947250366,1.1780977249145508]=>[-1.5783036947250366,-1e-05] (-1,-1; 15,-1), time: 7.7053s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_69, [-1.1531985998153687,1.817460060119629]=>[-0.25672869122318925,0.6767050002822491] (9,-1; 9,-1), time: 30.0046s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_190, [-1.5337916612625122,0.8166651725769043]=>[-0.3434786392530392,0.059349508435246744] (9,-1; 9,-1), time: 30.1336s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_122, [-1.2601397037506104,1.4271695613861084]=>[-0.45441972818431675,0.2824255168124851] (9,-1; 9,-1), time: 30.1002s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_76, [-1.8431322574615479,0.6176880598068237]=>[-1.8431322574615479,-1e-05] (-1,-1; 15,-1), time: 0.3299s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_48, [-1.3204530477523804,0.8208838701248169]=>[-0.30880998273823446,0.009137153024496403] (9,-1; 9,-1), time: 30.1252s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_20, [-1.6667184829711914,0.6399458646774292]=>[-1.6667184829711914,-1e-05] (-1,-1; 15,-1), time: 0.3286s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_138, [-1.6551674604415894,0.8226667046546936]=>[-1.6551674604415894,-1e-05] (-1,-1; 15,-1), time: 0.3129s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_19, [-1.9269137382507324,0.6460201144218445]=>[-1.9269137382507324,-1e-05] (-1,-1; 15,-1), time: 0.3296s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_112, [-1.8666061162948608,0.6853567361831665]=>[-1.8666061162948608,-1e-05] (-1,-1; 15,-1), time: 0.3161s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_15, [-1.8827004432678223,0.8528960347175598]=>[-1.8827004432678223,-1e-05] (-1,-1; 15,-1), time: 0.3150s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_129, [-1.8572070598602295,0.872732400894165]=>[-1.8572070598602295,-1e-05] (-1,-1; 15,-1), time: 0.3188s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_115, [-2.2133233547210693,0.437832236289978]=>[-2.2133233547210693,-1e-05] (-1,-1; 15,-1), time: 0.3152s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_52, [-2.483260154724121,0.4118298292160034]=>[-2.483260154724121,-1e-05] (-1,-1; 15,-1), time: 0.3167s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_82, [-1.6849761009216309,0.666405439376831]=>[-1.6849761009216309,-1e-05] (-1,-1; 15,-1), time: 0.3230s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_123, [-1.5151456594467163,0.9850947856903076]=>[-1.5151456594467163,-1e-05] (-1,-1; 15,-1), time: 0.3276s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_72, [-0.9216935634613037,1.4617937803268433]=>[1e-05,1.4617937803268433] (15,-1; -1,-1), time: 4.8952s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_56, [-1.99715256690979,0.8889573812484741]=>[-1.99715256690979,-1e-05] (-1,-1; 15,-1), time: 0.3162s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_91, [-1.748725175857544,0.6941977739334106]=>[-1.748725175857544,-1e-05] (-1,-1; 15,-1), time: 0.3228s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_105, [-1.2380285263061523,1.2351372241973877]=>[-0.07250925158967915,0.5703794419174244] (9,-1; 9,-1), time: 30.1553s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_71, [-1.3692429065704346,1.3079909086227417]=>[-0.2034583059858851,0.4602297209578979] (9,-1; 9,-1), time: 30.0479s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_153, [-1.6443812847137451,0.42709994316101074]=>[-1.6443812847137451,-1e-05] (-1,-1; 15,-1), time: 0.3213s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_130, [-1.3692116737365723,0.8910089731216431]=>[-0.24035492092728966,0.20406192891669975] (9,-1; 9,-1), time: 30.0948s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_11, [-1.4807747602462769,0.7842358946800232]=>[-1.4807747602462769,-1e-05] (-1,-1; 15,-1), time: 0.3100s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_86, [-1.7903906106948853,0.7419438362121582]=>[-1.7903906106948853,-1e-05] (-1,-1; 15,-1), time: 0.3274s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_166, [-1.2995330095291138,0.9008736610412598]=>[-0.29132893977906327,0.11089234078437854] (9,-1; 9,-1), time: 30.0250s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_81, [-1.2386188507080078,1.1832393407821655]=>[-0.12684354843341883,0.3279186749689972] (9,-1; 9,-1), time: 30.0174s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_183, [-2.341702938079834,0.5133229494094849]=>[-2.341702938079834,-1e-05] (-1,-1; 15,-1), time: 0.3138s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_144, [-2.4025192260742188,0.7721860408782959]=>[-2.4025192260742188,-1e-05] (-1,-1; 15,-1), time: 0.3156s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_39, [-2.191594362258911,0.660876989364624]=>[-2.191594362258911,-1e-05] (-1,-1; 15,-1), time: 0.3198s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_62, [-1.2631467580795288,0.7843696475028992]=>[-0.25337047406544716,0.07095860208882289] (9,-1; 9,-1), time: 30.0331s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_189, [-1.6206135749816895,1.4085637331008911]=>[-0.4242651880830517,0.3681763457565646] (9,-1; 9,-1), time: 30.0285s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_31, [-1.6161701679229736,1.1409868001937866]=>[-0.6255406872829191,0.08767696565031981] (9,-1; 9,-1), time: 30.0274s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_36, [-1.4394993782043457,1.074013590812683]=>[-0.31649637406228087,0.1465965434767092] (9,-1; 9,-1), time: 30.0146s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_73, [-1.5646874904632568,1.265799641609192]=>[-0.6451119945541158,0.21056573506752435] (9,-1; 9,-1), time: 30.0067s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_9, [-1.4678419828414917,1.2297728061676025]=>[-0.5621405259379767,0.015609349511674172] (9,-1; 9,-1), time: 30.0716s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_97, [-1.712491512298584,1.979110598564148]=>[-0.8393712628999465,0.05765847926804886] (9,-1; 9,-1), time: 30.0141s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_43, [-1.5269315242767334,0.8097463846206665]=>[-0.2895282462495245,0.09276901135086744] (9,-1; 9,-1), time: 30.0118s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_101, [-1.1606836318969727,1.3222475051879883]=>[-0.2055500709867847,0.40931398497522525] (9,-1; 9,-1), time: 30.0674s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_125, [-1.5397021770477295,1.3833787441253662]=>[-0.30364149554408115,0.26368391093692506] (9,-1; 9,-1), time: 30.0923s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_85, [-1.580614447593689,0.927993893623352]=>[-0.5608591387349366,0.01817631544048309] (9,-1; 9,-1), time: 30.0122s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_0, [-1.1096370220184326,1.265066146850586]=>[-0.14107159470576958,0.24718740509473142] (9,-1; 9,-1), time: 30.0101s, #vars: 2057, #constrs: 1408, improved: True
Solving MIP for lay10_167, [-1.2491509914398193,1.0789155960083008]=>[-0.3982719783096323,0.04322128478649253] (9,-1; 9,-1), time: 30.0115s, #vars: 2057, #constrs: 1408, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
3 /33 torch.Size([1, 200])
best_l after optimization: 122.60750579833984 with beta sum per layer: []
optimal alpha/beta time: 18.518097400665283
alpha-CROWN with intermediate bounds by MIP: tensor([[ -9.6294, -12.3529, -15.5536, -18.1831, -13.4187, -15.0524, -13.9150,
         -11.3384, -13.1640]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 199 nodes out of 199 unstable nodes, lb improved 71.81195068359375, ub improved 125.12184143066406, time 122.3851
maximum relu layer improved by MIP so far 4
Linear(in_features=200, out_features=200, bias=True) 5 12 torch.Size([200])
sorted candidates ['lay12_60', 'lay12_21', 'lay12_128', 'lay12_123', 'lay12_164', 'lay12_180', 'lay12_47', 'lay12_41', 'lay12_195', 'lay12_67', 'lay12_151', 'lay12_74', 'lay12_171', 'lay12_99', 'lay12_9', 'lay12_93', 'lay12_29', 'lay12_107', 'lay12_139', 'lay12_163', 'lay12_45', 'lay12_82', 'lay12_144', 'lay12_111', 'lay12_158', 'lay12_152', 'lay12_134', 'lay12_178', 'lay12_196', 'lay12_28', 'lay12_138', 'lay12_90', 'lay12_18', 'lay12_37', 'lay12_69', 'lay12_185', 'lay12_33', 'lay12_176', 'lay12_1', 'lay12_64', 'lay12_48', 'lay12_11', 'lay12_89', 'lay12_8', 'lay12_7', 'lay12_189', 'lay12_68', 'lay12_16', 'lay12_72', 'lay12_59', 'lay12_2', 'lay12_110', 'lay12_182', 'lay12_173', 'lay12_155', 'lay12_77', 'lay12_20', 'lay12_129', 'lay12_181', 'lay12_57', 'lay12_62', 'lay12_166', 'lay12_108', 'lay12_27', 'lay12_23', 'lay12_38', 'lay12_39', 'lay12_192', 'lay12_143', 'lay12_5', 'lay12_149', 'lay12_130', 'lay12_168', 'lay12_170', 'lay12_94', 'lay12_49', 'lay12_4', 'lay12_65', 'lay12_54', 'lay12_50', 'lay12_135', 'lay12_120', 'lay12_22', 'lay12_122', 'lay12_43', 'lay12_186', 'lay12_42', 'lay12_95', 'lay12_63', 'lay12_40', 'lay12_79', 'lay12_6', 'lay12_162', 'lay12_137', 'lay12_87', 'lay12_14', 'lay12_112', 'lay12_102', 'lay12_70', 'lay12_92', 'lay12_103', 'lay12_177', 'lay12_105', 'lay12_199', 'lay12_157', 'lay12_159', 'lay12_86', 'lay12_78', 'lay12_26', 'lay12_104', 'lay12_116', 'lay12_76', 'lay12_83', 'lay12_117', 'lay12_113', 'lay12_12', 'lay12_115', 'lay12_193', 'lay12_167', 'lay12_161', 'lay12_190', 'lay12_125', 'lay12_126', 'lay12_91', 'lay12_145', 'lay12_197', 'lay12_25', 'lay12_179', 'lay12_147', 'lay12_58', 'lay12_101', 'lay12_100', 'lay12_165', 'lay12_121', 'lay12_172', 'lay12_148', 'lay12_191', 'lay12_75', 'lay12_0', 'lay12_174', 'lay12_36', 'lay12_183', 'lay12_88', 'lay12_80', 'lay12_46', 'lay12_106', 'lay12_156', 'lay12_184', 'lay12_97', 'lay12_10', 'lay12_198', 'lay12_133', 'lay12_114', 'lay12_169', 'lay12_13', 'lay12_32', 'lay12_34', 'lay12_150', 'lay12_160', 'lay12_71', 'lay12_98', 'lay12_85', 'lay12_194', 'lay12_187', 'lay12_15', 'lay12_19', 'lay12_66', 'lay12_153', 'lay12_140', 'lay12_31', 'lay12_81', 'lay12_53', 'lay12_44', 'lay12_35', 'lay12_136', 'lay12_141', 'lay12_118', 'lay12_175', 'lay12_119', 'lay12_188', 'lay12_51', 'lay12_124', 'lay12_56', 'lay12_109', 'lay12_127', 'lay12_52', 'lay12_17', 'lay12_96', 'lay12_131', 'lay12_55', 'lay12_146', 'lay12_24', 'lay12_73', 'lay12_3', 'lay12_132', 'lay12_142', 'lay12_154', 'lay12_84', 'lay12_61', 'lay12_30'] filter: 1.0
Solving MIP for lay12_180, [-5.593411445617676,2.512712240219116]=>[-5.593411445617676,-1e-05] (-1,-1; 15,-1), time: 0.4661s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_99, [-6.8575873374938965,2.4447903633117676]=>[-6.8575873374938965,-1e-05] (-1,-1; 15,-1), time: 0.4768s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_93, [-5.397296905517578,2.4261865615844727]=>[-5.397296905517578,-1e-05] (-1,-1; 15,-1), time: 0.4863s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_47, [-4.687074184417725,2.6472256183624268]=>[-4.687074184417725,-1e-05] (-1,-1; 15,-1), time: 0.5023s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_21, [-5.627516746520996,2.692814350128174]=>[-5.627516746520996,-1e-05] (-1,-1; 15,-1), time: 0.4989s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_74, [-4.291945457458496,3.0500993728637695]=>[-4.291945457458496,-1e-05] (-1,-1; 15,-1), time: 0.5134s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_67, [-4.570426940917969,3.64778733253479]=>[-4.570426940917969,-1e-05] (-1,-1; 15,-1), time: 0.5224s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_9, [-4.371756553649902,2.8909778594970703]=>[-4.371756553649902,-1e-05] (-1,-1; 15,-1), time: 0.5198s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_139, [-4.606935024261475,2.5294718742370605]=>[-4.606935024261475,-1e-05] (-1,-1; 15,-1), time: 0.4345s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_111, [-6.414188385009766,2.220156669616699]=>[-6.414188385009766,-1e-05] (-1,-1; 15,-1), time: 0.4448s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_45, [-4.807827472686768,2.5524091720581055]=>[-4.807827472686768,-1e-05] (-1,-1; 15,-1), time: 0.4707s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_144, [-6.59354305267334,1.9879316091537476]=>[-6.59354305267334,-1e-05] (-1,-1; 15,-1), time: 0.4519s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_82, [-4.257519245147705,2.4068193435668945]=>[-4.257519245147705,-1e-05] (-1,-1; 15,-1), time: 0.4665s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_152, [-4.135495185852051,2.999049663543701]=>[-4.135495185852051,-1e-05] (-1,-1; 15,-1), time: 0.4433s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_196, [-5.086347579956055,2.573896884918213]=>[-5.086347579956055,-1e-05] (-1,-1; 15,-1), time: 0.4531s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_28, [-4.415624618530273,2.5696396827697754]=>[-4.415624618530273,-1e-05] (-1,-1; 15,-1), time: 0.4474s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_90, [-6.449176788330078,1.7627533674240112]=>[-6.449176788330078,-1e-05] (-1,-1; 15,-1), time: 0.4438s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_134, [-5.110380172729492,2.6338324546813965]=>[-5.110380172729492,-1e-05] (-1,-1; 15,-1), time: 9.2675s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_41, [-4.22996711730957,2.6431679725646973]=>[-4.22996711730957,-1e-05] (-1,-1; 15,-1), time: 11.2528s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_69, [-6.650910377502441,2.331629991531372]=>[-6.650910377502441,-1e-05] (-1,-1; 15,-1), time: 0.4901s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_151, [-6.324005126953125,3.5112249851226807]=>[-6.324005126953125,-1e-05] (-1,-1; 15,-1), time: 11.8779s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_185, [-4.428473949432373,4.127442836761475]=>[-4.428473949432373,-1e-05] (-1,-1; 15,-1), time: 0.4357s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_33, [-4.743741035461426,2.898188591003418]=>[-4.743741035461426,-1e-05] (-1,-1; 15,-1), time: 0.4394s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_176, [-3.7965526580810547,3.915670871734619]=>[1e-05,3.915670871734619] (15,-1; -1,-1), time: 0.4156s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_18, [-3.9226584434509277,3.5521044731140137]=>[1e-05,0.9555304670372995] (15,-1; 9,-1), time: 15.4913s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_48, [-4.432332515716553,2.143075942993164]=>[-4.432332515716553,-1e-05] (-1,-1; 15,-1), time: 0.4228s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_11, [-4.346263885498047,2.9311137199401855]=>[-4.346263885498047,-1e-05] (-1,-1; 15,-1), time: 0.3819s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_89, [-4.1838603019714355,3.0169363021850586]=>[-4.1838603019714355,-1e-05] (-1,-1; 15,-1), time: 0.3922s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_8, [-6.138489723205566,2.638943910598755]=>[-6.138489723205566,-1e-05] (-1,-1; 15,-1), time: 0.3492s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_7, [-4.426782608032227,2.7454967498779297]=>[-4.426782608032227,-1e-05] (-1,-1; 15,-1), time: 0.3647s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_189, [-6.016876220703125,2.440453290939331]=>[-6.016876220703125,-1e-05] (-1,-1; 15,-1), time: 0.3785s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_178, [-4.603628635406494,3.981745719909668]=>[1e-05,0.8662245209319968] (15,-1; 9,-1), time: 21.7574s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_171, [-4.198990345001221,2.9833638668060303]=>[-0.33985453268255306,0.21528226776455267] (9,-1; 9,-1), time: 30.0201s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_164, [-3.7111520767211914,3.0355136394500732]=>[-0.35809592483718783,0.17750917030493923] (9,-1; 9,-1), time: 30.0398s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_195, [-5.03517484664917,3.000685453414917]=>[-0.5285192535335054,0.01952396640220124] (9,-1; 9,-1), time: 30.0513s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_60, [-4.812517166137695,2.935756206512451]=>[-0.6132370784641406,0.03319919570248463] (9,-1; 9,-1), time: 30.0739s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_128, [-5.3048906326293945,2.7000815868377686]=>[-0.4951605505079453,0.17450247895542056] (9,-1; 9,-1), time: 30.0937s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_123, [-3.7991812229156494,3.027172088623047]=>[-0.24301793075685174,0.2798305085983041] (9,-1; 9,-1), time: 30.1933s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_72, [-5.366469383239746,4.357430934906006]=>[-5.366469383239746,-1e-05] (-1,-1; 15,-1), time: 0.3597s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_59, [-5.600668430328369,2.479982376098633]=>[-5.600668430328369,-1e-05] (-1,-1; 15,-1), time: 0.3570s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_110, [-5.723960876464844,2.0978469848632812]=>[-5.723960876464844,-1e-05] (-1,-1; 15,-1), time: 0.3464s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_2, [-4.503037929534912,2.991825819015503]=>[-4.503037929534912,-1e-05] (-1,-1; 15,-1), time: 0.3775s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_29, [-3.9311509132385254,2.888096809387207]=>[-0.41339634007677,0.06735468539960254] (9,-1; 9,-1), time: 30.0723s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_163, [-4.012664794921875,3.36415433883667]=>[-0.4816269017932184,0.08025592089793866] (9,-1; 9,-1), time: 30.1191s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_155, [-4.6193156242370605,3.357809066772461]=>[-4.6193156242370605,-1e-05] (-1,-1; 15,-1), time: 0.3456s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_77, [-5.70687198638916,2.6171040534973145]=>[-5.70687198638916,-1e-05] (-1,-1; 15,-1), time: 0.3434s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_20, [-6.318941116333008,2.197936534881592]=>[-6.318941116333008,-1e-05] (-1,-1; 15,-1), time: 0.3433s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_107, [-4.14399528503418,3.1092207431793213]=>[-0.04872506727288346,0.5392543082474228] (9,-1; 9,-1), time: 30.3020s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_181, [-4.216530799865723,4.919885158538818]=>[1e-05,4.919885158538818] (15,-1; -1,-1), time: 0.3386s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_16, [-5.466197967529297,2.2367396354675293]=>[-5.466197967529297,-1e-05] (-1,-1; 15,-1), time: 8.1573s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_57, [-4.888911247253418,2.541438102722168]=>[-4.888911247253418,-1e-05] (-1,-1; 15,-1), time: 0.3507s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_62, [-8.692594528198242,2.0245349407196045]=>[-8.692594528198242,-1e-05] (-1,-1; 15,-1), time: 0.3558s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_108, [-4.098030090332031,2.5555427074432373]=>[-4.098030090332031,-1e-05] (-1,-1; 15,-1), time: 0.3753s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_158, [-6.301633834838867,3.3878347873687744]=>[-0.16230567272495844,0.7089809768785742] (9,-1; 9,-1), time: 30.3106s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_38, [-5.070621490478516,1.9259634017944336]=>[-5.070621490478516,-1e-05] (-1,-1; 15,-1), time: 0.3616s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_129, [-4.880005836486816,2.9116125106811523]=>[-4.880005836486816,-1e-05] (-1,-1; 15,-1), time: 0.9628s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_192, [-6.70871639251709,2.0198581218719482]=>[-6.70871639251709,-1e-05] (-1,-1; 15,-1), time: 0.3721s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_138, [-5.265085697174072,2.5523343086242676]=>[-0.5563263072841981,0.07593391458864386] (9,-1; 9,-1), time: 30.0314s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_170, [-4.647673606872559,2.5564398765563965]=>[-4.647673606872559,-1e-05] (-1,-1; 15,-1), time: 0.3646s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_94, [-7.763870716094971,1.4501841068267822]=>[-7.763870716094971,-1e-05] (-1,-1; 15,-1), time: 0.3369s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_5, [-4.753932952880859,3.152456283569336]=>[-4.753932952880859,-1e-05] (-1,-1; 15,-1), time: 1.1300s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_49, [-3.9668948650360107,3.2544939517974854]=>[-3.9668948650360107,-1e-05] (-1,-1; 15,-1), time: 0.3674s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_64, [-4.030600547790527,3.984642505645752]=>[1e-05,0.9121947978968803] (15,-1; 9,-1), time: 21.0365s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_23, [-4.852330207824707,2.540785312652588]=>[-4.852330207824707,-1e-05] (-1,-1; 15,-1), time: 7.8376s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_50, [-5.637422561645508,2.6290435791015625]=>[-5.637422561645508,-1e-05] (-1,-1; 15,-1), time: 0.3684s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_135, [-4.881471157073975,2.682042121887207]=>[-4.881471157073975,-1e-05] (-1,-1; 15,-1), time: 0.3516s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_120, [-4.717455863952637,2.6848981380462646]=>[-4.717455863952637,-1e-05] (-1,-1; 15,-1), time: 0.3683s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_22, [-4.833506107330322,2.652073860168457]=>[-4.833506107330322,-1e-05] (-1,-1; 15,-1), time: 0.3580s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_37, [-4.3237223625183105,3.225296974182129]=>[-0.6535429105638608,0.1403267661857731] (9,-1; 9,-1), time: 30.0188s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_122, [-4.420864105224609,3.2860212326049805]=>[-4.420864105224609,-1e-05] (-1,-1; 15,-1), time: 0.3687s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_1, [-4.071558952331543,3.38704776763916]=>[-0.22195655928068608,0.4597553386742354] (9,-1; 9,-1), time: 30.1427s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_68, [-4.6812334060668945,2.956353187561035]=>[1e-05,0.5502769820791104] (15,-1; 9,-1), time: 22.3386s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_42, [-6.825466156005859,2.2470078468322754]=>[-6.825466156005859,-1e-05] (-1,-1; 15,-1), time: 0.3411s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_63, [-3.6664257049560547,4.509608268737793]=>[1e-05,4.509608268737793] (15,-1; -1,-1), time: 0.3558s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_40, [-4.554978847503662,3.0907013416290283]=>[-4.554978847503662,-1e-05] (-1,-1; 15,-1), time: 0.3384s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_79, [-4.844516277313232,3.2045910358428955]=>[-4.844516277313232,-1e-05] (-1,-1; 15,-1), time: 0.3527s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_6, [-4.571498394012451,2.727344036102295]=>[-4.571498394012451,-1e-05] (-1,-1; 15,-1), time: 0.3656s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_4, [-3.610926866531372,3.090988874435425]=>[1e-05,0.5451744315483337] (15,-1; 9,-1), time: 15.5322s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_162, [-4.007325172424316,3.566844940185547]=>[-4.007325172424316,-1e-05] (-1,-1; 15,-1), time: 8.9581s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_87, [-5.684335708618164,2.4943673610687256]=>[-5.684335708618164,-1e-05] (-1,-1; 15,-1), time: 0.3467s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_14, [-4.593222618103027,2.3437352180480957]=>[-4.593222618103027,-1e-05] (-1,-1; 15,-1), time: 0.3516s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_112, [-5.686873435974121,2.3740530014038086]=>[-5.686873435974121,-1e-05] (-1,-1; 15,-1), time: 0.3720s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_102, [-4.9814276695251465,3.807553291320801]=>[-4.9814276695251465,-1e-05] (-1,-1; 15,-1), time: 0.3459s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_182, [-4.032010555267334,4.149410247802734]=>[-0.24630880854705808,0.42535702191266916] (9,-1; 9,-1), time: 30.0263s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_92, [-6.147398948669434,2.078979253768921]=>[-6.147398948669434,-1e-05] (-1,-1; 15,-1), time: 0.3452s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_173, [-5.087954044342041,2.8677632808685303]=>[-0.17800378476064163,0.42947095027668447] (9,-1; 9,-1), time: 30.3430s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_166, [-4.2078704833984375,3.769465923309326]=>[-0.19261508325505364,0.3002947045092179] (9,-1; 9,-1), time: 30.0933s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_177, [-4.192723274230957,2.4275259971618652]=>[-4.192723274230957,-1e-05] (-1,-1; 15,-1), time: 0.3606s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_27, [-3.4759445190429688,4.155957221984863]=>[-0.31371918402552007,0.44932048884072917] (9,-1; 9,-1), time: 30.1803s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_39, [-5.293158531188965,2.892587184906006]=>[-0.1827901214073848,0.5870633044962357] (9,-1; 9,-1), time: 30.1929s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_157, [-4.845095634460449,2.7919766902923584]=>[-4.845095634460449,-1e-05] (-1,-1; 15,-1), time: 0.3467s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_149, [-3.8288960456848145,3.3595690727233887]=>[-0.5350169902317472,0.2776007532344662] (9,-1; 9,-1), time: 30.2133s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_130, [-4.720780372619629,2.5532948970794678]=>[-0.1404959930310567,0.34714142838768874] (9,-1; 9,-1), time: 30.1484s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_143, [-4.474969387054443,3.3895339965820312]=>[-0.20321361536015226,0.23412309211920307] (9,-1; 9,-1), time: 30.3999s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_168, [-3.8925700187683105,3.4497311115264893]=>[-0.20525087871651512,0.5532847019482953] (9,-1; 9,-1), time: 30.0817s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_78, [-4.48649787902832,3.402019500732422]=>[-4.48649787902832,-1e-05] (-1,-1; 15,-1), time: 0.3480s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_104, [-4.328671455383301,2.265991687774658]=>[-4.328671455383301,-1e-05] (-1,-1; 15,-1), time: 0.3601s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_26, [-8.031338691711426,2.1444461345672607]=>[-8.031338691711426,-1e-05] (-1,-1; 15,-1), time: 0.3816s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_76, [-4.409546852111816,2.3915388584136963]=>[-4.409546852111816,-1e-05] (-1,-1; 15,-1), time: 0.3601s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_117, [-3.151625633239746,5.393426895141602]=>[1e-05,5.393426895141602] (15,-1; -1,-1), time: 0.3550s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_113, [-4.438684940338135,3.2024199962615967]=>[-4.438684940338135,-1e-05] (-1,-1; 15,-1), time: 0.3395s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_12, [-5.31974458694458,2.466555595397949]=>[-5.31974458694458,-1e-05] (-1,-1; 15,-1), time: 0.3561s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_115, [-3.8718674182891846,4.872651100158691]=>[1e-05,4.872651100158691] (15,-1; -1,-1), time: 0.3655s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_65, [-3.9950950145721436,3.5390100479125977]=>[-0.07191109265225452,0.38277354126841184] (9,-1; 9,-1), time: 30.3801s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_193, [-4.663358688354492,3.5137670040130615]=>[-4.663358688354492,-1e-05] (-1,-1; 15,-1), time: 0.6340s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_54, [-3.4446122646331787,4.022422790527344]=>[-0.4160972788759018,0.14797969820068332] (9,-1; 9,-1), time: 30.2164s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_105, [-4.150956630706787,3.109081745147705]=>[-4.150956630706787,-1e-05] (-1,-1; 15,-1), time: 6.3767s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_70, [-5.496212959289551,4.074506759643555]=>[1e-05,1.3304672794308194] (15,-1; 9,-1), time: 15.4095s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_43, [-3.883134365081787,3.3109536170959473]=>[-0.4405312432938904,0.03294249733757354] (9,-1; 9,-1), time: 30.0203s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_186, [-3.9665474891662598,3.4093198776245117]=>[-0.05946847161998987,0.5364054232929255] (9,-1; 9,-1), time: 30.1141s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_91, [-4.110960006713867,2.891543388366699]=>[-4.110960006713867,-1e-05] (-1,-1; 15,-1), time: 0.6724s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_197, [-4.986720085144043,2.599874496459961]=>[-4.986720085144043,-1e-05] (-1,-1; 15,-1), time: 0.3584s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_95, [-3.9981374740600586,3.306900978088379]=>[-0.4652233657458336,0.015067344098236821] (9,-1; 9,-1), time: 30.1402s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_103, [-3.9174704551696777,3.8570704460144043]=>[1e-05,1.0600316601267585] (15,-1; 9,-1), time: 15.3641s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_126, [-3.7108700275421143,3.315352201461792]=>[-3.7108700275421143,-1e-05] (-1,-1; 15,-1), time: 8.9363s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_101, [-4.841421127319336,2.735677480697632]=>[-4.841421127319336,-1e-05] (-1,-1; 15,-1), time: 0.3524s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_100, [-5.3008270263671875,2.8171169757843018]=>[-5.3008270263671875,-1e-05] (-1,-1; 15,-1), time: 0.3681s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_137, [-5.879105567932129,2.8690872192382812]=>[-0.28902558733452594,0.41696739326563365] (9,-1; 9,-1), time: 30.2111s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_199, [-3.779163360595703,2.937293767929077]=>[-0.35546593478361976,0.04580976929186913] (9,-1; 9,-1), time: 30.2533s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_58, [-3.920487642288208,3.9108245372772217]=>[1e-05,1.603061308145032] (15,-1; 9,-1), time: 15.3715s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_159, [-4.935964584350586,2.7608699798583984]=>[-0.4447340631565493,0.06804784566355535] (9,-1; 9,-1), time: 30.3160s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_86, [-4.0129547119140625,3.605506658554077]=>[-0.5169060266833353,0.0645585684524485] (9,-1; 9,-1), time: 30.2414s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_148, [-4.228184223175049,3.6098594665527344]=>[-4.228184223175049,-1e-05] (-1,-1; 15,-1), time: 0.3422s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_116, [-4.852570056915283,2.52207612991333]=>[-0.06086413140365949,0.41706404745715514] (9,-1; 9,-1), time: 30.0238s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_0, [-4.905434608459473,2.9565513134002686]=>[-4.905434608459473,-1e-05] (-1,-1; 15,-1), time: 0.3560s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_75, [-4.627542972564697,2.9389543533325195]=>[-4.627542972564697,-1e-05] (-1,-1; 15,-1), time: 0.3568s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_174, [-4.013198375701904,4.754809379577637]=>[1e-05,4.754809379577637] (15,-1; -1,-1), time: 0.3544s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_83, [-4.160136699676514,3.6724042892456055]=>[-0.6324310806566211,0.0008161250142425608] (9,-1; 9,-1), time: 30.0278s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_36, [-3.502138376235962,5.717144012451172]=>[1e-05,5.717144012451172] (15,-1; -1,-1), time: 0.3431s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_80, [-5.642342567443848,3.3216819763183594]=>[-5.642342567443848,-1e-05] (-1,-1; 15,-1), time: 0.3664s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_46, [-4.452617645263672,3.815406560897827]=>[-4.452617645263672,-1e-05] (-1,-1; 15,-1), time: 0.3473s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_156, [-4.603267669677734,2.5807101726531982]=>[-4.603267669677734,-1e-05] (-1,-1; 15,-1), time: 0.3317s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_167, [-5.399232387542725,2.473867893218994]=>[-0.552640776883859,0.020135805862156717] (9,-1; 9,-1), time: 30.0726s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_183, [-4.272021770477295,3.345402240753174]=>[-4.272021770477295,-1e-05] (-1,-1; 15,-1), time: 1.1162s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_161, [-5.231754302978516,3.038234233856201]=>[-0.4357826279295304,0.04680476167006946] (9,-1; 9,-1), time: 30.5419s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_190, [-5.0008649826049805,2.6297287940979004]=>[-0.2707297505043432,0.3212841243912362] (9,-1; 9,-1), time: 30.2374s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_198, [-6.227203845977783,1.964364767074585]=>[-6.227203845977783,-1e-05] (-1,-1; 15,-1), time: 0.3562s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_125, [-5.626655578613281,2.7539496421813965]=>[-0.6459062758792913,0.1516153378678881] (9,-1; 9,-1), time: 30.0623s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_169, [-3.125967025756836,4.042514801025391]=>[1e-05,4.042514801025391] (15,-1; -1,-1), time: 0.3805s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_13, [-4.429745674133301,3.032613754272461]=>[-4.429745674133301,-1e-05] (-1,-1; 15,-1), time: 0.3523s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_145, [-4.369412899017334,3.1365039348602295]=>[-0.3903560798530186,0.29823529229302254] (9,-1; 9,-1), time: 30.0265s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_25, [-3.622518539428711,4.046118259429932]=>[-0.30701477559280277,0.28590041313927694] (9,-1; 9,-1), time: 30.1424s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_179, [-3.9879109859466553,3.0724868774414062]=>[-0.1936841231808239,0.29299797037518954] (9,-1; 9,-1), time: 30.0236s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_150, [-4.63836669921875,3.787515163421631]=>[-4.63836669921875,-1e-05] (-1,-1; 15,-1), time: 0.3468s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_147, [-5.514050483703613,2.85593843460083]=>[-0.5076250994871767,0.10810034906646121] (9,-1; 9,-1), time: 30.0299s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_98, [-4.386504173278809,3.5895304679870605]=>[-4.386504173278809,-1e-05] (-1,-1; 15,-1), time: 0.3540s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_85, [-7.099673271179199,2.146310329437256]=>[-7.099673271179199,-1e-05] (-1,-1; 15,-1), time: 0.3628s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_194, [-4.108755111694336,2.955874443054199]=>[-4.108755111694336,-1e-05] (-1,-1; 15,-1), time: 0.3562s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_187, [-4.674596309661865,3.9986889362335205]=>[-4.674596309661865,-1e-05] (-1,-1; 15,-1), time: 0.3454s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_165, [-4.278318881988525,3.116878032684326]=>[-0.26050154454994967,0.12453708101114627] (9,-1; 9,-1), time: 30.1593s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_88, [-4.958532810211182,3.9922385215759277]=>[1e-05,1.8102817971139888] (15,-1; 9,-1), time: 15.4802s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_66, [-4.442915439605713,3.349684238433838]=>[-4.442915439605713,-1e-05] (-1,-1; 15,-1), time: 0.3561s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_121, [-4.152953147888184,3.0563652515411377]=>[-0.4485130472473172,0.010843126422684797] (9,-1; 9,-1), time: 30.0095s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_140, [-6.533709526062012,1.8670692443847656]=>[-6.533709526062012,-1e-05] (-1,-1; 15,-1), time: 0.3468s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_31, [-5.235346794128418,2.8253190517425537]=>[-5.235346794128418,-1e-05] (-1,-1; 15,-1), time: 0.3530s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_81, [-4.384744644165039,4.04904842376709]=>[-4.384744644165039,-1e-05] (-1,-1; 15,-1), time: 0.3494s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_172, [-3.8847060203552246,3.359640598297119]=>[-0.3755654283737699,0.2840321628952908] (9,-1; 9,-1), time: 30.1241s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_191, [-3.460033893585205,4.002166271209717]=>[-0.30410991400923737,0.1978120246342107] (9,-1; 9,-1), time: 30.1733s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_19, [-4.3255295753479,3.7315142154693604]=>[1e-05,0.7035597216051351] (15,-1; 9,-1), time: 15.4002s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_106, [-4.045177459716797,3.3814053535461426]=>[-0.03763571019713196,0.4924071306897684] (9,-1; 9,-1), time: 30.2191s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_97, [-4.779201507568359,2.661191463470459]=>[-0.6769435540763906,0.0776684382642357] (9,-1; 9,-1), time: 30.0341s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_184, [-4.174309253692627,3.1289403438568115]=>[-0.558223308429658,0.02866806728207883] (9,-1; 9,-1), time: 30.1841s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_10, [-3.8651561737060547,3.546095371246338]=>[-0.028883852593990327,0.7497457050948493] (9,-1; 9,-1), time: 30.2640s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_133, [-3.8717665672302246,4.583131790161133]=>[-0.014618336704631814,1.1321349318309335] (9,-1; 9,-1), time: 30.0738s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_114, [-3.847188949584961,4.083412170410156]=>[-0.20911921954276388,0.3175672964638609] (9,-1; 9,-1), time: 30.0611s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_53, [-5.769460678100586,3.246318817138672]=>[1e-05,1.1550033385065932] (15,-1; 9,-1), time: 15.3754s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_32, [-7.889547824859619,2.541342258453369]=>[-0.7424771228976736,0.02751456679010853] (9,-1; 9,-1), time: 30.2800s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_34, [-4.095332145690918,3.1451406478881836]=>[-0.5558970069288681,0.012396854157142284] (9,-1; 9,-1), time: 30.1502s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_160, [-3.4311680793762207,3.9789183139801025]=>[-0.5493721099434213,0.2978703731185074] (9,-1; 9,-1), time: 30.0251s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_71, [-3.812020778656006,3.6430039405822754]=>[-0.6111506953781618,0.06760610935993484] (9,-1; 9,-1), time: 30.1497s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_15, [-3.7492244243621826,3.0539021492004395]=>[-0.3762822483809873,0.13027279982979093] (9,-1; 9,-1), time: 30.1303s, #vars: 2353, #constrs: 1752, improved: True
Solving MIP for lay12_153, [-3.287003517150879,5.265364170074463]=>[-0.3848711958221808,0.23735152923402772] (9,-1; 9,-1), time: 30.0954s, #vars: 2353, #constrs: 1752, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
3 /33 torch.Size([1, 200])
4 /35 torch.Size([1, 200])
best_l after optimization: 34.1702880859375 with beta sum per layer: []
optimal alpha/beta time: 12.50538969039917
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.5015, -2.6986, -4.4719, -7.1940, -2.6681, -4.3416, -1.8698, -4.1355,
         -5.2893]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 172 nodes out of 200 unstable nodes, lb improved 308.2862548828125, ub improved 468.4885559082031, time 138.4509
maximum relu layer improved by MIP so far 5
MIP finished with 427.0840446949005s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
3 /33 torch.Size([1, 200])
4 /35 torch.Size([1, 200])
5 /37 torch.Size([1, 200])
best_l after optimization: 12.920646667480469 with beta sum per layer: []
optimal alpha/beta time: 8.852335691452026
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 0.6815, -0.5297, -1.9513, -4.8401, -0.1186, -1.7063,  1.0326, -2.1984,
         -3.2903]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[ 0.6815, -0.5297, -1.9513, -4.8401, -0.1186, -1.7063,  1.0326,  0.0000,
         -2.1984, -3.2903]], device='cuda:0') min: tensor(-4.8401, device='cuda:0')
time threshold left for bab: 50.07587170600891
##### [0:950] Tested against 0 ######
init opt crown verified for label 0 with bound 0.6815133094787598
Image 950 pidx 0 verify end, Time cost: 0.00015878677368164062
950 0.6815133094787598
[[950, 0, 0, 13.906233072280884, 0, -1], [950, 0, 0, 436.01789808273315, 0, -2], [950, 0.6815133094787598, 0, 0.00015878677368164062, 0, 0]]
##### [0:950] Tested against 1 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
3 /33 torch.Size([1, 200])
4 /35 torch.Size([1, 200])
5 /37 torch.Size([1, 200])
6 /39 torch.Size([1, 200])
7 /41 torch.Size([1, 200])
best_l after optimization: 0.5297439098358154 with beta sum per layer: []
optimal alpha/beta time: 1.6486694812774658
alpha-CROWN with fixed intermediate bounds: tensor([[-0.5297]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-0.5297439098358154
layer 0 size torch.Size([200]) unstable 25
layer 1 size torch.Size([200]) unstable 47
layer 2 size torch.Size([200]) unstable 28
layer 3 size torch.Size([200]) unstable 36
layer 4 size torch.Size([200]) unstable 48
layer 5 size torch.Size([200]) unstable 70
layer 6 size torch.Size([200]) unstable 115
layer 7 size torch.Size([200]) unstable 146
# of unstable neurons: 515
splitting decisions: [[7, 111]]
single_node_split: True
best_l after optimization: 0.03568291664123535 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.920100212097168
This batch time : update_bounds func: 0.9230	 prepare: 0.0016	 bound: 0.9203	 transfer: 0.0007	 finalize: 0.0003
Accumulated time: update_bounds func: 0.9230	 prepare: 0.0016	 bound: 0.9203	 transfer: 0.0007	 finalize: 0.0003
batch bounding time:  0.9230036735534668
Current worst domains: [-0.21747732162475586]
length of domains: 1
Total time: 0.9474	 pickout: 0.0011	 decision: 0.0233	 get_bound: 0.9231	 add_domain: 0.0001
Current lb:-0.21747732162475586
2 neurons visited

splitting decisions: [[7, 138]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -0.08713459968566895 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.011460304260253906
This batch time : update_bounds func: 0.0142	 prepare: 0.0016	 bound: 0.0117	 transfer: 0.0005	 finalize: 0.0003
Accumulated time: update_bounds func: 0.9371	 prepare: 0.0032	 bound: 0.9320	 transfer: 0.0005	 finalize: 0.0006
batch bounding time:  0.014188051223754883
Current worst domains: []
length of domains: 0
Total time: 0.0380	 pickout: 0.0009	 decision: 0.0229	 get_bound: 0.0142	 add_domain: 0.0000
No domains left, verification finished!
Image 950 pidx 1 verify end, Time cost: 2.8785626888275146
950 999
[[950, 0, 0, 13.906233072280884, 0, -1], [950, 0, 0, 436.01789808273315, 0, -2], [950, 0.6815133094787598, 0, 0.00015878677368164062, 0, 0], [950, 999, 4, 2.8785626888275146, 0, 1]]
##### [0:950] Tested against 2 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
3 /33 torch.Size([1, 200])
4 /35 torch.Size([1, 200])
5 /37 torch.Size([1, 200])
6 /39 torch.Size([1, 200])
7 /41 torch.Size([1, 200])
best_l after optimization: 1.951702356338501 with beta sum per layer: []
optimal alpha/beta time: 1.48789381980896
alpha-CROWN with fixed intermediate bounds: tensor([[-1.9517]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-1.951702356338501
layer 0 size torch.Size([200]) unstable 25
layer 1 size torch.Size([200]) unstable 47
layer 2 size torch.Size([200]) unstable 28
layer 3 size torch.Size([200]) unstable 36
layer 4 size torch.Size([200]) unstable 48
layer 5 size torch.Size([200]) unstable 70
layer 6 size torch.Size([200]) unstable 115
layer 7 size torch.Size([200]) unstable 146
# of unstable neurons: 515
splitting decisions: [[7, 111]]
single_node_split: True
best_l after optimization: 3.2315077781677246 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2349536418914795]
optimal alpha/beta time: 0.7599878311157227
This batch time : update_bounds func: 0.7627	 prepare: 0.0015	 bound: 0.7602	 transfer: 0.0007	 finalize: 0.0003
Accumulated time: update_bounds func: 1.6999	 prepare: 0.0047	 bound: 1.6922	 transfer: 0.0007	 finalize: 0.0009
batch bounding time:  0.7627766132354736
Current worst domains: [-1.7290825843811035, -1.502425193786621]
length of domains: 2
Total time: 0.7870	 pickout: 0.0009	 decision: 0.0232	 get_bound: 0.7628	 add_domain: 0.0001
Current lb:-1.7290825843811035
2 neurons visited

splitting decisions: [[7, 95], [7, 95]]
single_node_split: True
best_l after optimization: 5.747403144836426 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4270053505897522]
optimal alpha/beta time: 0.7642507553100586
This batch time : update_bounds func: 0.7675	 prepare: 0.0018	 bound: 0.7645	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 2.4673	 prepare: 0.0065	 bound: 2.4567	 transfer: 0.0007	 finalize: 0.0014
batch bounding time:  0.7675108909606934
Current worst domains: [-1.567673683166504, -1.5353903770446777, -1.331528902053833, -1.3128104209899902]
length of domains: 4
Total time: 0.7918	 pickout: 0.0011	 decision: 0.0230	 get_bound: 0.7675	 add_domain: 0.0002
Current lb:-1.567673683166504
6 neurons visited

splitting decisions: [[7, 82], [7, 92], [7, 92], [7, 92]]
single_node_split: True
best_l after optimization: 9.981528282165527 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.2704391479492188]
optimal alpha/beta time: 0.7612149715423584
This batch time : update_bounds func: 0.7653	 prepare: 0.0022	 bound: 0.7614	 transfer: 0.0007	 finalize: 0.0010
Accumulated time: update_bounds func: 3.2327	 prepare: 0.0087	 bound: 3.2181	 transfer: 0.0007	 finalize: 0.0024
batch bounding time:  0.7653481960296631
Current worst domains: [-1.4468255043029785, -1.4120402336120605, -1.295609951019287, -1.2376022338867188, -1.1991310119628906, -1.1811363697052002, -1.1135258674621582, -1.0956568717956543]
length of domains: 8
Total time: 0.7904	 pickout: 0.0014	 decision: 0.0232	 get_bound: 0.7654	 add_domain: 0.0003
Current lb:-1.4468255043029785
14 neurons visited

splitting decisions: [[7, 92], [7, 82], [7, 82], [7, 92], [7, 82], [7, 82], [7, 82], [7, 82]]
single_node_split: True
best_l after optimization: 16.121610641479492 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.113731384277344]
optimal alpha/beta time: 0.7646355628967285
This batch time : update_bounds func: 0.7703	 prepare: 0.0029	 bound: 0.7648	 transfer: 0.0008	 finalize: 0.0017
Accumulated time: update_bounds func: 4.0030	 prepare: 0.0115	 bound: 3.9829	 transfer: 0.0008	 finalize: 0.0041
batch bounding time:  0.7703356742858887
Current worst domains: [-1.3209562301635742, -1.2974495887756348, -1.1813263893127441, -1.177344799041748, -1.0988540649414062, -1.0985722541809082, -1.079094409942627, -1.0599110126495361, -1.0001447200775146, -0.9937081336975098]
length of domains: 16
Total time: 0.7964	 pickout: 0.0020	 decision: 0.0233	 get_bound: 0.7704	 add_domain: 0.0006
Current lb:-1.3209562301635742
30 neurons visited

splitting decisions: [[7, 129], [7, 129], [7, 129], [7, 177], [7, 129], [7, 177], [7, 129], [7, 129], [7, 177], [7, 129]]
single_node_split: True
best_l after optimization: 27.059049606323242 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 35.04240036010742]
optimal alpha/beta time: 0.7662971019744873
This batch time : update_bounds func: 0.7754	 prepare: 0.0044	 bound: 0.7665	 transfer: 0.0008	 finalize: 0.0035
Accumulated time: update_bounds func: 4.7783	 prepare: 0.0160	 bound: 4.7495	 transfer: 0.0008	 finalize: 0.0076
batch bounding time:  0.7754113674163818
Current worst domains: [-1.217540979385376, -1.1963937282562256, -1.1885621547698975, -1.165327548980713, -1.0675182342529297, -1.0634009838104248, -1.04024338722229, -1.0040009021759033, -0.9977750778198242, -0.9772593975067139]
length of domains: 32
Total time: 0.8041	 pickout: 0.0034	 decision: 0.0239	 get_bound: 0.7755	 add_domain: 0.0013
Current lb:-1.217540979385376
62 neurons visited

splitting decisions: [[7, 177], [7, 177], [7, 177], [7, 177], [7, 177], [7, 129], [7, 177], [7, 129], [7, 177], [7, 177]]
single_node_split: True
best_l after optimization: 40.87117004394531 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5410159826278687, 104.8109359741211]
optimal alpha/beta time: 0.7729067802429199
This batch time : update_bounds func: 0.7886	 prepare: 0.0076	 bound: 0.7731	 transfer: 0.0011	 finalize: 0.0067
Accumulated time: update_bounds func: 5.5670	 prepare: 0.0236	 bound: 5.5226	 transfer: 0.0011	 finalize: 0.0144
batch bounding time:  0.7887001037597656
Current worst domains: [-1.1207947731018066, -1.1007344722747803, -1.0912725925445557, -1.0697381496429443, -0.971541166305542, -0.9615592956542969, -0.9441189765930176, -0.938528299331665, -0.9116277694702148, -0.908350944519043]
length of domains: 64
Total time: 0.8229	 pickout: 0.0058	 decision: 0.0249	 get_bound: 0.7888	 add_domain: 0.0034
Current lb:-1.1207947731018066
126 neurons visited

splitting decisions: [[6, 153], [7, 123], [7, 123], [7, 123], [7, 123], [6, 153], [7, 123], [6, 97], [6, 153], [7, 123]]
single_node_split: True
best_l after optimization: 63.41888427734375 with beta sum per layer: [0.3683199882507324, 0.0, 0.0, 0.0, 0.0, 0.0, 5.138647079467773, 246.52108764648438]
optimal alpha/beta time: 0.7782998085021973
This batch time : update_bounds func: 0.8076	 prepare: 0.0140	 bound: 0.7785	 transfer: 0.0018	 finalize: 0.0131
Accumulated time: update_bounds func: 6.3745	 prepare: 0.0375	 bound: 6.3011	 transfer: 0.0018	 finalize: 0.0274
batch bounding time:  0.8076803684234619
Current worst domains: [-1.0387516021728516, -1.0205624103546143, -1.0108864307403564, -0.9918062686920166, -0.9324290752410889, -0.9283261299133301, -0.9019496440887451, -0.8905243873596191, -0.8604755401611328, -0.8471331596374512]
length of domains: 120
Total time: 0.8510	 pickout: 0.0112	 decision: 0.0266	 get_bound: 0.8078	 add_domain: 0.0053
Current lb:-1.0387516021728516
254 neurons visited

splitting decisions: [[7, 123], [7, 138], [6, 153], [7, 138], [6, 97], [7, 138], [7, 138], [6, 153], [0, 126], [7, 123]]
single_node_split: True
best_l after optimization: 93.09013366699219 with beta sum per layer: [6.090606212615967, 0.0, 0.0, 0.0, 0.0, 0.0, 23.522754669189453, 495.19134521484375]
optimal alpha/beta time: 0.7794454097747803
This batch time : update_bounds func: 0.8319	 prepare: 0.0249	 bound: 0.7797	 transfer: 0.0033	 finalize: 0.0236
Accumulated time: update_bounds func: 7.2064	 prepare: 0.0624	 bound: 7.0808	 transfer: 0.0033	 finalize: 0.0511
batch bounding time:  0.8321244716644287
Current worst domains: [-0.9603145122528076, -0.9511432647705078, -0.9400684833526611, -0.9256718158721924, -0.889812707901001, -0.8574323654174805, -0.8410971164703369, -0.8309252262115479, -0.8112425804138184, -0.8069157600402832]
length of domains: 224
Total time: 0.8962	 pickout: 0.0205	 decision: 0.0324	 get_bound: 0.8324	 add_domain: 0.0109
Current lb:-0.9603145122528076
494 neurons visited

splitting decisions: [[0, 126], [7, 196], [0, 126], [7, 196], [6, 97], [6, 97], [6, 153], [6, 97], [6, 153], [0, 126]]
single_node_split: True
best_l after optimization: 122.2920150756836 with beta sum per layer: [19.888214111328125, 0.0, 0.0, 0.0, 0.0, 0.0, 66.10305786132812, 973.4271240234375]
optimal alpha/beta time: 0.7836084365844727
This batch time : update_bounds func: 0.9226	 prepare: 0.0466	 bound: 0.7839	 transfer: 0.0099	 finalize: 0.0816
Accumulated time: update_bounds func: 8.1290	 prepare: 0.1090	 bound: 7.8647	 transfer: 0.0099	 finalize: 0.1327
batch bounding time:  0.9229352474212646
Current worst domains: [-0.8870153427124023, -0.8852634429931641, -0.865145206451416, -0.8583660125732422, -0.8313720226287842, -0.8087518215179443, -0.7839200496673584, -0.774979829788208, -0.7704086303710938, -0.7594385147094727]
length of domains: 382
Total time: 1.0210	 pickout: 0.0372	 decision: 0.0413	 get_bound: 0.9234	 add_domain: 0.0190
Current lb:-0.8870153427124023
942 neurons visited

splitting decisions: [[7, 138], [7, 178], [7, 138], [7, 178], [7, 138], [7, 138], [7, 138], [7, 138], [6, 153], [7, 138]]
single_node_split: True
best_l after optimization: 150.40940856933594 with beta sum per layer: [45.49415969848633, 0.0, 0.0, 0.0, 0.0, 0.0, 138.1327362060547, 1718.387939453125]
optimal alpha/beta time: 0.7982382774353027
This batch time : update_bounds func: 1.0358	 prepare: 0.0811	 bound: 0.7986	 transfer: 0.0171	 finalize: 0.1381
Accumulated time: update_bounds func: 9.1648	 prepare: 0.1902	 bound: 8.6632	 transfer: 0.0171	 finalize: 0.2708
batch bounding time:  1.0364267826080322
Current worst domains: [-0.8131461143493652, -0.8123278617858887, -0.7939600944519043, -0.779094934463501, -0.7760872840881348, -0.7571010589599609, -0.7552595138549805, -0.7377440929412842, -0.7153840065002441, -0.7077934741973877]
length of domains: 571
Total time: 1.1815	 pickout: 0.0664	 decision: 0.0477	 get_bound: 1.0374	 add_domain: 0.0300
Current lb:-0.8131461143493652
1706 neurons visited

splitting decisions: [[7, 124], [7, 196], [7, 196], [7, 124], [7, 124], [7, 196], [7, 124], [7, 196], [7, 196], [0, 126]]
single_node_split: True
best_l after optimization: 178.90985107421875 with beta sum per layer: [62.707340240478516, 0.0, 0.49157631397247314, 0.0, 0.0, 0.0, 203.80526733398438, 2042.9542236328125]
optimal alpha/beta time: 0.8107321262359619
This batch time : update_bounds func: 1.0927	 prepare: 0.1064	 bound: 0.8110	 transfer: 0.0219	 finalize: 0.1521
Accumulated time: update_bounds func: 10.2575	 prepare: 0.2966	 bound: 9.4743	 transfer: 0.0219	 finalize: 0.4229
batch bounding time:  1.0934712886810303
Current worst domains: [-0.7454180717468262, -0.7436211109161377, -0.7233219146728516, -0.7084667682647705, -0.7051517963409424, -0.6887717247009277, -0.682133674621582, -0.6667835712432861, -0.6472063064575195, -0.6423330307006836]
length of domains: 893
Total time: 1.2848	 pickout: 0.0901	 decision: 0.0546	 get_bound: 1.0949	 add_domain: 0.0452
Current lb:-0.7454180717468262
2706 neurons visited

splitting decisions: [[6, 153], [6, 97], [7, 178], [6, 153], [0, 126], [6, 97], [0, 126], [7, 178], [7, 178], [7, 196]]
single_node_split: True
best_l after optimization: 185.18893432617188 with beta sum per layer: [73.8609619140625, 0.0, 6.342191696166992, 0.0, 0.0, 0.0, 219.99908447265625, 1728.456298828125]
optimal alpha/beta time: 0.8503565788269043
This batch time : update_bounds func: 1.0826	 prepare: 0.1067	 bound: 0.8507	 transfer: 0.0225	 finalize: 0.1013
Accumulated time: update_bounds func: 11.3401	 prepare: 0.4033	 bound: 10.3249	 transfer: 0.0225	 finalize: 0.5242
batch bounding time:  1.0833449363708496
Current worst domains: [-0.677025318145752, -0.6677732467651367, -0.6514489650726318, -0.648184061050415, -0.640995979309082, -0.6381890773773193, -0.6183938980102539, -0.6132287979125977, -0.6128644943237305, -0.5947446823120117]
length of domains: 1300
Total time: 1.2842	 pickout: 0.0923	 decision: 0.0553	 get_bound: 1.0847	 add_domain: 0.0518
Current lb:-0.677025318145752
3706 neurons visited

splitting decisions: [[0, 126], [7, 178], [7, 124], [0, 126], [6, 153], [7, 124], [6, 153], [7, 178], [7, 124], [7, 124]]
single_node_split: True
best_l after optimization: 157.1396026611328 with beta sum per layer: [82.7096939086914, 0.0, 14.587005615234375, 0.0, 0.0, 0.0, 181.45480346679688, 1568.003173828125]
optimal alpha/beta time: 0.7966947555541992
This batch time : update_bounds func: 1.0325	 prepare: 0.1083	 bound: 0.7970	 transfer: 0.0228	 finalize: 0.1030
Accumulated time: update_bounds func: 12.3725	 prepare: 0.5116	 bound: 11.1219	 transfer: 0.0228	 finalize: 0.6272
batch bounding time:  1.0332090854644775
Current worst domains: [-0.6092045307159424, -0.59714674949646, -0.581040620803833, -0.5806515216827393, -0.575056791305542, -0.5647575855255127, -0.5636162757873535, -0.562711238861084, -0.5568647384643555, -0.5427546501159668]
length of domains: 1644
Total time: 1.3898	 pickout: 0.0939	 decision: 0.1256	 get_bound: 1.0346	 add_domain: 0.1358
Current lb:-0.6092045307159424
4706 neurons visited

splitting decisions: [[7, 109], [7, 124], [7, 109], [7, 185], [6, 97], [7, 178], [7, 124], [7, 185], [7, 109], [7, 124]]
single_node_split: True
best_l after optimization: 129.1913604736328 with beta sum per layer: [85.46115112304688, 0.0, 19.37281608581543, 0.0, 0.0, 2.1571614742279053, 160.5810546875, 1535.142333984375]
optimal alpha/beta time: 0.8049159049987793
This batch time : update_bounds func: 1.1374	 prepare: 0.1113	 bound: 0.8052	 transfer: 0.0220	 finalize: 0.1976
Accumulated time: update_bounds func: 13.5099	 prepare: 0.6229	 bound: 11.9271	 transfer: 0.0220	 finalize: 0.8248
batch bounding time:  1.1383023262023926
Current worst domains: [-0.5468683242797852, -0.528395414352417, -0.5265259742736816, -0.5211849212646484, -0.5113039016723633, -0.49926257133483887, -0.49659276008605957, -0.4929823875427246, -0.4914264678955078, -0.48325681686401367]
length of domains: 1971
Total time: 1.3490	 pickout: 0.0980	 decision: 0.0605	 get_bound: 1.1399	 add_domain: 0.0507
Current lb:-0.5468683242797852
5706 neurons visited

splitting decisions: [[6, 97], [7, 109], [7, 185], [7, 109], [7, 93], [7, 185], [7, 185], [6, 97], [6, 97], [7, 109]]
single_node_split: True
best_l after optimization: 91.34657287597656 with beta sum per layer: [87.67253112792969, 0.36048972606658936, 13.318197250366211, 0.0, 0.0, 3.1330223083496094, 176.51248168945312, 1516.021484375]
optimal alpha/beta time: 0.8119266033172607
This batch time : update_bounds func: 1.1521	 prepare: 0.1132	 bound: 0.8122	 transfer: 0.0224	 finalize: 0.2029
Accumulated time: update_bounds func: 14.6621	 prepare: 0.7361	 bound: 12.7394	 transfer: 0.0224	 finalize: 1.0277
batch bounding time:  1.1529719829559326
Current worst domains: [-0.4791278839111328, -0.4729931354522705, -0.4714221954345703, -0.46880531311035156, -0.46117305755615234, -0.4603414535522461, -0.4460775852203369, -0.4454824924468994, -0.4262502193450928, -0.42281675338745117]
length of domains: 2201
Total time: 1.3585	 pickout: 0.0988	 decision: 0.0580	 get_bound: 1.1545	 add_domain: 0.0473
Current lb:-0.4791278839111328
6706 neurons visited

splitting decisions: [[7, 108], [7, 108], [7, 93], [7, 109], [7, 108], [7, 108], [2, 190], [7, 109], [7, 108], [7, 108]]
single_node_split: True
best_l after optimization: 59.53643035888672 with beta sum per layer: [99.18880462646484, 0.0, 18.848247528076172, 0.0, 0.0, 4.667759895324707, 168.8839111328125, 1465.455810546875]
optimal alpha/beta time: 0.80279541015625
This batch time : update_bounds func: 1.0506	 prepare: 0.1148	 bound: 0.8031	 transfer: 0.0214	 finalize: 0.1099
Accumulated time: update_bounds func: 15.7127	 prepare: 0.8509	 bound: 13.5425	 transfer: 0.0214	 finalize: 1.1376
batch bounding time:  1.0514719486236572
Current worst domains: [-0.4299924373626709, -0.42026209831237793, -0.4141671657562256, -0.41176819801330566, -0.40491604804992676, -0.4034614562988281, -0.40204858779907227, -0.3867948055267334, -0.3729846477508545, -0.3714625835418701]
length of domains: 2346
Total time: 1.3644	 pickout: 0.1004	 decision: 0.1671	 get_bound: 1.0530	 add_domain: 0.0440
Current lb:-0.4299924373626709
7706 neurons visited

splitting decisions: [[7, 108], [7, 185], [7, 108], [7, 93], [7, 109], [7, 185], [7, 185], [7, 93], [7, 109], [7, 108]]
single_node_split: True
best_l after optimization: 39.419864654541016 with beta sum per layer: [82.35823059082031, 0.0, 19.63526153564453, 0.0, 0.0, 4.113104343414307, 184.56202697753906, 1420.3092041015625]
optimal alpha/beta time: 0.808264970779419
This batch time : update_bounds func: 1.1984	 prepare: 0.1138	 bound: 0.8086	 transfer: 0.0227	 finalize: 0.2519
Accumulated time: update_bounds func: 16.9111	 prepare: 0.9647	 bound: 14.3511	 transfer: 0.0227	 finalize: 1.3895
batch bounding time:  1.1994171142578125
Current worst domains: [-0.37059903144836426, -0.3685574531555176, -0.36840224266052246, -0.35422801971435547, -0.3505399227142334, -0.34978342056274414, -0.3477485179901123, -0.3468444347381592, -0.3187408447265625, -0.3155689239501953]
length of domains: 2441
Total time: 1.5202	 pickout: 0.1019	 decision: 0.1762	 get_bound: 1.2011	 add_domain: 0.0411
Current lb:-0.37059903144836426
8706 neurons visited

splitting decisions: [[6, 97], [7, 107], [6, 68], [7, 107], [7, 107], [6, 68], [7, 108], [7, 108], [7, 108], [6, 68]]
single_node_split: True
best_l after optimization: 13.460326194763184 with beta sum per layer: [91.55693817138672, 0.07476769387722015, 22.57736587524414, 0.0, 0.0, 0.3185865581035614, 151.90113830566406, 1519.0533447265625]
optimal alpha/beta time: 0.809269905090332
This batch time : update_bounds func: 1.2008	 prepare: 0.1154	 bound: 0.8096	 transfer: 0.0210	 finalize: 0.2535
Accumulated time: update_bounds func: 18.1120	 prepare: 1.0801	 bound: 15.1607	 transfer: 0.0210	 finalize: 1.6430
batch bounding time:  1.201761245727539
Current worst domains: [-0.3124833106994629, -0.3061411380767822, -0.30255913734436035, -0.2915520668029785, -0.29138922691345215, -0.2908005714416504, -0.2886784076690674, -0.28560304641723633, -0.28368186950683594, -0.25952672958374023]
length of domains: 2474
Total time: 1.4037	 pickout: 0.1030	 decision: 0.0587	 get_bound: 1.2035	 add_domain: 0.0385
Current lb:-0.3124833106994629
9706 neurons visited

splitting decisions: [[7, 107], [6, 97], [7, 107], [7, 11], [7, 93], [7, 107], [7, 107], [7, 107], [7, 107], [7, 107]]
single_node_split: True
best_l after optimization: -5.82916259765625 with beta sum per layer: [90.84039306640625, 0.0, 28.694578170776367, 0.0, 0.0, 1.4512125253677368, 204.24610900878906, 1457.8935546875]
optimal alpha/beta time: 0.8151941299438477
This batch time : update_bounds func: 1.2122	 prepare: 0.1181	 bound: 0.8155	 transfer: 0.0223	 finalize: 0.2549
Accumulated time: update_bounds func: 19.3242	 prepare: 1.1982	 bound: 15.9762	 transfer: 0.0223	 finalize: 1.8979
batch bounding time:  1.2131671905517578
Current worst domains: [-0.2561814785003662, -0.25408029556274414, -0.2520449161529541, -0.24215984344482422, -0.2416977882385254, -0.23009634017944336, -0.22919726371765137, -0.22493982315063477, -0.2243180274963379, -0.2237248420715332]
length of domains: 2439
Total time: 1.4103	 pickout: 0.1020	 decision: 0.0603	 get_bound: 1.2149	 add_domain: 0.0331
Current lb:-0.2561814785003662
10706 neurons visited

splitting decisions: [[7, 141], [6, 68], [7, 93], [2, 190], [6, 68], [7, 93], [7, 93], [6, 68], [7, 11], [2, 190]]
single_node_split: True
best_l after optimization: -24.531227111816406 with beta sum per layer: [95.76974487304688, 0.0, 24.247146606445312, 0.0, 0.0, 1.9364696741104126, 178.32565307617188, 1537.82177734375]
optimal alpha/beta time: 0.8135969638824463
This batch time : update_bounds func: 1.2129	 prepare: 0.1157	 bound: 0.8139	 transfer: 0.0210	 finalize: 0.2609
Accumulated time: update_bounds func: 20.5371	 prepare: 1.3139	 bound: 16.7901	 transfer: 0.0210	 finalize: 2.1588
batch bounding time:  1.2138566970825195
Current worst domains: [-0.20949935913085938, -0.20461010932922363, -0.20151042938232422, -0.19048714637756348, -0.19039702415466309, -0.18799853324890137, -0.18788862228393555, -0.18674111366271973, -0.18429970741271973, -0.1704874038696289]
length of domains: 2307
Total time: 1.4014	 pickout: 0.0974	 decision: 0.0604	 get_bound: 1.2156	 add_domain: 0.0279
Current lb:-0.20949935913085938
11706 neurons visited

splitting decisions: [[7, 11], [7, 141], [7, 11], [7, 141], [7, 141], [7, 141], [7, 154], [7, 11], [2, 190], [6, 68]]
single_node_split: True
best_l after optimization: -36.37527084350586 with beta sum per layer: [85.08741760253906, 0.0, 25.042049407958984, 0.0, 0.0, 2.4180073738098145, 220.09811401367188, 1564.4736328125]
optimal alpha/beta time: 0.8117389678955078
This batch time : update_bounds func: 1.1990	 prepare: 0.1172	 bound: 0.8121	 transfer: 0.0219	 finalize: 0.1208
Accumulated time: update_bounds func: 21.7361	 prepare: 1.4311	 bound: 17.6022	 transfer: 0.0219	 finalize: 2.2797
batch bounding time:  1.199763298034668
Current worst domains: [-0.17536115646362305, -0.16396570205688477, -0.15212607383728027, -0.1506814956665039, -0.14008736610412598, -0.13447880744934082, -0.13101792335510254, -0.12251901626586914, -0.12206673622131348, -0.12093067169189453]
length of domains: 2006
Total time: 1.3835	 pickout: 0.1040	 decision: 0.0607	 get_bound: 1.2013	 add_domain: 0.0175
Current lb:-0.17536115646362305
12706 neurons visited

splitting decisions: [[7, 141], [7, 141], [7, 141], [7, 141], [7, 154], [7, 141], [7, 58], [7, 154], [7, 154], [7, 154]]
single_node_split: True
best_l after optimization: -52.3609733581543 with beta sum per layer: [82.45305633544922, 0.0, 16.85403060913086, 0.0, 0.0, 0.0, 214.56436157226562, 1572.2294921875]
optimal alpha/beta time: 0.8144631385803223
This batch time : update_bounds func: 1.0749	 prepare: 0.1169	 bound: 0.8148	 transfer: 0.0227	 finalize: 0.1190
Accumulated time: update_bounds func: 22.8109	 prepare: 1.5480	 bound: 18.4170	 transfer: 0.0227	 finalize: 2.3986
batch bounding time:  1.0756659507751465
Current worst domains: [-0.10817098617553711, -0.09844255447387695, -0.08759474754333496, -0.08586502075195312, -0.08436226844787598, -0.08368158340454102, -0.08330321311950684, -0.08129572868347168, -0.0673530101776123, -0.06618428230285645]
length of domains: 1566
Total time: 1.3671	 pickout: 0.1062	 decision: 0.1762	 get_bound: 1.0772	 add_domain: 0.0075
Current lb:-0.10817098617553711
13706 neurons visited

splitting decisions: [[7, 154], [6, 129], [6, 97], [7, 154], [7, 58], [7, 154], [7, 154], [2, 190], [7, 154], [7, 58]]
single_node_split: True
best_l after optimization: -71.82786560058594 with beta sum per layer: [79.9938735961914, 0.0, 15.679847717285156, 0.0, 0.0, 0.6470334529876709, 187.58712768554688, 1686.3341064453125]
optimal alpha/beta time: 0.8119034767150879
This batch time : update_bounds func: 1.0678	 prepare: 0.1169	 bound: 0.8122	 transfer: 0.0211	 finalize: 0.1162
Accumulated time: update_bounds func: 23.8787	 prepare: 1.6649	 bound: 19.2292	 transfer: 0.0211	 finalize: 2.5148
batch bounding time:  1.0685465335845947
Current worst domains: [-0.05440664291381836, -0.04731154441833496, -0.04645895957946777, -0.04157400131225586, -0.02894902229309082, -0.0287477970123291, -0.02869129180908203, -0.026778697967529297, -0.02594161033630371, -0.025891542434692383]
length of domains: 1085
Total time: 1.3305	 pickout: 0.1032	 decision: 0.1554	 get_bound: 1.0700	 add_domain: 0.0020
Current lb:-0.05440664291381836
14706 neurons visited

splitting decisions: [[6, 129], [7, 154], [7, 154], [7, 61], [7, 154], [7, 58], [7, 58], [7, 58], [7, 141], [2, 190]]
single_node_split: True
best_l after optimization: -83.23072052001953 with beta sum per layer: [87.89215087890625, 0.0, 18.587533950805664, 0.0, 0.0, 2.7563889026641846, 201.83096313476562, 1772.443359375]
optimal alpha/beta time: 0.7796003818511963
This batch time : update_bounds func: 1.0351	 prepare: 0.1173	 bound: 0.7799	 transfer: 0.0223	 finalize: 0.1141
Accumulated time: update_bounds func: 24.9138	 prepare: 1.7823	 bound: 20.0091	 transfer: 0.0223	 finalize: 2.6289
batch bounding time:  1.0358519554138184
Current worst domains: [-0.014077186584472656, -0.01407623291015625, -0.014065980911254883, -0.014019250869750977, -0.014018058776855469, -0.01396942138671875, -0.013953447341918945, -0.013947010040283203, -0.013907670974731445, -0.013876199722290039]
length of domains: 586
Total time: 1.2768	 pickout: 0.1040	 decision: 0.1349	 get_bound: 1.0373	 add_domain: 0.0005
Current lb:-0.014077186584472656
15706 neurons visited

splitting decisions: [[6, 127], [7, 109], [7, 141], [7, 141], [2, 190], [7, 124], [7, 141], [6, 129], [6, 188], [7, 109]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -96.61726379394531 with beta sum per layer: [82.24736022949219, 0.1495353877544403, 23.259119033813477, 0.0, 0.0, 5.600848197937012, 222.0892333984375, 1707.08740234375]
optimal alpha/beta time: 0.012194156646728516
This batch time : update_bounds func: 0.2616	 prepare: 0.1167	 bound: 0.0125	 transfer: 0.0210	 finalize: 0.1100
Accumulated time: update_bounds func: 25.1753	 prepare: 1.8989	 bound: 20.0216	 transfer: 0.0210	 finalize: 2.7389
batch bounding time:  0.2623326778411865
Current worst domains: [-0.002141714096069336, -0.0020444393157958984, -0.0019502639770507812, -0.001941680908203125, -0.0019407272338867188, -0.001920938491821289, -0.0018849372863769531, -0.001859903335571289, -0.0018267631530761719, -0.0018239021301269531]
length of domains: 86
Total time: 0.4787	 pickout: 0.1027	 decision: 0.1120	 get_bound: 0.2637	 add_domain: 0.0003
Current lb:-0.002141714096069336
16706 neurons visited

splitting decisions: [[6, 15], [7, 93], [7, 196], [7, 11], [6, 97], [6, 127], [2, 190], [7, 93], [7, 185], [6, 15]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -17.86046600341797 with beta sum per layer: [18.82538414001465, 0.0, 8.838994979858398, 0.0, 0.0, 3.102454662322998, 28.759754180908203, 313.55523681640625]
optimal alpha/beta time: 0.012143373489379883
This batch time : update_bounds func: 0.0567	 prepare: 0.0218	 bound: 0.0124	 transfer: 0.0022	 finalize: 0.0199
Accumulated time: update_bounds func: 25.2320	 prepare: 1.9207	 bound: 20.0340	 transfer: 0.0022	 finalize: 2.7588
batch bounding time:  0.056884765625
Current worst domains: []
length of domains: 0
Total time: 0.1420	 pickout: 0.0208	 decision: 0.0641	 get_bound: 0.0571	 add_domain: 0.0000
No domains left, verification finished!
Image 950 pidx 2 verify end, Time cost: 30.51525044441223
950 999
[[950, 0, 0, 13.906233072280884, 0, -1], [950, 0, 0, 436.01789808273315, 0, -2], [950, 0.6815133094787598, 0, 0.00015878677368164062, 0, 0], [950, 999, 4, 2.8785626888275146, 0, 1], [950, 999, 16878, 30.51525044441223, 0, 2]]
##### [0:950] Tested against 3 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 200]) != torch.Size([2, 9, 1, 200]))
0 /27 torch.Size([1, 200])
1 /29 torch.Size([1, 200])
2 /31 torch.Size([1, 200])
3 /33 torch.Size([1, 200])
4 /35 torch.Size([1, 200])
5 /37 torch.Size([1, 200])
6 /39 torch.Size([1, 200])
7 /41 torch.Size([1, 200])
best_l after optimization: 4.8401265144348145 with beta sum per layer: []
optimal alpha/beta time: 1.4798097610473633
alpha-CROWN with fixed intermediate bounds: tensor([[-4.8401]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-4.8401265144348145
layer 0 size torch.Size([200]) unstable 25
layer 1 size torch.Size([200]) unstable 47
layer 2 size torch.Size([200]) unstable 28
layer 3 size torch.Size([200]) unstable 36
layer 4 size torch.Size([200]) unstable 48
layer 5 size torch.Size([200]) unstable 70
layer 6 size torch.Size([200]) unstable 115
layer 7 size torch.Size([200]) unstable 146
# of unstable neurons: 515
splitting decisions: [[7, 177]]
single_node_split: True
best_l after optimization: 9.109138488769531 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.7606287002563477
This batch time : update_bounds func: 0.7634	 prepare: 0.0016	 bound: 0.7608	 transfer: 0.0007	 finalize: 0.0003
Accumulated time: update_bounds func: 25.9955	 prepare: 1.9223	 bound: 20.7948	 transfer: 0.0007	 finalize: 2.7591
batch bounding time:  0.7634692192077637
Current worst domains: [-4.5790863037109375, -4.530052185058594]
length of domains: 2
Total time: 0.7876	 pickout: 0.0010	 decision: 0.0230	 get_bound: 0.7635	 add_domain: 0.0001
Current lb:-4.5790863037109375
2 neurons visited

splitting decisions: [[7, 111], [7, 111]]
single_node_split: True
best_l after optimization: 15.657347679138184 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5192515850067139]
optimal alpha/beta time: 0.7591664791107178
This batch time : update_bounds func: 0.7624	 prepare: 0.0018	 bound: 0.7594	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 26.7579	 prepare: 1.9241	 bound: 21.5542	 transfer: 0.0007	 finalize: 2.7596
batch bounding time:  0.7624309062957764
Current worst domains: [-4.442875862121582, -4.394165515899658, -3.4358439445495605, -3.3844618797302246]
length of domains: 4
Total time: 0.7864	 pickout: 0.0011	 decision: 0.0227	 get_bound: 0.7625	 add_domain: 0.0002
Current lb:-4.442875862121582
6 neurons visited

splitting decisions: [[7, 110], [7, 110], [7, 110], [7, 110]]
single_node_split: True
best_l after optimization: 29.428998947143555 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0140228271484375]
optimal alpha/beta time: 0.7690765857696533
This batch time : update_bounds func: 0.7733	 prepare: 0.0022	 bound: 0.7693	 transfer: 0.0008	 finalize: 0.0010
Accumulated time: update_bounds func: 27.5311	 prepare: 1.9262	 bound: 22.3235	 transfer: 0.0008	 finalize: 2.7606
batch bounding time:  0.7733080387115479
Current worst domains: [-4.317082405090332, -4.2724785804748535, -4.170444011688232, -4.113279342651367, -3.285447835922241, -3.219587802886963, -3.0416431427001953, -3.0090348720550537]
length of domains: 8
Total time: 0.7983	 pickout: 0.0014	 decision: 0.0230	 get_bound: 0.7733	 add_domain: 0.0005
Current lb:-4.317082405090332
14 neurons visited

splitting decisions: [[7, 95], [7, 95], [7, 95], [7, 95], [7, 95], [7, 92], [7, 95], [7, 178]]
single_node_split: True
best_l after optimization: 55.77568054199219 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.367767333984375]
optimal alpha/beta time: 0.7609720230102539
This batch time : update_bounds func: 0.7668	 prepare: 0.0029	 bound: 0.7612	 transfer: 0.0009	 finalize: 0.0018
Accumulated time: update_bounds func: 28.2979	 prepare: 1.9291	 bound: 23.0847	 transfer: 0.0009	 finalize: 2.7623
batch bounding time:  0.7668089866638184
Current worst domains: [-4.197168827056885, -4.164666175842285, -4.155709743499756, -4.109737396240234, -4.036698341369629, -4.025241374969482, -3.982564926147461, -3.966752052307129, -3.1331865787506104, -3.067260980606079]
length of domains: 16
Total time: 0.7931	 pickout: 0.0021	 decision: 0.0235	 get_bound: 0.7668	 add_domain: 0.0006
Current lb:-4.197168827056885
30 neurons visited

splitting decisions: [[7, 138], [7, 138], [7, 178], [7, 178], [7, 138], [7, 138], [7, 178], [7, 178], [7, 92], [7, 95]]
single_node_split: True
best_l after optimization: 105.16844940185547 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 46.721824645996094]
optimal alpha/beta time: 0.7624878883361816
This batch time : update_bounds func: 0.7719	 prepare: 0.0044	 bound: 0.7627	 transfer: 0.0011	 finalize: 0.0036
Accumulated time: update_bounds func: 29.0698	 prepare: 1.9335	 bound: 23.8474	 transfer: 0.0011	 finalize: 2.7659
batch bounding time:  0.7719388008117676
Current worst domains: [-4.086735725402832, -4.0499725341796875, -4.046872138977051, -3.999136447906494, -3.9657270908355713, -3.9427359104156494, -3.920010566711426, -3.90914249420166, -3.8923609256744385, -3.8645949363708496]
length of domains: 32
Total time: 0.8004	 pickout: 0.0034	 decision: 0.0237	 get_bound: 0.7720	 add_domain: 0.0013
Current lb:-4.086735725402832
62 neurons visited

splitting decisions: [[7, 178], [7, 178], [7, 138], [7, 138], [7, 178], [7, 178], [7, 178], [7, 178], [7, 138], [7, 138]]
single_node_split: True
best_l after optimization: 198.220703125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 115.01499938964844]
optimal alpha/beta time: 0.764631986618042
This batch time : update_bounds func: 0.7806	 prepare: 0.0074	 bound: 0.7649	 transfer: 0.0016	 finalize: 0.0067
Accumulated time: update_bounds func: 29.8504	 prepare: 1.9409	 bound: 24.6123	 transfer: 0.0016	 finalize: 2.7726
batch bounding time:  0.7806718349456787
Current worst domains: [-3.9793295860290527, -3.94134521484375, -3.941052198410034, -3.891356945037842, -3.846841812133789, -3.8216590881347656, -3.8205716609954834, -3.8083527088165283, -3.8005497455596924, -3.7788920402526855]
length of domains: 64
Total time: 0.8149	 pickout: 0.0059	 decision: 0.0248	 get_bound: 0.7808	 add_domain: 0.0035
Current lb:-3.9793295860290527
126 neurons visited

splitting decisions: [[6, 153], [7, 160], [7, 160], [7, 160], [7, 160], [7, 160], [7, 160], [7, 160], [7, 160], [7, 160]]
single_node_split: True
best_l after optimization: 365.4300842285156 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4608969986438751, 273.328857421875]
optimal alpha/beta time: 0.7725844383239746
This batch time : update_bounds func: 0.8021	 prepare: 0.0136	 bound: 0.7729	 transfer: 0.0025	 finalize: 0.0129
Accumulated time: update_bounds func: 30.6525	 prepare: 1.9545	 bound: 25.3852	 transfer: 0.0025	 finalize: 2.7855
batch bounding time:  0.802199125289917
Current worst domains: [-3.868328332901001, -3.840150833129883, -3.8366661071777344, -3.807671308517456, -3.7875943183898926, -3.737644672393799, -3.7118537425994873, -3.7117090225219727, -3.7103147506713867, -3.70481538772583]
length of domains: 128
Total time: 0.8455	 pickout: 0.0111	 decision: 0.0264	 get_bound: 0.8023	 add_domain: 0.0056
Current lb:-3.868328332901001
254 neurons visited

splitting decisions: [[7, 160], [7, 92], [7, 92], [7, 160], [7, 92], [7, 92], [7, 92], [6, 153], [7, 92], [7, 92]]
single_node_split: True
best_l after optimization: 663.444580078125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5926487445831299, 680.091552734375]
optimal alpha/beta time: 0.7713468074798584
This batch time : update_bounds func: 0.8265	 prepare: 0.0258	 bound: 0.7716	 transfer: 0.0046	 finalize: 0.0242
Accumulated time: update_bounds func: 31.4790	 prepare: 1.9803	 bound: 26.1568	 transfer: 0.0046	 finalize: 2.8097
batch bounding time:  0.8266744613647461
Current worst domains: [-3.768104076385498, -3.7457475662231445, -3.7451066970825195, -3.6965525150299072, -3.6907126903533936, -3.6340761184692383, -3.6272764205932617, -3.617417573928833, -3.6130361557006836, -3.608123302459717]
length of domains: 256
Total time: 0.8955	 pickout: 0.0219	 decision: 0.0343	 get_bound: 0.8269	 add_domain: 0.0124
Current lb:-3.768104076385498
510 neurons visited

splitting decisions: [[7, 92], [7, 72], [7, 72], [7, 92], [7, 72], [7, 72], [7, 92], [7, 72], [7, 72], [7, 72]]
single_node_split: True
best_l after optimization: 1190.7537841796875 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.137550354003906, 1663.6063232421875]
optimal alpha/beta time: 0.7819740772247314
This batch time : update_bounds func: 0.9408	 prepare: 0.0501	 bound: 0.7822	 transfer: 0.0086	 finalize: 0.0992
Accumulated time: update_bounds func: 32.4198	 prepare: 2.0304	 bound: 26.9390	 transfer: 0.0086	 finalize: 2.9089
batch bounding time:  0.9411976337432861
Current worst domains: [-3.6827170848846436, -3.679203748703003, -3.6775565147399902, -3.627112627029419, -3.6152865886688232, -3.56113338470459, -3.546170234680176, -3.542520046234131, -3.5349464416503906, -3.533883810043335]
length of domains: 512
Total time: 1.0512	 pickout: 0.0418	 decision: 0.0424	 get_bound: 0.9418	 add_domain: 0.0251
Current lb:-3.6827170848846436
1022 neurons visited

splitting decisions: [[7, 153], [7, 123], [7, 72], [7, 123], [7, 72], [7, 123], [7, 153], [7, 153], [7, 72], [7, 153]]
single_node_split: True
best_l after optimization: 2119.753173828125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 82.50956726074219, 3798.879638671875]
optimal alpha/beta time: 0.7855191230773926
This batch time : update_bounds func: 1.0488	 prepare: 0.0980	 bound: 0.7858	 transfer: 0.0162	 finalize: 0.1475
Accumulated time: update_bounds func: 33.4686	 prepare: 2.1285	 bound: 27.7248	 transfer: 0.0162	 finalize: 3.0564
batch bounding time:  1.0495948791503906
Current worst domains: [-3.6315712928771973, -3.609330654144287, -3.580913543701172, -3.5723705291748047, -3.5569210052490234, -3.5262632369995117, -3.524033546447754, -3.4999117851257324, -3.485321044921875, -3.4832029342651367]
length of domains: 1012
Total time: 1.2427	 pickout: 0.0849	 decision: 0.0549	 get_bound: 1.0510	 add_domain: 0.0518
Current lb:-3.6315712928771973
2022 neurons visited

splitting decisions: [[7, 123], [7, 123], [7, 153], [7, 153], [7, 123], [7, 154], [6, 129], [7, 123], [7, 123], [7, 123]]
single_node_split: True
best_l after optimization: 2387.268310546875 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 185.92462158203125, 3886.48095703125]
optimal alpha/beta time: 0.786466121673584
This batch time : update_bounds func: 1.0045	 prepare: 0.1005	 bound: 0.7867	 transfer: 0.0163	 finalize: 0.0997
Accumulated time: update_bounds func: 34.4730	 prepare: 2.2290	 bound: 28.5115	 transfer: 0.0163	 finalize: 3.1561
batch bounding time:  1.0051641464233398
Current worst domains: [-3.531975269317627, -3.5290393829345703, -3.525094985961914, -3.5164051055908203, -3.5089075565338135, -3.501880168914795, -3.477508068084717, -3.463895559310913, -3.436525583267212, -3.436063766479492]
length of domains: 1512
Total time: 1.3301	 pickout: 0.0882	 decision: 0.1074	 get_bound: 1.0065	 add_domain: 0.1280
Current lb:-3.531975269317627
3022 neurons visited

splitting decisions: [[7, 154], [6, 153], [7, 154], [7, 154], [7, 153], [7, 153], [6, 129], [7, 153], [7, 153], [7, 153]]
single_node_split: True
best_l after optimization:bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,
 2482.223876953125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 1.2784804105758667, 184.55624389648438, 3355.24462890625]
optimal alpha/beta time: 0.7963051795959473
This batch time : update_bounds func: 1.0944	 prepare: 0.1014	 bound: 0.7966	 transfer: 0.0156	 finalize: 0.1795
Accumulated time: update_bounds func: 35.5675	 prepare: 2.3304	 bound: 29.3081	 transfer: 0.0156	 finalize: 3.3355
batch bounding time:  1.0952658653259277
Current worst domains: [-3.480726718902588, -3.4805281162261963, -3.469015598297119, -3.4546446800231934, -3.447735071182251, -3.44525146484375, -3.4127848148345947, -3.4025282859802246, -3.3978700637817383, -3.3864946365356445]
length of domains: 2012
Total time: 1.2983	 pickout: 0.0906	 decision: 0.0541	 get_bound: 1.0967	 add_domain: 0.0568
Current lb:-3.480726718902588
4022 neurons visited

splitting decisions: [[6, 97], [7, 185], [7, 185], [7, 154], [7, 154], [6, 129], [7, 154], [6, 129], [7, 153], [7, 154]]
single_node_split: True
best_l after optimization: 2534.927978515625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 1.1486276388168335, 180.3634033203125, 3036.2822265625]
optimal alpha/beta time: 0.7904212474822998
This batch time : update_bounds func: 1.1009	 prepare: 0.1017	 bound: 0.7907	 transfer: 0.0160	 finalize: 0.1911
Accumulated time: update_bounds func: 36.6684	 prepare: 2.4321	 bound: 30.0988	 transfer: 0.0160	 finalize: 3.5266
batch bounding time:  1.1017515659332275
Current worst domains: [-3.4466471672058105, -3.439150333404541, -3.4359853267669678, -3.402637481689453, -3.4021248817443848, -3.3675596714019775, -3.362326145172119, -3.347548246383667, -3.3436408042907715, -3.3362014293670654]
length of domains: 2512
Total time: 1.3080	 pickout: 0.0904	 decision: 0.0548	 get_bound: 1.1032	 add_domain: 0.0595
Current lb:-3.4466471672058105
5022 neurons visited

splitting decisions: [[6, 68], [6, 153], [6, 68], [7, 185], [7, 185], [7, 154], [7, 185], [6, 97], [7, 185], [7, 185]]
single_node_split: True
best_l after optimization: 2519.28857421875 with beta sum per layer: [0.0, 0.0, 0.9480288028717041, 0.0, 0.0, 16.313213348388672, 367.10955810546875, 2861.017822265625]
optimal alpha/beta time: 0.8004863262176514
This batch time : update_bounds func: 1.0345	 prepare: 0.1061	 bound: 0.8008	 transfer: 0.0229	 finalize: 0.1033
Accumulated time: update_bounds func: 37.7029	 prepare: 2.5382	 bound: 30.8996	 transfer: 0.0229	 finalize: 3.6300
batch bounding time:  1.0352764129638672
Current worst domains: [-3.4076757431030273, -3.3914623260498047, -3.362157106399536, -3.3598034381866455, -3.357253074645996, -3.321892738342285, -3.318967819213867, -3.318939685821533, -3.3127353191375732, -3.2989487648010254]
length of domains: 3012
Total time: 1.4852	 pickout: 0.0919	 decision: 0.1652	 get_bound: 1.0367	 add_domain: 0.1914
Current lb:-3.4076757431030273
6022 neurons visited

splitting decisions: [[7, 28], [7, 28], [6, 97], [1, 33], [1, 33], [7, 185], [7, 185], [6, 97], [7, 185], [6, 97]]
single_node_split: True
best_l after optimization: 2452.562744140625 with beta sum per layer: [0.0, 0.1181751936674118, 2.4634830951690674, 0.0, 0.0, 66.77153015136719, 595.5889892578125, 2662.932861328125]
optimal alpha/beta time: 0.8064775466918945
This batch time : update_bounds func: 1.1856	 prepare: 0.1084	 bound: 0.8068	 transfer: 0.0221	 finalize: 0.2469
Accumulated time: update_bounds func: 38.8886	 prepare: 2.6466	 bound: 31.7063	 transfer: 0.0221	 finalize: 3.8769
batch bounding time:  1.186608076095581
Current worst domains: [-3.3819029331207275, -3.3663129806518555, -3.329317569732666, -3.2951531410217285, -3.28574800491333, -3.2820162773132324, -3.274904251098633, -3.274566888809204, -3.274522542953491, -3.2662904262542725]
length of domains: 3512
Total time: 1.4034	 pickout: 0.0950	 decision: 0.0561	 get_bound: 1.1882	 add_domain: 0.0641
Current lb:-3.3819029331207275
7022 neurons visited

time out!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Image 950 pidx 3 verify end, Time cost: 17.393492221832275
950 -3.3819029331207275
[[  950.             0.             0.            13.90623307
      0.            -1.        ]
 [  950.             0.             0.           436.01789808
      0.            -2.        ]
 [  950.             0.68151331     0.             0.00015879
      0.             0.        ]
 [  950.           999.             4.             2.87856269
      0.             1.        ]
 [  950.           999.         16878.            30.51525044
      0.             2.        ]
 [  950.            -3.38190293  7022.            17.39349222
      0.             3.        ]]
final verified acc: 0.0%[1]
Total verification count: 1 total verified: 0
mean time [total:1]: 500.71159529685974
mean time [cnt:1]: 500.71159529685974
