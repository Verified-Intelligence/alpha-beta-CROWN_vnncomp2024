Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: cifar_cnn_a_adv4.model
  name: cnn_4layer_adv4
data:
  start: 137
  end: 138
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.00784313725
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 4096
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 30
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 20:53:18 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.1256) tensor(-1.9889) tensor(-0.0131)
############################
epsilon after preprocessing: tensor([[[[0.0317]],

         [[0.0322]],

         [[0.0300]]]]), data_max = tensor([[[[2.0587]],

         [[2.1256]],

         [[2.1154]]]]), data_min = tensor([[[[-1.9889]],

         [[-1.9807]],

         [[-1.7076]]]])
Task length: 1
saving results to Verified_ret_[cnn_4layer_adv4]_start=137_end=138_iter=20_b=4096_timeout=30_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 6, correct label 6, image norm 2034.6937255859375, logits tensor([ -9.6799, -11.3186,  -7.1485,  -7.7678,  -7.1579,  -7.7853,  -6.7559,
         -8.8314, -11.0681, -10.7396], device='cuda:0',
       grad_fn=<SelectBackward>)
##### PGD attack: True label: 6, Tested against: ['all'] ######
pgd prediction: tensor([ -9.3618, -11.1502,  -6.8335,  -7.5359,  -6.9209,  -7.5484,  -6.7122,
         -8.5657, -10.7197, -10.5993], device='cuda:0',
       grad_fn=<SqueezeBackward1>)
attack margin tensor([2.6497, 4.4380, 0.1214, 0.8237, 0.2087, 0.8363,    inf, 1.8536, 4.0075,
        3.8871], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[ -9.6799, -11.3186,  -7.1485,  -7.7678,  -7.1579,  -7.7853,  -6.7559,
          -8.8314, -11.0681, -10.7396]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.0770,  3.6356, -0.0456,  0.6438, -0.0098,  0.6527,  1.4810,  3.1695,
          3.1553]], device='cuda:0') None
best_l after optimization: -14.943107604980469 with beta sum per layer: []
alpha/beta optimization time: 8.030231714248657
initial alpha-CROWN bounds: tensor([[ 2.1022,  3.6673, -0.0332,  0.6533,  0.0066,  0.6624,  1.4954,  3.2059,
          3.1832]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-0.0332, device='cuda:0', grad_fn=<MinBackward1>)
Sorted order for labels to verify: [2, 4, 3, 5, 7, 0, 9, 8, 1, 6]
##### [0:137] Tested against 2 ######
Model prediction is: tensor([[ -9.6799, -11.3186,  -7.1485,  -7.7678,  -7.1579,  -7.7853,  -6.7559,
          -8.8314, -11.0681, -10.7396]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /10 start_node /11
setting alpha for layer /10 start_node /21
not setting layer /10 start_node /23 because shape mismatch (torch.Size([2, 1, 1, 16, 16, 16]) != torch.Size([2, 9, 1, 16, 16, 16]))
setting alpha for layer /12 start_node /21
not setting layer /12 start_node /23 because shape mismatch (torch.Size([2, 1, 1, 32, 8, 8]) != torch.Size([2, 9, 1, 32, 8, 8]))
not setting layer /22 start_node /23 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /9 torch.Size([1, 16, 16, 16])
1 /11 torch.Size([1, 32, 8, 8])
2 /21 torch.Size([1, 100])
best_l after optimization: 0.033193230628967285 with beta sum per layer: []
alpha/beta optimization time: 2.0684092044830322
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0332]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.033193230628967285
layer 0 size torch.Size([4096]) unstable 390
layer 1 size torch.Size([2048]) unstable 237
layer 2 size torch.Size([100]) unstable 9
-----------------
# of unstable neurons: 636
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 16, 16]) pre split depth:  8
batch:  torch.Size([1, 16, 16, 16]) post split depth:  8
splitting decisions: 
split level 0: [2, 33] 
split level 1: [2, 5] 
split level 2: [2, 62] 
split level 3: [2, 61] 
split level 4: [2, 27] 
split level 5: [1, 20] 
split level 6: [1, 310] 
split level 7: [1, 1114] 
regular batch size: 2*128, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -26.2015438079834 with beta sum per layer: [0.0, 0.0, 0.0]
alpha/beta optimization time: 0.011916637420654297
This batch time : update_bounds func: 0.0591	 prepare: 0.0204	 bound: 0.0123	 transfer: 0.0102	 finalize: 0.0154
Accumulated time: update_bounds func: 0.0591	 prepare: 0.0204	 bound: 0.0123	 transfer: 0.0102	 finalize: 0.0154
batch bounding time:  0.059372901916503906
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.3665	 pickout: 0.0011	 decision: 0.2731	 get_bound: 0.0922	 add_domain: 0.0001
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 3.305732250213623

Image 137 label 2 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 3.368129253387451
137 1.0000000116860974e-07
##### [0:137] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 0.006579399108886719
Image 137 label 4 verification end, final lower bound 0.006579399108886719, upper bound inf, time: 0.0004341602325439453
137 0.006579399108886719
##### [0:137] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 0.6533274054527283
Image 137 label 3 verification end, final lower bound 0.6533274054527283, upper bound inf, time: 0.0003726482391357422
137 0.6533274054527283/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:462: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(preprocess_cifar(eps_temp, perturbation=True)).reshape(1,-1,1,1)

##### [0:137] Tested against 5 ######
Initial alpha-CROWN verified for label 5 with bound 0.6623713374137878
Image 137 label 5 verification end, final lower bound 0.6623713374137878, upper bound inf, time: 0.000400543212890625
137 0.6623713374137878
##### [0:137] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 1.4954084157943726
Image 137 label 7 verification end, final lower bound 1.4954084157943726, upper bound inf, time: 0.00037980079650878906
137 1.4954084157943726
##### [0:137] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 2.1022324562072754
Image 137 label 0 verification end, final lower bound 2.1022324562072754, upper bound inf, time: 0.00037407875061035156
137 2.1022324562072754
##### [0:137] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 3.1831798553466797
Image 137 label 9 verification end, final lower bound 3.1831798553466797, upper bound inf, time: 0.0003781318664550781
137 3.1831798553466797
##### [0:137] Tested against 8 ######
Initial alpha-CROWN verified for label 8 with bound 3.205925464630127
Image 137 label 8 verification end, final lower bound 3.205925464630127, upper bound inf, time: 0.0003845691680908203
137 3.205925464630127
##### [0:137] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 3.6673026084899902
Image 137 label 1 verification end, final lower bound 3.6673026084899902, upper bound inf, time: 0.00037384033203125
137 3.6673026084899902
##### [0:137] Tested against 6 ######
groundtruth label, skip!
Result: image 137 verification success (with branch and bound)!
Wall time: 14.572756052017212

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [137]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 13.276568412780762
