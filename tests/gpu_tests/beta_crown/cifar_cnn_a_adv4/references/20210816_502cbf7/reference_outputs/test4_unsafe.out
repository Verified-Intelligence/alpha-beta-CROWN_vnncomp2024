Experiments at Fri Nov  5 22:11:04 2021 on CCI-2CPKMH3
Namespace(batch_size=4096, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab', conv_mode='patches', crown=False, data='CIFAR_SDP', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=133, epsilon=None, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=20, load='sdp_models/cnn_a_adv4.model', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='cnn_4layer_adv4', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='skip', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=132, timeout=30.0)
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.1256) tensor(-1.9889) tensor(-0.0131)
############################
epsilon after preprocession: tensor([[[[0.0317]],

         [[0.0322]],

         [[0.0300]]]]), data_max = tensor([[[[2.0587]],

         [[2.1256]],

         [[2.1154]]]]), data_min = tensor([[[[-1.9889]],

         [[-1.9807]],

         [[-1.7076]]]])
saving results to Verified_ret_[cnn_4layer_adv4]_start=132_end=133_iter=20_b=4096_int-beta=False_timeout=30.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  1  correct label  1 logits tensor([-16.9577, -15.7462, -20.8146, -22.2311, -21.1959, -22.5957, -22.3001,
        -21.6833, -16.5570, -15.9207], grad_fn=<SelectBackward>)
Model prediction is: tensor([[-16.9577, -15.7462, -20.8146, -22.2311, -21.1959, -22.5957, -22.3001,
         -21.6833, -16.5570, -15.9207]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: -32.39147186279297 with beta sum per layer: []
optimal alpha/beta time: 2.9756920337677
initial alpha-CROWN bounds: tensor([[ 0.6940,  4.3272,  5.7119,  4.5808,  6.0608,  5.7544,  5.0704,  0.2538,
         -0.0617]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### [0:132] Tested against 0 ######
init opt crown verified for label 0 with bound 0.6939568519592285
Image 132 pidx 0 verify end, Time cost: 0.0003676414489746094
132 0.6939568519592285
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0]]
##### [0:132] Tested against 1 ######
correct label, skip!
##### [0:132] Tested against 2 ######
init opt crown verified for label 2 with bound 4.327208995819092
Image 132 pidx 2 verify end, Time cost: 0.00026869773864746094
132 4.327208995819092
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2]]
##### [0:132] Tested against 3 ######
init opt crown verified for label 3 with bound 5.711886405944824
Image 132 pidx 3 verify end, Time cost: 0.0002110004425048828
132 5.711886405944824
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2], [132, 5.711886405944824, 0, 0.0002110004425048828, 0, 3]]
##### [0:132] Tested against 4 ######
init opt crown verified for label 4 with bound 4.580774307250977
Image 132 pidx 4 verify end, Time cost: 0.00014019012451171875
132 4.580774307250977
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2], [132, 5.711886405944824, 0, 0.0002110004425048828, 0, 3], [132, 4.580774307250977, 0, 0.00014019012451171875, 0, 4]]
##### [0:132] Tested against 5 ######
init opt crown verified for label 5 with bound 6.060781955718994
Image 132 pidx 5 verify end, Time cost: 0.00022864341735839844
132 6.060781955718994
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2], [132, 5.711886405944824, 0, 0.0002110004425048828, 0, 3], [132, 4.580774307250977, 0, 0.00014019012451171875, 0, 4], [132, 6.060781955718994, 0, 0.00022864341735839844, 0, 5]]
##### [0:132] Tested against 6 ######
init opt crown verified for label 6 with bound 5.754391193389893
Image 132 pidx 6 verify end, Time cost: 0.00011849403381347656
132 5.754391193389893
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2], [132, 5.711886405944824, 0, 0.0002110004425048828, 0, 3], [132, 4.580774307250977, 0, 0.00014019012451171875, 0, 4], [132, 6.060781955718994, 0, 0.00022864341735839844, 0, 5], [132, 5.754391193389893, 0, 0.00011849403381347656, 0, 6]]
##### [0:132] Tested against 7 ######
init opt crown verified for label 7 with bound 5.070389747619629
Image 132 pidx 7 verify end, Time cost: 0.00022864341735839844
132 5.070389747619629
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2], [132, 5.711886405944824, 0, 0.0002110004425048828, 0, 3], [132, 4.580774307250977, 0, 0.00014019012451171875, 0, 4], [132, 6.060781955718994, 0, 0.00022864341735839844, 0, 5], [132, 5.754391193389893, 0, 0.00011849403381347656, 0, 6], [132, 5.070389747619629, 0, 0.00022864341735839844, 0, 7]]
##### [0:132] Tested against 8 ######
init opt crown verified for label 8 with bound 0.2537693977355957
Image 132 pidx 8 verify end, Time cost: 0.00024008750915527344
132 0.2537693977355957
[[132, 0, 0, 3.6381630897521973, 0, -1], [132, 0.6939568519592285, 0, 0.0003676414489746094, 0, 0], [132, 0, 0, 0, 0, 1], [132, 4.327208995819092, 0, 0.00026869773864746094, 0, 2], [132, 5.711886405944824, 0, 0.0002110004425048828, 0, 3], [132, 4.580774307250977, 0, 0.00014019012451171875, 0, 4], [132, 6.060781955718994, 0, 0.00022864341735839844, 0, 5], [132, 5.754391193389893, 0, 0.00011849403381347656, 0, 6], [132, 5.070389747619629, 0, 0.00022864341735839844, 0, 7], [132, 0.2537693977355957, 0, 0.00024008750915527344, 0, 8]]
##### [0:132] Tested against 9 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /10 start_node /11
setting alpha for layer /10 start_node /21
not setting layer /10 start_node /23 because shape mismatch (torch.Size([2, 1, 1, 16, 16, 16]) != torch.Size([2, 9, 1, 16, 16, 16]))
setting alpha for layer /12 start_node /21
not setting layer /12 start_node /23 because shape mismatch (torch.Size([2, 1, 1, 32, 8, 8]) != torch.Size([2, 9, 1, 32, 8, 8]))
not setting layer /22 start_node /23 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /9 torch.Size([1, 16, 16, 16])
1 /11 torch.Size([1, 32, 8, 8])
2 /21 torch.Size([1, 100])
best_l after optimization: 0.06168782711029053 with beta sum per layer: []
optimal alpha/beta time: 0.6621522903442383
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0617]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.06168782711029053
layer 0 size torch.Size([4096]) unstable 432
layer 1 size torch.Size([2048]) unstable 131
layer 2 size torch.Size([100]) unstable 2
# of unstable neurons: 565
splitting decisions: [[1, 1252]]
single_node_split: True
best_l after optimization: 0.11566150188446045 with beta sum per layer: [0.0, 0.0, 0.0]
optimal alpha/beta time: 0.11694765090942383
This batch time : update_bounds func: 0.1180	 prepare: 0.0006	 bound: 0.1170	 transfer: 0.0003	 finalize: 0.0001
Accumulated time: update_bounds func: 0.1180	 prepare: 0.0006	 bound: 0.1170	 transfer: 0.0003	 finalize: 0.0001
batch bounding time:  0.11803984642028809
Current worst domains: [-0.05812788009643555, -0.0575336217880249]
length of domains: 2
Total time: 0.1314	 pickout: 0.0004	 decision: 0.0128	 get_bound: 0.1180	 add_domain: 0.0000
Current lb:-0.05812788009643555
2 neurons visited

splitting decisions: [[1, 1570], [1, 1570]]
single_node_split: True
best_l after optimization: 0.21526122093200684 with beta sum per layer: [0.0, 0.0, 0.0]
optimal alpha/beta time: 0.1178293228149414
This batch time : update_bounds func: 0.1193	 prepare: 0.0007	 bound: 0.1179	 transfer: 0.0005	 finalize: 0.0002
Accumulated time: update_bounds func: 0.2373	 prepare: 0.0013	 bound: 0.2349	 transfer: 0.0005	 finalize: 0.0003
batch bounding time:  0.11929893493652344
Current worst domains: [-0.05457770824432373, -0.05396437644958496, -0.05367112159729004, -0.053048014640808105]
length of domains: 4
Total time: 0.1303	 pickout: 0.0004	 decision: 0.0105	 get_bound: 0.1193	 add_domain: 0.0001
Current lb:-0.05457770824432373
6 neurons visited

splitting decisions: [[1, 1436], [1, 1436], [1, 1436], [1, 1436]]
single_node_split: True
best_l after optimization: 0.4046180248260498 with beta sum per layer: [0.0, 0.0, 0.0]
optimal alpha/beta time: 0.12233662605285645
This batch time : update_bounds func: 0.1239	 prepare: 0.0008	 bound: 0.1224	 transfer: 0.0003	 finalize: 0.0003
Accumulated time: update_bounds func: 0.3612	 prepare: 0.0021	 bound: 0.3573	 transfer: 0.0003	 finalize: 0.0006
batch bounding time:  0.12389826774597168
Current worst domains: [-0.05166882276535034, -0.05107259750366211, -0.05104649066925049, -0.0507696270942688, -0.0503995418548584, -0.05014395713806152, -0.050092101097106934, -0.04942488670349121]
length of domains: 8
Total time: 0.1351	 pickout: 0.0005	 decision: 0.0106	 get_bound: 0.1239	 add_domain: 0.0001
Current lb:-0.05166882276535034
14 neurons visited

splitting decisions: [[1, 1699], [1, 1699], [1, 1699], [1, 1699], [1, 1699], [1, 1699], [1, 1699], [1, 1699]]
single_node_split: True
best_l after optimization: 0.7626665830612183 with beta sum per layer: [0.0, 0.6530554294586182, 0.0]
optimal alpha/beta time: 0.12128353118896484
This batch time : update_bounds func: 0.1235	 prepare: 0.0013	 bound: 0.1214	 transfer: 0.0004	 finalize: 0.0005
Accumulated time: update_bounds func: 0.4847	 prepare: 0.0033	 bound: 0.4787	 transfer: 0.0004	 finalize: 0.0010
batch bounding time:  0.1235358715057373
Current worst domains: [-0.049614012241363525, -0.04907292127609253, -0.048889994621276855, -0.0486566424369812, -0.048306822776794434, -0.04807478189468384, -0.04780781269073486, -0.04745137691497803, -0.04728341102600098, -0.04728066921234131]
length of domains: 16
Total time: 0.1362	 pickout: 0.0007	 decision: 0.0117	 get_bound: 0.1236	 add_domain: 0.0003
Current lb:-0.049614012241363525
30 neurons visited

splitting decisions: [[1, 915], [1, 915], [1, 915], [1, 915], [1, 915], [1, 915], [1, 915], [1, 915], [1, 915], [1, 915]]
single_node_split: True
best_l after optimization: 1.4732125997543335 with beta sum per layer: [0.0, 1.3119328022003174, 0.0]
optimal alpha/beta time: 0.12478184700012207
This batch time : update_bounds func: 0.1281	 prepare: 0.0019	 bound: 0.1249	 transfer: 0.0006	 finalize: 0.0008
Accumulated time: update_bounds func: 0.6128	 prepare: 0.0052	 bound: 0.6036	 transfer: 0.0006	 finalize: 0.0018
batch bounding time:  0.12816691398620605
Current worst domains: [-0.04808598756790161, -0.04792213439941406, -0.04754459857940674, -0.04737567901611328, -0.047371506690979004, -0.047194719314575195, -0.04715454578399658, -0.04686152935028076, -0.04678201675415039, -0.046616315841674805]
length of domains: 32
Total time: 0.1420	 pickout: 0.0011	 decision: 0.0121	 get_bound: 0.1282	 add_domain: 0.0005
Current lb:-0.04808598756790161
62 neurons visited

splitting decisions: [[1, 1446], [1, 1446], [1, 1446], [1, 1446], [1, 1446], [1, 1446], [1, 1446], [1, 1446], [1, 1446], [1, 1446]]
single_node_split: True
best_l after optimization: 2.808617115020752 with beta sum per layer: [0.0, 4.6539788246154785, 0.0]
optimal alpha/beta time: 0.12358689308166504
This batch time : update_bounds func: 0.1296	 prepare: 0.0025	 bound: 0.1237	 transfer: 0.0018	 finalize: 0.0016
Accumulated time: update_bounds func: 0.7424	 prepare: 0.0077	 bound: 0.7272	 transfer: 0.0018	 finalize: 0.0034
batch bounding time:  0.12960505485534668
Current worst domains: [-0.04664123058319092, -0.04646265506744385, -0.04611372947692871, -0.04593050479888916, -0.04592478275299072, -0.04572606086730957, -0.04569888114929199, -0.045391976833343506, -0.04535079002380371, -0.04525291919708252]
length of domains: 64
Total time: 0.1455	 pickout: 0.0023	 decision: 0.0125	 get_bound: 0.1296	 add_domain: 0.0011
Current lb:-0.04664123058319092
126 neurons visited

splitting decisions: [[1, 1106], [1, 1428], [1, 1106], [1, 1428], [1, 1106], [1, 1428], [1, 1106], [1, 1428], [1, 1106], [1, 1106]]
single_node_split: True
best_l after optimization: 5.041205406188965 with beta sum per layer: [0.0, 22.551239013671875, 0.0]
optimal alpha/beta time: 0.13239645957946777
This batch time : update_bounds func: 0.1440	 prepare: 0.0044	 bound: 0.1325	 transfer: 0.0040	 finalize: 0.0030
Accumulated time: update_bounds func: 0.8864	 prepare: 0.0121	 bound: 0.8597	 transfer: 0.0040	 finalize: 0.0064
batch bounding time:  0.14400744438171387
Current worst domains: [-0.04554617404937744, -0.045231401920318604, -0.04501330852508545, -0.044823408126831055, -0.04469263553619385, -0.04451310634613037, -0.044347524642944336, -0.04425394535064697, -0.04415935277938843, -0.04415547847747803]
length of domains: 128
Total time: 0.1659	 pickout: 0.0038	 decision: 0.0157	 get_bound: 0.1441	 add_domain: 0.0024
Current lb:-0.04554617404937744
254 neurons visited

splitting decisions: [[1, 1428], [1, 1771], [1, 1771], [1, 38], [1, 1771], [1, 1771], [1, 38], [1, 38], [1, 1428], [1, 1771]]
single_node_split: True
best_l after optimization: 9.368904113769531 with beta sum per layer: [4.7313361167907715, 55.30940246582031, 0.0]
optimal alpha/beta time: 0.1464226245880127
This batch time : update_bounds func: 0.1683	 prepare: 0.0089	 bound: 0.1465	 transfer: 0.0067	 finalize: 0.0060
Accumulated time: update_bounds func: 1.0547	 prepare: 0.0210	 bound: 1.0062	 transfer: 0.0067	 finalize: 0.0125
batch bounding time:  0.16846179962158203
Current worst domains: [-0.0444754958152771, -0.04417979717254639, -0.043914079666137695, -0.04355359077453613, -0.04342246055603027, -0.043407976627349854, -0.043349266052246094, -0.04309225082397461, -0.043024659156799316, -0.042876601219177246]
length of domains: 256
Total time: 0.2065	 pickout: 0.0083	 decision: 0.0246	 get_bound: 0.1686	 add_domain: 0.0050
Current lb:-0.0444754958152771
510 neurons visited

splitting decisions: [[1, 38], [1, 38], [1, 38], [1, 38], [1, 38], [1, 1698], [1, 1698], [1, 38], [1, 38], [1, 1698]]
single_node_split: True
best_l after optimization: 17.54952621459961 with beta sum per layer: [10.74717903137207, 125.4971694946289, 0.0]
optimal alpha/beta time: 0.2035202980041504
This batch time : update_bounds func: 0.2439	 prepare: 0.0173	 bound: 0.2036	 transfer: 0.0109	 finalize: 0.0117
Accumulated time: update_bounds func: 1.2986	 prepare: 0.0383	 bound: 1.2098	 transfer: 0.0109	 finalize: 0.0242
batch bounding time:  0.2440938949584961
Current worst domains: [-0.04302549362182617, -0.04295909404754639, -0.04274487495422363, -0.042669475078582764, -0.04252547025680542, -0.04238998889923096, -0.042232632637023926, -0.04217398166656494, -0.0421527624130249, -0.04201751947402954]
length of domains: 512
Total time: 0.3102	 pickout: 0.0154	 decision: 0.0394	 get_bound: 0.2444	 add_domain: 0.0110
Current lb:-0.04302549362182617
1022 neurons visited

splitting decisions: [[1, 1698], [1, 1698], [1, 1698], [1, 1698], [1, 1698], [1, 1698], [1, 1428], [1, 1428], [1, 1698], [1, 1698]]
single_node_split: True
best_l after optimization: 32.368770599365234 with beta sum per layer: [22.287302017211914, 350.5511474609375, 0.0]
optimal alpha/beta time: 0.3116269111633301
This batch time : update_bounds func: 0.3908	 prepare: 0.0338	 bound: 0.3117	 transfer: 0.0209	 finalize: 0.0236
Accumulated time: update_bounds func: 1.6895	 prepare: 0.0721	 bound: 1.5215	 transfer: 0.0209	 finalize: 0.0478
batch bounding time:  0.3911452293395996
Current worst domains: [-0.041812896728515625, -0.04174685478210449, -0.04159271717071533, -0.041517794132232666, -0.04138284921646118, -0.04124796390533447, -0.041065216064453125, -0.04101163148880005, -0.04101157188415527, -0.040911078453063965]
length of domains: 1024
Total time: 0.5295	 pickout: 0.0292	 decision: 0.0855	 get_bound: 0.3918	 add_domain: 0.0231
Current lb:-0.041812896728515625
2046 neurons visited

splitting decisions: [[0, 3672], [0, 3672], [0, 1160], [0, 1160], [0, 1160], [0, 1160], [1, 1771], [0, 1160], [1, 1771], [1, 1428]]
single_node_split: True
best_l after optimization: 56.72453308105469 with beta sum per layer: [136.90219116210938, 913.3054809570312, 0.0]
optimal alpha/beta time: 0.5414090156555176
This batch time : update_bounds func: 0.7292	 prepare: 0.0660	 bound: 0.5415	 transfer: 0.0502	 finalize: 0.0698
Accumulated time: update_bounds func: 2.4187	 prepare: 0.1381	 bound: 2.0630	 transfer: 0.0502	 finalize: 0.1176
batch bounding time:  0.7299306392669678
Current worst domains: [-0.04058557748794556, -0.040520548820495605, -0.04051017761230469, -0.040448546409606934, -0.04036390781402588, -0.040280699729919434, -0.04022932052612305, -0.04020875692367554, -0.040010809898376465, -0.039993107318878174]
length of domains: 2048
Total time: 0.9980	 pickout: 0.0650	 decision: 0.1507	 get_bound: 0.7312	 add_domain: 0.0510
Current lb:-0.04058557748794556
4094 neurons visited

splitting decisions: [[1, 1117], [0, 1160], [1, 1117], [0, 1160], [1, 1428], [0, 1160], [1, 1428], [0, 1160], [1, 1117], [1, 1117]]
single_node_split: True
best_l after optimization: 98.77669525146484 with beta sum per layer: [358.46044921875, 2236.3642578125, 0.0]
optimal alpha/beta time: 1.0355274677276611
This batch time : update_bounds func: 1.4053	 prepare: 0.1382	 bound: 1.0356	 transfer: 0.0992	 finalize: 0.1291
Accumulated time: update_bounds func: 3.8240	 prepare: 0.2763	 bound: 3.0987	 transfer: 0.0992	 finalize: 0.2467
batch bounding time:  1.407205581665039
Current worst domains: [-0.03967016935348511, -0.039594948291778564, -0.039526939392089844, -0.039453327655792236, -0.03929638862609863, -0.03928732872009277, -0.039213597774505615, -0.039162278175354004, -0.03906375169754028, -0.03905612230300903]
length of domains: 4096
Total time: 1.9997	 pickout: 0.1350	 decision: 0.3041	 get_bound: 1.4104	 add_domain: 0.1502
Current lb:-0.03967016935348511
8190 neurons visited

splitting decisions: [[0, 3672], [0, 3672], [1, 1771], [1, 1771], [0, 3672], [1, 1771], [1, 1771], [0, 3672], [0, 3672], [1, 867]]
single_node_split: True
best_l after optimization: 179.95809936523438 with beta sum per layer: [800.8446655273438, 4956.83056640625, 0.0]
optimal alpha/beta time: 1.9325001239776611
This batch time : update_bounds func: 2.7293	 prepare: 0.2834	 bound: 1.9326	 transfer: 0.1961	 finalize: 0.3103
Accumulated time: update_bounds func: 6.5533	 prepare: 0.5598	 bound: 5.0313	 transfer: 0.1961	 finalize: 0.5570
batch bounding time:  2.732651710510254
Current worst domains: [-0.03853476047515869, -0.03850388526916504, -0.03845947980880737, -0.03842878341674805, -0.0383983850479126, -0.038323402404785156, -0.03829491138458252, -0.03821980953216553, -0.03796619176864624, -0.03789782524108887]
length of domains: 8113
Total time: 3.9878	 pickout: 0.3004	 decision: 0.6429	 get_bound: 2.7390	 add_domain: 0.3055
Current lb:-0.03853476047515869
16382 neurons visited

splitting decisions: [[1, 1117], [1, 1106], [1, 1117], [1, 1106], [1, 1106], [1, 1106], [1, 1117], [1, 1117], [1, 867], [1, 867]]
single_node_split: True
best_l after optimization: 216.06475830078125 with beta sum per layer: [671.9840698242188, 3432.64990234375, 0.0]
optimal alpha/beta time: 1.8869402408599854
This batch time : update_bounds func: 2.7944	 prepare: 0.2898	 bound: 1.8870	 transfer: 0.2081	 finalize: 0.4024
Accumulated time: update_bounds func: 9.3476	 prepare: 0.8495	 bound: 6.9183	 transfer: 0.2081	 finalize: 0.9594
batch bounding time:  2.7980847358703613
Current worst domains: [-0.03775829076766968, -0.03768336772918701, -0.037652671337127686, -0.037618279457092285, -0.037578046321868896, -0.03754335641860962, -0.03737843036651611, -0.03730356693267822, -0.03693288564682007, -0.036888837814331055]
length of domains: 12209
Total time: 4.1203	 pickout: 0.3041	 decision: 0.7673	 get_bound: 2.8048	 add_domain: 0.2441
Current lb:-0.03775829076766968
24574 neurons visited

splitting decisions: [[1, 867], [1, 867], [1, 867], [1, 867], [1, 867], [1, 867], [1, 867], [1, 867], [0, 1162], [0, 1162]]
single_node_split: True
best_l after optimization: 224.88697814941406 with beta sum per layer: [709.0570068359375, 3054.364013671875, 0.0]
optimal alpha/beta time: 1.887937307357788
This batch time : update_bounds func: 2.8789	 prepare: 0.2922	 bound: 1.8880	 transfer: 0.2135	 finalize: 0.3423
Accumulated time: update_bounds func: 12.2265	 prepare: 1.1418	 bound: 8.8064	 transfer: 0.2135	 finalize: 1.3017
batch bounding time:  2.882903575897217
Current worst domains: [-0.036603689193725586, -0.0365293025970459, -0.03649824857711792, -0.03645437955856323, -0.036423683166503906, -0.036379873752593994, -0.036348819732666016, -0.036275625228881836, -0.03624337911605835, -0.036214590072631836]
length of domains: 16305
Total time: 4.2158	 pickout: 0.3227	 decision: 0.7509	 get_bound: 2.8904	 add_domain: 0.2517
Current lb:-0.036603689193725586
32766 neurons visited

splitting decisions: [[1, 675], [1, 675], [1, 675], [1, 675], [1, 675], [1, 675], [1, 675], [1, 675], [1, 675], [1, 675]]
single_node_split: True
best_l after optimization: 230.76202392578125 with beta sum per layer: [420.14788818359375, 2538.44775390625, 0.0]
optimal alpha/beta time: 1.8831219673156738
This batch time : update_bounds func: 2.8019	 prepare: 0.2988	 bound: 1.8832	 transfer: 0.2072	 finalize: 0.4050
Accumulated time: update_bounds func: 15.0284	 prepare: 1.4406	 bound: 10.6896	 transfer: 0.2072	 finalize: 1.7068
batch bounding time:  2.8065404891967773
Current worst domains: [-0.03581804037094116, -0.035742759704589844, -0.03571265935897827, -0.03567838668823242, -0.03563743829727173, -0.03563028573989868, -0.035603225231170654, -0.0355570912361145, -0.035524725914001465, -0.03549009561538696]
length of domains: 20401
Total time: 4.5207	 pickout: 0.3231	 decision: 0.8763	 get_bound: 2.8139	 add_domain: 0.5073
Current lb:-0.03581804037094116
40958 neurons visited

splitting decisions: [[0, 1162], [0, 1162], [0, 1162], [0, 1162], [0, 1162], [0, 1162], [0, 1162], [0, 1162], [0, 1162], [0, 1162]]
single_node_split: True
best_l after optimization: 234.92259216308594 with beta sum per layer: [287.6256408691406, 1854.279052734375, 0.0]
optimal alpha/beta time: 1.887873649597168
This batch time : update_bounds func: 2.8646	 prepare: 0.2983	 bound: 1.8880	 transfer: 0.2059	 finalize: 0.4647
Accumulated time: update_bounds func: 17.8930	 prepare: 1.7389	 bound: 12.5776	 transfer: 0.2059	 finalize: 2.1715
batch bounding time:  2.869469165802002
Current worst domains: [-0.034925758838653564, -0.034853219985961914, -0.0348203182220459, -0.034786224365234375, -0.03474777936935425, -0.034738242626190186, -0.034713149070739746, -0.03466463088989258, -0.03463262319564819, -0.034597814083099365]
length of domains: 24497
Total time: 4.2173	 pickout: 0.3201	 decision: 0.7406	 get_bound: 2.8774	 add_domain: 0.2791
Current lb:-0.034925758838653564
49150 neurons visited

time out!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Image 132 pidx 9 verify end, Time cost: 27.44034171104431
132 -0.034925758838653564
[[  132.             0.             0.             3.63816309
      0.            -1.        ]
 [  132.             0.69395685     0.             0.00036764
      0.             0.        ]
 [  132.             0.             0.             0.
      0.             1.        ]
 [  132.             4.327209       0.             0.0002687
      0.             2.        ]
 [  132.             5.71188641     0.             0.000211
      0.             3.        ]
 [  132.             4.58077431     0.             0.00014019
      0.             4.        ]
 [  132.             6.06078196     0.             0.00022864
      0.             5.        ]
 [  132.             5.75439119     0.             0.00011849
      0.             6.        ]
 [  132.             5.07038975     0.             0.00022864
      0.             7.        ]
 [  132.             0.2537694      0.             0.00024009
      0.             8.        ]
 [  132.            -0.03492576 49150.            27.44034171
      0.             9.        ]]/home/kx46@drexel.edu/anaconda3/envs/pyt18/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/kx46@drexel.edu/workspace/CROWN-GENERAL/examples/vision/plnn/utils.py:1189: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  y = torch.from_numpy(y.astype(np.int))
bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,

final verified acc: 0.0%[1]
Total verification count: 1 total verified: 0
mean time [total:1]: 31.080308198928833
mean time [cnt:1]: 31.080308198928833
