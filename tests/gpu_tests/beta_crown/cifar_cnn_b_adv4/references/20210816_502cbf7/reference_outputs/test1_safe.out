Experiments at Fri Nov  5 22:23:19 2021 on CCI-2CPKMH3
Namespace(batch_size=256, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab', conv_mode='patches', crown=False, data='CIFAR_SDP', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=14, epsilon=None, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=20, load='sdp_models/cnn_b_adv4.model', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='cnn_4layer_b4', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=13, timeout=60.0)
Sequential(
  (0): ZeroPad2d(padding=(1, 2, 1, 2), value=0.0)
  (1): Conv2d(3, 32, kernel_size=(5, 5), stride=(2, 2))
  (2): ReLU()
  (3): Conv2d(32, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (4): ReLU()
  (5): Flatten()
  (6): Linear(in_features=8192, out_features=250, bias=True)
  (7): ReLU()
  (8): Linear(in_features=250, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.1256) tensor(-1.9889) tensor(-0.0131)
############################
epsilon after preprocession: tensor([[[[0.0317]],

         [[0.0322]],

         [[0.0300]]]]), data_max = tensor([[[[2.0587]],

         [[2.1256]],

         [[2.1154]]]]), data_min = tensor([[[[-1.9889]],

         [[-1.9807]],

         [[-1.7076]]]])
saving results to Verified_ret_[cnn_4layer_b4]_start=13_end=14_iter=20_b=256_int-beta=False_timeout=60.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  1  correct label  1 logits tensor([-69.5804, -68.2390, -72.2027, -73.9836, -74.2991, -74.8349, -73.7351,
        -76.1907, -70.3856, -71.3245], grad_fn=<SelectBackward>)
##### PGD attack: True label: 1, Tested against: all others ######
pgd prediction: tensor([-67.2069, -66.6450, -69.7684, -71.6863, -71.8094, -72.5394, -71.4192,
        -73.7983, -68.0372, -69.4133], device='cuda:0',
       grad_fn=<SqueezeBackward1>)
attack margin tensor([0.5619,    inf, 3.1234, 5.0413, 5.1644, 5.8944, 4.7742, 7.1533, 1.3922,
        2.7683], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-69.5804, -68.2390, -72.2027, -73.9836, -74.2990, -74.8349, -73.7351,
         -76.1907, -70.3856, -71.3245]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: -24.182849884033203 with beta sum per layer: []
optimal alpha/beta time: 4.9331583976745605
initial alpha-CROWN bounds: tensor([[-0.4432,  1.7155,  3.7651,  3.4988,  4.5655,  3.4551,  5.1522,  0.4165,
          2.0573]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### [0:13] Tested against 0 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /45
not setting layer /34 start_node /47 because shape mismatch (torch.Size([2, 1, 1, 32, 16, 16]) != torch.Size([2, 9, 1, 32, 16, 16]))
setting alpha for layer /36 start_node /45
not setting layer /36 start_node /47 because shape mismatch (torch.Size([2, 1, 1, 128, 8, 8]) != torch.Size([2, 9, 1, 128, 8, 8]))
not setting layer /46 start_node /47 because shape mismatch (torch.Size([2, 1, 1, 250]) != torch.Size([2, 9, 1, 250]))
0 /33 torch.Size([1, 32, 16, 16])
1 /35 torch.Size([1, 128, 8, 8])
2 /45 torch.Size([1, 250])
best_l after optimization: 0.4432392120361328 with beta sum per layer: []
optimal alpha/beta time: 0.7441344261169434
alpha-CROWN with fixed intermediate bounds: tensor([[-0.4432]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.4432392120361328
layer 0 size torch.Size([8192]) unstable 1364
layer 1 size torch.Size([8192]) unstable 469
layer 2 size torch.Size([250]) unstable 32
# of unstable neurons: 1865
splitting decisions: [[2, 28]]
single_node_split: True
best_l after optimization: 0.6236104965209961 with beta sum per layer: [0.0, 0.0, 0.0]
optimal alpha/beta time: 0.14232635498046875
This batch time : update_bounds func: 0.1435	 prepare: 0.0006	 bound: 0.1424	 transfer: 0.0003	 finalize: 0.0001
Accumulated time: update_bounds func: 0.1435	 prepare: 0.0006	 bound: 0.1424	 transfer: 0.0003	 finalize: 0.0001
batch bounding time:  0.14348149299621582
Current worst domains: [-0.3118467330932617, -0.3117637634277344]
length of domains: 2
Total time: 0.1570	 pickout: 0.0004	 decision: 0.0130	 get_bound: 0.1435	 add_domain: 0.0001
Current lb:-0.3118467330932617
2 neurons visited

splitting decisions: [[2, 54], [2, 54]]
single_node_split: True
best_l after optimization: 0.49718570709228516 with beta sum per layer: [0.0, 0.0, 0.17437686026096344]
optimal alpha/beta time: 0.1404120922088623
This batch time : update_bounds func: 0.1419	 prepare: 0.0006	 bound: 0.1405	 transfer: 0.0005	 finalize: 0.0002
Accumulated time: update_bounds func: 0.2853	 prepare: 0.0012	 bound: 0.2829	 transfer: 0.0005	 finalize: 0.0004
batch bounding time:  0.14186835289001465
Current worst domains: [-0.2249612808227539, -0.22280311584472656, -0.03953075408935547, -0.009890556335449219]
length of domains: 4
Total time: 0.1563	 pickout: 0.0005	 decision: 0.0139	 get_bound: 0.1419	 add_domain: 0.0001
Current lb:-0.2249612808227539
6 neurons visited

splitting decisions: [[2, 95], [2, 95], [2, 95], [2, 95]]
single_node_split: True
best_l after optimization: -0.0651082992553711 with beta sum per layer: [0.0, 0.0, 0.5455400943756104]
optimal alpha/beta time: 0.1402750015258789
This batch time : update_bounds func: 0.1418	 prepare: 0.0008	 bound: 0.1403	 transfer: 0.0005	 finalize: 0.0002
Accumulated time: update_bounds func: 0.4272	 prepare: 0.0020	 bound: 0.4232	 transfer: 0.0005	 finalize: 0.0006
batch bounding time:  0.141859769821167
Current worst domains: [-0.14419841766357422, -0.14098453521728516, -0.025437355041503906, -0.012189865112304688]
length of domains: 4
Total time: 0.1561	 pickout: 0.0007	 decision: 0.0135	 get_bound: 0.1419	 add_domain: 0.0001
Current lb:-0.14419841766357422
14 neurons visited

splitting decisions: [[2, 31], [2, 31], [2, 31], [2, 31]]
single_node_split: True
best_l after optimization: 0.28124141693115234 with beta sum per layer: [0.0, 0.0, 0.4285065233707428]
optimal alpha/beta time: 0.13995790481567383
This batch time : update_bounds func: 0.1416	 prepare: 0.0008	 bound: 0.1400	 transfer: 0.0005	 finalize: 0.0003
Accumulated time: update_bounds func: 0.5687	 prepare: 0.0027	 bound: 0.5633	 transfer: 0.0005	 finalize: 0.0009
batch bounding time:  0.14156818389892578
Current worst domains: [-0.10369586944580078, -0.0999765396118164, -0.09131431579589844, -0.0895538330078125]
length of domains: 4
Total time: 0.1551	 pickout: 0.0006	 decision: 0.0129	 get_bound: 0.1416	 add_domain: 0.0001
Current lb:-0.10369586944580078
22 neurons visited

splitting decisions: [[2, 145], [2, 145], [2, 145], [2, 145]]
single_node_split: True
best_l after optimization: 0.03009510040283203 with beta sum per layer: [0.0, 0.0, 0.7446864247322083]
optimal alpha/beta time: 0.14130902290344238
This batch time : update_bounds func: 0.1432	 prepare: 0.0008	 bound: 0.1414	 transfer: 0.0007	 finalize: 0.0003
Accumulated time: update_bounds func: 0.7119	 prepare: 0.0035	 bound: 0.7047	 transfer: 0.0007	 finalize: 0.0012
batch bounding time:  0.14322710037231445
Current worst domains: [-0.07317161560058594, -0.0705881118774414, -0.06065654754638672, -0.05999946594238281]
length of domains: 4
Total time: 0.1570	 pickout: 0.0005	 decision: 0.0131	 get_bound: 0.1432	 add_domain: 0.0001
Current lb:-0.07317161560058594
30 neurons visited

splitting decisions: [[2, 97], [2, 97], [2, 97], [2, 97]]
single_node_split: True
best_l after optimization: 0.30935001373291016 with beta sum per layer: [0.0, 0.0, 0.06928636133670807]
optimal alpha/beta time: 0.14247584342956543
This batch time : update_bounds func: 0.1443	 prepare: 0.0007	 bound: 0.1426	 transfer: 0.0005	 finalize: 0.0004
Accumulated time: update_bounds func: 0.8562	 prepare: 0.0042	 bound: 0.8472	 transfer: 0.0005	 finalize: 0.0016
batch bounding time:  0.1442735195159912
Current worst domains: [-0.0460205078125, -0.04543781280517578, -0.04358100891113281, -0.04292869567871094, -0.03400421142578125, -0.03346824645996094, -0.0322723388671875, -0.03163719177246094]
length of domains: 8
Total time: 0.1638	 pickout: 0.0008	 decision: 0.0186	 get_bound: 0.1443	 add_domain: 0.0002
Current lb:-0.0460205078125
38 neurons visited

splitting decisions: [[2, 18], [2, 18], [2, 18], [2, 18], [2, 18], [2, 18], [2, 18], [2, 18]]
single_node_split: True
best_l after optimization: -0.24605083465576172 with beta sum per layer: [0.0, 0.0, 0.14147138595581055]
optimal alpha/beta time: 0.14179563522338867
This batch time : update_bounds func: 0.1445	 prepare: 0.0010	 bound: 0.1419	 transfer: 0.0012	 finalize: 0.0004
Accumulated time: update_bounds func: 1.0007	 prepare: 0.0052	 bound: 0.9891	 transfer: 0.0012	 finalize: 0.0020
batch bounding time:  0.14455366134643555
Current worst domains: [-0.02042388916015625, -0.01972484588623047, -0.017822265625, -0.017261505126953125, -0.007868766784667969, -0.00766754150390625, -0.006194114685058594, -0.0058307647705078125]
length of domains: 8
Total time: 0.1601	 pickout: 0.0011	 decision: 0.0143	 get_bound: 0.1446	 add_domain: 0.0002
Current lb:-0.02042388916015625
54 neurons visited

splitting decisions: [[2, 171], [2, 171], [2, 171], [2, 171], [2, 171], [2, 171], [2, 171], [2, 171]]
single_node_split: True
best_l after optimization: -0.15737247467041016 with beta sum per layer: [0.0, 0.0, 0.14437006413936615]
optimal alpha/beta time: 0.15276455879211426
This batch time : update_bounds func: 0.1555	 prepare: 0.0010	 bound: 0.1528	 transfer: 0.0012	 finalize: 0.0004
Accumulated time: update_bounds func: 1.1562	 prepare: 0.0063	 bound: 1.1419	 transfer: 0.0012	 finalize: 0.0025
batch bounding time:  0.1555631160736084
Current worst domains: [-0.0016775131225585938, -0.000995635986328125]
length of domains: 2
Total time: 0.1785	 pickout: 0.0009	 decision: 0.0220	 get_bound: 0.1556	 add_domain: 0.0001
Current lb:-0.0016775131225585938
70 neurons visited

splitting decisions: [[1, 6819], [1, 6819]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -0.061057090759277344 with beta sum per layer: [0.0, 0.0, 0.0]
optimal alpha/beta time: 0.0054302215576171875
This batch time : update_bounds func: 0.0068	 prepare: 0.0007	 bound: 0.0055	 transfer: 0.0005	 finalize: 0.0001
Accumulated time: update_bounds func: 1.1631	 prepare: 0.0070	 bound: 1.1474	 transfer: 0.0005	 finalize: 0.0026
batch bounding time:  0.006858348846435547
Current worst domains: []
length of domains: 0
Total time: 0.0200	 pickout: 0.0005	 decision: 0.0126	 get_bound: 0.0069	 add_domain: 0.0000
No domains left, verification finished!
Image 13 pidx 0 verify end, Time cost: 2.288936138153076
13 999
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0]]
##### [0:13] Tested against 1 ######
correct label, skip!
##### [0:13] Tested against 2 ######
init opt crown verified for label 2 with bound 1.7155370712280273
Image 13 pidx 2 verify end, Time cost: 0.00025773048400878906
13 1.7155370712280273
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2]]
##### [0:13] Tested against 3 ######
init opt crown verified for label 3 with bound 3.7650985717773438
Image 13 pidx 3 verify end, Time cost: 0.00013184547424316406
13 3.7650985717773438
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3]]
##### [0:13] Tested against 4 ######
init opt crown verified for label 4 with bound 3.498847007751465
Image 13 pidx 4 verify end, Time cost: 0.00021791458129882812
13 3.498847007751465
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3], [13, 3.498847007751465, 0, 0.00021791458129882812, 0, 4]]
##### [0:13] Tested against 5 ######
init opt crown verified for label 5 with bound 4.565489768981934
Image 13 pidx 5 verify end, Time cost: 0.00013208389282226562
13 4.565489768981934
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3], [13, 3.498847007751465, 0, 0.00021791458129882812, 0, 4], [13, 4.565489768981934, 0, 0.00013208389282226562, 0, 5]]
##### [0:13] Tested against 6 ######
init opt crown verified for label 6 with bound 3.4551334381103516
Image 13 pidx 6 verify end, Time cost: 0.0002205371856689453
13 3.4551334381103516
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3], [13, 3.498847007751465, 0, 0.00021791458129882812, 0, 4], [13, 4.565489768981934, 0, 0.00013208389282226562, 0, 5], [13, 3.4551334381103516, 0, 0.0002205371856689453, 0, 6]]
##### [0:13] Tested against 7 ######
init opt crown verified for label 7 with bound 5.152196884155273
Image 13 pidx 7 verify end, Time cost: 0.00014162063598632812
13 5.152196884155273
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3], [13, 3.498847007751465, 0, 0.00021791458129882812, 0, 4], [13, 4.565489768981934, 0, 0.00013208389282226562, 0, 5], [13, 3.4551334381103516, 0, 0.0002205371856689453, 0, 6], [13, 5.152196884155273, 0, 0.00014162063598632812, 0, 7]]
##### [0:13] Tested against 8 ######
init opt crown verified for label 8 with bound 0.4164724349975586
Image 13 pidx 8 verify end, Time cost: 0.0002276897430419922
13 0.4164724349975586
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3], [13, 3.498847007751465, 0, 0.00021791458129882812, 0, 4], [13, 4.565489768981934, 0, 0.00013208389282226562, 0, 5], [13, 3.4551334381103516, 0, 0.0002205371856689453, 0, 6], [13, 5.152196884155273, 0, 0.00014162063598632812, 0, 7], [13, 0.4164724349975586, 0, 0.0002276897430419922, 0, 8]]
##### [0:13] Tested against 9 ######
init opt crown verified for label 9 with bound 2.057316303253174
Image 13 pidx 9 verify end, Time cost: 0.00025582313537597656
13 2.057316303253174
[[13, 0, 0, 5.270679950714111, 0, -1], [13, 999, 74, 2.288936138153076, 0, 0], [13, 0, 0, 0, 0, 1], [13, 1.7155370712280273, 0, 0.00025773048400878906, 0, 2], [13, 3.7650985717773438, 0, 0.00013184547424316406, 0, 3], [13, 3.498847007751465, 0, 0.00021791458129882812, 0, 4], [13, 4.565489768981934, 0, 0.00013208389282226562, 0, 5], [13, 3.4551334381103516, 0, 0.0002205371856689453, 0, 6], [13, 5.152196884155273, 0, 0.00014162063598632812, 0, 7], [13, 0.4164724349975586, 0, 0.0002276897430419922, 0, 8], [13, 2.057316303253174, 0, 0.00025582313537597656, 0, 9]]
[[ 13.           0.           0.           5.27067995   0.
   -1.        ]
 [ 13.         999.          74.           2.28893614   0.
    0.        ]
 [ 13.           0.           0.           0.           0.
    1.        ]
 [ 13.           1.71553707   0.           0.00025773   0.
    2.        ]
 [ 13.           3.76509857   0.           0.00013185   0.
    3.        ]
 [ 13.           3.49884701   0.           0.00021791   0.
    4.        ]
 [ 13.           4.56548977   0.           0.00013208   0.
    5.        ]
 [ 13.           3.45513344   0.           0.00022054   0.
    6.        ]
 [ 13.           5.15219688   0.           0.00014162   0.
    7.        ]
 [ 13.           0.41647243   0.           0.00022769   0.
    8.        ]
 [ 13.           2.0573163    0.           0.00025582   0.
    9.        ]]/home/kx46@drexel.edu/anaconda3/envs/pyt18/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/kx46@drexel.edu/workspace/CROWN-GENERAL/examples/vision/plnn/utils.py:1189: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  y = torch.from_numpy(y.astype(np.int))
bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,

final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 7.561201333999634
mean time [cnt:1]: 7.561201333999634
