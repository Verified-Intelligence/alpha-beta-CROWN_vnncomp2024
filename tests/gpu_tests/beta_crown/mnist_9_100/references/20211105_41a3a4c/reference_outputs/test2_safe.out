Experiments at Tue Nov  2 02:40:20 2021 on huan-Super-Server
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=553_end=554_iter=20_b=1024_int-beta=False_timeout=300_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 553 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  8  correct label  8 logits tensor([-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
         7.4579, -1.0830], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-147.4231, -168.2039, -182.1790, -186.2389, -212.7903, -158.7987,
         -177.6175, -221.1094, -221.1460]], device='cuda:0') None
best_l after optimization: 744.886962890625 with beta sum per layer: []
optimal alpha/beta time: 14.529186248779297
initial alpha-CROWN bounds: tensor([[-60.0214, -72.3603, -87.3414, -85.4015, -95.5341, -72.7295, -80.7977,
         -96.6739, -94.0271]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 8, Tested against: ['all'] ######
pgd prediction: tensor([-0.0865, -2.0638, -0.6109,  0.0789, -3.1355,  4.1166,  1.3214, -2.9461,
         6.5034, -0.5493], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([6.5899, 8.5672, 7.1143, 6.4245, 9.6388, 2.3868, 5.1820, 9.4495,    inf,
        7.0527], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 228.06622772216798]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_28', 'lay4_54', 'lay4_93', 'lay4_94', 'lay4_27', 'lay4_90', 'lay4_57', 'lay4_72', 'lay4_48', 'lay4_24', 'lay4_1', 'lay4_4', 'lay4_50', 'lay4_41', 'lay4_39', 'lay4_36', 'lay4_75', 'lay4_92', 'lay4_71', 'lay4_38', 'lay4_19', 'lay4_18', 'lay4_35', 'lay4_99', 'lay4_0', 'lay4_34', 'lay4_40', 'lay4_25', 'lay4_68', 'lay4_60', 'lay4_42', 'lay4_76', 'lay4_16', 'lay4_98', 'lay4_64', 'lay4_13', 'lay4_15', 'lay4_96', 'lay4_2', 'lay4_26', 'lay4_32', 'lay4_91', 'lay4_6', 'lay4_45'] filter: 1.0
/home/shiqi/CROWN-GENERAL/complete_verifier/utils.py:412: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_50, [-1.6403908729553223,0.10931909084320068]=>[-1.6403908729553223,-1e-05] (-1,-1; 15,-1), time: 0.2052s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_39, [-1.8675518035888672,0.24519109725952148]=>[-1.8675518035888672,-1e-05] (-1,-1; 15,-1), time: 0.2814s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_27, [-1.4022330045700073,0.21355128288269043]=>[-1.4022330045700073,-1e-05] (-1,-1; 15,-1), time: 0.3691s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_71, [-1.3882020711898804,0.1457245647907257]=>[-1.3882020711898804,-1e-05] (-1,-1; 15,-1), time: 0.2541s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_92, [-0.18546411395072937,1.373138189315796]=>[1e-05,1.373138189315796] (15,-1; -1,-1), time: 0.3678s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_38, [-1.2986345291137695,0.023257851600646973]=>[-1.2986345291137695,-1e-05] (-1,-1; 15,-1), time: 0.1850s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_48, [-1.1922874450683594,0.3560238182544708]=>[-0.9395611219420525,0.15409208656856396] (2,-1; 2,-1), time: 1.0047s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_94, [-0.7098046541213989,1.6732800006866455]=>[-0.3339389339002727,1.4362988708789761] (2,-1; 2,-1), time: 1.0814s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_4, [-1.1548452377319336,0.2032204568386078]=>[-0.9102344052001667,0.013763343824722926] (2,-1; 2,-1), time: 1.0959s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_36, [-1.123083472251892,1.0106229782104492]=>[-0.8811365585635047,0.5740667670677312] (2,-1; 2,-1), time: 1.1326s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_93, [-0.5328854322433472,1.8695212602615356]=>[1e-05,1.8695212602615356] (15,-1; -1,-1), time: 1.2588s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_99, [-1.1792763471603394,0.01837843656539917]=>[-1.1792763471603394,-1e-05] (-1,-1; 15,-1), time: 0.1846s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_75, [-0.8867471218109131,0.27298566699028015]=>[-0.7322415067756953,0.11470515847090186] (2,-1; 2,-1), time: 1.2421s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_28, [-1.4632964134216309,0.43072810769081116]=>[-1.1303935481703502,0.1686654984501113] (2,-1; 2,-1), time: 1.5130s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_57, [-0.4871382713317871,1.0114985704421997]=>[-0.16063380293799304,0.8771588876326355] (2,-1; 2,-1), time: 1.5707s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_1, [-0.9012502431869507,0.24949771165847778]=>[-0.6777531231984043,0.0494412910046248] (2,-1; 2,-1), time: 1.7153s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_25, [-0.3027346432209015,1.36268949508667]=>[1e-05,1.36268949508667] (15,-1; -1,-1), time: 0.4728s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_42, [-0.1426950842142105,1.5677000284194946]=>[1e-05,1.5677000284194946] (15,-1; -1,-1), time: 0.2002s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_90, [-2.4710538387298584,0.2353634536266327]=>[-1.778856669470219,0.013476069510735763] (2,-1; 2,-1), time: 1.9031s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_24, [-0.2791003882884979,1.298137903213501]=>[-0.0005027354798771814,1.0340701958697731] (2,-1; 2,-1), time: 1.9043s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_54, [-0.8314392566680908,0.8294622898101807]=>[-0.38257861173277746,0.706650156514852] (2,-1; 2,-1), time: 1.9150s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_72, [-1.4346274137496948,0.6795051097869873]=>[-1.1441057839076674,0.24501129497582916] (2,-1; 2,-1), time: 1.9291s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_98, [-1.6957439184188843,0.023198500275611877]=>[-1.6957439184188843,-1e-05] (-1,-1; 15,-1), time: 0.1931s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_19, [-0.32762381434440613,1.3229691982269287]=>[1e-05,1.3229691982269287] (15,-1; -1,-1), time: 1.3373s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_41, [-1.2109382152557373,0.46719276905059814]=>[-0.98715594505489,0.0916658874391526] (2,-1; 2,-1), time: 2.0563s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_64, [-0.06516161561012268,1.8840001821517944]=>[1e-05,1.8840001821517944] (15,-1; -1,-1), time: 0.1911s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_26, [-0.08601903915405273,1.3220866918563843]=>[1e-05,1.3220866918563843] (15,-1; -1,-1), time: 0.2465s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_0, [-1.091691493988037,1.159866452217102]=>[-0.7924996183465693,0.8719402428697796] (2,-1; 2,-1), time: 1.1501s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_32, [-0.16484344005584717,1.670555591583252]=>[1e-05,1.670555591583252] (15,-1; -1,-1), time: 0.1929s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_6, [-1.6192914247512817,0.034817904233932495]=>[-1.6192914247512817,-1e-05] (-1,-1; 15,-1), time: 0.1665s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_34, [-0.670137345790863,0.9415361285209656]=>[-0.37068237977779456,0.7629615975842019] (2,-1; 2,-1), time: 1.5906s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_76, [-0.35513120889663696,1.1473861932754517]=>[-0.09250972878471153,0.9393916906068341] (2,-1; 2,-1), time: 1.0319s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_40, [-0.37134575843811035,1.2014904022216797]=>[-0.01619951711779942,1.008305159866503] (2,-1; 2,-1), time: 1.5671s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_68, [-0.5221256613731384,1.2756409645080566]=>[-0.13719583558372467,1.0770125481194306] (2,-1; 2,-1), time: 1.4231s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_2, [-0.5327097177505493,1.17824125289917]=>[-0.31214328909862704,0.9279311168467665] (2,-1; 2,-1), time: 0.9795s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_18, [-0.6176158785820007,0.5720081329345703]=>[-0.29338862918783415,0.4667413980319252] (2,-1; 2,-1), time: 2.1441s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_91, [-0.4828070402145386,1.1078814268112183]=>[-0.2822335819272994,0.8772076374326472] (2,-1; 2,-1), time: 0.9143s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_15, [-1.0668096542358398,0.6806130409240723]=>[-0.7447837956964015,0.4233987403737958] (2,-1; 2,-1), time: 1.1062s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_35, [-1.1774122714996338,0.5023936033248901]=>[-0.8117304563784081,0.2568570530522669] (2,-1; 2,-1), time: 2.0407s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_60, [-1.0290472507476807,0.3707287311553955]=>[-0.7059914753253028,0.23399826167095544] (2,-1; 2,-1), time: 1.8386s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_45, [-1.3280658721923828,0.8128953576087952]=>[-1.0800548149212472,0.4017155160731893] (2,-1; 2,-1), time: 1.2200s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_13, [-0.56630939245224,1.67934250831604]=>[-0.11747066561186376,1.3578837123678225] (2,-1; 2,-1), time: 1.7111s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_96, [-0.48847711086273193,1.0900901556015015]=>[-0.11305325198582523,0.8863010215766685] (2,-1; 2,-1), time: 1.8884s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_16, [-1.306368350982666,0.7136249542236328]=>[-0.8095682724333764,0.4924691257444382] (2,-1; 2,-1), time: 2.1088s, #vars: 1037, #constrs: 278, improved: True
MIP improved 44 nodes out of 44 unstable nodes, lb improved 10.820575714111328, ub improved 7.501595973968506, time 4.2098
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_74', 'lay6_28', 'lay6_61', 'lay6_39', 'lay6_73', 'lay6_3', 'lay6_45', 'lay6_75', 'lay6_71', 'lay6_88', 'lay6_53', 'lay6_66', 'lay6_51', 'lay6_70', 'lay6_46', 'lay6_50', 'lay6_65', 'lay6_11', 'lay6_92', 'lay6_90', 'lay6_82', 'lay6_79', 'lay6_43', 'lay6_89', 'lay6_80', 'lay6_36', 'lay6_52', 'lay6_7', 'lay6_72', 'lay6_16', 'lay6_94', 'lay6_64', 'lay6_31', 'lay6_98', 'lay6_27', 'lay6_40', 'lay6_15', 'lay6_21', 'lay6_68', 'lay6_47', 'lay6_41', 'lay6_84', 'lay6_37', 'lay6_63', 'lay6_67', 'lay6_35', 'lay6_4', 'lay6_60', 'lay6_81', 'lay6_58', 'lay6_77', 'lay6_18', 'lay6_97', 'lay6_38', 'lay6_55', 'lay6_33', 'lay6_62', 'lay6_57', 'lay6_23', 'lay6_86', 'lay6_49', 'lay6_14', 'lay6_12', 'lay6_24', 'lay6_0', 'lay6_9', 'lay6_17'] filter: 1.0
Solving MIP for lay6_50, [-1.745639443397522,0.10026925802230835]=>[-1.745639443397522,-1e-05] (-1,-1; 15,-1), time: 0.2053s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_66, [-1.4486441612243652,0.21345239877700806]=>[-1.4486441612243652,-1e-05] (-1,-1; 15,-1), time: 0.2812s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_45, [-1.510605812072754,0.1907721757888794]=>[-1.510605812072754,-1e-05] (-1,-1; 15,-1), time: 0.3081s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_11, [-1.4560296535491943,0.07225304841995239]=>[-1.4560296535491943,-1e-05] (-1,-1; 15,-1), time: 0.1403s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_39, [-2.4151129722595215,0.6586079597473145]=>[-2.4151129722595215,-1e-05] (-1,-1; 15,-1), time: 0.6436s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_82, [-1.416489601135254,0.19363942742347717]=>[-1.416489601135254,-1e-05] (-1,-1; 15,-1), time: 0.2409s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_88, [-1.7680847644805908,0.41731390357017517]=>[-1.7680847644805908,-1e-05] (-1,-1; 15,-1), time: 0.9138s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_53, [-1.2072824239730835,0.37752383947372437]=>[-1.2072824239730835,-1e-05] (-1,-1; 15,-1), time: 1.7589s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_28, [-1.6884346008300781,0.521836519241333]=>[-1.6884346008300781,-1e-05] (-1,-1; 15,-1), time: 2.2180s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_80, [-1.3755676746368408,0.3638709783554077]=>[-1.3755676746368408,-1e-05] (-1,-1; 15,-1), time: 0.2640s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_79, [-0.9860215187072754,0.22797918319702148]=>[-0.9860215187072754,-1e-05] (-1,-1; 15,-1), time: 1.8806s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_52, [-1.2624691724777222,0.12555822730064392]=>[-1.2624691724777222,-1e-05] (-1,-1; 15,-1), time: 0.1294s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_74, [-1.2644749879837036,0.5562226176261902]=>[-1.2644749879837036,-1e-05] (-1,-1; 15,-1), time: 2.9121s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_46, [-0.38982275128364563,1.1547975540161133]=>[-0.0018066534702338307,0.7509662715722033] (2,-1; 2,-1), time: 3.7562s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_3, [-1.142356276512146,1.3226423263549805]=>[-0.612963154452013,0.7242663169386481] (2,-1; 2,-1), time: 3.7971s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_16, [-1.9405839443206787,0.20829367637634277]=>[-1.9405839443206787,-1e-05] (-1,-1; 15,-1), time: 0.1288s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_71, [-1.0379672050476074,0.5819011330604553]=>[-0.5135817327925378,0.2105459284874805] (2,-1; 2,-1), time: 3.9238s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_7, [-1.6132463216781616,0.3747871518135071]=>[-1.6132463216781616,-1e-05] (-1,-1; 15,-1), time: 1.0171s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_90, [-1.8863131999969482,0.5179779529571533]=>[-1.1088397159399395,0.14791380850844585] (2,-1; 2,-1), time: 3.5078s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_64, [-0.19315671920776367,1.7078914642333984]=>[1e-05,1.7078914642333984] (15,-1; -1,-1), time: 0.1154s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_27, [-1.2127994298934937,0.04098588228225708]=>[-1.2127994298934937,-1e-05] (-1,-1; 15,-1), time: 0.1373s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_31, [-0.21010929346084595,2.2859230041503906]=>[1e-05,2.2859230041503906] (15,-1; -1,-1), time: 0.2877s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_92, [-1.2033032178878784,0.9132332801818848]=>[-0.7034672071066801,0.3268544953819755] (2,-1; 2,-1), time: 3.9952s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_21, [-0.07402586936950684,2.333045482635498]=>[1e-05,2.333045482635498] (15,-1; -1,-1), time: 0.1135s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_68, [-1.6000635623931885,0.0072345733642578125]=>[-1.6000635623931885,-1e-05] (-1,-1; 15,-1), time: 0.1185s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_75, [-1.1178967952728271,0.7921106219291687]=>[-0.6801909070784109,0.061524028927563014] (2,-1; 2,-1), time: 5.0037s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_70, [-1.2394599914550781,0.7111034393310547]=>[-0.7388495433879368,0.2316243676742299] (2,-1; 2,-1), time: 5.3097s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_73, [-0.6295838356018066,1.0636769533157349]=>[-0.22462211186675693,0.4533618960992516] (2,-1; 2,-1), time: 5.3889s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_51, [-0.9032884240150452,1.5251086950302124]=>[-0.18426652904154123,0.9410599243844184] (2,-1; 2,-1), time: 5.9300s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_61, [-0.8027287721633911,0.6444492340087891]=>[-0.28175997084383736,0.2297103868397629] (2,-1; 2,-1), time: 6.3543s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_89, [-1.0318117141723633,1.8970153331756592]=>[-0.047163985448741175,1.3479103065801876] (2,-1; 2,-1), time: 5.0557s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_4, [-0.9402437210083008,0.09537482261657715]=>[-0.9402437210083008,-1e-05] (-1,-1; 15,-1), time: 0.2505s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_43, [-1.3826085329055786,0.3065747022628784]=>[-0.7314076052311045,0.05401868491558754] (2,-1; 2,-1), time: 6.3203s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_98, [-0.8833906650543213,0.6814481616020203]=>[-0.5236575215156974,0.23014169779776916] (2,-1; 2,-1), time: 3.4716s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_65, [-1.3634727001190186,0.3393464982509613]=>[-0.7519832475768601,0.08015702637892426] (2,-1; 2,-1), time: 7.2822s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_58, [-0.13851836323738098,1.110095500946045]=>[1e-05,1.110095500946045] (15,-1; -1,-1), time: 0.1122s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_72, [-0.8193504810333252,0.3388862907886505]=>[-0.41536578362376253,0.020816625392924677] (2,-1; 2,-1), time: 4.7016s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_77, [-1.2777087688446045,0.19188156723976135]=>[-1.2777087688446045,-1e-05] (-1,-1; 15,-1), time: 0.2289s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_97, [-1.6297924518585205,0.03071090579032898]=>[-1.6297924518585205,-1e-05] (-1,-1; 15,-1), time: 0.1118s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_40, [-0.5223031044006348,1.0519847869873047]=>[-0.0342291032204365,0.7604130649039421] (2,-1; 2,-1), time: 3.7599s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_38, [-0.13227659463882446,1.8057560920715332]=>[1e-05,1.8057560920715332] (15,-1; -1,-1), time: 0.1176s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_36, [-0.7553470134735107,0.581567645072937]=>[-0.4623077280747505,0.12081645675948349] (2,-1; 2,-1), time: 5.4207s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_62, [-1.5728788375854492,0.022368192672729492]=>[-1.5728788375854492,-1e-05] (-1,-1; 15,-1), time: 0.1160s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_41, [-0.8874521851539612,0.8942745923995972]=>[-0.34586754831871935,0.4906975865791957] (2,-1; 2,-1), time: 3.5448s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_86, [-1.4960758686065674,0.0023679137229919434]=>[-1.4960758686065674,-1e-05] (-1,-1; 15,-1), time: 0.1166s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_94, [-0.8012704849243164,1.3551502227783203]=>[-0.14538449994435276,0.818023355358311] (2,-1; 2,-1), time: 4.3878s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_84, [-1.2369307279586792,1.08756422996521]=>[-0.5813876898438989,0.6640424327416259] (2,-1; 2,-1), time: 3.4762s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_23, [-1.690221905708313,0.5574132204055786]=>[-1.690221905708313,-1e-05] (-1,-1; 15,-1), time: 0.7151s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_24, [-0.14338701963424683,2.7786765098571777]=>[1e-05,2.7786765098571777] (15,-1; -1,-1), time: 0.1171s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_12, [-0.4485436677932739,2.021433115005493]=>[1e-05,2.021433115005493] (15,-1; -1,-1), time: 0.3333s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_37, [-0.6250828504562378,2.099297523498535]=>[-0.06668290872720173,1.331946486787872] (2,-1; 2,-1), time: 3.9501s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_17, [-1.9522662162780762,0.06429409980773926]=>[-1.9522662162780762,-1e-05] (-1,-1; 15,-1), time: 0.1143s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_63, [-0.6164649724960327,0.8310720324516296]=>[-0.16666106401744335,0.4123744963412011] (2,-1; 2,-1), time: 3.9974s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_47, [-0.7520098686218262,1.1538944244384766]=>[-0.190080818832607,0.6944271603607529] (2,-1; 2,-1), time: 5.0721s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_9, [-0.36774635314941406,1.489326000213623]=>[1e-05,1.489326000213623] (15,-1; -1,-1), time: 0.6524s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_14, [-0.4392041563987732,1.0876312255859375]=>[1e-05,1.0876312255859375] (15,-1; -1,-1), time: 1.5516s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_15, [-1.5395960807800293,0.6368930339813232]=>[-0.7445249960841933,0.1321193150672447] (2,-1; 2,-1), time: 5.7689s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_35, [-0.42195597290992737,1.289362907409668]=>[-0.1389218378591909,0.8523467982534182] (2,-1; 2,-1), time: 3.5903s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_67, [-0.3393094539642334,1.3553030490875244]=>[-0.06362998157853954,0.8253346436820878] (2,-1; 2,-1), time: 4.0735s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_55, [-1.1675647497177124,0.7828035354614258]=>[-0.802548227797613,0.18702522001897132] (2,-1; 2,-1), time: 3.4503s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_60, [-0.6514402627944946,1.7188760042190552]=>[-0.11178142040813441,0.9857428952076046] (2,-1; 2,-1), time: 4.2853s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_57, [-1.7001214027404785,0.796608030796051]=>[-1.2397939657355637,0.16482200048014298] (2,-1; 2,-1), time: 3.6217s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_33, [-0.9314285516738892,0.5754343271255493]=>[-0.4807578877077957,0.1763241308833172] (2,-1; 2,-1), time: 3.8194s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_18, [-0.45048174262046814,1.0900039672851562]=>[-0.09817618755699273,0.6004924903310336] (2,-1; 2,-1), time: 4.3245s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_49, [-0.46569395065307617,1.6235692501068115]=>[-0.02543824580976875,1.0825320304693813] (2,-1; 2,-1), time: 3.9345s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_81, [-1.3188300132751465,0.4177427589893341]=>[-0.6370489533821357,0.17374221230597728] (2,-1; 2,-1), time: 5.1682s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_0, [-0.6131439208984375,1.5901844501495361]=>[-0.17636498567794778,0.7557007468853082] (2,-1; 2,-1), time: 5.3155s, #vars: 1193, #constrs: 462, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 350.13348388671875 with beta sum per layer: []
optimal alpha/beta time: 13.925554275512695
alpha-CROWN with intermediate bounds by MIP: tensor([[-28.1835, -33.8007, -41.0798, -39.8071, -44.8488, -34.5380, -38.7148,
         -45.0230, -44.1379]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 67 nodes out of 67 unstable nodes, lb improved 19.745325088500977, ub improved 22.29731559753418, time 14.5035
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_67', 'lay8_97', 'lay8_81', 'lay8_5', 'lay8_39', 'lay8_82', 'lay8_55', 'lay8_59', 'lay8_95', 'lay8_12', 'lay8_3', 'lay8_83', 'lay8_21', 'lay8_31', 'lay8_98', 'lay8_99', 'lay8_13', 'lay8_54', 'lay8_76', 'lay8_27', 'lay8_29', 'lay8_47', 'lay8_78', 'lay8_18', 'lay8_25', 'lay8_72', 'lay8_36', 'lay8_24', 'lay8_62', 'lay8_2', 'lay8_75', 'lay8_73', 'lay8_23', 'lay8_85', 'lay8_15', 'lay8_92', 'lay8_58', 'lay8_71', 'lay8_37', 'lay8_30', 'lay8_9', 'lay8_56', 'lay8_19', 'lay8_20', 'lay8_32', 'lay8_68', 'lay8_28', 'lay8_34', 'lay8_84', 'lay8_35', 'lay8_53', 'lay8_14', 'lay8_46', 'lay8_48', 'lay8_74', 'lay8_6', 'lay8_11', 'lay8_26', 'lay8_40', 'lay8_69', 'lay8_52', 'lay8_43', 'lay8_70', 'lay8_77', 'lay8_10', 'lay8_41', 'lay8_1', 'lay8_79', 'lay8_8', 'lay8_16', 'lay8_45', 'lay8_90', 'lay8_0', 'lay8_49', 'lay8_38', 'lay8_64', 'lay8_57', 'lay8_88', 'lay8_4', 'lay8_22', 'lay8_96', 'lay8_91', 'lay8_80', 'lay8_44', 'lay8_87', 'lay8_66', 'lay8_63', 'lay8_94', 'lay8_50', 'lay8_51', 'lay8_86'] filter: 1.0
Solving MIP for lay8_83, [-1.8766372203826904,0.23598235845565796]=>[-1.8766372203826904,-1e-05] (-1,-1; 15,-1), time: 0.1909s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_31, [-1.772436261177063,0.4571414887905121]=>[-1.772436261177063,-1e-05] (-1,-1; 15,-1), time: 0.1926s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_82, [-1.6922847032546997,0.37060195207595825]=>[-1.6922847032546997,-1e-05] (-1,-1; 15,-1), time: 0.2026s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_81, [-1.7475743293762207,0.6336069107055664]=>[-1.7475743293762207,-1e-05] (-1,-1; 15,-1), time: 0.2056s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_99, [-1.764749526977539,0.3520464301109314]=>[-1.764749526977539,-1e-05] (-1,-1; 15,-1), time: 0.2524s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_27, [-2.284522533416748,0.2265404462814331]=>[-2.284522533416748,-1e-05] (-1,-1; 15,-1), time: 0.2045s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_29, [-2.475768566131592,0.245863676071167]=>[-2.475768566131592,-1e-05] (-1,-1; 15,-1), time: 0.2041s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_59, [-2.1902213096618652,0.8637527227401733]=>[-2.1902213096618652,-1e-05] (-1,-1; 15,-1), time: 0.5430s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_76, [-1.4182934761047363,0.5791574120521545]=>[-1.4182934761047363,-1e-05] (-1,-1; 15,-1), time: 0.3912s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_78, [-0.5752041935920715,1.945522665977478]=>[1e-05,1.945522665977478] (15,-1; -1,-1), time: 0.1970s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_72, [-1.5748801231384277,0.5161451101303101]=>[-1.5748801231384277,-1e-05] (-1,-1; 15,-1), time: 0.1893s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_36, [-2.8896737098693848,0.24820482730865479]=>[-2.8896737098693848,-1e-05] (-1,-1; 15,-1), time: 0.2039s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_24, [-2.960524082183838,0.5521494150161743]=>[-2.960524082183838,-1e-05] (-1,-1; 15,-1), time: 0.1854s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_18, [-1.4080890417099,0.5717054605484009]=>[-1.4080890417099,-1e-05] (-1,-1; 15,-1), time: 4.0564s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_47, [-0.8029364943504333,1.2734038829803467]=>[1e-05,1.2734038829803467] (15,-1; -1,-1), time: 4.3601s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_75, [-2.440899610519409,0.3226134777069092]=>[-2.440899610519409,-1e-05] (-1,-1; 15,-1), time: 0.1571s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_73, [-1.9348697662353516,0.22147762775421143]=>[-1.9348697662353516,-1e-05] (-1,-1; 15,-1), time: 0.1552s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_54, [-1.8069937229156494,0.9704930782318115]=>[-1.8069937229156494,-1e-05] (-1,-1; 15,-1), time: 6.0024s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_2, [-0.7149618864059448,1.100022554397583]=>[1e-05,1.100022554397583] (15,-1; -1,-1), time: 3.1244s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_15, [-2.0680992603302,0.14997732639312744]=>[-2.0680992603302,-1e-05] (-1,-1; 15,-1), time: 0.1637s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_92, [-1.8826706409454346,0.1341261863708496]=>[-1.8826706409454346,-1e-05] (-1,-1; 15,-1), time: 0.1663s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_23, [-1.3811712265014648,0.5020533204078674]=>[-1.3811712265014648,-1e-05] (-1,-1; 15,-1), time: 3.0189s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_58, [-0.8256560564041138,2.9340035915374756]=>[1e-05,2.9340035915374756] (15,-1; -1,-1), time: 0.2838s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_37, [-1.9997823238372803,0.3771764039993286]=>[-1.9997823238372803,-1e-05] (-1,-1; 15,-1), time: 0.1610s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_21, [-1.4582645893096924,1.3967841863632202]=>[-0.881537583963209,0.2556376945348563] (2,-1; 2,-1), time: 8.6870s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_30, [-1.8175759315490723,0.3309960961341858]=>[-1.8175759315490723,-1e-05] (-1,-1; 15,-1), time: 0.1575s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_9, [-2.2379794120788574,0.3343815803527832]=>[-2.2379794120788574,-1e-05] (-1,-1; 15,-1), time: 0.1478s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_12, [-1.7972073554992676,1.176138162612915]=>[-1.7972073554992676,-1e-05] (-1,-1; 15,-1), time: 12.9436s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_20, [-0.5935506224632263,1.9321775436401367]=>[1e-05,1.9321775436401367] (15,-1; -1,-1), time: 0.1583s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_32, [-0.8157792687416077,2.5126800537109375]=>[0.0012923732101684272,2.5126800537109375] (2,-1; -1,-1), time: 2.4974s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_62, [-0.9963630437850952,1.0164271593093872]=>[-0.11555687722806805,0.36171391236016137] (2,-1; 2,-1), time: 14.8382s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_55, [-1.1994367837905884,0.8599303364753723]=>[-0.4154082418428946,0.15973103270861005] (2,-1; 2,-1), time: 16.1562s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_28, [-2.70005464553833,0.08019733428955078]=>[-2.70005464553833,-1e-05] (-1,-1; 15,-1), time: 0.1549s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_84, [-2.064673662185669,0.06809026002883911]=>[-2.064673662185669,-1e-05] (-1,-1; 15,-1), time: 0.1500s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_35, [-0.3837392330169678,1.5673820972442627]=>[1e-05,1.5673820972442627] (15,-1; -1,-1), time: 0.1524s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_25, [-1.4306654930114746,0.6630767583847046]=>[-0.5719902692244033,0.04037897037574539] (2,-1; 2,-1), time: 16.0057s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_67, [-2.0322537422180176,1.7125372886657715]=>[-1.4315723926934494,0.18225501761232007] (2,-1; 9,-1), time: 16.6243s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_14, [-2.8567490577697754,0.09972953796386719]=>[-2.8567490577697754,-1e-05] (-1,-1; 15,-1), time: 0.1534s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_95, [-0.8868867754936218,1.24849271774292]=>[-0.27416826160717944,0.4051042660621596] (2,-1; 2,-1), time: 17.1458s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_3, [-1.000993251800537,0.7267194390296936]=>[-0.16552782417470133,0.2686771967628135] (9,-1; 2,-1), time: 17.6778s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_6, [-1.7743489742279053,0.6338398456573486]=>[-1.7743489742279053,-1e-05] (-1,-1; 15,-1), time: 0.2933s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_5, [-0.9630104303359985,0.832334041595459]=>[-0.24290580117814814,0.22299780142311815] (9,-1; 2,-1), time: 18.4333s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_97, [-1.0430588722229004,2.220076560974121]=>[-0.01436423671244642,1.1440346015993001] (2,-1; 2,-1), time: 18.9727s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_40, [-0.21567118167877197,2.073932647705078]=>[1e-05,2.073932647705078] (15,-1; -1,-1), time: 0.1554s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_39, [-1.15174400806427,1.263051986694336]=>[-0.1200289798170412,0.6398156847639352] (9,-1; 2,-1), time: 19.3082s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_98, [-1.0124304294586182,0.9493780136108398]=>[-0.1615077993875901,0.33373965217865376] (2,-1; 2,-1), time: 19.7689s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_13, [-0.7300794720649719,1.1560287475585938]=>[-0.1685480293306083,0.4505258627289812] (2,-1; 9,-1), time: 19.7101s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_43, [-2.6353628635406494,0.4975459575653076]=>[-2.6353628635406494,-1e-05] (-1,-1; 15,-1), time: 0.1554s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_52, [-1.1100131273269653,1.7601221799850464]=>[1e-05,1.7601221799850464] (15,-1; -1,-1), time: 0.6208s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_70, [-0.3752442002296448,1.3367515802383423]=>[1e-05,1.3367515802383423] (15,-1; -1,-1), time: 0.1514s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_10, [-2.1447370052337646,0.1796615719795227]=>[-2.1447370052337646,-1e-05] (-1,-1; 15,-1), time: 0.1465s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_41, [-2.037235975265503,0.35532164573669434]=>[-2.037235975265503,-1e-05] (-1,-1; 15,-1), time: 0.1486s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_1, [-1.4901528358459473,0.39142072200775146]=>[-1.4901528358459473,-1e-05] (-1,-1; 15,-1), time: 0.1555s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_34, [-1.4131834506988525,0.6261404752731323]=>[-1.4131834506988525,-1e-05] (-1,-1; 15,-1), time: 5.0549s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_53, [-0.6422345042228699,1.769402265548706]=>[1e-05,1.769402265548706] (15,-1; -1,-1), time: 5.4871s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_26, [-0.8313747644424438,1.2319363355636597]=>[1e-05,1.2319363355636597] (15,-1; -1,-1), time: 3.9430s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_90, [-0.14383870363235474,2.556213617324829]=>[1e-05,2.556213617324829] (15,-1; -1,-1), time: 0.1513s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_0, [-0.4580345153808594,2.521021604537964]=>[1e-05,2.521021604537964] (15,-1; -1,-1), time: 0.1557s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_49, [-0.5434982776641846,2.962773323059082]=>[1e-05,2.962773323059082] (15,-1; -1,-1), time: 0.1572s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_11, [-1.7931921482086182,1.4039207696914673]=>[-0.8266361117727906,0.6005120660820696] (2,-1; 2,-1), time: 6.3611s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_71, [-3.0242271423339844,1.1054747104644775]=>[-1.577685336517822,0.0759682491507997] (9,-1; 2,-1), time: 18.0370s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_57, [-0.3025318384170532,1.955434799194336]=>[1e-05,1.955434799194336] (15,-1; -1,-1), time: 0.1558s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_88, [-1.5538506507873535,0.9029229879379272]=>[-1.5538506507873535,-1e-05] (-1,-1; 15,-1), time: 0.4358s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_68, [-0.8615012168884277,0.870441734790802]=>[-0.14973549276304274,0.389254491331857] (2,-1; 2,-1), time: 11.7478s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_56, [-1.113420009613037,1.5806483030319214]=>[-0.2106797433835951,0.6277845838864798] (2,-1; 9,-1), time: 20.0262s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_96, [-1.7961128950119019,0.6619759798049927]=>[-1.7961128950119019,-1e-05] (-1,-1; 15,-1), time: 0.1503s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_91, [-0.0700455904006958,2.7939767837524414]=>[1e-05,2.7939767837524414] (15,-1; -1,-1), time: 0.1503s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_80, [-0.5283620357513428,1.8531404733657837]=>[1e-05,1.8531404733657837] (15,-1; -1,-1), time: 0.1478s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_19, [-1.2146105766296387,1.3386330604553223]=>[-0.4128334820284747,0.3430798647278316] (9,-1; 2,-1), time: 20.3479s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_87, [-0.06109035015106201,3.1979384422302246]=>[1e-05,3.1979384422302246] (15,-1; -1,-1), time: 0.1549s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_85, [-1.2991220951080322,1.0621721744537354]=>[-0.37418901189951376,0.31323772813602824] (9,-1; 2,-1), time: 23.6548s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_4, [-1.4707746505737305,0.7212021350860596]=>[-1.4707746505737305,-1e-05] (-1,-1; 15,-1), time: 3.5216s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_94, [-2.2133703231811523,0.16513144969940186]=>[-2.2133703231811523,-1e-05] (-1,-1; 15,-1), time: 0.1556s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_79, [-1.8390754461288452,1.0960054397583008]=>[-0.7275560064130756,0.29893794190906964] (2,-1; 2,-1), time: 10.8250s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_51, [-1.1048071384429932,0.38369300961494446]=>[-1.1048071384429932,-1e-05] (-1,-1; 15,-1), time: 0.1555s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_16, [-1.2055546045303345,1.0670297145843506]=>[-0.4004792308203067,0.25583944781056583] (2,-1; 2,-1), time: 10.0909s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_86, [-1.738591194152832,0.5381436944007874]=>[-1.738591194152832,-1e-05] (-1,-1; 15,-1), time: 0.1529s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_8, [-1.360640048980713,1.0007621049880981]=>[-0.6312038199481528,0.2368024134499241] (2,-1; 2,-1), time: 13.5997s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_48, [-1.4059964418411255,0.8374804258346558]=>[-0.3629001035703116,0.17885338883043797] (9,-1; 2,-1), time: 18.1121s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_22, [-1.678221344947815,0.9604068398475647]=>[-0.8763541044337164,0.09467146770786701] (2,-1; 2,-1), time: 8.7016s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_63, [-1.7155344486236572,2.4270846843719482]=>[-0.8014620830691764,1.0091159136433745] (2,-1; 2,-1), time: 8.1336s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_77, [-1.9439481496810913,1.4324617385864258]=>[-0.5156849075758642,0.7069413212720704] (9,-1; 2,-1), time: 18.2618s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_74, [-1.2279977798461914,0.7832887172698975]=>[-0.4358650855295202,0.1389541197825267] (2,-1; 2,-1), time: 21.6391s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_69, [-0.80999755859375,1.547681450843811]=>[-0.06194989827820703,0.7142296509898526] (2,-1; 9,-1), time: 19.9441s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_45, [-1.7080949544906616,1.506168246269226]=>[-1.0422274283925037,0.16194622169040054] (2,-1; 2,-1), time: 17.2616s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_64, [-1.665163278579712,1.241708517074585]=>[-0.8977259342881375,0.06527200035844875] (2,-1; 2,-1), time: 15.6101s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_44, [-0.8542982339859009,1.7826722860336304]=>[-0.3487578347785988,0.7095843774266143] (2,-1; 2,-1), time: 10.9901s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_46, [-1.4572324752807617,0.6587015986442566]=>[-0.6335681767671743,0.02261243190512381] (2,-1; 9,-1), time: 27.4603s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_38, [-1.030815601348877,1.4682211875915527]=>[-0.3650469864055696,0.3546114479582195] (2,-1; 9,-1), time: 21.8828s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_66, [-1.152012825012207,0.5104049444198608]=>[-0.5057613721957506,0.019493575930149415] (9,-1; 2,-1), time: 19.0188s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_50, [-0.8241710662841797,0.9750097393989563]=>[-0.06669053835692706,0.39668402566476324] (9,-1; 2,-1), time: 18.0759s, #vars: 1361, #constrs: 664, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 131.05029296875 with beta sum per layer: []
optimal alpha/beta time: 14.65244174003601
alpha-CROWN with intermediate bounds by MIP: tensor([[-10.5602, -12.4617, -15.1430, -14.5419, -16.3614, -13.6060, -15.8063,
         -16.2733, -16.2966]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 91 nodes out of 91 unstable nodes, lb improved 38.29714584350586, ub improved 45.199947357177734, time 48.9339
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_99', 'lay10_70', 'lay10_49', 'lay10_24', 'lay10_20', 'lay10_36', 'lay10_42', 'lay10_88', 'lay10_65', 'lay10_8', 'lay10_85', 'lay10_43', 'lay10_98', 'lay10_9', 'lay10_27', 'lay10_71', 'lay10_40', 'lay10_21', 'lay10_13', 'lay10_60', 'lay10_87', 'lay10_54', 'lay10_41', 'lay10_10', 'lay10_16', 'lay10_96', 'lay10_26', 'lay10_28', 'lay10_48', 'lay10_89', 'lay10_68', 'lay10_74', 'lay10_66', 'lay10_77', 'lay10_33', 'lay10_59', 'lay10_2', 'lay10_31', 'lay10_44', 'lay10_93', 'lay10_18', 'lay10_69', 'lay10_64', 'lay10_84', 'lay10_86', 'lay10_1', 'lay10_45', 'lay10_61', 'lay10_78', 'lay10_75', 'lay10_11', 'lay10_15', 'lay10_94', 'lay10_25', 'lay10_92', 'lay10_51', 'lay10_97', 'lay10_17', 'lay10_47', 'lay10_4', 'lay10_83', 'lay10_19', 'lay10_72', 'lay10_0', 'lay10_90', 'lay10_37', 'lay10_67', 'lay10_46', 'lay10_76', 'lay10_82', 'lay10_38', 'lay10_52', 'lay10_63', 'lay10_14', 'lay10_29', 'lay10_22', 'lay10_32', 'lay10_95', 'lay10_3', 'lay10_81', 'lay10_23', 'lay10_6', 'lay10_7', 'lay10_12', 'lay10_56', 'lay10_79', 'lay10_35', 'lay10_34', 'lay10_62', 'lay10_73', 'lay10_55', 'lay10_53', 'lay10_57', 'lay10_80', 'lay10_5', 'lay10_50', 'lay10_39', 'lay10_30', 'lay10_91', 'lay10_58'] filter: 1.0
Solving MIP for lay10_27, [-2.9487969875335693,1.2295494079589844]=>[-2.9487969875335693,-1e-05] (-1,-1; 15,-1), time: 0.2201s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_49, [-3.8309106826782227,1.1779645681381226]=>[-3.8309106826782227,-1e-05] (-1,-1; 15,-1), time: 0.2326s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_42, [-1.7377671003341675,2.6051149368286133]=>[1e-05,2.6051149368286133] (15,-1; -1,-1), time: 0.2337s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_98, [-2.730482578277588,0.8296641707420349]=>[-2.730482578277588,-1e-05] (-1,-1; 15,-1), time: 0.2335s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_9, [-2.3625974655151367,1.2724088430404663]=>[-2.3625974655151367,-1e-05] (-1,-1; 15,-1), time: 0.2379s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_85, [-2.842539072036743,1.1785931587219238]=>[-2.842539072036743,-1e-05] (-1,-1; 15,-1), time: 0.2390s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_43, [-0.9612820148468018,2.74208402633667]=>[1e-05,2.74208402633667] (15,-1; -1,-1), time: 0.2472s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_71, [-0.8686515092849731,2.8640670776367188]=>[1e-05,2.8640670776367188] (15,-1; -1,-1), time: 0.2850s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_60, [-3.0050196647644043,1.1551971435546875]=>[-3.0050196647644043,-1e-05] (-1,-1; 15,-1), time: 0.2307s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_10, [-3.355576992034912,1.6015695333480835]=>[-3.355576992034912,-1e-05] (-1,-1; 15,-1), time: 0.2289s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_16, [-1.330509901046753,2.658797025680542]=>[1e-05,2.658797025680542] (15,-1; -1,-1), time: 0.2182s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_41, [-2.4902215003967285,1.3880939483642578]=>[-2.4902215003967285,-1e-05] (-1,-1; 15,-1), time: 0.4430s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_96, [-1.1878480911254883,2.124379873275757]=>[1e-05,2.124379873275757] (15,-1; -1,-1), time: 0.1990s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_48, [-1.3505250215530396,3.158710479736328]=>[1e-05,3.158710479736328] (15,-1; -1,-1), time: 0.1693s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_28, [-2.8174173831939697,1.0819859504699707]=>[-2.8174173831939697,-1e-05] (-1,-1; 15,-1), time: 0.2075s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_89, [-2.6740009784698486,0.9577791690826416]=>[-2.6740009784698486,-1e-05] (-1,-1; 15,-1), time: 0.1700s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_68, [-2.531064510345459,1.1575596332550049]=>[-2.531064510345459,-1e-05] (-1,-1; 15,-1), time: 0.2105s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_74, [-2.6931099891662598,1.5858941078186035]=>[-2.6931099891662598,-1e-05] (-1,-1; 15,-1), time: 0.2072s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_66, [-2.86869478225708,1.2091020345687866]=>[-2.86869478225708,-1e-05] (-1,-1; 15,-1), time: 0.2018s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_88, [-1.9021326303482056,1.1388518810272217]=>[-1.9021326303482056,-1e-05] (-1,-1; 15,-1), time: 1.5804s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_59, [-2.1652204990386963,0.9462385177612305]=>[-2.1652204990386963,-1e-05] (-1,-1; 15,-1), time: 0.2128s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_24, [-2.216942071914673,1.510794758796692]=>[-2.216942071914673,-1e-05] (-1,-1; 15,-1), time: 4.7715s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_70, [-2.1052730083465576,1.5595951080322266]=>[-2.1052730083465576,-1e-05] (-1,-1; 15,-1), time: 5.3689s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_44, [-3.5813498497009277,2.4247207641601562]=>[-3.5813498497009277,-1e-05] (-1,-1; 15,-1), time: 0.7840s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_13, [-2.128202199935913,2.650977373123169]=>[-0.7073946868360133,0.6179746673664386] (2,-1; 9,-1), time: 19.5589s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_18, [-2.4404232501983643,0.8732923269271851]=>[-2.4404232501983643,-1e-05] (-1,-1; 15,-1), time: 0.1776s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_20, [-2.3875370025634766,1.7192996740341187]=>[-0.988143716650988,0.18782873508188655] (2,-1; 9,-1), time: 20.9148s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_64, [-2.0506858825683594,0.8725848197937012]=>[-2.0506858825683594,-1e-05] (-1,-1; 15,-1), time: 0.1849s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_84, [-1.4540448188781738,2.376157522201538]=>[1e-05,2.376157522201538] (15,-1; -1,-1), time: 0.1836s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_86, [-3.2018487453460693,0.9264304637908936]=>[-3.2018487453460693,-1e-05] (-1,-1; 15,-1), time: 0.1724s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_1, [-0.5450572967529297,3.1006884574890137]=>[1e-05,3.1006884574890137] (15,-1; -1,-1), time: 0.1796s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_8, [-2.374899387359619,1.7832715511322021]=>[-0.47504372781584714,0.34757679704548367] (9,-1; 2,-1), time: 22.2987s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_61, [-1.4232187271118164,2.0567398071289062]=>[1e-05,2.0567398071289062] (15,-1; -1,-1), time: 0.3876s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_78, [-2.5741491317749023,0.8117623925209045]=>[-2.5741491317749023,-1e-05] (-1,-1; 15,-1), time: 0.1771s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_75, [-3.1453163623809814,0.8190146684646606]=>[-3.1453163623809814,-1e-05] (-1,-1; 15,-1), time: 0.1714s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_11, [-0.7386864423751831,3.36381196975708]=>[1e-05,3.36381196975708] (15,-1; -1,-1), time: 0.1679s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_15, [-1.229448676109314,3.066262722015381]=>[1e-05,3.066262722015381] (15,-1; -1,-1), time: 0.1688s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_2, [-2.6626713275909424,1.557868242263794]=>[-0.6883106142876031,0.4852167164852456] (9,-1; 2,-1), time: 24.4698s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_25, [-3.5960562229156494,1.1559168100357056]=>[-3.5960562229156494,-1e-05] (-1,-1; 15,-1), time: 0.1784s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_36, [-2.0579047203063965,1.7652864456176758]=>[-0.5399643129845284,0.23396345622480674] (9,-1; 9,-1), time: 30.0043s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_65, [-1.743412733078003,2.923895835876465]=>[-0.14312043104695807,0.8832547856172032] (9,-1; 9,-1), time: 30.0070s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_99, [-1.734259009361267,4.026808738708496]=>[-0.1236194805484691,1.4190639998605337] (9,-1; 9,-1), time: 30.0100s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_97, [-3.131835460662842,1.2170209884643555]=>[-3.131835460662842,-1e-05] (-1,-1; 15,-1), time: 0.1800s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_17, [-1.6782262325286865,2.7153711318969727]=>[1e-05,2.7153711318969727] (15,-1; -1,-1), time: 0.1796s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_40, [-1.8779115676879883,2.6158320903778076]=>[-0.10690421125723702,1.029740113126972] (9,-1; 9,-1), time: 30.0057s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_21, [-1.8806054592132568,1.8723022937774658]=>[-0.6949063666627348,0.14978211773794894] (9,-1; 9,-1), time: 30.0103s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_87, [-2.162271022796631,1.522741675376892]=>[-0.6159772561095387,0.1834630967207922] (9,-1; 9,-1), time: 30.0038s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_54, [-1.9119552373886108,1.3608551025390625]=>[-0.21618817977991675,0.23923090203774097] (9,-1; 9,-1), time: 30.0080s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_47, [-1.9026743173599243,2.8843517303466797]=>[1e-05,2.8843517303466797] (15,-1; -1,-1), time: 0.1771s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_4, [-2.1476147174835205,1.0397512912750244]=>[-2.1476147174835205,-1e-05] (-1,-1; 15,-1), time: 0.1810s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_19, [-0.39263057708740234,4.63545036315918]=>[1e-05,4.63545036315918] (15,-1; -1,-1), time: 0.1729s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_72, [-2.039520263671875,1.54801607131958]=>[-2.039520263671875,-1e-05] (-1,-1; 15,-1), time: 0.1809s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_37, [-0.3708939552307129,4.0272626876831055]=>[1e-05,4.0272626876831055] (15,-1; -1,-1), time: 0.1800s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_67, [-0.9404926300048828,2.642660140991211]=>[1e-05,2.642660140991211] (15,-1; -1,-1), time: 0.1745s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_46, [-2.8006577491760254,1.5600917339324951]=>[-2.8006577491760254,-1e-05] (-1,-1; 15,-1), time: 0.1759s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_26, [-2.0405025482177734,2.1151952743530273]=>[-0.4755249683263615,0.29816034554661963] (9,-1; 9,-1), time: 30.0094s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_82, [-2.5491089820861816,0.9156259298324585]=>[-2.5491089820861816,-1e-05] (-1,-1; 15,-1), time: 0.1770s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_38, [-3.1044743061065674,1.0548115968704224]=>[-3.1044743061065674,-1e-05] (-1,-1; 15,-1), time: 0.1759s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_76, [-1.9346718788146973,1.422701120376587]=>[-1.9346718788146973,-1e-05] (-1,-1; 15,-1), time: 0.3842s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_63, [-2.346202850341797,1.7339216470718384]=>[-2.346202850341797,-1e-05] (-1,-1; 15,-1), time: 0.1759s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_77, [-1.4348033666610718,2.8877975940704346]=>[-0.053253444733148275,0.9733786957720794] (9,-1; 9,-1), time: 30.0030s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_33, [-2.1158485412597656,2.2194952964782715]=>[-0.32921450542309183,0.5947550596821864] (9,-1; 9,-1), time: 30.0050s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_32, [-2.733106851577759,0.8272793292999268]=>[-2.733106851577759,-1e-05] (-1,-1; 15,-1), time: 0.1755s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_95, [-2.7107114791870117,0.9290429949760437]=>[-2.7107114791870117,-1e-05] (-1,-1; 15,-1), time: 0.1752s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_3, [-1.8991756439208984,1.1242313385009766]=>[-1.8991756439208984,-1e-05] (-1,-1; 15,-1), time: 0.1827s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_81, [-2.789527416229248,1.067307710647583]=>[-2.789527416229248,-1e-05] (-1,-1; 15,-1), time: 0.1751s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_92, [-2.0622689723968506,1.1917307376861572]=>[-2.0622689723968506,-1e-05] (-1,-1; 15,-1), time: 5.2592s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_6, [-2.3084375858306885,1.0902599096298218]=>[-2.3084375858306885,-1e-05] (-1,-1; 15,-1), time: 0.1749s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_7, [-4.1924052238464355,0.3569061756134033]=>[-4.1924052238464355,-1e-05] (-1,-1; 15,-1), time: 0.1830s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_12, [-1.14937424659729,3.435091733932495]=>[1e-05,3.435091733932495] (15,-1; -1,-1), time: 0.1766s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_79, [-1.4137227535247803,1.977594256401062]=>[1e-05,1.977594256401062] (15,-1; -1,-1), time: 0.1818s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_31, [-1.4737800359725952,1.9632821083068848]=>[-0.01684345459202497,0.41704219725029235] (9,-1; 9,-1), time: 30.0030s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_34, [-1.3199176788330078,3.1033430099487305]=>[1e-05,3.1033430099487305] (15,-1; -1,-1), time: 0.1721s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_29, [-2.416663408279419,1.4575735330581665]=>[-2.416663408279419,-1e-05] (-1,-1; 15,-1), time: 4.2664s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_73, [-2.1939096450805664,1.3367640972137451]=>[-2.1939096450805664,-1e-05] (-1,-1; 15,-1), time: 0.8410s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_93, [-1.4083346128463745,1.710662603378296]=>[-0.3752952865804891,0.2950807504287066] (9,-1; 9,-1), time: 30.0026s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_62, [-1.7449545860290527,1.597486972808838]=>[-1.7449545860290527,-1e-05] (-1,-1; 15,-1), time: 3.0368s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_69, [-1.6684062480926514,1.8771798610687256]=>[-0.2303597651327192,0.4174796468183922] (9,-1; 9,-1), time: 30.0041s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_45, [-2.5740771293640137,1.1132011413574219]=>[-0.6278453987247291,0.06655676850538507] (9,-1; 9,-1), time: 30.0105s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_51, [-1.6635282039642334,3.7025957107543945]=>[-0.08712644163621905,1.7017430219975211] (2,-1; 9,-1), time: 21.9356s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_52, [-1.8753933906555176,1.8630633354187012]=>[1e-05,0.7043837617965718] (15,-1; 9,-1), time: 21.6232s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_50, [-2.1859490871429443,3.670215606689453]=>[1e-05,3.670215606689453] (15,-1; -1,-1), time: 0.5456s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_39, [-2.5560460090637207,1.08897864818573]=>[-2.5560460090637207,-1e-05] (-1,-1; 15,-1), time: 0.1742s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_30, [-3.60951828956604,1.6220483779907227]=>[-3.60951828956604,-1e-05] (-1,-1; 15,-1), time: 0.1741s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_58, [-2.9382317066192627,1.0076086521148682]=>[-2.9382317066192627,-1e-05] (-1,-1; 15,-1), time: 0.1725s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_94, [-2.3415260314941406,1.4578832387924194]=>[-0.4759486429171214,0.3819813643530832] (9,-1; 9,-1), time: 30.0026s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_23, [-1.5942710638046265,4.389726638793945]=>[-0.39060606313595064,1.6203034812456543] (2,-1; 9,-1), time: 22.1335s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_22, [-1.9787722826004028,2.807760000228882]=>[-0.7281285747154298,0.6661092949173364] (2,-1; 9,-1), time: 24.5908s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_83, [-1.9590224027633667,1.268369436264038]=>[-0.23380035344825,0.12498446522301081] (9,-1; 9,-1), time: 30.0028s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_0, [-2.1881444454193115,1.540457844734192]=>[-0.625015590687418,0.19763948686815863] (9,-1; 9,-1), time: 30.0065s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_90, [-2.323894739151001,1.393970251083374]=>[-0.7215356917519549,0.05140722877616224] (9,-1; 9,-1), time: 30.0044s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_14, [-2.282482624053955,1.7742466926574707]=>[-0.45064878183455254,0.5132593411002402] (9,-1; 9,-1), time: 30.0035s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_55, [-1.4789361953735352,1.6858131885528564]=>[-0.47018947420199636,0.03585299423154427] (9,-1; 2,-1), time: 24.7495s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_56, [-1.577465534210205,1.936087727546692]=>[-0.09134953582915228,0.46720312842008976] (9,-1; 9,-1), time: 30.0033s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_35, [-1.7460256814956665,2.280893325805664]=>[-0.33268615721536227,0.6096404366662755] (9,-1; 9,-1), time: 30.0034s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_53, [-2.2188169956207275,1.1716095209121704]=>[-0.35644581981298135,0.13999542851213637] (9,-1; 9,-1), time: 30.0175s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_57, [-2.0433244705200195,1.862531304359436]=>[-0.2997099850465918,0.29677782492012683] (9,-1; 9,-1), time: 30.0027s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_5, [-1.8594011068344116,1.9386829137802124]=>[-0.19358212870065203,0.4723894612627644] (9,-1; 2,-1), time: 22.9637s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_80, [-1.9678351879119873,1.822332739830017]=>[-0.17269540577232434,0.6013234425397207] (9,-1; 9,-1), time: 30.0029s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_91, [-1.3734840154647827,2.554600954055786]=>[-0.19131020445970412,0.688523902184242] (9,-1; 9,-1), time: 30.0035s, #vars: 1529, #constrs: 866, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: 24.749767303466797 with beta sum per layer: []
optimal alpha/beta time: 14.39368486404419
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.6240, -1.9992, -3.0791, -1.5380, -3.0957, -4.0662, -5.4511, -1.3777,
         -2.5189]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 79.0621566772461, ub improved 109.07768249511719, time 82.9310
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_62', 'lay12_53', 'lay12_97', 'lay12_26', 'lay12_49', 'lay12_80', 'lay12_15', 'lay12_93', 'lay12_50', 'lay12_47', 'lay12_78', 'lay12_40', 'lay12_11', 'lay12_34', 'lay12_76', 'lay12_27', 'lay12_69', 'lay12_1', 'lay12_20', 'lay12_2', 'lay12_5', 'lay12_10', 'lay12_61', 'lay12_94', 'lay12_99', 'lay12_57', 'lay12_41', 'lay12_13', 'lay12_3', 'lay12_74', 'lay12_71', 'lay12_36', 'lay12_68', 'lay12_56', 'lay12_85', 'lay12_43', 'lay12_77', 'lay12_37', 'lay12_73', 'lay12_4', 'lay12_58', 'lay12_24', 'lay12_51', 'lay12_45', 'lay12_22', 'lay12_18', 'lay12_88', 'lay12_33', 'lay12_81', 'lay12_65', 'lay12_54', 'lay12_55', 'lay12_30', 'lay12_29', 'lay12_92', 'lay12_66', 'lay12_39', 'lay12_64', 'lay12_21', 'lay12_28', 'lay12_31', 'lay12_19', 'lay12_46', 'lay12_84', 'lay12_14', 'lay12_42', 'lay12_79', 'lay12_70', 'lay12_83', 'lay12_60', 'lay12_96', 'lay12_32', 'lay12_8', 'lay12_9', 'lay12_90', 'lay12_75', 'lay12_38', 'lay12_89', 'lay12_98', 'lay12_7', 'lay12_52', 'lay12_82', 'lay12_16', 'lay12_35', 'lay12_72', 'lay12_23', 'lay12_59', 'lay12_91', 'lay12_0', 'lay12_95', 'lay12_6', 'lay12_67', 'lay12_25', 'lay12_12', 'lay12_48', 'lay12_17', 'lay12_87', 'lay12_86', 'lay12_44', 'lay12_63'] filter: 1.0
Solving MIP for lay12_50, [-3.3389008045196533,6.167030334472656]=>[1e-05,6.167030334472656] (15,-1; -1,-1), time: 0.2771s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_97, [-4.465541362762451,3.6363470554351807]=>[-4.465541362762451,-1e-05] (-1,-1; 15,-1), time: 0.2915s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_53, [-4.39426326751709,3.966449499130249]=>[-4.39426326751709,-1e-05] (-1,-1; 15,-1), time: 0.2935s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_11, [-4.833386421203613,3.2047133445739746]=>[-4.833386421203613,-1e-05] (-1,-1; 15,-1), time: 0.3073s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_62, [-3.48870587348938,4.744941234588623]=>[1e-05,4.744941234588623] (15,-1; -1,-1), time: 0.3618s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_69, [-3.481520175933838,4.166213035583496]=>[1e-05,4.166213035583496] (15,-1; -1,-1), time: 0.2784s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_1, [-4.190240383148193,3.5499777793884277]=>[-4.190240383148193,-1e-05] (-1,-1; 15,-1), time: 0.2976s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_2, [-5.14430046081543,2.395998477935791]=>[-5.14430046081543,-1e-05] (-1,-1; 15,-1), time: 0.2932s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_5, [-4.699785232543945,2.788874626159668]=>[-4.699785232543945,-1e-05] (-1,-1; 15,-1), time: 0.2475s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_76, [-3.847996234893799,2.5444040298461914]=>[-3.847996234893799,-1e-05] (-1,-1; 15,-1), time: 0.7783s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_10, [-4.6535868644714355,2.121727228164673]=>[-4.6535868644714355,-1e-05] (-1,-1; 15,-1), time: 0.2571s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_99, [-4.325344562530518,2.2445123195648193]=>[-4.325344562530518,-1e-05] (-1,-1; 15,-1), time: 0.2135s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_94, [-4.030991554260254,4.1226019859313965]=>[1e-05,4.1226019859313965] (15,-1; -1,-1), time: 0.2751s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_61, [-4.916005611419678,2.173107862472534]=>[-4.916005611419678,-1e-05] (-1,-1; 15,-1), time: 0.3165s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_57, [-4.019467830657959,2.737825393676758]=>[-4.019467830657959,-1e-05] (-1,-1; 15,-1), time: 0.2672s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_13, [-6.125848770141602,1.945960521697998]=>[-6.125848770141602,-1e-05] (-1,-1; 15,-1), time: 0.2969s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_74, [-4.8788838386535645,1.6763830184936523]=>[-4.8788838386535645,-1e-05] (-1,-1; 15,-1), time: 0.2972s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_36, [-4.7509965896606445,3.2083816528320312]=>[-4.7509965896606445,-1e-05] (-1,-1; 15,-1), time: 0.2979s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_56, [-4.323965549468994,2.143383741378784]=>[-4.323965549468994,-1e-05] (-1,-1; 15,-1), time: 0.2276s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_68, [-3.541323184967041,3.7186691761016846]=>[-0.943444205773316,-1e-05] (9,-1; 15,-1), time: 15.2357s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_43, [-4.184581756591797,2.9889063835144043]=>[-4.184581756591797,-1e-05] (-1,-1; 15,-1), time: 0.2279s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_80, [-3.7744429111480713,4.305744647979736]=>[-0.5803723612503112,0.15623594152041995] (9,-1; 9,-1), time: 30.0046s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_26, [-4.718413829803467,4.034008502960205]=>[-0.8062035434214271,0.11347352078433968] (9,-1; 9,-1), time: 30.0074s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_93, [-3.966262102127075,3.1829538345336914]=>[-0.5235188310711402,0.1620918407396524] (9,-1; 9,-1), time: 30.0110s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_78, [-4.481618881225586,2.488785743713379]=>[-0.618249799263335,0.049958046417900706] (9,-1; 9,-1), time: 30.0121s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_34, [-3.8853585720062256,3.0949206352233887]=>[-0.669262939960919,0.21268774353419365] (9,-1; 9,-1), time: 30.0128s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_47, [-3.9228615760803223,4.367772579193115]=>[-0.7004915858243858,0.5255248717996874] (9,-1; 9,-1), time: 30.0173s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_15, [-4.456188678741455,5.691229820251465]=>[-0.4800876983762941,1.1737588144504103] (9,-1; 9,-1), time: 30.0179s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_49, [-4.281405925750732,3.226398468017578]=>[-0.6768514511683125,0.048270358609303024] (9,-1; 9,-1), time: 30.0181s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_40, [-3.3914644718170166,3.8088860511779785]=>[-0.25901915859495905,0.4265434592952261] (9,-1; 9,-1), time: 30.0352s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_27, [-4.168847560882568,4.646386623382568]=>[-0.3406852159391528,1.0340264338418659] (9,-1; 9,-1), time: 30.0986s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_73, [-5.331917762756348,3.202617883682251]=>[-5.331917762756348,-1e-05] (-1,-1; 15,-1), time: 0.2281s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_18, [-4.332027435302734,4.876320838928223]=>[1e-05,4.876320838928223] (15,-1; -1,-1), time: 0.2263s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_20, [-3.4518020153045654,3.636176347732544]=>[-0.4698301660255984,0.08243637833420374] (9,-1; 9,-1), time: 30.0049s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_88, [-2.214552402496338,5.982298374176025]=>[1e-05,5.982298374176025] (15,-1; -1,-1), time: 0.2189s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_81, [-3.008780002593994,4.981207847595215]=>[1e-05,4.981207847595215] (15,-1; -1,-1), time: 0.2277s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_54, [-4.804633140563965,2.8952465057373047]=>[-4.804633140563965,-1e-05] (-1,-1; 15,-1), time: 0.2222s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_30, [-4.709039688110352,2.4799296855926514]=>[-4.709039688110352,-1e-05] (-1,-1; 15,-1), time: 0.2370s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_41, [-3.409829616546631,3.0225324630737305]=>[-0.41844851039630826,0.267886473755567] (9,-1; 9,-1), time: 30.0082s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_3, [-3.946998357772827,3.445915699005127]=>[-0.547923914172805,0.034877642056754] (9,-1; 9,-1), time: 30.0086s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_29, [-3.00593900680542,5.935221195220947]=>[1e-05,5.935221195220947] (15,-1; -1,-1), time: 0.2226s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_71, [-3.9237215518951416,2.760867118835449]=>[-0.9217670739993269,0.029780011907786914] (9,-1; 9,-1), time: 30.0180s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_92, [-3.5766067504882812,2.5832879543304443]=>[-3.5766067504882812,-1e-05] (-1,-1; 15,-1), time: 0.2369s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_66, [-3.5977373123168945,4.491203308105469]=>[1e-05,4.491203308105469] (15,-1; -1,-1), time: 0.2339s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_39, [-4.4698920249938965,1.8346971273422241]=>[-4.4698920249938965,-1e-05] (-1,-1; 15,-1), time: 0.2273s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_64, [-2.3697004318237305,3.7967076301574707]=>[1e-05,3.7967076301574707] (15,-1; -1,-1), time: 0.2316s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_31, [-2.3634767532348633,5.5604658126831055]=>[1e-05,5.5604658126831055] (15,-1; -1,-1), time: 0.2274s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_85, [-3.9750099182128906,4.026147842407227]=>[-0.6572273244097461,0.2112309495998352] (9,-1; 9,-1), time: 30.0084s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_46, [-3.396176338195801,4.344677925109863]=>[1e-05,4.344677925109863] (15,-1; -1,-1), time: 0.2363s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_19, [-4.337505340576172,2.3691840171813965]=>[-4.337505340576172,-1e-05] (-1,-1; 15,-1), time: 0.8715s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_42, [-4.839642524719238,2.1854817867279053]=>[-4.839642524719238,-1e-05] (-1,-1; 15,-1), time: 0.2367s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_79, [-4.220770835876465,2.8778204917907715]=>[-4.220770835876465,-1e-05] (-1,-1; 15,-1), time: 0.2255s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_70, [-3.868847370147705,6.114258766174316]=>[1e-05,6.114258766174316] (15,-1; -1,-1), time: 0.2228s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_83, [-6.070359706878662,3.0745396614074707]=>[-6.070359706878662,-1e-05] (-1,-1; 15,-1), time: 0.2233s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_60, [-3.4886937141418457,4.0434489250183105]=>[1e-05,4.0434489250183105] (15,-1; -1,-1), time: 0.2365s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_37, [-4.206923961639404,2.376589059829712]=>[-4.206923961639404,-1e-05] (-1,-1; 15,-1), time: 3.8269s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_14, [-3.9558238983154297,2.710787057876587]=>[-3.9558238983154297,-1e-05] (-1,-1; 15,-1), time: 4.3884s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_84, [-3.8302462100982666,2.148519515991211]=>[-3.8302462100982666,-1e-05] (-1,-1; 15,-1), time: 6.2604s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_8, [-3.122075319290161,3.3267154693603516]=>[1e-05,3.3267154693603516] (15,-1; -1,-1), time: 5.5267s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_96, [-3.5502820014953613,3.6774840354919434]=>[1e-05,3.6774840354919434] (15,-1; -1,-1), time: 8.8211s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_32, [-4.019836902618408,3.015580177307129]=>[-4.019836902618408,-1e-05] (-1,-1; 15,-1), time: 8.9753s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_77, [-3.687286138534546,2.428908586502075]=>[-0.2163670916121518,0.2759929352626424] (9,-1; 9,-1), time: 30.0449s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_89, [-5.09002685546875,2.4843993186950684]=>[-5.09002685546875,-1e-05] (-1,-1; 15,-1), time: 0.2235s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_55, [-3.217362880706787,3.0671582221984863]=>[1e-05,0.8884115676413673] (15,-1; 9,-1), time: 23.1414s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_4, [-4.850863933563232,5.191523551940918]=>[-0.8244551009896564,0.32387173385295687] (9,-1; 9,-1), time: 30.0083s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_58, [-3.611837863922119,2.982250928878784]=>[-0.5071776072071769,0.1914863841492133] (9,-1; 9,-1), time: 30.0072s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_24, [-4.82408332824707,4.883305072784424]=>[-0.57127477061681,1.1535992291172636] (9,-1; 9,-1), time: 30.0028s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_51, [-4.247228622436523,3.344160795211792]=>[-1.1467450548361255,0.0849538621357476] (9,-1; 9,-1), time: 30.0043s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_45, [-4.1874494552612305,2.6594865322113037]=>[-0.5515330881870911,0.07384306781942328] (9,-1; 9,-1), time: 30.0026s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_22, [-4.129651069641113,2.2868576049804688]=>[-0.3979432096993291,0.18077467796065946] (9,-1; 9,-1), time: 30.1142s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_33, [-4.18912935256958,3.355574369430542]=>[-0.36430301492049705,0.7683027057692677] (9,-1; 9,-1), time: 30.0027s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_52, [-3.8583476543426514,3.1708316802978516]=>[-3.8583476543426514,-1e-05] (-1,-1; 15,-1), time: 0.2210s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_16, [-4.6208600997924805,2.099900722503662]=>[-4.6208600997924805,-1e-05] (-1,-1; 15,-1), time: 0.2197s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_35, [-3.394496440887451,5.304722309112549]=>[1e-05,5.304722309112549] (15,-1; -1,-1), time: 0.2220s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_82, [-4.480815887451172,2.681699752807617]=>[-4.480815887451172,-1e-05] (-1,-1; 15,-1), time: 0.2407s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_65, [-4.316415786743164,2.55694842338562]=>[-0.2221500875147949,0.3430263906836672] (9,-1; 9,-1), time: 30.0024s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_23, [-3.6971089839935303,4.262555122375488]=>[1e-05,4.262555122375488] (15,-1; -1,-1), time: 0.2341s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_6, [-4.396844387054443,2.502563714981079]=>[-4.396844387054443,-1e-05] (-1,-1; 15,-1), time: 0.2447s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_25, [-4.52238655090332,3.497014045715332]=>[-4.52238655090332,-1e-05] (-1,-1; 15,-1), time: 0.4865s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_21, [-3.995839834213257,2.6593265533447266]=>[-0.468782938768603,0.05001904187314728] (9,-1; 9,-1), time: 30.0191s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_28, [-3.6643128395080566,2.846470355987549]=>[-0.6028284774336787,0.18629870391427514] (9,-1; 9,-1), time: 30.0035s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_87, [-2.6816606521606445,4.404926776885986]=>[1e-05,4.404926776885986] (15,-1; -1,-1), time: 0.2341s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_17, [-4.095332145690918,3.3794264793395996]=>[-4.095332145690918,-1e-05] (-1,-1; 15,-1), time: 6.4384s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_44, [-4.949426651000977,2.777150869369507]=>[-4.949426651000977,-1e-05] (-1,-1; 15,-1), time: 0.2249s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_9, [-4.027693748474121,3.585522413253784]=>[-0.6114120914638765,0.5188252029891998] (9,-1; 9,-1), time: 30.0144s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_90, [-4.626070022583008,2.8545031547546387]=>[-1.048683126301038,0.20231297876295135] (9,-1; 9,-1), time: 30.0090s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_75, [-3.7851104736328125,4.578529357910156]=>[-0.82457144276144,0.5926630240479447] (9,-1; 9,-1), time: 30.0181s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_38, [-5.18671989440918,2.1397933959960938]=>[-0.6567946085713519,0.0867548402098551] (9,-1; 9,-1), time: 30.0088s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_98, [-4.277393817901611,6.613555908203125]=>[-0.3351420749938217,1.5516261225374914] (9,-1; 9,-1), time: 30.0038s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_7, [-3.5932743549346924,3.574929714202881]=>[-0.5950097952276681,0.09992380078302812] (9,-1; 9,-1), time: 30.0072s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_72, [-3.5402910709381104,4.681184768676758]=>[-0.158520910328516,0.7774579687267645] (9,-1; 9,-1), time: 30.0056s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_59, [-4.291318893432617,4.546867847442627]=>[-0.792470469885016,0.7108970964244046] (9,-1; 9,-1), time: 30.0031s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_0, [-4.210921287536621,2.74774169921875]=>[-0.3286283703685802,0.17885818760633618] (9,-1; 9,-1), time: 30.0049s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_91, [-3.2344167232513428,3.9865052700042725]=>[-0.05001138763287466,0.8847131561654857] (9,-1; 9,-1), time: 30.0085s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_95, [-3.682661771774292,3.787487745285034]=>[-0.5678022604638167,0.24478160263115364] (9,-1; 9,-1), time: 30.0341s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_67, [-3.8073830604553223,3.691272735595703]=>[-0.7604602362741363,0.18166671273141524] (9,-1; 9,-1), time: 30.0189s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_12, [-3.9725162982940674,2.867521047592163]=>[-0.4820773864677418,0.19112687704332076] (9,-1; 9,-1), time: 30.0162s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_48, [-3.682863712310791,4.4329609870910645]=>[-0.8443709576808324,0.5478602992704213] (9,-1; 9,-1), time: 30.0120s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_86, [-3.9746642112731934,5.071529865264893]=>[-0.31305484653936166,1.2307972158399236] (9,-1; 9,-1), time: 30.0085s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_63, [-4.553985595703125,3.9472312927246094]=>[-0.5509087725294627,0.12335356817776295] (9,-1; 9,-1), time: 30.0037s, #vars: 1697, #constrs: 1068, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -1.9252190589904785 with beta sum per layer: []
optimal alpha/beta time: 13.413166284561157
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.7783,  0.9206, -0.0702,  1.3624,  0.5545, -1.8513, -2.8012,  2.1867,
          0.8454]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 214.6892547607422, ub improved 243.3281707763672, time 98.2097
maximum relu layer improved by MIP so far 5
MIP finished with 250.27656364440918s
Run final alpha-CROWN after MIP solving on layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -16.063220977783203 with beta sum per layer: []
optimal alpha/beta time: 10.617401123046875
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.0145,  2.6046,  1.5693,  2.8053,  2.4094, -0.5939, -1.2758,  3.9787,
          2.5511]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.0145,  2.6046,  1.5693,  2.8053,  2.4094, -0.5939, -1.2758,  3.9787,
          0.0000,  2.5511]], device='cuda:0') min: tensor(-1.2758, device='cuda:0')
time threshold left for bab: 24.11478614807129
##### [0:553] Tested against 5 ######
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.5952662229537964 with beta sum per layer: []
optimal alpha/beta time: 2.020251750946045
alpha-CROWN with fixed intermediate bounds: tensor([[-0.5953]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.5952662229537964
layer 0 size torch.Size([100]) unstable 26
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 34
layer 3 size torch.Size([100]) unstable 34
layer 4 size torch.Size([100]) unstable 34
layer 5 size torch.Size([100]) unstable 42
layer 6 size torch.Size([100]) unstable 56
layer 7 size torch.Size([100]) unstable 74
# of unstable neurons: 328
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 49]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.3104208707809448 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5452122688293457
This batch time : update_bounds func: 0.5485	 prepare: 0.0018	 bound: 0.5455	 transfer: 0.0006	 finalize: 0.0005
Accumulated time: update_bounds func: 0.5485	 prepare: 0.0018	 bound: 0.5455	 transfer: 0.0006	 finalize: 0.0005
batch bounding time:  0.5487465858459473
Current worst splitting domains [lb, ub] (depth):
[-0.49948, 98.404732] (1), 
length of domains: 1
Total time: 0.5773	 pickout: 0.0011	 decision: 0.0273	 get_bound: 0.5488	 add_domain: 0.0001
Current lb:-0.499481201171875
2 neurons visited
0 diving domains visited
Cumulative time: 2.818718671798706

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 61]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.23698580265045166 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23732656240463257]
optimal alpha/beta time: 0.37042737007141113
This batch time : update_bounds func: 0.3735	 prepare: 0.0018	 bound: 0.3707	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 0.9220	 prepare: 0.0037	 bound: 0.9162	 transfer: 0.0006	 finalize: 0.0008
batch bounding time:  0.37363433837890625
Current worst splitting domains [lb, ub] (depth):
[-0.46339, 98.404732] (2), 
length of domains: 1
Total time: 0.4016	 pickout: 0.0010	 decision: 0.0268	 get_bound: 0.3736	 add_domain: 0.0001
Current lb:-0.4633859395980835
4 neurons visited
0 diving domains visited
Cumulative time: 3.220418691635132

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 15]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.3044081926345825 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.23732657730579376, 0.0, 0.0]
optimal alpha/beta time: 0.37290167808532715
This batch time : update_bounds func: 0.3761	 prepare: 0.0019	 bound: 0.3732	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 1.2981	 prepare: 0.0055	 bound: 1.2894	 transfer: 0.0006	 finalize: 0.0012
batch bounding time:  0.3762626647949219
Current worst splitting domains [lb, ub] (depth):
[-0.43376, 98.404732] (3), 
length of domains: 1
Total time: 0.4039	 pickout: 0.0010	 decision: 0.0265	 get_bound: 0.3763	 add_domain: 0.0001
Current lb:-0.4337646961212158
6 neurons visited
0 diving domains visited
Cumulative time: 3.624366283416748

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 72]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.3007504940032959 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6626251339912415]
optimal alpha/beta time: 0.3781261444091797
This batch time : update_bounds func: 0.3813	 prepare: 0.0019	 bound: 0.3784	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 1.6794	 prepare: 0.0074	 bound: 1.6678	 transfer: 0.0006	 finalize: 0.0015
batch bounding time:  0.3815643787384033
Current worst splitting domains [lb, ub] (depth):
[-0.33395, 98.404732] (4), 
length of domains: 1
Total time: 0.4093	 pickout: 0.0009	 decision: 0.0266	 get_bound: 0.3816	 add_domain: 0.0002
Current lb:-0.3339501619338989
8 neurons visited
0 diving domains visited
Cumulative time: 4.03390908241272

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 86]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.20380699634552002 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.329123854637146, 0.0, 0.0]
optimal alpha/beta time: 0.37398362159729004
This batch time : update_bounds func: 0.3772	 prepare: 0.0019	 bound: 0.3743	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 2.0566	 prepare: 0.0093	 bound: 2.0421	 transfer: 0.0006	 finalize: 0.0020
batch bounding time:  0.3773627281188965
Current worst splitting domains [lb, ub] (depth):
[-0.29840, 98.404732] (5), 
length of domains: 1
Total time: 0.4053	 pickout: 0.0010	 decision: 0.0268	 get_bound: 0.3774	 add_domain: 0.0002
Current lb:-0.298404335975647
10 neurons visited
0 diving domains visited
Cumulative time: 4.439340591430664

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 27]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.2582221031188965 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3765296936035156
This batch time : update_bounds func: 0.3797	 prepare: 0.0019	 bound: 0.3768	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 2.4363	 prepare: 0.0112	 bound: 2.4189	 transfer: 0.0006	 finalize: 0.0023
batch bounding time:  0.379779577255249
Current worst splitting domains [lb, ub] (depth):
[-0.28968, 98.404732] (6), 
length of domains: 1
Total time: 0.4077	 pickout: 0.0010	 decision: 0.0268	 get_bound: 0.3798	 add_domain: 0.0002
Current lb:-0.28967905044555664
12 neurons visited
0 diving domains visited
Cumulative time: 4.847130537033081

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 47]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.21491456031799316 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.6322592496871948, 0.0, 0.0]
optimal alpha/beta time: 0.3738093376159668
This batch time : update_bounds func: 0.3770	 prepare: 0.0019	 bound: 0.3741	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 2.8133	 prepare: 0.0130	 bound: 2.7930	 transfer: 0.0006	 finalize: 0.0027
batch bounding time:  0.3771858215332031
Current worst splitting domains [lb, ub] (depth):
[-0.27917, 98.404732] (7), 
length of domains: 1
Total time: 0.4049	 pickout: 0.0009	 decision: 0.0266	 get_bound: 0.3772	 add_domain: 0.0001
Current lb:-0.2791653871536255
14 neurons visited
0 diving domains visited
Cumulative time: 5.252092361450195

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 54]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.21250075101852417 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.37136292457580566
This batch time : update_bounds func: 0.3745	 prepare: 0.0019	 bound: 0.3716	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 3.1878	 prepare: 0.0149	 bound: 3.1646	 transfer: 0.0006	 finalize: 0.0030
batch bounding time:  0.3746297359466553
Current worst splitting domains [lb, ub] (depth):
[-0.23863, 98.404732] (8), 
length of domains: 1
Total time: 0.4023	 pickout: 0.0009	 decision: 0.0266	 get_bound: 0.3746	 add_domain: 0.0001
Current lb:-0.23863011598587036
16 neurons visited
0 diving domains visited
Cumulative time: 5.654454708099365

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 5]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.22632819414138794 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.21993106603622437]
optimal alpha/beta time: 0.37245726585388184
This batch time : update_bounds func: 0.3757	 prepare: 0.0019	 bound: 0.3727	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 3.5635	 prepare: 0.0168	 bound: 3.5373	 transfer: 0.0006	 finalize: 0.0034
batch bounding time:  0.3758203983306885
Current worst splitting domains [lb, ub] (depth):
[-0.16078, 98.404732] (9), [-0.06554, 98.404732] (9), 
length of domains: 2
Total time: 0.4045	 pickout: 0.0009	 decision: 0.0275	 get_bound: 0.3758	 add_domain: 0.0002
Current lb:-0.1607835292816162
18 neurons visited
0 diving domains visited
Cumulative time: 6.059014081954956

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 82], [6, 27]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.05570673942565918 with beta sum per layer: [0.10478661954402924, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5178463459014893]
optimal alpha/beta time: 0.378986120223999
This batch time : update_bounds func: 0.3828	 prepare: 0.0022	 bound: 0.3793	 transfer: 0.0008	 finalize: 0.0005
Accumulated time: update_bounds func: 3.9463	 prepare: 0.0190	 bound: 3.9166	 transfer: 0.0008	 finalize: 0.0040
batch bounding time:  0.38292717933654785
Current worst splitting domains [lb, ub] (depth):
[-0.11178, 98.404732] (10), [-0.02577, 98.404732] (10), [-0.02311, 98.404732] (10), 
length of domains: 3
Total time: 0.4113	 pickout: 0.0011	 decision: 0.0271	 get_bound: 0.3829	 add_domain: 0.0002
Current lb:-0.11177796125411987
22 neurons visited
0 diving domains visited
Cumulative time: 6.470468044281006

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 27], [6, 27], [0, 38]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: -0.16371411085128784 with beta sum per layer: [0.20957323908805847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5958306193351746]
optimal alpha/beta time: 0.3810386657714844
This batch time : update_bounds func: 0.3854	 prepare: 0.0026	 bound: 0.3813	 transfer: 0.0007	 finalize: 0.0007
Accumulated time: update_bounds func: 4.3317	 prepare: 0.0217	 bound: 4.2980	 transfer: 0.0007	 finalize: 0.0046
batch bounding time:  0.3855116367340088
Current worst splitting domains [lb, ub] (depth):
[-0.08187, 98.404732] (11), 
length of domains: 1
Total time: 0.4144	 pickout: 0.0013	 decision: 0.0274	 get_bound: 0.3855	 add_domain: 0.0001
Current lb:-0.0818672776222229
28 neurons visited
0 diving domains visited
Cumulative time: 6.885050535202026

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 67]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.013428270816802979 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.37850332260131836
This batch time : update_bounds func: 0.3818	 prepare: 0.0020	 bound: 0.3788	 transfer: 0.0007	 finalize: 0.0003
Accumulated time: update_bounds func: 4.7135	 prepare: 0.0236	 bound: 4.6767	 transfer: 0.0007	 finalize: 0.0050
batch bounding time:  0.38190174102783203
Current worst splitting domains [lb, ub] (depth):
[-0.02723, 98.404732] (12), 
length of domains: 1
Total time: 0.4096	 pickout: 0.0010	 decision: 0.0266	 get_bound: 0.3819	 add_domain: 0.0002
Current lb:-0.027227818965911865
30 neurons visited
0 diving domains visited
Cumulative time: 7.294795989990234

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 36]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: -0.04567277431488037 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.38512659072875977
This batch time : update_bounds func: 0.3887	 prepare: 0.0020	 bound: 0.3854	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 5.1021	 prepare: 0.0256	 bound: 5.0622	 transfer: 0.0007	 finalize: 0.0055
batch bounding time:  0.38892316818237305
Current worst splitting domains [lb, ub] (depth):
[-0.02723, 98.404732] (13), 
length of domains: 1
Total time: 0.4167	 pickout: 0.0009	 decision: 0.0266	 get_bound: 0.3889	 add_domain: 0.0002
Current lb:-0.027227818965911865
32 neurons visited
0 diving domains visited
Cumulative time: 7.711627244949341

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 38]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -0.10130065679550171 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.013318538665771484
This batch time : update_bounds func: 0.0166	 prepare: 0.0020	 bound: 0.0136	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 5.1187	 prepare: 0.0276	 bound: 5.0758	 transfer: 0.0006	 finalize: 0.0058
batch bounding time:  0.016631603240966797
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0448	 pickout: 0.0011	 decision: 0.0270	 get_bound: 0.0166	 add_domain: 0.0000
No domains left, verification finished!
Cumulative time: 7.756586074829102

Image 553 pidx 5 verify end, final lower bound 999, upper bound 98.40473175048828, time: 7.819540977478027
553 999
##### [0:553] Tested against 6 ######
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 1.2758196592330933 with beta sum per layer: []
optimal alpha/beta time: 1.8290700912475586
alpha-CROWN with fixed intermediate bounds: tensor([[-1.2758]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-1.2758196592330933
layer 0 size torch.Size([100]) unstable 26
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 34
layer 3 size torch.Size([100]) unstable 34
layer 4 size torch.Size([100]) unstable 34
layer 5 size torch.Size([100]) unstable 42
layer 6 size torch.Size([100]) unstable 56
layer 7 size torch.Size([100]) unstable 74
# of unstable neurons: 328
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 49]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 1.5581717491149902 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7183687686920166]
optimal alpha/beta time: 0.36950111389160156
This batch time : update_bounds func: 0.3725	 prepare: 0.0018	 bound: 0.3698	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 5.4912	 prepare: 0.0294	 bound: 5.4455	 transfer: 0.0006	 finalize: 0.0061
batch bounding time:  0.37264013290405273
Current worst splitting domains [lb, ub] (depth):
[-1.14115, 97.724182] (1), [-0.41702, 97.724182] (1), 
length of domains: 2
Total time: 0.4006	 pickout: 0.0010	 decision: 0.0267	 get_bound: 0.3727	 add_domain: 0.0001
Current lb:-1.1411468982696533
2 neurons visited
0 diving domains visited
Cumulative time: 2.2615349292755127

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 5], [7, 84]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 1.5193943977355957 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.3126168251037598]
optimal alpha/beta time: 0.3743150234222412
This batch time : update_bounds func: 0.3779	 prepare: 0.0020	 bound: 0.3746	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 5.8691	 prepare: 0.0314	 bound: 5.8201	 transfer: 0.0007	 finalize: 0.0066
batch bounding time:  0.37799930572509766
Current worst splitting domains [lb, ub] (depth):
[-1.08095, 97.724182] (2), [-0.43714, 97.724182] (2), [-0.24355, 97.724182] (2), 
length of domains: 3
Total time: 0.4060	 pickout: 0.0011	 decision: 0.0267	 get_bound: 0.3780	 add_domain: 0.0002
Current lb:-1.0809473991394043
6 neurons visited
0 diving domains visited
Cumulative time: 2.667677879333496

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 84], [7, 84], [7, 5]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 1.0678119659423828 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.728075981140137]
optimal alpha/beta time: 0.37061119079589844
This batch time : update_bounds func: 0.3746	 prepare: 0.0022	 bound: 0.3709	 transfer: 0.0007	 finalize: 0.0008
Accumulated time: update_bounds func: 6.2437	 prepare: 0.0336	 bound: 6.1910	 transfer: 0.0007	 finalize: 0.0075
batch bounding time:  0.3747432231903076
Current worst splitting domains [lb, ub] (depth):
[-1.03636, 97.724182] (3), [-0.20233, 97.724182] (3), [-0.09451, 97.724182] (3), [-0.03977, 97.724182] (3), 
length of domains: 4
Total time: 0.4035	 pickout: 0.0013	 decision: 0.0272	 get_bound: 0.3748	 add_domain: 0.0002
Current lb:-1.0363589525222778
12 neurons visited
0 diving domains visited
Cumulative time: 3.071287155151367

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 71], [7, 71], [7, 71], [7, 71]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 0.2771773338317871 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.654888153076172]
optimal alpha/beta time: 0.3716301918029785
This batch time : update_bounds func: 0.3760	 prepare: 0.0024	 bound: 0.3719	 transfer: 0.0007	 finalize: 0.0010
Accumulated time: update_bounds func: 6.6197	 prepare: 0.0360	 bound: 6.5629	 transfer: 0.0007	 finalize: 0.0085
batch bounding time:  0.3761470317840576
Current worst splitting domains [lb, ub] (depth):
[-0.97692, 97.724182] (4), [-0.23282, 97.724182] (4), 
length of domains: 2
Total time: 0.4056	 pickout: 0.0014	 decision: 0.0279	 get_bound: 0.3762	 add_domain: 0.0001
Current lb:-0.9769155979156494
20 neurons visited
0 diving domains visited
Cumulative time: 3.4770920276641846

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 15], [5, 15]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 1.121931552886963 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.7469615340232849, 0.0, 2.161005973815918]
optimal alpha/beta time: 0.3735470771789551
This batch time : update_bounds func: 0.3771	 prepare: 0.0020	 bound: 0.3738	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 6.9968	 prepare: 0.0380	 bound: 6.9367	 transfer: 0.0007	 finalize: 0.0090
batch bounding time:  0.3772733211517334
Current worst splitting domains [lb, ub] (depth):
[-0.89861, 97.724182] (5), [-0.34665, 97.724182] (5), [-0.04205, 97.724182] (5), 
length of domains: 3
Total time: 0.4054	 pickout: 0.0011	 decision: 0.0268	 get_bound: 0.3773	 add_domain: 0.0002
Current lb:-0.8986058235168457
24 neurons visited
0 diving domains visited
Cumulative time: 3.8826558589935303

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 82], [0, 82], [7, 76]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 1.151041030883789 with beta sum per layer: [0.3113223910331726, 0.0, 0.0, 0.0, 0.0, 2.0307109355926514, 0.0, 2.752006769180298]
optimal alpha/beta time: 0.37934446334838867
This batch time : update_bounds func: 0.3837	 prepare: 0.0024	 bound: 0.3797	 transfer: 0.0008	 finalize: 0.0007
Accumulated time: update_bounds func: 7.3805	 prepare: 0.0405	 bound: 7.3164	 transfer: 0.0008	 finalize: 0.0097
batch bounding time:  0.3839869499206543
Current worst splitting domains [lb, ub] (depth):
[-0.77999, 97.724182] (6), [-0.53622, 97.724182] (6), [-0.14648, 97.724182] (6), 
length of domains: 3
Total time: 0.4127	 pickout: 0.0013	 decision: 0.0271	 get_bound: 0.3840	 add_domain: 0.0003
Current lb:-0.7799930572509766
30 neurons visited
0 diving domains visited
Cumulative time: 4.295610189437866

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 63], [3, 63], [7, 76]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 0.7594543695449829 with beta sum per layer: [0.1772596836090088, 0.0, 0.0, 0.9687467813491821, 0.0, 2.4024834632873535, 0.0, 0.0]
optimal alpha/beta time: 0.38097405433654785
This batch time : update_bounds func: 0.3854	 prepare: 0.0025	 bound: 0.3813	 transfer: 0.0007	 finalize: 0.0009
Accumulated time: update_bounds func: 7.7659	 prepare: 0.0429	 bound: 7.6977	 transfer: 0.0007	 finalize: 0.0106
batch bounding time:  0.38553404808044434
Current worst splitting domains [lb, ub] (depth):
[-0.77999, 97.724182] (7), [-0.53622, 97.724182] (7), 
length of domains: 2
Total time: 0.4144	 pickout: 0.0014	 decision: 0.0273	 get_bound: 0.3855	 add_domain: 0.0002
Current lb:-0.7799930572509766
36 neurons visited
0 diving domains visited
Cumulative time: 4.71017861366272

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 76], [7, 76]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 1.5955418348312378 with beta sum per layer: [0.3407008647918701, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5631153583526611]
optimal alpha/beta time: 0.37810230255126953
This batch time : update_bounds func: 0.3818	 prepare: 0.0022	 bound: 0.3784	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 8.1477	 prepare: 0.0451	 bound: 8.0761	 transfer: 0.0007	 finalize: 0.0111
batch bounding time:  0.38192033767700195
Current worst splitting domains [lb, ub] (depth):
[-0.77561, 97.724182] (8), [-0.47906, 97.724182] (8), [-0.27189, 97.724182] (8), [-0.06897, 97.724182] (8), 
length of domains: 4
Total time: 0.4104	 pickout: 0.0012	 decision: 0.0270	 get_bound: 0.3819	 add_domain: 0.0003
Current lb:-0.7756146192550659
40 neurons visited
0 diving domains visited
Cumulative time: 5.120640993118286

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 69], [0, 68], [7, 69], [7, 69]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 1.3012633323669434 with beta sum per layer: [0.7281937599182129, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.113584518432617]
optimal alpha/beta time: 0.37873363494873047
This batch time : update_bounds func: 0.3834	 prepare: 0.0027	 bound: 0.3790	 transfer: 0.0007	 finalize: 0.0009
Accumulated time: update_bounds func: 8.5311	 prepare: 0.0479	 bound: 8.4551	 transfer: 0.0007	 finalize: 0.0120
batch bounding time:  0.3835310935974121
Current worst splitting domains [lb, ub] (depth):
[-0.67419, 97.724182] (9), [-0.38511, 97.724182] (9), [-0.28906, 97.724182] (9), [-0.20235, 97.724182] (9), [-0.06093, 97.724182] (9), 
length of domains: 5
Total time: 0.4123	 pickout: 0.0015	 decision: 0.0269	 get_bound: 0.3835	 add_domain: 0.0003
Current lb:-0.6741900444030762
48 neurons visited
0 diving domains visited
Cumulative time: 5.5330750942230225

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 23], [6, 32], [4, 22], [4, 22], [6, 29]]
single_node_split: True
regular batch size: 2*5, diving batch size 1*0
best_l after optimization: 0.9220488667488098 with beta sum per layer: [0.9935324192047119, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5407795906066895, 6.248754024505615]
optimal alpha/beta time: 0.38411378860473633
This batch time : update_bounds func: 0.3896	 prepare: 0.0031	 bound: 0.3844	 transfer: 0.0008	 finalize: 0.0013
Accumulated time: update_bounds func: 8.9207	 prepare: 0.0510	 bound: 8.8396	 transfer: 0.0008	 finalize: 0.0133
batch bounding time:  0.3897397518157959
Current worst splitting domains [lb, ub] (depth):
[-0.67419, 97.724182] (10), [-0.29964, 97.724182] (10), [-0.28906, 97.724182] (10), [-0.19084, 97.724182] (10), 
length of domains: 4
Total time: 0.4214	 pickout: 0.0017	 decision: 0.0297	 get_bound: 0.3898	 add_domain: 0.0003
Current lb:-0.6741900444030762
58 neurons visited
0 diving domains visited
Cumulative time: 5.954739570617676

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 22], [4, 22], [4, 23], [4, 23]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 0.052924394607543945 with beta sum per layer: [1.090354084968567, 0.0, 0.0, 0.0, 0.9971390962600708, 0.0, 0.0, 2.8291146755218506]
optimal alpha/beta time: 0.3831660747528076
This batch time : update_bounds func: 0.3882	 prepare: 0.0028	 bound: 0.3835	 transfer: 0.0007	 finalize: 0.0012
Accumulated time: update_bounds func: 9.3089	 prepare: 0.0538	 bound: 9.2230	 transfer: 0.0007	 finalize: 0.0145
batch bounding time:  0.38833165168762207
Current worst splitting domains [lb, ub] (depth):
[-0.67419, 97.724182] (11), [-0.29964, 97.724182] (11), [-0.28906, 97.724182] (11), [-0.17448, 97.724182] (11), 
length of domains: 4
Total time: 0.4173	 pickout: 0.0015	 decision: 0.0272	 get_bound: 0.3883	 add_domain: 0.0003
Current lb:-0.6741900444030762
66 neurons visited
0 diving domains visited
Cumulative time: 6.372281074523926

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 68], [0, 68], [7, 77], [7, 77]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 1.4670380353927612 with beta sum per layer: [1.0373380184173584, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9509544372558594]
optimal alpha/beta time: 0.38602709770202637
This batch time : update_bounds func: 0.3913	 prepare: 0.0031	 bound: 0.3863	 transfer: 0.0007	 finalize: 0.0010
Accumulated time: update_bounds func: 9.7002	 prepare: 0.0569	 bound: 9.6094	 transfer: 0.0007	 finalize: 0.0155
batch bounding time:  0.3913912773132324
Current worst splitting domains [lb, ub] (depth):
[-0.52191, 97.724182] (12), [-0.47567, 97.724182] (12), [-0.21895, 97.724182] (12), [-0.15286, 97.724182] (12), [-0.12959, 97.724182] (12), [-0.09315, 97.724182] (12), 
length of domains: 6
Total time: 0.4205	 pickout: 0.0015	 decision: 0.0272	 get_bound: 0.3914	 add_domain: 0.0004
Current lb:-0.5219119787216187
74 neurons visited
0 diving domains visited
Cumulative time: 6.792997360229492

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 29], [6, 29], [5, 98], [7, 77], [7, 77], [5, 98]]
single_node_split: True
regular batch size: 2*6, diving batch size 1*0
best_l after optimization: -0.7045668363571167 with beta sum per layer: [1.264892339706421, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0780739784240723, 6.235387802124023]
optimal alpha/beta time: 0.3853623867034912
This batch time : update_bounds func: 0.3915	 prepare: 0.0035	 bound: 0.3857	 transfer: 0.0008	 finalize: 0.0015
Accumulated time: update_bounds func: 10.0917	 prepare: 0.0604	 bound: 9.9951	 transfer: 0.0008	 finalize: 0.0170
batch bounding time:  0.3916621208190918
Current worst splitting domains [lb, ub] (depth):
[-0.49944, 97.724182] (13), [-0.44705, 97.724182] (13), [-0.21895, 97.724182] (13), [-0.09120, 97.724182] (13), [-0.05118, 97.724182] (13), [-0.03062, 97.724182] (13), 
length of domains: 6
Total time: 0.4216	 pickout: 0.0018	 decision: 0.0276	 get_bound: 0.3917	 add_domain: 0.0005
Current lb:-0.49944043159484863
86 neurons visited
0 diving domains visited
Cumulative time: 7.2148706912994385

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 98], [5, 98], [0, 84], [0, 84], [6, 67], [7, 80]]
single_node_split: True
regular batch size: 2*6, diving batch size 1*0
best_l after optimization: -0.46620064973831177 with beta sum per layer: [1.2827521562576294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.543434143066406]
optimal alpha/beta time: 0.38160252571105957
This batch time : update_bounds func: 0.3878	 prepare: 0.0036	 bound: 0.3819	 transfer: 0.0008	 finalize: 0.0014
Accumulated time: update_bounds func: 10.4794	 prepare: 0.0640	 bound: 10.3770	 transfer: 0.0008	 finalize: 0.0184
batch bounding time:  0.3878800868988037
Current worst splitting domains [lb, ub] (depth):
[-0.49944, 97.724182] (14), [-0.44705, 97.724182] (14), [-0.15197, 97.724182] (14), [-0.00624, 97.724182] (14), 
length of domains: 4
Total time: 0.4177	 pickout: 0.0020	 decision: 0.0275	 get_bound: 0.3879	 add_domain: 0.0003
Current lb:-0.49944043159484863
98 neurons visited
0 diving domains visited
Cumulative time: 7.632797956466675

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 84], [0, 84], [6, 29], [6, 29]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 0.1903008222579956 with beta sum per layer: [2.4386019706726074, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.38256359100341797
This batch time : update_bounds func: 0.3875	 prepare: 0.0029	 bound: 0.3829	 transfer: 0.0007	 finalize: 0.0010
Accumulated time: update_bounds func: 10.8670	 prepare: 0.0669	 bound: 10.7599	 transfer: 0.0007	 finalize: 0.0194
batch bounding time:  0.3876662254333496
Current worst splitting domains [lb, ub] (depth):
[-0.44998, 97.724182] (15), [-0.37930, 97.724182] (15), [-0.11425, 97.724182] (15), 
length of domains: 3
Total time: 0.4179	 pickout: 0.0015	 decision: 0.0285	 get_bound: 0.3877	 add_domain: 0.0002
Current lb:-0.44998276233673096
106 neurons visited
0 diving domains visited
Cumulative time: 8.050906896591187

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 32], [6, 32], [7, 69]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 0.37755048274993896 with beta sum per layer: [0.7628459334373474, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2420328855514526, 0.0]
optimal alpha/beta time: 0.38269734382629395
This batch time : update_bounds func: 0.3872	 prepare: 0.0026	 bound: 0.3830	 transfer: 0.0007	 finalize: 0.0008
Accumulated time: update_bounds func: 11.2542	 prepare: 0.0695	 bound: 11.1429	 transfer: 0.0007	 finalize: 0.0202
batch bounding time:  0.3873436450958252
Current worst splitting domains [lb, ub] (depth):
[-0.40760, 97.724182] (16), [-0.32832, 97.724182] (16), 
length of domains: 2
Total time: 0.4157	 pickout: 0.0014	 decision: 0.0268	 get_bound: 0.3874	 add_domain: 0.0002
Current lb:-0.40759968757629395
112 neurons visited
0 diving domains visited
Cumulative time: 8.466786623001099

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 77], [7, 77]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.4213353395462036 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2864543199539185]
optimal alpha/beta time: 0.3850736618041992
This batch time : update_bounds func: 0.3890	 prepare: 0.0024	 bound: 0.3854	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 11.6432	 prepare: 0.0719	 bound: 11.5283	 transfer: 0.0007	 finalize: 0.0207
batch bounding time:  0.389082670211792
Current worst splitting domains [lb, ub] (depth):
[-0.32514, 97.724182] (17), [-0.23495, 97.724182] (17), 
length of domains: 2
Total time: 0.4175	 pickout: 0.0012	 decision: 0.0270	 get_bound: 0.3891	 add_domain: 0.0002
Current lb:-0.325137734413147
116 neurons visited
0 diving domains visited
Cumulative time: 8.884384632110596

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 75], [5, 75]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.4029649496078491 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.3971802294254303, 0.0, 0.0]
optimal alpha/beta time: 0.3819401264190674
This batch time : update_bounds func: 0.3859	 prepare: 0.0023	 bound: 0.3822	 transfer: 0.0007	 finalize: 0.0006
Accumulated time: update_bounds func: 12.0291	 prepare: 0.0742	 bound: 11.9105	 transfer: 0.0007	 finalize: 0.0213
batch bounding time:  0.38605642318725586
Current worst splitting domains [lb, ub] (depth):
[-0.32514, 97.724182] (18), [-0.23495, 97.724182] (18), 
length of domains: 2
Total time: 0.4143	 pickout: 0.0011	 decision: 0.0268	 get_bound: 0.3861	 add_domain: 0.0002
Current lb:-0.325137734413147
120 neurons visited
0 diving domains visited
Cumulative time: 9.298773050308228

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 45], [0, 90]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.5321564078330994 with beta sum per layer: [0.44829031825065613, 0.628463864326477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.38284730911254883
This batch time : update_bounds func: 0.3868	 prepare: 0.0024	 bound: 0.3832	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 12.4159	 prepare: 0.0766	 bound: 12.2937	 transfer: 0.0007	 finalize: 0.0218
batch bounding time:  0.38694071769714355
Current worst splitting domains [lb, ub] (depth):
[-0.32514, 97.724182] (19), [-0.21132, 97.724182] (19), [-0.08812, 97.724182] (19), 
length of domains: 3
Total time: 0.4150	 pickout: 0.0011	 decision: 0.0267	 get_bound: 0.3870	 add_domain: 0.0003
Current lb:-0.325137734413147
124 neurons visited
0 diving domains visited
Cumulative time: 9.713932514190674

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 17], [5, 27], [1, 15]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: 0.13452941179275513 with beta sum per layer: [0.329135537147522, 1.2957801818847656, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3860509395599365
This batch time : update_bounds func: 0.3942	 prepare: 0.0062	 bound: 0.3865	 transfer: 0.0007	 finalize: 0.0007
Accumulated time: update_bounds func: 12.8101	 prepare: 0.0828	 bound: 12.6802	 transfer: 0.0007	 finalize: 0.0225
batch bounding time:  0.39431238174438477
Current worst splitting domains [lb, ub] (depth):
[-0.25723, 97.724182] (20), [-0.19894, 97.724182] (20), [-0.03452, 97.724182] (20), 
length of domains: 3
Total time: 0.4230	 pickout: 0.0014	 decision: 0.0269	 get_bound: 0.3943	 add_domain: 0.0003
Current lb:-0.2572298049926758
130 neurons visited
0 diving domains visited
Cumulative time: 10.137078523635864

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 15], [1, 45], [5, 27]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: -0.04989445209503174 with beta sum per layer: [0.0, 1.8770978450775146, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3870983123779297
This batch time : update_bounds func: 0.3918	 prepare: 0.0027	 bound: 0.3874	 transfer: 0.0007	 finalize: 0.0009
Accumulated time: update_bounds func: 13.2019	 prepare: 0.0855	 bound: 13.0676	 transfer: 0.0007	 finalize: 0.0234
batch bounding time:  0.39188241958618164
Current worst splitting domains [lb, ub] (depth):
[-0.23151, 97.724182] (21), [-0.12892, 97.724182] (21), [-0.00853, 97.724182] (21), 
length of domains: 3
Total time: 0.4208	 pickout: 0.0014	 decision: 0.0272	 get_bound: 0.3919	 add_domain: 0.0003
Current lb:-0.2315143346786499
136 neurons visited
0 diving domains visited
Cumulative time: 10.558138370513916

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 27], [0, 17], [0, 13]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: -0.3480498194694519 with beta sum per layer: [0.0, 1.4212150573730469, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3858506679534912
This batch time : update_bounds func: 0.3904	 prepare: 0.0027	 bound: 0.3862	 transfer: 0.0007	 finalize: 0.0008
Accumulated time: update_bounds func: 13.5923	 prepare: 0.0882	 bound: 13.4538	 transfer: 0.0007	 finalize: 0.0242
batch bounding time:  0.3905599117279053
Current worst splitting domains [lb, ub] (depth):
[-0.21992, 97.724182] (22), [-0.05489, 97.724182] (22), 
length of domains: 2
Total time: 0.4203	 pickout: 0.0015	 decision: 0.0280	 get_bound: 0.3906	 add_domain: 0.0002
Current lb:-0.21992278099060059
142 neurons visited
0 diving domains visited
Cumulative time: 10.97861099243164

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 94], [1, 15]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.0442509651184082 with beta sum per layer: [0.22795888781547546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.38591694831848145
This batch time : update_bounds func: 0.3900	 prepare: 0.0024	 bound: 0.3862	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 13.9823	 prepare: 0.0906	 bound: 13.8400	 transfer: 0.0007	 finalize: 0.0247
batch bounding time:  0.39009594917297363
Current worst splitting domains [lb, ub] (depth):
[-0.09349, 97.724182] (23), [-0.04800, 97.724182] (23), [-0.03552, 97.724182] (23), 
length of domains: 3
Total time: 0.4186	 pickout: 0.0012	 decision: 0.0270	 get_bound: 0.3901	 add_domain: 0.0003
Current lb:-0.09348869323730469
146 neurons visited
0 diving domains visited
Cumulative time: 11.397333860397339

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 48], [5, 48], [5, 48]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: -0.17914986610412598 with beta sum per layer: [0.4780184030532837, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3829922676086426
This batch time : update_bounds func: 0.3874	 prepare: 0.0026	 bound: 0.3833	 transfer: 0.0007	 finalize: 0.0007
Accumulated time: update_bounds func: 14.3696	 prepare: 0.0933	 bound: 14.2233	 transfer: 0.0007	 finalize: 0.0254
batch bounding time:  0.387479305267334
Current worst splitting domains [lb, ub] (depth):
[-0.09349, 97.724182] (24), [-0.04800, 97.724182] (24), [-0.03552, 97.724182] (24), 
length of domains: 3
Total time: 0.4161	 pickout: 0.0014	 decision: 0.0269	 get_bound: 0.3875	 add_domain: 0.0003
Current lb:-0.09348869323730469
152 neurons visited
0 diving domains visited
Cumulative time: 11.813571691513062

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 28], [1, 28], [0, 94]]
single_node_split: True
regular batch size: 2*3, diving batch size 1*0
best_l after optimization: -0.6697461605072021 with beta sum per layer: [0.5001190304756165, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.38811564445495605
This batch time : update_bounds func: 0.3927	 prepare: 0.0027	 bound: 0.3884	 transfer: 0.0007	 finalize: 0.0008
Accumulated time: update_bounds func: 14.7623	 prepare: 0.0960	 bound: 14.6118	 transfer: 0.0007	 finalize: 0.0262
batch bounding time:  0.39281272888183594
Current worst splitting domains [lb, ub] (depth):
[-0.02505, 97.724182] (25), 
length of domains: 1
Total time: 0.4212	 pickout: 0.0014	 decision: 0.0269	 get_bound: 0.3928	 add_domain: 0.0001
Current lb:-0.02505016326904297
158 neurons visited
0 diving domains visited
Cumulative time: 12.234975814819336

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 67]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -0.15877747535705566 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.01329183578491211
This batch time : update_bounds func: 0.0167	 prepare: 0.0021	 bound: 0.0136	 transfer: 0.0007	 finalize: 0.0003
Accumulated time: update_bounds func: 14.7790	 prepare: 0.0981	 bound: 14.6253	 transfer: 0.0007	 finalize: 0.0265
batch bounding time:  0.016736984252929688
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0442	 pickout: 0.0010	 decision: 0.0265	 get_bound: 0.0167	 add_domain: 0.0000
No domains left, verification finished!
Cumulative time: 12.27932858467102

Image 553 pidx 6 verify end, final lower bound 999, upper bound 97.72418212890625, time: 12.341424703598022
553 999
##### [0:553] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 2.8052830696105957
Image 553 pidx 3 verify end, final lower bound 2.8052830696105957, upper bound inf, time: 0.00021958351135253906
553 2.8052830696105957
##### [0:553] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 2.014453649520874
Image 553 pidx 0 verify end, final lower bound 2.014453649520874, upper bound inf, time: 0.00021386146545410156
553 2.014453649520874
##### [0:553] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 2.551081418991089
Image 553 pidx 9 verify end, final lower bound 2.551081418991089, upper bound inf, time: 0.00021028518676757812
553 2.551081418991089
##### [0:553] Tested against 2 ######
Initial alpha-CROWN verified for label 2 with bound 1.5693169832229614
Image 553 pidx 2 verify end, final lower bound 1.5693169832229614, upper bound inf, time: 0.0002117156982421875
553 1.5693169832229614
##### [0:553] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 2.604640245437622
Image 553 pidx 1 verify end, final lower bound 2.604640245437622, upper bound inf, time: 0.0002148151397705078
553 2.604640245437622
##### [0:553] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 3.978675603866577
Image 553 pidx 7 verify end, final lower bound 3.978675603866577, upper bound inf, time: 0.0002167224884033203
553 3.978675603866577
##### [0:553] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 2.4094324111938477
Image 553 pidx 4 verify end, final lower bound 2.4094324111938477, upper bound inf, time: 0.00021409988403320312
553 2.4094324111938477
##### [0:553] Tested against 8 ######
correct label, skip!
[[553.           0.           0.          14.91721773   0.
   -1.                  inf          inf]
 [553.           0.           0.           0.60843849   0.
   -3.                  inf          inf]
 [553.           0.           0.         260.96800184   0.
   -2.                  inf          inf]
 [553.         999.          34.           7.81954098   0.
    5.          98.40473175   2.38681269]
 [553.         999.         160.          12.3414247    0.
    6.          97.72418213   5.18198729]
 [553.           2.80528307   0.           0.00021958   0.
    3.                  inf   6.42447901]
 [553.           2.01445365   0.           0.00021386   0.
    0.                  inf   6.58988285]
 [553.           2.55108142   0.           0.00021029   0.
    9.                  inf   7.05270529]
 [553.           1.56931698   0.           0.00021172   0.
    2.                  inf   7.11432791]
 [553.           2.60464025   0.           0.00021482   0.
    1.                  inf   8.56720257]
 [553.           3.9786756    0.           0.00021672   0.
    7.                  inf   9.44947052]
 [553.           2.40943241   0.           0.0002141    0.
    4.                  inf   9.63883877]
 [553.           0.           0.           0.           0.
    8.                  inf          inf]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [cnt:1] (excluding attack success): 296.0476863384247
