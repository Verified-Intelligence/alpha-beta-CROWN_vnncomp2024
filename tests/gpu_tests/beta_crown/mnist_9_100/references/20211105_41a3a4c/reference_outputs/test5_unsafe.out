Experiments at Tue Nov  2 00:50:21 2021 on huan-Super-Server
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=759_end=760_iter=20_b=1024_int-beta=False_timeout=300_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 759 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  9  correct label  9 logits tensor([-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
         1.3393,  8.1315], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
          1.3393,  8.1315]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-260.0689, -266.6104, -317.1270, -290.3136, -228.9527, -264.0708,
         -340.3299, -267.4384, -310.4316]], device='cuda:0') None
best_l after optimization: 1156.5101318359375 with beta sum per layer: []
optimal alpha/beta time: 11.136848211288452
initial alpha-CROWN bounds: tensor([[-109.2039, -122.9641, -150.2842, -136.5247, -101.6637, -118.5383,
         -153.5016, -121.6153, -142.2144]], device='cuda:0',
       grad_fn=<AsStridedBackward>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 230.86663303375246]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_94', 'lay4_64', 'lay4_93', 'lay4_33', 'lay4_8', 'lay4_72', 'lay4_38', 'lay4_16', 'lay4_18', 'lay4_85', 'lay4_23', 'lay4_52', 'lay4_63', 'lay4_99', 'lay4_68', 'lay4_26', 'lay4_36', 'lay4_60', 'lay4_75', 'lay4_40', 'lay4_46', 'lay4_30', 'lay4_11', 'lay4_89', 'lay4_22', 'lay4_39', 'lay4_61', 'lay4_88', 'lay4_91', 'lay4_34', 'lay4_41', 'lay4_7', 'lay4_48', 'lay4_87', 'lay4_44', 'lay4_92', 'lay4_25', 'lay4_80', 'lay4_54', 'lay4_83', 'lay4_3', 'lay4_90', 'lay4_53', 'lay4_12', 'lay4_69', 'lay4_97', 'lay4_10', 'lay4_98', 'lay4_55', 'lay4_58', 'lay4_86', 'lay4_27', 'lay4_74', 'lay4_5'] filter: 1.0
/home/shiqi/CROWN-GENERAL/complete_verifier/utils.py:412: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_99, [-0.1743655949831009,1.3701198101043701]=>[1e-05,1.3701198101043701] (15,-1; -1,-1), time: 0.2796s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_23, [-1.1515381336212158,0.21356132626533508]=>[-1.1515381336212158,-1e-05] (-1,-1; 15,-1), time: 0.4347s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_72, [-0.8483368158340454,0.738963782787323]=>[-0.5642912954949161,0.5572183827105616] (2,-1; 2,-1), time: 1.0262s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-0.9063466787338257,0.154616117477417]=>[-0.6952292942690863,0.016018684496243843] (2,-1; 2,-1), time: 1.2892s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-1.3487015962600708,0.7268289923667908]=>[-1.1365498588982421,0.30960695652257436] (2,-1; 2,-1), time: 1.4458s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-0.5651997327804565,0.6784636974334717]=>[-0.30193086127291513,0.5557394832960072] (2,-1; 2,-1), time: 1.7375s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-0.5836037397384644,0.33304277062416077]=>[-0.36354157496426576,0.2075275417388128] (2,-1; 2,-1), time: 1.8595s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_33, [-1.6073378324508667,0.5146503448486328]=>[-1.1322824748442433,0.28194696586634094] (2,-1; 2,-1), time: 1.9791s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_30, [-1.1954543590545654,0.04381018877029419]=>[-1.1954543590545654,-1e-05] (-1,-1; 15,-1), time: 0.2449s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_93, [-1.2027573585510254,0.2114035189151764]=>[-0.8473455938438826,0.04192401158795328] (2,-1; 2,-1), time: 2.0388s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-0.9564698934555054,0.46861475706100464]=>[-0.6240763728649081,0.2842681663764013] (2,-1; 2,-1), time: 2.0691s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-1.251033067703247,0.15285012125968933]=>[-0.9363055191663103,0.023380908300358917] (2,-1; 2,-1), time: 2.1165s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_16, [-1.3193869590759277,0.20441466569900513]=>[-0.9487362420408585,0.030617799099926422] (2,-1; 2,-1), time: 2.1758s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-1.7521814107894897,0.02355438470840454]=>[-1.7521814107894897,-1e-05] (-1,-1; 15,-1), time: 0.1922s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_39, [-1.8542728424072266,0.06870782375335693]=>[-1.8542728424072266,-1e-05] (-1,-1; 15,-1), time: 0.2089s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_34, [-0.9295831918716431,0.08976757526397705]=>[-0.9295831918716431,-1e-05] (-1,-1; 15,-1), time: 0.1797s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_40, [-1.106849193572998,0.24568086862564087]=>[-0.8362116748126475,0.07093426388389912] (2,-1; 2,-1), time: 1.1734s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_60, [-0.8623927235603333,0.5759027004241943]=>[-0.49516783488826194,0.4404096891910897] (2,-1; 2,-1), time: 2.0923s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-0.8815779685974121,0.632534384727478]=>[-0.5320557261777968,0.34158255179450586] (2,-1; 2,-1), time: 2.5976s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-0.5736883878707886,0.511353611946106]=>[-0.2862194794076406,0.41393479581792125] (2,-1; 2,-1), time: 2.6083s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_46, [-0.7196506261825562,0.949271559715271]=>[-0.42936587658670916,0.7571689149661698] (2,-1; 2,-1), time: 1.3652s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-1.1985127925872803,0.6507128477096558]=>[-0.9941641799654083,0.132147290139598] (2,-1; 2,-1), time: 2.5493s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_61, [-0.9485687017440796,0.8114701509475708]=>[-0.7167729617176157,0.4576624639148088] (2,-1; 2,-1), time: 1.0336s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_11, [-1.308661937713623,0.3666135370731354]=>[-1.0479829169562327,0.051816574904189026] (2,-1; 2,-1), time: 1.2904s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_41, [-0.6153373718261719,1.1595466136932373]=>[-0.39547595469036023,0.8551250182210934] (2,-1; 2,-1), time: 0.9236s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_89, [-1.1039079427719116,0.7040257453918457]=>[-0.726222322394311,0.5129644864512165] (2,-1; 2,-1), time: 1.2014s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-0.9911574125289917,0.18953727185726166]=>[-0.6094657178638991,0.05807818067616946] (2,-1; 2,-1), time: 3.2125s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-0.8898061513900757,0.21572279930114746]=>[-0.8898061513900757,-1e-05] (-1,-1; 15,-1), time: 0.7732s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_38, [-1.0058921575546265,0.22603610157966614]=>[-0.6813540287479507,0.004516598588518474] (2,-1; 2,-1), time: 3.4944s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_53, [-0.2965485155582428,1.3572520017623901]=>[1e-05,1.3572520017623901] (15,-1; -1,-1), time: 0.4309s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_83, [-0.26302504539489746,1.100989580154419]=>[1e-05,1.100989580154419] (15,-1; -1,-1), time: 0.5528s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_88, [-0.9748655557632446,0.33562523126602173]=>[-0.6638211414323847,0.14755525751457776] (2,-1; 2,-1), time: 1.8586s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-0.48542726039886475,1.086203932762146]=>[-0.29914497043770827,0.6974462188601233] (2,-1; 2,-1), time: 1.8354s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_25, [-0.2804131805896759,0.9484854936599731]=>[1e-05,0.9484854936599731] (15,-1; -1,-1), time: 1.2694s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_90, [-1.0391316413879395,1.3562307357788086]=>[-0.6387083676455808,1.1092912966293693] (2,-1; 2,-1), time: 0.9217s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_86, [-0.14907845854759216,0.8724653720855713]=>[1e-05,0.8724653720855713] (15,-1; -1,-1), time: 0.2755s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_3, [-0.5036665201187134,0.6694813966751099]=>[-0.2777121214753063,0.44136312623381996] (2,-1; 2,-1), time: 1.3181s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_7, [-0.5796011686325073,0.622363269329071]=>[-0.2680103835435182,0.47273791787351527] (2,-1; 2,-1), time: 2.1529s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-1.2795904874801636,0.11004006862640381]=>[-1.2795904874801636,-1e-05] (-1,-1; 15,-1), time: 0.2142s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_80, [-0.35974183678627014,1.0856677293777466]=>[-0.11949892126749576,0.7918733841554132] (2,-1; 2,-1), time: 1.7890s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_74, [-1.1592721939086914,0.03473857045173645]=>[-1.1592721939086914,-1e-05] (-1,-1; 15,-1), time: 0.1583s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_5, [-1.7167408466339111,0.036165863275527954]=>[-1.7167408466339111,-1e-05] (-1,-1; 15,-1), time: 0.2234s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_87, [-0.4260343015193939,0.651095986366272]=>[-0.1275822300193743,0.54167944775] (2,-1; 2,-1), time: 2.2152s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_92, [-0.4697991609573364,0.6789435148239136]=>[-0.21234630188639758,0.47654278562815733] (2,-1; 2,-1), time: 2.1564s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-0.6056124567985535,0.8922139406204224]=>[-0.341731091643129,0.7105141460724771] (2,-1; 2,-1), time: 1.2673s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-0.6599987745285034,0.3343784213066101]=>[-0.4447611712360703,0.07255386474685585] (2,-1; 2,-1), time: 3.9545s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_69, [-0.4788885712623596,0.8546819686889648]=>[-0.2687538241963411,0.5617625254100014] (2,-1; 2,-1), time: 1.5208s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-0.6694962978363037,1.0063745975494385]=>[-0.31045517660960464,0.7618144094198754] (2,-1; 2,-1), time: 1.9223s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-0.6150653958320618,1.1172301769256592]=>[-0.27929585772498594,0.9225465002498605] (2,-1; 2,-1), time: 1.2169s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_10, [-0.8772891759872437,1.018729329109192]=>[-0.46656874327588893,0.9016718830904551] (2,-1; 2,-1), time: 1.4927s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_12, [-0.6308667659759521,0.7225924730300903]=>[-0.3124068836878426,0.51127374526667] (2,-1; 2,-1), time: 1.9387s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-0.49943721294403076,1.1779546737670898]=>[-0.11727636909053138,1.0134435175547345] (2,-1; 2,-1), time: 1.3197s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_58, [-0.30571869015693665,0.8858224153518677]=>[1e-05,0.8858224153518677] (15,-1; -1,-1), time: 1.5073s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_48, [-0.8855576515197754,0.13081006705760956]=>[-0.5539898908082046,0.021036736557028902] (2,-1; 2,-1), time: 3.4190s, #vars: 1047, #constrs: 293, improved: True
MIP improved 54 nodes out of 54 unstable nodes, lb improved 13.132248878479004, ub improved 9.223573684692383, time 6.2250
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_39', 'lay6_28', 'lay6_74', 'lay6_42', 'lay6_55', 'lay6_75', 'lay6_64', 'lay6_34', 'lay6_31', 'lay6_0', 'lay6_77', 'lay6_73', 'lay6_4', 'lay6_83', 'lay6_51', 'lay6_93', 'lay6_91', 'lay6_69', 'lay6_32', 'lay6_36', 'lay6_72', 'lay6_17', 'lay6_40', 'lay6_33', 'lay6_11', 'lay6_71', 'lay6_60', 'lay6_81', 'lay6_98', 'lay6_37', 'lay6_54', 'lay6_57', 'lay6_97', 'lay6_94', 'lay6_50', 'lay6_16', 'lay6_68', 'lay6_13', 'lay6_41', 'lay6_46', 'lay6_1', 'lay6_43', 'lay6_30', 'lay6_35', 'lay6_48', 'lay6_86', 'lay6_95', 'lay6_38', 'lay6_88', 'lay6_99', 'lay6_89', 'lay6_62', 'lay6_96', 'lay6_8', 'lay6_29', 'lay6_66', 'lay6_78', 'lay6_20', 'lay6_58', 'lay6_27', 'lay6_84', 'lay6_26', 'lay6_82', 'lay6_65', 'lay6_49', 'lay6_70', 'lay6_14', 'lay6_85', 'lay6_56', 'lay6_61', 'lay6_92', 'lay6_7', 'lay6_15', 'lay6_79', 'lay6_63', 'lay6_76', 'lay6_5'] filter: 1.0
Solving MIP for lay6_51, [-2.291271924972534,0.015105187892913818]=>[-2.291271924972534,-1e-05] (-1,-1; 15,-1), time: 0.1951s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_28, [-1.5203149318695068,0.2566782832145691]=>[-1.5203149318695068,-1e-05] (-1,-1; 15,-1), time: 0.1978s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_31, [-1.483723759651184,0.2609884738922119]=>[-1.483723759651184,-1e-05] (-1,-1; 15,-1), time: 0.1990s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_93, [-2.2853050231933594,0.09975540637969971]=>[-2.2853050231933594,-1e-05] (-1,-1; 15,-1), time: 0.2017s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_32, [-1.7650790214538574,0.08133220672607422]=>[-1.7650790214538574,-1e-05] (-1,-1; 15,-1), time: 0.1885s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_91, [-1.7781028747558594,0.17297083139419556]=>[-1.7781028747558594,-1e-05] (-1,-1; 15,-1), time: 0.1926s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_0, [-1.5622838735580444,0.26261574029922485]=>[-1.5622838735580444,-1e-05] (-1,-1; 15,-1), time: 0.3999s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_17, [-1.5609463453292847,0.11102950572967529]=>[-1.5609463453292847,-1e-05] (-1,-1; 15,-1), time: 0.1797s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_69, [-1.3602046966552734,0.2512831687927246]=>[-1.3602046966552734,-1e-05] (-1,-1; 15,-1), time: 0.3910s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_33, [-1.4062790870666504,0.13843441009521484]=>[-1.4062790870666504,-1e-05] (-1,-1; 15,-1), time: 0.1761s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_40, [-0.27546441555023193,1.0200412273406982]=>[1e-05,1.0200412273406982] (15,-1; -1,-1), time: 0.8629s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_77, [-1.44734525680542,0.3221936821937561]=>[-1.44734525680542,-1e-05] (-1,-1; 15,-1), time: 1.8678s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_81, [-1.143455982208252,0.27613478899002075]=>[-1.143455982208252,-1e-05] (-1,-1; 15,-1), time: 0.5798s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_74, [-1.1542315483093262,0.5256814956665039]=>[-1.1542315483093262,-1e-05] (-1,-1; 15,-1), time: 2.9640s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_11, [-1.3457069396972656,0.4124845862388611]=>[-1.3457069396972656,-1e-05] (-1,-1; 15,-1), time: 2.6422s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_37, [-1.8477957248687744,0.3700409531593323]=>[-1.8477957248687744,-1e-05] (-1,-1; 15,-1), time: 0.3539s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_57, [-2.0714285373687744,0.33162254095077515]=>[-2.0714285373687744,-1e-05] (-1,-1; 15,-1), time: 0.2429s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_98, [-1.151747465133667,0.37256884574890137]=>[-1.151747465133667,-1e-05] (-1,-1; 15,-1), time: 1.2913s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_97, [-1.214399814605713,0.27142924070358276]=>[-1.214399814605713,-1e-05] (-1,-1; 15,-1), time: 0.7378s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_83, [-0.9594016075134277,0.42929011583328247]=>[-0.9594016075134277,-1e-05] (-1,-1; 15,-1), time: 4.7760s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_75, [-0.6964703798294067,1.3947268724441528]=>[-0.05874570150162544,1.1082837003028054] (2,-1; 2,-1), time: 5.1419s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_4, [-0.7552454471588135,0.6110633015632629]=>[-0.30912949695302555,0.25594708405816563] (2,-1; 2,-1), time: 5.5608s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_34, [-1.4395025968551636,1.1705598831176758]=>[-0.7424909551955001,0.4662896016204885] (2,-1; 2,-1), time: 5.6319s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_39, [-0.9586871862411499,1.2080262899398804]=>[-0.4170648036740049,0.5687325547857457] (2,-1; 2,-1), time: 5.6536s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_13, [-1.659306287765503,0.0862988829612732]=>[-1.659306287765503,-1e-05] (-1,-1; 15,-1), time: 0.1572s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_55, [-1.3269352912902832,0.533903956413269]=>[-1.3269352912902832,-1e-05] (-1,-1; 15,-1), time: 5.7602s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_46, [-1.2193803787231445,0.1378813087940216]=>[-1.2193803787231445,-1e-05] (-1,-1; 15,-1), time: 0.3391s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_1, [-0.5702504515647888,2.977414608001709]=>[1e-05,2.977414608001709] (15,-1; -1,-1), time: 0.2931s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_73, [-0.8703199028968811,0.7044793367385864]=>[-0.4348933627040679,0.15598842814275005] (2,-1; 2,-1), time: 7.6362s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_48, [-1.753105640411377,0.03057760000228882]=>[-1.753105640411377,-1e-05] (-1,-1; 15,-1), time: 0.1456s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_36, [-0.9567593336105347,0.48960843682289124]=>[-0.6090936541549528,0.06576131366934172] (2,-1; 2,-1), time: 8.2605s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_95, [-0.06436258554458618,2.791267156600952]=>[1e-05,2.791267156600952] (15,-1; -1,-1), time: 0.1581s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_38, [-0.33822572231292725,2.023693084716797]=>[1e-05,2.023693084716797] (15,-1; -1,-1), time: 0.2647s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_94, [-0.7303011417388916,0.7680831551551819]=>[-0.2678490921062393,0.3774592961745572] (2,-1; 2,-1), time: 5.8447s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_30, [-1.5787642002105713,1.9468529224395752]=>[-0.9269757213540755,1.1637713647844514] (2,-1; 2,-1), time: 4.1272s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_60, [-1.3221545219421387,0.6538151502609253]=>[-0.7545364581619624,0.10091109229907713] (2,-1; 2,-1), time: 9.2588s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_89, [-0.4199519455432892,1.3692946434020996]=>[1e-05,1.3692946434020996] (15,-1; -1,-1), time: 0.5767s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_68, [-0.5918639898300171,1.7988646030426025]=>[-0.05164890531047271,1.2265275558672208] (2,-1; 2,-1), time: 5.9763s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_71, [-0.8741374015808105,0.7056421637535095]=>[-0.3949624487810212,0.26123374929689364] (2,-1; 2,-1), time: 10.4339s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_35, [-0.8061953783035278,0.61765456199646]=>[-0.42879208109136874,0.23191795151272812] (2,-1; 2,-1), time: 5.4845s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_41, [-0.996570348739624,0.8937784433364868]=>[-0.49656735681205244,0.3863191452580127] (2,-1; 2,-1), time: 6.1443s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_50, [-1.0120062828063965,0.7112177610397339]=>[-0.5236661174027104,0.18727812811313235] (2,-1; 2,-1), time: 8.8163s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_20, [-0.12737524509429932,1.8627510070800781]=>[1e-05,1.8627510070800781] (15,-1; -1,-1), time: 0.1436s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_54, [-0.4912649989128113,1.0803186893463135]=>[-0.009565316780544375,0.637485799850553] (2,-1; 2,-1), time: 10.2411s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_16, [-0.7086820006370544,0.9776090383529663]=>[-0.17269293946636954,0.4337327711624893] (2,-1; 2,-1), time: 8.7872s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_29, [-0.4988515377044678,1.0757211446762085]=>[1e-05,1.0757211446762085] (15,-1; -1,-1), time: 2.4025s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_27, [-1.5033762454986572,0.046298205852508545]=>[-1.5033762454986572,-1e-05] (-1,-1; 15,-1), time: 0.1438s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_78, [-0.6105055212974548,1.9609901905059814]=>[1e-05,1.9609901905059814] (15,-1; -1,-1), time: 1.8926s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_84, [-1.7859070301055908,0.17934519052505493]=>[-1.7859070301055908,-1e-05] (-1,-1; 15,-1), time: 0.1416s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_82, [-0.2805517315864563,1.5930811166763306]=>[1e-05,1.5930811166763306] (15,-1; -1,-1), time: 0.1474s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_66, [-0.5048812031745911,1.2280993461608887]=>[1e-05,1.2280993461608887] (15,-1; -1,-1), time: 2.3532s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_14, [-1.6825519800186157,0.35649773478507996]=>[-1.6825519800186157,-1e-05] (-1,-1; 15,-1), time: 0.2994s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_26, [-0.4344879686832428,1.5504150390625]=>[1e-05,1.5504150390625] (15,-1; -1,-1), time: 0.5917s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_49, [-1.3149551153182983,0.430444598197937]=>[-1.3149551153182983,-1e-05] (-1,-1; 15,-1), time: 0.6799s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_64, [-0.7991542220115662,0.5599685907363892]=>[-0.3064900677533784,0.11866235037518308] (2,-1; 2,-1), time: 15.0704s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_92, [-0.11675775051116943,1.463547945022583]=>[1e-05,1.463547945022583] (15,-1; -1,-1), time: 0.1439s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_88, [-1.0285344123840332,1.0690011978149414]=>[-0.4502852336282979,0.47324469193361074] (2,-1; 2,-1), time: 6.3769s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_8, [-0.6445883512496948,1.478025197982788]=>[-0.1893128799518028,0.9431044963434231] (2,-1; 2,-1), time: 4.5640s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_58, [-0.3702034056186676,0.9457120299339294]=>[1e-05,0.9457120299339294] (15,-1; -1,-1), time: 2.4665s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_62, [-0.4112691283226013,1.03868567943573]=>[1e-05,1.03868567943573] (15,-1; -1,-1), time: 5.4195s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_96, [-0.8002547025680542,0.7782354354858398]=>[-0.3612287667807119,0.46921887710870236] (2,-1; 2,-1), time: 5.6875s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_5, [-0.017315059900283813,1.7373820543289185]=>[1e-05,1.7373820543289185] (15,-1; -1,-1), time: 0.1438s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_86, [-0.6948323249816895,0.9152649641036987]=>[-0.12691872742040003,0.48037554642755426] (2,-1; 2,-1), time: 9.0927s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_79, [-1.1505961418151855,0.3765564262866974]=>[-1.1505961418151855,-1e-05] (-1,-1; 15,-1), time: 1.8602s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_15, [-1.6439332962036133,0.4762279987335205]=>[-1.6439332962036133,-1e-05] (-1,-1; 15,-1), time: 2.2764s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_42, [-0.5954478979110718,0.8009377717971802]=>[-0.2750237128968533,0.24504568326331572] (2,-1; 9,-1), time: 17.6026s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_61, [-0.9201728701591492,1.4845417737960815]=>[-0.44924226904045356,0.8999195702819986] (2,-1; 2,-1), time: 4.3890s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_72, [-0.86594158411026,0.5446754693984985]=>[-0.3421147975222208,0.08046798683259947] (2,-1; 2,-1), time: 18.4346s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_65, [-0.4970788061618805,0.638113260269165]=>[-0.022128605148683776,0.3615616169351584] (2,-1; 2,-1), time: 5.9382s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_70, [-0.578694224357605,1.547191858291626]=>[-0.0794076096687529,0.9842692932352519] (2,-1; 2,-1), time: 6.3852s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_56, [-0.8167868852615356,1.0132797956466675]=>[-0.42520353777518716,0.3826127907531175] (2,-1; 2,-1), time: 6.8902s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_43, [-0.8737581372261047,0.7824701070785522]=>[-0.4147008029264434,0.41882867625061804] (2,-1; 2,-1), time: 15.3460s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_85, [-0.6428300142288208,1.0734299421310425]=>[-0.10552488025421403,0.539896743744828] (2,-1; 2,-1), time: 7.1967s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_76, [-1.248356819152832,0.39087846875190735]=>[-1.248356819152832,-1e-05] (-1,-1; 15,-1), time: 6.7645s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_63, [-0.6133323311805725,1.3140745162963867]=>[-0.010399949640595834,0.8959563522611635] (2,-1; 2,-1), time: 9.2998s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_99, [-0.9621268510818481,0.6000301241874695]=>[-0.3544145009829783,0.12102603793592306] (2,-1; 2,-1), time: 19.3686s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_7, [-0.9746087789535522,0.4639292061328888]=>[-0.4067265683902634,0.06435720133528389] (9,-1; 9,-1), time: 30.0029s, #vars: 1225, #constrs: 510, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 575.872802734375 with beta sum per layer: []
optimal alpha/beta time: 12.856824159622192
alpha-CROWN with intermediate bounds by MIP: tensor([[-54.2056, -60.7653, -75.1773, -68.5251, -50.5296, -58.9413, -75.7666,
         -60.7503, -71.2117]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 77 nodes out of 77 unstable nodes, lb improved 21.219871520996094, ub improved 23.696134567260742, time 45.5969
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_88', 'lay8_98', 'lay8_7', 'lay8_81', 'lay8_15', 'lay8_67', 'lay8_21', 'lay8_60', 'lay8_82', 'lay8_13', 'lay8_55', 'lay8_5', 'lay8_58', 'lay8_63', 'lay8_33', 'lay8_69', 'lay8_22', 'lay8_39', 'lay8_95', 'lay8_66', 'lay8_19', 'lay8_90', 'lay8_41', 'lay8_20', 'lay8_3', 'lay8_44', 'lay8_24', 'lay8_54', 'lay8_74', 'lay8_18', 'lay8_49', 'lay8_38', 'lay8_34', 'lay8_76', 'lay8_16', 'lay8_37', 'lay8_78', 'lay8_11', 'lay8_43', 'lay8_9', 'lay8_68', 'lay8_99', 'lay8_70', 'lay8_42', 'lay8_26', 'lay8_73', 'lay8_89', 'lay8_32', 'lay8_30', 'lay8_35', 'lay8_91', 'lay8_71', 'lay8_85', 'lay8_10', 'lay8_72', 'lay8_56', 'lay8_0', 'lay8_79', 'lay8_17', 'lay8_6', 'lay8_25', 'lay8_40', 'lay8_57', 'lay8_36', 'lay8_96', 'lay8_59', 'lay8_77', 'lay8_52', 'lay8_64', 'lay8_83', 'lay8_84', 'lay8_61', 'lay8_23', 'lay8_92', 'lay8_14', 'lay8_8', 'lay8_65', 'lay8_50', 'lay8_51', 'lay8_1', 'lay8_2', 'lay8_87', 'lay8_93', 'lay8_28', 'lay8_75', 'lay8_31', 'lay8_46', 'lay8_29', 'lay8_47', 'lay8_48', 'lay8_62', 'lay8_27', 'lay8_12', 'lay8_80', 'lay8_94', 'lay8_53', 'lay8_4', 'lay8_86'] filter: 1.0
Solving MIP for lay8_58, [-2.5725464820861816,0.25408250093460083]=>[-2.5725464820861816,-1e-05] (-1,-1; 15,-1), time: 0.2177s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_60, [-2.1357104778289795,0.32392245531082153]=>[-2.1357104778289795,-1e-05] (-1,-1; 15,-1), time: 0.2212s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_33, [-1.9001522064208984,0.3878668546676636]=>[-1.9001522064208984,-1e-05] (-1,-1; 15,-1), time: 0.2454s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_13, [-2.492513418197632,0.47596555948257446]=>[-2.492513418197632,-1e-05] (-1,-1; 15,-1), time: 0.2469s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_5, [-1.723055362701416,0.46476030349731445]=>[-1.723055362701416,-1e-05] (-1,-1; 15,-1), time: 0.2477s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_69, [-2.3660736083984375,0.2916189432144165]=>[-2.3660736083984375,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_63, [-2.482839345932007,0.19985038042068481]=>[-2.482839345932007,-1e-05] (-1,-1; 15,-1), time: 0.2525s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_88, [-1.5372059345245361,0.6756489276885986]=>[-1.5372059345245361,-1e-05] (-1,-1; 15,-1), time: 0.4339s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_82, [-1.7120683193206787,0.7453892230987549]=>[-1.7120683193206787,-1e-05] (-1,-1; 15,-1), time: 0.4360s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_95, [-1.775691270828247,0.5877751111984253]=>[-1.775691270828247,-1e-05] (-1,-1; 15,-1), time: 0.2386s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_55, [-1.703784465789795,0.695988655090332]=>[-1.703784465789795,-1e-05] (-1,-1; 15,-1), time: 0.4911s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_66, [-1.928757667541504,0.4806205630302429]=>[-1.928757667541504,-1e-05] (-1,-1; 15,-1), time: 0.2398s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_67, [-2.483935832977295,1.228729009628296]=>[-2.483935832977295,-1e-05] (-1,-1; 15,-1), time: 0.4965s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_3, [-2.076855182647705,0.4527161121368408]=>[-2.076855182647705,-1e-05] (-1,-1; 15,-1), time: 0.2275s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_19, [-2.1848411560058594,0.7454241514205933]=>[-2.1848411560058594,-1e-05] (-1,-1; 15,-1), time: 0.4298s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_54, [-2.1764461994171143,0.32155483961105347]=>[-2.1764461994171143,-1e-05] (-1,-1; 15,-1), time: 0.2086s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_74, [-1.7849056720733643,0.38981032371520996]=>[-1.7849056720733643,-1e-05] (-1,-1; 15,-1), time: 0.2219s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_44, [-2.7694036960601807,0.13680362701416016]=>[-2.7694036960601807,-1e-05] (-1,-1; 15,-1), time: 0.2336s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_18, [-2.4589529037475586,0.1559072732925415]=>[-2.4589529037475586,-1e-05] (-1,-1; 15,-1), time: 0.1956s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_49, [-2.233635663986206,1.046003818511963]=>[-2.233635663986206,-1e-05] (-1,-1; 15,-1), time: 0.4483s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_37, [-0.7627062201499939,1.4148473739624023]=>[1e-05,1.4148473739624023] (15,-1; -1,-1), time: 0.2217s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_16, [-0.9057757258415222,2.5921385288238525]=>[1e-05,2.5921385288238525] (15,-1; -1,-1), time: 4.0803s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_21, [-1.4736618995666504,0.8199357390403748]=>[-1.4736618995666504,-1e-05] (-1,-1; 15,-1), time: 5.5448s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_20, [-1.6562458276748657,0.8865044713020325]=>[-1.6562458276748657,-1e-05] (-1,-1; 15,-1), time: 5.4175s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_9, [-0.8985149264335632,1.51552414894104]=>[1e-05,1.51552414894104] (15,-1; -1,-1), time: 3.6032s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_38, [-1.9335479736328125,0.8692243099212646]=>[-0.9344345822104921,0.0672075720817724] (2,-1; 2,-1), time: 9.0165s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_76, [-1.2930907011032104,0.6156536340713501]=>[-1.2930907011032104,-1e-05] (-1,-1; 15,-1), time: 9.9906s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_70, [-0.7573271989822388,1.7338730096817017]=>[1e-05,1.7338730096817017] (15,-1; -1,-1), time: 0.3484s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_90, [-1.3016384840011597,0.8643307685852051]=>[-1.3016384840011597,-1e-05] (-1,-1; 15,-1), time: 12.4420s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_39, [-1.4815375804901123,1.604012370109558]=>[-0.5791681232481374,0.4562303429647055] (2,-1; 2,-1), time: 13.6530s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_42, [-1.8158354759216309,0.8845012784004211]=>[-1.8158354759216309,-1e-05] (-1,-1; 15,-1), time: 4.2305s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_78, [-1.530722737312317,1.4001719951629639]=>[-0.5446202866236092,0.35830769367642956] (2,-1; 2,-1), time: 16.5358s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_32, [-3.4543492794036865,0.004070281982421875]=>[-3.4543492794036865,-1e-05] (-1,-1; 15,-1), time: 0.1708s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_30, [-0.9098508358001709,2.467648983001709]=>[1e-05,2.467648983001709] (15,-1; -1,-1), time: 0.3609s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_41, [-1.7337387800216675,1.1077312231063843]=>[-0.8493823247160487,0.18208503502397783] (9,-1; 2,-1), time: 20.0518s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_91, [-2.6564853191375732,0.16118955612182617]=>[-2.6564853191375732,-1e-05] (-1,-1; 15,-1), time: 0.1721s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_7, [-1.6465271711349487,0.943009078502655]=>[-0.7512863674146126,0.015657041288988184] (2,-1; 9,-1), time: 21.4647s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_24, [-1.2998758554458618,1.464560866355896]=>[-0.26460514009186104,0.4896672279250393] (2,-1; 9,-1), time: 21.8458s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_22, [-1.5512402057647705,0.8134545087814331]=>[-0.5278280736630467,0.011767909431569176] (2,-1; 9,-1), time: 22.7821s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_43, [-2.4255998134613037,0.771085798740387]=>[-1.0820449959667247,0.22742626120976867] (9,-1; 2,-1), time: 18.0591s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_56, [-0.5031805634498596,2.8914384841918945]=>[1e-05,2.8914384841918945] (15,-1; -1,-1), time: 0.1677s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_11, [-1.318662405014038,1.81529700756073]=>[-0.5208465388247097,0.6830576513728661] (9,-1; 2,-1), time: 19.2723s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_79, [-3.0847058296203613,0.23989427089691162]=>[-3.0847058296203613,-1e-05] (-1,-1; 15,-1), time: 0.1603s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_17, [-0.6679049730300903,2.903911590576172]=>[1e-05,2.903911590576172] (15,-1; -1,-1), time: 0.1846s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_81, [-1.1666187047958374,1.0356987714767456]=>[-0.4023013196736753,0.15735446043832646] (2,-1; 9,-1), time: 27.4824s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_25, [-0.6611224412918091,2.2603063583374023]=>[1e-05,2.2603063583374023] (15,-1; -1,-1), time: 0.1815s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_6, [-0.9574657678604126,1.4780168533325195]=>[1e-05,1.4780168533325195] (15,-1; -1,-1), time: 3.8418s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_98, [-0.9882261157035828,1.1436517238616943]=>[-0.30045988227150805,0.27903434505629704] (9,-1; 9,-1), time: 30.0062s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_15, [-1.2795708179473877,0.7593270540237427]=>[-0.48674674583036276,0.007091017481170329] (9,-1; 9,-1), time: 30.0073s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_36, [-0.11044740676879883,2.957559108734131]=>[1e-05,2.957559108734131] (15,-1; -1,-1), time: 0.1644s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_34, [-1.1943691968917847,1.0253660678863525]=>[-0.2953281494801978,0.21381657430967183] (9,-1; 9,-1), time: 30.0132s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_77, [-0.33191585540771484,2.8081464767456055]=>[1e-05,2.8081464767456055] (15,-1; -1,-1), time: 0.1618s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_99, [-0.893180787563324,1.6785043478012085]=>[-0.01738616430471089,0.8202872738493932] (9,-1; 2,-1), time: 22.2448s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_72, [-0.8088594079017639,2.017249345779419]=>[-0.1654450192289788,1.023998818328887] (2,-1; 2,-1), time: 9.2785s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_89, [-1.3616224527359009,1.970481038093567]=>[-0.36304785143155177,0.8045844537524814] (2,-1; 9,-1), time: 18.4140s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_84, [-1.434783935546875,0.5849913358688354]=>[-1.434783935546875,-1e-05] (-1,-1; 15,-1), time: 0.6974s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_61, [-0.7996213436126709,1.7575454711914062]=>[1e-05,1.7575454711914062] (15,-1; -1,-1), time: 0.4068s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_52, [-2.4679765701293945,1.200957179069519]=>[-2.4679765701293945,-1e-05] (-1,-1; 15,-1), time: 5.1415s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_92, [-1.4643073081970215,0.6021965742111206]=>[-1.4643073081970215,-1e-05] (-1,-1; 15,-1), time: 0.1806s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_14, [-3.825328826904297,0.17987799644470215]=>[-3.825328826904297,-1e-05] (-1,-1; 15,-1), time: 0.1539s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_73, [-1.267166256904602,1.4255388975143433]=>[-0.31818906857614676,0.6342693303303472] (2,-1; 9,-1), time: 22.9900s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_23, [-1.4580272436141968,0.7231928706169128]=>[-1.4580272436141968,-1e-05] (-1,-1; 15,-1), time: 3.4757s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_68, [-1.2946656942367554,0.7414825558662415]=>[-0.3448238655359018,0.20668802163783295] (9,-1; 9,-1), time: 30.0032s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_51, [-1.7167197465896606,0.5147839784622192]=>[-1.7167197465896606,-1e-05] (-1,-1; 15,-1), time: 0.1629s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_26, [-1.0119200944900513,1.0107450485229492]=>[-0.08706816009076691,0.36181771675482094] (9,-1; 2,-1), time: 27.8308s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_59, [-2.3078415393829346,3.0960123538970947]=>[-1.1197713766952326,1.0682817249480554] (2,-1; 2,-1), time: 10.4718s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_2, [-1.6050087213516235,0.5330892205238342]=>[-1.6050087213516235,-1e-05] (-1,-1; 15,-1), time: 0.1772s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_87, [-3.1247644424438477,0.5855363607406616]=>[-3.1247644424438477,-1e-05] (-1,-1; 15,-1), time: 0.1794s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_0, [-1.379941463470459,1.4382989406585693]=>[-0.5879034810935485,0.4075393101498571] (2,-1; 9,-1), time: 17.4370s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_93, [-1.585335373878479,0.7792284488677979]=>[-1.585335373878479,-1e-05] (-1,-1; 15,-1), time: 0.5318s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_31, [-0.7340140342712402,2.5086913108825684]=>[1e-05,2.5086913108825684] (15,-1; -1,-1), time: 0.1786s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_46, [-2.1576943397521973,0.35882019996643066]=>[-2.1576943397521973,-1e-05] (-1,-1; 15,-1), time: 0.1577s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_35, [-1.040101408958435,1.0173463821411133]=>[-0.07775867393149234,0.37486154946862554] (9,-1; 2,-1), time: 23.6232s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_47, [-1.988898515701294,0.30594080686569214]=>[-1.988898515701294,-1e-05] (-1,-1; 15,-1), time: 0.1775s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_57, [-0.9597206711769104,1.719293475151062]=>[-0.2970050088843037,0.668057747012871] (2,-1; 2,-1), time: 17.2470s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_1, [-1.6289852857589722,0.7872121930122375]=>[-1.6289852857589722,-1e-05] (-1,-1; 15,-1), time: 6.3313s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_40, [-1.307336449623108,0.9110828042030334]=>[-0.47412116271265414,0.16039737797521822] (2,-1; 9,-1), time: 20.0394s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_12, [-2.149674892425537,1.0326623916625977]=>[-2.149674892425537,-1e-05] (-1,-1; 15,-1), time: 0.3469s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_80, [-2.4764161109924316,0.44954347610473633]=>[-2.4764161109924316,-1e-05] (-1,-1; 15,-1), time: 0.1863s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_71, [-1.7307461500167847,3.314103126525879]=>[-0.5680058347155373,1.7947343212718962] (9,-1; 2,-1), time: 27.8889s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_8, [-1.5630260705947876,0.9107519388198853]=>[-1.5630260705947876,-1e-05] (-1,-1; 15,-1), time: 13.3797s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_4, [-2.8424437046051025,0.49894392490386963]=>[-2.8424437046051025,-1e-05] (-1,-1; 15,-1), time: 0.1805s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_27, [-1.5847580432891846,1.010144591331482]=>[-1.5847580432891846,-1e-05] (-1,-1; 15,-1), time: 4.1453s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_86, [-1.71580970287323,0.6087854504585266]=>[-1.71580970287323,-1e-05] (-1,-1; 15,-1), time: 0.1610s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_64, [-1.9070026874542236,1.133057713508606]=>[-0.9173323504811192,0.10195241645763665] (9,-1; 2,-1), time: 18.4665s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_50, [-1.8348808288574219,1.1937365531921387]=>[-0.9872496281979856,0.20016507187347737] (2,-1; 2,-1), time: 12.7041s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_85, [-1.1617767810821533,1.1634628772735596]=>[-0.4322785517774206,0.13136038257575375] (9,-1; 9,-1), time: 30.0124s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_96, [-1.1690013408660889,1.2473728656768799]=>[-0.2963127501920531,0.4039311563088624] (9,-1; 2,-1), time: 21.6950s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_53, [-1.5459555387496948,0.768469512462616]=>[-1.5459555387496948,-1e-05] (-1,-1; 15,-1), time: 3.4178s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_94, [-1.6106325387954712,0.7651894092559814]=>[-1.6106325387954712,-1e-05] (-1,-1; 15,-1), time: 3.6227s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_10, [-1.0679470300674438,0.9447757005691528]=>[-0.2769279403512232,0.23401401696572072] (9,-1; 9,-1), time: 30.0026s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_48, [-1.6730506420135498,1.3856974840164185]=>[-0.6797175531204029,0.5383122258861633] (2,-1; 2,-1), time: 11.0690s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_29, [-1.1812918186187744,1.4583611488342285]=>[-0.20838212503405343,0.6089136087630032] (2,-1; 2,-1), time: 13.7919s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_75, [-1.7508203983306885,1.9986480474472046]=>[-0.7652635886914592,0.5967187846092568] (2,-1; 2,-1), time: 15.3501s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_65, [-1.6100785732269287,1.091948390007019]=>[-0.766189256344441,0.20785244992421886] (9,-1; 2,-1), time: 22.8222s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_83, [-1.5145621299743652,1.2962725162506104]=>[-0.7008644442109915,0.13777433816749113] (9,-1; 9,-1), time: 30.0060s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_28, [-1.1116011142730713,1.1973553895950317]=>[-0.4362243955713482,0.08892081512987485] (9,-1; 9,-1), time: 30.0082s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_62, [-1.2297834157943726,1.1451671123504639]=>[-0.39885529946466164,0.2022060383803515] (9,-1; 9,-1), time: 30.0030s, #vars: 1389, #constrs: 706, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 294.874755859375 with beta sum per layer: []
optimal alpha/beta time: 13.055747270584106
alpha-CROWN with intermediate bounds by MIP: tensor([[-27.5949, -30.7196, -38.7168, -35.6466, -25.7368, -30.0842, -38.0798,
         -31.3446, -36.9515]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 98 nodes out of 98 unstable nodes, lb improved 42.2999382019043, ub improved 63.1595573425293, time 76.0508
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_23', 'lay10_99', 'lay10_65', 'lay10_88', 'lay10_22', 'lay10_42', 'lay10_72', 'lay10_51', 'lay10_26', 'lay10_37', 'lay10_71', 'lay10_91', 'lay10_70', 'lay10_79', 'lay10_12', 'lay10_13', 'lay10_46', 'lay10_40', 'lay10_24', 'lay10_19', 'lay10_93', 'lay10_43', 'lay10_20', 'lay10_47', 'lay10_81', 'lay10_14', 'lay10_63', 'lay10_34', 'lay10_9', 'lay10_15', 'lay10_80', 'lay10_48', 'lay10_36', 'lay10_49', 'lay10_56', 'lay10_60', 'lay10_1', 'lay10_25', 'lay10_75', 'lay10_10', 'lay10_31', 'lay10_38', 'lay10_66', 'lay10_78', 'lay10_77', 'lay10_3', 'lay10_82', 'lay10_21', 'lay10_2', 'lay10_18', 'lay10_64', 'lay10_97', 'lay10_92', 'lay10_33', 'lay10_8', 'lay10_85', 'lay10_67', 'lay10_86', 'lay10_73', 'lay10_52', 'lay10_54', 'lay10_4', 'lay10_6', 'lay10_28', 'lay10_45', 'lay10_17', 'lay10_76', 'lay10_7', 'lay10_55', 'lay10_35', 'lay10_16', 'lay10_61', 'lay10_84', 'lay10_30', 'lay10_53', 'lay10_69', 'lay10_95', 'lay10_96', 'lay10_58', 'lay10_29', 'lay10_50', 'lay10_32', 'lay10_0', 'lay10_87', 'lay10_90', 'lay10_11', 'lay10_74', 'lay10_59', 'lay10_94', 'lay10_68', 'lay10_62', 'lay10_27', 'lay10_44', 'lay10_83', 'lay10_39', 'lay10_98', 'lay10_57', 'lay10_89', 'lay10_41', 'lay10_5'] filter: 1.0
Solving MIP for lay10_13, [-2.8314645290374756,1.9222723245620728]=>[-2.8314645290374756,-1e-05] (-1,-1; 15,-1), time: 0.2585s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_22, [-2.6668825149536133,1.8058727979660034]=>[-2.6668825149536133,-1e-05] (-1,-1; 15,-1), time: 0.2710s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_99, [-2.7871134281158447,2.3630268573760986]=>[-2.7871134281158447,-1e-05] (-1,-1; 15,-1), time: 0.3151s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_37, [-2.7411887645721436,1.4795567989349365]=>[-2.7411887645721436,-1e-05] (-1,-1; 15,-1), time: 0.5194s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_24, [-2.8505892753601074,1.3016020059585571]=>[-2.8505892753601074,-1e-05] (-1,-1; 15,-1), time: 0.2224s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_26, [-3.024221420288086,1.699039101600647]=>[-3.024221420288086,-1e-05] (-1,-1; 15,-1), time: 0.6981s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_19, [-2.665454626083374,2.0142292976379395]=>[-2.665454626083374,-1e-05] (-1,-1; 15,-1), time: 0.2174s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_93, [-2.7909023761749268,1.0203490257263184]=>[-2.7909023761749268,-1e-05] (-1,-1; 15,-1), time: 0.2167s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_20, [-2.7553060054779053,1.2871384620666504]=>[-2.7553060054779053,-1e-05] (-1,-1; 15,-1), time: 0.2198s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_81, [-2.673133611679077,1.3550565242767334]=>[-2.673133611679077,-1e-05] (-1,-1; 15,-1), time: 0.2116s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_12, [-3.0728886127471924,2.4457950592041016]=>[-3.0728886127471924,-1e-05] (-1,-1; 15,-1), time: 4.5758s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_65, [-2.8506462574005127,1.8385939598083496]=>[-2.8506462574005127,-1e-05] (-1,-1; 15,-1), time: 7.8800s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_51, [-2.5500614643096924,1.6802246570587158]=>[-2.5500614643096924,-1e-05] (-1,-1; 15,-1), time: 8.2484s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_9, [-2.5408682823181152,1.415772795677185]=>[-2.5408682823181152,-1e-05] (-1,-1; 15,-1), time: 0.1865s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_23, [-2.3142807483673096,2.3297464847564697]=>[-0.7979522438935481,-1e-05] (9,-1; 15,-1), time: 19.2490s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_40, [-2.2324132919311523,3.228651762008667]=>[-0.6708900040359694,0.8832152432735696] (2,-1; 9,-1), time: 19.8553s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_91, [-2.2914674282073975,2.3431038856506348]=>[-0.9230816675388922,-1e-05] (9,-1; 15,-1), time: 20.4027s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_47, [-2.5670526027679443,2.5059444904327393]=>[-0.8714102613160627,0.35296555213574016] (2,-1; 9,-1), time: 28.5452s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_49, [-3.1009957790374756,2.2994637489318848]=>[-3.1009957790374756,-1e-05] (-1,-1; 15,-1), time: 0.4003s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_46, [-1.9139435291290283,2.9696106910705566]=>[-0.15049064885141358,0.8046375065409921] (2,-1; 9,-1), time: 29.6517s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_42, [-2.467336416244507,2.8053927421569824]=>[-0.5718561531763595,0.4718982114009227] (9,-1; 9,-1), time: 30.0051s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_71, [-1.74846613407135,2.381578207015991]=>[-0.2781392478335495,0.4639781653790318] (9,-1; 9,-1), time: 30.0063s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_88, [-2.1224732398986816,1.4975721836090088]=>[-0.3411632970950055,0.04689079479427308] (9,-1; 9,-1), time: 30.0124s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_79, [-2.355013132095337,1.8750126361846924]=>[-0.6092382566061866,0.040452640668988724] (9,-1; 9,-1), time: 30.0127s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_70, [-2.1441521644592285,2.2789463996887207]=>[-0.40338707540963853,0.1813918493215858] (9,-1; 9,-1), time: 30.0155s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_72, [-2.3677098751068115,2.223315715789795]=>[-0.4513527288159234,0.21752349142018831] (9,-1; 9,-1), time: 30.0221s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_25, [-1.9068405628204346,3.0083630084991455]=>[1e-05,3.0083630084991455] (15,-1; -1,-1), time: 0.1890s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_75, [-1.8385168313980103,3.175450563430786]=>[1e-05,3.175450563430786] (15,-1; -1,-1), time: 0.1829s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_10, [-1.7850470542907715,3.416715383529663]=>[1e-05,3.416715383529663] (15,-1; -1,-1), time: 0.1889s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_31, [-1.4747989177703857,2.334022045135498]=>[1e-05,2.334022045135498] (15,-1; -1,-1), time: 0.1898s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_77, [-2.501237154006958,3.074122428894043]=>[1e-05,3.074122428894043] (15,-1; -1,-1), time: 0.4802s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_43, [-1.8639885187149048,2.6156673431396484]=>[-0.5767035690471022,0.17755575863743625] (9,-1; 9,-1), time: 30.0049s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_66, [-2.3117544651031494,3.407064437866211]=>[1e-05,3.407064437866211] (15,-1; -1,-1), time: 0.8314s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_14, [-1.962798833847046,2.3895697593688965]=>[-0.07394020669488449,0.7019952769105489] (9,-1; 9,-1), time: 30.0063s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_2, [-1.4287705421447754,3.004737377166748]=>[1e-05,3.004737377166748] (15,-1; -1,-1), time: 0.1840s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_78, [-2.562582492828369,1.439410924911499]=>[-2.562582492828369,-1e-05] (-1,-1; 15,-1), time: 3.9227s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_63, [-2.141984224319458,3.0267999172210693]=>[-0.47896863669252215,0.6197239035378366] (9,-1; 9,-1), time: 30.0040s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_56, [-2.721100330352783,1.6255115270614624]=>[-2.721100330352783,-1e-05] (-1,-1; 15,-1), time: 5.2516s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_18, [-2.368360996246338,2.697632074356079]=>[1e-05,2.697632074356079] (15,-1; -1,-1), time: 5.8780s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_34, [-2.276775598526001,2.1592307090759277]=>[-0.5653202255718965,0.04049051210296989] (9,-1; 9,-1), time: 30.0140s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_15, [-2.075157642364502,2.8251779079437256]=>[-0.29807215797336506,0.9461405446523539] (9,-1; 9,-1), time: 30.0039s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_80, [-2.5252559185028076,1.9872393608093262]=>[-0.7590231564226995,0.08722168759477464] (9,-1; 9,-1), time: 30.0027s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_86, [-2.4084153175354004,2.829620838165283]=>[1e-05,2.829620838165283] (15,-1; -1,-1), time: 0.5954s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_48, [-2.1315743923187256,2.6332504749298096]=>[-0.031069294968267134,0.7587612431668832] (9,-1; 9,-1), time: 30.0026s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_36, [-1.8487476110458374,2.2322587966918945]=>[-0.25324974422370244,0.2841476226094403] (9,-1; 9,-1), time: 30.0115s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_54, [-2.639679431915283,1.5150971412658691]=>[-2.639679431915283,-1e-05] (-1,-1; 15,-1), time: 0.1878s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_4, [-1.7923047542572021,2.140857219696045]=>[1e-05,2.140857219696045] (15,-1; -1,-1), time: 0.7763s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_60, [-2.3036751747131348,2.3466901779174805]=>[-0.5193959351302028,0.5031981027096311] (9,-1; 2,-1), time: 23.6723s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_82, [-2.3089399337768555,1.869207739830017]=>[-0.42640735819436665,0.5890238947700277] (9,-1; 2,-1), time: 25.7693s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_45, [-2.6371278762817383,1.6680001020431519]=>[-2.6371278762817383,-1e-05] (-1,-1; 15,-1), time: 0.6247s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_8, [-2.4330432415008545,3.084925651550293]=>[-0.7944999109222317,0.7824022833625652] (2,-1; 9,-1), time: 20.5801s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_1, [-2.1209511756896973,2.1977591514587402]=>[-0.5299806581314686,0.19940408230933418] (9,-1; 9,-1), time: 30.0033s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_38, [-2.335773468017578,2.2901365756988525]=>[-0.5168762044575455,0.4121568146237407] (9,-1; 9,-1), time: 30.0055s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_3, [-2.1036224365234375,1.9612208604812622]=>[-0.6465377701090087,0.2297023466360253] (9,-1; 9,-1), time: 30.0031s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_21, [-1.7935831546783447,2.1908633708953857]=>[-0.31261023339557736,0.16286362641844604] (9,-1; 9,-1), time: 30.0026s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_16, [-1.2981057167053223,2.6384379863739014]=>[1e-05,2.6384379863739014] (15,-1; -1,-1), time: 0.2076s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_64, [-2.491828203201294,1.4974696636199951]=>[-0.5584693883666645,0.052690181163379264] (9,-1; 9,-1), time: 30.0047s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_97, [-1.6909204721450806,3.035076379776001]=>[-0.3952749274261417,0.7384440739998385] (9,-1; 9,-1), time: 30.0039s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_92, [-1.909802794456482,1.8021739721298218]=>[-0.18524748360630205,0.37240916584427375] (9,-1; 9,-1), time: 30.0068s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_33, [-2.1955530643463135,2.6155765056610107]=>[-0.37711262936935475,0.48707055177043307] (9,-1; 9,-1), time: 30.0031s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_69, [-1.7583285570144653,2.355738401412964]=>[1e-05,2.355738401412964] (15,-1; -1,-1), time: 0.1873s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_85, [-2.4998526573181152,1.6638996601104736]=>[-0.4500507743092253,0.08895879249845011] (9,-1; 9,-1), time: 30.0030s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_67, [-1.9670823812484741,2.1335043907165527]=>[-0.15887875370030108,0.388999533181075] (9,-1; 9,-1), time: 30.0027s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_55, [-1.32973313331604,2.32331919670105]=>[1e-05,2.32331919670105] (15,-1; -1,-1), time: 8.5594s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_7, [-1.7467572689056396,1.9941099882125854]=>[1e-05,1.9941099882125854] (15,-1; -1,-1), time: 10.5091s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_50, [-1.9037173986434937,3.0007879734039307]=>[1e-05,3.0007879734039307] (15,-1; -1,-1), time: 0.2003s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_32, [-2.8479363918304443,1.2716172933578491]=>[-2.8479363918304443,-1e-05] (-1,-1; 15,-1), time: 0.1888s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_58, [-2.5858893394470215,3.6742067337036133]=>[1e-05,3.6742067337036133] (15,-1; -1,-1), time: 4.9472s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_87, [-1.659095048904419,2.939697027206421]=>[1e-05,2.939697027206421] (15,-1; -1,-1), time: 0.1911s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_52, [-2.31719970703125,2.213670015335083]=>[-0.47998548586997486,0.4943458055028547] (2,-1; 9,-1), time: 25.2940s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_90, [-2.455374240875244,1.7360022068023682]=>[-2.455374240875244,-1e-05] (-1,-1; 15,-1), time: 4.7124s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_73, [-2.3764636516571045,1.9868245124816895]=>[-0.6962129553652423,0.17201107532944915] (9,-1; 9,-1), time: 30.0028s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_11, [-1.9578205347061157,1.9167267084121704]=>[-1.9578205347061157,-1e-05] (-1,-1; 15,-1), time: 5.2954s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_6, [-2.277867078781128,1.56446373462677]=>[-0.26749140793282533,0.17439364786954967] (9,-1; 9,-1), time: 30.0052s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_28, [-2.537781238555908,2.00864839553833]=>[-0.2920597403529024,0.4980689570182795] (9,-1; 9,-1), time: 30.0029s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_76, [-2.0708234310150146,2.7412214279174805]=>[-0.43911797744093467,0.7356254346382508] (9,-1; 2,-1), time: 28.9708s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_27, [-1.5051212310791016,4.180840015411377]=>[1e-05,4.180840015411377] (15,-1; -1,-1), time: 0.1844s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_44, [-3.949273109436035,1.0398705005645752]=>[-3.949273109436035,-1e-05] (-1,-1; 15,-1), time: 0.1833s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_17, [-2.2104544639587402,3.177588939666748]=>[-0.3132317906215612,0.3984404799401672] (9,-1; 9,-1), time: 30.0047s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_83, [-2.927551507949829,1.4026987552642822]=>[-2.927551507949829,-1e-05] (-1,-1; 15,-1), time: 0.9182s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_98, [-1.5529499053955078,3.019801139831543]=>[1e-05,3.019801139831543] (15,-1; -1,-1), time: 0.1874s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_35, [-2.293630599975586,2.5286972522735596]=>[-0.4997943283086538,0.29251829851313793] (9,-1; 9,-1), time: 30.0027s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_61, [-2.4356744289398193,1.5071316957473755]=>[-0.6247177694218491,0.2478754190478011] (9,-1; 9,-1), time: 30.0059s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_84, [-2.0529868602752686,2.19677472114563]=>[-0.009987715991910503,0.5238609450105891] (9,-1; 9,-1), time: 30.0123s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_5, [-2.652678966522217,1.3343473672866821]=>[-2.652678966522217,-1e-05] (-1,-1; 15,-1), time: 0.1918s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_0, [-2.264193534851074,2.083627223968506]=>[-0.32001358025036925,0.5390020568743703] (2,-1; 9,-1), time: 22.8397s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_30, [-2.390368938446045,2.33747935295105]=>[-0.3903266717130305,0.26716194289321904] (9,-1; 9,-1), time: 30.0026s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_53, [-2.154146909713745,2.6975467205047607]=>[-0.20316121176675597,0.7005746493088859] (9,-1; 9,-1), time: 30.0031s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_95, [-2.703831434249878,1.6977568864822388]=>[-0.7198802019905863,0.07490831740227781] (9,-1; 9,-1), time: 30.0032s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_96, [-2.0789401531219482,2.41044282913208]=>[-0.5551815789336192,0.5151608986492682] (9,-1; 9,-1), time: 30.0032s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_29, [-1.6770973205566406,2.705166816711426]=>[-0.07306263060004979,0.7790725555001606] (9,-1; 9,-1), time: 30.0108s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_74, [-2.3697054386138916,3.27520751953125]=>[-0.7299637686266982,0.7584302928890458] (2,-1; 9,-1), time: 28.1013s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_59, [-2.0867691040039062,1.9181630611419678]=>[-0.19963541712249916,0.465610438307112] (9,-1; 9,-1), time: 30.0031s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_94, [-1.9568760395050049,2.1798598766326904]=>[-0.294245947088654,0.6877610741204945] (9,-1; 9,-1), time: 30.0037s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_68, [-2.408867597579956,1.8996267318725586]=>[-0.3130817342105358,0.465064079010589] (9,-1; 9,-1), time: 30.0028s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_62, [-1.8653209209442139,2.027784824371338]=>[-0.2524762298848309,0.3211023428799926] (9,-1; 9,-1), time: 30.0035s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_39, [-2.4373843669891357,1.7118587493896484]=>[-0.6060177683938373,0.009632972510103772] (9,-1; 9,-1), time: 30.0128s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_57, [-2.311520576477051,1.9109102487564087]=>[-0.45885298234216343,0.10712082261105015] (9,-1; 9,-1), time: 30.0044s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_89, [-2.7207553386688232,1.5069971084594727]=>[-0.5581741530677675,0.017335807413634392] (9,-1; 9,-1), time: 30.0078s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_41, [-2.048461675643921,1.8507423400878906]=>[-0.37888878118937164,0.09272815605012702] (9,-1; 9,-1), time: 30.0035s, #vars: 1563, #constrs: 917, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: 145.53671264648438 with beta sum per layer: []
optimal alpha/beta time: 12.85448932647705
alpha-CROWN with intermediate bounds by MIP: tensor([[-13.3887, -14.8126, -19.1948, -18.4279, -12.3597, -14.8018, -17.7775,
         -15.9442, -18.8297]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 134.05606079101562, ub improved 146.58816528320312, time 121.3994
maximum relu layer improved by MIP so far 4
MIP finished with 250.61901354789734s
Run final alpha-CROWN after MIP solving on layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: 84.54753875732422 with beta sum per layer: []
optimal alpha/beta time: 11.121340990066528
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ -7.5790,  -8.2402, -11.1416, -11.7482,  -6.6258,  -8.5539,  -9.2787,
          -9.9355, -11.4446]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ -7.5790,  -8.2402, -11.1416, -11.7482,  -6.6258,  -8.5539,  -9.2787,
          -9.9355, -11.4446,   0.0000]], device='cuda:0') min: tensor(-11.7482, device='cuda:0')
time threshold left for bab: 26.76739811897278
##### [0:759] Tested against 3 ######
Model prediction is: tensor([[-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
          1.3393,  8.1315]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 11.748297691345215 with beta sum per layer: []
optimal alpha/beta time: 2.1104736328125
alpha-CROWN with fixed intermediate bounds: tensor([[-11.7483]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-11.748297691345215
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 39
layer 2 size torch.Size([100]) unstable 32
layer 3 size torch.Size([100]) unstable 37
layer 4 size torch.Size([100]) unstable 54
layer 5 size torch.Size([100]) unstable 81
layer 6 size torch.Size([100]) unstable 100
layer 7 size torch.Size([100]) unstable 100
# of unstable neurons: 474
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 15]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 21.58935546875 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3961547315120697]
optimal alpha/beta time: 0.5624208450317383
This batch time : update_bounds func: 0.5658	 prepare: 0.0020	 bound: 0.5627	 transfer: 0.0007	 finalize: 0.0004
Accumulated time: update_bounds func: 0.5658	 prepare: 0.0020	 bound: 0.5627	 transfer: 0.0007	 finalize: 0.0004
batch bounding time:  0.5660736560821533
Current worst splitting domains [lb, ub] (depth):
[-11.37561, 87.251701] (1), [-10.21375, 87.251701] (1), 
length of domains: 2
Total time: 0.5961	 pickout: 0.0012	 decision: 0.0286	 get_bound: 0.5661	 add_domain: 0.0002
Current lb:-11.375606536865234
2 neurons visited
0 diving domains visited
Cumulative time: 2.921971082687378

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 29], [7, 29]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 40.476131439208984 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0312352180480957]
optimal alpha/beta time: 0.38632869720458984
This batch time : update_bounds func: 0.3899	 prepare: 0.0021	 bound: 0.3866	 transfer: 0.0007	 finalize: 0.0005
Accumulated time: update_bounds func: 0.9558	 prepare: 0.0041	 bound: 0.9493	 transfer: 0.0007	 finalize: 0.0010
batch bounding time:  0.3900632858276367
Current worst splitting domains [lb, ub] (depth):
[-11.19588, 87.251701] (2), [-10.20780, 87.251701] (2), [-9.96864, 87.251701] (2), [-9.10381, 87.251701] (2), 
length of domains: 4
Total time: 0.4195	 pickout: 0.0012	 decision: 0.0279	 get_bound: 0.3901	 add_domain: 0.0003
Current lb:-11.195884704589844
6 neurons visited
0 diving domains visited
Cumulative time: 3.3415699005126953

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 45], [7, 45], [7, 45], [7, 45]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 76.27989196777344 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.9633002281188965]
optimal alpha/beta time: 0.38737964630126953
This batch time : update_bounds func: 0.3918	 prepare: 0.0025	 bound: 0.3876	 transfer: 0.0007	 finalize: 0.0009
Accumulated time: update_bounds func: 1.3475	 prepare: 0.0066	 bound: 1.3369	 transfer: 0.0007	 finalize: 0.0018
batch bounding time:  0.391890287399292
Current worst splitting domains [lb, ub] (depth):
[-10.82167, 87.251701] (3), [-10.52990, 87.251701] (3), [-9.66354, 87.251701] (3), [-9.63640, 87.251701] (3), [-9.54266, 87.251701] (3), [-9.09540, 87.251701] (3), [-8.64189, 87.251701] (3), [-8.34843, 87.251701] (3), 
length of domains: 8
Total time: 0.4213	 pickout: 0.0015	 decision: 0.0275	 get_bound: 0.3919	 add_domain: 0.0003
Current lb:-10.821667671203613
14 neurons visited
0 diving domains visited
Cumulative time: 3.7630245685577393

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 47], [7, 66], [7, 66], [7, 47], [7, 66], [7, 66], [7, 66], [7, 66]]
single_node_split: True
regular batch size: 2*8, diving batch size 1*0
best_l after optimization: 143.81260681152344 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.056855201721191]
optimal alpha/beta time: 0.38907480239868164
This batch time : update_bounds func: 0.3953	 prepare: 0.0033	 bound: 0.3894	 transfer: 0.0007	 finalize: 0.0018
Accumulated time: update_bounds func: 1.7429	 prepare: 0.0099	 bound: 1.7263	 transfer: 0.0007	 finalize: 0.0037
batch bounding time:  0.395521879196167
Current worst splitting domains [lb, ub] (depth):
[-10.71638, 87.251701] (4), [-10.43219, 87.251701] (4), [-9.81186, 87.251701] (4), [-9.49788, 87.251701] (4), [-9.44241, 87.251701] (4), [-9.34249, 87.251701] (4), [-9.25570, 87.251701] (4), [-8.92664, 87.251701] (4), [-8.78497, 87.251701] (4), [-8.76162, 87.251701] (4), [-8.67861, 87.251701] (4), [-8.38952, 87.251701] (4), [-8.10137, 87.251701] (4), [-8.09646, 87.251701] (4), [-7.93854, 87.251701] (4), [-7.63599, 87.251701] (4), 
length of domains: 16
Total time: 0.4262	 pickout: 0.0022	 decision: 0.0276	 get_bound: 0.3955	 add_domain: 0.0008
Current lb:-10.71638011932373
30 neurons visited
0 diving domains visited
Cumulative time: 4.189422130584717

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 34], [7, 47], [7, 34], [7, 66], [7, 47], [7, 47], [7, 47], [7, 47], [7, 34], [7, 47]]
single_node_split: True
regular batch size: 2*16, diving batch size 1*0
best_l after optimization: 272.4324951171875 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 34.173072814941406]
optimal alpha/beta time: 0.3910648822784424
This batch time : update_bounds func: 0.4011	 prepare: 0.0051	 bound: 0.3913	 transfer: 0.0008	 finalize: 0.0039
Accumulated time: update_bounds func: 2.1440	 prepare: 0.0150	 bound: 2.1176	 transfer: 0.0008	 finalize: 0.0075
batch bounding time:  0.4012885093688965
Current worst splitting domains [lb, ub] (depth):
[-10.63439, 87.251701] (5), [-10.26393, 87.251701] (5), [-9.65114, 87.251701] (5), [-9.64873, 87.251701] (5), [-9.31365, 87.251701] (5), [-9.30422, 87.251701] (5), [-9.19188, 87.251701] (5), [-9.10255, 87.251701] (5), [-8.88494, 87.251701] (5), [-8.77830, 87.251701] (5), [-8.76423, 87.251701] (5), [-8.70133, 87.251701] (5), [-8.70087, 87.251701] (5), [-8.60378, 87.251701] (5), [-8.57408, 87.251701] (5), [-8.56098, 87.251701] (5), [-8.45706, 87.251701] (5), [-8.36454, 87.251701] (5), [-8.33179, 87.251701] (5), [-8.24568, 87.251701] (5), 
length of domains: 32
Total time: 0.4356	 pickout: 0.0037	 decision: 0.0286	 get_bound: 0.4013	 add_domain: 0.0020
Current lb:-10.634392738342285
62 neurons visited
0 diving domains visited
Cumulative time: 4.625378370285034

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 66], [7, 34], [7, 66], [7, 34], [7, 34], [7, 66], [7, 34], [7, 34], [7, 34], [7, 34]]
single_node_split: True
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: 509.2767639160156 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 84.14372253417969]
optimal alpha/beta time: 0.39222168922424316
This batch time : update_bounds func: 0.4093	 prepare: 0.0088	 bound: 0.3925	 transfer: 0.0010	 finalize: 0.0069
Accumulated time: update_bounds func: 2.5533	 prepare: 0.0238	 bound: 2.5101	 transfer: 0.0010	 finalize: 0.0144
batch bounding time:  0.4094717502593994
Current worst splitting domains [lb, ub] (depth):
[-10.51836, 87.251701] (6), [-10.17817, 87.251701] (6), [-9.48615, 87.251701] (6), [-9.45368, 87.251701] (6), [-9.43859, 87.251701] (6), [-9.14228, 87.251701] (6), [-8.99235, 87.251701] (6), [-8.90995, 87.251701] (6), [-8.79649, 87.251701] (6), [-8.74775, 87.251701] (6), [-8.70035, 87.251701] (6), [-8.68501, 87.251701] (6), [-8.54920, 87.251701] (6), [-8.52682, 87.251701] (6), [-8.52463, 87.251701] (6), [-8.47683, 87.251701] (6), [-8.32070, 87.251701] (6), [-8.31539, 87.251701] (6), [-8.29935, 87.251701] (6), [-8.22354, 87.251701] (6), 
length of domains: 64
Total time: 0.4486	 pickout: 0.0062	 decision: 0.0301	 get_bound: 0.4095	 add_domain: 0.0028
Current lb:-10.518360137939453
126 neurons visited
0 diving domains visited
Cumulative time: 5.074638843536377

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 57], [7, 57], [7, 92], [7, 57], [7, 57], [7, 57], [7, 57], [7, 57], [7, 57], [7, 57]]
single_node_split: True
regular batch size: 2*64, diving batch size 1*0
best_l after optimization: 967.9747314453125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 189.22154235839844]
optimal alpha/beta time: 0.40453195571899414
This batch time : update_bounds func: 0.4355	 prepare: 0.0148	 bound: 0.4048	 transfer: 0.0013	 finalize: 0.0144
Accumulated time: update_bounds func: 2.9888	 prepare: 0.0386	 bound: 2.9150	 transfer: 0.0013	 finalize: 0.0288
batch bounding time:  0.43579578399658203
Current worst splitting domains [lb, ub] (depth):
[-10.33990, 87.251701] (7), [-9.97379, 87.251701] (7), [-9.73680, 87.251701] (7), [-9.56373, 87.251701] (7), [-9.23809, 87.251701] (7), [-9.15699, 87.251701] (7), [-9.05754, 87.251701] (7), [-8.97278, 87.251701] (7), [-8.96289, 87.251701] (7), [-8.95465, 87.251701] (7), [-8.67530, 87.251701] (7), [-8.60465, 87.251701] (7), [-8.59872, 87.251701] (7), [-8.55733, 87.251701] (7), [-8.50998, 87.251701] (7), [-8.48513, 87.251701] (7), [-8.46788, 87.251701] (7), [-8.44828, 87.251701] (7), [-8.40458, 87.251701] (7), [-8.30018, 87.251701] (7), 
length of domains: 128
Total time: 0.4848	 pickout: 0.0113	 decision: 0.0318	 get_bound: 0.4360	 add_domain: 0.0057
Current lb:-10.3399019241333
254 neurons visited
0 diving domains visited
Cumulative time: 5.561435699462891

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 92], [7, 92], [7, 92], [7, 92], [7, 57], [7, 65], [7, 65], [7, 57], [7, 92], [7, 92]]
single_node_split: True
regular batch size: 2*128, diving batch size 1*0
best_l after optimization: 1841.2540283203125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 423.11260986328125]
optimal alpha/beta time: 0.3984377384185791
This batch time : update_bounds func: 0.4562	 prepare: 0.0287	 bound: 0.3987	 transfer: 0.0019	 finalize: 0.0266
Accumulated time: update_bounds func: 3.4450	 prepare: 0.0672	 bound: 3.3137	 transfer: 0.0019	 finalize: 0.0554
batch bounding time:  0.4565765857696533
Current worst splitting domains [lb, ub] (depth):
[-10.19195, 87.251701] (8), [-9.82276, 87.251701] (8), [-9.54111, 87.251701] (8), [-9.50112, 87.251701] (8), [-9.30695, 87.251701] (8), [-9.17722, 87.251701] (8), [-9.15572, 87.251701] (8), [-8.94433, 87.251701] (8), [-8.93589, 87.251701] (8), [-8.92670, 87.251701] (8), [-8.82643, 87.251701] (8), [-8.79554, 87.251701] (8), [-8.78321, 87.251701] (8), [-8.71380, 87.251701] (8), [-8.68081, 87.251701] (8), [-8.64977, 87.251701] (8), [-8.55558, 87.251701] (8), [-8.54327, 87.251701] (8), [-8.47767, 87.251701] (8), [-8.39031, 87.251701] (8), 
length of domains: 256
Total time: 0.5288	 pickout: 0.0223	 decision: 0.0370	 get_bound: 0.4569	 add_domain: 0.0125
Current lb:-10.191946983337402
510 neurons visited
0 diving domains visited
Cumulative time: 6.093981742858887

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 14], [6, 20], [7, 14], [7, 14], [6, 20], [7, 14], [7, 14], [7, 14], [7, 14], [7, 14]]
single_node_split: True
regular batch size: 2*256, diving batch size 1*0
best_l after optimization: 3447.59130859375 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.7320818901062012, 951.7041625976562]
optimal alpha/beta time: 0.40535545349121094
This batch time : update_bounds func: 0.5728	 prepare: 0.0570	 bound: 0.4056	 transfer: 0.0053	 finalize: 0.1042
Accumulated time: update_bounds func: 4.0178	 prepare: 0.1243	 bound: 3.7193	 transfer: 0.0053	 finalize: 0.1595
batch bounding time:  0.5734472274780273
Current worst splitting domains [lb, ub] (depth):
[-10.09354, 87.251701] (9), [-9.77692, 87.251701] (9), [-9.39584, 87.251701] (9), [-9.36414, 87.251701] (9), [-9.18244, 87.251701] (9), [-9.06082, 87.251701] (9), [-8.98983, 87.251701] (9), [-8.98422, 87.251701] (9), [-8.80123, 87.251701] (9), [-8.78421, 87.251701] (9), [-8.76524, 87.251701] (9), [-8.65530, 87.251701] (9), [-8.64658, 87.251701] (9), [-8.62542, 87.251701] (9), [-8.60826, 87.251701] (9), [-8.55432, 87.251701] (9), [-8.52611, 87.251701] (9), [-8.49548, 87.251701] (9), [-8.48051, 87.251701] (9), [-8.37921, 87.251701] (9), 
length of domains: 512
Total time: 0.6881	 pickout: 0.0431	 decision: 0.0449	 get_bound: 0.5741	 add_domain: 0.0260
Current lb:-10.093539237976074
1022 neurons visited
0 diving domains visited
Cumulative time: 6.789467811584473

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 65], [7, 14], [7, 65], [7, 65], [7, 14], [7, 65], [7, 65], [7, 65], [7, 65], [7, 92]]
single_node_split: True
regular batch size: 2*512, diving batch size 1*0
best_l after optimization: 6530.4189453125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.484954833984375, 2084.6884765625]
optimal alpha/beta time: 0.4053611755371094
This batch time : update_bounds func: 0.6831	 prepare: 0.1120	 bound: 0.4057	 transfer: 0.0111	 finalize: 0.1530
Accumulated time: update_bounds func: 4.7009	 prepare: 0.2362	 bound: 4.1250	 transfer: 0.0111	 finalize: 0.3125
batch bounding time:  0.6840953826904297
Current worst splitting domains [lb, ub] (depth):
[-9.96036, 87.251701] (10), [-9.68163, 87.251701] (10), [-9.38927, 87.251701] (10), [-9.21444, 87.251701] (10), [-9.18204, 87.251701] (10), [-9.03096, 87.251701] (10), [-8.88178, 87.251701] (10), [-8.79681, 87.251701] (10), [-8.73074, 87.251701] (10), [-8.62018, 87.251701] (10), [-8.59874, 87.251701] (10), [-8.56430, 87.251701] (10), [-8.55139, 87.251701] (10), [-8.54679, 87.251701] (10), [-8.51450, 87.251701] (10), [-8.38035, 87.251701] (10), [-8.37951, 87.251701] (10), [-8.37586, 87.251701] (10), [-8.36839, 87.251701] (10), [-8.35026, 87.251701] (10), 
length of domains: 1024
Total time: 0.8914	 pickout: 0.0865	 decision: 0.0667	 get_bound: 0.6854	 add_domain: 0.0528
Current lb:-9.960356712341309
2046 neurons visited
0 diving domains visited
Cumulative time: 7.69610333442688

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 20], [7, 65], [7, 77], [7, 77], [6, 20], [7, 65], [7, 77], [7, 77], [7, 77], [6, 55]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 12353.3525390625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 29.662342071533203, 4435.705078125]
optimal alpha/beta time: 0.4237949848175049
This batch time : update_bounds func: 0.9426	 prepare: 0.2208	 bound: 0.4241	 transfer: 0.0198	 finalize: 0.2749
Accumulated time: update_bounds func: 5.6435	 prepare: 0.4570	 bound: 4.5491	 transfer: 0.0198	 finalize: 0.5874
batch bounding time:  0.9443964958190918
Current worst splitting domains [lb, ub] (depth):
[-9.92052, 87.251701] (11), [-9.49277, 87.251701] (11), [-9.14941, 87.251701] (11), [-9.08895, 87.251701] (11), [-9.05339, 87.251701] (11), [-8.99106, 87.251701] (11), [-8.90593, 87.251701] (11), [-8.83924, 87.251701] (11), [-8.79051, 87.251701] (11), [-8.65289, 87.251701] (11), [-8.61085, 87.251701] (11), [-8.52758, 87.251701] (11), [-8.52057, 87.251701] (11), [-8.48102, 87.251701] (11), [-8.43070, 87.251701] (11), [-8.42517, 87.251701] (11), [-8.41840, 87.251701] (11), [-8.40708, 87.251701] (11), [-8.40547, 87.251701] (11), [-8.38814, 87.251701] (11), 
length of domains: 2048
Total time: 1.4569	 pickout: 0.1787	 decision: 0.1474	 get_bound: 0.9471	 add_domain: 0.1836
Current lb:-9.920524597167969
4094 neurons visited
0 diving domains visited
Cumulative time: 9.180521965026855

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 77], [7, 77], [6, 55], [7, 77], [7, 77], [6, 55], [6, 20], [7, 77], [7, 24], [6, 5]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 12866.611328125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 97.19135284423828, 4731.47265625]
optimal alpha/beta time: 0.4199559688568115
This batch time : update_bounds func: 0.9825	 prepare: 0.2224	 bound: 0.4203	 transfer: 0.0164	 finalize: 0.3206
Accumulated time: update_bounds func: 6.6260	 prepare: 0.6794	 bound: 4.9694	 transfer: 0.0164	 finalize: 0.9080
batch bounding time:  0.9844543933868408
Current worst splitting domains [lb, ub] (depth):
[-9.71582, 87.251701] (12), [-9.52163, 87.251701] (12), [-9.27615, 87.251701] (12), [-9.10722, 87.251701] (12), [-9.10520, 87.251701] (12), [-8.92191, 87.251701] (12), [-8.85214, 87.251701] (12), [-8.82195, 87.251701] (12), [-8.80320, 87.251701] (12), [-8.71433, 87.251701] (12), [-8.59995, 87.251701] (12), [-8.58248, 87.251701] (12), [-8.57626, 87.251701] (12), [-8.55673, 87.251701] (12), [-8.46790, 87.251701] (12), [-8.39647, 87.251701] (12), [-8.32765, 87.251701] (12), [-8.30729, 87.251701] (12), [-8.27967, 87.251701] (12), [-8.19632, 87.251701] (12), 
length of domains: 3072
Total time: 1.5717	 pickout: 0.1792	 decision: 0.1611	 get_bound: 0.9873	 add_domain: 0.2441
Current lb:-9.715816497802734
6142 neurons visited
0 diving domains visited
Cumulative time: 10.779594421386719

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 10], [7, 24], [5, 24], [7, 24], [7, 10], [7, 24], [7, 24], [7, 10], [7, 10], [7, 24]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13155.140625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 3.6214375495910645, 254.12701416015625, 4707.2900390625]
optimal alpha/beta time: 0.4213571548461914
This batch time : update_bounds func: 1.1399	 prepare: 0.2356	 bound: 0.4217	 transfer: 0.0241	 finalize: 0.3506
Accumulated time: update_bounds func: 7.7660	 prepare: 0.9150	 bound: 5.3911	 transfer: 0.0241	 finalize: 1.2587
batch bounding time:  1.1419258117675781
Current worst splitting domains [lb, ub] (depth):
[-9.47517, 87.251701] (13), [-9.44454, 87.251701] (13), [-9.33280, 87.251701] (13), [-9.26194, 87.251701] (13), [-9.20143, 87.251701] (13), [-8.89838, 87.251701] (13), [-8.88790, 87.251701] (13), [-8.78988, 87.251701] (13), [-8.78356, 87.251701] (13), [-8.72962, 87.251701] (13), [-8.66528, 87.251701] (13), [-8.56017, 87.251701] (13), [-8.55704, 87.251701] (13), [-8.53671, 87.251701] (13), [-8.51647, 87.251701] (13), [-8.51126, 87.251701] (13), [-8.50221, 87.251701] (13), [-8.48881, 87.251701] (13), [-8.47871, 87.251701] (13), [-8.36509, 87.251701] (13), 
length of domains: 4096
Total time: 1.5442	 pickout: 0.1807	 decision: 0.0973	 get_bound: 1.1451	 add_domain: 0.1212
Current lb:-9.47517204284668
8190 neurons visited
0 diving domains visited
Cumulative time: 12.353152513504028

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[6, 55], [6, 55], [7, 10], [7, 10], [7, 10], [7, 10], [7, 24], [7, 24], [7, 10], [7, 10]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13394.4951171875 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 20.802913665771484, 429.2088317871094, 4510.4892578125]
optimal alpha/beta time: 0.4218876361846924
This batch time : update_bounds func: 1.0636	 prepare: 0.2320	 bound: 0.4222	 transfer: 0.0237	 finalize: 0.3827
Accumulated time: update_bounds func: 8.8295	 prepare: 1.1470	 bound: 5.8133	 transfer: 0.0237	 finalize: 1.6414
batch bounding time:  1.0654315948486328
Current worst splitting domains [lb, ub] (depth):
[-9.44221, 87.251701] (14), [-9.41371, 87.251701] (14), [-9.07911, 87.251701] (14), [-9.07714, 87.251701] (14), [-9.04908, 87.251701] (14), [-8.96770, 87.251701] (14), [-8.92395, 87.251701] (14), [-8.90463, 87.251701] (14), [-8.70000, 87.251701] (14), [-8.64825, 87.251701] (14), [-8.62863, 87.251701] (14), [-8.60247, 87.251701] (14), [-8.57828, 87.251701] (14), [-8.53161, 87.251701] (14), [-8.48531, 87.251701] (14), [-8.46913, 87.251701] (14), [-8.46049, 87.251701] (14), [-8.43924, 87.251701] (14), [-8.41783, 87.251701] (14), [-8.40392, 87.251701] (14), 
length of domains: 5120
Total time: 1.6239	 pickout: 0.1843	 decision: 0.2456	 get_bound: 1.0684	 add_domain: 0.1256
Current lb:-9.442207336425781
10238 neurons visited
0 diving domains visited
Cumulative time: 14.007607221603394

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 24], [7, 24], [7, 80], [7, 80], [6, 5], [6, 55], [7, 24], [6, 55], [5, 24], [6, 20]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13630.2275390625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 43.47336196899414, 641.2962646484375, 4348.16455078125]
optimal alpha/beta time: 0.4261512756347656
This batch time : update_bounds func: 1.1404	 prepare: 0.2450	 bound: 0.4265	 transfer: 0.0227	 finalize: 0.4431
Accumulated time: update_bounds func: 9.9699	 prepare: 1.3921	 bound: 6.2398	 transfer: 0.0227	 finalize: 2.0845
batch bounding time:  1.1425039768218994
Current worst splitting domains [lb, ub] (depth):
[-9.43075, 87.251701] (15), [-9.21602, 87.251701] (15), [-9.11426, 87.251701] (15), [-8.98563, 87.251701] (15), [-8.92313, 87.251701] (15), [-8.85941, 87.251701] (15), [-8.85876, 87.251701] (15), [-8.85859, 87.251701] (15), [-8.84350, 87.251701] (15), [-8.82886, 87.251701] (15), [-8.74427, 87.251701] (15), [-8.68787, 87.251701] (15), [-8.61236, 87.251701] (15), [-8.58767, 87.251701] (15), [-8.49466, 87.251701] (15), [-8.40764, 87.251701] (15), [-8.40734, 87.251701] (15), [-8.38523, 87.251701] (15), [-8.37261, 87.251701] (15), [-8.37080, 87.251701] (15), 
length of domains: 6144
Total time: 1.7335	 pickout: 0.1860	 decision: 0.2722	 get_bound: 1.1453	 add_domain: 0.1300
Current lb:-9.430747985839844
12286 neurons visited
0 diving domains visited
Cumulative time: 15.77271056175232

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 24], [5, 24], [7, 80], [7, 24], [7, 80], [7, 27], [7, 80], [7, 27], [7, 27], [7, 27]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13807.0703125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 72.91021728515625, 665.25439453125, 4283.0283203125]
optimal alpha/beta time: 0.4338350296020508
This batch time : update_bounds func: 0.9299	 prepare: 0.2419	 bound: 0.4342	 transfer: 0.0236	 finalize: 0.2270
Accumulated time: update_bounds func: 10.8998	 prepare: 1.6340	 bound: 6.6740	 transfer: 0.0236	 finalize: 2.3115
batch bounding time:  0.9316878318786621
Current worst splitting domains [lb, ub] (depth):
[-9.22283, 87.251701] (16), [-9.20581, 87.251701] (16), [-9.17557, 87.251701] (16), [-8.89133, 87.251701] (16), [-8.85882, 87.251701] (16), [-8.79338, 87.251701] (16), [-8.75365, 87.251701] (16), [-8.75320, 87.251701] (16), [-8.74136, 87.251701] (16), [-8.72574, 87.251701] (16), [-8.70367, 87.251701] (16), [-8.69250, 87.251701] (16), [-8.63443, 87.251701] (16), [-8.62222, 87.251701] (16), [-8.59815, 87.251701] (16), [-8.52968, 87.251701] (16), [-8.48725, 87.251701] (16), [-8.46885, 87.251701] (16), [-8.43796, 87.251701] (16), [-8.41262, 87.251701] (16), 
length of domains: 7168
Total time: 1.8507	 pickout: 0.1881	 decision: 0.3188	 get_bound: 0.9346	 add_domain: 0.4091
Current lb:-9.222832679748535
14334 neurons visited
0 diving domains visited
Cumulative time: 17.655683279037476

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 80], [7, 80], [7, 80], [7, 27], [7, 27], [7, 80], [7, 9], [7, 9], [7, 9], [7, 9]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13938.1728515625 with beta sum per layer: [0.2767200469970703, 0.0, 0.0, 0.5563320517539978, 0.0, 81.43138885498047, 669.2534790039062, 4270.501953125]
optimal alpha/beta time: 0.43106889724731445
This batch time : update_bounds func: 1.2202	 prepare: 0.2468	 bound: 0.4314	 transfer: 0.0231	 finalize: 0.5158
Accumulated time: update_bounds func: 12.1200	 prepare: 1.8808	 bound: 7.1054	 transfer: 0.0231	 finalize: 2.8273
batch bounding time:  1.2221779823303223
Current worst splitting domains [lb, ub] (depth):
[-9.00715, 87.251701] (17), [-8.99118, 87.251701] (17), [-8.97784, 87.251701] (17), [-8.95424, 87.251701] (17), [-8.94618, 87.251701] (17), [-8.91706, 87.251701] (17), [-8.78364, 87.251701] (17), [-8.74929, 87.251701] (17), [-8.60822, 87.251701] (17), [-8.60690, 87.251701] (17), [-8.59601, 87.251701] (17), [-8.59333, 87.251701] (17), [-8.58022, 87.251701] (17), [-8.57927, 87.251701] (17), [-8.57466, 87.251701] (17), [-8.53098, 87.251701] (17), [-8.51431, 87.251701] (17), [-8.51092, 87.251701] (17), [-8.46790, 87.251701] (17), [-8.41816, 87.251701] (17), 
length of domains: 8192
Total time: 1.6547	 pickout: 0.1909	 decision: 0.0991	 get_bound: 1.2251	 add_domain: 0.1396
Current lb:-9.007150650024414
16382 neurons visited
0 diving domains visited
Cumulative time: 19.34317183494568

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 27], [7, 27], [7, 27], [7, 27], [7, 27], [7, 9], [7, 9], [7, 9], [7, 90], [7, 90]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13991.8115234375 with beta sum per layer: [0.19652605056762695, 0.0, 0.0, 0.535442054271698, 0.0, 43.46070861816406, 693.6911010742188, 4405.94873046875]
optimal alpha/beta time: 0.4318094253540039
This batch time : update_bounds func: 1.2448	 prepare: 0.2509	 bound: 0.4322	 transfer: 0.0231	 finalize: 0.2304
Accumulated time: update_bounds func: 13.3648	 prepare: 2.1317	 bound: 7.5377	 transfer: 0.0231	 finalize: 3.0577
batch bounding time:  1.2466294765472412
Current worst splitting domains [lb, ub] (depth):
[-8.90137, 87.251701] (18), [-8.87909, 87.251701] (18), [-8.87837, 87.251701] (18), [-8.84960, 87.251701] (18), [-8.84261, 87.251701] (18), [-8.76780, 87.251701] (18), [-8.64011, 87.251701] (18), [-8.60512, 87.251701] (18), [-8.53706, 87.251701] (18), [-8.53382, 87.251701] (18), [-8.52670, 87.251701] (18), [-8.51635, 87.251701] (18), [-8.49849, 87.251701] (18), [-8.49067, 87.251701] (18), [-8.44787, 87.251701] (18), [-8.44221, 87.251701] (18), [-8.43111, 87.251701] (18), [-8.42397, 87.251701] (18), [-8.37347, 87.251701] (18), [-8.37126, 87.251701] (18), 
length of domains: 9216
Total time: 1.6842	 pickout: 0.1911	 decision: 0.0991	 get_bound: 1.2495	 add_domain: 0.1444
Current lb:-8.901374816894531
18430 neurons visited
0 diving domains visited
Cumulative time: 21.06136131286621

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 9], [7, 9], [7, 9], [7, 9], [7, 9], [7, 27], [7, 90], [6, 96], [7, 32], [7, 32]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 13981.5439453125 with beta sum per layer: [0.15766866505146027, 0.0, 0.0, 0.0, 0.0, 74.42318725585938, 598.5765380859375, 4575.9501953125]
optimal alpha/beta time: 0.4279141426086426
This batch time : update_bounds func: 0.9391	 prepare: 0.2516	 bound: 0.4283	 transfer: 0.0225	 finalize: 0.2337
Accumulated time: update_bounds func: 14.3039	 prepare: 2.3833	 bound: 7.9659	 transfer: 0.0225	 finalize: 3.2913
batch bounding time:  0.941098690032959
Current worst splitting domains [lb, ub] (depth):
[-8.75304, 87.251701] (19), [-8.72931, 87.251701] (19), [-8.72766, 87.251701] (19), [-8.70487, 87.251701] (19), [-8.69175, 87.251701] (19), [-8.66630, 87.251701] (19), [-8.58584, 87.251701] (19), [-8.58429, 87.251701] (19), [-8.56843, 87.251701] (19), [-8.56615, 87.251701] (19), [-8.56029, 87.251701] (19), [-8.55171, 87.251701] (19), [-8.51814, 87.251701] (19), [-8.44863, 87.251701] (19), [-8.43123, 87.251701] (19), [-8.41209, 87.251701] (19), [-8.41183, 87.251701] (19), [-8.37663, 87.251701] (19), [-8.37658, 87.251701] (19), [-8.37444, 87.251701] (19), 
length of domains: 10240
Total time: 1.7523	 pickout: 0.1913	 decision: 0.4661	 get_bound: 0.9444	 add_domain: 0.1505
Current lb:-8.753035545349121
20478 neurons visited
0 diving domains visited
Cumulative time: 22.848809003829956

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 90], [0, 60], [7, 90], [0, 60], [6, 96], [0, 60], [7, 67], [7, 67], [7, 67], [7, 32]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 14043.232421875 with beta sum per layer: [0.4535488486289978, 0.0, 0.0, 2.7682044506073, 0.0, 48.77004623413086, 481.5265808105469, 4903.0146484375]
optimal alpha/beta time: 0.4293549060821533
This batch time : update_bounds func: 0.9364	 prepare: 0.2504	 bound: 0.4297	 transfer: 0.0225	 finalize: 0.2306
Accumulated time: update_bounds func: 15.2403	 prepare: 2.6338	 bound: 8.3956	 transfer: 0.0225	 finalize: 3.5220
batch bounding time:  0.9382462501525879
Current worst splitting domains [lb, ub] (depth):
[-8.67974, 87.251701] (20), [-8.65114, 87.251701] (20), [-8.63868, 87.251701] (20), [-8.58091, 87.251701] (20), [-8.55772, 87.251701] (20), [-8.50735, 87.251701] (20), [-8.48515, 87.251701] (20), [-8.46622, 87.251701] (20), [-8.44378, 87.251701] (20), [-8.40951, 87.251701] (20), [-8.40407, 87.251701] (20), [-8.40336, 87.251701] (20), [-8.39259, 87.251701] (20), [-8.38620, 87.251701] (20), [-8.38314, 87.251701] (20), [-8.37967, 87.251701] (20), [-8.36781, 87.251701] (20), [-8.36430, 87.251701] (20), [-8.35932, 87.251701] (20), [-8.35775, 87.251701] (20), 
length of domains: 11264
Total time: 1.8185	 pickout: 0.2046	 decision: 0.5156	 get_bound: 0.9412	 add_domain: 0.1571
Current lb:-8.679740905761719
22526 neurons visited
0 diving domains visited
Cumulative time: 24.70393395423889

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 32], [7, 32], [0, 60], [7, 90], [7, 90], [7, 90], [7, 90], [7, 90], [0, 60], [7, 90]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 14101.7255859375 with beta sum per layer: [0.3663291037082672, 0.0, 0.0, 7.735416889190674, 0.0, 19.870019912719727, 383.99151611328125, 5104.38818359375]
optimal alpha/beta time: 0.43448877334594727
This batch time : update_bounds func: 0.9455	 prepare: 0.2539	 bound: 0.4349	 transfer: 0.0228	 finalize: 0.2305
Accumulated time: update_bounds func: 16.1857	 prepare: 2.8877	 bound: 8.8305	 transfer: 0.0228	 finalize: 3.7525
batch bounding time:  0.9473385810852051
Current worst splitting domains [lb, ub] (depth):
[-8.55885, 87.251701] (21), [-8.53109, 87.251701] (21), [-8.50214, 87.251701] (21), [-8.48639, 87.251701] (21), [-8.48420, 87.251701] (21), [-8.43305, 87.251701] (21), [-8.40123, 87.251701] (21), [-8.39162, 87.251701] (21), [-8.38844, 87.251701] (21), [-8.36823, 87.251701] (21), [-8.33429, 87.251701] (21), [-8.32793, 87.251701] (21), [-8.32631, 87.251701] (21), [-8.30806, 87.251701] (21), [-8.30410, 87.251701] (21), [-8.30388, 87.251701] (21), [-8.29751, 87.251701] (21), [-8.28459, 87.251701] (21), [-8.26954, 87.251701] (21), [-8.26756, 87.251701] (21), 
length of domains: 12288
Total time: 1.8624	 pickout: 0.1992	 decision: 0.5507	 get_bound: 0.9503	 add_domain: 0.1623
Current lb:-8.558845520019531
24574 neurons visited
0 diving domains visited
Cumulative time: 26.603927850723267

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 60], [7, 67], [7, 32], [7, 90], [7, 32], [7, 32], [7, 32], [7, 90], [7, 32], [7, 76]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 14176.169921875 with beta sum per layer: [0.2984447777271271, 0.0, 0.0, 18.30231285095215, 0.0, 22.959617614746094, 275.4717712402344, 5158.513671875]
optimal alpha/beta time: 0.42890477180480957
This batch time : update_bounds func: 0.9416	 prepare: 0.2559	 bound: 0.4293	 transfer: 0.0224	 finalize: 0.2309
Accumulated time: update_bounds func: 17.1273	 prepare: 3.1436	 bound: 9.2598	 transfer: 0.0224	 finalize: 3.9835
batch bounding time:  0.9434568881988525
Current worst splitting domains [lb, ub] (depth):
[-8.41838, 87.251701] (22), [-8.40256, 87.251701] (22), [-8.37195, 87.251701] (22), [-8.35923, 87.251701] (22), [-8.34371, 87.251701] (22), [-8.32938, 87.251701] (22), [-8.32006, 87.251701] (22), [-8.30337, 87.251701] (22), [-8.30332, 87.251701] (22), [-8.26864, 87.251701] (22), [-8.26229, 87.251701] (22), [-8.25010, 87.251701] (22), [-8.20845, 87.251701] (22), [-8.20197, 87.251701] (22), [-8.19709, 87.251701] (22), [-8.16685, 87.251701] (22), [-8.16534, 87.251701] (22), [-8.16363, 87.251701] (22), [-8.15713, 87.251701] (22), [-8.14859, 87.251701] (22), 
length of domains: 13312
Total time: 1.9283	 pickout: 0.2025	 decision: 0.6173	 get_bound: 0.9464	 add_domain: 0.1622
Current lb:-8.418384552001953
26622 neurons visited
0 diving domains visited
Time out!!!!!!!!
Image 759 pidx 3 verify end, final lower bound -8.418384552001953, upper bound 87.25170135498047, time: 28.97448992729187
759 -8.418384552001953
[[  759.             0.             0.            11.41671085
      0.            -1.                    inf            inf]
 [  759.             0.             0.           261.81589675
      0.            -2.                    inf            inf]
 [  759.            -8.41838455 26622.            28.97448993
      0.             3.            87.25170135            inf]]
final verified acc: 0.0%[1]
Total verification count: 1 total verified: 0
mean time [cnt:1] (excluding attack success): 302.207097530365
