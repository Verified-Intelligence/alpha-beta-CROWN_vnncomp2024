Experiments at Tue Nov  2 00:45:15 2021 on huan-Super-Server
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=47_end=48_iter=20_b=1024_int-beta=False_timeout=300_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  2  correct label  2 logits tensor([-0.4443,  0.6646,  5.9675, -0.2164,  0.1901, -1.3073,  3.8596, -1.4856,
        -1.0441, -5.0747], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-0.4443,  0.6646,  5.9675, -0.2164,  0.1901, -1.3073,  3.8596, -1.4856,
         -1.0441, -5.0747]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-126.5653, -138.4214, -139.0622, -159.7670, -161.3149, -154.6493,
         -158.5627, -167.5053, -187.2193]], device='cuda:0') None
best_l after optimization: 670.931640625 with beta sum per layer: []
optimal alpha/beta time: 12.53966212272644
initial alpha-CROWN bounds: tensor([[-51.5406, -62.4372, -76.2177, -74.1491, -79.8253, -63.3479, -83.1467,
         -84.4436, -95.8235]], device='cuda:0', grad_fn=<AsStridedBackward>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 229.74081764221194]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_66', 'lay4_85', 'lay4_76', 'lay4_36', 'lay4_94', 'lay4_41', 'lay4_30', 'lay4_4', 'lay4_12', 'lay4_87', 'lay4_96', 'lay4_13', 'lay4_88', 'lay4_59', 'lay4_33', 'lay4_42', 'lay4_11', 'lay4_24', 'lay4_20', 'lay4_39', 'lay4_49', 'lay4_67', 'lay4_44', 'lay4_25', 'lay4_52', 'lay4_80', 'lay4_45', 'lay4_34', 'lay4_18', 'lay4_0', 'lay4_1', 'lay4_51', 'lay4_69', 'lay4_26', 'lay4_10', 'lay4_97', 'lay4_21', 'lay4_57', 'lay4_86', 'lay4_55', 'lay4_79', 'lay4_99', 'lay4_75', 'lay4_74', 'lay4_23', 'lay4_43', 'lay4_9', 'lay4_72'] filter: 1.0
/home/shiqi/CROWN-GENERAL/complete_verifier/utils.py:412: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_33, [-2.4177441596984863,0.12141972780227661]=>[-2.4177441596984863,-1e-05] (-1,-1; 15,-1), time: 0.4039s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_88, [-1.644611120223999,0.16635388135910034]=>[-1.644611120223999,-1e-05] (-1,-1; 15,-1), time: 0.4597s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_87, [-1.1304762363433838,0.2679448425769806]=>[-1.1304762363433838,-0.0007349859870760464] (-1,-1; 2,-1), time: 0.9830s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_59, [-1.4421501159667969,0.3392406702041626]=>[-1.4421501159667969,-1e-05] (-1,-1; 15,-1), time: 1.0048s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_20, [-1.4727003574371338,0.17768004536628723]=>[-1.4727003574371338,-1e-05] (-1,-1; 15,-1), time: 0.5576s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_24, [-0.3681985139846802,1.3286855220794678]=>[1e-05,1.3286855220794678] (15,-1; -1,-1), time: 1.2303s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_66, [-0.7601873874664307,1.0457653999328613]=>[-0.38218023306908994,0.6410019507108943] (2,-1; 2,-1), time: 3.3201s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_49, [-0.5126650333404541,1.8377364873886108]=>[1e-05,1.8377364873886108] (15,-1; -1,-1), time: 1.9218s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_11, [-1.6726572513580322,0.47066769003868103]=>[-1.1123658312857836,0.14273756966211634] (2,-1; 2,-1), time: 3.2206s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_44, [-1.4609646797180176,0.1451089084148407]=>[-1.4609646797180176,-1e-05] (-1,-1; 15,-1), time: 0.3983s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_25, [-1.2931878566741943,0.19307199120521545]=>[-1.2931878566741943,-1e-05] (-1,-1; 15,-1), time: 0.5058s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_41, [-0.9014787673950195,1.0417070388793945]=>[-0.5985123772313905,0.5222812699039309] (2,-1; 2,-1), time: 4.0128s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_39, [-0.678865909576416,1.507387399673462]=>[-0.24542517481539325,1.06455641803022] (2,-1; 2,-1), time: 3.5534s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_96, [-1.4517213106155396,0.6032747626304626]=>[-1.1504447618826599,0.10099901162596181] (2,-1; 2,-1), time: 4.6072s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_85, [-1.6396675109863281,0.7360439300537109]=>[-1.0085567259714967,0.27153728839141805] (2,-1; 2,-1), time: 4.6487s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_34, [-1.2700937986373901,0.25517648458480835]=>[-1.2700937986373901,-1e-05] (-1,-1; 15,-1), time: 0.7317s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_13, [-1.8589515686035156,0.6227682828903198]=>[-1.1430289396836784,0.234393832680092] (2,-1; 2,-1), time: 4.8045s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_51, [-1.6010057926177979,0.03714171051979065]=>[-1.6010057926177979,-1e-05] (-1,-1; 15,-1), time: 0.2768s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_76, [-0.6492297649383545,0.762923002243042]=>[-0.43015336283765204,0.33528395026972263] (2,-1; 2,-1), time: 5.0812s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_94, [-1.5914785861968994,0.8482124209403992]=>[-0.9224672084041787,0.2852677167865679] (2,-1; 2,-1), time: 5.2099s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_4, [-0.7901495695114136,1.0635679960250854]=>[-0.2791973977259198,0.7919037676377674] (2,-1; 2,-1), time: 5.2922s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_10, [-2.080024003982544,0.06450200080871582]=>[-2.080024003982544,-1e-05] (-1,-1; 15,-1), time: 0.3834s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_21, [-1.9511590003967285,0.12307202816009521]=>[-1.9511590003967285,-1e-05] (-1,-1; 15,-1), time: 0.2864s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_67, [-1.257200002670288,0.5942564010620117]=>[-0.8202168678593242,0.23191111022637373] (2,-1; 2,-1), time: 3.9729s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_12, [-1.5107612609863281,0.2762693166732788]=>[-0.9770486316605479,0.03209321389295966] (2,-1; 2,-1), time: 5.6997s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_30, [-0.8789747357368469,0.7660237550735474]=>[-0.635059246167061,0.2138041345507531] (2,-1; 2,-1), time: 5.8646s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_86, [-0.07932940125465393,1.600020170211792]=>[1e-05,1.600020170211792] (15,-1; -1,-1), time: 0.3474s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_42, [-0.8941150307655334,1.0886719226837158]=>[-0.46043286549060175,0.5807133476288424] (2,-1; 2,-1), time: 5.9612s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_36, [-1.115098237991333,0.7300691604614258]=>[-0.661252486984563,0.3081301958189106] (2,-1; 2,-1), time: 5.9749s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_79, [-0.21157622337341309,2.0897388458251953]=>[1e-05,2.0897388458251953] (15,-1; -1,-1), time: 0.4022s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_45, [-1.227637529373169,1.6574698686599731]=>[-0.7522442565338732,1.146683875447848] (2,-1; 2,-1), time: 2.1727s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_99, [-0.10469198226928711,1.5476514101028442]=>[1e-05,1.5476514101028442] (15,-1; -1,-1), time: 0.3752s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_55, [-0.31830912828445435,1.5529279708862305]=>[1e-05,1.5529279708862305] (15,-1; -1,-1), time: 0.5818s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_43, [-1.9251407384872437,0.006379604339599609]=>[-1.9251407384872437,-1e-05] (-1,-1; 15,-1), time: 0.3802s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_80, [-1.3701528310775757,0.6448068022727966]=>[-0.9929239519770148,0.2582445652367273] (2,-1; 2,-1), time: 2.9083s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_52, [-0.7019501328468323,0.8707003593444824]=>[-0.3922065125479556,0.480869762445171] (2,-1; 2,-1), time: 3.3261s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_72, [-1.8646517992019653,0.3281276822090149]=>[-1.8646517992019653,-1e-05] (-1,-1; 15,-1), time: 0.8928s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_18, [-0.7343424558639526,0.8637142777442932]=>[-0.37448836947747133,0.548033401689817] (2,-1; 2,-1), time: 3.5002s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_26, [-0.49448269605636597,1.1250723600387573]=>[-0.09106814284034763,0.8359523236780046] (2,-1; 2,-1), time: 3.3729s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_0, [-1.0688040256500244,1.8175311088562012]=>[-0.3470241147462581,1.3165468620761676] (2,-1; 2,-1), time: 4.3299s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_23, [-1.126013994216919,0.9801471829414368]=>[-0.6665682974218236,0.5573312385937803] (2,-1; 2,-1), time: 3.0677s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_74, [-1.2542009353637695,0.4025935232639313]=>[-0.8726780010750971,0.1306476617301519] (2,-1; 2,-1), time: 3.1379s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_9, [-1.0499855279922485,0.4812650680541992]=>[-0.7089985458078034,0.15596944227065404] (2,-1; 2,-1), time: 2.9555s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_75, [-0.8964142799377441,0.7981374263763428]=>[-0.6268065445940806,0.38685015970262704] (2,-1; 2,-1), time: 3.4194s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_1, [-1.3127301931381226,0.31456366181373596]=>[-0.8895162231318463,0.0013157333073131358] (2,-1; 2,-1), time: 5.0734s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_69, [-1.0864803791046143,0.7598686218261719]=>[-0.5313514197571282,0.4556778420074312] (2,-1; 2,-1), time: 5.5012s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_97, [-0.5851525068283081,0.7786620855331421]=>[-0.1829053583674176,0.5362627000660685] (2,-1; 2,-1), time: 5.5024s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_57, [-0.442607581615448,1.410409927368164]=>[1e-05,1.410409927368164] (15,-1; -1,-1), time: 5.2578s, #vars: 1081, #constrs: 344, improved: True
MIP improved 48 nodes out of 48 unstable nodes, lb improved 14.341209411621094, ub improved 13.311212539672852, time 11.0634
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_21', 'lay6_42', 'lay6_73', 'lay6_99', 'lay6_37', 'lay6_61', 'lay6_34', 'lay6_87', 'lay6_68', 'lay6_5', 'lay6_86', 'lay6_57', 'lay6_83', 'lay6_93', 'lay6_1', 'lay6_50', 'lay6_92', 'lay6_33', 'lay6_19', 'lay6_69', 'lay6_54', 'lay6_31', 'lay6_49', 'lay6_2', 'lay6_53', 'lay6_46', 'lay6_47', 'lay6_9', 'lay6_81', 'lay6_8', 'lay6_16', 'lay6_6', 'lay6_11', 'lay6_64', 'lay6_14', 'lay6_82', 'lay6_22', 'lay6_45', 'lay6_74', 'lay6_67', 'lay6_79', 'lay6_4', 'lay6_80', 'lay6_27', 'lay6_29', 'lay6_94', 'lay6_60', 'lay6_7', 'lay6_32', 'lay6_18', 'lay6_13', 'lay6_77', 'lay6_62', 'lay6_66', 'lay6_58', 'lay6_85', 'lay6_75', 'lay6_51', 'lay6_10', 'lay6_71', 'lay6_38', 'lay6_35', 'lay6_65', 'lay6_72', 'lay6_84', 'lay6_24', 'lay6_12', 'lay6_0', 'lay6_88'] filter: 1.0
Solving MIP for lay6_83, [-1.7749779224395752,0.19932425022125244]=>[-1.7749779224395752,-1e-05] (-1,-1; 15,-1), time: 0.2332s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_57, [-2.220961093902588,0.2901298403739929]=>[-2.220961093902588,-1e-05] (-1,-1; 15,-1), time: 0.2353s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_1, [-3.9843056201934814,0.2702239751815796]=>[-3.9843056201934814,-1e-05] (-1,-1; 15,-1), time: 0.2486s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_86, [-1.827283501625061,0.30769097805023193]=>[-1.827283501625061,-1e-05] (-1,-1; 15,-1), time: 0.2522s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_68, [-2.162912368774414,0.1654464602470398]=>[-2.162912368774414,-1e-05] (-1,-1; 15,-1), time: 0.2536s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_50, [-1.848486304283142,0.3467385172843933]=>[-1.848486304283142,-1e-05] (-1,-1; 15,-1), time: 0.4050s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_99, [-1.4254651069641113,0.44622230529785156]=>[-1.4254651069641113,-1e-05] (-1,-1; 15,-1), time: 0.4448s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_42, [-1.302384614944458,0.4482017755508423]=>[-1.302384614944458,-1e-05] (-1,-1; 15,-1), time: 0.6283s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_54, [-1.4499008655548096,0.28433844447135925]=>[-1.4499008655548096,-1e-05] (-1,-1; 15,-1), time: 0.4052s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_2, [-2.0910868644714355,0.23820161819458008]=>[-2.0910868644714355,-1e-05] (-1,-1; 15,-1), time: 0.1949s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_69, [-1.6429214477539062,0.3666953146457672]=>[-1.6429214477539062,-1e-05] (-1,-1; 15,-1), time: 0.5802s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_34, [-2.1585283279418945,0.5435909032821655]=>[-2.1585283279418945,-1e-05] (-1,-1; 15,-1), time: 0.8588s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_49, [-1.6920158863067627,0.4860410690307617]=>[-1.6920158863067627,-1e-05] (-1,-1; 15,-1), time: 0.4217s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_53, [-0.17746388912200928,1.3191715478897095]=>[1e-05,1.3191715478897095] (15,-1; -1,-1), time: 0.2050s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_21, [-1.7786171436309814,0.8227121233940125]=>[-1.7786171436309814,-1e-05] (-1,-1; 15,-1), time: 0.9351s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_81, [-1.6712568998336792,0.0196380615234375]=>[-1.6712568998336792,-1e-05] (-1,-1; 15,-1), time: 0.2017s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_8, [-2.2237071990966797,0.08153146505355835]=>[-2.2237071990966797,-1e-05] (-1,-1; 15,-1), time: 0.2144s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_16, [-2.2448806762695312,0.34428417682647705]=>[-2.2448806762695312,-1e-05] (-1,-1; 15,-1), time: 0.2167s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_9, [-1.8429179191589355,0.4187355637550354]=>[-1.8429179191589355,-1e-05] (-1,-1; 15,-1), time: 0.3964s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_6, [-2.098144769668579,0.28446948528289795]=>[-2.098144769668579,-1e-05] (-1,-1; 15,-1), time: 0.1807s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_11, [-0.24748587608337402,1.4532363414764404]=>[1e-05,1.4532363414764404] (15,-1; -1,-1), time: 0.2172s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_64, [-1.851000189781189,0.12889277935028076]=>[-1.851000189781189,-1e-05] (-1,-1; 15,-1), time: 0.2020s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_45, [-1.8786792755126953,0.1784977912902832]=>[-1.8786792755126953,-1e-05] (-1,-1; 15,-1), time: 0.2171s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_82, [-1.828202724456787,0.3360857367515564]=>[-1.828202724456787,-1e-05] (-1,-1; 15,-1), time: 0.3238s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_14, [-1.511170744895935,0.29717034101486206]=>[-1.511170744895935,-1e-05] (-1,-1; 15,-1), time: 0.3290s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_22, [-1.6507689952850342,0.3941311836242676]=>[-1.6507689952850342,-1e-05] (-1,-1; 15,-1), time: 0.3666s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_67, [-0.2617496848106384,1.7133562564849854]=>[1e-05,1.7133562564849854] (15,-1; -1,-1), time: 0.1824s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_4, [-1.8827488422393799,0.15592968463897705]=>[-1.8827488422393799,-1e-05] (-1,-1; 15,-1), time: 0.2156s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_27, [-1.2389800548553467,0.10819560289382935]=>[-1.2389800548553467,-1e-05] (-1,-1; 15,-1), time: 0.2045s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_29, [-1.1044491529464722,0.2949589490890503]=>[-1.1044491529464722,-1e-05] (-1,-1; 15,-1), time: 0.3737s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_94, [-1.9485477209091187,0.03962814807891846]=>[-1.9485477209091187,-1e-05] (-1,-1; 15,-1), time: 0.1906s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_61, [-0.5717583894729614,1.5270814895629883]=>[1e-05,1.5270814895629883] (15,-1; -1,-1), time: 2.7911s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_79, [-1.1397647857666016,0.46322038769721985]=>[-1.1397647857666016,-1e-05] (-1,-1; 15,-1), time: 2.9006s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_37, [-1.650283694267273,0.6612369418144226]=>[-1.650283694267273,-1e-05] (-1,-1; 15,-1), time: 4.6813s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_32, [-0.4467528164386749,1.935960054397583]=>[1e-05,1.935960054397583] (15,-1; -1,-1), time: 0.6979s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_31, [-1.808004379272461,0.974073052406311]=>[-1.808004379272461,-1e-05] (-1,-1; 15,-1), time: 4.8307s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_93, [-1.6683322191238403,0.827782392501831]=>[-1.6683322191238403,-1e-05] (-1,-1; 15,-1), time: 5.5840s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_62, [-1.7314653396606445,0.17255616188049316]=>[-1.7314653396606445,-1e-05] (-1,-1; 15,-1), time: 0.1886s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_73, [-1.3691365718841553,0.7557568550109863]=>[-1.3691365718841553,-1e-05] (-1,-1; 15,-1), time: 6.0847s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_58, [-0.21790194511413574,1.12877357006073]=>[1e-05,1.12877357006073] (15,-1; -1,-1), time: 0.1841s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_85, [-2.5962448120117188,0.03835415840148926]=>[-2.5962448120117188,-1e-05] (-1,-1; 15,-1), time: 0.1891s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_74, [-0.5057671070098877,1.2939411401748657]=>[1e-05,1.2939411401748657] (15,-1; -1,-1), time: 6.3255s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_51, [-0.24160265922546387,3.0163419246673584]=>[1e-05,3.0163419246673584] (15,-1; -1,-1), time: 0.1926s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_92, [-1.4617103338241577,0.6814486980438232]=>[-1.4617103338241577,-1e-05] (-1,-1; 15,-1), time: 8.1168s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_10, [-1.6222798824310303,0.37289905548095703]=>[-1.6222798824310303,-1e-05] (-1,-1; 15,-1), time: 0.3870s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_5, [-1.235302209854126,1.180497407913208]=>[-0.38670053017408873,0.5995388116537802] (2,-1; 2,-1), time: 9.9831s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_66, [-0.6835601329803467,1.3631647825241089]=>[1e-05,1.3631647825241089] (15,-1; -1,-1), time: 4.5092s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_35, [-0.3363969326019287,1.3531293869018555]=>[1e-05,1.3531293869018555] (15,-1; -1,-1), time: 0.4816s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_65, [-0.20502376556396484,1.8939292430877686]=>[1e-05,1.8939292430877686] (15,-1; -1,-1), time: 0.1971s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_84, [-1.931195616722107,0.03114837408065796]=>[-1.931195616722107,-1e-05] (-1,-1; 15,-1), time: 0.1893s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_72, [-1.1323039531707764,0.3283937871456146]=>[-1.1323039531707764,-1e-05] (-1,-1; 15,-1), time: 0.3692s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_12, [-0.04983234405517578,2.9499435424804688]=>[1e-05,2.9499435424804688] (15,-1; -1,-1), time: 0.1888s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_0, [-2.207313060760498,0.4926493763923645]=>[-2.207313060760498,-1e-05] (-1,-1; 15,-1), time: 0.3434s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_88, [-2.1292097568511963,0.21604418754577637]=>[-2.1292097568511963,-1e-05] (-1,-1; 15,-1), time: 0.1894s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_47, [-1.4421502351760864,0.6963962316513062]=>[-0.7282850885526992,0.10257957509687171] (2,-1; 2,-1), time: 12.0975s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_18, [-1.1052459478378296,0.879702091217041]=>[-0.5302943767027796,0.2955807346825529] (2,-1; 2,-1), time: 8.5893s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_71, [-0.47781670093536377,1.0622007846832275]=>[1e-05,1.0622007846832275] (15,-1; -1,-1), time: 5.8866s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_60, [-0.7744898796081543,1.9740509986877441]=>[-0.1295337655588481,0.9566089380721229] (2,-1; 2,-1), time: 13.5308s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_75, [-1.7601325511932373,1.292642593383789]=>[-1.1535229012303936,0.2715426518306339] (2,-1; 2,-1), time: 10.5193s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_46, [-0.8236743807792664,1.1547842025756836]=>[-0.1636811515607819,0.6481248198765152] (2,-1; 2,-1), time: 16.1817s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_87, [-0.835641622543335,0.7939022779464722]=>[-0.287632065202393,0.23596205109654653] (2,-1; 2,-1), time: 18.5249s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_33, [-0.776069164276123,1.120232343673706]=>[-0.18656890326340486,0.519811159061614] (9,-1; 2,-1), time: 18.3808s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_24, [-1.195582389831543,1.4851529598236084]=>[-0.5031399654456424,0.6342238497438042] (2,-1; 2,-1), time: 8.1062s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_38, [-1.7547595500946045,0.8014573454856873]=>[-0.9036921650389921,0.11961637242869295] (2,-1; 2,-1), time: 12.2650s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_80, [-1.3026312589645386,1.4885700941085815]=>[-0.7256232059283042,0.5713555388806187] (2,-1; 9,-1), time: 19.2540s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_7, [-1.1334093809127808,0.8160433173179626]=>[-0.4701371790145929,0.2701571353797997] (2,-1; 9,-1), time: 18.2380s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_77, [-0.9510557651519775,1.2184792757034302]=>[-0.2016300791610707,0.6820732695449884] (9,-1; 2,-1), time: 18.4198s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_19, [-1.0499255657196045,0.47361403703689575]=>[-0.5531500802639188,0.023046001773490074] (9,-1; 9,-1), time: 30.0079s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_13, [-1.3913788795471191,0.868701696395874]=>[-0.8300643777604565,0.07901150509785214] (2,-1; 9,-1), time: 27.7600s, #vars: 1237, #constrs: 528, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 69.01300811767578 with beta sum per layer: []
optimal alpha/beta time: 13.327691555023193
alpha-CROWN with intermediate bounds by MIP: tensor([[ -6.0482,  -5.6697,  -7.1054,  -6.8710,  -8.5884, -10.4706,  -6.4772,
          -9.9812,  -7.8014]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 69 nodes out of 69 unstable nodes, lb improved 14.201033592224121, ub improved 24.548675537109375, time 33.3364
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_67', 'lay8_5', 'lay8_39', 'lay8_98', 'lay8_97', 'lay8_58', 'lay8_55', 'lay8_82', 'lay8_49', 'lay8_83', 'lay8_80', 'lay8_12', 'lay8_42', 'lay8_9', 'lay8_78', 'lay8_3', 'lay8_13', 'lay8_47', 'lay8_86', 'lay8_1', 'lay8_89', 'lay8_99', 'lay8_76', 'lay8_31', 'lay8_25', 'lay8_29', 'lay8_87', 'lay8_74', 'lay8_85', 'lay8_73', 'lay8_54', 'lay8_56', 'lay8_18', 'lay8_28', 'lay8_26', 'lay8_38', 'lay8_16', 'lay8_4', 'lay8_71', 'lay8_79', 'lay8_66', 'lay8_94', 'lay8_15', 'lay8_77', 'lay8_27', 'lay8_30', 'lay8_35', 'lay8_61', 'lay8_70', 'lay8_20', 'lay8_14', 'lay8_11', 'lay8_50', 'lay8_48', 'lay8_17', 'lay8_40', 'lay8_90', 'lay8_68', 'lay8_75', 'lay8_43', 'lay8_2', 'lay8_96', 'lay8_0', 'lay8_60', 'lay8_64', 'lay8_57', 'lay8_93', 'lay8_34', 'lay8_65', 'lay8_32', 'lay8_22', 'lay8_59', 'lay8_62', 'lay8_10', 'lay8_84', 'lay8_6', 'lay8_8', 'lay8_33', 'lay8_63', 'lay8_41', 'lay8_88', 'lay8_72', 'lay8_69', 'lay8_44', 'lay8_51', 'lay8_46'] filter: 1.0
Solving MIP for lay8_98, [-1.588050127029419,0.8383520841598511]=>[-1.588050127029419,-1e-05] (-1,-1; 15,-1), time: 0.2250s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_78, [-2.3736722469329834,0.5214375853538513]=>[-2.3736722469329834,-1e-05] (-1,-1; 15,-1), time: 0.2320s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_9, [-2.357529401779175,0.5544135570526123]=>[-2.357529401779175,-1e-05] (-1,-1; 15,-1), time: 0.2324s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_42, [-1.9051058292388916,0.8749898076057434]=>[-1.9051058292388916,-1e-05] (-1,-1; 15,-1), time: 0.2378s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_83, [-2.330256462097168,0.48476654291152954]=>[-2.330256462097168,-1e-05] (-1,-1; 15,-1), time: 0.2392s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_12, [-1.92724609375,0.879461407661438]=>[-1.92724609375,-1e-05] (-1,-1; 15,-1), time: 0.2407s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_49, [-1.8801602125167847,0.9546961784362793]=>[-1.8801602125167847,-1e-05] (-1,-1; 15,-1), time: 0.2423s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_58, [-2.559098958969116,1.3754349946975708]=>[-2.559098958969116,-1e-05] (-1,-1; 15,-1), time: 0.2445s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_3, [-2.0869178771972656,0.18348729610443115]=>[-2.0869178771972656,-1e-05] (-1,-1; 15,-1), time: 0.2719s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_97, [-2.8051140308380127,0.5904802083969116]=>[-2.8051140308380127,-1e-05] (-1,-1; 15,-1), time: 0.2734s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_55, [-0.8728371858596802,1.667189598083496]=>[1e-05,1.667189598083496] (15,-1; -1,-1), time: 0.4198s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_89, [-2.51931095123291,0.5152790546417236]=>[-2.51931095123291,-1e-05] (-1,-1; 15,-1), time: 0.2188s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_76, [-0.48445677757263184,1.5862071514129639]=>[1e-05,1.5862071514129639] (15,-1; -1,-1), time: 0.2180s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_47, [-1.5977174043655396,0.5539348125457764]=>[-1.5977174043655396,-1e-05] (-1,-1; 15,-1), time: 0.2334s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_86, [-2.0572550296783447,0.3673210144042969]=>[-2.0572550296783447,-1e-05] (-1,-1; 15,-1), time: 0.2384s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_31, [-1.8095262050628662,0.5866860151290894]=>[-1.8095262050628662,-1e-05] (-1,-1; 15,-1), time: 0.2280s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_99, [-2.1784071922302246,0.7049287557601929]=>[-2.1784071922302246,-1e-05] (-1,-1; 15,-1), time: 0.2351s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_1, [-1.654365062713623,0.6149158477783203]=>[-1.654365062713623,-1e-05] (-1,-1; 15,-1), time: 0.2451s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_25, [-2.491476535797119,0.31157708168029785]=>[-2.491476535797119,-1e-05] (-1,-1; 15,-1), time: 0.2114s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_29, [-3.373176097869873,0.3456536531448364]=>[-3.373176097869873,-1e-05] (-1,-1; 15,-1), time: 0.2154s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_87, [-2.732788562774658,0.42402493953704834]=>[-2.732788562774658,-1e-05] (-1,-1; 15,-1), time: 0.2143s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_74, [-2.638789176940918,0.3476003408432007]=>[-2.638789176940918,-1e-05] (-1,-1; 15,-1), time: 0.2049s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_85, [-2.508986473083496,0.3969508409500122]=>[-2.508986473083496,-1e-05] (-1,-1; 15,-1), time: 0.2033s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_26, [-1.9828749895095825,0.37518465518951416]=>[-1.9828749895095825,-1e-05] (-1,-1; 15,-1), time: 0.1847s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_67, [-2.0408403873443604,1.430443525314331]=>[-2.0408403873443604,-1e-05] (-1,-1; 15,-1), time: 0.6794s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_56, [-2.7955050468444824,0.6505638360977173]=>[-2.7955050468444824,-1e-05] (-1,-1; 15,-1), time: 0.2043s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_73, [-2.0546884536743164,0.43861234188079834]=>[-2.0546884536743164,-1e-05] (-1,-1; 15,-1), time: 0.2160s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_18, [-2.1157426834106445,0.5876946449279785]=>[-2.1157426834106445,-1e-05] (-1,-1; 15,-1), time: 0.2272s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_28, [-2.85312557220459,0.4076770544052124]=>[-2.85312557220459,-1e-05] (-1,-1; 15,-1), time: 0.2256s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_16, [-3.1700551509857178,0.04670131206512451]=>[-3.1700551509857178,-1e-05] (-1,-1; 15,-1), time: 0.1977s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_79, [-3.6268057823181152,0.1345576047897339]=>[-3.6268057823181152,-1e-05] (-1,-1; 15,-1), time: 0.1669s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_71, [-1.4033653736114502,3.2317490577697754]=>[1e-05,3.2317490577697754] (15,-1; -1,-1), time: 0.2026s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_94, [-2.5903544425964355,0.2743340730667114]=>[-2.5903544425964355,-1e-05] (-1,-1; 15,-1), time: 0.1992s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_66, [-0.6743917465209961,1.248214602470398]=>[1e-05,1.248214602470398] (15,-1; -1,-1), time: 0.2057s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_15, [-2.8964834213256836,0.20595192909240723]=>[-2.8964834213256836,-1e-05] (-1,-1; 15,-1), time: 0.1993s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_77, [-3.1808688640594482,0.3905942440032959]=>[-3.1808688640594482,-1e-05] (-1,-1; 15,-1), time: 0.2208s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_61, [-2.530062675476074,0.25419020652770996]=>[-2.530062675476074,-1e-05] (-1,-1; 15,-1), time: 0.2089s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_11, [-2.6647119522094727,0.16941165924072266]=>[-2.6647119522094727,-1e-05] (-1,-1; 15,-1), time: 0.2282s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_35, [-1.4736474752426147,0.8225660920143127]=>[-1.4736474752426147,-1e-05] (-1,-1; 15,-1), time: 0.3254s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_30, [-1.99718177318573,0.6456983685493469]=>[-1.99718177318573,-1e-05] (-1,-1; 15,-1), time: 0.3898s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_50, [-2.0552823543548584,0.394237220287323]=>[-2.0552823543548584,-1e-05] (-1,-1; 15,-1), time: 0.1947s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_14, [-2.3737096786499023,1.485072135925293]=>[-2.3737096786499023,-1e-05] (-1,-1; 15,-1), time: 0.4124s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_20, [-0.923814058303833,1.6258327960968018]=>[1e-05,1.6258327960968018] (15,-1; -1,-1), time: 0.4215s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_70, [-1.7452110052108765,0.6917885541915894]=>[-1.7452110052108765,-1e-05] (-1,-1; 15,-1), time: 0.4337s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_17, [-2.5282437801361084,0.18683350086212158]=>[-2.5282437801361084,-1e-05] (-1,-1; 15,-1), time: 0.1792s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_48, [-2.516021728515625,0.6847826242446899]=>[-2.516021728515625,-1e-05] (-1,-1; 15,-1), time: 0.2250s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_40, [-0.6701957583427429,2.114194869995117]=>[1e-05,2.114194869995117] (15,-1; -1,-1), time: 0.2047s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_68, [-1.7362008094787598,0.42034077644348145]=>[-1.7362008094787598,-1e-05] (-1,-1; 15,-1), time: 0.1764s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_60, [-0.4554339647293091,2.247424602508545]=>[1e-05,2.247424602508545] (15,-1; -1,-1), time: 0.1736s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_2, [-1.5407477617263794,0.7165209054946899]=>[-1.5407477617263794,-1e-05] (-1,-1; 15,-1), time: 0.5049s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_57, [-2.27852463722229,0.38795071840286255]=>[-2.27852463722229,-1e-05] (-1,-1; 15,-1), time: 0.1921s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_75, [-1.0189498662948608,1.5114978551864624]=>[1e-05,1.5114978551864624] (15,-1; -1,-1), time: 0.9123s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_93, [-0.21147692203521729,2.3991823196411133]=>[1e-05,2.3991823196411133] (15,-1; -1,-1), time: 0.1688s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_65, [-1.0116900205612183,1.5556304454803467]=>[1e-05,1.5556304454803467] (15,-1; -1,-1), time: 0.3543s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_32, [-2.3169479370117188,0.9779788255691528]=>[-2.3169479370117188,-1e-05] (-1,-1; 15,-1), time: 0.1664s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_22, [-0.5848835706710815,2.3805952072143555]=>[1e-05,2.3805952072143555] (15,-1; -1,-1), time: 0.1683s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_82, [-1.613013505935669,0.9227815866470337]=>[-1.613013505935669,-1e-05] (-1,-1; 15,-1), time: 5.6880s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_27, [-0.9324894547462463,1.742780327796936]=>[1e-05,1.742780327796936] (15,-1; -1,-1), time: 11.1095s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_10, [-2.7303194999694824,0.0705406665802002]=>[-2.7303194999694824,-1e-05] (-1,-1; 15,-1), time: 0.1830s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_84, [-1.5849370956420898,0.46770209074020386]=>[-1.5849370956420898,-1e-05] (-1,-1; 15,-1), time: 0.1816s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_6, [-0.22952568531036377,2.9908595085144043]=>[1e-05,2.9908595085144043] (15,-1; -1,-1), time: 0.1838s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_96, [-0.9376617074012756,1.555313229560852]=>[-0.08853012506716665,0.48575730706054004] (2,-1; 2,-1), time: 14.5145s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_33, [-0.5109779834747314,2.186685085296631]=>[1e-05,2.186685085296631] (15,-1; -1,-1), time: 0.1731s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_63, [-0.2375195026397705,3.5576682090759277]=>[1e-05,3.5576682090759277] (15,-1; -1,-1), time: 0.1732s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_41, [-0.5026088953018188,2.137601375579834]=>[1e-05,2.137601375579834] (15,-1; -1,-1), time: 0.1766s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_88, [-0.49150145053863525,2.8898470401763916]=>[1e-05,2.8898470401763916] (15,-1; -1,-1), time: 0.1769s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_72, [-1.8021796941757202,0.6761622428894043]=>[-1.8021796941757202,-1e-05] (-1,-1; 15,-1), time: 0.1780s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_69, [-1.6113271713256836,0.9796373248100281]=>[-1.6113271713256836,-1e-05] (-1,-1; 15,-1), time: 0.1779s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_44, [-0.22646617889404297,2.563683032989502]=>[1e-05,2.563683032989502] (15,-1; -1,-1), time: 0.1732s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_51, [-2.0775856971740723,0.013319075107574463]=>[-2.0775856971740723,-1e-05] (-1,-1; 15,-1), time: 0.1802s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_46, [-2.352449893951416,0.26334524154663086]=>[-2.352449893951416,-1e-05] (-1,-1; 15,-1), time: 0.1808s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_4, [-1.5055583715438843,1.202576994895935]=>[-0.6104557211797882,0.11139043252781308] (2,-1; 9,-1), time: 18.6138s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_43, [-1.2990248203277588,1.261390209197998]=>[-0.39743069040740525,0.28884742102694677] (2,-1; 9,-1), time: 18.9611s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_54, [-1.1274006366729736,1.3299990892410278]=>[-0.47850524051726456,0.28735090732237717] (2,-1; 9,-1), time: 20.3085s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_13, [-0.7517822980880737,1.3615288734436035]=>[-0.12504005318495504,0.3100250264594723] (9,-1; 2,-1), time: 24.3098s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_59, [-1.5430881977081299,2.0982792377471924]=>[-0.17946168113153238,0.7628227828542602] (2,-1; 9,-1), time: 22.0727s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_39, [-1.5599479675292969,1.4104321002960205]=>[-0.27693587980391443,0.5460314729324444] (9,-1; 2,-1), time: 26.6757s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_5, [-1.178935170173645,1.0018291473388672]=>[-0.2549156350797882,0.2513539197675109] (9,-1; 2,-1), time: 28.1764s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_62, [-1.4936407804489136,1.1335902214050293]=>[-0.5492860449239,0.07750102037673869] (2,-1; 9,-1), time: 23.6589s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_80, [-1.2264713048934937,1.1345396041870117]=>[-0.42528908887963335,0.09464629699992005] (9,-1; 9,-1), time: 30.0135s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_38, [-0.8590790629386902,1.7669153213500977]=>[-0.012204206234952344,0.5769791328116771] (9,-1; 9,-1), time: 30.0096s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_90, [-0.8824033737182617,1.507515549659729]=>[-0.18336646321382294,0.44270620821891066] (9,-1; 9,-1), time: 30.0075s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_0, [-1.7177811861038208,1.0955718755722046]=>[-0.5998799439747496,0.12178798001444954] (9,-1; 9,-1), time: 30.0076s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_64, [-1.1230461597442627,1.1933484077453613]=>[-0.32850809097670075,0.12155872825275085] (9,-1; 9,-1), time: 30.0062s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_34, [-1.1731007099151611,1.215549349784851]=>[-0.05175398075295147,0.4484183034510629] (9,-1; 9,-1), time: 30.0555s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_8, [-1.2402780055999756,0.9427599906921387]=>[-0.3051230343695389,0.15630908623895662] (9,-1; 9,-1), time: 30.0042s, #vars: 1367, #constrs: 673, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: -14.1898193359375 with beta sum per layer: []
optimal alpha/beta time: 14.089183568954468
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.3171,  2.0226,  2.8426,  0.7407,  1.7784, -3.4403,  3.5278,  0.8924,
          4.5083]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 86 nodes out of 86 unstable nodes, lb improved 26.195283889770508, ub improved 44.72773742675781, time 42.7833
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_99', 'lay10_70', 'lay10_24', 'lay10_42', 'lay10_36', 'lay10_50', 'lay10_49', 'lay10_43', 'lay10_12', 'lay10_8', 'lay10_71', 'lay10_20', 'lay10_88', 'lay10_93', 'lay10_13', 'lay10_9', 'lay10_85', 'lay10_21', 'lay10_89', 'lay10_48', 'lay10_58', 'lay10_3', 'lay10_16', 'lay10_96', 'lay10_28', 'lay10_87', 'lay10_98', 'lay10_80', 'lay10_65', 'lay10_79', 'lay10_69', 'lay10_26', 'lay10_11', 'lay10_55', 'lay10_66', 'lay10_2', 'lay10_75', 'lay10_18', 'lay10_33', 'lay10_25', 'lay10_77', 'lay10_84', 'lay10_38', 'lay10_44', 'lay10_15', 'lay10_52', 'lay10_31', 'lay10_97', 'lay10_1', 'lay10_86', 'lay10_30', 'lay10_10', 'lay10_92', 'lay10_82', 'lay10_34', 'lay10_68', 'lay10_91', 'lay10_7', 'lay10_45', 'lay10_60', 'lay10_83', 'lay10_81', 'lay10_64', 'lay10_0', 'lay10_76', 'lay10_78', 'lay10_61', 'lay10_17', 'lay10_73', 'lay10_59', 'lay10_95', 'lay10_4', 'lay10_46', 'lay10_53', 'lay10_47', 'lay10_90', 'lay10_94', 'lay10_67', 'lay10_29', 'lay10_72', 'lay10_19', 'lay10_63', 'lay10_14', 'lay10_51', 'lay10_32', 'lay10_40', 'lay10_74', 'lay10_39', 'lay10_27', 'lay10_35', 'lay10_23', 'lay10_22', 'lay10_62', 'lay10_57', 'lay10_6', 'lay10_5', 'lay10_56', 'lay10_41', 'lay10_37', 'lay10_54'] filter: 1.0
Solving MIP for lay10_24, [-2.686574697494507,1.2958492040634155]=>[-2.686574697494507,-1e-05] (-1,-1; 15,-1), time: 0.2548s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_50, [-3.9060535430908203,1.4066160917282104]=>[-3.9060535430908203,-1e-05] (-1,-1; 15,-1), time: 0.2565s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_93, [-2.107161283493042,1.2928476333618164]=>[-2.107161283493042,-1e-05] (-1,-1; 15,-1), time: 0.2559s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_49, [-4.724693298339844,1.714165449142456]=>[-4.724693298339844,-1e-05] (-1,-1; 15,-1), time: 0.2592s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_8, [-4.217978477478027,0.5521435737609863]=>[-4.217978477478027,-1e-05] (-1,-1; 15,-1), time: 0.2613s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_20, [-1.9744855165481567,1.4108203649520874]=>[-1.9744855165481567,-1e-05] (-1,-1; 15,-1), time: 0.2664s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_88, [-2.0666441917419434,1.0903993844985962]=>[-2.0666441917419434,-1e-05] (-1,-1; 15,-1), time: 0.2705s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_13, [-1.1297720670700073,4.404344081878662]=>[1e-05,4.404344081878662] (15,-1; -1,-1), time: 0.2710s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_71, [-1.1033042669296265,2.228623628616333]=>[1e-05,2.228623628616333] (15,-1; -1,-1), time: 0.2725s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_16, [-2.0737521648406982,1.4616773128509521]=>[-2.0737521648406982,-1e-05] (-1,-1; 15,-1), time: 0.1886s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_85, [-2.9829509258270264,1.0776760578155518]=>[-2.9829509258270264,-1e-05] (-1,-1; 15,-1), time: 0.2343s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_89, [-2.927952766418457,0.8706481456756592]=>[-2.927952766418457,-1e-05] (-1,-1; 15,-1), time: 0.2333s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_58, [-4.850804805755615,0.435213565826416]=>[-4.850804805755615,-1e-05] (-1,-1; 15,-1), time: 0.2340s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_48, [-2.9712612628936768,1.2538725137710571]=>[-2.9712612628936768,-1e-05] (-1,-1; 15,-1), time: 0.2387s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_9, [-2.2059826850891113,1.1280583143234253]=>[-2.2059826850891113,-1e-05] (-1,-1; 15,-1), time: 0.5225s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_96, [-1.8749405145645142,1.1923940181732178]=>[-1.8749405145645142,-1e-05] (-1,-1; 15,-1), time: 0.2474s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_12, [-1.8378829956054688,2.5445590019226074]=>[1e-05,2.5445590019226074] (15,-1; -1,-1), time: 0.5247s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_3, [-1.6606532335281372,1.1629294157028198]=>[-1.6606532335281372,-1e-05] (-1,-1; 15,-1), time: 0.2528s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_36, [-2.255551338195801,1.7353171110153198]=>[-2.255551338195801,-1e-05] (-1,-1; 15,-1), time: 0.6647s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_87, [-3.4388175010681152,0.7852107286453247]=>[-3.4388175010681152,-1e-05] (-1,-1; 15,-1), time: 0.1978s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_70, [-1.6303033828735352,2.1687874794006348]=>[1e-05,2.1687874794006348] (15,-1; -1,-1), time: 0.6674s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_69, [-4.015816688537598,0.45341694355010986]=>[-4.015816688537598,-1e-05] (-1,-1; 15,-1), time: 0.1929s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_80, [-1.4170100688934326,4.054328918457031]=>[1e-05,4.054328918457031] (15,-1; -1,-1), time: 0.2286s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_65, [-0.5650238990783691,4.758342266082764]=>[1e-05,4.758342266082764] (15,-1; -1,-1), time: 0.2300s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_79, [-1.2544991970062256,3.0608654022216797]=>[1e-05,3.0608654022216797] (15,-1; -1,-1), time: 0.2308s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_26, [-0.9028520584106445,4.495921611785889]=>[1e-05,4.495921611785889] (15,-1; -1,-1), time: 0.2280s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_55, [-1.8557524681091309,1.102763056755066]=>[-1.8557524681091309,-1e-05] (-1,-1; 15,-1), time: 0.2322s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_2, [-2.7373173236846924,1.3694214820861816]=>[-2.7373173236846924,-1e-05] (-1,-1; 15,-1), time: 0.1860s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_66, [-4.170777797698975,0.650518536567688]=>[-4.170777797698975,-1e-05] (-1,-1; 15,-1), time: 0.2298s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_75, [-2.572584867477417,0.9451934695243835]=>[-2.572584867477417,-1e-05] (-1,-1; 15,-1), time: 0.2386s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_18, [-2.2770187854766846,0.9807590246200562]=>[-2.2770187854766846,-1e-05] (-1,-1; 15,-1), time: 0.1974s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_33, [-1.3871028423309326,3.771461009979248]=>[1e-05,3.771461009979248] (15,-1; -1,-1), time: 0.2231s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_25, [-2.510972738265991,1.2568941116333008]=>[-2.510972738265991,-1e-05] (-1,-1; 15,-1), time: 0.2289s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_84, [-3.0156917572021484,1.0114903450012207]=>[-3.0156917572021484,-1e-05] (-1,-1; 15,-1), time: 0.2410s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_38, [-2.384500503540039,1.3191941976547241]=>[-2.384500503540039,-1e-05] (-1,-1; 15,-1), time: 0.2487s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_44, [-3.834881067276001,2.675931692123413]=>[-3.834881067276001,-1e-05] (-1,-1; 15,-1), time: 0.2441s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_15, [-2.602022409439087,1.4084677696228027]=>[-2.602022409439087,-1e-05] (-1,-1; 15,-1), time: 0.2369s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_52, [-2.7686855792999268,1.1227216720581055]=>[-2.7686855792999268,-1e-05] (-1,-1; 15,-1), time: 0.2425s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_97, [-1.4029228687286377,3.072683334350586]=>[1e-05,3.072683334350586] (15,-1; -1,-1), time: 0.2446s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_1, [-0.6554145812988281,3.5278215408325195]=>[1e-05,3.5278215408325195] (15,-1; -1,-1), time: 0.2385s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_86, [-4.664870262145996,0.6327474117279053]=>[-4.664870262145996,-1e-05] (-1,-1; 15,-1), time: 0.2294s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_30, [-1.370800256729126,5.633767127990723]=>[1e-05,5.633767127990723] (15,-1; -1,-1), time: 0.2275s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_10, [-3.951040267944336,1.4456664323806763]=>[-3.951040267944336,-1e-05] (-1,-1; 15,-1), time: 0.2303s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_82, [-2.944901466369629,0.7187583446502686]=>[-2.944901466369629,-1e-05] (-1,-1; 15,-1), time: 0.2026s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_68, [-1.595032811164856,1.8110480308532715]=>[1e-05,1.8110480308532715] (15,-1; -1,-1), time: 0.2207s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_34, [-2.0848240852355957,1.7313868999481201]=>[-2.0848240852355957,-1e-05] (-1,-1; 15,-1), time: 0.2319s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_91, [-0.07849645614624023,5.616669654846191]=>[1e-05,5.616669654846191] (15,-1; -1,-1), time: 0.2220s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_7, [-4.323273658752441,0.38140106201171875]=>[-4.323273658752441,-1e-05] (-1,-1; 15,-1), time: 0.2246s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_45, [-3.5633034706115723,0.8482816219329834]=>[-3.5633034706115723,-1e-05] (-1,-1; 15,-1), time: 0.2292s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_60, [-3.7682113647460938,0.8850014209747314]=>[-3.7682113647460938,-1e-05] (-1,-1; 15,-1), time: 0.1988s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_81, [-2.7032806873321533,1.4471461772918701]=>[-2.7032806873321533,-1e-05] (-1,-1; 15,-1), time: 0.2212s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_83, [-2.57126784324646,1.0751632452011108]=>[-2.57126784324646,-1e-05] (-1,-1; 15,-1), time: 0.2269s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_64, [-2.9553356170654297,0.6258883476257324]=>[-2.9553356170654297,-1e-05] (-1,-1; 15,-1), time: 0.2193s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_0, [-2.4567270278930664,1.0929913520812988]=>[-2.4567270278930664,-1e-05] (-1,-1; 15,-1), time: 0.2306s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_78, [-2.199969530105591,1.0641528367996216]=>[-2.199969530105591,-1e-05] (-1,-1; 15,-1), time: 0.2055s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_61, [-0.9848018884658813,2.569425582885742]=>[1e-05,2.569425582885742] (15,-1; -1,-1), time: 0.2345s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_17, [-2.863170862197876,2.0033650398254395]=>[-2.863170862197876,-1e-05] (-1,-1; 15,-1), time: 0.2386s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_73, [-3.741727828979492,0.688542366027832]=>[-3.741727828979492,-1e-05] (-1,-1; 15,-1), time: 0.2358s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_59, [-3.4640257358551025,0.5308475494384766]=>[-3.4640257358551025,-1e-05] (-1,-1; 15,-1), time: 0.2383s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_95, [-2.5051660537719727,1.1891591548919678]=>[-2.5051660537719727,-1e-05] (-1,-1; 15,-1), time: 0.1985s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_46, [-1.605764627456665,3.026569128036499]=>[1e-05,3.026569128036499] (15,-1; -1,-1), time: 0.2119s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_53, [-2.5974574089050293,1.2855314016342163]=>[-2.5974574089050293,-1e-05] (-1,-1; 15,-1), time: 0.2088s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_90, [-3.0504252910614014,1.0797392129898071]=>[-3.0504252910614014,-1e-05] (-1,-1; 15,-1), time: 0.2039s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_67, [-0.8932242393493652,3.241255283355713]=>[1e-05,3.241255283355713] (15,-1; -1,-1), time: 0.2156s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_29, [-2.59759783744812,1.215218424797058]=>[-2.59759783744812,-1e-05] (-1,-1; 15,-1), time: 0.2053s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_72, [-0.4781992435455322,5.060830593109131]=>[1e-05,5.060830593109131] (15,-1; -1,-1), time: 0.2086s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_19, [-1.2710603475570679,2.9906578063964844]=>[1e-05,2.9906578063964844] (15,-1; -1,-1), time: 0.2060s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_63, [-1.4056036472320557,2.754011869430542]=>[1e-05,2.754011869430542] (15,-1; -1,-1), time: 0.2280s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_14, [-1.447168231010437,3.1234421730041504]=>[1e-05,3.1234421730041504] (15,-1; -1,-1), time: 0.1982s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_32, [-2.3944778442382812,0.9257102012634277]=>[-2.3944778442382812,-1e-05] (-1,-1; 15,-1), time: 0.2037s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_40, [-1.5347013473510742,2.7654507160186768]=>[1e-05,2.7654507160186768] (15,-1; -1,-1), time: 0.1930s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_74, [-2.5107364654541016,1.644258975982666]=>[-2.5107364654541016,-1e-05] (-1,-1; 15,-1), time: 0.2006s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_39, [-2.1872971057891846,1.3239712715148926]=>[-2.1872971057891846,-1e-05] (-1,-1; 15,-1), time: 0.3598s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_99, [-2.3263940811157227,2.846214771270752]=>[-1.2711714869048722,-1e-05] (2,-1; 15,-1), time: 4.8311s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_43, [-2.0485825538635254,2.3594462871551514]=>[-1.1829408559685584,-1e-05] (2,-1; 15,-1), time: 4.8551s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_23, [-0.39481937885284424,5.081684589385986]=>[1e-05,5.081684589385986] (15,-1; -1,-1), time: 0.2004s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_22, [-0.9101811647415161,3.529285430908203]=>[1e-05,3.529285430908203] (15,-1; -1,-1), time: 0.2039s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_62, [-0.5489442348480225,3.9527392387390137]=>[1e-05,3.9527392387390137] (15,-1; -1,-1), time: 0.2041s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_92, [-1.9390075206756592,1.3401334285736084]=>[-1.9390075206756592,-1e-05] (-1,-1; 15,-1), time: 5.0979s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_6, [-1.8539149761199951,2.195549488067627]=>[1e-05,2.195549488067627] (15,-1; -1,-1), time: 0.2166s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_5, [-1.1946296691894531,2.795687675476074]=>[1e-05,2.795687675476074] (15,-1; -1,-1), time: 0.2028s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_56, [-2.659510612487793,1.6949942111968994]=>[-2.659510612487793,-1e-05] (-1,-1; 15,-1), time: 0.2204s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_41, [-1.0208752155303955,4.3364691734313965]=>[1e-05,4.3364691734313965] (15,-1; -1,-1), time: 0.2056s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_37, [-1.5611507892608643,2.135305404663086]=>[1e-05,2.135305404663086] (15,-1; -1,-1), time: 0.2058s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_11, [-1.8978493213653564,2.0164966583251953]=>[-0.6337364211807196,-1e-05] (9,-1; 15,-1), time: 15.5877s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_54, [-1.7736413478851318,1.6084702014923096]=>[1e-05,0.39812706157757505] (15,-1; 9,-1), time: 15.2146s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_76, [-1.8749141693115234,1.5990028381347656]=>[-0.061645007704258195,0.37532662237739156] (9,-1; 2,-1), time: 21.9250s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_77, [-2.037523031234741,2.370504379272461]=>[-0.5552888376897765,0.22158403708659416] (2,-1; 9,-1), time: 23.3094s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_98, [-1.9841728210449219,1.4861685037612915]=>[-0.05671623637768044,0.3538820054067383] (9,-1; 2,-1), time: 25.7751s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_94, [-2.6943981647491455,1.234138011932373]=>[-0.7019951982157859,0.10686377283057515] (9,-1; 2,-1), time: 27.4609s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_42, [-2.2537403106689453,1.7816193103790283]=>[-0.34429858450389667,0.05978309950472863] (9,-1; 9,-1), time: 30.0041s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_21, [-1.5259182453155518,1.7541399002075195]=>[-0.24142272652947305,0.1257484757640206] (9,-1; 9,-1), time: 30.0259s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_28, [-2.2518608570098877,1.9125380516052246]=>[-0.10212803310851817,0.4462308785223581] (9,-1; 9,-1), time: 30.1283s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_31, [-1.8600234985351562,1.845967411994934]=>[-0.24835240272440065,0.2550975785008797] (9,-1; 9,-1), time: 30.0437s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_47, [-2.113966464996338,1.8275668621063232]=>[-0.3571725958858229,0.30280914655043223] (9,-1; 9,-1), time: 30.0068s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_4, [-1.8825204372406006,1.5914926528930664]=>[-0.14357625393354043,0.16319002989448825] (9,-1; 9,-1), time: 30.0577s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_51, [-1.6735295057296753,3.1639349460601807]=>[-0.013254910166669243,0.8849544243289473] (9,-1; 9,-1), time: 30.0032s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_27, [-2.182088851928711,1.9675045013427734]=>[-0.4674307144703352,0.12006196560201508] (9,-1; 9,-1), time: 30.0116s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_35, [-1.7747697830200195,1.7525668144226074]=>[-0.23981701930651472,0.27196884350749584] (9,-1; 9,-1), time: 30.0268s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_57, [-1.804855465888977,2.28800892829895]=>[-0.022125044648204986,0.6405760219268326] (9,-1; 9,-1), time: 30.0068s, #vars: 1499, #constrs: 821, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: -20.055103302001953 with beta sum per layer: []
optimal alpha/beta time: 12.991313695907593
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.0755,  2.4656,  3.2893,  1.4024,  2.4927, -2.6344,  4.0306,  1.7111,
          5.2224]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 62.75343322753906, ub improved 91.71280670166016, time 35.8750
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_62', 'lay12_49', 'lay12_50', 'lay12_70', 'lay12_47', 'lay12_93', 'lay12_26', 'lay12_86', 'lay12_80', 'lay12_53', 'lay12_69', 'lay12_5', 'lay12_27', 'lay12_71', 'lay12_99', 'lay12_40', 'lay12_15', 'lay12_3', 'lay12_20', 'lay12_34', 'lay12_74', 'lay12_61', 'lay12_51', 'lay12_66', 'lay12_78', 'lay12_58', 'lay12_72', 'lay12_57', 'lay12_35', 'lay12_85', 'lay12_36', 'lay12_41', 'lay12_2', 'lay12_37', 'lay12_75', 'lay12_94', 'lay12_7', 'lay12_23', 'lay12_43', 'lay12_19', 'lay12_30', 'lay12_97', 'lay12_46', 'lay12_88', 'lay12_33', 'lay12_25', 'lay12_65', 'lay12_16', 'lay12_54', 'lay12_38', 'lay12_28', 'lay12_76', 'lay12_64', 'lay12_90', 'lay12_13', 'lay12_12', 'lay12_24', 'lay12_92', 'lay12_52', 'lay12_84', 'lay12_0', 'lay12_82', 'lay12_21', 'lay12_63', 'lay12_8', 'lay12_29', 'lay12_14', 'lay12_4', 'lay12_59', 'lay12_45', 'lay12_42', 'lay12_55', 'lay12_77', 'lay12_18', 'lay12_11', 'lay12_95', 'lay12_67', 'lay12_79', 'lay12_1', 'lay12_98', 'lay12_39', 'lay12_9', 'lay12_83', 'lay12_81', 'lay12_68', 'lay12_60', 'lay12_89', 'lay12_32', 'lay12_73', 'lay12_87', 'lay12_6', 'lay12_96', 'lay12_17', 'lay12_22', 'lay12_48', 'lay12_44', 'lay12_10', 'lay12_31', 'lay12_56', 'lay12_91'] filter: 1.0
Solving MIP for lay12_99, [-4.263155460357666,1.9508116245269775]=>[-4.263155460357666,-1e-05] (-1,-1; 15,-1), time: 0.3067s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_50, [-3.2783043384552,5.95396089553833]=>[1e-05,5.95396089553833] (15,-1; -1,-1), time: 0.3235s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_49, [-5.4760637283325195,2.6658854484558105]=>[-5.4760637283325195,-1e-05] (-1,-1; 15,-1), time: 0.3342s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_40, [-3.778855323791504,3.396597146987915]=>[-3.778855323791504,-1e-05] (-1,-1; 15,-1), time: 0.3338s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_69, [-3.547776937484741,3.640460729598999]=>[1e-05,3.640460729598999] (15,-1; -1,-1), time: 0.3349s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_86, [-4.567287921905518,3.592909336090088]=>[-4.567287921905518,-1e-05] (-1,-1; 15,-1), time: 0.3365s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_62, [-3.376812696456909,4.365653991699219]=>[1e-05,4.365653991699219] (15,-1; -1,-1), time: 0.3381s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_26, [-4.605964660644531,3.6515512466430664]=>[-4.605964660644531,-1e-05] (-1,-1; 15,-1), time: 0.3427s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_80, [-3.301283597946167,4.466004848480225]=>[1e-05,4.466004848480225] (15,-1; -1,-1), time: 0.3440s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_53, [-4.374020099639893,4.1469244956970215]=>[-4.374020099639893,-1e-05] (-1,-1; 15,-1), time: 0.3461s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_27, [-4.4253010749816895,3.7102952003479004]=>[-4.4253010749816895,-1e-05] (-1,-1; 15,-1), time: 0.3482s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_93, [-4.064154624938965,2.8297483921051025]=>[-4.064154624938965,-1e-05] (-1,-1; 15,-1), time: 0.3533s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_5, [-3.880949020385742,2.9840586185455322]=>[-3.880949020385742,-1e-05] (-1,-1; 15,-1), time: 0.3591s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_15, [-5.232288837432861,4.410828113555908]=>[-5.232288837432861,-1e-05] (-1,-1; 15,-1), time: 0.2581s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_20, [-3.1007590293884277,4.0666823387146]=>[1e-05,4.0666823387146] (15,-1; -1,-1), time: 0.3015s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_3, [-4.2484564781188965,3.307091236114502]=>[-4.2484564781188965,-1e-05] (-1,-1; 15,-1), time: 0.3187s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_34, [-3.190436363220215,4.856127738952637]=>[1e-05,4.856127738952637] (15,-1; -1,-1), time: 0.3085s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_61, [-5.627386569976807,1.711042881011963]=>[-5.627386569976807,-1e-05] (-1,-1; 15,-1), time: 0.3078s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_78, [-5.525622844696045,2.0005600452423096]=>[-5.525622844696045,-1e-05] (-1,-1; 15,-1), time: 0.3028s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_66, [-4.073498249053955,3.475179433822632]=>[-4.073498249053955,-1e-05] (-1,-1; 15,-1), time: 0.3054s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_74, [-4.264369487762451,1.8950388431549072]=>[-4.264369487762451,-1e-05] (-1,-1; 15,-1), time: 0.3137s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_51, [-4.098682403564453,3.2462570667266846]=>[-4.098682403564453,-1e-05] (-1,-1; 15,-1), time: 0.3138s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_58, [-2.85378098487854,3.3160386085510254]=>[1e-05,3.3160386085510254] (15,-1; -1,-1), time: 0.3133s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_72, [-3.997537136077881,3.759272336959839]=>[-3.997537136077881,-1e-05] (-1,-1; 15,-1), time: 0.3274s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_35, [-3.5732831954956055,4.4170427322387695]=>[1e-05,4.4170427322387695] (15,-1; -1,-1), time: 0.3373s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_23, [-3.5025720596313477,3.9577624797821045]=>[1e-05,3.9577624797821045] (15,-1; -1,-1), time: 0.2730s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_36, [-4.443191051483154,3.1015732288360596]=>[-4.443191051483154,-1e-05] (-1,-1; 15,-1), time: 0.3052s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_2, [-5.647345542907715,2.140617847442627]=>[-5.647345542907715,-1e-05] (-1,-1; 15,-1), time: 0.3005s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_94, [-4.8201446533203125,2.9198989868164062]=>[-4.8201446533203125,-1e-05] (-1,-1; 15,-1), time: 0.2990s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_41, [-2.9360642433166504,3.3252170085906982]=>[1e-05,3.3252170085906982] (15,-1; -1,-1), time: 0.3091s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_7, [-3.777615785598755,2.994464874267578]=>[-3.777615785598755,-1e-05] (-1,-1; 15,-1), time: 0.3124s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_43, [-3.9716272354125977,2.745689630508423]=>[-3.9716272354125977,-1e-05] (-1,-1; 15,-1), time: 0.3304s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_19, [-4.334893226623535,2.0938358306884766]=>[-4.334893226623535,-1e-05] (-1,-1; 15,-1), time: 0.3335s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_30, [-5.665372371673584,2.0221519470214844]=>[-5.665372371673584,-1e-05] (-1,-1; 15,-1), time: 0.3296s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_97, [-3.633732557296753,4.496644020080566]=>[1e-05,4.496644020080566] (15,-1; -1,-1), time: 0.3126s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_65, [-5.048920154571533,2.173496961593628]=>[-5.048920154571533,-1e-05] (-1,-1; 15,-1), time: 0.3049s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_16, [-4.121136665344238,2.225383758544922]=>[-4.121136665344238,-1e-05] (-1,-1; 15,-1), time: 0.3040s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_38, [-5.433469295501709,1.906943440437317]=>[-5.433469295501709,-1e-05] (-1,-1; 15,-1), time: 0.3171s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_54, [-3.8269474506378174,3.889465093612671]=>[1e-05,3.889465093612671] (15,-1; -1,-1), time: 0.3442s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_76, [-3.7754743099212646,2.4478890895843506]=>[-3.7754743099212646,-1e-05] (-1,-1; 15,-1), time: 0.2634s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_64, [-2.664689064025879,3.447261333465576]=>[1e-05,3.447261333465576] (15,-1; -1,-1), time: 0.2811s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_90, [-5.109516620635986,2.2624926567077637]=>[-5.109516620635986,-1e-05] (-1,-1; 15,-1), time: 0.2935s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_13, [-5.460495948791504,1.8414890766143799]=>[-5.460495948791504,-1e-05] (-1,-1; 15,-1), time: 0.3084s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_24, [-4.119915008544922,6.373689651489258]=>[1e-05,6.373689651489258] (15,-1; -1,-1), time: 0.2796s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_84, [-4.468413829803467,1.983464241027832]=>[-4.468413829803467,-1e-05] (-1,-1; 15,-1), time: 0.2802s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_0, [-4.974956512451172,2.5235342979431152]=>[-4.974956512451172,-1e-05] (-1,-1; 15,-1), time: 0.2659s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_82, [-4.59547233581543,2.33449649810791]=>[-4.59547233581543,-1e-05] (-1,-1; 15,-1), time: 0.2766s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_21, [-3.9213547706604004,2.5755245685577393]=>[-3.9213547706604004,-1e-05] (-1,-1; 15,-1), time: 0.2630s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_63, [-3.258678913116455,6.708218574523926]=>[1e-05,6.708218574523926] (15,-1; -1,-1), time: 0.2595s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_8, [-3.6489105224609375,2.7952561378479004]=>[-3.6489105224609375,-1e-05] (-1,-1; 15,-1), time: 0.2754s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_29, [-3.8814022541046143,3.8225698471069336]=>[-3.8814022541046143,-1e-05] (-1,-1; 15,-1), time: 0.2714s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_14, [-4.144604206085205,2.42716908454895]=>[-4.144604206085205,-1e-05] (-1,-1; 15,-1), time: 0.2649s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_4, [-4.6562089920043945,4.514217853546143]=>[-4.6562089920043945,-1e-05] (-1,-1; 15,-1), time: 0.4654s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_37, [-3.630208969116211,2.8605785369873047]=>[1e-05,1.2018950413372635] (15,-1; 2,-1), time: 5.9546s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_33, [-4.228908061981201,2.9219486713409424]=>[-4.228908061981201,-1e-05] (-1,-1; 15,-1), time: 5.6834s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_45, [-4.394596099853516,2.4179506301879883]=>[-4.394596099853516,-1e-05] (-1,-1; 15,-1), time: 0.2823s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_42, [-5.307727813720703,2.087747812271118]=>[-5.307727813720703,-1e-05] (-1,-1; 15,-1), time: 0.2921s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_55, [-3.8072707653045654,2.3792724609375]=>[-3.8072707653045654,-1e-05] (-1,-1; 15,-1), time: 0.2864s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_77, [-4.521570205688477,2.1244072914123535]=>[-4.521570205688477,-1e-05] (-1,-1; 15,-1), time: 0.2809s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_28, [-3.302774429321289,3.252370595932007]=>[1e-05,1.4293342606855697] (15,-1; 2,-1), time: 6.0349s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_18, [-5.524988174438477,3.3347320556640625]=>[-5.524988174438477,-1e-05] (-1,-1; 15,-1), time: 0.2751s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_11, [-3.678792715072632,4.363893508911133]=>[1e-05,4.363893508911133] (15,-1; -1,-1), time: 0.2999s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_95, [-3.2354471683502197,4.12388277053833]=>[1e-05,4.12388277053833] (15,-1; -1,-1), time: 0.2731s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_1, [-4.2227606773376465,3.725642681121826]=>[-4.2227606773376465,-1e-05] (-1,-1; 15,-1), time: 0.2755s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_98, [-2.5476584434509277,8.81261157989502]=>[1e-05,8.81261157989502] (15,-1; -1,-1), time: 0.2630s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_39, [-4.298757553100586,1.9497196674346924]=>[-4.298757553100586,-1e-05] (-1,-1; 15,-1), time: 0.2730s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_9, [-4.162005424499512,2.910773277282715]=>[-4.162005424499512,-1e-05] (-1,-1; 15,-1), time: 0.2684s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_83, [-4.421079635620117,5.8361124992370605]=>[1e-05,5.8361124992370605] (15,-1; -1,-1), time: 0.2784s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_81, [-4.0224175453186035,3.5746493339538574]=>[-4.0224175453186035,-1e-05] (-1,-1; 15,-1), time: 0.2813s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_12, [-3.635084867477417,2.6002211570739746]=>[-3.635084867477417,-1e-05] (-1,-1; 15,-1), time: 8.4478s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_60, [-3.052088499069214,4.369412422180176]=>[1e-05,4.369412422180176] (15,-1; -1,-1), time: 0.2697s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_57, [-3.3244149684906006,3.098788022994995]=>[-3.3244149684906006,-1e-05] (-1,-1; 15,-1), time: 9.9376s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_89, [-5.1750993728637695,2.2974085807800293]=>[-5.1750993728637695,-1e-05] (-1,-1; 15,-1), time: 0.2719s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_32, [-3.890982151031494,3.1303937435150146]=>[-3.890982151031494,-1e-05] (-1,-1; 15,-1), time: 0.2719s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_87, [-1.5960438251495361,6.479849815368652]=>[1e-05,6.479849815368652] (15,-1; -1,-1), time: 0.2713s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_6, [-4.278938293457031,2.475374221801758]=>[-4.278938293457031,-1e-05] (-1,-1; 15,-1), time: 0.2881s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_96, [-4.070422649383545,3.2222208976745605]=>[-4.070422649383545,-1e-05] (-1,-1; 15,-1), time: 0.2740s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_17, [-3.7817323207855225,3.042820692062378]=>[-3.7817323207855225,-1e-05] (-1,-1; 15,-1), time: 0.2781s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_22, [-4.6719584465026855,2.0730581283569336]=>[-4.6719584465026855,-1e-05] (-1,-1; 15,-1), time: 0.2841s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_47, [-3.702569007873535,3.970163345336914]=>[-0.6817017147533043,-1e-05] (9,-1; 15,-1), time: 15.2984s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_44, [-4.810466766357422,2.7508676052093506]=>[-4.810466766357422,-1e-05] (-1,-1; 15,-1), time: 0.2758s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_10, [-4.423628330230713,2.2459466457366943]=>[-4.423628330230713,-1e-05] (-1,-1; 15,-1), time: 0.2664s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_31, [-2.450531005859375,5.511280059814453]=>[1e-05,5.511280059814453] (15,-1; -1,-1), time: 0.2742s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_56, [-4.406130313873291,1.8722171783447266]=>[-4.406130313873291,-1e-05] (-1,-1; 15,-1), time: 0.2692s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_46, [-3.705571174621582,4.016722679138184]=>[-0.670275148414544,-1e-05] (9,-1; 15,-1), time: 15.4703s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_91, [-3.5103213787078857,3.1526029109954834]=>[-3.5103213787078857,-1e-05] (-1,-1; 15,-1), time: 0.2792s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_67, [-3.6228079795837402,3.6134262084960938]=>[-0.3972206098363881,0.02928999100366217] (2,-1; 9,-1), time: 20.6541s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_92, [-3.3577048778533936,2.765960931777954]=>[-0.11099171157851594,0.2387650057906181] (9,-1; 2,-1), time: 27.5890s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_70, [-4.240048408508301,4.676420211791992]=>[-0.2427860802753961,0.37167623361443586] (9,-1; 9,-1), time: 30.0397s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_71, [-3.4885430335998535,2.9140093326568604]=>[-0.1423771654334967,0.07442490950932304] (9,-1; 9,-1), time: 30.0542s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_85, [-3.7971625328063965,3.7004806995391846]=>[-0.1748950230796419,0.07879586243472389] (9,-1; 9,-1), time: 30.1071s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_75, [-3.733346462249756,4.818191051483154]=>[-0.0649684737568281,0.8620983934025106] (9,-1; 9,-1), time: 30.0278s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_88, [-3.2941737174987793,3.9440221786499023]=>[-0.4992126176221207,0.10389523450160298] (9,-1; 9,-1), time: 30.0057s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_25, [-4.210145473480225,3.5443739891052246]=>[-0.059627197120860814,0.2640552440133903] (9,-1; 9,-1), time: 30.0331s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_52, [-3.441610336303711,3.301819086074829]=>[-0.17201969325487831,0.08255990779279149] (9,-1; 9,-1), time: 30.1265s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_79, [-3.619065761566162,3.1733198165893555]=>[-0.35366027043684334,0.34107524230583425] (2,-1; 9,-1), time: 25.1679s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_59, [-4.167216777801514,4.5764994621276855]=>[-0.1642805230167589,0.7403838525622245] (9,-1; 2,-1), time: 29.0576s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_68, [-3.437340259552002,4.000782012939453]=>[-0.36747272055300156,0.09564384872436883] (9,-1; 9,-1), time: 30.0475s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_73, [-4.562567234039307,3.7821884155273438]=>[-0.4096413076965171,0.1442477741580583] (9,-1; 9,-1), time: 30.0208s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_48, [-3.4433512687683105,4.670031547546387]=>[-0.2781087466922737,0.4855572181534188] (2,-1; 9,-1), time: 29.1466s, #vars: 1627, #constrs: 963, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -22.49225616455078 with beta sum per layer: []
optimal alpha/beta time: 13.579156637191772
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.3547,  2.6524,  3.4668,  1.6834,  2.7889, -2.3012,  4.2176,  2.0993,
          5.5302]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 133.1138916015625, ub improved 227.0132598876953, time 41.5246
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_65', 'lay14_67', 'lay14_22', 'lay14_91', 'lay14_41', 'lay14_97', 'lay14_73', 'lay14_1', 'lay14_68', 'lay14_71', 'lay14_95', 'lay14_4', 'lay14_35', 'lay14_14', 'lay14_89', 'lay14_18', 'lay14_27', 'lay14_78', 'lay14_57', 'lay14_88', 'lay14_81', 'lay14_40', 'lay14_19', 'lay14_31', 'lay14_3', 'lay14_47', 'lay14_87', 'lay14_44', 'lay14_84', 'lay14_79', 'lay14_51', 'lay14_25', 'lay14_36', 'lay14_5', 'lay14_11', 'lay14_20', 'lay14_52', 'lay14_86', 'lay14_96', 'lay14_43', 'lay14_82', 'lay14_38', 'lay14_26', 'lay14_59', 'lay14_0', 'lay14_46', 'lay14_64', 'lay14_50', 'lay14_10', 'lay14_42', 'lay14_75', 'lay14_63', 'lay14_34', 'lay14_23', 'lay14_9', 'lay14_70', 'lay14_39', 'lay14_30', 'lay14_29', 'lay14_49', 'lay14_54', 'lay14_83', 'lay14_53', 'lay14_76', 'lay14_60', 'lay14_37', 'lay14_69', 'lay14_28', 'lay14_72', 'lay14_80', 'lay14_15', 'lay14_7', 'lay14_8', 'lay14_74', 'lay14_45', 'lay14_17', 'lay14_12', 'lay14_21', 'lay14_48', 'lay14_55', 'lay14_58', 'lay14_16', 'lay14_77', 'lay14_85', 'lay14_62', 'lay14_94', 'lay14_24', 'lay14_13', 'lay14_33', 'lay14_92', 'lay14_66', 'lay14_6', 'lay14_56', 'lay14_61', 'lay14_93', 'lay14_2', 'lay14_90', 'lay14_98', 'lay14_32', 'lay14_99'] filter: 1.0
Solving MIP for lay14_1, [-7.751689910888672,6.029471397399902]=>[-7.751689910888672,-1e-05] (-1,-1; 15,-1), time: 0.3525s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_41, [-6.333622932434082,9.95678997039795]=>[1e-05,9.95678997039795] (15,-1; -1,-1), time: 0.3606s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_97, [-5.986616134643555,8.448705673217773]=>[1e-05,8.448705673217773] (15,-1; -1,-1), time: 0.3610s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_73, [-7.560153961181641,6.219061851501465]=>[-7.560153961181641,-1e-05] (-1,-1; 15,-1), time: 0.3634s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_71, [-8.741085052490234,6.7415080070495605]=>[-8.741085052490234,-1e-05] (-1,-1; 15,-1), time: 0.3691s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_67, [-6.212430477142334,9.786111831665039]=>[1e-05,9.786111831665039] (15,-1; -1,-1), time: 0.3713s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_22, [-9.061345100402832,7.542425632476807]=>[-9.061345100402832,-1e-05] (-1,-1; 15,-1), time: 0.3728s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_35, [-7.639863014221191,9.580753326416016]=>[1e-05,9.580753326416016] (15,-1; -1,-1), time: 0.3843s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_4, [-7.039835453033447,7.62308406829834]=>[1e-05,7.62308406829834] (15,-1; -1,-1), time: 0.3867s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_91, [-8.505374908447266,8.410831451416016]=>[-8.505374908447266,-1e-05] (-1,-1; 15,-1), time: 0.4148s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_78, [-7.84617280960083,10.249258041381836]=>[1e-05,10.249258041381836] (15,-1; -1,-1), time: 0.3250s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_27, [-8.560247421264648,6.56846284866333]=>[-8.560247421264648,-1e-05] (-1,-1; 15,-1), time: 0.3375s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_88, [-7.3818769454956055,5.9491167068481445]=>[-7.3818769454956055,-1e-05] (-1,-1; 15,-1), time: 0.3287s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_40, [-6.191115379333496,9.838571548461914]=>[1e-05,9.838571548461914] (15,-1; -1,-1), time: 0.3222s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_19, [-8.561042785644531,5.299607276916504]=>[-8.561042785644531,-1e-05] (-1,-1; 15,-1), time: 0.3552s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_3, [-7.463789463043213,6.854700088500977]=>[-7.463789463043213,-1e-05] (-1,-1; 15,-1), time: 0.3422s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_31, [-7.313488006591797,7.614385604858398]=>[1e-05,7.614385604858398] (15,-1; -1,-1), time: 0.3627s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_47, [-7.814573287963867,6.664436340332031]=>[-7.814573287963867,-1e-05] (-1,-1; 15,-1), time: 0.3980s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_44, [-6.766265869140625,7.516719818115234]=>[1e-05,7.516719818115234] (15,-1; -1,-1), time: 0.3067s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_79, [-9.482769966125488,7.4502973556518555]=>[-9.482769966125488,-1e-05] (-1,-1; 15,-1), time: 0.3261s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_84, [-7.489606857299805,7.622027397155762]=>[1e-05,7.622027397155762] (15,-1; -1,-1), time: 0.3498s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_5, [-8.388773918151855,10.84332275390625]=>[1e-05,10.84332275390625] (15,-1; -1,-1), time: 0.3881s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_11, [-10.731492042541504,7.177621364593506]=>[-10.731492042541504,-1e-05] (-1,-1; 15,-1), time: 0.2806s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_20, [-6.845888614654541,8.396760940551758]=>[1e-05,8.396760940551758] (15,-1; -1,-1), time: 0.3462s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_52, [-8.576955795288086,6.472460746765137]=>[-8.576955795288086,-1e-05] (-1,-1; 15,-1), time: 0.3320s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_96, [-8.473369598388672,9.510907173156738]=>[1e-05,9.510907173156738] (15,-1; -1,-1), time: 0.3041s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_86, [-8.751496315002441,6.893758296966553]=>[-8.751496315002441,-1e-05] (-1,-1; 15,-1), time: 0.3913s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_43, [-7.696654319763184,6.457206726074219]=>[-7.696654319763184,-1e-05] (-1,-1; 15,-1), time: 0.3188s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_82, [-8.454689025878906,6.949068069458008]=>[-8.454689025878906,-1e-05] (-1,-1; 15,-1), time: 0.3256s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_26, [-7.863429069519043,6.7358012199401855]=>[-7.863429069519043,-1e-05] (-1,-1; 15,-1), time: 0.2892s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_0, [-6.771324157714844,7.2446136474609375]=>[1e-05,7.2446136474609375] (15,-1; -1,-1), time: 0.3186s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_46, [-9.253256797790527,5.934012413024902]=>[-9.253256797790527,-1e-05] (-1,-1; 15,-1), time: 0.2753s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_59, [-7.455435752868652,7.516730785369873]=>[1e-05,7.516730785369873] (15,-1; -1,-1), time: 0.5755s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_50, [-8.402691841125488,5.748733043670654]=>[-8.402691841125488,-1e-05] (-1,-1; 15,-1), time: 0.2836s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_64, [-8.277379989624023,6.176009178161621]=>[-8.277379989624023,-1e-05] (-1,-1; 15,-1), time: 0.5118s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_10, [-8.013940811157227,8.037262916564941]=>[1e-05,8.037262916564941] (15,-1; -1,-1), time: 0.2883s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_42, [-6.712808132171631,7.763134002685547]=>[1e-05,7.763134002685547] (15,-1; -1,-1), time: 0.2805s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_63, [-7.767963886260986,8.313940048217773]=>[1e-05,8.313940048217773] (15,-1; -1,-1), time: 0.3102s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_34, [-8.880752563476562,5.762821197509766]=>[-8.880752563476562,-1e-05] (-1,-1; 15,-1), time: 0.2905s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_23, [-6.475197792053223,8.056395530700684]=>[1e-05,8.056395530700684] (15,-1; -1,-1), time: 0.3506s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_9, [-8.48338508605957,6.4766693115234375]=>[-8.48338508605957,-1e-05] (-1,-1; 15,-1), time: 0.2768s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_70, [-8.095410346984863,7.5804924964904785]=>[-8.095410346984863,-1e-05] (-1,-1; 15,-1), time: 0.3216s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_51, [-7.907341957092285,6.875587463378906]=>[1e-05,2.7248034347060632] (15,-1; 2,-1), time: 5.3978s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_29, [-7.325767517089844,7.726546287536621]=>[1e-05,7.726546287536621] (15,-1; -1,-1), time: 0.2995s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_49, [-8.720359802246094,4.929834365844727]=>[-8.720359802246094,-1e-05] (-1,-1; 15,-1), time: 0.2903s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_81, [-6.973358154296875,7.735515117645264]=>[-1.3988534738207958,-1e-05] (2,-1; 15,-1), time: 7.0311s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_83, [-7.4690260887146,6.891422271728516]=>[-7.4690260887146,-1e-05] (-1,-1; 15,-1), time: 0.3003s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_95, [-7.621374607086182,7.464634895324707]=>[1e-05,0.6099568077821466] (15,-1; 2,-1), time: 9.4538s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_30, [-7.12363338470459,6.3660125732421875]=>[1e-05,1.4139668762681434] (15,-1; 2,-1), time: 6.9894s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_60, [-9.296648025512695,5.291099548339844]=>[-9.296648025512695,-1e-05] (-1,-1; 15,-1), time: 0.2893s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_37, [-9.31358528137207,6.210474491119385]=>[-9.31358528137207,-1e-05] (-1,-1; 15,-1), time: 0.2891s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_69, [-7.5647664070129395,6.991281509399414]=>[-7.5647664070129395,-1e-05] (-1,-1; 15,-1), time: 0.2919s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_28, [-7.676779747009277,7.336206436157227]=>[-7.676779747009277,-1e-05] (-1,-1; 15,-1), time: 0.2795s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_76, [-7.314964294433594,6.696776390075684]=>[1e-05,1.9741449097549866] (15,-1; 2,-1), time: 5.3984s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_80, [-7.069286823272705,6.465766429901123]=>[-7.069286823272705,-1e-05] (-1,-1; 15,-1), time: 0.2854s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_18, [-6.524658679962158,6.036525249481201]=>[1e-05,0.8268990161437695] (15,-1; 9,-1), time: 15.3004s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_65, [-9.006159782409668,9.479256629943848]=>[-1.8068452415882301,-1e-05] (9,-1; 15,-1), time: 15.3044s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_68, [-7.011632919311523,7.279908180236816]=>[-0.905201886520496,-1e-05] (9,-1; 15,-1), time: 15.3041s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_14, [-6.903782844543457,7.567104816436768]=>[-0.7308827441858617,-1e-05] (9,-1; 15,-1), time: 15.3134s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_15, [-7.211740493774414,6.1501545906066895]=>[-7.211740493774414,-1e-05] (-1,-1; 15,-1), time: 0.3002s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_53, [-7.4582600593566895,7.1144514083862305]=>[1e-05,0.8051089602042287] (15,-1; 2,-1), time: 7.8719s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_8, [-7.505449295043945,6.105820178985596]=>[-7.505449295043945,-1e-05] (-1,-1; 15,-1), time: 0.2914s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_7, [-9.42911434173584,5.759616851806641]=>[-9.42911434173584,-1e-05] (-1,-1; 15,-1), time: 0.2942s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_45, [-8.415828704833984,5.354278564453125]=>[-8.415828704833984,-1e-05] (-1,-1; 15,-1), time: 0.2864s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_17, [-9.049813270568848,4.286006450653076]=>[-9.049813270568848,-1e-05] (-1,-1; 15,-1), time: 0.2925s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_87, [-7.788193225860596,7.696969509124756]=>[1e-05,0.3153758180672007] (15,-1; 9,-1), time: 15.4078s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_16, [-7.854748249053955,7.234840393066406]=>[-7.854748249053955,-1e-05] (-1,-1; 15,-1), time: 0.2973s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_38, [-6.554988861083984,7.324166297912598]=>[-1.4745446404724816,-1e-05] (9,-1; 15,-1), time: 15.2857s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_39, [-8.0621976852417,5.746715068817139]=>[1e-05,0.7348782186710379] (15,-1; 9,-1), time: 15.2956s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_62, [-8.124666213989258,10.51689338684082]=>[1e-05,10.51689338684082] (15,-1; -1,-1), time: 0.2785s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_48, [-6.944839000701904,5.764495372772217]=>[1e-05,1.3447665052407416] (15,-1; 2,-1), time: 4.8130s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_24, [-7.407805442810059,7.32273530960083]=>[-7.407805442810059,-1e-05] (-1,-1; 15,-1), time: 0.2928s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_13, [-6.761994361877441,7.261920928955078]=>[1e-05,7.261920928955078] (15,-1; -1,-1), time: 0.2918s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_33, [-6.786840915679932,8.902566909790039]=>[1e-05,8.902566909790039] (15,-1; -1,-1), time: 0.2837s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_74, [-7.689690113067627,5.93820858001709]=>[1e-05,0.9814947887830833] (15,-1; 2,-1), time: 6.2753s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_55, [-9.04248332977295,8.400806427001953]=>[1e-05,1.7343624896160794] (15,-1; 2,-1), time: 6.2410s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_54, [-8.569259643554688,7.340821743011475]=>[1e-05,0.31564893537187916] (15,-1; 2,-1), time: 19.1494s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_89, [-7.187244892120361,7.974384307861328]=>[-0.15273284464130238,0.35098545544178206] (9,-1; 9,-1), time: 30.1707s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_57, [-8.944639205932617,5.258065700531006]=>[-0.2854778067373651,0.010228715876918239] (9,-1; 9,-1), time: 30.0183s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_61, [-7.761336326599121,4.732851982116699]=>[-7.761336326599121,-1e-05] (-1,-1; 15,-1), time: 0.2956s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_93, [-8.654885292053223,5.8099517822265625]=>[-8.654885292053223,-1e-05] (-1,-1; 15,-1), time: 0.2963s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_25, [-8.042194366455078,4.875184059143066]=>[-0.13486723631045527,0.04217481107526548] (9,-1; 9,-1), time: 30.0150s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_2, [-9.176250457763672,7.854761123657227]=>[-9.176250457763672,-1e-05] (-1,-1; 15,-1), time: 0.2856s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_36, [-7.888672351837158,7.178657054901123]=>[-0.07253762998436719,0.26038188078475155] (9,-1; 9,-1), time: 30.1174s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_12, [-7.013125419616699,8.080982208251953]=>[-0.8905158681970119,-1e-05] (9,-1; 15,-1), time: 15.3054s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_21, [-6.8667097091674805,6.60880708694458]=>[1e-05,0.7680877318973081] (15,-1; 9,-1), time: 15.3057s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_32, [-6.465639591217041,7.198666572570801]=>[1e-05,7.198666572570801] (15,-1; -1,-1), time: 0.2809s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_98, [-10.333320617675781,5.922037601470947]=>[-10.333320617675781,-1e-05] (-1,-1; 15,-1), time: 0.2964s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_77, [-7.223744869232178,6.19728946685791]=>[1e-05,0.7410776133451277] (15,-1; 9,-1), time: 15.2985s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_75, [-7.767105579376221,5.924801349639893]=>[-0.4256762752314081,0.013622587687301603] (9,-1; 9,-1), time: 30.0939s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_56, [-6.66988468170166,8.177919387817383]=>[-0.738371336029313,-1e-05] (2,-1; 15,-1), time: 8.2090s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_66, [-8.854870796203613,6.978674411773682]=>[1e-05,0.8382306283878141] (15,-1; 9,-1), time: 15.2920s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_90, [-6.873186111450195,6.133296966552734]=>[1e-05,0.5632029212431032] (15,-1; 2,-1), time: 7.0704s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_85, [-7.7146806716918945,5.672306537628174]=>[-0.10250412157616716,0.2138850821811907] (9,-1; 2,-1), time: 24.8630s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_72, [-6.8031206130981445,8.612682342529297]=>[-0.21869635722295763,0.10544051164402625] (9,-1; 9,-1), time: 30.0314s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_58, [-7.264580249786377,7.108518123626709]=>[-0.1897614563291147,0.05464557992089939] (9,-1; 9,-1), time: 30.1151s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_99, [-7.454803466796875,7.592706203460693]=>[-0.5680699143180811,-1e-05] (2,-1; 15,-1), time: 17.4705s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_94, [-8.139212608337402,6.583820343017578]=>[-0.14834712304574116,0.06226502866424073] (9,-1; 9,-1), time: 30.0048s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_92, [-8.03066349029541,4.782289981842041]=>[-0.034590325739118646,0.3048447823576313] (9,-1; 9,-1), time: 30.1114s, #vars: 1755, #constrs: 1105, improved: True
Solving MIP for lay14_6, [-7.720160007476807,7.659629821777344]=>[-0.281315048461685,0.026224222600810695] (9,-1; 9,-1), time: 30.0542s, #vars: 1755, #constrs: 1105, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -23.73883056640625 with beta sum per layer: []
optimal alpha/beta time: 13.647274255752563
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.5011,  2.7477,  3.5411,  1.8058,  2.9247, -2.1321,  4.3365,  2.3273,
          5.6867]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 425.58465576171875, ub improved 486.8354797363281, time 52.3103
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_40', 'lay16_68', 'lay16_49', 'lay16_37', 'lay16_82', 'lay16_60', 'lay16_25', 'lay16_19', 'lay16_98', 'lay16_67', 'lay16_9', 'lay16_45', 'lay16_62', 'lay16_55', 'lay16_88', 'lay16_35', 'lay16_72', 'lay16_79', 'lay16_54', 'lay16_1', 'lay16_32', 'lay16_10', 'lay16_58', 'lay16_7', 'lay16_41', 'lay16_13', 'lay16_24', 'lay16_4', 'lay16_3', 'lay16_87', 'lay16_15', 'lay16_80', 'lay16_57', 'lay16_27', 'lay16_95', 'lay16_34', 'lay16_86', 'lay16_5', 'lay16_2', 'lay16_53', 'lay16_12', 'lay16_63', 'lay16_14', 'lay16_65', 'lay16_64', 'lay16_39', 'lay16_71', 'lay16_69', 'lay16_29', 'lay16_99', 'lay16_91', 'lay16_26', 'lay16_76', 'lay16_44', 'lay16_43', 'lay16_74', 'lay16_61', 'lay16_20', 'lay16_36', 'lay16_38', 'lay16_70', 'lay16_0', 'lay16_66', 'lay16_75', 'lay16_52', 'lay16_56', 'lay16_94', 'lay16_21', 'lay16_11', 'lay16_51', 'lay16_31', 'lay16_78', 'lay16_77', 'lay16_50', 'lay16_97', 'lay16_47', 'lay16_48', 'lay16_16', 'lay16_85', 'lay16_73', 'lay16_28', 'lay16_30', 'lay16_83', 'lay16_33', 'lay16_93', 'lay16_92', 'lay16_84', 'lay16_90', 'lay16_81', 'lay16_18', 'lay16_6', 'lay16_22', 'lay16_59', 'lay16_23', 'lay16_46', 'lay16_8', 'lay16_89', 'lay16_42', 'lay16_96', 'lay16_17'] filter: 1.0
Solving MIP for lay16_45, [-19.60118293762207,18.536640167236328]=>[-19.60118293762207,-1e-05] (-1,-1; 15,-1), time: 0.4010s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_55, [-20.261903762817383,11.318254470825195]=>[-20.261903762817383,-1e-05] (-1,-1; 15,-1), time: 0.4042s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_19, [-19.795425415039062,16.070880889892578]=>[-19.795425415039062,-1e-05] (-1,-1; 15,-1), time: 0.4140s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_62, [-15.764823913574219,13.610418319702148]=>[-15.764823913574219,-1e-05] (-1,-1; 15,-1), time: 0.4154s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_67, [-19.235403060913086,13.969060897827148]=>[-19.235403060913086,-1e-05] (-1,-1; 15,-1), time: 0.4172s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_25, [-15.752184867858887,17.30765151977539]=>[1e-05,17.30765151977539] (15,-1; -1,-1), time: 0.4247s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_88, [-17.187623977661133,15.782462120056152]=>[-17.187623977661133,-1e-05] (-1,-1; 15,-1), time: 0.4431s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_60, [-17.28467559814453,13.674274444580078]=>[-17.28467559814453,-1e-05] (-1,-1; 15,-1), time: 0.4470s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_98, [-20.648292541503906,12.034380912780762]=>[-20.648292541503906,-1e-05] (-1,-1; 15,-1), time: 0.4535s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_68, [-19.012630462646484,16.64613914489746]=>[-19.012630462646484,-1e-05] (-1,-1; 15,-1), time: 0.4648s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_9, [-18.90102195739746,12.971285820007324]=>[-18.90102195739746,-1e-05] (-1,-1; 15,-1), time: 0.4679s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_35, [-19.158288955688477,12.680048942565918]=>[-19.158288955688477,-1e-05] (-1,-1; 15,-1), time: 0.5052s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_72, [-19.768857955932617,13.440824508666992]=>[-19.768857955932617,-1e-05] (-1,-1; 15,-1), time: 0.3924s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_79, [-18.795326232910156,15.859183311462402]=>[-18.795326232910156,-1e-05] (-1,-1; 15,-1), time: 0.3924s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_1, [-20.08796501159668,11.346457481384277]=>[-20.08796501159668,-1e-05] (-1,-1; 15,-1), time: 0.4005s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_32, [-13.016768455505371,13.927570343017578]=>[1e-05,13.927570343017578] (15,-1; -1,-1), time: 0.4096s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_41, [-16.33009147644043,15.223365783691406]=>[-16.33009147644043,-1e-05] (-1,-1; 15,-1), time: 0.3808s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_54, [-17.72331428527832,14.456969261169434]=>[-17.72331428527832,-1e-05] (-1,-1; 15,-1), time: 0.4279s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_58, [-15.378975868225098,13.87072467803955]=>[-15.378975868225098,-1e-05] (-1,-1; 15,-1), time: 0.4045s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_7, [-20.654172897338867,9.799421310424805]=>[-20.654172897338867,-1e-05] (-1,-1; 15,-1), time: 0.4445s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_24, [-19.606168746948242,11.057433128356934]=>[-19.606168746948242,-1e-05] (-1,-1; 15,-1), time: 0.4339s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_13, [-15.822945594787598,13.323740005493164]=>[-15.822945594787598,-1e-05] (-1,-1; 15,-1), time: 0.4428s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_80, [-18.672260284423828,18.933597564697266]=>[1e-05,18.933597564697266] (15,-1; -1,-1), time: 0.3167s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_3, [-17.584758758544922,11.859703063964844]=>[-17.584758758544922,-1e-05] (-1,-1; 15,-1), time: 0.3722s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_87, [-19.603464126586914,16.531591415405273]=>[-19.603464126586914,-1e-05] (-1,-1; 15,-1), time: 0.3807s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_15, [-17.72602081298828,21.0078182220459]=>[1e-05,21.0078182220459] (15,-1; -1,-1), time: 0.3959s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_86, [-17.010780334472656,14.777223587036133]=>[-17.010780334472656,-1e-05] (-1,-1; 15,-1), time: 0.4065s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_34, [-16.529497146606445,18.336566925048828]=>[1e-05,18.336566925048828] (15,-1; -1,-1), time: 0.4265s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_2, [-17.21515655517578,16.179397583007812]=>[-17.21515655517578,-1e-05] (-1,-1; 15,-1), time: 0.3628s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_53, [-17.70407485961914,15.060992240905762]=>[-17.70407485961914,-1e-05] (-1,-1; 15,-1), time: 0.3689s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_14, [-19.815420150756836,24.64023208618164]=>[1e-05,24.64023208618164] (15,-1; -1,-1), time: 0.3159s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_65, [-17.89962387084961,22.26211929321289]=>[1e-05,22.26211929321289] (15,-1; -1,-1), time: 0.4078s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_12, [-16.9338321685791,15.468079566955566]=>[1e-05,0.9628864055708353] (15,-1; 2,-1), time: 6.1085s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_64, [-17.635908126831055,15.054583549499512]=>[-17.635908126831055,-1e-05] (-1,-1; 15,-1), time: 7.5572s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_99, [-17.251127243041992,16.506772994995117]=>[-17.251127243041992,-1e-05] (-1,-1; 15,-1), time: 0.3742s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_91, [-19.253311157226562,18.396053314208984]=>[-19.253311157226562,-1e-05] (-1,-1; 15,-1), time: 0.3522s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_27, [-21.200153350830078,20.157939910888672]=>[1e-05,2.281481424737425] (15,-1; 2,-1), time: 9.4533s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_37, [-17.65214729309082,16.29397964477539]=>[1e-05,0.8004158667884869] (15,-1; 9,-1), time: 15.3566s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_26, [-16.3109130859375,12.442062377929688]=>[1e-05,0.7533897147904681] (15,-1; 2,-1), time: 5.5580s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_10, [-14.08836841583252,12.558051109313965]=>[1e-05,0.8675837938797968] (15,-1; 9,-1), time: 15.3502s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_4, [-17.22672462463379,17.26105499267578]=>[-1.001552936713255,-1e-05] (9,-1; 15,-1), time: 15.3655s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_5, [-17.779150009155273,14.07158088684082]=>[1e-05,2.2077293786696526] (15,-1; 9,-1), time: 15.3293s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_71, [-19.19887351989746,17.153358459472656]=>[1e-05,2.1449707919270367] (15,-1; 9,-1), time: 15.3288s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_69, [-16.454071044921875,15.057355880737305]=>[1e-05,1.1206768692464835] (15,-1; 9,-1), time: 15.3405s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_63, [-15.268500328063965,14.101595878601074]=>[1e-05,0.26235535908052793] (15,-1; 9,-1), time: 15.9074s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_29, [-20.230546951293945,21.679594039916992]=>[-2.03000314262416,-1e-05] (9,-1; 15,-1), time: 15.3228s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_49, [-18.726911544799805,17.4759464263916]=>[-0.6845923498131282,0.1359615393405134] (2,-1; 9,-1), time: 25.6124s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_76, [-17.96373176574707,15.227700233459473]=>[1e-05,3.055221837254571] (15,-1; 9,-1), time: 15.3034s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_82, [-17.475866317749023,12.538193702697754]=>[-0.15097069528952095,0.0006009188669714252] (9,-1; 9,-1), time: 30.1070s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_40, [-18.885568618774414,18.184837341308594]=>[-0.32467135824048104,0.22071814386959349] (9,-1; 9,-1), time: 30.1870s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_57, [-21.507434844970703,18.041479110717773]=>[-0.5620878544475469,0.008160122211655262] (9,-1; 9,-1), time: 30.0651s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_95, [-17.32215118408203,14.845067024230957]=>[-0.42351265628667206,0.12099593857337711] (9,-1; 9,-1), time: 30.2206s, #vars: 1877, #constrs: 1238, improved: True
Solving MIP for lay16_39, [-18.72455406188965,17.21764373779297]=>[-0.515865378039287,0.48078189862186804] (9,-1; 9,-1), time: 30.1205s, #vars: 1877, #constrs: 1238, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -24.07154655456543 with beta sum per layer: []
optimal alpha/beta time: 13.265811204910278
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.5375,  2.7811,  3.5872,  1.8129,  2.9544, -2.1185,  4.3837,  2.4038,
          5.7295]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 53 nodes out of 100 unstable nodes, lb improved 436.66815185546875, ub improved 674.3901977539062, time 32.0509
maximum relu layer improved by MIP so far 7
MIP finished with 250.66304445266724s
Run final alpha-CROWN after MIP solving on layer 16 and relu idx 7
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: -24.43923568725586 with beta sum per layer: []
optimal alpha/beta time: 11.22756814956665
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.6155,  2.7911,  3.6113,  1.8273,  3.0205, -2.0672,  4.4004,  2.4574,
          5.7828]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.6155,  2.7911,  0.0000,  3.6113,  1.8273,  3.0205, -2.0672,  4.4004,
          2.4574,  5.7828]], device='cuda:0') min: tensor(-2.0672, device='cuda:0')
time threshold left for bab: 25.2107937335968
##### [0:47] Tested against 6 ######
Model prediction is: tensor([[-0.4443,  0.6646,  5.9675, -0.2164,  0.1901, -1.3073,  3.8596, -1.4856,
         -1.0441, -5.0747]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 2.067229747772217 with beta sum per layer: []
optimal alpha/beta time: 1.8397517204284668
alpha-CROWN with fixed intermediate bounds: tensor([[-2.0672]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-2.067229747772217
layer 0 size torch.Size([100]) unstable 48
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 15
layer 3 size torch.Size([100]) unstable 16
layer 4 size torch.Size([100]) unstable 14
layer 5 size torch.Size([100]) unstable 14
layer 6 size torch.Size([100]) unstable 11
layer 7 size torch.Size([100]) unstable 12
# of unstable neurons: 158
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 45]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 2.936469554901123 with beta sum per layer: [0.0, 0.762657105922699, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5700337886810303
This batch time : update_bounds func: 0.5733	 prepare: 0.0018	 bound: 0.5703	 transfer: 0.0006	 finalize: 0.0005
Accumulated time: update_bounds func: 0.5733	 prepare: 0.0018	 bound: 0.5703	 transfer: 0.0006	 finalize: 0.0005
batch bounding time:  0.5736305713653564
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.900848] (1), [-0.83732, 96.932770] (1), 
length of domains: 2
Total time: 0.6024	 pickout: 0.0011	 decision: 0.0275	 get_bound: 0.5736	 add_domain: 0.0002
Current lb:-2.067229747772217
2 neurons visited
0 diving domains visited
Cumulative time: 2.6585676670074463

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 0], [1, 0]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 4.116581916809082 with beta sum per layer: [0.0, 3.2521989345550537, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.40043187141418457
This batch time : update_bounds func: 0.4040	 prepare: 0.0020	 bound: 0.4007	 transfer: 0.0007	 finalize: 0.0006
Accumulated time: update_bounds func: 0.9773	 prepare: 0.0038	 bound: 0.9710	 transfer: 0.0007	 finalize: 0.0010
batch bounding time:  0.40432000160217285
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.896477] (2), [-0.95009, 96.900848] (2), [-0.67148, 96.932770] (2), [-0.39149, 96.932770] (2), 
length of domains: 4
Total time: 0.4325	 pickout: 0.0011	 decision: 0.0268	 get_bound: 0.4043	 add_domain: 0.0002
Current lb:-2.067229747772217
6 neurons visited
0 diving domains visited
Cumulative time: 3.0911946296691895

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 24], [2, 24], [2, 24], [2, 24]]
single_node_split: True
regular batch size: 2*4, diving batch size 1*0
best_l after optimization: 5.035160541534424 with beta sum per layer: [0.0, 7.334651470184326, 2.8167295455932617, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.402691125869751
This batch time : update_bounds func: 0.4073	 prepare: 0.0024	 bound: 0.4030	 transfer: 0.0008	 finalize: 0.0011
Accumulated time: update_bounds func: 1.3846	 prepare: 0.0062	 bound: 1.3740	 transfer: 0.0008	 finalize: 0.0021
batch bounding time:  0.4076118469238281
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.844414] (3), [-1.15650, 96.896477] (3), [-0.80071, 96.900848] (3), [-0.64125, 96.932770] (3), [-0.33667, 96.932770] (3), [-0.09860, 96.900848] (3), 
length of domains: 6
Total time: 0.4362	 pickout: 0.0014	 decision: 0.0269	 get_bound: 0.4076	 add_domain: 0.0003
Current lb:-2.067229747772217
14 neurons visited
0 diving domains visited
Cumulative time: 3.527589797973633

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 23], [5, 48], [0, 56], [0, 13], [0, 98], [5, 48]]
single_node_split: True
regular batch size: 2*6, diving batch size 1*0
best_l after optimization: 6.983016014099121 with beta sum per layer: [0.7378170490264893, 11.720739364624023, 5.057106971740723, 0.0, 0.0, 0.7850559949874878, 0.0, 0.0]
optimal alpha/beta time: 0.4079275131225586
This batch time : update_bounds func: 0.4141	 prepare: 0.0032	 bound: 0.4084	 transfer: 0.0008	 finalize: 0.0017
Accumulated time: update_bounds func: 1.7987	 prepare: 0.0094	 bound: 1.7824	 transfer: 0.0008	 finalize: 0.0038
batch bounding time:  0.4143707752227783
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.844414] (4), [-1.76112, 96.844414] (4), [-0.75562, 96.896477] (4), [-0.74212, 96.900848] (4), [-0.50836, 96.932770] (4), [-0.45249, 96.932770] (4), [-0.23682, 96.900848] (4), [-0.23198, 96.896477] (4), [-0.13746, 96.932770] (4), [-0.13139, 96.932770] (4), 
length of domains: 10
Total time: 0.4438	 pickout: 0.0018	 decision: 0.0272	 get_bound: 0.4144	 add_domain: 0.0005
Current lb:-2.067229747772217
26 neurons visited
0 diving domains visited
Cumulative time: 3.971675395965576

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 56], [0, 25], [0, 25], [0, 85], [0, 84], [0, 84], [0, 85], [1, 39], [5, 48], [5, 48]]
single_node_split: True
regular batch size: 2*10, diving batch size 1*0
best_l after optimization: 10.103292465209961 with beta sum per layer: [4.600888252258301, 20.299657821655273, 7.1911773681640625, 0.0, 0.0, 2.3334574699401855, 0.0, 0.0]
optimal alpha/beta time: 0.40891051292419434
This batch time : update_bounds func: 0.4167	 prepare: 0.0041	 bound: 0.4092	 transfer: 0.0008	 finalize: 0.0025
Accumulated time: update_bounds func: 2.2154	 prepare: 0.0136	 bound: 2.1917	 transfer: 0.0008	 finalize: 0.0063
batch bounding time:  0.41701197624206543
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.844414] (5), [-1.67795, 96.844414] (5), [-1.60879, 96.844414] (5), [-1.33676, 96.844414] (5), [-0.65566, 96.900848] (5), [-0.58643, 96.896477] (5), [-0.38804, 96.900848] (5), [-0.38412, 96.932770] (5), [-0.36502, 96.932770] (5), [-0.35744, 96.896477] (5), [-0.32806, 96.932770] (5), [-0.31115, 96.932770] (5), [-0.11161, 96.900848] (5), [-0.05297, 96.932770] (5), [-0.04748, 96.932770] (5), 
length of domains: 15
Total time: 0.4477	 pickout: 0.0025	 decision: 0.0275	 get_bound: 0.4170	 add_domain: 0.0007
Current lb:-2.067229747772217
46 neurons visited
0 diving domains visited
Cumulative time: 4.41978907585144

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 48], [0, 58], [5, 48], [0, 58], [0, 98], [1, 39], [0, 98], [5, 48], [5, 48], [1, 39]]
single_node_split: True
regular batch size: 2*15, diving batch size 1*0
best_l after optimization: 13.639490127563477 with beta sum per layer: [9.33720588684082, 32.34968185424805, 8.422691345214844, 0.0, 0.0, 4.349318504333496, 0.0, 0.0]
optimal alpha/beta time: 0.4068448543548584
This batch time : update_bounds func: 0.4174	 prepare: 0.0053	 bound: 0.4072	 transfer: 0.0009	 finalize: 0.0040
Accumulated time: update_bounds func: 2.6328	 prepare: 0.0189	 bound: 2.5988	 transfer: 0.0009	 finalize: 0.0102
batch bounding time:  0.41771674156188965
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.844414] (6), [-1.55610, 96.844414] (6), [-1.50627, 96.844414] (6), [-1.50460, 96.844414] (6), [-1.35985, 96.844414] (6), [-1.19671, 96.844414] (6), [-1.17470, 96.844414] (6), [-0.89226, 96.844414] (6), [-0.56576, 96.896477] (6), [-0.45562, 96.900848] (6), [-0.41525, 96.900848] (6), [-0.33140, 96.896477] (6), [-0.31903, 96.932770] (6), [-0.29996, 96.932770] (6), [-0.26119, 96.932770] (6), [-0.24485, 96.932770] (6), [-0.17341, 96.900848] (6), [-0.13132, 96.900848] (6), 
length of domains: 18
Total time: 0.4497	 pickout: 0.0033	 decision: 0.0278	 get_bound: 0.4178	 add_domain: 0.0008
Current lb:-2.067229747772217
76 neurons visited
0 diving domains visited
Cumulative time: 4.8700175285339355

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 95], [5, 48], [5, 48], [0, 95], [0, 95], [5, 48], [5, 48], [0, 95], [2, 60], [1, 23]]
single_node_split: True
regular batch size: 2*18, diving batch size 1*0
best_l after optimization: 20.205223083496094 with beta sum per layer: [15.444448471069336, 36.34900665283203, 9.234256744384766, 0.0, 0.7770112156867981, 9.534910202026367, 0.0, 0.0]
optimal alpha/beta time: 0.4244828224182129
This batch time : update_bounds func: 0.4362	 prepare: 0.0064	 bound: 0.4248	 transfer: 0.0009	 finalize: 0.0041
Accumulated time: update_bounds func: 3.0691	 prepare: 0.0253	 bound: 3.0236	 transfer: 0.0009	 finalize: 0.0143
batch bounding time:  0.436504602432251
Current worst splitting domains [lb, ub] (depth):
[-2.06723, 96.844414] (7), [-1.82761, 96.844414] (7), [-1.55610, 96.844414] (7), [-1.50627, 96.844414] (7), [-1.43344, 96.844414] (7), [-1.19182, 96.844414] (7), [-1.16910, 96.844414] (7), [-1.03858, 96.844414] (7), [-0.93298, 96.844414] (7), [-0.89521, 96.844414] (7), [-0.84417, 96.844414] (7), [-0.69698, 96.844414] (7), [-0.63864, 96.844414] (7), [-0.62354, 96.844414] (7), [-0.53324, 96.896477] (7), [-0.47956, 96.844414] (7), [-0.41624, 96.900848] (7), [-0.37405, 96.900848] (7), [-0.29479, 96.896477] (7), [-0.20857, 96.932770] (7), 
length of domains: 32
Total time: 0.4698	 pickout: 0.0037	 decision: 0.0281	 get_bound: 0.4366	 add_domain: 0.0015
Current lb:-2.067229747772217
112 neurons visited
0 diving domains visited
Cumulative time: 5.3404412269592285

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 13], [0, 13], [2, 60], [2, 60], [0, 13], [2, 60], [2, 60], [0, 13], [4, 77], [4, 77]]
single_node_split: True
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: 23.496135711669922 with beta sum per layer: [35.78609848022461, 62.19602584838867, 12.586597442626953, 0.0, 7.099353790283203, 33.05976867675781, 0.0, 0.0]
optimal alpha/beta time: 0.41589927673339844
This batch time : update_bounds func: 0.4361	 prepare: 0.0107	 bound: 0.4163	 transfer: 0.0013	 finalize: 0.0077
Accumulated time: update_bounds func: 3.5052	 prepare: 0.0360	 bound: 3.4399	 transfer: 0.0013	 finalize: 0.0220
batch bounding time:  0.43644213676452637
Current worst splitting domains [lb, ub] (depth):
[-1.96781, 96.844414] (8), [-1.89087, 96.844414] (8), [-1.71765, 96.844414] (8), [-1.58444, 96.844414] (8), [-1.55542, 96.844414] (8), [-1.50318, 96.844414] (8), [-1.33325, 96.844414] (8), [-1.25107, 96.844414] (8), [-1.18310, 96.844414] (8), [-1.15989, 96.844414] (8), [-0.81344, 96.844414] (8), [-0.68939, 96.844414] (8), [-0.57857, 96.844414] (8), [-0.54881, 96.844414] (8), [-0.52654, 96.844414] (8), [-0.49304, 96.844414] (8), [-0.47180, 96.896477] (8), [-0.37592, 96.844414] (8), [-0.37567, 96.900848] (8), [-0.34520, 96.844414] (8), 
length of domains: 47
Total time: 0.4804	 pickout: 0.0061	 decision: 0.0354	 get_bound: 0.4365	 add_domain: 0.0024
Current lb:-1.9678127765655518
176 neurons visited
0 diving domains visited
Cumulative time: 5.821921348571777

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 85], [0, 85], [0, 85], [0, 85], [0, 88], [0, 88], [0, 85], [0, 85], [0, 88], [0, 88]]
single_node_split: True
regular batch size: 2*47, diving batch size 1*0
best_l after optimization: 26.43060302734375 with beta sum per layer: [69.66952514648438, 75.69098663330078, 24.88705062866211, 0.0, 15.669134140014648, 73.6313705444336, 0.0, 0.0]
optimal alpha/beta time: 0.4170567989349365
This batch time : update_bounds func: 0.4433	 prepare: 0.0137	 bound: 0.4174	 transfer: 0.0015	 finalize: 0.0106
Accumulated time: update_bounds func: 3.9484	 prepare: 0.0497	 bound: 3.8573	 transfer: 0.0015	 finalize: 0.0326
batch bounding time:  0.44357943534851074
Current worst splitting domains [lb, ub] (depth):
[-1.90835, 96.844414] (9), [-1.82998, 96.844414] (9), [-1.65817, 96.844414] (9), [-1.59338, 96.844414] (9), [-1.52406, 96.844414] (9), [-1.49959, 96.844414] (9), [-1.49935, 96.844414] (9), [-1.44888, 96.844414] (9), [-1.27541, 96.844414] (9), [-1.27405, 96.844414] (9), [-1.25122, 96.844414] (9), [-1.19867, 96.844414] (9), [-1.19421, 96.844414] (9), [-1.12702, 96.844414] (9), [-1.10530, 96.844414] (9), [-1.10042, 96.844414] (9), [-0.90894, 96.844414] (9), [-0.87268, 96.844414] (9), [-0.86255, 96.844414] (9), [-0.74764, 96.844414] (9), 
length of domains: 46
Total time: 0.4864	 pickout: 0.0090	 decision: 0.0314	 get_bound: 0.4437	 add_domain: 0.0024
Current lb:-1.90835440158844
270 neurons visited
0 diving domains visited
Cumulative time: 6.310132741928101

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 58], [0, 58], [0, 58], [0, 58], [0, 58], [0, 58], [4, 77], [4, 77], [0, 58], [0, 58]]
single_node_split: True
regular batch size: 2*46, diving batch size 1*0
best_l after optimization: 47.212074279785156 with beta sum per layer: [128.90969848632812, 58.81425476074219, 34.75971603393555, 0.9375041127204895, 19.2025146484375, 27.97488021850586, 0.0, 0.0]
optimal alpha/beta time: 0.42185354232788086
This batch time : update_bounds func: 0.4474	 prepare: 0.0137	 bound: 0.4222	 transfer: 0.0013	 finalize: 0.0101
Accumulated time: update_bounds func: 4.3959	 prepare: 0.0634	 bound: 4.2795	 transfer: 0.0013	 finalize: 0.0427
batch bounding time:  0.4477660655975342
Current worst splitting domains [lb, ub] (depth):
[-1.80262, 96.844414] (10), [-1.77288, 96.844414] (10), [-1.72557, 96.844414] (10), [-1.69685, 96.844414] (10), [-1.55542, 96.844414] (10), [-1.51248, 96.844414] (10), [-1.49935, 96.844414] (10), [-1.45469, 96.844414] (10), [-1.44888, 96.844414] (10), [-1.42817, 96.844414] (10), [-1.41365, 96.844414] (10), [-1.39408, 96.844414] (10), [-1.33467, 96.844414] (10), [-1.31831, 96.844414] (10), [-1.25080, 96.844414] (10), [-1.19867, 96.844414] (10), [-1.17308, 96.844414] (10), [-1.16346, 96.844414] (10), [-1.14587, 96.844414] (10), [-1.12922, 96.844414] (10), 
length of domains: 59
Total time: 0.4903	 pickout: 0.0089	 decision: 0.0305	 get_bound: 0.4479	 add_domain: 0.0030
Current lb:-1.8026221990585327
362 neurons visited
0 diving domains visited
Cumulative time: 6.801892280578613

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 60], [0, 25], [2, 60], [2, 60], [2, 60], [2, 60], [1, 39], [2, 60], [1, 39], [2, 60]]
single_node_split: True
regular batch size: 2*59, diving batch size 1*0
best_l after optimization: 58.4847526550293 with beta sum per layer: [215.865966796875, 65.31463623046875, 53.36878204345703, 6.040157794952393, 39.24131774902344, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.41808509826660156
This batch time : update_bounds func: 0.4495	 prepare: 0.0171	 bound: 0.4184	 transfer: 0.0012	 finalize: 0.0126
Accumulated time: update_bounds func: 4.8454	 prepare: 0.0805	 bound: 4.6979	 transfer: 0.0012	 finalize: 0.0553
batch bounding time:  0.44991207122802734
Current worst splitting domains [lb, ub] (depth):
[-1.80262, 96.844414] (11), [-1.73074, 96.844414] (11), [-1.72557, 96.844414] (11), [-1.69685, 96.844414] (11), [-1.55511, 96.844414] (11), [-1.51190, 96.844414] (11), [-1.49935, 96.844414] (11), [-1.45388, 96.844414] (11), [-1.44888, 96.844414] (11), [-1.42717, 96.844414] (11), [-1.42612, 96.844414] (11), [-1.41090, 96.844414] (11), [-1.39131, 96.844414] (11), [-1.33213, 96.844414] (11), [-1.31552, 96.844414] (11), [-1.24592, 96.844414] (11), [-1.19308, 96.844414] (11), [-1.15601, 96.844414] (11), [-1.13754, 96.844414] (11), [-1.11231, 96.844414] (11), 
length of domains: 98
Total time: 0.4981	 pickout: 0.0111	 decision: 0.0318	 get_bound: 0.4501	 add_domain: 0.0052
Current lb:-1.8026221990585327
480 neurons visited
0 diving domains visited
Cumulative time: 7.30156683921814

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 25], [2, 60], [0, 25], [0, 25], [0, 25], [0, 25], [0, 80], [0, 25], [0, 80], [0, 25]]
single_node_split: True
regular batch size: 2*98, diving batch size 1*0
best_l after optimization: 70.5897216796875 with beta sum per layer: [393.35406494140625, 117.22835540771484, 89.1560287475586, 17.74138069152832, 88.642333984375, 4.157949447631836, 0.0, 0.0]
optimal alpha/beta time: 0.41902923583984375
This batch time : update_bounds func: 0.4687	 prepare: 0.0272	 bound: 0.4194	 transfer: 0.0020	 finalize: 0.0199
Accumulated time: update_bounds func: 5.3141	 prepare: 0.1077	 bound: 5.1173	 transfer: 0.0020	 finalize: 0.0751
batch bounding time:  0.46917009353637695
Current worst splitting domains [lb, ub] (depth):
[-1.76609, 96.844414] (12), [-1.73074, 96.844414] (12), [-1.68803, 96.844414] (12), [-1.65877, 96.844414] (12), [-1.51137, 96.844414] (12), [-1.47564, 96.844414] (12), [-1.46651, 96.844414] (12), [-1.44724, 96.844414] (12), [-1.42241, 96.844414] (12), [-1.40983, 96.844414] (12), [-1.40844, 96.844414] (12), [-1.38219, 96.844414] (12), [-1.36696, 96.844414] (12), [-1.34777, 96.844414] (12), [-1.33582, 96.844414] (12), [-1.32324, 96.844414] (12), [-1.28921, 96.844414] (12), [-1.27233, 96.844414] (12), [-1.19604, 96.844414] (12), [-1.14718, 96.844414] (12), 
length of domains: 120
Total time: 0.5292	 pickout: 0.0179	 decision: 0.0345	 get_bound: 0.4694	 add_domain: 0.0074
Current lb:-1.7660932540893555
676 neurons visited
0 diving domains visited
Cumulative time: 7.8337860107421875

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 77], [4, 77], [4, 77], [4, 77], [4, 77], [1, 4], [4, 77], [4, 77], [1, 4], [4, 77]]
single_node_split: True
regular batch size: 2*120, diving batch size 1*0
best_l after optimization: 113.84400939941406 with beta sum per layer: [599.5278930664062, 131.29014587402344, 50.15697479248047, 41.69053649902344, 224.68472290039062, 16.95615577697754, 0.0, 0.0]
optimal alpha/beta time: 0.4210028648376465
This batch time : update_bounds func: 0.4813	 prepare: 0.0331	 bound: 0.4213	 transfer: 0.0025	 finalize: 0.0240
Accumulated time: update_bounds func: 5.7954	 prepare: 0.1409	 bound: 5.5386	 transfer: 0.0025	 finalize: 0.0992
batch bounding time:  0.481736421585083
Current worst splitting domains [lb, ub] (depth):
[-1.76609, 96.844414] (13), [-1.73074, 96.844414] (13), [-1.68803, 96.844414] (13), [-1.65877, 96.844414] (13), [-1.51137, 96.844414] (13), [-1.46651, 96.844414] (13), [-1.45443, 96.844414] (13), [-1.42756, 96.844414] (13), [-1.40986, 96.844414] (13), [-1.40983, 96.844414] (13), [-1.40844, 96.844414] (13), [-1.39769, 96.844414] (13), [-1.38244, 96.844414] (13), [-1.38219, 96.844414] (13), [-1.36696, 96.844414] (13), [-1.34777, 96.844414] (13), [-1.34633, 96.844414] (13), [-1.31860, 96.844414] (13), [-1.29431, 96.844414] (13), [-1.28921, 96.844414] (13), 
length of domains: 186
Total time: 0.5908	 pickout: 0.0215	 decision: 0.0354	 get_bound: 0.4820	 add_domain: 0.0520
Current lb:-1.7660932540893555
916 neurons visited
0 diving domains visited
Cumulative time: 8.42939305305481

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 94], [0, 88], [0, 88], [0, 88]]
single_node_split: True
regular batch size: 2*186, diving batch size 1*0
best_l after optimization: 158.55572509765625 with beta sum per layer: [997.5247802734375, 212.51837158203125, 77.33273315429688, 49.91108703613281, 429.7626953125, 20.784162521362305, 0.0, 0.25876811146736145]
optimal alpha/beta time: 0.4236161708831787
This batch time : update_bounds func: 0.5196	 prepare: 0.0518	 bound: 0.4240	 transfer: 0.0034	 finalize: 0.0399
Accumulated time: update_bounds func: 6.3150	 prepare: 0.1926	 bound: 5.9626	 transfer: 0.0034	 finalize: 0.1391
batch bounding time:  0.5201220512390137
Current worst splitting domains [lb, ub] (depth):
[-1.74182, 96.844414] (14), [-1.70940, 96.844414] (14), [-1.65650, 96.844414] (14), [-1.62769, 96.844414] (14), [-1.47161, 96.844414] (14), [-1.47133, 96.844414] (14), [-1.44009, 96.844414] (14), [-1.42691, 96.844414] (14), [-1.39490, 96.844414] (14), [-1.37230, 96.844414] (14), [-1.37205, 96.844414] (14), [-1.36810, 96.844414] (14), [-1.36165, 96.844414] (14), [-1.33998, 96.844414] (14), [-1.32927, 96.844414] (14), [-1.32005, 96.844414] (14), [-1.30270, 96.844414] (14), [-1.29984, 96.844414] (14), [-1.27452, 96.844414] (14), [-1.24807, 96.844414] (14), 
length of domains: 297
Total time: 0.6148	 pickout: 0.0348	 decision: 0.0412	 get_bound: 0.5206	 add_domain: 0.0183
Current lb:-1.7418184280395508
1288 neurons visited
0 diving domains visited
Cumulative time: 9.049673080444336

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 94], [0, 94], [0, 94], [0, 94], [0, 94], [0, 94], [0, 94], [0, 94], [0, 94], [0, 94]]
single_node_split: True
regular batch size: 2*297, diving batch size 1*0
best_l after optimization: 231.253662109375 with beta sum per layer: [1642.0914306640625, 375.43060302734375, 142.60653686523438, 71.40074920654297, 747.181640625, 10.2279052734375, 0.0, 0.8963879346847534]
optimal alpha/beta time: 0.42726683616638184
This batch time : update_bounds func: 0.6157	 prepare: 0.0809	 bound: 0.4276	 transfer: 0.0065	 finalize: 0.0999
Accumulated time: update_bounds func: 6.9307	 prepare: 0.2735	 bound: 6.3902	 transfer: 0.0065	 finalize: 0.2390
batch bounding time:  0.6164999008178711
Current worst splitting domains [lb, ub] (depth):
[-1.65573, 96.844414] (15), [-1.63991, 96.844414] (15), [-1.62489, 96.844414] (15), [-1.61027, 96.844414] (15), [-1.56990, 96.844414] (15), [-1.55301, 96.844414] (15), [-1.54126, 96.844414] (15), [-1.52578, 96.844414] (15), [-1.38034, 96.844414] (15), [-1.36927, 96.844414] (15), [-1.36512, 96.844414] (15), [-1.35688, 96.844414] (15), [-1.35195, 96.844414] (15), [-1.33652, 96.844414] (15), [-1.33621, 96.844414] (15), [-1.32887, 96.844414] (15), [-1.32360, 96.844414] (15), [-1.28242, 96.844414] (15), [-1.27876, 96.844414] (15), [-1.27728, 96.844414] (15), 
length of domains: 477
Total time: 0.7499	 pickout: 0.0537	 decision: 0.0492	 get_bound: 0.6172	 add_domain: 0.0298
Current lb:-1.655731439590454
1882 neurons visited
0 diving domains visited
Cumulative time: 9.810725927352905

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98]]
single_node_split: True
regular batch size: 2*477, diving batch size 1*0
best_l after optimization: 330.1901550292969 with beta sum per layer: [2815.65478515625, 680.563232421875, 193.20309448242188, 86.54441833496094, 1198.105224609375, 47.911617279052734, 0.0, 1.3821176290512085]
optimal alpha/beta time: 0.4435110092163086
This batch time : update_bounds func: 0.7365	 prepare: 0.1289	 bound: 0.4439	 transfer: 0.0095	 finalize: 0.1528
Accumulated time: update_bounds func: 7.6672	 prepare: 0.4024	 bound: 6.8341	 transfer: 0.0095	 finalize: 0.3918
batch bounding time:  0.7375948429107666
Current worst splitting domains [lb, ub] (depth):
[-1.59920, 96.844414] (16), [-1.58403, 96.844414] (16), [-1.56709, 96.844414] (16), [-1.55315, 96.844414] (16), [-1.51409, 96.844414] (16), [-1.51147, 96.844414] (16), [-1.50741, 96.844414] (16), [-1.49558, 96.844414] (16), [-1.49420, 96.844414] (16), [-1.48802, 96.844414] (16), [-1.48250, 96.844414] (16), [-1.46625, 96.844414] (16), [-1.44996, 96.844414] (16), [-1.44068, 96.844414] (16), [-1.41877, 96.844414] (16), [-1.41375, 96.844414] (16), [-1.31891, 96.844414] (16), [-1.30860, 96.844414] (16), [-1.30737, 96.844414] (16), [-1.29451, 96.844414] (16), 
length of domains: 702
Total time: 0.9354	 pickout: 0.0880	 decision: 0.0629	 get_bound: 0.7388	 add_domain: 0.0457
Current lb:-1.5992038249969482
2836 neurons visited
0 diving domains visited
Cumulative time: 10.764045000076294

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 30], [1, 30], [0, 80], [0, 80], [1, 30], [1, 30], [1, 30], [0, 80], [1, 30], [0, 80]]
single_node_split: True
regular batch size: 2*702, diving batch size 1*0
best_l after optimization: 446.2496643066406 with beta sum per layer: [4142.169921875, 940.1044921875, 217.91818237304688, 222.02792358398438, 1843.708984375, 81.47244262695312, 0.0, 2.732457160949707]
optimal alpha/beta time: 0.43588900566101074
This batch time : update_bounds func: 0.7952	 prepare: 0.1918	 bound: 0.4363	 transfer: 0.0142	 finalize: 0.1508
Accumulated time: update_bounds func: 8.4624	 prepare: 0.5942	 bound: 7.2704	 transfer: 0.0142	 finalize: 0.5427
batch bounding time:  0.7965888977050781
Current worst splitting domains [lb, ub] (depth):
[-1.59920, 96.844414] (17), [-1.58403, 96.844414] (17), [-1.52551, 96.844414] (17), [-1.51409, 96.844414] (17), [-1.51147, 96.844414] (17), [-1.51142, 96.844414] (17), [-1.50429, 96.844414] (17), [-1.49179, 96.844414] (17), [-1.48250, 96.844414] (17), [-1.46092, 96.844414] (17), [-1.45475, 96.844414] (17), [-1.45327, 96.844414] (17), [-1.44655, 96.844414] (17), [-1.44617, 96.844414] (17), [-1.44458, 96.844414] (17), [-1.43515, 96.844414] (17), [-1.41444, 96.844414] (17), [-1.40523, 96.844414] (17), [-1.37539, 96.844414] (17), [-1.37120, 96.844414] (17), 
length of domains: 1036
Total time: 1.1768	 pickout: 0.1297	 decision: 0.1145	 get_bound: 0.7985	 add_domain: 0.1342
Current lb:-1.5992038249969482
4240 neurons visited
0 diving domains visited
Cumulative time: 11.970233917236328

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 21], [0, 21], [1, 30], [0, 21], [0, 21], [1, 30], [0, 21], [0, 21], [0, 21], [0, 21]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 540.8946533203125 with beta sum per layer: [6488.8466796875, 1323.3125, 223.52178955078125, 396.0826721191406, 2566.040283203125, 56.28858184814453, 0.0, 0.0]
optimal alpha/beta time: 0.4468955993652344
This batch time : update_bounds func: 1.0463	 prepare: 0.2817	 bound: 0.4473	 transfer: 0.0200	 finalize: 0.2942
Accumulated time: update_bounds func: 9.5088	 prepare: 0.8759	 bound: 7.7177	 transfer: 0.0200	 finalize: 0.8369
batch bounding time:  1.0482428073883057
Current worst splitting domains [lb, ub] (depth):
[-1.52551, 96.844414] (18), [-1.51918, 96.844414] (18), [-1.50806, 96.844414] (18), [-1.50271, 96.844414] (18), [-1.50072, 96.844414] (18), [-1.48405, 96.844414] (18), [-1.45090, 96.844414] (18), [-1.44634, 96.844414] (18), [-1.44017, 96.844414] (18), [-1.43668, 96.844414] (18), [-1.43371, 96.844414] (18), [-1.42785, 96.844414] (18), [-1.42225, 96.844414] (18), [-1.41646, 96.844414] (18), [-1.41412, 96.844414] (18), [-1.40642, 96.844414] (18), [-1.40282, 96.844414] (18), [-1.39930, 96.844414] (18), [-1.39687, 96.844414] (18), [-1.38765, 96.844414] (18), 
length of domains: 1415
Total time: 1.4973	 pickout: 0.1965	 decision: 0.1516	 get_bound: 1.0510	 add_domain: 0.0982
Current lb:-1.5255093574523926
6288 neurons visited
0 diving domains visited
Cumulative time: 13.515148162841797

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 21], [0, 80], [0, 21], [0, 80], [0, 80], [0, 80], [0, 21], [0, 80], [0, 21], [0, 80]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 635.5602416992188 with beta sum per layer: [5552.5380859375, 1336.01318359375, 164.82272338867188, 280.1538391113281, 2169.742431640625, 37.70709991455078, 0.0, 0.0]
optimal alpha/beta time: 0.441605806350708
This batch time : update_bounds func: 1.1197	 prepare: 0.2841	 bound: 0.4420	 transfer: 0.0235	 finalize: 0.3668
Accumulated time: update_bounds func: 10.6285	 prepare: 1.1600	 bound: 8.1597	 transfer: 0.0235	 finalize: 1.2037
batch bounding time:  1.1219241619110107
Current worst splitting domains [lb, ub] (depth):
[-1.47448, 96.844414] (19), [-1.45799, 96.844414] (19), [-1.45757, 96.844414] (19), [-1.44482, 96.844414] (19), [-1.43937, 96.844414] (19), [-1.42876, 96.844414] (19), [-1.42528, 96.844414] (19), [-1.40645, 96.844414] (19), [-1.40514, 96.844414] (19), [-1.39776, 96.844414] (19), [-1.38896, 96.844414] (19), [-1.38395, 96.844414] (19), [-1.37885, 96.844414] (19), [-1.37380, 96.844414] (19), [-1.37248, 96.844414] (19), [-1.36993, 96.844414] (19), [-1.36767, 96.844414] (19), [-1.36565, 96.844414] (19), [-1.36205, 96.844414] (19), [-1.35892, 96.844414] (19), 
length of domains: 1938
Total time: 1.5980	 pickout: 0.2005	 decision: 0.1614	 get_bound: 1.1251	 add_domain: 0.1110
Current lb:-1.4744831323623657
8336 neurons visited
0 diving domains visited
Cumulative time: 15.1552734375

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4], [1, 4]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 716.7875366210938 with beta sum per layer: [5170.73486328125, 1292.2025146484375, 189.3467559814453, 229.63352966308594, 1944.557861328125, 37.099510192871094, 0.0, 0.0]
optimal alpha/beta time: 0.44156479835510254
This batch time : update_bounds func: 1.0621	 prepare: 0.2795	 bound: 0.4419	 transfer: 0.0231	 finalize: 0.3144
Accumulated time: update_bounds func: 11.6905	 prepare: 1.4395	 bound: 8.6016	 transfer: 0.0231	 finalize: 1.5181
batch bounding time:  1.0641791820526123
Current worst splitting domains [lb, ub] (depth):
[-1.45258, 96.844414] (20), [-1.43463, 96.844414] (20), [-1.43450, 96.844414] (20), [-1.41897, 96.844414] (20), [-1.41438, 96.844414] (20), [-1.40125, 96.844414] (20), [-1.39912, 96.844414] (20), [-1.39177, 96.844414] (20), [-1.38187, 96.844414] (20), [-1.37749, 96.844414] (20), [-1.36587, 96.844414] (20), [-1.36073, 96.844414] (20), [-1.35408, 96.844414] (20), [-1.35407, 96.844414] (20), [-1.34875, 96.844414] (20), [-1.34663, 96.844414] (20), [-1.34532, 96.844414] (20), [-1.34148, 96.844414] (20), [-1.33818, 96.844414] (20), [-1.33221, 96.844414] (20), 
length of domains: 2601
Total time: 1.6900	 pickout: 0.1995	 decision: 0.1748	 get_bound: 1.0671	 add_domain: 0.2485
Current lb:-1.4525820016860962
10384 neurons visited
0 diving domains visited
Cumulative time: 16.890361309051514

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [0, 84], [0, 84], [1, 39]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 757.4735107421875 with beta sum per layer: [4493.7490234375, 1588.578125, 133.139404296875, 208.1133575439453, 1859.1563720703125, 7.90894079208374, 0.0, 0.5530695915222168]
optimal alpha/beta time: 0.4449427127838135
This batch time : update_bounds func: 1.2187	 prepare: 0.2857	 bound: 0.4454	 transfer: 0.0230	 finalize: 0.3590
Accumulated time: update_bounds func: 12.9092	 prepare: 1.7252	 bound: 9.0470	 transfer: 0.0230	 finalize: 1.8771
batch bounding time:  1.2209255695343018
Current worst splitting domains [lb, ub] (depth):
[-1.44518, 96.844414] (21), [-1.42750, 96.844414] (21), [-1.42669, 96.844414] (21), [-1.41093, 96.844414] (21), [-1.40627, 96.844414] (21), [-1.39106, 96.844414] (21), [-1.39059, 96.844414] (21), [-1.36721, 96.844414] (21), [-1.35718, 96.844414] (21), [-1.35166, 96.844414] (21), [-1.34536, 96.844414] (21), [-1.33910, 96.844414] (21), [-1.33605, 96.844414] (21), [-1.33274, 96.844414] (21), [-1.32886, 96.844414] (21), [-1.32308, 96.844414] (21), [-1.32035, 96.844414] (21), [-1.31901, 96.844414] (21), [-1.31786, 96.844414] (21), [-1.31194, 96.844414] (21), 
length of domains: 3290
Total time: 1.6639	 pickout: 0.2069	 decision: 0.1006	 get_bound: 1.2242	 add_domain: 0.1323
Current lb:-1.445184588432312
12432 neurons visited
0 diving domains visited
Cumulative time: 18.602603435516357

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 30], [0, 30], [0, 30], [0, 30], [0, 30], [0, 30], [0, 30], [0, 30], [0, 30], [0, 30]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 905.921630859375 with beta sum per layer: [4463.36865234375, 1599.6884765625, 116.10857391357422, 290.55535888671875, 1572.76611328125, 24.44798469543457, 0.0, 7.932019233703613]
optimal alpha/beta time: 0.4445064067840576
This batch time : update_bounds func: 1.1350	 prepare: 0.2847	 bound: 0.4449	 transfer: 0.0231	 finalize: 0.3791
Accumulated time: update_bounds func: 14.0442	 prepare: 2.0099	 bound: 9.4919	 transfer: 0.0231	 finalize: 2.2562
batch bounding time:  1.1369307041168213
Current worst splitting domains [lb, ub] (depth):
[-1.35077, 96.844414] (22), [-1.34582, 96.844414] (22), [-1.33231, 96.844414] (22), [-1.33098, 96.844414] (22), [-1.32757, 96.844414] (22), [-1.32607, 96.844414] (22), [-1.31512, 96.844414] (22), [-1.31060, 96.844414] (22), [-1.31005, 96.844414] (22), [-1.30703, 96.844414] (22), [-1.30537, 96.844414] (22), [-1.29429, 96.844414] (22), [-1.29313, 96.844414] (22), [-1.29043, 96.844414] (22), [-1.28778, 96.844414] (22), [-1.27246, 96.844414] (22), [-1.27127, 96.844414] (22), [-1.26406, 96.844414] (22), [-1.26350, 96.844414] (22), [-1.26259, 96.844414] (22), 
length of domains: 4106
Total time: 1.7195	 pickout: 0.2068	 decision: 0.2262	 get_bound: 1.1399	 add_domain: 0.1466
Current lb:-1.3507704734802246
14480 neurons visited
0 diving domains visited
Cumulative time: 20.36833667755127

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 72]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 1076.125732421875 with beta sum per layer: [4428.88916015625, 1392.1805419921875, 113.23200225830078, 288.1299743652344, 520.29443359375, 95.47322845458984, 0.0, 54.45451354980469]
optimal alpha/beta time: 0.44925642013549805
This batch time : update_bounds func: 1.2086	 prepare: 0.3005	 bound: 0.4497	 transfer: 0.0219	 finalize: 0.4333
Accumulated time: update_bounds func: 15.2529	 prepare: 2.3103	 bound: 9.9416	 transfer: 0.0219	 finalize: 2.6895
batch bounding time:  1.2105631828308105
Current worst splitting domains [lb, ub] (depth):
[-1.27231, 96.844414] (23), [-1.26748, 96.844414] (23), [-1.26419, 96.844414] (23), [-1.25891, 96.844414] (23), [-1.25812, 96.844414] (23), [-1.25716, 96.844414] (23), [-1.25395, 96.844414] (23), [-1.25125, 96.844414] (23), [-1.24326, 96.844414] (23), [-1.24260, 96.844414] (23), [-1.23811, 96.844414] (23), [-1.23745, 96.844414] (23), [-1.23712, 96.844414] (23), [-1.23572, 96.844414] (23), [-1.23478, 96.844414] (23), [-1.23144, 96.844414] (23), [-1.23132, 96.844414] (23), [-1.22782, 96.844414] (23), [-1.22715, 96.844414] (23), [-1.22481, 96.844414] (23), 
length of domains: 4979
Total time: 1.8529	 pickout: 0.2088	 decision: 0.2759	 get_bound: 1.2135	 add_domain: 0.1546
Current lb:-1.2723088264465332
16528 neurons visited
0 diving domains visited
Cumulative time: 22.26641607284546

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 43], [3, 43], [7, 49], [3, 43], [7, 49], [3, 43], [7, 49], [7, 49], [7, 49], [1, 13]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 1256.838134765625 with beta sum per layer: [4107.61376953125, 1191.9429931640625, 106.59246063232422, 218.17208862304688, 73.6983642578125, 152.13157653808594, 0.0, 223.3889617919922]
optimal alpha/beta time: 0.444382905960083
This batch time : update_bounds func: 1.2416	 prepare: 0.2892	 bound: 0.4448	 transfer: 0.0231	 finalize: 0.4813
Accumulated time: update_bounds func: 16.4945	 prepare: 2.5995	 bound: 10.3863	 transfer: 0.0231	 finalize: 3.1708
batch bounding time:  1.24369215965271
Current worst splitting domains [lb, ub] (depth):
[-1.27231, 96.844414] (24), [-1.26748, 96.844414] (24), [-1.25891, 96.844414] (24), [-1.25716, 96.844414] (24), [-1.25578, 96.844414] (24), [-1.24955, 96.844414] (24), [-1.24541, 96.844414] (24), [-1.24285, 96.844414] (24), [-1.23408, 96.844414] (24), [-1.23132, 96.844414] (24), [-1.22732, 96.844414] (24), [-1.22715, 96.844414] (24), [-1.22648, 96.844414] (24), [-1.22209, 96.844414] (24), [-1.22153, 96.844414] (24), [-1.21966, 96.844414] (24), [-1.21490, 96.844414] (24), [-1.21308, 96.844414] (24), [-1.20971, 96.844414] (24), [-1.20697, 96.844414] (24), 
length of domains: 5971
Total time: 1.9347	 pickout: 0.2069	 decision: 0.3127	 get_bound: 1.2466	 add_domain: 0.1685
Current lb:-1.2723088264465332
18576 neurons visited
0 diving domains visited
Cumulative time: 24.24383807182312

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 66], [1, 66], [1, 66], [1, 66], [3, 43], [3, 43], [3, 43], [3, 43], [3, 43], [1, 66]]
single_node_split: True
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 1318.4794921875 with beta sum per layer: [3274.07470703125, 907.2735595703125, 108.892822265625, 446.0482177734375, 0.0, 215.99696350097656, 0.0, 474.96136474609375]
optimal alpha/beta time: 0.4469575881958008
This batch time : update_bounds func: 0.9917	 prepare: 0.2886	 bound: 0.4474	 transfer: 0.0239	 finalize: 0.2287
Accumulated time: update_bounds func: 17.4862	 prepare: 2.8881	 bound: 10.8337	 transfer: 0.0239	 finalize: 3.3994
batch bounding time:  0.9936313629150391
Current worst splitting domains [lb, ub] (depth):
[-1.25578, 96.844414] (25), [-1.24955, 96.844414] (25), [-1.24797, 96.844414] (25), [-1.24541, 96.844414] (25), [-1.24285, 96.844414] (25), [-1.24182, 96.844414] (25), [-1.23403, 96.844414] (25), [-1.23347, 96.844414] (25), [-1.23128, 96.844414] (25), [-1.22729, 96.844414] (25), [-1.22648, 96.844414] (25), [-1.22131, 96.844414] (25), [-1.21231, 96.844414] (25), [-1.20924, 96.844414] (25), [-1.20533, 96.844414] (25), [-1.20416, 96.844414] (25), [-1.20414, 96.844414] (25), [-1.20002, 96.844414] (25), [-1.19996, 96.844414] (25), [-1.19356, 96.844414] (25), 
length of domains: 6950
Total time: 2.0448	 pickout: 0.2122	 decision: 0.3620	 get_bound: 0.9966	 add_domain: 0.4740
Current lb:-1.2557774782180786
20624 neurons visited
0 diving domains visited
Time out!!!!!!!!
Image 47 pidx 6 verify end, final lower bound -1.2557774782180786, upper bound 96.93276977539062, time: 26.60043692588806
47 -1.2557774782180786
[[   47.             0.             0.            12.82398129
      0.            -1.                    inf            inf]
 [   47.             0.             0.           261.96523356
      0.            -2.                    inf            inf]
 [   47.            -1.25577748 20624.            26.60043693
      0.             6.            96.93276978            inf]]
final verified acc: 0.0%[1]
Total verification count: 1 total verified: 0
mean time [cnt:1] (excluding attack success): 301.3896517753601
