Experiments at Tue Nov  2 00:40:25 2021 on huan-Super-Server
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=1_end=2_iter=20_b=1024_int-beta=False_timeout=300_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  2  correct label  2 logits tensor([-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
        -0.6332, -3.9480], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
         -0.6332, -3.9480]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-104.2363, -117.7846, -122.3606, -139.7477, -145.5125, -129.5195,
         -140.8107, -146.8014, -168.8638]], device='cuda:0') None
best_l after optimization: 524.2750244140625 with beta sum per layer: []
optimal alpha/beta time: 12.530482292175293
initial alpha-CROWN bounds: tensor([[-40.0927, -48.5785, -59.7757, -57.7134, -62.7879, -49.0081, -64.7206,
         -66.4373, -75.1608]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 2, Tested against: ['all'] ######
pgd prediction: tensor([-0.0768,  0.0459,  4.1687, -0.1828,  0.1831, -0.8405,  2.6331, -1.2546,
        -0.1692, -3.3632], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([4.2455, 4.1228,    inf, 4.3515, 3.9856, 5.0092, 1.5356, 5.4233, 4.3379,
        7.5319], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 229.75243072509767]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_27', 'lay4_85', 'lay4_66', 'lay4_54', 'lay4_36', 'lay4_76', 'lay4_24', 'lay4_20', 'lay4_96', 'lay4_87', 'lay4_49', 'lay4_52', 'lay4_22', 'lay4_2', 'lay4_75', 'lay4_44', 'lay4_71', 'lay4_94', 'lay4_43', 'lay4_57', 'lay4_37', 'lay4_68', 'lay4_18', 'lay4_81', 'lay4_78', 'lay4_26', 'lay4_63', 'lay4_8', 'lay4_42', 'lay4_79', 'lay4_97', 'lay4_91', 'lay4_64', 'lay4_55', 'lay4_98'] filter: 1.0
/home/shiqi/CROWN-GENERAL/complete_verifier/utils.py:412: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_87, [-0.12283369898796082,1.1879515647888184]=>[1e-05,1.1879515647888184] (15,-1; -1,-1), time: 0.3230s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-0.5651940107345581,0.9383771419525146]=>[-0.2659500557559994,0.7669962053852815] (2,-1; 2,-1), time: 1.2292s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-0.4374692738056183,0.9863338470458984]=>[-0.2537051521274153,0.7160820794586839] (2,-1; 2,-1), time: 1.5371s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-1.2521483898162842,0.9102970361709595]=>[-0.916796760110445,0.6757539349270353] (2,-1; 2,-1), time: 1.8771s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-1.0238701105117798,0.5621940493583679]=>[-0.8234618028136867,0.3053061787319056] (2,-1; 2,-1), time: 1.9466s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_24, [-0.6442217826843262,1.0003207921981812]=>[-0.3420808580341163,0.7180729606652336] (2,-1; 2,-1), time: 1.9800s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-0.6134868860244751,1.0511884689331055]=>[-0.303906542086798,0.8374080009828848] (2,-1; 2,-1), time: 2.0341s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_2, [-0.48632317781448364,1.2070696353912354]=>[-0.26944624249017723,0.8131577658162081] (2,-1; 2,-1), time: 2.1057s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-0.8365471363067627,1.2744438648223877]=>[-0.6079119835608593,0.8811351140037806] (2,-1; 2,-1), time: 2.1105s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_20, [-1.2865536212921143,0.28118109703063965]=>[-1.0118083733076564,0.03510974673619527] (2,-1; 2,-1), time: 2.1478s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_49, [-0.9848619103431702,1.0834708213806152]=>[-0.7947662272696286,0.6732647791394804] (2,-1; 2,-1), time: 2.3088s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_71, [-0.7097050547599792,1.104875087738037]=>[-0.2941382274487081,1.0102690227361006] (2,-1; 2,-1), time: 2.0210s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_96, [-1.3896347284317017,0.8164052963256836]=>[-1.1766575026192705,0.3909648777145617] (2,-1; 2,-1), time: 2.4380s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_66, [-0.9388822317123413,0.7437215447425842]=>[-0.7512917047142306,0.30327101512987364] (2,-1; 2,-1), time: 2.4753s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_81, [-0.40024471282958984,1.9441020488739014]=>[1e-05,1.9441020488739014] (15,-1; -1,-1), time: 0.4262s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_78, [-1.4546315670013428,0.19505417346954346]=>[-1.4546315670013428,-1e-05] (-1,-1; 15,-1), time: 0.4943s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_42, [-1.3508524894714355,0.28643158078193665]=>[-1.3508524894714355,-1e-05] (-1,-1; 15,-1), time: 0.4955s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-1.1565089225769043,1.107023000717163]=>[-0.94514343176165,0.4267885086377738] (2,-1; 2,-1), time: 2.9390s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-1.119577407836914,1.0060160160064697]=>[-0.9653330067927496,0.36069557202531644] (2,-1; 2,-1), time: 2.9475s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-1.6138410568237305,0.2589922547340393]=>[-1.6138410568237305,-1e-05] (-1,-1; 15,-1), time: 0.4059s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-0.13816215097904205,2.492262125015259]=>[-0.041954947240827045,1.9559172659060242] (2,-1; 2,-1), time: 1.9959s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_76, [-0.19510328769683838,1.250624179840088]=>[-0.01106414850460051,0.8644809864809142] (2,-1; 2,-1), time: 3.3524s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-0.4084365963935852,1.602212905883789]=>[-0.028092064489135357,1.3621156687813114] (2,-1; 2,-1), time: 1.4033s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_37, [-1.3244315385818481,0.20303723216056824]=>[-1.0125319774967454,0.043346534421055405] (2,-1; 2,-1), time: 1.5536s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_43, [-0.9363817572593689,0.7455301880836487]=>[-0.5941294341500188,0.5902380116831268] (2,-1; 2,-1), time: 1.9935s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-1.0752681493759155,0.44309595227241516]=>[-0.8108635464901772,0.22923390755265977] (2,-1; 2,-1), time: 1.5953s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_57, [-1.1056232452392578,0.3916364908218384]=>[-0.7762518167202331,0.2373257670272675] (2,-1; 2,-1), time: 1.7613s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-1.0799667835235596,0.8651196360588074]=>[-0.691484517634917,0.6781839710723023] (2,-1; 2,-1), time: 1.5451s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-0.7287480235099792,0.7339929938316345]=>[-0.44783386535454023,0.5700955685482046] (2,-1; 2,-1), time: 1.7860s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-0.7673658728599548,0.6318085789680481]=>[-0.5156042018028935,0.48033031985797425] (2,-1; 2,-1), time: 1.8416s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-0.38050907850265503,1.0006160736083984]=>[-0.1122748916459605,0.7523860268671207] (2,-1; 2,-1), time: 1.6830s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_79, [-0.7898585796356201,1.3054511547088623]=>[-0.37610127064072907,1.1250531809869284] (2,-1; 2,-1), time: 1.8516s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-1.5222840309143066,0.4242136776447296]=>[-1.0440360793369707,0.2748457670044264] (2,-1; 2,-1), time: 1.8232s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-1.0659335851669312,0.9577915072441101]=>[-0.7579130068073727,0.6944049999101529] (2,-1; 2,-1), time: 1.9862s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-1.1315276622772217,0.714977502822876]=>[-0.647212303213302,0.5625945123712022] (2,-1; 2,-1), time: 2.4520s, #vars: 1047, #constrs: 293, improved: True
MIP improved 35 nodes out of 35 unstable nodes, lb improved 9.027936935424805, ub improved 9.240968704223633, time 5.7358
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_21', 'lay6_99', 'lay6_42', 'lay6_61', 'lay6_8', 'lay6_53', 'lay6_68', 'lay6_87', 'lay6_34', 'lay6_73', 'lay6_57', 'lay6_64', 'lay6_14', 'lay6_5', 'lay6_28', 'lay6_11', 'lay6_85', 'lay6_46', 'lay6_37', 'lay6_22', 'lay6_38', 'lay6_74', 'lay6_6', 'lay6_16', 'lay6_82', 'lay6_98', 'lay6_32', 'lay6_72', 'lay6_97', 'lay6_47', 'lay6_29', 'lay6_60', 'lay6_7', 'lay6_18', 'lay6_3', 'lay6_24', 'lay6_9', 'lay6_65', 'lay6_35', 'lay6_92', 'lay6_75', 'lay6_66', 'lay6_51', 'lay6_63', 'lay6_31', 'lay6_91', 'lay6_93', 'lay6_33', 'lay6_49', 'lay6_70', 'lay6_10', 'lay6_88'] filter: 1.0
Solving MIP for lay6_68, [-1.7128098011016846,0.2239481806755066]=>[-1.7128098011016846,-1e-05] (-1,-1; 15,-1), time: 0.3828s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_85, [-1.991824746131897,0.4546964168548584]=>[-1.991824746131897,-1e-05] (-1,-1; 15,-1), time: 0.6648s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_28, [-0.32290732860565186,1.8896534442901611]=>[1e-05,1.8896534442901611] (15,-1; -1,-1), time: 1.8784s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_42, [-1.2056858539581299,0.3259891867637634]=>[-1.2056858539581299,-1e-05] (-1,-1; 15,-1), time: 1.9147s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_5, [-1.3250315189361572,0.30916881561279297]=>[-1.3250315189361572,-1e-05] (-1,-1; 15,-1), time: 2.3667s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_99, [-1.2547955513000488,0.4617554545402527]=>[-1.2547955513000488,-1e-05] (-1,-1; 15,-1), time: 2.5787s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_57, [-1.7562291622161865,0.632005512714386]=>[-1.7562291622161865,-1e-05] (-1,-1; 15,-1), time: 3.1744s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_34, [-1.8116930723190308,0.45544230937957764]=>[-1.8116930723190308,-1e-05] (-1,-1; 15,-1), time: 3.7350s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_38, [-1.6098932027816772,0.15508952736854553]=>[-1.6098932027816772,-0.001223749452114873] (-1,-1; 2,-1), time: 1.4612s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_22, [-1.192803144454956,0.2908351421356201]=>[-1.192803144454956,-1e-05] (-1,-1; 15,-1), time: 2.4095s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_53, [-0.37956666946411133,1.101658582687378]=>[-0.06222860729763633,0.6325898417161021] (2,-1; 2,-1), time: 5.4386s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_14, [-0.8168903589248657,0.7306817770004272]=>[-0.3224002982037772,0.3855984429256305] (2,-1; 2,-1), time: 6.0031s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_82, [-1.3872848749160767,0.30387070775032043]=>[-1.3872848749160767,-1e-05] (-1,-1; 15,-1), time: 2.2627s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_98, [-0.24941205978393555,1.0418871641159058]=>[1e-05,1.0418871641159058] (15,-1; -1,-1), time: 1.8789s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_97, [-1.6402273178100586,0.03288036584854126]=>[-1.6402273178100586,-1e-05] (-1,-1; 15,-1), time: 0.1382s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_47, [-1.410830020904541,0.12071609497070312]=>[-1.410830020904541,-1e-05] (-1,-1; 15,-1), time: 0.1280s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_72, [-0.8979371190071106,0.25436586141586304]=>[-0.8979371190071106,-1e-05] (-1,-1; 15,-1), time: 0.5735s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_11, [-0.4153088927268982,0.9556372761726379]=>[-0.023667642418256907,0.5595180480870451] (2,-1; 2,-1), time: 6.6708s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_46, [-0.7802942395210266,0.6478804349899292]=>[-0.3106134606063855,0.3414935325016004] (2,-1; 2,-1), time: 5.6541s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_3, [-0.020310640335083008,1.8842589855194092]=>[1e-05,1.8842589855194092] (15,-1; -1,-1), time: 0.1180s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_8, [-1.2675273418426514,0.6976670622825623]=>[-0.7871788166890084,0.18717951982629036] (2,-1; 2,-1), time: 6.8634s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_9, [-1.5695219039916992,0.20742031931877136]=>[-1.5695219039916992,-1e-05] (-1,-1; 15,-1), time: 0.2698s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_87, [-0.8753238916397095,0.4631063938140869]=>[-0.46588875297555415,0.08551374089097785] (2,-1; 2,-1), time: 7.3644s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_64, [-1.2267141342163086,0.5079361796379089]=>[-0.5839807007404362,0.13347210439173313] (2,-1; 2,-1), time: 7.4772s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_16, [-1.3581297397613525,0.5592328906059265]=>[-1.3581297397613525,-1e-05] (-1,-1; 15,-1), time: 3.8722s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_75, [-1.559949278831482,0.08849909901618958]=>[-1.559949278831482,-1e-05] (-1,-1; 15,-1), time: 0.1171s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_6, [-1.122422456741333,0.5118243098258972]=>[-0.7427828995253044,0.11802701509504115] (2,-1; 2,-1), time: 5.0083s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_73, [-0.8101294636726379,0.8614823818206787]=>[-0.37409283721283065,0.3170273505999174] (2,-1; 2,-1), time: 8.4941s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_24, [-1.6524378061294556,0.49096715450286865]=>[-1.6524378061294556,-1e-05] (-1,-1; 15,-1), time: 1.6932s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_63, [-1.502488136291504,0.12519344687461853]=>[-1.502488136291504,-1e-05] (-1,-1; 15,-1), time: 0.2232s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_91, [-1.788776159286499,0.16062039136886597]=>[-1.788776159286499,-1e-05] (-1,-1; 15,-1), time: 0.1166s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_18, [-1.2816174030303955,0.42871183156967163]=>[-1.2816174030303955,-1e-05] (-1,-1; 15,-1), time: 2.4377s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_66, [-0.4883584678173065,1.4292638301849365]=>[1e-05,1.4292638301849365] (15,-1; -1,-1), time: 2.0364s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_61, [-0.43480032682418823,1.2366989850997925]=>[-0.058829469502112416,0.54623266139729] (2,-1; 2,-1), time: 10.4160s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_74, [-0.8198489546775818,0.8749995231628418]=>[-0.42208973715788956,0.23980454138756527] (2,-1; 2,-1), time: 8.0377s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_60, [-0.9605420827865601,1.2095534801483154]=>[-0.5120631234366259,0.48562997596508517] (2,-1; 2,-1), time: 4.5845s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_88, [-1.8883978128433228,0.01421135663986206]=>[-1.8883978128433228,-1e-05] (-1,-1; 15,-1), time: 0.1181s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_35, [-0.3518710136413574,0.7652930617332458]=>[-0.08878144033275347,0.37509274105236284] (2,-1; 2,-1), time: 5.0894s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_7, [-0.8407352566719055,0.8529015779495239]=>[-0.25875547001276344,0.4505715532297807] (2,-1; 2,-1), time: 5.9074s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_29, [-0.8601278066635132,0.41314393281936646]=>[-0.8601278066635132,-1e-05] (-1,-1; 15,-1), time: 6.3972s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_31, [-1.3337398767471313,0.5479154586791992]=>[-1.3337398767471313,-1e-05] (-1,-1; 15,-1), time: 4.3754s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_70, [-1.4043794870376587,0.494424968957901]=>[-1.4043794870376587,-1e-05] (-1,-1; 15,-1), time: 2.5443s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_37, [-1.2077045440673828,1.2495720386505127]=>[-0.5958612966349759,0.41871373373292103] (2,-1; 2,-1), time: 12.1268s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_32, [-1.1110846996307373,0.7054616212844849]=>[-0.4608805525118528,0.295911148552732] (2,-1; 2,-1), time: 9.0860s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_51, [-0.5174594521522522,1.1459088325500488]=>[1e-05,1.1459088325500488] (15,-1; -1,-1), time: 7.3133s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_10, [-1.1001619100570679,0.2791300415992737]=>[-0.6229673597868172,0.021307990418559075] (2,-1; 2,-1), time: 5.2708s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_93, [-1.5377695560455322,1.018507957458496]=>[-1.0132285254218705,0.14313886026654846] (2,-1; 2,-1), time: 7.4872s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_65, [-0.8668594360351562,0.8082686066627502]=>[-0.3164241647087183,0.4384145737984657] (2,-1; 2,-1), time: 9.3708s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_21, [-0.9975376129150391,1.3784136772155762]=>[-0.577376844914099,0.5442023141949925] (2,-1; 9,-1), time: 17.4649s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_33, [-1.0679383277893066,0.447567880153656]=>[-0.456631871629775,0.053519402257489024] (2,-1; 2,-1), time: 11.4488s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_49, [-0.7243953943252563,1.7310388088226318]=>[-0.1953747361237524,0.882638746314067] (2,-1; 2,-1), time: 11.5123s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_92, [-0.6696655750274658,1.2497272491455078]=>[-0.3012908332836244,0.6032671172686594] (2,-1; 9,-1), time: 16.7863s, #vars: 1207, #constrs: 483, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 214.3734588623047 with beta sum per layer: []
optimal alpha/beta time: 14.869222402572632
alpha-CROWN with intermediate bounds by MIP: tensor([[-16.5573, -19.2752, -24.4154, -23.0699, -26.1115, -20.7724, -25.6431,
         -27.9566, -30.5719]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 52 nodes out of 52 unstable nodes, lb improved 12.43019962310791, ub improved 19.57870101928711, time 24.6068
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_5', 'lay8_67', 'lay8_39', 'lay8_98', 'lay8_49', 'lay8_82', 'lay8_55', 'lay8_58', 'lay8_42', 'lay8_80', 'lay8_83', 'lay8_12', 'lay8_97', 'lay8_9', 'lay8_47', 'lay8_78', 'lay8_76', 'lay8_13', 'lay8_86', 'lay8_52', 'lay8_89', 'lay8_1', 'lay8_87', 'lay8_25', 'lay8_79', 'lay8_54', 'lay8_27', 'lay8_56', 'lay8_3', 'lay8_28', 'lay8_35', 'lay8_38', 'lay8_70', 'lay8_31', 'lay8_66', 'lay8_16', 'lay8_30', 'lay8_85', 'lay8_77', 'lay8_94', 'lay8_74', 'lay8_72', 'lay8_71', 'lay8_17', 'lay8_57', 'lay8_48', 'lay8_46', 'lay8_99', 'lay8_43', 'lay8_50', 'lay8_90', 'lay8_96', 'lay8_2', 'lay8_61', 'lay8_73', 'lay8_34', 'lay8_75', 'lay8_64', 'lay8_20', 'lay8_36', 'lay8_32', 'lay8_68', 'lay8_40', 'lay8_69', 'lay8_6', 'lay8_0', 'lay8_65', 'lay8_84', 'lay8_26', 'lay8_93', 'lay8_60', 'lay8_4', 'lay8_22', 'lay8_8', 'lay8_62', 'lay8_33', 'lay8_88', 'lay8_53', 'lay8_44', 'lay8_41', 'lay8_63', 'lay8_59', 'lay8_51'] filter: 1.0
Solving MIP for lay8_58, [-1.9330099821090698,0.837881326675415]=>[-1.9330099821090698,-1e-05] (-1,-1; 15,-1), time: 0.2331s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_97, [-2.309682607650757,0.14619159698486328]=>[-2.309682607650757,-1e-05] (-1,-1; 15,-1), time: 0.2410s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_42, [-1.610973596572876,0.7920776009559631]=>[-1.610973596572876,-1e-05] (-1,-1; 15,-1), time: 0.2429s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_78, [-1.7264530658721924,0.41136229038238525]=>[-1.7264530658721924,-1e-05] (-1,-1; 15,-1), time: 0.2435s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_83, [-1.454543113708496,0.26955902576446533]=>[-1.454543113708496,-1e-05] (-1,-1; 15,-1), time: 0.2532s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_12, [-1.8005928993225098,0.792625904083252]=>[-1.8005928993225098,-1e-05] (-1,-1; 15,-1), time: 0.2540s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_82, [-1.3248581886291504,0.5743937492370605]=>[-1.3248581886291504,-1e-05] (-1,-1; 15,-1), time: 0.4154s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_86, [-1.4952987432479858,0.39337825775146484]=>[-1.4952987432479858,-1e-05] (-1,-1; 15,-1), time: 0.2219s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_52, [-2.7046234607696533,0.21188867092132568]=>[-2.7046234607696533,-1e-05] (-1,-1; 15,-1), time: 0.2327s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_89, [-1.3577733039855957,0.37557804584503174]=>[-1.3577733039855957,-1e-05] (-1,-1; 15,-1), time: 0.4115s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_79, [-2.8275890350341797,0.22702062129974365]=>[-2.8275890350341797,-1e-05] (-1,-1; 15,-1), time: 0.2156s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_87, [-1.6754049062728882,0.70975661277771]=>[-1.6754049062728882,-1e-05] (-1,-1; 15,-1), time: 0.3348s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_54, [-1.2319576740264893,0.3897680938243866]=>[-1.2319576740264893,-1e-05] (-1,-1; 15,-1), time: 0.2256s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_3, [-1.739556074142456,0.033016741275787354]=>[-1.739556074142456,-1e-05] (-1,-1; 15,-1), time: 0.2369s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_56, [-1.663142204284668,0.8312819004058838]=>[-1.663142204284668,-1e-05] (-1,-1; 15,-1), time: 0.4712s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_28, [-2.221759557723999,0.3052148222923279]=>[-2.221759557723999,-1e-05] (-1,-1; 15,-1), time: 0.1970s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_35, [-1.2946536540985107,0.37291616201400757]=>[-1.2946536540985107,-1e-05] (-1,-1; 15,-1), time: 0.2100s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_70, [-1.2090799808502197,0.3581424355506897]=>[-1.2090799808502197,-1e-05] (-1,-1; 15,-1), time: 0.2142s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_31, [-1.6128267049789429,0.2347281575202942]=>[-1.6128267049789429,-1e-05] (-1,-1; 15,-1), time: 0.2129s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_39, [-0.9027953743934631,1.259223222732544]=>[1e-05,1.259223222732544] (15,-1; -1,-1), time: 7.0914s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_16, [-2.3818390369415283,0.20849072933197021]=>[-2.3818390369415283,-1e-05] (-1,-1; 15,-1), time: 0.1912s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_98, [-1.1868973970413208,0.7576339244842529]=>[-1.1868973970413208,-1e-05] (-1,-1; 15,-1), time: 9.0899s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_85, [-1.8447246551513672,0.251784086227417]=>[-1.8447246551513672,-1e-05] (-1,-1; 15,-1), time: 0.1897s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_77, [-1.794632077217102,0.21656584739685059]=>[-1.794632077217102,-1e-05] (-1,-1; 15,-1), time: 0.1862s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_9, [-1.6053175926208496,0.5531509518623352]=>[-1.6053175926208496,-1e-05] (-1,-1; 15,-1), time: 9.5716s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_94, [-2.1619069576263428,0.15927064418792725]=>[-2.1619069576263428,-1e-05] (-1,-1; 15,-1), time: 0.1864s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_74, [-2.151362419128418,0.15447044372558594]=>[-2.151362419128418,-1e-05] (-1,-1; 15,-1), time: 0.1887s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_72, [-1.5394742488861084,0.29982513189315796]=>[-1.5394742488861084,-1e-05] (-1,-1; 15,-1), time: 0.1877s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_71, [-0.6865561008453369,3.0246405601501465]=>[1e-05,3.0246405601501465] (15,-1; -1,-1), time: 0.1842s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_17, [-1.9169940948486328,0.10425150394439697]=>[-1.9169940948486328,-1e-05] (-1,-1; 15,-1), time: 0.1988s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_48, [-2.0227627754211426,0.3032217025756836]=>[-2.0227627754211426,-1e-05] (-1,-1; 15,-1), time: 0.1838s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_46, [-1.6841449737548828,0.3043208420276642]=>[-1.6841449737548828,-1e-05] (-1,-1; 15,-1), time: 0.1930s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_49, [-1.6140525341033936,1.2118505239486694]=>[-1.6140525341033936,-1e-05] (-1,-1; 15,-1), time: 10.4507s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_99, [-1.798614740371704,0.27382177114486694]=>[-1.798614740371704,-1e-05] (-1,-1; 15,-1), time: 0.1882s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_67, [-1.7943755388259888,1.3734729290008545]=>[-1.7943755388259888,-1e-05] (-1,-1; 15,-1), time: 12.9866s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_50, [-1.207911491394043,0.4065309762954712]=>[-1.207911491394043,-1e-05] (-1,-1; 15,-1), time: 2.7697s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_57, [-1.3503422737121582,0.5990831851959229]=>[-1.3503422737121582,-1e-05] (-1,-1; 15,-1), time: 4.9328s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_47, [-0.984636664390564,0.9463857412338257]=>[-0.41608217914411827,0.24118246005926353] (2,-1; 9,-1), time: 21.5900s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_1, [-1.0687612295150757,0.6467010974884033]=>[-0.4474866527434693,0.0559044262743508] (2,-1; 9,-1), time: 21.3772s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_61, [-1.5895226001739502,0.29438158869743347]=>[-1.5895226001739502,-1e-05] (-1,-1; 15,-1), time: 0.1800s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_73, [-1.768364429473877,0.11798560619354248]=>[-1.768364429473877,-1e-05] (-1,-1; 15,-1), time: 0.1811s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_76, [-0.6237648725509644,0.8074696660041809]=>[-0.06250741559347513,0.27184831619754585] (9,-1; 2,-1), time: 21.7773s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_30, [-0.804865300655365,0.8063085079193115]=>[-0.1023328898382481,0.3039913201450942] (2,-1; 2,-1), time: 15.1410s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_20, [-0.48282939195632935,1.53049635887146]=>[1e-05,1.53049635887146] (15,-1; -1,-1), time: 0.1858s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_36, [-3.2701735496520996,0.23020029067993164]=>[-3.2701735496520996,-1e-05] (-1,-1; 15,-1), time: 0.1830s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_80, [-0.9159362316131592,1.0726258754730225]=>[-0.36421903638089487,0.1850161977979384] (2,-1; 9,-1), time: 23.1211s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_13, [-0.6854051351547241,0.8371748924255371]=>[-0.27176208218081954,0.09571852474783933] (2,-1; 9,-1), time: 23.1583s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_40, [-0.17811572551727295,2.044567108154297]=>[1e-05,2.044567108154297] (15,-1; -1,-1), time: 0.1821s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_69, [-1.275331974029541,0.5827289819717407]=>[-1.275331974029541,-1e-05] (-1,-1; 15,-1), time: 0.1792s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_6, [-0.24293279647827148,2.291341781616211]=>[1e-05,2.291341781616211] (15,-1; -1,-1), time: 0.1920s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_38, [-0.8600412607192993,1.2709237337112427]=>[-0.21385899654543697,0.4129924371899942] (2,-1; 9,-1), time: 22.9794s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_25, [-1.1874620914459229,0.5235856175422668]=>[-0.4407075535497847,0.054522825196466965] (2,-1; 9,-1), time: 24.9874s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_68, [-1.2855316400527954,0.5576331615447998]=>[-1.2855316400527954,-1e-05] (-1,-1; 15,-1), time: 2.3656s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_26, [-1.7962546348571777,0.024802565574645996]=>[-1.7962546348571777,-1e-05] (-1,-1; 15,-1), time: 0.1982s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_93, [-0.2414364218711853,1.9750120639801025]=>[1e-05,1.9750120639801025] (15,-1; -1,-1), time: 0.1834s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_60, [-0.0842469334602356,1.9652454853057861]=>[1e-05,1.9652454853057861] (15,-1; -1,-1), time: 0.1840s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_32, [-1.583550214767456,1.0312117338180542]=>[-1.583550214767456,-1e-05] (-1,-1; 15,-1), time: 3.8886s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_22, [-0.8689021468162537,1.7298614978790283]=>[1e-05,1.7298614978790283] (15,-1; -1,-1), time: 1.2618s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_8, [-0.5367196202278137,1.3435438871383667]=>[1e-05,1.3435438871383667] (15,-1; -1,-1), time: 0.1895s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_62, [-1.3902639150619507,0.6242455840110779]=>[-1.3902639150619507,-1e-05] (-1,-1; 15,-1), time: 0.3373s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_5, [-0.7995194792747498,0.8468759059906006]=>[-0.17422455124578987,0.2552970617044839] (9,-1; 9,-1), time: 30.0064s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_55, [-1.0299773216247559,0.9393653273582458]=>[-0.29488607580459386,0.20233710560381118] (9,-1; 9,-1), time: 30.0065s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_53, [-0.04857432842254639,2.66322660446167]=>[1e-05,2.66322660446167] (15,-1; -1,-1), time: 0.1915s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_44, [-0.27542203664779663,1.6835877895355225]=>[1e-05,1.6835877895355225] (15,-1; -1,-1), time: 0.1812s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_41, [-0.4230261445045471,1.7971248626708984]=>[1e-05,1.7971248626708984] (15,-1; -1,-1), time: 0.1894s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_27, [-0.8607509136199951,1.0357528924942017]=>[-0.1797606079290333,0.37984968979196515] (9,-1; 9,-1), time: 30.0150s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_63, [-0.04828977584838867,2.8054614067077637]=>[1e-05,2.8054614067077637] (15,-1; -1,-1), time: 0.1844s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_51, [-1.74173903465271,0.01677870750427246]=>[-1.74173903465271,-1e-05] (-1,-1; 15,-1), time: 0.1891s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_90, [-0.5138364434242249,1.1059131622314453]=>[-0.05839463557403908,0.48374239915945566] (2,-1; 9,-1), time: 18.6047s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_66, [-0.7351000905036926,0.9144014120101929]=>[-0.06858366837754457,0.4134997970161093] (9,-1; 9,-1), time: 30.0127s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_75, [-0.7631425261497498,1.358096957206726]=>[1e-05,1.358096957206726] (15,-1; -1,-1), time: 13.3706s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_43, [-1.0589330196380615,0.69577956199646]=>[-0.18437371049979348,0.22783588626181656] (9,-1; 9,-1), time: 30.0046s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_2, [-1.1968269348144531,0.706436812877655]=>[-0.5232287844837121,0.025160200690540813] (9,-1; 2,-1), time: 27.5497s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_96, [-0.6663698554039001,1.0256377458572388]=>[-0.005037946989288086,0.4129810921101302] (2,-1; 9,-1), time: 29.9812s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_4, [-1.1094062328338623,0.8563723564147949]=>[-0.43464841536163784,0.10030993024929766] (2,-1; 9,-1), time: 18.5261s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_0, [-1.1080832481384277,1.0215070247650146]=>[-0.35112397610564666,0.3055146770918494] (9,-1; 2,-1), time: 20.7521s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_84, [-0.9494884610176086,0.6087226867675781]=>[-0.24625606211392348,0.18645345236050087] (9,-1; 2,-1), time: 20.3396s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_65, [-1.11592698097229,1.0607918500900269]=>[-0.213762168612973,0.49963153441778774] (9,-1; 2,-1), time: 22.5628s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_33, [-0.6717413663864136,1.2659542560577393]=>[-0.19334308246424337,0.4066164150450085] (9,-1; 2,-1), time: 19.5945s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_34, [-0.9047091007232666,0.8558627367019653]=>[-0.20642959260115679,0.279065256810029] (9,-1; 9,-1), time: 30.0031s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_64, [-0.7489637732505798,1.2988686561584473]=>[-0.15925359257419575,0.4232051761745257] (9,-1; 9,-1), time: 30.0073s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_88, [-0.8116408586502075,1.2020759582519531]=>[-0.1656801241032928,0.5801426959577267] (9,-1; 9,-1), time: 30.0102s, #vars: 1353, #constrs: 652, improved: True
Solving MIP for lay8_59, [-1.4002817869186401,1.307990312576294]=>[-0.5043206310101465,0.29889374562507176] (9,-1; 9,-1), time: 30.0038s, #vars: 1353, #constrs: 652, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 12.351105690002441 with beta sum per layer: []
optimal alpha/beta time: 13.959582090377808
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.2968, -0.1225, -0.8431, -1.1578, -2.1455, -3.6654,  0.3011, -3.2990,
         -0.1221]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 83 nodes out of 83 unstable nodes, lb improved 22.313289642333984, ub improved 35.48271179199219, time 61.1286
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_99', 'lay10_24', 'lay10_70', 'lay10_36', 'lay10_50', 'lay10_42', 'lay10_49', 'lay10_43', 'lay10_12', 'lay10_8', 'lay10_88', 'lay10_71', 'lay10_13', 'lay10_20', 'lay10_9', 'lay10_48', 'lay10_21', 'lay10_93', 'lay10_85', 'lay10_58', 'lay10_89', 'lay10_3', 'lay10_96', 'lay10_16', 'lay10_79', 'lay10_28', 'lay10_65', 'lay10_80', 'lay10_98', 'lay10_87', 'lay10_69', 'lay10_26', 'lay10_75', 'lay10_30', 'lay10_41', 'lay10_2', 'lay10_33', 'lay10_18', 'lay10_84', 'lay10_15', 'lay10_34', 'lay10_6', 'lay10_25', 'lay10_38', 'lay10_77', 'lay10_68', 'lay10_52', 'lay10_86', 'lay10_44', 'lay10_97', 'lay10_92', 'lay10_82', 'lay10_10', 'lay10_31', 'lay10_83', 'lay10_45', 'lay10_78', 'lay10_91', 'lay10_7', 'lay10_64', 'lay10_0', 'lay10_73', 'lay10_17', 'lay10_1', 'lay10_60', 'lay10_4', 'lay10_61', 'lay10_95', 'lay10_47', 'lay10_59', 'lay10_37', 'lay10_81', 'lay10_76', 'lay10_53', 'lay10_46', 'lay10_40', 'lay10_72', 'lay10_90', 'lay10_94', 'lay10_29', 'lay10_51', 'lay10_67', 'lay10_14', 'lay10_66', 'lay10_74', 'lay10_63', 'lay10_39', 'lay10_22', 'lay10_27', 'lay10_62', 'lay10_32', 'lay10_54', 'lay10_57', 'lay10_35', 'lay10_5', 'lay10_19', 'lay10_55', 'lay10_11', 'lay10_56', 'lay10_23'] filter: 1.0
Solving MIP for lay10_24, [-1.8404567241668701,1.1247401237487793]=>[-1.8404567241668701,-1e-05] (-1,-1; 15,-1), time: 0.2539s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_13, [-0.9532727003097534,3.185187578201294]=>[1e-05,3.185187578201294] (15,-1; -1,-1), time: 0.2565s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_12, [-1.008030891418457,2.409038543701172]=>[1e-05,2.409038543701172] (15,-1; -1,-1), time: 0.2588s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_50, [-2.668635129928589,1.4689016342163086]=>[-2.668635129928589,-1e-05] (-1,-1; 15,-1), time: 0.2628s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_49, [-3.968061923980713,1.1305525302886963]=>[-3.968061923980713,-1e-05] (-1,-1; 15,-1), time: 0.2654s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_88, [-1.5385816097259521,0.8333126306533813]=>[-1.5385816097259521,-1e-05] (-1,-1; 15,-1), time: 0.2656s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_8, [-3.2962470054626465,0.6121385097503662]=>[-3.2962470054626465,-1e-05] (-1,-1; 15,-1), time: 0.2682s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_71, [-0.8335103392601013,1.6319904327392578]=>[1e-05,1.6319904327392578] (15,-1; -1,-1), time: 0.2723s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_43, [-1.7780206203460693,1.5678609609603882]=>[-1.7780206203460693,-1e-05] (-1,-1; 15,-1), time: 0.2743s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_9, [-1.7078869342803955,0.89083331823349]=>[-1.7078869342803955,-1e-05] (-1,-1; 15,-1), time: 0.2803s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_48, [-2.2354395389556885,1.1054999828338623]=>[-2.2354395389556885,-1e-05] (-1,-1; 15,-1), time: 0.3323s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_93, [-1.7551448345184326,0.9019811153411865]=>[-1.7551448345184326,-1e-05] (-1,-1; 15,-1), time: 0.2485s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_85, [-2.728429079055786,0.5270677804946899]=>[-2.728429079055786,-1e-05] (-1,-1; 15,-1), time: 0.2496s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_58, [-4.158281326293945,0.37450265884399414]=>[-4.158281326293945,-1e-05] (-1,-1; 15,-1), time: 0.2498s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_89, [-2.3403608798980713,0.6332418918609619]=>[-2.3403608798980713,-1e-05] (-1,-1; 15,-1), time: 0.2654s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_96, [-1.461086630821228,0.9938002824783325]=>[-1.461086630821228,-1e-05] (-1,-1; 15,-1), time: 0.2711s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_79, [-1.013688564300537,2.3296711444854736]=>[1e-05,2.3296711444854736] (15,-1; -1,-1), time: 0.2765s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_65, [-0.5927278995513916,3.8772449493408203]=>[1e-05,3.8772449493408203] (15,-1; -1,-1), time: 0.2550s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_80, [-1.0271247625350952,3.464238166809082]=>[1e-05,3.464238166809082] (15,-1; -1,-1), time: 0.2298s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_87, [-2.475048542022705,0.6606787443161011]=>[-2.475048542022705,-1e-05] (-1,-1; 15,-1), time: 0.2309s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_69, [-3.423978328704834,0.5152044296264648]=>[-3.423978328704834,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_26, [-0.8091030120849609,3.2952077388763428]=>[1e-05,3.2952077388763428] (15,-1; -1,-1), time: 0.2507s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_75, [-1.9822378158569336,0.6866772174835205]=>[-1.9822378158569336,-1e-05] (-1,-1; 15,-1), time: 0.2548s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_30, [-0.852522611618042,4.718761444091797]=>[1e-05,4.718761444091797] (15,-1; -1,-1), time: 0.2310s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_70, [-1.1100850105285645,1.6977980136871338]=>[1e-05,1.6977980136871338] (15,-1; -1,-1), time: 0.8723s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_41, [-0.7036736011505127,3.6874008178710938]=>[1e-05,3.6874008178710938] (15,-1; -1,-1), time: 0.2266s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_33, [-1.1344603300094604,3.0264389514923096]=>[1e-05,3.0264389514923096] (15,-1; -1,-1), time: 0.2589s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_18, [-1.5738308429718018,0.7991447448730469]=>[-1.5738308429718018,-1e-05] (-1,-1; 15,-1), time: 0.2663s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_84, [-2.282386302947998,0.9150291681289673]=>[-2.282386302947998,-1e-05] (-1,-1; 15,-1), time: 0.2567s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_6, [-1.1264244318008423,1.903893232345581]=>[1e-05,1.903893232345581] (15,-1; -1,-1), time: 0.2516s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_20, [-1.4892936944961548,1.053412914276123]=>[-1.4892936944961548,-1e-05] (-1,-1; 15,-1), time: 1.2603s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_25, [-1.8398969173431396,1.1318604946136475]=>[-1.8398969173431396,-1e-05] (-1,-1; 15,-1), time: 0.2443s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_52, [-2.2065725326538086,0.7623557448387146]=>[-2.2065725326538086,-1e-05] (-1,-1; 15,-1), time: 0.2412s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_86, [-3.8676514625549316,0.4849889278411865]=>[-3.8676514625549316,-1e-05] (-1,-1; 15,-1), time: 0.2289s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_97, [-1.1481409072875977,2.4107859134674072]=>[1e-05,2.4107859134674072] (15,-1; -1,-1), time: 0.1917s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_44, [-3.3852314949035645,1.1614506244659424]=>[-3.3852314949035645,-1e-05] (-1,-1; 15,-1), time: 0.2326s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_82, [-2.253540515899658,0.595296323299408]=>[-2.253540515899658,-1e-05] (-1,-1; 15,-1), time: 0.2371s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_38, [-1.6851986646652222,1.1165306568145752]=>[-1.6851986646652222,-1e-05] (-1,-1; 15,-1), time: 1.0462s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_10, [-3.258162021636963,1.2663416862487793]=>[-3.258162021636963,-1e-05] (-1,-1; 15,-1), time: 0.2256s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_31, [-0.9795877933502197,1.780998945236206]=>[1e-05,1.780998945236206] (15,-1; -1,-1), time: 0.2471s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_83, [-2.022017240524292,0.7611749172210693]=>[-2.022017240524292,-1e-05] (-1,-1; 15,-1), time: 0.2402s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_45, [-2.968456745147705,0.3457072973251343]=>[-2.968456745147705,-1e-05] (-1,-1; 15,-1), time: 0.2268s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_78, [-1.8940197229385376,0.4772289991378784]=>[-1.8940197229385376,-1e-05] (-1,-1; 15,-1), time: 0.2333s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_91, [-0.06037116050720215,4.543939590454102]=>[1e-05,4.543939590454102] (15,-1; -1,-1), time: 0.2333s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_7, [-3.2426154613494873,0.20201802253723145]=>[-3.2426154613494873,-1e-05] (-1,-1; 15,-1), time: 0.2252s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_64, [-2.4134230613708496,0.5465847253799438]=>[-2.4134230613708496,-1e-05] (-1,-1; 15,-1), time: 0.2153s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_73, [-2.928062915802002,0.752123236656189]=>[-2.928062915802002,-1e-05] (-1,-1; 15,-1), time: 0.2146s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_17, [-2.10634708404541,1.63815438747406]=>[-2.10634708404541,-1e-05] (-1,-1; 15,-1), time: 0.2096s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_1, [-0.2639596462249756,3.064474582672119]=>[1e-05,3.064474582672119] (15,-1; -1,-1), time: 0.2094s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_60, [-3.246774911880493,0.5880863666534424]=>[-3.246774911880493,-1e-05] (-1,-1; 15,-1), time: 0.2149s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_36, [-1.6611518859863281,1.2855584621429443]=>[-1.6611518859863281,-1e-05] (-1,-1; 15,-1), time: 4.1321s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_61, [-0.7715694904327393,2.090963363647461]=>[1e-05,2.090963363647461] (15,-1; -1,-1), time: 0.2076s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_95, [-2.0619285106658936,0.717953622341156]=>[-2.0619285106658936,-1e-05] (-1,-1; 15,-1), time: 0.2067s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_99, [-2.0169260501861572,2.24991774559021]=>[-1.208266616553556,-1e-05] (2,-1; 15,-1), time: 5.1661s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_59, [-2.8524317741394043,0.4707525372505188]=>[-2.8524317741394043,-1e-05] (-1,-1; 15,-1), time: 0.2110s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_68, [-1.1300337314605713,1.3242464065551758]=>[1e-05,1.3242464065551758] (15,-1; -1,-1), time: 4.2912s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_81, [-2.4369606971740723,0.5791392922401428]=>[-2.4369606971740723,-1e-05] (-1,-1; 15,-1), time: 0.2107s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_15, [-1.7942605018615723,1.1937189102172852]=>[-1.7942605018615723,-1e-05] (-1,-1; 15,-1), time: 5.1968s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_0, [-1.9758974313735962,0.8583056330680847]=>[-1.9758974313735962,-1e-05] (-1,-1; 15,-1), time: 3.1448s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_53, [-1.8169045448303223,0.9162337183952332]=>[-1.8169045448303223,-1e-05] (-1,-1; 15,-1), time: 0.2036s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_76, [-1.2406837940216064,1.4205816984176636]=>[1e-05,1.4205816984176636] (15,-1; -1,-1), time: 0.5342s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_46, [-1.4161473512649536,2.291365623474121]=>[1e-05,2.291365623474121] (15,-1; -1,-1), time: 0.2089s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_40, [-1.1408008337020874,2.4121475219726562]=>[1e-05,2.4121475219726562] (15,-1; -1,-1), time: 0.1962s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_72, [-0.5514259338378906,4.028789520263672]=>[1e-05,4.028789520263672] (15,-1; -1,-1), time: 0.2047s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_90, [-2.5934417247772217,0.9492385983467102]=>[-2.5934417247772217,-1e-05] (-1,-1; 15,-1), time: 0.2053s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_29, [-2.1996419429779053,0.8962961435317993]=>[-2.1996419429779053,-1e-05] (-1,-1; 15,-1), time: 0.2017s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_2, [-1.591912031173706,1.161158561706543]=>[-1.591912031173706,-1e-05] (-1,-1; 15,-1), time: 6.0951s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_67, [-0.5065025091171265,2.7878036499023438]=>[1e-05,2.7878036499023438] (15,-1; -1,-1), time: 0.2027s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_14, [-1.1232776641845703,2.5403199195861816]=>[1e-05,2.5403199195861816] (15,-1; -1,-1), time: 0.2157s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_66, [-3.2654576301574707,0.6309722661972046]=>[-3.2654576301574707,-1e-05] (-1,-1; 15,-1), time: 0.2077s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_74, [-2.0141029357910156,1.3330347537994385]=>[-2.0141029357910156,-1e-05] (-1,-1; 15,-1), time: 0.2110s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_63, [-0.8761551380157471,2.365584373474121]=>[1e-05,2.365584373474121] (15,-1; -1,-1), time: 0.2124s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_22, [-0.6856834292411804,2.4830691814422607]=>[1e-05,2.4830691814422607] (15,-1; -1,-1), time: 0.2113s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_47, [-1.468131184577942,1.4756594896316528]=>[1e-05,1.4756594896316528] (15,-1; -1,-1), time: 6.7174s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_62, [-0.7892012596130371,3.0470497608184814]=>[1e-05,3.0470497608184814] (15,-1; -1,-1), time: 0.2076s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_32, [-1.8358547687530518,0.5963612794876099]=>[-1.8358547687530518,-1e-05] (-1,-1; 15,-1), time: 0.2099s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_54, [-1.2114638090133667,1.3519177436828613]=>[1e-05,1.3519177436828613] (15,-1; -1,-1), time: 0.2134s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_37, [-1.3455218076705933,1.6199570894241333]=>[1e-05,1.6199570894241333] (15,-1; -1,-1), time: 9.3085s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_98, [-1.230804681777954,1.185739278793335]=>[1e-05,0.3730568293604711] (15,-1; 9,-1), time: 18.9636s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_16, [-1.404949426651001,1.520930290222168]=>[-0.7308079986666406,0.002901796006374104] (2,-1; 9,-1), time: 19.3177s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_5, [-1.0994921922683716,2.2849578857421875]=>[1e-05,2.2849578857421875] (15,-1; -1,-1), time: 0.2091s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_19, [-0.7085475921630859,2.6735153198242188]=>[1e-05,2.6735153198242188] (15,-1; -1,-1), time: 0.2054s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_55, [-1.5120482444763184,0.8881018161773682]=>[-1.5120482444763184,-1e-05] (-1,-1; 15,-1), time: 0.1983s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_56, [-2.2642760276794434,1.0796555280685425]=>[-2.2642760276794434,-1e-05] (-1,-1; 15,-1), time: 0.2050s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_23, [-0.0500866174697876,3.9332327842712402]=>[1e-05,3.9332327842712402] (15,-1; -1,-1), time: 0.1979s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_92, [-1.4682005643844604,0.9087159633636475]=>[-0.46749096645357563,0.019503868266795184] (2,-1; 9,-1), time: 27.8967s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_42, [-1.5537643432617188,1.2912390232086182]=>[-0.3533297874772111,0.042875800671658464] (9,-1; 9,-1), time: 30.0035s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_21, [-1.2431528568267822,1.254786491394043]=>[-0.3738530308721744,0.009767102494991346] (9,-1; 9,-1), time: 30.0061s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_3, [-1.263365626335144,1.0052423477172852]=>[-0.33889840364439855,0.029802189070823323] (9,-1; 9,-1), time: 30.0147s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_28, [-1.8721089363098145,1.0573410987854004]=>[-0.3651742143730569,0.14150371779885992] (9,-1; 9,-1), time: 30.0072s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_34, [-1.3570610284805298,1.6857342720031738]=>[-0.34182690419155315,0.15936170752347184] (9,-1; 9,-1), time: 30.0164s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_77, [-1.3537338972091675,1.947375774383545]=>[-0.29081575659101766,0.30285956686106225] (9,-1; 9,-1), time: 30.0080s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_94, [-1.7367318868637085,1.0613038539886475]=>[-0.3237012206649705,0.13511708360737337] (9,-1; 2,-1), time: 25.1890s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_4, [-1.467633843421936,0.8928091526031494]=>[-0.2887463753923795,0.07215315978661754] (9,-1; 9,-1), time: 30.0035s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_51, [-1.2827757596969604,2.052122116088867]=>[-0.1384253502037077,0.4158028529174597] (9,-1; 9,-1), time: 30.0042s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_39, [-1.598152756690979,1.037248969078064]=>[-0.42771852491827556,0.06051030638191533] (9,-1; 9,-1), time: 30.0081s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_27, [-1.7455470561981201,1.393083095550537]=>[-0.4073132053702914,0.05066542783727983] (9,-1; 9,-1), time: 30.0091s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_57, [-1.6563382148742676,1.480197787284851]=>[-0.21280482269141424,0.2887147464448752] (9,-1; 9,-1), time: 30.0048s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_35, [-1.29909348487854,1.3887311220169067]=>[-0.24186602451441208,0.2116886682487313] (9,-1; 9,-1), time: 30.0081s, #vars: 1503, #constrs: 827, improved: True
Solving MIP for lay10_11, [-1.3401485681533813,1.9604696035385132]=>[-0.39719842641617964,0.3345698986897014] (9,-1; 9,-1), time: 30.0035s, #vars: 1503, #constrs: 827, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: -15.630617141723633 with beta sum per layer: []
optimal alpha/beta time: 14.794739007949829
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.4294,  2.4401,  2.1111,  1.4719,  1.8430, -0.6929,  3.0493,  0.4651,
          3.5135]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 49.71400451660156, ub improved 64.90360260009766, time 50.2051
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_62', 'lay12_49', 'lay12_50', 'lay12_70', 'lay12_47', 'lay12_93', 'lay12_26', 'lay12_86', 'lay12_80', 'lay12_5', 'lay12_69', 'lay12_27', 'lay12_99', 'lay12_71', 'lay12_53', 'lay12_15', 'lay12_40', 'lay12_34', 'lay12_20', 'lay12_51', 'lay12_74', 'lay12_61', 'lay12_3', 'lay12_72', 'lay12_58', 'lay12_66', 'lay12_78', 'lay12_57', 'lay12_41', 'lay12_35', 'lay12_85', 'lay12_36', 'lay12_37', 'lay12_75', 'lay12_2', 'lay12_7', 'lay12_23', 'lay12_94', 'lay12_43', 'lay12_19', 'lay12_30', 'lay12_97', 'lay12_76', 'lay12_88', 'lay12_33', 'lay12_4', 'lay12_54', 'lay12_65', 'lay12_38', 'lay12_16', 'lay12_28', 'lay12_10', 'lay12_64', 'lay12_90', 'lay12_12', 'lay12_18', 'lay12_13', 'lay12_92', 'lay12_0', 'lay12_24', 'lay12_84', 'lay12_52', 'lay12_29', 'lay12_82', 'lay12_9', 'lay12_21', 'lay12_8', 'lay12_14', 'lay12_63', 'lay12_42', 'lay12_59', 'lay12_77', 'lay12_45', 'lay12_79', 'lay12_55', 'lay12_67', 'lay12_95', 'lay12_1', 'lay12_98', 'lay12_39', 'lay12_83', 'lay12_68', 'lay12_22', 'lay12_11', 'lay12_81', 'lay12_73', 'lay12_89', 'lay12_6', 'lay12_96', 'lay12_31', 'lay12_17', 'lay12_87', 'lay12_48', 'lay12_44', 'lay12_46', 'lay12_91', 'lay12_32', 'lay12_56', 'lay12_25', 'lay12_60'] filter: 1.0
Solving MIP for lay12_50, [-2.489071846008301,4.217308044433594]=>[1e-05,4.217308044433594] (15,-1; -1,-1), time: 0.2867s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_99, [-3.4356348514556885,1.5097618103027344]=>[-3.4356348514556885,-1e-05] (-1,-1; 15,-1), time: 0.2858s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_53, [-3.5097262859344482,3.1048574447631836]=>[-3.5097262859344482,-1e-05] (-1,-1; 15,-1), time: 0.2922s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_93, [-3.180180072784424,2.1496267318725586]=>[-3.180180072784424,-1e-05] (-1,-1; 15,-1), time: 0.2938s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_5, [-3.119539737701416,2.1438188552856445]=>[-3.119539737701416,-1e-05] (-1,-1; 15,-1), time: 0.3017s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_80, [-2.5485894680023193,3.28794002532959]=>[1e-05,3.28794002532959] (15,-1; -1,-1), time: 0.3028s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_49, [-4.442663192749023,2.0416197776794434]=>[-4.442663192749023,-1e-05] (-1,-1; 15,-1), time: 0.3034s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_26, [-3.532668113708496,2.772627115249634]=>[-3.532668113708496,-1e-05] (-1,-1; 15,-1), time: 0.3041s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_69, [-2.780820846557617,2.902503728866577]=>[1e-05,2.902503728866577] (15,-1; -1,-1), time: 0.3073s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_86, [-3.453049659729004,3.1216650009155273]=>[-3.453049659729004,-1e-05] (-1,-1; 15,-1), time: 0.3105s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_15, [-4.100682735443115,3.626310110092163]=>[-4.100682735443115,-1e-05] (-1,-1; 15,-1), time: 0.3324s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_27, [-3.2517597675323486,3.1758012771606445]=>[-3.2517597675323486,-1e-05] (-1,-1; 15,-1), time: 0.5546s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_34, [-2.6710901260375977,3.9176769256591797]=>[1e-05,3.9176769256591797] (15,-1; -1,-1), time: 0.2639s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_40, [-2.8134326934814453,2.749100685119629]=>[-2.8134326934814453,-1e-05] (-1,-1; 15,-1), time: 0.2796s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_51, [-3.1116814613342285,2.396831512451172]=>[-3.1116814613342285,-1e-05] (-1,-1; 15,-1), time: 0.2767s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_20, [-2.379624843597412,2.9409561157226562]=>[1e-05,2.9409561157226562] (15,-1; -1,-1), time: 0.2834s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_58, [-2.0721230506896973,2.688870429992676]=>[1e-05,2.688870429992676] (15,-1; -1,-1), time: 0.2736s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_74, [-3.3345322608947754,1.4081863164901733]=>[-3.3345322608947754,-1e-05] (-1,-1; 15,-1), time: 0.2932s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_61, [-4.459341526031494,1.466745138168335]=>[-4.459341526031494,-1e-05] (-1,-1; 15,-1), time: 0.2947s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_78, [-4.261456489562988,1.4388655424118042]=>[-4.261456489562988,-1e-05] (-1,-1; 15,-1), time: 0.2635s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_3, [-3.319669246673584,2.662015676498413]=>[-3.319669246673584,-1e-05] (-1,-1; 15,-1), time: 0.2991s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_57, [-2.7289364337921143,2.068824291229248]=>[-2.7289364337921143,-1e-05] (-1,-1; 15,-1), time: 0.2684s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_35, [-2.691277027130127,3.553722381591797]=>[1e-05,3.553722381591797] (15,-1; -1,-1), time: 0.2562s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_36, [-3.3408899307250977,2.3808021545410156]=>[-3.3408899307250977,-1e-05] (-1,-1; 15,-1), time: 0.2588s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_41, [-2.3945834636688232,2.5992965698242188]=>[1e-05,2.5992965698242188] (15,-1; -1,-1), time: 0.2851s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_7, [-2.7705352306365967,2.444643259048462]=>[-2.7705352306365967,-1e-05] (-1,-1; 15,-1), time: 0.2593s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_2, [-4.35412073135376,1.630570411682129]=>[-4.35412073135376,-1e-05] (-1,-1; 15,-1), time: 0.2794s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_23, [-2.751779556274414,2.8886168003082275]=>[1e-05,2.8886168003082275] (15,-1; -1,-1), time: 0.3010s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_97, [-2.641143560409546,3.4518346786499023]=>[1e-05,3.4518346786499023] (15,-1; -1,-1), time: 0.2218s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_94, [-3.5627336502075195,2.505084991455078]=>[-3.5627336502075195,-1e-05] (-1,-1; 15,-1), time: 0.2654s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_43, [-3.1784563064575195,2.103687047958374]=>[-3.1784563064575195,-1e-05] (-1,-1; 15,-1), time: 0.2709s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_19, [-3.358433485031128,1.6051552295684814]=>[-3.358433485031128,-1e-05] (-1,-1; 15,-1), time: 0.2684s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_30, [-4.422516822814941,1.6377630233764648]=>[-4.422516822814941,-1e-05] (-1,-1; 15,-1), time: 0.2874s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_76, [-3.0004467964172363,1.828635334968567]=>[-3.0004467964172363,-1e-05] (-1,-1; 15,-1), time: 0.2838s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_4, [-3.659137487411499,3.4791951179504395]=>[-3.659137487411499,-1e-05] (-1,-1; 15,-1), time: 0.2663s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_65, [-3.917264699935913,1.661466121673584]=>[-3.917264699935913,-1e-05] (-1,-1; 15,-1), time: 0.2617s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_38, [-4.098315238952637,1.3742128610610962]=>[-4.098315238952637,-1e-05] (-1,-1; 15,-1), time: 0.2556s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_16, [-3.0597128868103027,1.7532646656036377]=>[-3.0597128868103027,-1e-05] (-1,-1; 15,-1), time: 0.2888s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_28, [-2.4839649200439453,2.6023635864257812]=>[1e-05,2.6023635864257812] (15,-1; -1,-1), time: 0.2623s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_10, [-3.6611452102661133,1.5796773433685303]=>[-3.6611452102661133,-1e-05] (-1,-1; 15,-1), time: 0.2736s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_64, [-1.9678698778152466,2.5827367305755615]=>[1e-05,2.5827367305755615] (15,-1; -1,-1), time: 0.2816s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_90, [-3.6653590202331543,1.8531016111373901]=>[-3.6653590202331543,-1e-05] (-1,-1; 15,-1), time: 0.2751s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_18, [-4.043127536773682,2.954326629638672]=>[-4.043127536773682,-1e-05] (-1,-1; 15,-1), time: 0.2643s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_13, [-4.266862869262695,1.3886109590530396]=>[-4.266862869262695,-1e-05] (-1,-1; 15,-1), time: 0.2635s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_0, [-3.8624014854431152,1.9834985733032227]=>[-3.8624014854431152,-1e-05] (-1,-1; 15,-1), time: 0.2549s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_24, [-3.1621522903442383,5.107505798339844]=>[1e-05,5.107505798339844] (15,-1; -1,-1), time: 0.2521s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_84, [-3.5283844470977783,1.5038866996765137]=>[-3.5283844470977783,-1e-05] (-1,-1; 15,-1), time: 0.2627s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_37, [-2.9975767135620117,2.1943752765655518]=>[1e-05,1.0212963287075119] (15,-1; 2,-1), time: 12.1106s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_82, [-3.4590349197387695,1.848750352859497]=>[-3.4590349197387695,-1e-05] (-1,-1; 15,-1), time: 0.2270s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_9, [-2.9687740802764893,2.33577561378479]=>[-2.9687740802764893,-1e-05] (-1,-1; 15,-1), time: 0.2275s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_21, [-2.9622273445129395,1.9730275869369507]=>[-2.9622273445129395,-1e-05] (-1,-1; 15,-1), time: 0.2363s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_8, [-2.8452162742614746,2.211259603500366]=>[-2.8452162742614746,-1e-05] (-1,-1; 15,-1), time: 0.2334s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_14, [-3.2509827613830566,1.8646389245986938]=>[-3.2509827613830566,-1e-05] (-1,-1; 15,-1), time: 0.2356s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_63, [-2.5023303031921387,5.498596668243408]=>[1e-05,5.498596668243408] (15,-1; -1,-1), time: 0.2263s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_42, [-4.056421756744385,1.4570121765136719]=>[-4.056421756744385,-1e-05] (-1,-1; 15,-1), time: 0.2286s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_72, [-2.8610212802886963,3.2417314052581787]=>[-0.9695770228583125,-1e-05] (9,-1; 15,-1), time: 15.2358s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_77, [-3.396418809890747,1.707471251487732]=>[-3.396418809890747,-1e-05] (-1,-1; 15,-1), time: 0.2305s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_45, [-3.2824857234954834,1.7451128959655762]=>[-3.2824857234954834,-1e-05] (-1,-1; 15,-1), time: 0.2245s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_47, [-2.713052272796631,3.257986068725586]=>[-0.40670143929553165,-1e-05] (9,-1; 15,-1), time: 16.3403s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_55, [-2.9175469875335693,1.914304256439209]=>[-2.9175469875335693,-1e-05] (-1,-1; 15,-1), time: 0.2258s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_67, [-2.869631052017212,2.5990209579467773]=>[-2.869631052017212,-1e-05] (-1,-1; 15,-1), time: 0.2434s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_95, [-2.5708675384521484,3.096548318862915]=>[1e-05,3.096548318862915] (15,-1; -1,-1), time: 0.2297s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_29, [-2.930455446243286,3.1681666374206543]=>[-0.8257356627835312,-1e-05] (9,-1; 15,-1), time: 15.2307s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_98, [-1.9988067150115967,6.849392890930176]=>[1e-05,6.849392890930176] (15,-1; -1,-1), time: 0.2252s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_39, [-3.3444602489471436,1.4710499048233032]=>[-3.3444602489471436,-1e-05] (-1,-1; 15,-1), time: 0.2186s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_83, [-3.5105204582214355,4.613353729248047]=>[1e-05,4.613353729248047] (15,-1; -1,-1), time: 0.2183s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_71, [-2.5546813011169434,2.2886476516723633]=>[-0.16923915246613164,0.07845807898079543] (2,-1; 9,-1), time: 20.8910s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_22, [-3.42254638671875,1.638144850730896]=>[-3.42254638671875,-1e-05] (-1,-1; 15,-1), time: 0.2305s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_79, [-2.969451665878296,2.127729654312134]=>[-2.969451665878296,-1e-05] (-1,-1; 15,-1), time: 5.1282s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_11, [-2.896865129470825,3.392836093902588]=>[1e-05,3.392836093902588] (15,-1; -1,-1), time: 0.2228s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_73, [-3.551804542541504,2.509474992752075]=>[-3.551804542541504,-1e-05] (-1,-1; 15,-1), time: 5.9533s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_89, [-3.9945411682128906,1.7737720012664795]=>[-3.9945411682128906,-1e-05] (-1,-1; 15,-1), time: 0.2210s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_70, [-3.07529878616333,3.8438429832458496]=>[-0.002321231748416865,0.6789542142067703] (9,-1; 9,-1), time: 30.0056s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_62, [-2.7133991718292236,3.2812647819519043]=>[-0.043460325648801014,0.25159588346955003] (9,-1; 9,-1), time: 30.0085s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_31, [-1.7497872114181519,4.065722465515137]=>[1e-05,4.065722465515137] (15,-1; -1,-1), time: 0.2209s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_66, [-2.9643683433532715,3.0167529582977295]=>[-0.5399738719256999,0.1720010881420063] (9,-1; 9,-1), time: 30.0088s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_17, [-3.0029966831207275,2.2447073459625244]=>[-3.0029966831207275,-1e-05] (-1,-1; 15,-1), time: 0.2250s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_87, [-1.3943204879760742,5.178074836730957]=>[1e-05,5.178074836730957] (15,-1; -1,-1), time: 0.2297s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_85, [-2.843968629837036,2.9556524753570557]=>[-0.22367300283857935,0.062277590091665495] (9,-1; 9,-1), time: 30.0064s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_75, [-2.881485939025879,3.2427873611450195]=>[-0.04725215305304877,0.41135409280799357] (9,-1; 9,-1), time: 30.0042s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_44, [-3.8762524127960205,2.001579999923706]=>[-3.8762524127960205,-1e-05] (-1,-1; 15,-1), time: 0.2252s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_88, [-2.3751213550567627,3.206056833267212]=>[-0.2022725186657219,0.39803375378722844] (9,-1; 9,-1), time: 30.0067s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_32, [-3.023345947265625,2.28574800491333]=>[-3.023345947265625,-1e-05] (-1,-1; 15,-1), time: 0.2304s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_33, [-3.2482409477233887,2.2586402893066406]=>[-0.31710360053632625,0.06426245675743879] (9,-1; 9,-1), time: 30.0110s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_54, [-3.1201207637786865,2.4823501110076904]=>[-0.18664013188453926,0.25399463101754277] (9,-1; 9,-1), time: 30.0082s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_56, [-3.311072826385498,1.3833470344543457]=>[-3.311072826385498,-1e-05] (-1,-1; 15,-1), time: 0.2226s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_60, [-2.1408913135528564,3.778212308883667]=>[1e-05,3.778212308883667] (15,-1; -1,-1), time: 0.2221s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_12, [-2.831908702850342,2.062234401702881]=>[-0.14947179597523272,0.07694695622894746] (9,-1; 9,-1), time: 30.0026s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_92, [-2.547457218170166,2.030721426010132]=>[-0.12532582101972212,0.16187101185782535] (9,-1; 9,-1), time: 30.0606s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_52, [-2.5128371715545654,2.680204391479492]=>[-0.10152482637057118,0.20137499557161978] (9,-1; 9,-1), time: 30.0099s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_6, [-3.1297197341918945,1.9633514881134033]=>[-3.1297197341918945,-1e-05] (-1,-1; 15,-1), time: 6.7862s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_81, [-2.9293792247772217,3.02325177192688]=>[-0.8568851510207974,-1e-05] (9,-1; 15,-1), time: 15.3866s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_59, [-3.160717487335205,3.5138156414031982]=>[-0.15036941099714562,0.5911197440806918] (9,-1; 9,-1), time: 30.0140s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_91, [-2.5687546730041504,2.7044413089752197]=>[-0.6940275355909574,-1e-05] (9,-1; 15,-1), time: 15.2280s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_1, [-3.170203447341919,3.001828670501709]=>[-0.6000910942142059,0.012380896375737126] (9,-1; 9,-1), time: 30.0088s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_68, [-2.557471752166748,3.170398712158203]=>[-0.40372621571581996,0.1279515667424091] (9,-1; 9,-1), time: 30.0047s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_25, [-3.1137325763702393,2.85697603225708]=>[1e-05,0.4314940371534359] (15,-1; 9,-1), time: 19.2638s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_96, [-3.003571033477783,2.545405387878418]=>[-0.4307697028248578,0.014508759778775221] (9,-1; 9,-1), time: 30.0036s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_48, [-2.7078700065612793,3.2163569927215576]=>[-0.3890911150275953,0.09664001717309127] (9,-1; 9,-1), time: 30.0091s, #vars: 1635, #constrs: 975, improved: True
Solving MIP for lay12_46, [-2.6880998611450195,3.3412680625915527]=>[-0.3756341580910287,0.1498614077873872] (9,-1; 9,-1), time: 30.0048s, #vars: 1635, #constrs: 975, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -19.21438217163086 with beta sum per layer: []
optimal alpha/beta time: 14.6782808303833
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.8205,  2.7230,  2.4396,  1.8439,  2.3169, -0.3055,  3.3581,  1.0189,
          3.9990]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 114.65863037109375, ub improved 179.88888549804688, time 60.9961
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_65', 'lay14_67', 'lay14_22', 'lay14_91', 'lay14_41', 'lay14_97', 'lay14_73', 'lay14_1', 'lay14_71', 'lay14_68', 'lay14_95', 'lay14_4', 'lay14_35', 'lay14_14', 'lay14_89', 'lay14_18', 'lay14_27', 'lay14_57', 'lay14_78', 'lay14_88', 'lay14_81', 'lay14_40', 'lay14_19', 'lay14_31', 'lay14_3', 'lay14_47', 'lay14_44', 'lay14_84', 'lay14_87', 'lay14_79', 'lay14_51', 'lay14_25', 'lay14_36', 'lay14_5', 'lay14_20', 'lay14_86', 'lay14_52', 'lay14_96', 'lay14_82', 'lay14_38', 'lay14_26', 'lay14_59', 'lay14_46', 'lay14_0', 'lay14_50', 'lay14_64', 'lay14_43', 'lay14_10', 'lay14_75', 'lay14_63', 'lay14_42', 'lay14_34', 'lay14_9', 'lay14_23', 'lay14_11', 'lay14_39', 'lay14_29', 'lay14_30', 'lay14_70', 'lay14_49', 'lay14_54', 'lay14_83', 'lay14_53', 'lay14_60', 'lay14_76', 'lay14_80', 'lay14_72', 'lay14_37', 'lay14_69', 'lay14_28', 'lay14_15', 'lay14_7', 'lay14_45', 'lay14_8', 'lay14_17', 'lay14_74', 'lay14_12', 'lay14_48', 'lay14_21', 'lay14_58', 'lay14_55', 'lay14_77', 'lay14_85', 'lay14_92', 'lay14_62', 'lay14_94', 'lay14_24', 'lay14_13', 'lay14_16', 'lay14_33', 'lay14_66', 'lay14_98', 'lay14_61', 'lay14_93', 'lay14_2', 'lay14_90', 'lay14_6', 'lay14_32', 'lay14_56', 'lay14_99'] filter: 1.0
Solving MIP for lay14_41, [-4.769394397735596,7.655494689941406]=>[1e-05,7.655494689941406] (15,-1; -1,-1), time: 0.3119s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_22, [-7.057590484619141,5.742343425750732]=>[-7.057590484619141,-1e-05] (-1,-1; 15,-1), time: 0.3154s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_35, [-5.879511833190918,7.434657096862793]=>[1e-05,7.434657096862793] (15,-1; -1,-1), time: 0.3268s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_4, [-5.4785990715026855,5.900825500488281]=>[1e-05,5.900825500488281] (15,-1; -1,-1), time: 0.3295s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_71, [-6.6619415283203125,5.290327072143555]=>[-6.6619415283203125,-1e-05] (-1,-1; 15,-1), time: 0.3330s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_91, [-6.684638977050781,6.3629302978515625]=>[-6.684638977050781,-1e-05] (-1,-1; 15,-1), time: 0.3342s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_1, [-5.960702419281006,4.729599475860596]=>[-5.960702419281006,-1e-05] (-1,-1; 15,-1), time: 0.3362s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_67, [-4.900509834289551,7.477267265319824]=>[1e-05,7.477267265319824] (15,-1; -1,-1), time: 0.3372s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_89, [-5.394460201263428,6.304687976837158]=>[1e-05,6.304687976837158] (15,-1; -1,-1), time: 0.3386s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_97, [-4.565983295440674,6.718574047088623]=>[1e-05,6.718574047088623] (15,-1; -1,-1), time: 0.3416s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_78, [-5.989786148071289,7.51340389251709]=>[1e-05,7.51340389251709] (15,-1; -1,-1), time: 0.2883s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_27, [-6.621188640594482,5.278260231018066]=>[-6.621188640594482,-1e-05] (-1,-1; 15,-1), time: 0.3223s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_88, [-5.697689533233643,4.612783432006836]=>[-5.697689533233643,-1e-05] (-1,-1; 15,-1), time: 0.3043s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_3, [-5.706925392150879,5.461885452270508]=>[-5.706925392150879,-1e-05] (-1,-1; 15,-1), time: 0.2962s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_31, [-5.564091205596924,6.022131443023682]=>[1e-05,6.022131443023682] (15,-1; -1,-1), time: 0.3104s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_47, [-5.978906154632568,5.286532878875732]=>[-5.978906154632568,-1e-05] (-1,-1; 15,-1), time: 0.3084s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_40, [-4.852754592895508,7.507242202758789]=>[1e-05,7.507242202758789] (15,-1; -1,-1), time: 0.3190s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_19, [-6.749043941497803,4.063279628753662]=>[-6.749043941497803,-1e-05] (-1,-1; 15,-1), time: 0.3188s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_79, [-7.281102180480957,5.98475456237793]=>[-7.281102180480957,-1e-05] (-1,-1; 15,-1), time: 0.2863s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_44, [-5.208074569702148,5.824832439422607]=>[1e-05,5.824832439422607] (15,-1; -1,-1), time: 0.3132s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_84, [-5.781490802764893,5.883327484130859]=>[1e-05,5.883327484130859] (15,-1; -1,-1), time: 0.2970s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_87, [-5.987968921661377,6.008639812469482]=>[1e-05,6.008639812469482] (15,-1; -1,-1), time: 0.3327s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_5, [-6.628922939300537,8.57645320892334]=>[1e-05,8.57645320892334] (15,-1; -1,-1), time: 0.3166s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_20, [-5.321427345275879,6.606744289398193]=>[1e-05,6.606744289398193] (15,-1; -1,-1), time: 0.2989s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_86, [-6.84987735748291,5.331042766571045]=>[-6.84987735748291,-1e-05] (-1,-1; 15,-1), time: 0.3142s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_52, [-6.638646125793457,4.969032287597656]=>[-6.638646125793457,-1e-05] (-1,-1; 15,-1), time: 0.3220s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_96, [-6.4469475746154785,7.564068794250488]=>[1e-05,7.564068794250488] (15,-1; -1,-1), time: 0.3045s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_82, [-6.2681074142456055,5.526985168457031]=>[-6.2681074142456055,-1e-05] (-1,-1; 15,-1), time: 0.3141s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_26, [-6.054226398468018,5.315042972564697]=>[-6.054226398468018,-1e-05] (-1,-1; 15,-1), time: 0.2552s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_59, [-5.725852012634277,5.866550922393799]=>[1e-05,5.866550922393799] (15,-1; -1,-1), time: 0.2838s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_46, [-7.127011775970459,4.690271854400635]=>[-7.127011775970459,-1e-05] (-1,-1; 15,-1), time: 0.2725s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_0, [-5.137050628662109,5.670046329498291]=>[1e-05,5.670046329498291] (15,-1; -1,-1), time: 0.3217s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_50, [-6.438942909240723,4.456198692321777]=>[-6.438942909240723,-1e-05] (-1,-1; 15,-1), time: 0.2720s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_43, [-5.861650466918945,5.121645927429199]=>[-5.861650466918945,-1e-05] (-1,-1; 15,-1), time: 0.2696s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_63, [-6.135993003845215,6.413015842437744]=>[1e-05,6.413015842437744] (15,-1; -1,-1), time: 0.2574s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_42, [-5.069080829620361,6.0656328201293945]=>[1e-05,6.0656328201293945] (15,-1; -1,-1), time: 0.2697s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_34, [-6.86981725692749,4.388926029205322]=>[-6.86981725692749,-1e-05] (-1,-1; 15,-1), time: 0.2926s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_9, [-6.5758280754089355,4.899160861968994]=>[-6.5758280754089355,-1e-05] (-1,-1; 15,-1), time: 0.3031s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_23, [-4.893177032470703,6.375126838684082]=>[1e-05,6.375126838684082] (15,-1; -1,-1), time: 0.2911s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_11, [-8.221637725830078,5.7405290603637695]=>[-8.221637725830078,-1e-05] (-1,-1; 15,-1), time: 0.2577s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_10, [-6.35418176651001,6.288384914398193]=>[1e-05,2.3875754260444975] (15,-1; 2,-1), time: 4.2575s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_57, [-6.855648517608643,4.046339988708496]=>[-6.855648517608643,-1e-05] (-1,-1; 15,-1), time: 5.7965s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_51, [-6.055722713470459,5.4599761962890625]=>[1e-05,2.3676285149705016] (15,-1; 2,-1), time: 8.0752s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_70, [-6.162380218505859,6.039093494415283]=>[-6.162380218505859,-1e-05] (-1,-1; 15,-1), time: 0.2642s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_49, [-6.760018348693848,3.814594268798828]=>[-6.760018348693848,-1e-05] (-1,-1; 15,-1), time: 0.2465s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_64, [-6.370766639709473,4.737161636352539]=>[-6.370766639709473,-1e-05] (-1,-1; 15,-1), time: 9.4460s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_81, [-5.447556018829346,5.995650291442871]=>[-1.154207273797813,-1e-05] (2,-1; 15,-1), time: 14.6936s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_95, [-5.860301971435547,5.769776344299316]=>[1e-05,0.5817191095436046] (15,-1; 9,-1), time: 15.2545s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_14, [-5.278242588043213,5.926199913024902]=>[-0.580309493811398,-1e-05] (9,-1; 15,-1), time: 15.2568s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_68, [-5.319600582122803,5.697375774383545]=>[-0.6299717459606774,-1e-05] (9,-1; 15,-1), time: 15.2589s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_65, [-6.835287570953369,7.812595844268799]=>[-1.4033563038052612,-1e-05] (9,-1; 15,-1), time: 15.2629s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_18, [-4.976666450500488,4.690445899963379]=>[1e-05,0.6847401992633387] (15,-1; 9,-1), time: 15.2808s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_60, [-7.200196266174316,4.0753936767578125]=>[-7.200196266174316,-1e-05] (-1,-1; 15,-1), time: 0.2471s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_80, [-5.357702732086182,5.229255199432373]=>[-5.357702732086182,-1e-05] (-1,-1; 15,-1), time: 0.2529s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_37, [-6.9911980628967285,4.928029537200928]=>[-6.9911980628967285,-1e-05] (-1,-1; 15,-1), time: 0.2492s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_69, [-5.790421962738037,5.522150039672852]=>[-5.790421962738037,-1e-05] (-1,-1; 15,-1), time: 0.2513s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_28, [-5.919261455535889,5.755861282348633]=>[-5.919261455535889,-1e-05] (-1,-1; 15,-1), time: 0.2593s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_15, [-5.624500274658203,4.753600597381592]=>[-5.624500274658203,-1e-05] (-1,-1; 15,-1), time: 0.2507s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_38, [-4.941431045532227,5.9488348960876465]=>[-1.1335025650668602,-1e-05] (2,-1; 15,-1), time: 14.6038s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_7, [-7.27292537689209,4.486427307128906]=>[-7.27292537689209,-1e-05] (-1,-1; 15,-1), time: 0.2619s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_45, [-6.567756652832031,4.18680477142334]=>[-6.567756652832031,-1e-05] (-1,-1; 15,-1), time: 0.2525s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_8, [-5.874256610870361,4.626629829406738]=>[-5.874256610870361,-1e-05] (-1,-1; 15,-1), time: 0.2516s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_17, [-7.038876533508301,3.2604165077209473]=>[-7.038876533508301,-1e-05] (-1,-1; 15,-1), time: 0.2469s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_39, [-6.210112571716309,4.467535495758057]=>[1e-05,0.5692985685758484] (15,-1; 9,-1), time: 15.2612s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_53, [-5.83469295501709,5.527359962463379]=>[1e-05,0.7913570054034779] (15,-1; 2,-1), time: 6.0301s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_48, [-5.295188903808594,4.477345943450928]=>[1e-05,1.1896606468714905] (15,-1; 2,-1), time: 5.0142s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_29, [-5.72686243057251,5.698107719421387]=>[1e-05,0.7247975191325732] (15,-1; 9,-1), time: 15.2683s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_30, [-5.571864128112793,4.954769611358643]=>[1e-05,1.197828375895849] (15,-1; 9,-1), time: 15.2492s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_74, [-6.023950099945068,4.586200714111328]=>[1e-05,0.8710775437480398] (15,-1; 2,-1), time: 6.2609s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_62, [-6.290635108947754,7.879907131195068]=>[1e-05,7.879907131195068] (15,-1; -1,-1), time: 0.2542s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_55, [-7.016878604888916,6.546417236328125]=>[1e-05,1.3896841157197017] (15,-1; 2,-1), time: 6.4483s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_73, [-5.664883136749268,4.9703049659729]=>[-0.42492706663945895,0.07192275589506643] (9,-1; 9,-1), time: 30.0111s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_76, [-5.553816795349121,5.2491135597229]=>[1e-05,1.6267755035118336] (15,-1; 9,-1), time: 15.2593s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_36, [-5.997519016265869,5.644105434417725]=>[-0.048002632274831404,0.24626232656789537] (9,-1; 9,-1), time: 30.0749s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_25, [-6.2013421058654785,3.7737910747528076]=>[-0.17512524124005496,0.03856021833507694] (9,-1; 9,-1), time: 30.1069s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_12, [-5.4788031578063965,6.192975044250488]=>[-0.8932953729974791,-1e-05] (9,-1; 15,-1), time: 15.2468s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_21, [-5.327059745788574,5.11039400100708]=>[1e-05,0.5790651408963785] (15,-1; 9,-1), time: 15.2574s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_75, [-5.924381732940674,4.661062717437744]=>[-0.15131561415543754,0.09890649554515031] (9,-1; 9,-1), time: 30.0064s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_77, [-5.713720321655273,4.729910373687744]=>[1e-05,0.5702158093137322] (15,-1; 9,-1), time: 15.2509s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_92, [-6.205692768096924,3.775700092315674]=>[1e-05,0.3351808438741038] (15,-1; 9,-1), time: 15.2717s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_83, [-5.743166923522949,5.4319939613342285]=>[-0.26829407522867915,0.021395714835532043] (2,-1; 9,-1), time: 27.5306s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_54, [-6.684481143951416,5.668220520019531]=>[-0.03626913513922035,0.2501632305358668] (9,-1; 9,-1), time: 30.0326s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_72, [-5.173846244812012,6.8990044593811035]=>[-0.11548932348534825,0.26774018865415444] (9,-1; 9,-1), time: 30.0033s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_58, [-5.486005783081055,5.642303466796875]=>[-0.11352274890492783,0.17039348502479826] (9,-1; 9,-1), time: 30.0209s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_85, [-5.991580963134766,4.337656021118164]=>[-0.08598299947851139,0.18854943478151318] (9,-1; 9,-1), time: 30.0191s, #vars: 1771, #constrs: 1129, improved: True
Solving MIP for lay14_94, [-6.287187099456787,5.0947065353393555]=>[-0.08805262494977585,0.14618541907449292] (9,-1; 9,-1), time: 30.0110s, #vars: 1771, #constrs: 1129, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -21.135604858398438 with beta sum per layer: []
optimal alpha/beta time: 14.42118525505066
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.0605,  2.8695,  2.5871,  2.0559,  2.5728, -0.0648,  3.5030,  1.3023,
          4.2493]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 86 nodes out of 100 unstable nodes, lb improved 288.9024658203125, ub improved 318.37530517578125, time 52.9688
maximum relu layer improved by MIP so far 6
MIP finished with 257.3068287372589s
Run final alpha-CROWN after MIP solving on layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -21.589479446411133 with beta sum per layer: []
optimal alpha/beta time: 10.418658971786499
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.1040,  2.9064,  2.6233,  2.1173,  2.6175, -0.0462,  3.5539,  1.3802,
          4.3329]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.1040,  2.9064,  0.0000,  2.6233,  2.1173,  2.6175, -0.0462,  3.5539,
          1.3802,  4.3329]], device='cuda:0') min: tensor(-0.0462, device='cuda:0')
time threshold left for bab: 19.393324851989746
##### [0:1] Tested against 6 ######
Model prediction is: tensor([[-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
         -0.6332, -3.9480]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.04630249738693237 with beta sum per layer: []
optimal alpha/beta time: 1.964181900024414
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0463]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.04630249738693237
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 30
layer 2 size torch.Size([100]) unstable 23
layer 3 size torch.Size([100]) unstable 25
layer 4 size torch.Size([100]) unstable 16
layer 5 size torch.Size([100]) unstable 18
layer 6 size torch.Size([100]) unstable 11
layer 7 size torch.Size([100]) unstable 16
# of unstable neurons: 170
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 60]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: -0.1359052062034607 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.5357418060302734
This batch time : update_bounds func: 0.5390	 prepare: 0.0019	 bound: 0.5360	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 0.5390	 prepare: 0.0019	 bound: 0.5360	 transfer: 0.0006	 finalize: 0.0004
batch bounding time:  0.5391418933868408
Current worst splitting domains [lb, ub] (depth):
[-0.04630, 98.941887] (1), 
length of domains: 1
Total time: 0.5682	 pickout: 0.0011	 decision: 0.0278	 get_bound: 0.5392	 add_domain: 0.0001
Current lb:-0.04630249738693237
2 neurons visited
0 diving domains visited
Cumulative time: 2.748408317565918

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[2, 21]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: -0.02989482879638672 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3713233470916748
This batch time : update_bounds func: 0.3744	 prepare: 0.0019	 bound: 0.3716	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 0.9134	 prepare: 0.0037	 bound: 0.9076	 transfer: 0.0006	 finalize: 0.0007
batch bounding time:  0.37453722953796387
Current worst splitting domains [lb, ub] (depth):
[-0.04630, 98.906631] (2), 
length of domains: 1
Total time: 0.4024	 pickout: 0.0010	 decision: 0.0267	 get_bound: 0.3745	 add_domain: 0.0002
Current lb:-0.04630249738693237
4 neurons visited
0 diving domains visited
Cumulative time: 3.1509363651275635

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 49]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.02363133430480957 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3722507953643799
This batch time : update_bounds func: 0.3755	 prepare: 0.0019	 bound: 0.3725	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 1.2889	 prepare: 0.0056	 bound: 1.2801	 transfer: 0.0006	 finalize: 0.0012
batch bounding time:  0.37564802169799805
Current worst splitting domains [lb, ub] (depth):
[-0.04630, 98.906631] (3), 
length of domains: 1
Total time: 0.4037	 pickout: 0.0009	 decision: 0.0270	 get_bound: 0.3757	 add_domain: 0.0001
Current lb:-0.04630249738693237
6 neurons visited
0 diving domains visited
Cumulative time: 3.554774761199951

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[1, 96]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: -0.009200453758239746 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.37319231033325195
This batch time : update_bounds func: 0.3763	 prepare: 0.0019	 bound: 0.3735	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 1.6652	 prepare: 0.0075	 bound: 1.6536	 transfer: 0.0006	 finalize: 0.0015
batch bounding time:  0.37646937370300293
Current worst splitting domains [lb, ub] (depth):
[-0.04630, 98.906631] (4), 
length of domains: 1
Total time: 0.4041	 pickout: 0.0009	 decision: 0.0265	 get_bound: 0.3765	 add_domain: 0.0001
Current lb:-0.04630249738693237
8 neurons visited
0 diving domains visited
Cumulative time: 3.9589695930480957

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 88]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: -0.06892180442810059 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.3677065372467041
This batch time : update_bounds func: 0.3710	 prepare: 0.0019	 bound: 0.3680	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 2.0362	 prepare: 0.0095	 bound: 2.0216	 transfer: 0.0006	 finalize: 0.0019
batch bounding time:  0.3711130619049072
Current worst splitting domains [lb, ub] (depth):
[-0.00661, 98.906631] (5), 
length of domains: 1
Total time: 0.3991	 pickout: 0.0010	 decision: 0.0268	 get_bound: 0.3711	 add_domain: 0.0001
Current lb:-0.006609559059143066
10 neurons visited
0 diving domains visited
Cumulative time: 4.358160495758057

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 77]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: -0.123841792345047 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.37439393997192383
This batch time : update_bounds func: 0.3776	 prepare: 0.0020	 bound: 0.3747	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 2.4138	 prepare: 0.0114	 bound: 2.3962	 transfer: 0.0006	 finalize: 0.0022
batch bounding time:  0.377760648727417
Current worst splitting domains [lb, ub] (depth):
[-0.00299, 98.906631] (6), 
length of domains: 1
Total time: 0.4056	 pickout: 0.0010	 decision: 0.0267	 get_bound: 0.3778	 add_domain: 0.0002
Current lb:-0.002993464469909668
12 neurons visited
0 diving domains visited
Cumulative time: 4.7638654708862305

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 94]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -0.19126370549201965 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.013037443161010742
This batch time : update_bounds func: 0.0162	 prepare: 0.0020	 bound: 0.0133	 transfer: 0.0006	 finalize: 0.0003
Accumulated time: update_bounds func: 2.4301	 prepare: 0.0134	 bound: 2.4095	 transfer: 0.0006	 finalize: 0.0025
batch bounding time:  0.01628565788269043
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0435	 pickout: 0.0009	 decision: 0.0263	 get_bound: 0.0163	 add_domain: 0.0000
No domains left, verification finished!
Cumulative time: 4.8074963092803955

Image 1 pidx 6 verify end, final lower bound 999, upper bound 98.95369720458984, time: 4.867471933364868
1 999
##### [0:1] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 2.117250442504883
Image 1 pidx 4 verify end, final lower bound 2.117250442504883, upper bound inf, time: 0.0002238750457763672
1 2.117250442504883
##### [0:1] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 2.906449317932129
Image 1 pidx 1 verify end, final lower bound 2.906449317932129, upper bound inf, time: 0.00021314620971679688
1 2.906449317932129
##### [0:1] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 2.10402774810791
Image 1 pidx 0 verify end, final lower bound 2.10402774810791, upper bound inf, time: 0.0002338886260986328
1 2.10402774810791
##### [0:1] Tested against 8 ######
Initial alpha-CROWN verified for label 8 with bound 1.3802107572555542
Image 1 pidx 8 verify end, final lower bound 1.3802107572555542, upper bound inf, time: 0.00023102760314941406
1 1.3802107572555542
##### [0:1] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 2.6232943534851074
Image 1 pidx 3 verify end, final lower bound 2.6232943534851074, upper bound inf, time: 0.00022935867309570312
1 2.6232943534851074
##### [0:1] Tested against 5 ######
Initial alpha-CROWN verified for label 5 with bound 2.617511510848999
Image 1 pidx 5 verify end, final lower bound 2.617511510848999, upper bound inf, time: 0.0002460479736328125
1 2.617511510848999
##### [0:1] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 3.5539448261260986
Image 1 pidx 7 verify end, final lower bound 3.5539448261260986, upper bound inf, time: 0.0002346038818359375
1 3.5539448261260986
##### [0:1] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 4.332941055297852
Image 1 pidx 9 verify end, final lower bound 4.332941055297852, upper bound inf, time: 0.00023031234741210938
1 4.332941055297852
##### [0:1] Tested against 2 ######
correct label, skip!
[[  1.           0.           0.          12.80946422   0.
   -1.                  inf          inf]
 [  1.           0.           0.           0.60204744   0.
   -3.                  inf          inf]
 [  1.           0.           0.         267.79721689   0.
   -2.                  inf          inf]
 [  1.         999.          14.           4.86747193   0.
    6.          98.9536972    1.53556323]
 [  1.           2.11725044   0.           0.00022388   0.
    4.                  inf   3.98556733]
 [  1.           2.90644932   0.           0.00021315   0.
    1.                  inf   4.1228075 ]
 [  1.           2.10402775   0.           0.00023389   0.
    0.                  inf   4.24548101]
 [  1.           1.38021076   0.           0.00023103   0.
    8.                  inf   4.33786869]
 [  1.           2.62329435   0.           0.00022936   0.
    3.                  inf   4.3514967 ]
 [  1.           2.61751151   0.           0.00024605   0.
    5.                  inf   5.00918102]
 [  1.           3.55394483   0.           0.0002346    0.
    7.                  inf   5.42334175]
 [  1.           4.33294106   0.           0.00023031   0.
    9.                  inf   7.53192997]
 [  1.           0.           0.           0.           0.
    2.                  inf          inf]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [cnt:1] (excluding attack success): 285.4759953022003
