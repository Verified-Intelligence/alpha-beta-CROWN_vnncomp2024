Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_100
  path: mnist_9_100_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 53
  end: 54
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.026
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    _tmp_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Wed Sep 14 16:52:22 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_100]_start=53_end=54_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-198.43608093, -282.37454224, -298.01736450, -275.85656738,
         -333.24005127, -268.87960815, -360.65878296, -271.77770996,
         -317.30407715]], device='cuda:0') None
best_l after optimization: -1345.814453125 with beta sum per layer: []
alpha/beta optimization time: 11.161473989486694
initial alpha-CROWN bounds: tensor([[ -88.89543152, -151.17634583, -161.79132080, -149.01881409,
         -171.72929382, -131.35853577, -181.01005554, -146.41349792,
         -164.42121887]], device='cuda:0')
Worst class: (+ rhs) -181.0100555419922
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.0065000057220458984, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.79266435, -1.99811614, -1.72904468,  1.54812884, -2.49473000,
           4.95486546,  0.12718812, -2.94377995,  2.60641336,  1.52581382],
         [-0.79266435, -1.99811614, -1.72904468,  1.54812884, -2.49473000,
           4.95486546,  0.12718812, -2.94377995,  2.60641336,  1.52581382]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[5.74752998, 6.95298147, 6.68391037, 3.40673661, 7.44959545,
          4.82767725, 7.89864540, 2.34845209, 3.42905164]]], device='cuda:0')
number of violation:  0
Attack finished in 0.6643 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_85', 'lay4_88', 'lay4_16', 'lay4_96', 'lay4_49', 'lay4_7', 'lay4_78', 'lay4_90', 'lay4_86', 'lay4_23', 'lay4_75', 'lay4_97', 'lay4_0', 'lay4_53', 'lay4_82', 'lay4_28', 'lay4_18', 'lay4_1', 'lay4_40', 'lay4_10', 'lay4_95', 'lay4_3', 'lay4_99', 'lay4_43', 'lay4_20', 'lay4_21', 'lay4_67', 'lay4_42', 'lay4_11', 'lay4_70', 'lay4_24', 'lay4_60', 'lay4_38', 'lay4_39', 'lay4_52', 'lay4_79', 'lay4_83', 'lay4_5', 'lay4_98', 'lay4_59', 'lay4_37', 'lay4_50', 'lay4_54', 'lay4_33', 'lay4_65', 'lay4_41', 'lay4_6', 'lay4_8', 'lay4_77', 'lay4_30', 'lay4_63', 'lay4_48', 'lay4_62', 'lay4_87', 'lay4_72', 'lay4_45', 'lay4_74', 'lay4_51', 'lay4_26', 'lay4_47', 'lay4_9'] filter: 1.0
PGD done for relu layer 1
<frozen importlib._bootstrap>:219: RuntimeWarning: numpy.ufunc size changed, may indicate binary incompatibility. Expected 216 from C header, got 232 from PyObject
/home/zhouxingshi/miniconda3/envs/zshi/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/zhouxingshi/gputest/CROWN-GENERAL_release/complete_verifier/utils.py:622: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6222s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_28, [-inf,inf]=>[-0.7854000865782407,0.8693745039017642] (2,-1; 2,-1), time: 0.8053s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-1.59272656285563,0.1934103996380903] (2,-1; 2,-1), time: 1.2528s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2035s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.9663146111219819,0.4088845089973859] (2,-1; 2,-1), time: 2.1048s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.7320323771356316,0.20926501559626445] (2,-1; 2,-1), time: 2.2282s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_96, [-inf,inf]=>[-1.3064789275147144,0.029178628140175664] (2,-1; 2,-1), time: 2.2340s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_90, [-inf,inf]=>[-2.0559345081358504,0.08294104383426852] (2,-1; 2,-1), time: 2.3330s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3416s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_23, [-inf,inf]=>[-1.2930640480651685,0.10070876261465367] (2,-1; 2,-1), time: 2.3457s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2341s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1740s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3724s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1936s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.1759800598572397,0.9983977774895048] (2,-1; 2,-1), time: 2.7290s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.7257719210974034,0.4041026959700015] (2,-1; 2,-1), time: 2.7527s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2081s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1997s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1953s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_82, [-inf,inf]=>[-0.29714421293126053,0.9420685060269219] (2,-1; 2,-1), time: 3.0345s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4216567931465183,0.8954079280522211] (2,-1; 2,-1), time: 3.0573s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3992s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1868s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[-0.8006930509762039,0.27356356979701113] (2,-1; 2,-1), time: 3.2910s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-0.22473260284431823,0.5618070177796105] (2,-1; 2,-1), time: 3.3443s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1794s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2926s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5925s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_1, [-inf,inf]=>[-0.4511916469521564,0.35647235635003227] (2,-1; 2,-1), time: 2.9731s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.5562529274551552,0.23135354090748447] (2,-1; 2,-1), time: 4.3738s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_10, [-inf,inf]=>[-0.9351432689074615,0.16369367744507946] (2,-1; 2,-1), time: 3.1465s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[-0.5335072068737822,0.31652896840995903] (2,-1; 2,-1), time: 4.1244s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[-0.49067065318256203,0.8405199928906647] (2,-1; 2,-1), time: 1.6967s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.9949536385404496,0.07786291278767771] (2,-1; 2,-1), time: 2.5346s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_20, [-inf,inf]=>[-0.7989367093731998,0.02211750722123187] (2,-1; 2,-1), time: 2.8277s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_37, [-inf,inf]=>[-0.061966151747760975,1.1330271382893309] (2,-1; 2,-1), time: 2.0160s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-0.8930498953882683,0.3861625911829643] (2,-1; 2,-1), time: 2.0172s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2123s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[1e-05,1.784082057584048] (15,-1; 2,-1), time: 0.9601s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.2590098351453943,0.6296052721473429] (2,-1; 2,-1), time: 3.6280s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1903s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-0.6539855706582938,0.6638167499757166] (2,-1; 2,-1), time: 2.6298s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.954906357325416,0.40920325238781696] (2,-1; 2,-1), time: 2.9731s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1984s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1949s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_21, [-inf,inf]=>[-0.6688058140660241,0.560516777962351] (2,-1; 2,-1), time: 3.7024s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1621s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.7228504296453314,0.2354060304136616] (2,-1; 2,-1), time: 3.5021s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[1e-05,1.2202272626420012] (15,-1; 2,-1), time: 1.7817s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7329s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5935845582064629,0.3135817870406853] (2,-1; 2,-1), time: 2.8210s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_50, [-inf,inf]=>[-0.023988290938549556,0.9547776840589238] (2,-1; 2,-1), time: 3.1736s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.4310441785762677,0.45629862580253766] (2,-1; 2,-1), time: 1.5510s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-1.01983732456754,0.3330264169271158] (2,-1; 2,-1), time: 3.3471s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.1459247932251233] (15,-1; 2,-1), time: 2.3245s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-0.8530652286912168,0.3169094007516789] (2,-1; 2,-1), time: 3.3094s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.5595603048469746,0.2186316066421664] (2,-1; 2,-1), time: 3.4349s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.28563118951193406,0.5902440592351863] (2,-1; 2,-1), time: 2.4977s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.26918817466632244,0.5325644861450219] (2,-1; 2,-1), time: 2.9652s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[1e-05,1.0717150863628437] (15,-1; 2,-1), time: 3.2701s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[1e-05,0.7648119817676566] (15,-1; 2,-1), time: 3.0523s, #vars: 1065, #constrs: 320, improved: True
PGD done for relu layer 2
MIP improved 61 nodes out of 61 unstable nodes, lb improved 15.387578010559082, ub improved 16.19501304626465, time 10.0987
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_85', 'lay6_30', 'lay6_60', 'lay6_13', 'lay6_91', 'lay6_56', 'lay6_12', 'lay6_1', 'lay6_39', 'lay6_23', 'lay6_61', 'lay6_62', 'lay6_38', 'lay6_90', 'lay6_74', 'lay6_34', 'lay6_64', 'lay6_36', 'lay6_4', 'lay6_42', 'lay6_14', 'lay6_78', 'lay6_51', 'lay6_8', 'lay6_5', 'lay6_87', 'lay6_97', 'lay6_19', 'lay6_50', 'lay6_26', 'lay6_82', 'lay6_9', 'lay6_95', 'lay6_68', 'lay6_33', 'lay6_27', 'lay6_32', 'lay6_6', 'lay6_99', 'lay6_96', 'lay6_3', 'lay6_48', 'lay6_21', 'lay6_46', 'lay6_75', 'lay6_71', 'lay6_28', 'lay6_40', 'lay6_88', 'lay6_25', 'lay6_72', 'lay6_35', 'lay6_22', 'lay6_0', 'lay6_83', 'lay6_93', 'lay6_20', 'lay6_77', 'lay6_15', 'lay6_43', 'lay6_66', 'lay6_80', 'lay6_67', 'lay6_24', 'lay6_45', 'lay6_81', 'lay6_86', 'lay6_29', 'lay6_10', 'lay6_79', 'lay6_55', 'lay6_11', 'lay6_98', 'lay6_63', 'lay6_59', 'lay6_7', 'lay6_54', 'lay6_73', 'lay6_69', 'lay6_44', 'lay6_52', 'lay6_53', 'lay6_76', 'lay6_94', 'lay6_41', 'lay6_18', 'lay6_58', 'lay6_84'] filter: 1.0
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1796s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2253s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2851s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2212s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5275s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5964s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1996s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2172s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1069s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8156s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9956s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7804s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.8033s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4566s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.1284s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-0.7131353009065762,0.39443630803160273] (2,-1; 2,-1), time: 7.7704s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1507s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5903s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.5804476684424439,0.4528695023408233] (2,-1; 2,-1), time: 10.2539s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2392s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.3661075733842192,0.34470556566420313] (2,-1; 2,-1), time: 11.7410s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1920s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4998s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1865s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1860s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9291s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4897s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[-0.48079001276090577,0.27095285130584434] (2,-1; 2,-1), time: 16.9007s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-0.2714383534033571,0.2636839823626589] (2,-1; 2,-1), time: 14.7960s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_90, [-inf,inf]=>[-0.755956016058529,0.15363865522995113] (9,-1; 2,-1), time: 18.2745s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9671s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7628s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-0.35916615331505325,0.5419801475037654] (2,-1; 2,-1), time: 14.9954s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-0.4180133050717962,0.0842416630542015] (2,-1; 2,-1), time: 9.6092s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-0.7473080920972838,0.13400206783165672] (2,-1; 9,-1), time: 22.1244s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-0.2126583696673869,0.3897250267537569] (2,-1; 9,-1), time: 20.2090s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-0.7663224492130681,0.25913858364723075] (2,-1; 2,-1), time: 7.7941s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.8415s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.28642714059216134,0.41730310172849966] (2,-1; 9,-1), time: 23.8388s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.5315914508594567,0.13101250775876] (2,-1; 9,-1), time: 20.1866s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_14, [-inf,inf]=>[-0.6848552527186821,0.03799416791603657] (9,-1; 2,-1), time: 24.9604s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[1e-05,1.481998527260223] (15,-1; 2,-1), time: 2.9005s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[-0.6857709188852728,0.04098624355995915] (2,-1; 9,-1), time: 21.0620s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[1e-05,1.1348715532999678] (15,-1; 2,-1), time: 6.5985s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1797s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1784s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2344s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7765s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3072s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1761s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6010s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.30989380642350134,0.24459243983613496] (9,-1; 9,-1), time: 30.0289s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.6133981251860912,0.09578267752421245] (9,-1; 9,-1), time: 30.0133s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2224s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.6743377013144268,0.2800188097244581] (2,-1; 2,-1), time: 11.2848s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5760s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1831s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-0.5142238853324959,0.19894387732546753] (9,-1; 2,-1), time: 19.5028s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1815s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[1e-05,1.117187870184778] (15,-1; 2,-1), time: 4.5480s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-0.3193712661445898,0.412205136241478] (2,-1; 2,-1), time: 12.5679s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.04212176670603516,0.7780962826857645] (2,-1; 9,-1), time: 26.8950s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-0.3755314145524645,0.22338947639978646] (2,-1; 9,-1), time: 19.0940s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1843s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1797s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.2845264307031047,0.23966464744268212] (2,-1; 9,-1), time: 23.0302s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_52, [-inf,inf]=>[1e-05,0.8455543033999399] (15,-1; 2,-1), time: 3.9772s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[-0.008515994582970702,0.717032509884904] (2,-1; 2,-1), time: 15.3809s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-0.3194114051263368,0.30745509502401963] (9,-1; 2,-1), time: 23.3062s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-0.5670731034361349,0.030522513433811453] (9,-1; 2,-1), time: 18.6960s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2245s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.33936943816111287,0.21253026884540263] (2,-1; 2,-1), time: 14.6647s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_40, [-inf,inf]=>[-0.5169751032936127,0.005848889149061941] (9,-1; 9,-1), time: 30.0135s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-0.489507640357867,0.09644261193452018] (9,-1; 2,-1), time: 19.9465s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.2991005408329217,0.2726267743437582] (9,-1; 2,-1), time: 19.8838s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8380856669880887] (15,-1; 2,-1), time: 3.2123s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.6197545290751483] (15,-1; 2,-1), time: 16.0654s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-0.22354980909073685,0.5224924860429768] (2,-1; 9,-1), time: 21.0277s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[1e-05,1.7353760785687664] (15,-1; 2,-1), time: 3.3725s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-0.3903806251134122,0.2510081603159258] (2,-1; 9,-1), time: 29.7830s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-0.1859464438584016,0.39994941101797227] (9,-1; 9,-1), time: 30.0105s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-0.5694580215248668,0.001691883996431079] (9,-1; 2,-1), time: 28.0959s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[-0.15621164619662037,0.30232005333148393] (9,-1; 9,-1), time: 30.0112s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.23758653282486675,0.3395150084148483] (9,-1; 2,-1), time: 22.9480s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,0.6434153963295226] (15,-1; 2,-1), time: 11.5507s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[1e-05,0.914732482822549] (15,-1; 2,-1), time: 13.2331s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.36436599049911006,0.10490100764534632] (9,-1; 2,-1), time: 19.8063s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.025953925866375235,0.6663910355143309] (9,-1; 2,-1), time: 26.3812s, #vars: 1235, #constrs: 525, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 1 has unstable to stable neurons: [(16, -1), (49, -1), (40, -1), (3, -1), (99, -1), (43, -1), (42, -1), (11, -1), (70, -1), (24, -1), (60, -1), (52, -1), (79, -1), (98, -1), (59, -1), (6, 1), (77, 1), (30, 1), (48, -1), (62, 1), (87, -1), (72, -1), (45, -1), (51, -1), (26, 1), (47, -1)]
best_l after optimization: -501.26422119140625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.248298406600952
alpha-CROWN with intermediate bounds by MIP: tensor([[-32.98818588, -55.85081482, -60.18857193, -55.55183029, -64.14229584,
         -48.42745590, -67.21530151, -54.92773056, -61.97201920]],
       device='cuda:0') None
MIP improved 88 nodes out of 88 unstable nodes, lb improved 29.506183624267578, ub improved 43.2628173828125, time 74.0552
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_71', 'lay8_87', 'lay8_59', 'lay8_17', 'lay8_77', 'lay8_75', 'lay8_19', 'lay8_89', 'lay8_28', 'lay8_57', 'lay8_39', 'lay8_33', 'lay8_30', 'lay8_79', 'lay8_20', 'lay8_48', 'lay8_24', 'lay8_16', 'lay8_31', 'lay8_7', 'lay8_34', 'lay8_11', 'lay8_62', 'lay8_41', 'lay8_81', 'lay8_88', 'lay8_25', 'lay8_72', 'lay8_38', 'lay8_3', 'lay8_97', 'lay8_92', 'lay8_0', 'lay8_60', 'lay8_52', 'lay8_69', 'lay8_98', 'lay8_63', 'lay8_22', 'lay8_66', 'lay8_27', 'lay8_40', 'lay8_4', 'lay8_5', 'lay8_65', 'lay8_78', 'lay8_93', 'lay8_2', 'lay8_85', 'lay8_43', 'lay8_6', 'lay8_61', 'lay8_29', 'lay8_14', 'lay8_53', 'lay8_55', 'lay8_50', 'lay8_95', 'lay8_45', 'lay8_21', 'lay8_36', 'lay8_10', 'lay8_58', 'lay8_73', 'lay8_82', 'lay8_15', 'lay8_76', 'lay8_56', 'lay8_9', 'lay8_67', 'lay8_44', 'lay8_90', 'lay8_74', 'lay8_83', 'lay8_94', 'lay8_13', 'lay8_80', 'lay8_54', 'lay8_96', 'lay8_26', 'lay8_68', 'lay8_1', 'lay8_70', 'lay8_91', 'lay8_51', 'lay8_32', 'lay8_46', 'lay8_37', 'lay8_99', 'lay8_42', 'lay8_23', 'lay8_18', 'lay8_35', 'lay8_49', 'lay8_86', 'lay8_64', 'lay8_84', 'lay8_47', 'lay8_8', 'lay8_12'] filter: 1.0
Solving MIP for lay8_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2811s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2882s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2982s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2320s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2735s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7107s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7749s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8016s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8034s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2811s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8990s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2437s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2340s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4259s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7585s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2801s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0355s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2432s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2360s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7606s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.0498s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7622s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2898s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2519s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7550s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[1e-05,1.4034838434228836] (15,-1; 9,-1), time: 15.2508s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[1e-05,1.4466085188651983] (15,-1; 9,-1), time: 15.3048s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2426s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,0.5873973020947341] (15,-1; 9,-1), time: 15.7570s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2439s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[1e-05,1.1512790134357758] (15,-1; 9,-1), time: 16.5375s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2865s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.4831612569363394,0.4783936805664164] (9,-1; 9,-1), time: 30.0148s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.2638647021473207,0.4554763321708685] (9,-1; 9,-1), time: 30.0160s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-0.13074980716858178,0.5242830313807068] (9,-1; 9,-1), time: 30.0163s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.23765075053563067,0.3920544341596174] (9,-1; 9,-1), time: 30.0205s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.36441167236397015,0.2455565947843166] (9,-1; 9,-1), time: 30.0205s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2364s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2369s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6368s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-0.4633270898483084,0.08437819706776233] (9,-1; 9,-1), time: 30.0193s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.31770106738339793,0.2761413680959941] (9,-1; 9,-1), time: 30.0121s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2443s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-0.3799601584551374,0.2415260347889066] (9,-1; 9,-1), time: 30.0134s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2368s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-0.23073487489338235,0.462464318141601] (9,-1; 9,-1), time: 30.0112s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2425s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.6933933892818652,0.03085904303510407] (9,-1; 9,-1), time: 30.0177s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.5215843107931306] (15,-1; 9,-1), time: 15.2609s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2341s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-0.16912132250918036,0.303990671292277] (9,-1; 9,-1), time: 30.0155s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2344s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-0.004351999198060809,0.5292329514284092] (9,-1; 9,-1), time: 30.0468s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.6469963515967138,0.003994345538226855] (9,-1; 9,-1), time: 30.0090s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[1e-05,0.7068171177238869] (15,-1; 9,-1), time: 15.6744s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.03764364611113031,0.6218746356502882] (9,-1; 9,-1), time: 30.0119s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.0818842931704613] (15,-1; 9,-1), time: 15.2389s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[1e-05,0.755779132918177] (15,-1; 9,-1), time: 15.7217s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[1e-05,1.6739206491381207] (15,-1; 9,-1), time: 15.3127s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[1e-05,0.960136826532559] (15,-1; 9,-1), time: 18.9930s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.4047042972613295,0.07913360230638831] (9,-1; 9,-1), time: 30.0205s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[1e-05,2.3265278679583514] (15,-1; 2,-1), time: 4.3221s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2375s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.6035232896446431,0.03220005300350623] (9,-1; 9,-1), time: 30.0133s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.5842605175586207,0.062301914532835505] (9,-1; 9,-1), time: 30.0209s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.11533944546379321,0.5498978174622676] (9,-1; 9,-1), time: 30.0199s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[1e-05,2.313544431333913] (15,-1; 9,-1), time: 15.2411s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.20091512923049404,0.3689629118325748] (9,-1; 9,-1), time: 30.0131s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-0.5652311315875768,0.11827065938438232] (9,-1; 9,-1), time: 30.0124s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,0.7244892154301592] (15,-1; 9,-1), time: 15.7523s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.2698942316730543,0.2668479865252793] (9,-1; 9,-1), time: 30.0098s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.14605118412993218,0.34422725724609726] (9,-1; 9,-1), time: 30.0136s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.7386122842469846,0.01808155533407716] (9,-1; 9,-1), time: 30.0127s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[1e-05,0.7724941505449281] (15,-1; 9,-1), time: 19.8863s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.5631514760350772,0.17519735693869892] (9,-1; 9,-1), time: 30.0164s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[1e-05,1.5940964439784304] (15,-1; 9,-1), time: 15.3075s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.23138474018242186,0.4031604731203313] (9,-1; 9,-1), time: 30.0185s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2911s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[1e-05,0.6695434156269494] (15,-1; 9,-1), time: 15.6892s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.6204536833123026,0.03654809752249907] (9,-1; 9,-1), time: 30.0385s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,1.4938877607963126] (15,-1; 9,-1), time: 15.2992s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.09769477628283572,0.50147002795569] (9,-1; 9,-1), time: 30.0177s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[1e-05,1.7187517635677638] (15,-1; 9,-1), time: 15.2486s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.5313471360550794,0.1524059191643534] (9,-1; 9,-1), time: 30.0118s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,2.4919726920195644] (15,-1; 2,-1), time: 12.9418s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[1e-05,0.821375212630632] (15,-1; 2,-1), time: 9.6351s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-0.3190619453056739,0.0773657445577654] (9,-1; 2,-1), time: 29.0684s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6392424314884365,0.009342175702053266] (9,-1; 9,-1), time: 30.0139s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.11222584890278074,0.48889320447785706] (9,-1; 9,-1), time: 30.0089s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.8152817817789673,0.01233015033694294] (9,-1; 9,-1), time: 30.0129s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[1e-05,0.9174052358543] (15,-1; 9,-1), time: 15.2860s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[1e-05,1.430349407353618] (15,-1; 9,-1), time: 15.2420s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-0.4607496339634787,0.10729106504096386] (9,-1; 9,-1), time: 30.0146s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-0.18285028196651087,0.43116311375095584] (9,-1; 9,-1), time: 30.0210s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.38205747988502986,0.30563238118447156] (9,-1; 9,-1), time: 30.0141s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[1e-05,1.5639738049987084] (15,-1; 9,-1), time: 15.2772s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[1e-05,2.440311634627348] (15,-1; 9,-1), time: 15.2775s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.5683216147775823,0.03474635835210238] (9,-1; 9,-1), time: 30.0112s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-0.45554273890640645,0.08575783906852774] (9,-1; 9,-1), time: 30.0080s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.13212884749623913,0.2749312487174497] (9,-1; 9,-1), time: 30.0109s, #vars: 1411, #constrs: 739, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 2 has unstable to stable neurons: [(30, -1), (13, -1), (56, -1), (12, -1), (1, -1), (39, -1), (23, -1), (38, -1), (34, -1), (64, -1), (36, -1), (42, -1), (78, -1), (51, -1), (87, -1), (19, -1), (9, -1), (95, -1), (33, -1), (32, -1), (99, -1), (96, -1), (3, -1), (48, -1), (46, -1), (75, -1), (71, -1), (88, 1), (93, 1), (77, -1), (15, -1), (43, -1), (66, -1), (80, -1), (24, -1), (45, -1), (86, 1), (29, -1), (10, -1), (79, -1), (63, -1), (73, 1), (69, -1), (44, -1), (52, 1), (76, 1), (94, 1), (18, -1), (58, 1), (84, 1)]
best_l after optimization: -99.14450073242188 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.679628133773804
alpha-CROWN with intermediate bounds by MIP: tensor([[ -6.41511631, -10.29569244, -11.47862053, -11.14927101, -12.84917831,
          -9.06906509, -13.05356598, -11.34013557, -13.49386120]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 72.22413635253906, ub improved 108.03761291503906, time 108.0064
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_80', 'lay10_14', 'lay10_40', 'lay10_46', 'lay10_86', 'lay10_74', 'lay10_58', 'lay10_8', 'lay10_27', 'lay10_17', 'lay10_7', 'lay10_35', 'lay10_42', 'lay10_79', 'lay10_2', 'lay10_1', 'lay10_18', 'lay10_30', 'lay10_75', 'lay10_57', 'lay10_5', 'lay10_33', 'lay10_0', 'lay10_91', 'lay10_72', 'lay10_13', 'lay10_37', 'lay10_97', 'lay10_52', 'lay10_10', 'lay10_93', 'lay10_66', 'lay10_94', 'lay10_82', 'lay10_51', 'lay10_87', 'lay10_98', 'lay10_60', 'lay10_50', 'lay10_15', 'lay10_39', 'lay10_88', 'lay10_89', 'lay10_96', 'lay10_95', 'lay10_47', 'lay10_29', 'lay10_28', 'lay10_4', 'lay10_23', 'lay10_48', 'lay10_22', 'lay10_3', 'lay10_6', 'lay10_85', 'lay10_69', 'lay10_77', 'lay10_21', 'lay10_44', 'lay10_76', 'lay10_99', 'lay10_63', 'lay10_65', 'lay10_53', 'lay10_59', 'lay10_36', 'lay10_43', 'lay10_49', 'lay10_70', 'lay10_54', 'lay10_55', 'lay10_26', 'lay10_41', 'lay10_71', 'lay10_84', 'lay10_24', 'lay10_90', 'lay10_9', 'lay10_20', 'lay10_81', 'lay10_78', 'lay10_45', 'lay10_73', 'lay10_19', 'lay10_31', 'lay10_34', 'lay10_68', 'lay10_67', 'lay10_56', 'lay10_92', 'lay10_11', 'lay10_25', 'lay10_83', 'lay10_32', 'lay10_64', 'lay10_38', 'lay10_61', 'lay10_12', 'lay10_62', 'lay10_16'] filter: 1.0
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3504s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3538s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4357s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5066s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3348s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3608s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9484s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3273s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2813s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2933s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0150s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.9030s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.5423s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[1e-05,1.1218997940445519] (15,-1; 9,-1), time: 15.3379s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[1e-05,1.3558130503972212] (15,-1; 9,-1), time: 15.3638s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3655s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-0.1842922481516929,0.2852591737190397] (9,-1; 9,-1), time: 30.0137s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.5078582020068714,0.16227647814280113] (9,-1; 9,-1), time: 30.0236s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.08184531896054943,0.6754345224099898] (9,-1; 9,-1), time: 30.0242s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-0.6095691661532228,0.17121245328572557] (9,-1; 9,-1), time: 30.0329s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-0.7561769276950461,0.02256148763400845] (9,-1; 9,-1), time: 30.0784s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-0.10316349481745093,0.8391743214787599] (9,-1; 9,-1), time: 30.1996s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.9723004390279727,0.15993534016470576] (9,-1; 9,-1), time: 30.2047s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-0.6129533222766758,0.20503876312573188] (9,-1; 9,-1), time: 30.2557s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-0.8368403564766619,0.01576134928862824] (9,-1; 9,-1), time: 30.3040s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.591009576575026,0.07075642931031864] (9,-1; 9,-1), time: 30.0602s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[-0.5484949498011634,0.30493648334091605] (9,-1; 9,-1), time: 30.0387s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[1e-05,1.6733168444848425] (15,-1; 9,-1), time: 15.3195s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2973s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.35909850485691536,0.23454015344849194] (9,-1; 9,-1), time: 30.0181s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3717s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8774s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2889s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2786s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.9714949552979572,0.025748809157801977] (9,-1; 9,-1), time: 30.2184s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.3807s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.6099883158909815,0.03048135089326098] (9,-1; 9,-1), time: 30.1029s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.9952s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3393s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3484s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.98200829945302] (15,-1; 9,-1), time: 15.3251s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.0018507563289032422,0.6558400560091113] (9,-1; 9,-1), time: 30.4656s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[1e-05,0.9856941767782104] (15,-1; 9,-1), time: 16.4912s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2969s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,1.0998906619296018] (15,-1; 9,-1), time: 16.2192s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.8443s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0572s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3115s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2885s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,0.8764922891305064] (15,-1; 9,-1), time: 15.3337s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9771s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-0.5580291566903658,0.046760143773291754] (9,-1; 9,-1), time: 30.0221s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-0.10247580314267503,0.4373899648946841] (9,-1; 9,-1), time: 30.0312s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-0.5291514943344191,0.017125091609872065] (9,-1; 9,-1), time: 30.0162s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.028508596108800178,0.540996992202163] (9,-1; 9,-1), time: 30.0099s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-0.12372723845799993,0.5637230410791502] (9,-1; 9,-1), time: 30.2592s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-0.6592235444412533,0.0030750930431616133] (9,-1; 9,-1), time: 30.1871s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3534s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3053s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[1e-05,1.9258657539758883] (15,-1; 9,-1), time: 15.3217s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-0.26338858785322156,0.4933357538977826] (9,-1; 9,-1), time: 30.2321s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-0.16636447618035594,0.5228198534003311] (9,-1; 9,-1), time: 30.0708s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.126778042714353] (15,-1; 9,-1), time: 15.3015s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[1e-05,3.4259671104763645] (15,-1; 9,-1), time: 15.3800s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[1e-05,0.8735773774999617] (15,-1; 9,-1), time: 15.3751s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3253s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3532s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3463s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-0.22486312086819418,0.22484869377474698] (9,-1; 9,-1), time: 30.0106s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-0.13350878831675347,0.2945495128158072] (9,-1; 9,-1), time: 30.0171s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[1e-05,1.746617295173368] (15,-1; 9,-1), time: 15.2980s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[1e-05,1.5278865858612027] (15,-1; 9,-1), time: 15.5004s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.7462828739574654] (15,-1; 9,-1), time: 15.3988s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[1e-05,1.036397209857452] (15,-1; 9,-1), time: 15.3824s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[1e-05,2.675298409859794] (15,-1; 9,-1), time: 15.2999s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.7171796643157717] (15,-1; 9,-1), time: 16.1014s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.4495199033377002,0.15876211753441855] (9,-1; 9,-1), time: 30.1704s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9264s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3190s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[1e-05,0.7455491201485908] (15,-1; 9,-1), time: 15.3491s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[1e-05,2.0433818941719375] (15,-1; 9,-1), time: 15.4384s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-0.5959617604044256,0.03616469156667845] (9,-1; 9,-1), time: 30.0098s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-0.43653344666312793,0.025204892143386965] (9,-1; 9,-1), time: 30.0207s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2985s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-0.3552273033700201,0.1889449172769595] (9,-1; 9,-1), time: 30.0098s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-0.025370875820579914,0.6137110931981185] (9,-1; 9,-1), time: 30.1946s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-0.3551160311266879,0.24847837975293144] (9,-1; 9,-1), time: 30.3506s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.39426101775886063,0.11267465653565828] (9,-1; 9,-1), time: 30.2789s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-0.45971831911107,0.06986508130875732] (9,-1; 9,-1), time: 30.0349s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[1e-05,0.6024964287755633] (15,-1; 9,-1), time: 15.3378s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[1e-05,2.161970004553504] (15,-1; 9,-1), time: 15.3075s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[1e-05,1.49763795450894] (15,-1; 9,-1), time: 15.4078s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[1e-05,0.9222914695411515] (15,-1; 9,-1), time: 15.4791s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[1e-05,0.5354952125023147] (15,-1; 9,-1), time: 23.9107s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[1e-05,0.4012859314535262] (15,-1; 9,-1), time: 26.3843s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[1e-05,2.0911347548198695] (15,-1; 9,-1), time: 15.3052s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-0.18006369292625926,0.41941122635395606] (9,-1; 9,-1), time: 30.0752s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[1e-05,2.7010658677654837] (15,-1; 9,-1), time: 15.3380s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-0.5426923116510892,0.012495082683858103] (9,-1; 9,-1), time: 30.0176s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-0.07551285779347568,0.38781915346919343] (9,-1; 9,-1), time: 30.0158s, #vars: 1587, #constrs: 953, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 3 has unstable to stable neurons: [(71, -1), (59, -1), (17, -1), (77, -1), (19, -1), (89, -1), (57, -1), (39, -1), (33, -1), (20, -1), (48, -1), (24, -1), (16, 1), (31, -1), (7, -1), (34, -1), (11, 1), (62, -1), (81, -1), (88, -1), (3, -1), (97, -1), (92, 1), (0, -1), (52, 1), (98, -1), (63, -1), (22, -1), (66, -1), (4, -1), (65, -1), (78, 1), (93, -1), (85, 1), (43, -1), (6, -1), (14, -1), (55, -1), (45, -1), (21, -1), (36, 1), (10, 1), (58, 1), (82, -1), (76, -1), (56, 1), (67, 1), (74, 1), (13, 1), (80, 1), (54, -1), (70, 1), (91, 1), (32, 1), (42, 1), (18, -1), (35, 1), (49, 1), (64, 1), (47, 1), (8, 1), (12, 1)]
best_l after optimization: -17.590288162231445 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.352553129196167
alpha-CROWN with intermediate bounds by MIP: tensor([[-0.08782291, -0.96490955, -1.26829863, -3.37489414, -1.96212769,
         -0.88230944, -1.66675091, -3.06460166, -4.31857252]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 176.23251342773438, ub improved 260.1041564941406, time 115.2218
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_24', 'lay12_59', 'lay12_18', 'lay12_4', 'lay12_13', 'lay12_17', 'lay12_29', 'lay12_92', 'lay12_96', 'lay12_83', 'lay12_46', 'lay12_94', 'lay12_95', 'lay12_87', 'lay12_90', 'lay12_53', 'lay12_2', 'lay12_21', 'lay12_63', 'lay12_10', 'lay12_99', 'lay12_68', 'lay12_69', 'lay12_30', 'lay12_86', 'lay12_35', 'lay12_77', 'lay12_73', 'lay12_81', 'lay12_7', 'lay12_39', 'lay12_32', 'lay12_45', 'lay12_43', 'lay12_98', 'lay12_11', 'lay12_34', 'lay12_97', 'lay12_44', 'lay12_5', 'lay12_62', 'lay12_71', 'lay12_49', 'lay12_26', 'lay12_31', 'lay12_61', 'lay12_38', 'lay12_65', 'lay12_51', 'lay12_74', 'lay12_42', 'lay12_54', 'lay12_50', 'lay12_8', 'lay12_0', 'lay12_88', 'lay12_48', 'lay12_82', 'lay12_85', 'lay12_23', 'lay12_58', 'lay12_93', 'lay12_40', 'lay12_1', 'lay12_57', 'lay12_78', 'lay12_28', 'lay12_72', 'lay12_60', 'lay12_80', 'lay12_20', 'lay12_66', 'lay12_3', 'lay12_33', 'lay12_9', 'lay12_41', 'lay12_67', 'lay12_75', 'lay12_91', 'lay12_89', 'lay12_19', 'lay12_14', 'lay12_56', 'lay12_84', 'lay12_16', 'lay12_37', 'lay12_47', 'lay12_64', 'lay12_79', 'lay12_12', 'lay12_76', 'lay12_70', 'lay12_55', 'lay12_15', 'lay12_52', 'lay12_27', 'lay12_22', 'lay12_36', 'lay12_6', 'lay12_25'] filter: 1.0
Solving MIP for lay12_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4307s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5109s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5120s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5344s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5769s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5811s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6069s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4864s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5010s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1650s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9473s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[1e-05,1.377387262576969] (15,-1; 9,-1), time: 15.4064s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[1e-05,1.8845096104490118] (15,-1; 9,-1), time: 15.4337s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[1e-05,1.3096660629238515] (15,-1; 9,-1), time: 15.6023s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5056s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3789s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,3.3814769738669477] (15,-1; 9,-1), time: 15.3724s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[1e-05,0.8236970790406081] (15,-1; 9,-1), time: 16.2669s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4104s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[1e-05,1.5382757029894334] (15,-1; 9,-1), time: 16.1045s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.15391358934182295,0.37763433408588365] (9,-1; 9,-1), time: 30.0167s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-0.5904638584565457,0.11992075463842901] (9,-1; 9,-1), time: 30.0155s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-0.48462319264181913,0.14846919839104908] (9,-1; 9,-1), time: 30.0302s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-0.6438893772185367,0.03802106158743105] (9,-1; 9,-1), time: 30.0258s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-0.6783120718237117,0.01013078046858063] (9,-1; 9,-1), time: 30.0588s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.6409859283161728,0.06426432074439185] (9,-1; 9,-1), time: 30.1478s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5662s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-0.21194974438356443,0.21466192387965133] (9,-1; 9,-1), time: 30.1292s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.2599444555507493,0.6916642624969453] (9,-1; 9,-1), time: 30.1565s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,1.0494740836550032] (15,-1; 9,-1), time: 15.5567s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-0.25325021395755953,0.49401027568144007] (9,-1; 9,-1), time: 30.0761s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2386s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3614s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4316s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.029317200940930432,0.3837277865040766] (9,-1; 9,-1), time: 30.1305s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4312s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4183s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.2141s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.0088s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4019s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-0.021808568142536466,0.6529038157121041] (9,-1; 9,-1), time: 30.1141s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.7703432373425511,0.005588480797303423] (9,-1; 9,-1), time: 30.0287s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3700s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-0.620779653073732,0.02071360029439909] (9,-1; 9,-1), time: 30.0340s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.07525245462015959,0.8296299903097037] (9,-1; 9,-1), time: 30.0710s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.805215711882516,0.11427069587699251] (9,-1; 9,-1), time: 30.0705s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[1e-05,1.1321457070213214] (15,-1; 9,-1), time: 25.7493s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-0.14728462930085504,0.711182706473432] (9,-1; 9,-1), time: 30.1413s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-0.7318797590835512,0.006421986788911588] (9,-1; 9,-1), time: 30.1922s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3686s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-0.0025886183147520647,0.43519647709680503] (9,-1; 9,-1), time: 30.0181s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.23689992975726615,0.6155730035858422] (9,-1; 9,-1), time: 30.0209s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-0.49820785096620473,0.22257724654928443] (9,-1; 9,-1), time: 30.0108s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.1142098306940548,0.5233789568046677] (9,-1; 9,-1), time: 30.0100s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3572s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-0.4804107126848661,0.05875583338233283] (9,-1; 9,-1), time: 30.0102s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4160s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4103s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4170s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4084s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-0.3780775800311594,0.08453730339465843] (9,-1; 9,-1), time: 30.0087s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[1e-05,1.6104370449894396] (15,-1; 9,-1), time: 15.4276s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3993s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4336s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3842s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3774s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[1e-05,0.6677733069406943] (15,-1; 9,-1), time: 23.8427s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1518s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4076s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4241s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4919s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.12613264774251098,0.2973680231893883] (9,-1; 9,-1), time: 30.0309s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5412s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4141s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3983s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.2283792749736815] (15,-1; 9,-1), time: 15.4292s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4194s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-0.7475951425573725,0.014609678442450374] (9,-1; 9,-1), time: 30.0206s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[1e-05,2.5879493214478493] (15,-1; 9,-1), time: 15.4519s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[1e-05,1.3390352919872828] (15,-1; 9,-1), time: 15.4792s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.815038377920125] (15,-1; 9,-1), time: 15.4340s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[1e-05,1.1612577504999677] (15,-1; 9,-1), time: 15.4739s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[1e-05,0.7351700861835904] (15,-1; 9,-1), time: 15.3960s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-0.4467348007996632,0.24876939613246096] (9,-1; 9,-1), time: 30.0112s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-0.17841966440997128,0.38026608776427157] (9,-1; 9,-1), time: 30.0081s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4144s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-0.5864528716939581,0.014239102422419485] (9,-1; 9,-1), time: 30.0223s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[1e-05,2.099877096710569] (15,-1; 9,-1), time: 15.3934s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[1e-05,2.7943757517928463] (15,-1; 9,-1), time: 15.4843s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[1e-05,2.2407805975211477] (15,-1; 9,-1), time: 15.4283s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[1e-05,0.5459249546902755] (15,-1; 9,-1), time: 15.4702s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-0.4776282705337464,0.3484811858641572] (9,-1; 9,-1), time: 30.0090s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[1e-05,4.048445021617009] (15,-1; 9,-1), time: 15.4135s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,0.8597845093170912] (15,-1; 9,-1), time: 15.3711s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[1e-05,2.801246208464898] (15,-1; 9,-1), time: 15.4610s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.4599512891699065,0.1893020658785205] (9,-1; 9,-1), time: 30.0579s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[1e-05,0.7666749428739595] (15,-1; 9,-1), time: 15.4616s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[1e-05,0.6583625607307015] (15,-1; 9,-1), time: 15.3747s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.019197512588081,0.3243705370746375] (9,-1; 9,-1), time: 30.0282s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.3556437373565379,0.2984300749812037] (9,-1; 9,-1), time: 30.0120s, #vars: 1759, #constrs: 1161, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 4 has unstable to stable neurons: [(80, -1), (14, -1), (40, -1), (8, 1), (79, -1), (2, -1), (1, 1), (30, -1), (57, -1), (5, -1), (33, -1), (91, -1), (72, -1), (13, -1), (37, -1), (10, 1), (93, -1), (87, 1), (50, 1), (15, -1), (88, -1), (89, -1), (96, 1), (95, -1), (47, -1), (28, -1), (4, -1), (48, -1), (6, -1), (85, -1), (69, 1), (77, 1), (21, -1), (44, -1), (76, 1), (99, 1), (63, 1), (65, -1), (53, -1), (36, -1), (43, 1), (49, 1), (55, 1), (26, -1), (41, -1), (9, 1), (20, -1), (81, -1), (78, -1), (73, 1), (19, 1), (31, 1), (34, 1), (68, 1), (56, 1), (92, 1), (11, 1), (25, 1), (83, -1), (32, -1), (38, 1), (12, 1), (62, -1), (16, 1)]
best_l after optimization: 7.7768449783325195 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.250489711761475
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.86836457,  2.08134079,  1.80764556, -0.93183708,  1.50459433,
          1.44906509,  1.92663383, -0.53363991, -1.39532232]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 387.3531799316406, ub improved 579.0390014648438, time 107.2196
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_20', 'lay14_5', 'lay14_92', 'lay14_2', 'lay14_75', 'lay14_11', 'lay14_47', 'lay14_64', 'lay14_18', 'lay14_72', 'lay14_59', 'lay14_14', 'lay14_87', 'lay14_0', 'lay14_46', 'lay14_51', 'lay14_54', 'lay14_8', 'lay14_84', 'lay14_85', 'lay14_10', 'lay14_91', 'lay14_35', 'lay14_36', 'lay14_86', 'lay14_16', 'lay14_76', 'lay14_22', 'lay14_1', 'lay14_19', 'lay14_56', 'lay14_31', 'lay14_28', 'lay14_50', 'lay14_41', 'lay14_12', 'lay14_37', 'lay14_98', 'lay14_77', 'lay14_60', 'lay14_30', 'lay14_82', 'lay14_21', 'lay14_42', 'lay14_4', 'lay14_74', 'lay14_33', 'lay14_96', 'lay14_44', 'lay14_45', 'lay14_79', 'lay14_63', 'lay14_78', 'lay14_29', 'lay14_3', 'lay14_9', 'lay14_88', 'lay14_83', 'lay14_23', 'lay14_73', 'lay14_69', 'lay14_70', 'lay14_15', 'lay14_40', 'lay14_55', 'lay14_62', 'lay14_67', 'lay14_71', 'lay14_24', 'lay14_57', 'lay14_81', 'lay14_32', 'lay14_90', 'lay14_7', 'lay14_52', 'lay14_66', 'lay14_26', 'lay14_25', 'lay14_53', 'lay14_65', 'lay14_39', 'lay14_6', 'lay14_99', 'lay14_13', 'lay14_38', 'lay14_49', 'lay14_80', 'lay14_48', 'lay14_43', 'lay14_95', 'lay14_68', 'lay14_89', 'lay14_17', 'lay14_34', 'lay14_61', 'lay14_58', 'lay14_27', 'lay14_93', 'lay14_97', 'lay14_94'] filter: 1.0
Solving MIP for lay14_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4686s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5098s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5281s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5315s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5639s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5670s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5836s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6256s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4821s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5280s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4739s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5141s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5123s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5051s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5033s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5352s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4771s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[1e-05,1.1569629877969212] (15,-1; 9,-1), time: 15.4806s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[1e-05,0.49439108421831013] (15,-1; 9,-1), time: 15.4994s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[1e-05,0.5297269737017026] (15,-1; 9,-1), time: 16.3731s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[1e-05,0.7084032414250239] (15,-1; 9,-1), time: 23.1877s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.15393895273080294,0.1998591554401032] (9,-1; 9,-1), time: 30.0146s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.11160230140132911,0.45235968530604836] (9,-1; 9,-1), time: 30.0188s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.5448713138747652,0.01723246285877687] (9,-1; 9,-1), time: 30.0197s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[-0.8513260879979292,0.2096729185818025] (9,-1; 9,-1), time: 30.0438s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-0.8779730055989021,0.14448362206300938] (9,-1; 9,-1), time: 30.0394s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-0.7097152276394688,0.2155828531059216] (9,-1; 9,-1), time: 30.2190s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.3588243266012812,0.23257493419988137] (9,-1; 9,-1), time: 30.0162s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5297s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.34421850055589037,0.18050931830815198] (9,-1; 9,-1), time: 30.0112s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5594s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.28124578040256987,0.36164824142802093] (9,-1; 9,-1), time: 30.0106s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[-0.3475263489706762,0.17895976923578014] (9,-1; 9,-1), time: 30.0219s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5237s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4774s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3842s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-0.31412407608858034,0.6361684174080411] (9,-1; 9,-1), time: 30.0269s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.24932913204960497,0.4579479601122819] (9,-1; 9,-1), time: 30.0105s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[1e-05,2.475657986783109] (15,-1; 9,-1), time: 15.6885s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4762s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5931s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[1e-05,1.302372111955603] (15,-1; 9,-1), time: 15.4886s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 14.7926s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-0.3370712189253957,0.14595428972017413] (9,-1; 9,-1), time: 30.0416s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[1e-05,0.9539906726503128] (15,-1; 9,-1), time: 15.5383s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[1e-05,1.8103063566346589] (15,-1; 9,-1), time: 15.5517s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[1e-05,1.77662599693162] (15,-1; 9,-1), time: 15.5667s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.3079051092933216,0.3584660216248601] (9,-1; 9,-1), time: 30.0115s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[1e-05,1.3620128970031342] (15,-1; 9,-1), time: 15.5612s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9838s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.3301358396887224,0.16123738409402455] (9,-1; 9,-1), time: 30.0140s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-0.671350264943611,0.008566038090863863] (9,-1; 9,-1), time: 30.0176s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-0.026903606265302672,0.4628080059911714] (9,-1; 9,-1), time: 30.0428s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[1e-05,1.0233247486872186] (15,-1; 9,-1), time: 15.4931s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-0.14371687532490562,0.32716348519385025] (9,-1; 9,-1), time: 30.0136s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[1e-05,1.206041369560091] (15,-1; 9,-1), time: 16.2498s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[1e-05,0.5450005688646619] (15,-1; 9,-1), time: 29.2736s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5627s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[1e-05,0.99151341818499] (15,-1; 9,-1), time: 15.4952s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5145s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[1e-05,1.0606793922251405] (15,-1; 9,-1), time: 16.2641s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-0.4344027370644577,0.16823093707496387] (9,-1; 9,-1), time: 30.0099s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-0.07601541896782735,0.8041515365021751] (9,-1; 9,-1), time: 30.0277s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4451s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4534s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5294s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0361s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.33393277847546204,0.2791829386345946] (9,-1; 9,-1), time: 30.1061s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4497s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.7188442847489299,0.027084353490078882] (9,-1; 9,-1), time: 30.0747s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4921s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-0.3380197293375273,0.3295698417011345] (9,-1; 9,-1), time: 30.0154s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.6958394714554321,0.24122438406097785] (9,-1; 9,-1), time: 30.2265s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[1e-05,4.505642342040355] (15,-1; 9,-1), time: 15.5368s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3877s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[1e-05,2.2896803972195503] (15,-1; 9,-1), time: 15.4769s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-0.4085790675461403,0.24450139594193165] (9,-1; 9,-1), time: 30.0242s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4510s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5129s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[1e-05,0.6486591378052828] (15,-1; 9,-1), time: 23.2922s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[1e-05,1.2732910236234845] (15,-1; 9,-1), time: 23.4725s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[1e-05,2.577524378630852] (15,-1; 9,-1), time: 15.5256s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.1922071551846353,0.4221921848950156] (9,-1; 9,-1), time: 30.0100s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-0.1929620831087614,0.33416951579880294] (9,-1; 9,-1), time: 30.0128s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-0.509109036709416,0.2054597582823875] (9,-1; 9,-1), time: 30.0169s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-0.667226472756694,0.17567721331681926] (9,-1; 9,-1), time: 30.0170s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.524092995164192,0.09069515967148935] (9,-1; 9,-1), time: 30.0971s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5239s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-0.5378182080007331,0.14184115332378044] (9,-1; 9,-1), time: 30.0089s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-0.2786753315491864,0.3016938872417022] (9,-1; 9,-1), time: 30.0226s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.06134983341866347,0.5646154335693172] (9,-1; 9,-1), time: 30.0171s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[1e-05,1.960551631981816] (15,-1; 9,-1), time: 15.4871s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[1e-05,2.308076390933789] (15,-1; 9,-1), time: 15.4864s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[1e-05,0.7797578146720092] (15,-1; 9,-1), time: 16.2182s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[1e-05,2.1020926490714724] (15,-1; 9,-1), time: 15.5009s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[1e-05,2.2731631136927213] (15,-1; 9,-1), time: 15.4849s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[1e-05,2.8580514084509607] (15,-1; 9,-1), time: 15.5004s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-0.16875065458618257,0.25479086187419386] (9,-1; 9,-1), time: 30.0100s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-0.39666456253916255,0.05006382149588975] (9,-1; 9,-1), time: 30.0088s, #vars: 1923, #constrs: 1357, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-0.7428056424468957,0.09147147485493642] (9,-1; 9,-1), time: 30.0088s, #vars: 1923, #constrs: 1357, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 5 has unstable to stable neurons: [(24, -1), (59, -1), (18, 1), (13, -1), (17, -1), (29, 1), (92, -1), (96, -1), (83, -1), (94, 1), (95, -1), (63, -1), (10, -1), (99, -1), (68, 1), (86, 1), (35, 1), (73, -1), (81, 1), (39, -1), (45, -1), (34, -1), (44, -1), (5, -1), (38, -1), (65, -1), (51, -1), (74, -1), (54, -1), (50, 1), (0, -1), (88, 1), (82, -1), (85, 1), (40, 1), (57, -1), (78, -1), (28, -1), (72, 1), (60, 1), (80, -1), (20, -1), (66, 1), (3, 1), (33, -1), (9, 1), (67, -1), (75, -1), (91, 1), (89, -1), (19, -1), (14, -1), (56, -1), (84, -1), (16, -1), (37, -1), (47, 1), (79, -1), (12, -1), (76, -1), (70, 1), (55, 1), (15, 1), (52, 1), (27, 1), (22, 1), (6, -1), (25, 1)]
best_l after optimization: 13.842823028564453 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.285558938980103
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.41524744,  2.77917576,  2.51663208, -0.33311462,  2.30013919,
          2.03293562,  2.80957770,  0.04116368, -0.71893311]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 886.4557495117188, ub improved 1285.79931640625, time 115.3429
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_15', 'lay16_87', 'lay16_11', 'lay16_35', 'lay16_64', 'lay16_20', 'lay16_51', 'lay16_95', 'lay16_0', 'lay16_19', 'lay16_99', 'lay16_34', 'lay16_82', 'lay16_76', 'lay16_65', 'lay16_27', 'lay16_86', 'lay16_80', 'lay16_44', 'lay16_4', 'lay16_14', 'lay16_2', 'lay16_41', 'lay16_53', 'lay16_30', 'lay16_70', 'lay16_83', 'lay16_31', 'lay16_68', 'lay16_58', 'lay16_79', 'lay16_98', 'lay16_69', 'lay16_71', 'lay16_23', 'lay16_40', 'lay16_89', 'lay16_1', 'lay16_84', 'lay16_73', 'lay16_74', 'lay16_88', 'lay16_39', 'lay16_85', 'lay16_92', 'lay16_47', 'lay16_9', 'lay16_77', 'lay16_29', 'lay16_57', 'lay16_63', 'lay16_46', 'lay16_25', 'lay16_50', 'lay16_37', 'lay16_66', 'lay16_78', 'lay16_5', 'lay16_3', 'lay16_28', 'lay16_12', 'lay16_93', 'lay16_18', 'lay16_90', 'lay16_56', 'lay16_97', 'lay16_94', 'lay16_59', 'lay16_32', 'lay16_7', 'lay16_13', 'lay16_36', 'lay16_17', 'lay16_96', 'lay16_43', 'lay16_24', 'lay16_21', 'lay16_33', 'lay16_52', 'lay16_6', 'lay16_60', 'lay16_75', 'lay16_91', 'lay16_55', 'lay16_54', 'lay16_38', 'lay16_81', 'lay16_8', 'lay16_45', 'lay16_26', 'lay16_72', 'lay16_16', 'lay16_61', 'lay16_48', 'lay16_10', 'lay16_67', 'lay16_49', 'lay16_62', 'lay16_42', 'lay16_22'] filter: 1.0
Solving MIP for lay16_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6024s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6620s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6999s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7734s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8232s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8581s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8802s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8877s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6083s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6415s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6379s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1067s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6362s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6761s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5381s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6263s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6758s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6447s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6503s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_79, [-inf,inf]=>[1e-05,1.080490191886628] (15,-1; 9,-1), time: 15.5892s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_53, [-inf,inf]=>[1e-05,0.9255622565364029] (15,-1; 9,-1), time: 27.3539s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6835s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-0.2903449074172113,0.45118796294709507] (9,-1; 9,-1), time: 30.0150s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_95, [-inf,inf]=>[-0.6662582933738443,0.29800271647661164] (9,-1; 9,-1), time: 30.0143s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_87, [-inf,inf]=>[-1.100141222904116,0.12076441726548104] (9,-1; 9,-1), time: 30.0198s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.7703419687022282,0.1368859552128625] (9,-1; 9,-1), time: 30.0182s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-1.1212312287437352,0.019853666299992974] (9,-1; 9,-1), time: 30.0160s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_19, [-inf,inf]=>[-1.0243509782081162,0.45085221949500476] (9,-1; 9,-1), time: 30.0246s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-1.1473183303431502,0.3030504355967218] (9,-1; 9,-1), time: 30.0206s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5316s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6096s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6164s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-1.0906959510320873,0.017030768111215167] (9,-1; 9,-1), time: 30.0424s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-0.6913251404870665,0.08156400087934641] (9,-1; 9,-1), time: 30.0108s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_2, [-inf,inf]=>[-0.27501451207353034,0.39235988531726385] (9,-1; 9,-1), time: 30.0142s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_41, [-inf,inf]=>[-0.291121977728011,0.6137194656246078] (9,-1; 9,-1), time: 30.0154s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-0.3844285832279298,0.2843669452550955] (9,-1; 9,-1), time: 30.0158s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6463s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5882s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-0.6323622193061834,0.05921934922933289] (9,-1; 9,-1), time: 30.0097s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[1e-05,1.2386711807205855] (15,-1; 9,-1), time: 15.6214s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6936s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-0.1792964791833699,0.7043757336944916] (9,-1; 9,-1), time: 30.0119s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6364s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6511s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[1e-05,1.4495042301899073] (15,-1; 9,-1), time: 15.6967s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[1e-05,1.9479278642936226] (15,-1; 9,-1), time: 15.5887s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6353s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6563s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6202s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[1e-05,0.6730411395916704] (15,-1; 9,-1), time: 15.5828s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[1e-05,0.8632859296982192] (15,-1; 9,-1), time: 26.2443s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6825s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-0.4962120421748292,0.10060278178657515] (9,-1; 9,-1), time: 30.0150s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6525s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-1.3798745823389726,0.05949805423034365] (9,-1; 9,-1), time: 30.0143s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-0.3833515065234425,0.34974928012159656] (9,-1; 9,-1), time: 30.0120s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-0.3922252222004181,0.5896611162879083] (9,-1; 9,-1), time: 30.0121s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-0.521637598142187,0.2132176771263613] (9,-1; 9,-1), time: 30.0165s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-0.06888461781132506,1.2118125447735244] (9,-1; 9,-1), time: 30.0100s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_63, [-inf,inf]=>[-0.8629113527436066,0.20680813462974185] (9,-1; 9,-1), time: 30.0152s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-0.017660181627025488,1.1701333577217419] (9,-1; 9,-1), time: 30.0101s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-0.9773588472218873,0.015102616052804982] (9,-1; 9,-1), time: 30.0101s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6666s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-0.46018258147835395,0.2487702655185313] (9,-1; 9,-1), time: 30.0114s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5772s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6851s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6109s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5941s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-0.6156979858171671,0.05012723488838318] (9,-1; 9,-1), time: 30.0161s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-0.3135533019428204,0.21557446762833826] (9,-1; 9,-1), time: 30.0101s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4526s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6327s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6564s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[1e-05,1.2882534661685783] (15,-1; 9,-1), time: 15.5799s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[1e-05,2.6075755757314103] (15,-1; 9,-1), time: 15.6092s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-0.3325393245708677,0.24302960837646845] (9,-1; 9,-1), time: 30.0172s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[1e-05,1.017571665213723] (15,-1; 9,-1), time: 15.6667s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-0.7819459502792749,0.005381612032544497] (9,-1; 9,-1), time: 30.0111s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_91, [-inf,inf]=>[1e-05,3.3618791003500306] (15,-1; 9,-1), time: 15.6164s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6890s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6099s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-0.5428213408928549,0.019340656011825212] (9,-1; 9,-1), time: 30.0137s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[1e-05,1.7640477922875093] (15,-1; 9,-1), time: 15.6073s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5788s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5864s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[1e-05,3.9610682359747993] (15,-1; 9,-1), time: 15.6143s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-0.2055413239857297,0.4697487564407792] (9,-1; 9,-1), time: 30.0113s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_13, [-inf,inf]=>[-0.45939428614972666,0.036302966139130345] (9,-1; 9,-1), time: 30.0207s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-0.1313019950402518,0.854491307364456] (9,-1; 9,-1), time: 30.0126s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[-0.6814969250668763,0.11191696145690072] (9,-1; 9,-1), time: 30.0093s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[1e-05,2.421142911271188] (15,-1; 9,-1), time: 15.6928s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-0.05606576646312997,0.3772919271862214] (9,-1; 9,-1), time: 30.0109s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[1e-05,3.063226844313322] (15,-1; 9,-1), time: 15.6824s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[1e-05,1.3280132811788465] (15,-1; 9,-1), time: 15.6314s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[1e-05,1.120730389125276] (15,-1; 9,-1), time: 15.5236s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[1e-05,1.7392415140547293] (15,-1; 9,-1), time: 15.8324s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[1e-05,3.9486427678852127] (15,-1; 9,-1), time: 15.6659s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_38, [-inf,inf]=>[-0.08788266067654477,0.3703713761165425] (9,-1; 9,-1), time: 30.0104s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_26, [-inf,inf]=>[-0.02721550532843243,0.6112239913312796] (9,-1; 9,-1), time: 30.0095s, #vars: 2095, #constrs: 1565, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 6 has unstable to stable neurons: [(20, -1), (5, -1), (92, -1), (75, -1), (11, -1), (72, 1), (59, -1), (14, 1), (87, -1), (51, -1), (54, -1), (8, -1), (85, -1), (10, -1), (35, -1), (36, 1), (86, -1), (16, -1), (1, 1), (19, -1), (56, -1), (41, 1), (37, 1), (77, -1), (30, -1), (82, 1), (21, -1), (4, -1), (74, -1), (33, 1), (96, 1), (45, -1), (79, 1), (63, -1), (3, 1), (9, -1), (23, 1), (73, 1), (69, 1), (70, 1), (15, -1), (67, 1), (71, 1), (24, -1), (57, -1), (32, -1), (52, -1), (25, -1), (53, -1), (65, 1), (13, -1), (38, 1), (49, -1), (80, 1), (48, -1), (43, 1), (68, 1), (89, 1), (17, -1), (34, -1), (58, 1), (27, 1), (97, 1), (94, -1)]
best_l after optimization: 17.463306427001953 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.632139205932617
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.73058486,  3.12995410,  2.92594624,  0.06047821,  2.76771998,
          2.32874799,  3.36933851,  0.39996409, -0.24942780]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 1813.532470703125, ub improved 2710.8564453125, time 97.9641
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([9, 1])
MIP finished with 629.935465335846s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])

all verified at 0th iter
best_l after optimization: 19.50048828125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06878447532653809
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.86576581, 3.27497578, 3.19595766, 0.34235632, 3.03881025, 2.43627524,
         3.67521644, 0.57848430, 0.09264565]], device='cuda:0') None
refined global lb: tensor([[2.86576581],
        [3.27497578],
        [3.19595766],
        [0.34235632],
        [3.03881025],
        [2.43627524],
        [3.67521644],
        [0.57848430],
        [0.09264565]], device='cuda:0') min: tensor(0.09264565, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 644.4011 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time (total 1): 644.3947007959576, max time: 644.4011447429657
safe-incomplete-refine (total 1): [0]
