Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: mnist_9_100
  path: mnist_9_100_nat.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 53
  end: 54
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.026
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 02:11:52 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
Internal results will be saved to Verified_ret_[mnist_9_100]_start=53_end=54_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-198.43608093, -282.37454224, -298.01736450, -275.85656738,
         -333.24005127, -268.87960815, -360.65878296, -271.77770996,
         -317.30407715]], device='cuda:0') None
best_l after optimization: -1345.814453125 with beta sum per layer: []
alpha/beta optimization time: 12.83409833908081
initial alpha-CROWN bounds: tensor([[ -88.89543152, -151.17634583, -161.79132080, -149.01881409,
         -171.72929382, -131.35853577, -181.01005554, -146.41349792,
         -164.42121887]], device='cuda:0')
Worst class: (+ rhs) -181.0100555419922
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.0065000057220458984, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-0.79266459, -1.99811590, -1.72904444,  1.54812908, -2.49472952,
           4.95486498,  0.12718776, -2.94377923,  2.60641289,  1.52581406],
         [-0.79266459, -1.99811590, -1.72904444,  1.54812908, -2.49472952,
           4.95486498,  0.12718776, -2.94377923,  2.60641289,  1.52581406]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[5.74752951, 6.95298100, 6.68390942, 3.40673590, 7.44959450,
          4.82767725, 7.89864445, 2.34845209, 3.42905092]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7685 seconds.
PGD attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_85', 'lay4_88', 'lay4_16', 'lay4_96', 'lay4_49', 'lay4_7', 'lay4_78', 'lay4_90', 'lay4_86', 'lay4_23', 'lay4_75', 'lay4_97', 'lay4_0', 'lay4_53', 'lay4_82', 'lay4_28', 'lay4_18', 'lay4_1', 'lay4_40', 'lay4_10', 'lay4_95', 'lay4_3', 'lay4_99', 'lay4_43', 'lay4_20', 'lay4_21', 'lay4_67', 'lay4_42', 'lay4_11', 'lay4_70', 'lay4_24', 'lay4_60', 'lay4_38', 'lay4_39', 'lay4_52', 'lay4_79', 'lay4_83', 'lay4_5', 'lay4_98', 'lay4_59', 'lay4_37', 'lay4_50', 'lay4_54', 'lay4_33', 'lay4_65', 'lay4_41', 'lay4_6', 'lay4_8', 'lay4_77', 'lay4_30', 'lay4_63', 'lay4_48', 'lay4_62', 'lay4_87', 'lay4_72', 'lay4_45', 'lay4_74', 'lay4_51', 'lay4_26', 'lay4_47', 'lay4_9'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:645: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6916s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_28, [-inf,inf]=>[-0.7854000865782407,0.8693745039017642] (2,-1; 2,-1), time: 0.8910s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-1.59272656285563,0.1934103996380903] (2,-1; 2,-1), time: 1.4879s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2030s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.9663146111219819,0.4088845089973859] (2,-1; 2,-1), time: 2.2527s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.7320323771356316,0.20926501559626445] (2,-1; 2,-1), time: 2.4019s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_96, [-inf,inf]=>[-1.3064789275147144,0.029178628140175664] (2,-1; 2,-1), time: 2.4662s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4804s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_23, [-inf,inf]=>[-1.2930640480651685,0.10070876261465367] (2,-1; 2,-1), time: 2.5202s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_90, [-inf,inf]=>[-2.0559345081358504,0.08294104383426852] (2,-1; 2,-1), time: 2.5411s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1823s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2400s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3720s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1818s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.1759800598572397,0.9983977774895048] (2,-1; 2,-1), time: 2.9284s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.7257719210974034,0.4041026959700015] (2,-1; 2,-1), time: 2.9796s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1989s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1913s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2178s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4216567931465183,0.8954079280522211] (2,-1; 2,-1), time: 3.2204s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_82, [-inf,inf]=>[-0.29714421293126053,0.9420685060269219] (2,-1; 2,-1), time: 3.2159s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3978s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2028s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-0.22473260284431823,0.5618070177796105] (2,-1; 2,-1), time: 3.4928s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[-0.8006930509762039,0.27356356979701113] (2,-1; 2,-1), time: 3.5323s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1772s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2793s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5975s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_1, [-inf,inf]=>[-0.4511916469521564,0.35647235635003227] (2,-1; 2,-1), time: 2.9959s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.5562529274551552,0.23135354090748447] (2,-1; 2,-1), time: 4.5360s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[-0.5335072068737822,0.31652896840995903] (2,-1; 2,-1), time: 4.1751s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_10, [-inf,inf]=>[-0.9351432689074615,0.16369367744507946] (2,-1; 2,-1), time: 3.1728s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[-0.49067065318256203,0.8405199928906647] (2,-1; 2,-1), time: 1.6799s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.9949536385404496,0.07786291278767771] (2,-1; 2,-1), time: 2.5026s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_20, [-inf,inf]=>[-0.7989367093731998,0.02211750722123187] (2,-1; 2,-1), time: 2.8650s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_37, [-inf,inf]=>[-0.061966151747760975,1.1330271382893309] (2,-1; 2,-1), time: 2.0053s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-0.8930498953882683,0.3861625911829643] (2,-1; 2,-1), time: 1.9958s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1990s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[1e-05,1.784082057584048] (15,-1; 2,-1), time: 0.9223s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.2590098351453943,0.6296052721473429] (2,-1; 2,-1), time: 3.6445s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2026s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2086s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-0.6539855706582938,0.6638167499757166] (2,-1; 2,-1), time: 2.6425s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.954906357325416,0.40920325238781696] (2,-1; 2,-1), time: 2.9673s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_21, [-inf,inf]=>[-0.6688058140660241,0.560516777962351] (2,-1; 2,-1), time: 3.6015s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1572s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1930s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.7228504296453314,0.2354060304136616] (2,-1; 2,-1), time: 3.4923s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7382s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[1e-05,1.2202272626420012] (15,-1; 2,-1), time: 1.7763s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5935845582064629,0.3135817870406853] (2,-1; 2,-1), time: 2.8051s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_50, [-inf,inf]=>[-0.023988290938549556,0.9547776840589238] (2,-1; 2,-1), time: 3.1711s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.4310441785762677,0.45629862580253766] (2,-1; 2,-1), time: 1.5425s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-1.01983732456754,0.3330264169271158] (2,-1; 2,-1), time: 3.3530s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.1459247932251233] (15,-1; 2,-1), time: 2.3800s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-0.8530652286912168,0.3169094007516789] (2,-1; 2,-1), time: 3.2186s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.5595603048469746,0.2186316066421664] (2,-1; 2,-1), time: 3.4075s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.28563118951193406,0.5902440592351863] (2,-1; 2,-1), time: 2.4745s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.26918817466632244,0.5325644861450219] (2,-1; 2,-1), time: 2.9608s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[1e-05,1.0717150863628437] (15,-1; 2,-1), time: 3.2985s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[1e-05,0.7648119817676566] (15,-1; 2,-1), time: 3.0607s, #vars: 1065, #constrs: 320, improved: True
PGD done for relu layer 2
MIP improved 61 nodes out of 61 unstable nodes, lb improved 15.387578010559082, ub improved 16.19501304626465, time 10.6327
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_85', 'lay6_30', 'lay6_60', 'lay6_13', 'lay6_91', 'lay6_56', 'lay6_12', 'lay6_1', 'lay6_39', 'lay6_23', 'lay6_61', 'lay6_62', 'lay6_38', 'lay6_90', 'lay6_74', 'lay6_34', 'lay6_64', 'lay6_36', 'lay6_4', 'lay6_42', 'lay6_14', 'lay6_78', 'lay6_51', 'lay6_8', 'lay6_5', 'lay6_87', 'lay6_97', 'lay6_19', 'lay6_50', 'lay6_26', 'lay6_82', 'lay6_9', 'lay6_95', 'lay6_68', 'lay6_33', 'lay6_27', 'lay6_32', 'lay6_6', 'lay6_99', 'lay6_96', 'lay6_3', 'lay6_48', 'lay6_21', 'lay6_46', 'lay6_75', 'lay6_71', 'lay6_28', 'lay6_40', 'lay6_88', 'lay6_25', 'lay6_72', 'lay6_35', 'lay6_22', 'lay6_0', 'lay6_83', 'lay6_93', 'lay6_20', 'lay6_77', 'lay6_15', 'lay6_43', 'lay6_66', 'lay6_80', 'lay6_67', 'lay6_24', 'lay6_45', 'lay6_81', 'lay6_86', 'lay6_29', 'lay6_10', 'lay6_79', 'lay6_55', 'lay6_11', 'lay6_98', 'lay6_63', 'lay6_59', 'lay6_7', 'lay6_54', 'lay6_73', 'lay6_69', 'lay6_44', 'lay6_52', 'lay6_53', 'lay6_76', 'lay6_94', 'lay6_41', 'lay6_18', 'lay6_58', 'lay6_84'] filter: 1.0
Solving MIP for lay6_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2432s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2410s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3371s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2178s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6474s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7518s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2179s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2252s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3217s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9924s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.9307s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7994s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.8357s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5335s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0325s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-0.7131353009065762,0.39443630803160273] (2,-1; 2,-1), time: 7.7627s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1341s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5956s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.3661075733842192,0.34470556566420313] (2,-1; 2,-1), time: 11.3461s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.5804476684424439,0.4528695023408233] (2,-1; 2,-1), time: 10.0142s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2361s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1761s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5096s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1832s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1845s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9326s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4920s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[-0.48079001276090577,0.27095285130584434] (2,-1; 2,-1), time: 16.5621s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-0.2714383534033571,0.2636839823626589] (2,-1; 2,-1), time: 14.4028s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_90, [-inf,inf]=>[-0.755956016058529,0.15363865522995113] (9,-1; 2,-1), time: 18.5844s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7533s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9820s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-0.35916615331505325,0.5419801475037654] (2,-1; 2,-1), time: 15.0894s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-0.4180133050717962,0.0842416630542015] (2,-1; 2,-1), time: 9.7901s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-0.7473080920972838,0.13400206783165672] (2,-1; 9,-1), time: 21.9522s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-0.2126583696673869,0.3897250267537569] (2,-1; 9,-1), time: 20.2144s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.7957s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-0.7663224492130681,0.25913858364723075] (2,-1; 2,-1), time: 7.8646s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.28642714059216134,0.4189742192754781] (2,-1; 9,-1), time: 23.9747s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.5315914508594567,0.13101250775876] (2,-1; 9,-1), time: 20.1709s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_14, [-inf,inf]=>[-0.6829109204671221,0.03799416791603657] (9,-1; 2,-1), time: 25.0262s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[1e-05,1.481998527260223] (15,-1; 2,-1), time: 2.8972s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1790s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[-0.6857709188852728,0.03681940646641783] (2,-1; 9,-1), time: 21.0669s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1770s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[1e-05,1.1348715532999678] (15,-1; 2,-1), time: 6.6966s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2332s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7790s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3207s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6009s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1733s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.30989380642350134,0.24413075166354067] (9,-1; 9,-1), time: 30.0307s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.6133981251860912,0.09578267752421245] (9,-1; 9,-1), time: 30.0113s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.6743377013144268,0.2800188097244581] (2,-1; 2,-1), time: 11.0366s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1858s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2221s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5666s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-0.510466757093188,0.19894387732546753] (9,-1; 2,-1), time: 19.2580s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1814s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[1e-05,1.117187870184778] (15,-1; 2,-1), time: 4.5256s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-0.3193712661445898,0.412205136241478] (2,-1; 2,-1), time: 12.2888s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.04212176670603516,0.7780962826857645] (2,-1; 9,-1), time: 27.2660s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-0.3755314145524645,0.22373805098159683] (2,-1; 9,-1), time: 19.1361s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1824s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1807s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.2845264307031047,0.23966464744268212] (2,-1; 9,-1), time: 22.7263s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[-0.008515994582970702,0.717032509884904] (2,-1; 2,-1), time: 15.1619s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_52, [-inf,inf]=>[1e-05,0.8455543033999399] (15,-1; 2,-1), time: 3.9996s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-0.3194114051263368,0.30745509502401963] (9,-1; 2,-1), time: 23.0773s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-0.5644711739325597,0.030522513433811453] (9,-1; 2,-1), time: 18.6869s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2242s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.33936943816111287,0.21253026884540263] (2,-1; 2,-1), time: 14.3281s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_40, [-inf,inf]=>[-0.5169751032936127,0.005848889149061941] (9,-1; 9,-1), time: 30.0092s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.29827206790080896,0.2726267743437582] (9,-1; 2,-1), time: 19.7419s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-0.48881176288833195,0.09644261193452018] (9,-1; 2,-1), time: 19.9379s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8380856669880887] (15,-1; 2,-1), time: 3.1914s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[1e-05,1.7353760785687664] (15,-1; 2,-1), time: 3.3901s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-0.22354980909073685,0.5224924860429768] (2,-1; 9,-1), time: 20.9069s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.6197545290751483] (15,-1; 2,-1), time: 15.9017s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-0.3903806251134122,0.2510081603159258] (2,-1; 9,-1), time: 29.7978s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-0.18429881803069845,0.39994941101797227] (9,-1; 9,-1), time: 30.0130s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-0.5690138619708406,0.001691883996431079] (9,-1; 2,-1), time: 27.7990s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[-0.15621164619662037,0.3021997372534425] (9,-1; 9,-1), time: 30.0119s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.23679759804640074,0.3395150084148483] (9,-1; 2,-1), time: 22.8265s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,0.6434153963295226] (15,-1; 2,-1), time: 11.5346s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[1e-05,0.914732482822549] (15,-1; 2,-1), time: 13.2919s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.36509167214857413,0.10490100764534632] (9,-1; 2,-1), time: 19.7260s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.025679542782691682,0.6663910355143309] (9,-1; 2,-1), time: 26.3219s, #vars: 1235, #constrs: 525, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 1 has unstable to stable neurons: [(16, -1), (49, -1), (40, -1), (3, -1), (99, -1), (43, -1), (42, -1), (11, -1), (70, -1), (24, -1), (60, -1), (52, -1), (79, -1), (98, -1), (59, -1), (6, 1), (77, 1), (30, 1), (48, -1), (62, 1), (87, -1), (72, -1), (45, -1), (51, -1), (26, 1), (47, -1)]
best_l after optimization: -501.26422119140625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.344287872314453
alpha-CROWN with intermediate bounds by MIP: tensor([[-32.98818588, -55.85081482, -60.18857193, -55.55183029, -64.14229584,
         -48.42745590, -67.21530151, -54.92773056, -61.97201920]],
       device='cuda:0') None
MIP improved 88 nodes out of 88 unstable nodes, lb improved 29.51844024658203, ub improved 43.26554870605469, time 74.1562
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_71', 'lay8_87', 'lay8_59', 'lay8_17', 'lay8_77', 'lay8_75', 'lay8_19', 'lay8_89', 'lay8_28', 'lay8_57', 'lay8_39', 'lay8_33', 'lay8_30', 'lay8_79', 'lay8_20', 'lay8_48', 'lay8_24', 'lay8_16', 'lay8_31', 'lay8_7', 'lay8_34', 'lay8_11', 'lay8_62', 'lay8_41', 'lay8_81', 'lay8_88', 'lay8_25', 'lay8_72', 'lay8_38', 'lay8_3', 'lay8_97', 'lay8_92', 'lay8_0', 'lay8_60', 'lay8_52', 'lay8_69', 'lay8_98', 'lay8_63', 'lay8_22', 'lay8_66', 'lay8_27', 'lay8_40', 'lay8_4', 'lay8_5', 'lay8_65', 'lay8_78', 'lay8_93', 'lay8_2', 'lay8_85', 'lay8_43', 'lay8_6', 'lay8_61', 'lay8_29', 'lay8_14', 'lay8_53', 'lay8_55', 'lay8_50', 'lay8_95', 'lay8_45', 'lay8_21', 'lay8_36', 'lay8_10', 'lay8_58', 'lay8_73', 'lay8_82', 'lay8_15', 'lay8_76', 'lay8_56', 'lay8_9', 'lay8_67', 'lay8_44', 'lay8_90', 'lay8_74', 'lay8_83', 'lay8_94', 'lay8_13', 'lay8_80', 'lay8_54', 'lay8_96', 'lay8_26', 'lay8_68', 'lay8_1', 'lay8_70', 'lay8_91', 'lay8_51', 'lay8_32', 'lay8_46', 'lay8_37', 'lay8_99', 'lay8_42', 'lay8_23', 'lay8_18', 'lay8_35', 'lay8_49', 'lay8_86', 'lay8_64', 'lay8_84', 'lay8_47', 'lay8_8', 'lay8_12'] filter: 1.0
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3551s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3785s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4171s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3041s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2979s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9365s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0115s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0251s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2999s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1467s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1767s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2838s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2486s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4373s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2796s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6959s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0730s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2573s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.3779s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2340s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5943s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7861s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2955s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2590s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7027s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[1e-05,1.4016830925038333] (15,-1; 9,-1), time: 15.2574s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[1e-05,1.4478000535544064] (15,-1; 9,-1), time: 15.3856s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3066s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,0.5877705260101338] (15,-1; 9,-1), time: 15.7761s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2389s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[1e-05,1.1532174581464816] (15,-1; 9,-1), time: 17.1523s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2955s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-0.1336928917444697,0.5184628662789222] (9,-1; 9,-1), time: 30.0172s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.3643951948191441,0.25637094166066327] (9,-1; 9,-1), time: 30.0157s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.25231755099773256,0.441361487886492] (9,-1; 9,-1), time: 30.0179s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.2375010667604827,0.3735771128192746] (9,-1; 9,-1), time: 30.0183s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.5003602943150635,0.4699608627193152] (9,-1; 9,-1), time: 30.0433s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2476s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2509s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7412s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2430s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-0.4688579410948831,0.08321682475176606] (9,-1; 9,-1), time: 30.0180s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.3112654587091523,0.26532107419215634] (9,-1; 9,-1), time: 30.0150s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-0.38651758599290226,0.23940444956788876] (9,-1; 9,-1), time: 30.0158s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-0.23518175083408227,0.44245644993535366] (9,-1; 9,-1), time: 30.0135s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2270s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2411s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.5609228186643982] (15,-1; 9,-1), time: 15.2559s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.6739420405068656,0.028109989845027723] (9,-1; 9,-1), time: 30.0254s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2339s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-0.16864167337461938,0.3086708360648837] (9,-1; 9,-1), time: 30.0264s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2471s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-0.005195516968265451,0.5325060887313798] (9,-1; 9,-1), time: 30.0182s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.660611708180774,0.004455911059331314] (9,-1; 9,-1), time: 30.0124s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[1e-05,0.7012615456281562] (15,-1; 9,-1), time: 15.6706s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.03583919664306885,0.6282540076198071] (9,-1; 9,-1), time: 30.0312s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.1009764487470024] (15,-1; 9,-1), time: 15.2454s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[1e-05,0.7587566645227436] (15,-1; 9,-1), time: 15.6157s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[1e-05,1.6084860789115571] (15,-1; 2,-1), time: 13.2196s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[1e-05,0.9563631464574807] (15,-1; 9,-1), time: 19.8708s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.39631008997337375,0.07680981794790763] (9,-1; 9,-1), time: 30.0199s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[1e-05,2.326736760221972] (15,-1; 2,-1), time: 4.4266s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2412s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.5891723517527949,0.05760807343294719] (9,-1; 9,-1), time: 30.0106s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.6019719094209279,0.031743345289155116] (9,-1; 9,-1), time: 30.0115s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.11113441557805886,0.5455209857548099] (9,-1; 9,-1), time: 30.0201s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[1e-05,2.3134512848358324] (15,-1; 9,-1), time: 15.2471s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-0.5619997040536255,0.11631974907950698] (9,-1; 9,-1), time: 30.0117s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.21602714619624266,0.3815868417584759] (9,-1; 9,-1), time: 30.3106s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,0.7271555772987968] (15,-1; 9,-1), time: 15.7461s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.2754678150818257,0.2718796758556948] (9,-1; 9,-1), time: 30.0112s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.13599581223522283,0.344184366111553] (9,-1; 9,-1), time: 30.0120s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.7459799250405806,0.02120695835338318] (9,-1; 9,-1), time: 30.0195s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[1e-05,0.7660626584753093] (15,-1; 9,-1), time: 20.2355s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.6021967102857229,0.20400834009037672] (9,-1; 9,-1), time: 30.0134s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[1e-05,1.6187602409272792] (15,-1; 9,-1), time: 15.3269s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[1e-05,0.6675807252985927] (15,-1; 9,-1), time: 15.7383s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2944s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.22725624523374335,0.4181984726098232] (9,-1; 9,-1), time: 30.0395s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.635106338300492,0.021883394851981083] (9,-1; 9,-1), time: 30.0235s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,1.488605028669297] (15,-1; 9,-1), time: 15.3032s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.09376981685010384,0.4948309772909113] (9,-1; 9,-1), time: 30.0123s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.5366607997382251,0.14390226246972782] (9,-1; 9,-1), time: 30.0112s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[1e-05,1.7150689549052869] (15,-1; 9,-1), time: 15.2479s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[1e-05,0.8213757741402447] (15,-1; 2,-1), time: 9.1151s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.6322900116652973,0.010411333250131351] (9,-1; 9,-1), time: 30.0150s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.1013247223006306,0.48193471640493063] (9,-1; 9,-1), time: 30.0145s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.8117031200878252,0.0015873827630804986] (9,-1; 9,-1), time: 30.0177s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-0.32356800994665535,0.07947719478654398] (9,-1; 9,-1), time: 30.0085s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,2.492024285396569] (15,-1; 2,-1), time: 14.8483s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[1e-05,0.9246202386370396] (15,-1; 9,-1), time: 15.2986s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[1e-05,1.426376443887431] (15,-1; 9,-1), time: 15.2324s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-0.46608609524669403,0.11290471483517055] (9,-1; 9,-1), time: 30.0114s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-0.1734110053533187,0.4295127997251396] (9,-1; 9,-1), time: 30.0155s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.3865795174660832,0.29104786795350474] (9,-1; 9,-1), time: 30.0107s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[1e-05,1.5598473560299886] (15,-1; 9,-1), time: 15.2774s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[1e-05,2.4234155884710424] (15,-1; 9,-1), time: 15.2949s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.5844983031839467,0.02850510808451983] (9,-1; 9,-1), time: 30.0124s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-0.4570979249023612,0.08612387123673283] (9,-1; 9,-1), time: 30.0116s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.11435873716178696,0.2647484885550083] (9,-1; 9,-1), time: 30.0091s, #vars: 1411, #constrs: 739, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 2 has unstable to stable neurons: [(30, -1), (13, -1), (56, -1), (12, -1), (1, -1), (39, -1), (23, -1), (38, -1), (34, -1), (64, -1), (36, -1), (42, -1), (78, -1), (51, -1), (87, -1), (19, -1), (9, -1), (95, -1), (33, -1), (32, -1), (99, -1), (96, -1), (3, -1), (48, -1), (46, -1), (75, -1), (71, -1), (88, 1), (93, 1), (77, -1), (15, -1), (43, -1), (66, -1), (80, -1), (24, -1), (45, -1), (86, 1), (29, -1), (10, -1), (79, -1), (63, -1), (73, 1), (69, -1), (44, -1), (52, 1), (76, 1), (94, 1), (18, -1), (58, 1), (84, 1)]
best_l after optimization: -99.00267028808594 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.546881675720215
alpha-CROWN with intermediate bounds by MIP: tensor([[ -6.40560532, -10.27984428, -11.46139908, -11.13441658, -12.83102036,
          -9.05464077, -13.03432274, -11.32530785, -13.47611141]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 72.17293548583984, ub improved 108.13522338867188, time 108.6829
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_80', 'lay10_14', 'lay10_40', 'lay10_46', 'lay10_86', 'lay10_74', 'lay10_58', 'lay10_8', 'lay10_27', 'lay10_17', 'lay10_7', 'lay10_35', 'lay10_42', 'lay10_79', 'lay10_2', 'lay10_1', 'lay10_18', 'lay10_30', 'lay10_75', 'lay10_57', 'lay10_5', 'lay10_33', 'lay10_0', 'lay10_91', 'lay10_72', 'lay10_13', 'lay10_37', 'lay10_97', 'lay10_52', 'lay10_10', 'lay10_93', 'lay10_66', 'lay10_94', 'lay10_82', 'lay10_51', 'lay10_87', 'lay10_98', 'lay10_60', 'lay10_50', 'lay10_15', 'lay10_39', 'lay10_88', 'lay10_89', 'lay10_96', 'lay10_95', 'lay10_47', 'lay10_29', 'lay10_28', 'lay10_4', 'lay10_23', 'lay10_48', 'lay10_22', 'lay10_3', 'lay10_6', 'lay10_85', 'lay10_69', 'lay10_77', 'lay10_21', 'lay10_44', 'lay10_76', 'lay10_99', 'lay10_63', 'lay10_65', 'lay10_53', 'lay10_59', 'lay10_36', 'lay10_43', 'lay10_49', 'lay10_70', 'lay10_54', 'lay10_55', 'lay10_26', 'lay10_41', 'lay10_71', 'lay10_84', 'lay10_24', 'lay10_90', 'lay10_9', 'lay10_20', 'lay10_81', 'lay10_78', 'lay10_45', 'lay10_73', 'lay10_19', 'lay10_31', 'lay10_34', 'lay10_68', 'lay10_67', 'lay10_56', 'lay10_92', 'lay10_11', 'lay10_25', 'lay10_83', 'lay10_32', 'lay10_64', 'lay10_38', 'lay10_61', 'lay10_12', 'lay10_62', 'lay10_16'] filter: 1.0
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3667s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3662s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4012s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4102s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3024s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3308s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9721s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3359s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2882s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3367s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9805s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.1883s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.6023s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[1e-05,1.3473816200435629] (15,-1; 9,-1), time: 15.3534s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[1e-05,1.1221826115714109] (15,-1; 9,-1), time: 15.4173s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3155s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.984457548198564,0.1327467630145919] (9,-1; 9,-1), time: 30.0133s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-0.6147635639298386,0.17256713380577599] (9,-1; 9,-1), time: 30.0201s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-0.7309341309452299,0.030551212513862044] (9,-1; 9,-1), time: 30.0221s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.08004505026119416,0.6740772114190692] (9,-1; 9,-1), time: 30.0300s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-0.8247118376272118,0.0025258168879429845] (9,-1; 9,-1), time: 30.0232s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-0.6086588668532428,0.20347710709381497] (9,-1; 9,-1), time: 30.0357s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.5023694495875801,0.1600752818168473] (9,-1; 9,-1), time: 30.0425s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-0.1980288005751674,0.29547003342263417] (9,-1; 9,-1), time: 30.0766s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-0.0859482328202993,0.8320841637725116] (9,-1; 9,-1), time: 30.2971s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.5741956248775704,0.06778300277018243] (9,-1; 9,-1), time: 30.0204s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[-0.550962785426644,0.3143780677804658] (9,-1; 9,-1), time: 30.0549s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[1e-05,1.667382088281887] (15,-1; 9,-1), time: 15.3130s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3500s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.3584524148531071,0.2316122691551239] (9,-1; 9,-1), time: 30.0106s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3588s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8593s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3407s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2879s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.6979s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.968254194738105,0.033995815063683224] (9,-1; 9,-1), time: 30.0250s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.6144520166315608,0.027200890060169923] (9,-1; 9,-1), time: 30.0252s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,0.6671417390293181] (15,-1; 9,-1), time: 25.2418s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3071s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.3884s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3057s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.968251985301818] (15,-1; 9,-1), time: 15.4476s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1631s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[1e-05,0.9820304982279505] (15,-1; 9,-1), time: 15.9700s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3251s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,1.0825626993991484] (15,-1; 9,-1), time: 15.9921s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8032s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3460s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3094s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,0.8737736679415533] (15,-1; 9,-1), time: 15.3357s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[1e-05,1.9320010204793339] (15,-1; 9,-1), time: 15.3358s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9782s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-0.12475557988331348,0.5478180612403689] (9,-1; 9,-1), time: 30.0114s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-0.5101187213638625,0.01103757988137908] (9,-1; 9,-1), time: 30.0223s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.05387680070562974,0.5372972905784071] (9,-1; 9,-1), time: 30.0171s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-0.09950185795375222,0.4335128021289621] (9,-1; 9,-1), time: 30.0468s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-0.5616322054808254,0.04219070308165017] (9,-1; 9,-1), time: 30.3045s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-0.6563978552276697,0.018569979668616912] (9,-1; 9,-1), time: 30.0191s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3653s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3106s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-0.27045078420473123,0.48903045814435864] (9,-1; 9,-1), time: 30.0105s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.131038832934484] (15,-1; 9,-1), time: 15.5017s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[1e-05,3.4251978651635464] (15,-1; 9,-1), time: 15.4435s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-0.16890574246701873,0.5168909066712877] (9,-1; 9,-1), time: 30.0407s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[1e-05,0.864100504459223] (15,-1; 9,-1), time: 15.3718s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3074s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3533s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3630s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-0.21034854122509408,0.24962685902264595] (9,-1; 9,-1), time: 30.0106s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-0.14607030246141878,0.30687574855735145] (9,-1; 9,-1), time: 30.0267s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[1e-05,1.7591090257853683] (15,-1; 9,-1), time: 15.3116s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[1e-05,1.5201413194748172] (15,-1; 9,-1), time: 15.9178s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.746562957122508] (15,-1; 9,-1), time: 15.3933s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[1e-05,1.0479907383329883] (15,-1; 9,-1), time: 15.3672s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.7076081168287922] (15,-1; 9,-1), time: 16.3632s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[1e-05,2.676946410206823] (15,-1; 9,-1), time: 15.5086s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.44004378544997824,0.1533545888098614] (9,-1; 9,-1), time: 30.1695s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9715s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3009s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[1e-05,0.7337670594995898] (15,-1; 9,-1), time: 15.3110s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[1e-05,2.0457083410290053] (15,-1; 9,-1), time: 15.3236s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-0.6180486271159353,0.03475031384974165] (9,-1; 9,-1), time: 30.0118s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-0.42721143194735356,0.02072747607322648] (9,-1; 9,-1), time: 30.0287s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-0.34850625756780335,0.17598587762987836] (9,-1; 9,-1), time: 30.0244s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3162s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-0.358518345591829,0.24228068972813432] (9,-1; 9,-1), time: 30.0190s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-0.033313275046954194,0.6159487302368737] (9,-1; 9,-1), time: 30.0231s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.39784447475414414,0.1080542069851818] (9,-1; 9,-1), time: 30.0172s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-0.44034182489384716,0.08864538200598904] (9,-1; 9,-1), time: 30.1088s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[1e-05,0.6074687870378481] (15,-1; 9,-1), time: 15.5144s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[1e-05,1.4753494735370263] (15,-1; 9,-1), time: 15.3646s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[1e-05,2.1746505209610527] (15,-1; 9,-1), time: 15.4718s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[1e-05,0.41411677460249424] (15,-1; 9,-1), time: 21.5510s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[1e-05,0.9106888264095122] (15,-1; 9,-1), time: 15.3999s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[1e-05,0.5315184879954356] (15,-1; 9,-1), time: 23.8793s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-0.17442206589893575,0.44267497208566975] (9,-1; 9,-1), time: 30.3278s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[1e-05,2.083296007429588] (15,-1; 9,-1), time: 15.3196s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[1e-05,2.6721951453253854] (15,-1; 9,-1), time: 15.6479s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-0.5736286813943048,0.006666282157694513] (9,-1; 9,-1), time: 30.0170s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-0.07493856636505507,0.39681497547625216] (9,-1; 9,-1), time: 30.0737s, #vars: 1587, #constrs: 953, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 3 has unstable to stable neurons: [(71, -1), (59, -1), (17, -1), (77, -1), (19, -1), (89, -1), (57, -1), (39, -1), (33, -1), (20, -1), (48, -1), (24, -1), (16, 1), (31, -1), (7, -1), (34, -1), (11, 1), (62, -1), (81, -1), (88, -1), (3, -1), (97, -1), (92, 1), (0, -1), (52, 1), (98, -1), (63, -1), (22, -1), (66, -1), (4, -1), (65, -1), (78, 1), (93, -1), (85, 1), (43, -1), (6, -1), (14, -1), (55, -1), (45, -1), (21, -1), (36, 1), (10, 1), (58, 1), (82, -1), (76, -1), (56, 1), (67, 1), (74, 1), (13, 1), (80, 1), (54, -1), (70, 1), (91, 1), (32, 1), (42, 1), (18, -1), (35, 1), (49, 1), (64, 1), (47, 1), (8, 1), (12, 1)]
best_l after optimization: -16.65752410888672 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.644002914428711
alpha-CROWN with intermediate bounds by MIP: tensor([[-0.00988054, -0.85217857, -1.14853287, -3.29011893, -1.83358145,
         -0.79301000, -1.53670454, -2.97471023, -4.21880722]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 176.25355529785156, ub improved 260.19305419921875, time 115.2196
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_24', 'lay12_59', 'lay12_18', 'lay12_4', 'lay12_13', 'lay12_17', 'lay12_29', 'lay12_92', 'lay12_96', 'lay12_83', 'lay12_46', 'lay12_94', 'lay12_95', 'lay12_87', 'lay12_90', 'lay12_53', 'lay12_2', 'lay12_21', 'lay12_63', 'lay12_10', 'lay12_99', 'lay12_68', 'lay12_69', 'lay12_30', 'lay12_86', 'lay12_35', 'lay12_77', 'lay12_73', 'lay12_81', 'lay12_7', 'lay12_39', 'lay12_32', 'lay12_45', 'lay12_43', 'lay12_98', 'lay12_11', 'lay12_34', 'lay12_97', 'lay12_44', 'lay12_5', 'lay12_62', 'lay12_71', 'lay12_49', 'lay12_26', 'lay12_31', 'lay12_61', 'lay12_38', 'lay12_65', 'lay12_51', 'lay12_74', 'lay12_42', 'lay12_54', 'lay12_50', 'lay12_8', 'lay12_0', 'lay12_88', 'lay12_48', 'lay12_82', 'lay12_85', 'lay12_23', 'lay12_58', 'lay12_93', 'lay12_40', 'lay12_1', 'lay12_57', 'lay12_78', 'lay12_28', 'lay12_72', 'lay12_60', 'lay12_80', 'lay12_20', 'lay12_66', 'lay12_3', 'lay12_33', 'lay12_9', 'lay12_41', 'lay12_67', 'lay12_75', 'lay12_91', 'lay12_89', 'lay12_19', 'lay12_14', 'lay12_56', 'lay12_84', 'lay12_16', 'lay12_37', 'lay12_47', 'lay12_64', 'lay12_79', 'lay12_12', 'lay12_76', 'lay12_70', 'lay12_55', 'lay12_15', 'lay12_52', 'lay12_27', 'lay12_22', 'lay12_36', 'lay12_6', 'lay12_25'] filter: 1.0
Solving MIP for lay12_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3900s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4775s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4813s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4914s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5026s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5077s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5082s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3890s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4800s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0355s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1105s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.3632s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3982s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[1e-05,1.882293976295503] (15,-1; 9,-1), time: 15.4116s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[1e-05,1.314010744259516] (15,-1; 9,-1), time: 15.4390s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[1e-05,1.3989377676539436] (15,-1; 9,-1), time: 15.4679s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4564s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3856s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,3.3740828421298263] (15,-1; 9,-1), time: 15.4138s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[1e-05,0.8155859462642916] (15,-1; 9,-1), time: 16.0569s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[1e-05,1.551806467213834] (15,-1; 9,-1), time: 16.1424s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4388s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,1.0399842003688258] (15,-1; 9,-1), time: 15.4150s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.15417521782654522,0.3753775778374798] (9,-1; 9,-1), time: 30.0306s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-0.6424965560243906,0.04490931471497072] (9,-1; 9,-1), time: 30.0178s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-0.6037682640967703,0.09333582614647537] (9,-1; 9,-1), time: 30.0406s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-0.48283379438734475,0.15882314006989182] (9,-1; 9,-1), time: 30.0602s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3798s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.6449877733507254,0.06526986667416104] (9,-1; 9,-1), time: 30.0450s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-0.2028426630500945,0.2437777836482902] (9,-1; 9,-1), time: 30.0349s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.2548242557382906,0.6873098840491745] (9,-1; 9,-1), time: 30.0126s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.8060s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-0.2584666979121931,0.48245615820344007] (9,-1; 9,-1), time: 30.0662s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4802s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3815s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4019s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4257s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.0242304451774971,0.3853118335130943] (9,-1; 9,-1), time: 30.0327s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.4539s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3648s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.5551s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-0.021134425928928523,0.6417099345223733] (9,-1; 9,-1), time: 30.0144s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.758801468839933,0.012774123573687483] (9,-1; 9,-1), time: 30.0585s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3766s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-0.6418871301251335,0.02493073317651865] (9,-1; 9,-1), time: 30.0135s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.09847423994757296,0.8401195018722097] (9,-1; 9,-1), time: 30.0431s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.8087803424515411,0.08908463216912071] (9,-1; 9,-1), time: 30.0252s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[1e-05,0.4375735518583544] (15,-1; 9,-1), time: 28.0829s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-0.143392585262574,0.7167569976851039] (9,-1; 9,-1), time: 30.0205s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.24160592982930978,0.6170184366098447] (9,-1; 9,-1), time: 30.0174s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[1e-05,0.675208727242584] (15,-1; 9,-1), time: 24.3459s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3989s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4327s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.11293125115613957,0.5118325422030578] (9,-1; 9,-1), time: 30.0627s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-0.47674192225582257,0.2344193265713859] (9,-1; 9,-1), time: 30.0998s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-0.48513234147726403,0.05465984161746226] (9,-1; 9,-1), time: 30.0110s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3907s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4104s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[1e-05,1.6070865542181716] (15,-1; 9,-1), time: 15.4004s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4215s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3863s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-0.3749046293952712,0.07440493665770223] (9,-1; 9,-1), time: 30.0095s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3571s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3950s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-0.00017011970667493275,1.151495589764732] (9,-1; 9,-1), time: 30.0182s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.2026684214096912] (15,-1; 9,-1), time: 15.3797s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3819s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.12646727339344982,0.28522481428344487] (9,-1; 9,-1), time: 30.0280s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4263s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4495s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3527s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4242s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1306s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4500s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4397s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3917s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-0.7517294233011456,0.00039821301066959055] (9,-1; 9,-1), time: 30.0245s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5397s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-0.4348427958554073,0.2617155307384015] (9,-1; 9,-1), time: 30.0106s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[1e-05,1.3486934025011428] (15,-1; 9,-1), time: 15.4119s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.8190768687745553] (15,-1; 9,-1), time: 15.3968s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[1e-05,2.550617922083722] (15,-1; 9,-1), time: 15.4741s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[1e-05,1.1634944086426573] (15,-1; 9,-1), time: 15.4020s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[1e-05,0.7311855710981174] (15,-1; 9,-1), time: 15.3837s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-0.18217970599382688,0.3939705159216186] (9,-1; 9,-1), time: 30.0088s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-0.5805866120771934,0.00326650292442461] (9,-1; 9,-1), time: 30.0121s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4544s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[1e-05,2.0949775581150414] (15,-1; 9,-1), time: 15.4758s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[1e-05,2.7992213381664266] (15,-1; 9,-1), time: 15.4638s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[1e-05,2.2519882497042247] (15,-1; 9,-1), time: 15.4394s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[1e-05,0.5446675364954239] (15,-1; 9,-1), time: 15.3952s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[1e-05,4.032066671186112] (15,-1; 9,-1), time: 15.4273s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-0.47042153999758896,0.3416851728997587] (9,-1; 9,-1), time: 30.0453s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.4558863537874263,0.18038741023888707] (9,-1; 9,-1), time: 30.0858s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,0.854315950259549] (15,-1; 9,-1), time: 15.3853s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[1e-05,0.7861368319757432] (15,-1; 9,-1), time: 15.3867s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[1e-05,2.8022656399022967] (15,-1; 9,-1), time: 15.5151s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[1e-05,0.6676148545472921] (15,-1; 9,-1), time: 15.3911s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.03174795269512308,0.33758416412142417] (9,-1; 9,-1), time: 30.0117s, #vars: 1757, #constrs: 1158, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.34755501506076514,0.2996308297540709] (9,-1; 9,-1), time: 30.0225s, #vars: 1757, #constrs: 1158, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 4 has unstable to stable neurons: [(80, -1), (14, -1), (40, -1), (8, 1), (79, -1), (2, -1), (1, 1), (30, -1), (57, -1), (5, -1), (33, -1), (91, -1), (72, -1), (13, -1), (37, -1), (10, 1), (93, -1), (66, 1), (87, 1), (50, 1), (15, -1), (88, -1), (89, -1), (96, 1), (95, -1), (47, -1), (28, -1), (4, -1), (48, -1), (6, -1), (85, -1), (69, 1), (77, 1), (21, -1), (44, -1), (76, 1), (99, 1), (63, 1), (65, -1), (53, -1), (36, -1), (43, 1), (49, 1), (55, 1), (26, -1), (41, -1), (9, 1), (20, -1), (81, -1), (78, -1), (73, 1), (19, 1), (31, 1), (34, 1), (68, 1), (56, 1), (92, 1), (11, 1), (25, 1), (83, -1), (32, -1), (38, 1), (12, 1), (62, -1), (16, 1)]
best_l after optimization: 8.057435035705566 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.468670845031738
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.89065444,  2.12139177,  1.84335899, -0.89717627,  1.53879809,
          1.47405005,  1.97112584, -0.51314044, -1.37162781]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 373.4902038574219, ub improved 579.0802001953125, time 106.7465
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_20', 'lay14_5', 'lay14_92', 'lay14_2', 'lay14_75', 'lay14_11', 'lay14_47', 'lay14_64', 'lay14_18', 'lay14_72', 'lay14_59', 'lay14_14', 'lay14_87', 'lay14_0', 'lay14_46', 'lay14_51', 'lay14_54', 'lay14_8', 'lay14_84', 'lay14_85', 'lay14_10', 'lay14_91', 'lay14_35', 'lay14_36', 'lay14_86', 'lay14_16', 'lay14_76', 'lay14_22', 'lay14_1', 'lay14_19', 'lay14_56', 'lay14_31', 'lay14_28', 'lay14_50', 'lay14_41', 'lay14_12', 'lay14_37', 'lay14_98', 'lay14_77', 'lay14_60', 'lay14_30', 'lay14_82', 'lay14_21', 'lay14_42', 'lay14_4', 'lay14_74', 'lay14_33', 'lay14_96', 'lay14_44', 'lay14_45', 'lay14_79', 'lay14_63', 'lay14_78', 'lay14_29', 'lay14_3', 'lay14_9', 'lay14_88', 'lay14_83', 'lay14_23', 'lay14_73', 'lay14_69', 'lay14_70', 'lay14_15', 'lay14_40', 'lay14_55', 'lay14_62', 'lay14_67', 'lay14_71', 'lay14_24', 'lay14_57', 'lay14_81', 'lay14_32', 'lay14_90', 'lay14_7', 'lay14_52', 'lay14_66', 'lay14_26', 'lay14_25', 'lay14_53', 'lay14_65', 'lay14_39', 'lay14_6', 'lay14_99', 'lay14_13', 'lay14_38', 'lay14_49', 'lay14_80', 'lay14_48', 'lay14_43', 'lay14_95', 'lay14_68', 'lay14_89', 'lay14_17', 'lay14_34', 'lay14_61', 'lay14_58', 'lay14_27', 'lay14_93', 'lay14_97', 'lay14_94'] filter: 1.0
Solving MIP for lay14_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4758s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6299s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6537s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6707s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7265s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7596s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7779s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8152s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5601s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5544s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6100s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5410s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5507s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4846s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5385s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5616s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4305s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[1e-05,1.1669767261178192] (15,-1; 9,-1), time: 15.5599s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[1e-05,0.5024539569206816] (15,-1; 9,-1), time: 15.4481s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[1e-05,0.5271563073553112] (15,-1; 9,-1), time: 16.3081s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[1e-05,0.7058867326222119] (15,-1; 9,-1), time: 23.3438s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.5642622514898831,0.03366708220880413] (9,-1; 9,-1), time: 30.0160s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.1543546104453518,0.2136633560604874] (9,-1; 9,-1), time: 30.0166s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[-0.8442419890158307,0.22124238016592848] (9,-1; 9,-1), time: 30.0287s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-0.7014336541097924,0.21767089526356623] (9,-1; 9,-1), time: 30.0348s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.09372782517741945,0.4378401717759293] (9,-1; 9,-1), time: 30.0406s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-0.8607179507473568,0.15588448036878705] (9,-1; 9,-1), time: 30.0404s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5314s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5853s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.3665356825540354,0.2474116463009601] (9,-1; 9,-1), time: 30.0135s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.34273457324433027,0.17957944945962379] (9,-1; 9,-1), time: 30.0133s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5098s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[-0.37615011609757526,0.16649246040177332] (9,-1; 9,-1), time: 30.0120s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.29768917971843173,0.37900965825197297] (9,-1; 9,-1), time: 30.0320s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6336s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4925s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-0.31069881716230024,0.6384614334496485] (9,-1; 9,-1), time: 30.0100s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.2522047344985924,0.458091493074582] (9,-1; 9,-1), time: 30.0124s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[1e-05,2.462496887096651] (15,-1; 9,-1), time: 15.5733s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5006s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5649s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[1e-05,1.3081674368736194] (15,-1; 9,-1), time: 15.4557s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.5214s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[1e-05,0.9521991484168678] (15,-1; 9,-1), time: 15.4626s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-0.34627169896876747,0.1430516668596818] (9,-1; 9,-1), time: 30.0128s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[1e-05,1.813153972907223] (15,-1; 9,-1), time: 15.6426s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[1e-05,1.7647677483385869] (15,-1; 9,-1), time: 15.4663s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.298688071841757,0.3478717346570461] (9,-1; 9,-1), time: 30.0111s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[1e-05,1.3992604942116906] (15,-1; 9,-1), time: 15.6552s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7019s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[1e-05,1.2109247440886535] (15,-1; 9,-1), time: 16.1605s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.32801288985345867,0.16499757685413718] (9,-1; 9,-1), time: 30.0194s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-0.6952760749914372,0.0013567135187379804] (9,-1; 9,-1), time: 30.0114s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-0.02075827040428385,0.44049285306306335] (9,-1; 9,-1), time: 30.0124s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[1e-05,1.0467884551553326] (15,-1; 9,-1), time: 15.4767s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4566s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-0.14532535190953838,0.3297687554652355] (9,-1; 9,-1), time: 30.0103s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5530s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8658s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[1e-05,0.994736848594905] (15,-1; 9,-1), time: 15.5411s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[1e-05,1.0478879034971789] (15,-1; 9,-1), time: 16.4130s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-0.07651523186104171,0.8179224282535827] (9,-1; 9,-1), time: 30.0099s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-0.43132708201227343,0.17092572393638916] (9,-1; 9,-1), time: 30.0101s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[-0.01050291873169596,0.5326083923082287] (9,-1; 9,-1), time: 30.0330s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5155s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4987s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5129s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.32087398243106086,0.2877897684475023] (9,-1; 9,-1), time: 30.0324s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4222s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.7119888384494487,0.028867749676400822] (9,-1; 9,-1), time: 30.0251s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5523s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-0.32811242620557973,0.2940204245731138] (9,-1; 9,-1), time: 30.0499s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.7103280532993678,0.27971528225025744] (9,-1; 9,-1), time: 30.0255s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[1e-05,4.485151384832452] (15,-1; 9,-1), time: 15.5589s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[1e-05,1.2329441751345953] (15,-1; 9,-1), time: 18.8379s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5479s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[1e-05,2.270660911361935] (15,-1; 9,-1), time: 15.5371s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-0.4099199993822082,0.24175357088954982] (9,-1; 9,-1), time: 30.0116s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4845s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5215s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[1e-05,0.6348603398582876] (15,-1; 9,-1), time: 20.4522s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[1e-05,2.5775253275750503] (15,-1; 9,-1), time: 15.5103s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.17704581765211316,0.4177505875766573] (9,-1; 9,-1), time: 30.0212s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-0.17287375609816533,0.3381367907956165] (9,-1; 9,-1), time: 30.0102s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-0.5082595293485989,0.1957254863428447] (9,-1; 9,-1), time: 30.0132s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5403s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.5213935370605838,0.0892526521757484] (9,-1; 9,-1), time: 30.0161s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-0.6827691481766449,0.17162015145803117] (9,-1; 9,-1), time: 30.0499s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-0.5104316051991608,0.1395063043639549] (9,-1; 9,-1), time: 30.0097s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-0.26988796118944003,0.29772196461791883] (9,-1; 9,-1), time: 30.0316s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.0721626541368079,0.5399577840268684] (9,-1; 9,-1), time: 30.0090s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[1e-05,1.9752054122734888] (15,-1; 9,-1), time: 15.5487s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[1e-05,2.293470526777811] (15,-1; 9,-1), time: 15.4312s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[1e-05,0.7642715930714261] (15,-1; 9,-1), time: 16.2131s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[1e-05,2.108088636006508] (15,-1; 9,-1), time: 15.4517s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[1e-05,2.2880869872870044] (15,-1; 9,-1), time: 15.4628s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[1e-05,2.840892064799779] (15,-1; 9,-1), time: 15.4951s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-0.17318789730039932,0.2553578970695107] (9,-1; 9,-1), time: 30.0091s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-0.39677631103546135,0.04508917471449503] (9,-1; 9,-1), time: 30.0132s, #vars: 1917, #constrs: 1348, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-0.749090511729251,0.08392920030446017] (9,-1; 9,-1), time: 30.1716s, #vars: 1917, #constrs: 1348, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 5 has unstable to stable neurons: [(24, -1), (59, -1), (18, 1), (13, -1), (17, -1), (29, 1), (92, -1), (96, -1), (83, -1), (94, 1), (95, -1), (90, -1), (63, -1), (10, -1), (99, -1), (68, 1), (86, 1), (35, 1), (73, -1), (81, 1), (39, -1), (45, -1), (34, -1), (97, -1), (44, -1), (5, -1), (71, 1), (38, -1), (65, -1), (51, -1), (74, -1), (54, -1), (0, -1), (88, 1), (82, -1), (85, 1), (40, 1), (57, -1), (78, -1), (28, -1), (72, 1), (60, 1), (80, -1), (20, -1), (66, 1), (3, 1), (33, -1), (9, 1), (67, -1), (75, -1), (91, 1), (89, -1), (19, -1), (14, -1), (56, -1), (84, -1), (16, -1), (37, -1), (47, 1), (79, -1), (12, -1), (76, -1), (70, 1), (55, 1), (15, 1), (52, 1), (27, 1), (22, 1), (6, -1), (25, 1)]
best_l after optimization: 14.233537673950195 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.576556205749512
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.44560909,  2.83556461,  2.56727028, -0.27337837,  2.34628224,
          2.06138206,  2.86618853,  0.06375098, -0.67913127]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 886.4622802734375, ub improved 1285.8721923828125, time 115.8529
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_15', 'lay16_87', 'lay16_11', 'lay16_35', 'lay16_64', 'lay16_20', 'lay16_51', 'lay16_95', 'lay16_0', 'lay16_19', 'lay16_99', 'lay16_34', 'lay16_82', 'lay16_76', 'lay16_65', 'lay16_27', 'lay16_86', 'lay16_80', 'lay16_44', 'lay16_4', 'lay16_14', 'lay16_2', 'lay16_41', 'lay16_53', 'lay16_30', 'lay16_70', 'lay16_83', 'lay16_31', 'lay16_68', 'lay16_58', 'lay16_79', 'lay16_98', 'lay16_69', 'lay16_71', 'lay16_23', 'lay16_40', 'lay16_89', 'lay16_1', 'lay16_84', 'lay16_73', 'lay16_74', 'lay16_88', 'lay16_39', 'lay16_85', 'lay16_92', 'lay16_47', 'lay16_9', 'lay16_77', 'lay16_29', 'lay16_57', 'lay16_63', 'lay16_46', 'lay16_25', 'lay16_50', 'lay16_37', 'lay16_66', 'lay16_78', 'lay16_5', 'lay16_3', 'lay16_28', 'lay16_12', 'lay16_93', 'lay16_18', 'lay16_90', 'lay16_56', 'lay16_97', 'lay16_94', 'lay16_59', 'lay16_32', 'lay16_7', 'lay16_13', 'lay16_36', 'lay16_17', 'lay16_96', 'lay16_43', 'lay16_24', 'lay16_21', 'lay16_33', 'lay16_52', 'lay16_6', 'lay16_60', 'lay16_75', 'lay16_91', 'lay16_55', 'lay16_54', 'lay16_38', 'lay16_81', 'lay16_8', 'lay16_45', 'lay16_26', 'lay16_72', 'lay16_16', 'lay16_61', 'lay16_48', 'lay16_10', 'lay16_67', 'lay16_49', 'lay16_62', 'lay16_42', 'lay16_22'] filter: 1.0
Solving MIP for lay16_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7233s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7564s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7611s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7993s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8122s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8811s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8816s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9035s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6384s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6042s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.8059s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6361s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5785s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5491s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6278s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4317s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6816s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5872s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5645s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_79, [-inf,inf]=>[1e-05,1.0891025421545435] (15,-1; 9,-1), time: 15.5890s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_53, [-inf,inf]=>[1e-05,0.9268008544226897] (15,-1; 9,-1), time: 27.0275s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6163s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_87, [-inf,inf]=>[-1.109346155700814,0.11468289770635437] (9,-1; 9,-1), time: 30.0171s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_19, [-inf,inf]=>[-1.0051792899100056,0.4339265290410923] (9,-1; 9,-1), time: 30.0213s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-1.1383476743045233,0.016215781405850928] (9,-1; 9,-1), time: 30.0162s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-0.2527648151714453,0.454914669983159] (9,-1; 9,-1), time: 30.0176s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_95, [-inf,inf]=>[-0.6553994559155157,0.3061711221401522] (9,-1; 9,-1), time: 30.0173s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-1.1955792641419667,0.29432310382309507] (9,-1; 9,-1), time: 30.0203s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.7701608707932279,0.13661082575167005] (9,-1; 9,-1), time: 30.1008s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5945s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6045s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6259s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-1.0852433473966043,0.018962369639405473] (9,-1; 9,-1), time: 30.0110s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-0.6944218408550297,0.072392884227174] (9,-1; 9,-1), time: 30.0159s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_2, [-inf,inf]=>[-0.2911441665312607,0.3915491265156166] (9,-1; 9,-1), time: 30.0124s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_41, [-inf,inf]=>[-0.3220192637029008,0.6149948726148095] (9,-1; 9,-1), time: 30.0121s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6371s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-0.39473568567140643,0.27275546898301095] (9,-1; 9,-1), time: 30.0161s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5834s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-0.6579027313274436,0.04758921513270941] (9,-1; 9,-1), time: 30.0094s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[1e-05,1.2509619646826484] (15,-1; 9,-1), time: 15.6157s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5866s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-0.15687969426262274,0.6943292935724944] (9,-1; 9,-1), time: 30.0187s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6173s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5902s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[1e-05,1.4471482379913736] (15,-1; 9,-1), time: 15.6238s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5434s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[1e-05,1.9706890105326988] (15,-1; 9,-1), time: 15.6618s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7111s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6199s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[1e-05,0.6815808797161017] (15,-1; 9,-1), time: 15.6390s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[1e-05,0.8852529264910862] (15,-1; 9,-1), time: 26.6446s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6631s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-0.5003757096305653,0.11363590699400221] (9,-1; 9,-1), time: 30.0118s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6372s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-1.3865085970430482,0.0671796599915087] (9,-1; 9,-1), time: 30.0107s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-0.37405706665253674,0.40389911835497194] (9,-1; 9,-1), time: 30.0120s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-0.35931221710058525,0.5905515064993853] (9,-1; 9,-1), time: 30.0094s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-0.5143064926586742,0.21852780178366188] (9,-1; 9,-1), time: 30.0091s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-0.11953995481400598,1.2415664247732432] (9,-1; 9,-1), time: 30.0133s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_63, [-inf,inf]=>[-0.891307781361221,0.21334347199022466] (9,-1; 9,-1), time: 30.0086s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-0.029482723239815406,1.1687378657395482] (9,-1; 9,-1), time: 30.0113s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-0.9704582221640242,0.0032936684028854425] (9,-1; 9,-1), time: 30.0121s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-0.47254191045849664,0.23951388083404865] (9,-1; 9,-1), time: 30.0091s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6952s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6472s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7272s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7351s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7169s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2285s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-0.6153777584995638,0.04846514213765807] (9,-1; 9,-1), time: 30.0087s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7132s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-0.3146911702295425,0.21559392028267316] (9,-1; 9,-1), time: 30.0108s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6655s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[1e-05,1.2683392151860002] (15,-1; 9,-1), time: 15.6512s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[1e-05,2.611878365478134] (15,-1; 9,-1), time: 15.6084s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-0.296807904144401,0.21899224517206095] (9,-1; 9,-1), time: 30.0168s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[1e-05,1.0224770153697769] (15,-1; 9,-1), time: 15.8447s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-0.7566727871852539,0.013824940095180304] (9,-1; 9,-1), time: 30.0080s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.4561s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_91, [-inf,inf]=>[1e-05,3.378059874315446] (15,-1; 9,-1), time: 15.6550s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-0.5392250149714849,0.003926641329809515] (9,-1; 9,-1), time: 30.0088s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7223s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[1e-05,1.7760645563060518] (15,-1; 9,-1), time: 15.6602s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6610s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6474s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[1e-05,3.989267479266281] (15,-1; 9,-1), time: 15.6326s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-0.21068285758381652,0.4562489950374852] (9,-1; 9,-1), time: 30.0099s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_13, [-inf,inf]=>[-0.4663138334647846,0.030600603145191824] (9,-1; 9,-1), time: 30.0099s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-0.14116693418175702,0.8355736770018608] (9,-1; 9,-1), time: 30.0123s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[-0.658853670239383,0.1109343164158536] (9,-1; 9,-1), time: 30.0137s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[1e-05,2.4192380220960676] (15,-1; 9,-1), time: 15.6512s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-0.05293842497917354,0.38088856718354286] (9,-1; 9,-1), time: 30.0116s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[1e-05,3.0392213185103896] (15,-1; 9,-1), time: 15.6508s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[1e-05,1.3342377881360814] (15,-1; 9,-1), time: 15.5519s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[1e-05,1.7384122250259337] (15,-1; 9,-1), time: 15.8399s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[1e-05,3.972067547447125] (15,-1; 9,-1), time: 15.6137s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[1e-05,1.1228388793041837] (15,-1; 9,-1), time: 15.5543s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_38, [-inf,inf]=>[-0.07826023208626369,0.35602217299695726] (9,-1; 9,-1), time: 30.0100s, #vars: 2091, #constrs: 1559, improved: True
Solving MIP for lay16_26, [-inf,inf]=>[-0.027583191355576058,0.6347540661081615] (9,-1; 9,-1), time: 30.0094s, #vars: 2091, #constrs: 1559, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 6 has unstable to stable neurons: [(20, -1), (5, -1), (92, -1), (75, -1), (11, -1), (72, 1), (59, -1), (14, 1), (87, -1), (51, -1), (54, -1), (8, -1), (85, -1), (10, -1), (35, -1), (36, 1), (86, -1), (16, -1), (1, 1), (19, -1), (56, -1), (41, 1), (37, 1), (77, -1), (30, -1), (82, 1), (21, -1), (4, -1), (74, -1), (33, 1), (96, 1), (45, -1), (79, 1), (63, -1), (9, -1), (23, 1), (73, 1), (69, 1), (70, 1), (15, -1), (67, 1), (71, 1), (24, -1), (57, -1), (32, -1), (52, -1), (25, -1), (53, -1), (65, 1), (13, -1), (38, 1), (49, -1), (80, 1), (48, -1), (43, 1), (68, 1), (89, 1), (17, -1), (34, -1), (58, 1), (27, 1), (97, 1), (94, -1)]
best_l after optimization: 17.62706756591797 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.86031460762024
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.75152588,  3.15783596,  2.94787741,  0.08375299,  2.79123759,
          2.34736109,  3.38319731,  0.40178895, -0.23751020]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 1813.486572265625, ub improved 2710.760498046875, time 97.2186
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([9, 1])
MIP finished with 630.768661737442s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])

all verified at 0th iter
best_l after optimization: 19.66225242614746 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06525731086730957
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.88966203, 3.30294371, 3.21219158, 0.36297452, 3.06482983, 2.45059109,
         3.69404936, 0.57428205, 0.11072779]], device='cuda:0') None
refined global lb: tensor([[2.88966203],
        [3.30294371],
        [3.21219158],
        [0.36297452],
        [3.06482983],
        [2.45059109],
        [3.69404936],
        [0.57428205],
        [0.11072779]], device='cuda:0') min: tensor(0.11072779, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 647.7873 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 647.780787731292, max time: 647.7872655391693
mean time for verified SAFE instances (total 1): 647.7872655391693, max time: 647.7872655391693
safe-incomplete-refine (total 1), index: [0]
