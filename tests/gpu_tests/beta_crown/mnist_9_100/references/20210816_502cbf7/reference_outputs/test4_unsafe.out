Experiments at Tue Nov  2 12:14:44 2021 on huan-Super-Server
Namespace(batch_size=500, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', crown=False, data='MNIST_ERAN_UN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=48, epsilon=0.026, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='eran_models/mnist_9_100_nat_old.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=16, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='mnist_9_100', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='skip', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=47, timeout=300.0)
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
saving results to Verified_ret_[mnist_9_100]_start=47_end=48_iter=50_b=500_int-beta=False_timeout=300.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  2  correct label  2 logits tensor([-0.4443,  0.6646,  5.9675, -0.2164,  0.1901, -1.3073,  3.8596, -1.4856,
        -1.0441, -5.0747], grad_fn=<SelectBackward0>)
Model prediction is: tensor([[-0.4443,  0.6646,  5.9675, -0.2164,  0.1901, -1.3073,  3.8596, -1.4856,
         -1.0441, -5.0747]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 670.9320678710938 with beta sum per layer: []
optimal alpha/beta time: 10.831541061401367
initial alpha-CROWN bounds: tensor([[-51.5407, -62.4373, -76.2177, -74.1492, -79.8254, -63.3480, -83.1466,
         -84.4434, -95.8238]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_72', 'lay4_9', 'lay4_43', 'lay4_23', 'lay4_75', 'lay4_74', 'lay4_99', 'lay4_79', 'lay4_55', 'lay4_86', 'lay4_57', 'lay4_21', 'lay4_97', 'lay4_10', 'lay4_26', 'lay4_69', 'lay4_51', 'lay4_1', 'lay4_0', 'lay4_18', 'lay4_34', 'lay4_45', 'lay4_80', 'lay4_52', 'lay4_25', 'lay4_44', 'lay4_67', 'lay4_49', 'lay4_39', 'lay4_20', 'lay4_24', 'lay4_11', 'lay4_42', 'lay4_33', 'lay4_59', 'lay4_88', 'lay4_13', 'lay4_96', 'lay4_87', 'lay4_12', 'lay4_4', 'lay4_30', 'lay4_41', 'lay4_94', 'lay4_36', 'lay4_76', 'lay4_85', 'lay4_66'] filter: 1.0
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1288: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  labels = torch.from_numpy(labels.astype(np.int))
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1292: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1,-1,1,1)
Solving MIP for lay4_21, [-1.951158881187439,0.12307202816009521]=>[-1.951158881187439,-1e-05] (-1,-1; 15,-1), time: 0.3416s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_86, [-0.07932940125465393,1.600020408630371]=>[1e-05,1.600020408630371] (15,-1; -1,-1), time: 0.4245s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_99, [-0.10469198226928711,1.5476515293121338]=>[1e-05,1.5476515293121338] (15,-1; -1,-1), time: 0.4432s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_79, [-0.21157622337341309,2.0897388458251953]=>[1e-05,2.0897388458251953] (15,-1; -1,-1), time: 0.4744s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_10, [-2.080023765563965,0.0645018219947815]=>[-2.080023765563965,-1e-05] (-1,-1; 15,-1), time: 0.4957s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_43, [-1.9251407384872437,0.006379604339599609]=>[-1.9251407384872437,-1e-05] (-1,-1; 15,-1), time: 0.5244s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_51, [-1.6010057926177979,0.03714171051979065]=>[-1.6010057926177979,-1e-05] (-1,-1; 15,-1), time: 0.3001s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_55, [-0.31830912828445435,1.5529279708862305]=>[1e-05,1.5529279708862305] (15,-1; -1,-1), time: 0.6969s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_72, [-1.8646517992019653,0.32812780141830444]=>[-1.8646517992019653,-1e-05] (-1,-1; 15,-1), time: 0.7448s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_34, [-1.2700937986373901,0.25517648458480835]=>[-1.2700937986373901,-1e-05] (-1,-1; 15,-1), time: 0.8181s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_25, [-1.2931878566741943,0.19307193160057068]=>[-1.2931878566741943,-1e-05] (-1,-1; 15,-1), time: 0.6167s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_44, [-1.4609646797180176,0.1451089084148407]=>[-1.4609646797180176,-1e-05] (-1,-1; 15,-1), time: 0.4714s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_80, [-1.3701528310775757,0.6448067426681519]=>[-0.9929239519770148,0.26036612251723845] (2,-1; 2,-1), time: 2.7972s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_45, [-1.227637529373169,1.6574697494506836]=>[-0.7522442565338732,1.1416837837207168] (2,-1; 2,-1), time: 2.9813s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_75, [-0.8964143395423889,0.7981374263763428]=>[-0.6352159925050298,0.38685015970262704] (2,-1; 2,-1), time: 3.6778s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_49, [-0.5126650333404541,1.8377364873886108]=>[1e-05,1.8377364873886108] (15,-1; -1,-1), time: 1.8979s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_9, [-1.0499855279922485,0.4812650680541992]=>[-0.7089985458078034,0.15596944227065404] (2,-1; 2,-1), time: 3.7056s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_23, [-1.126013994216919,0.9801472425460815]=>[-0.6665682974218236,0.5573312385937803] (2,-1; 2,-1), time: 3.7262s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_74, [-1.2542009353637695,0.40259358286857605]=>[-0.8726780010750971,0.1306476617301519] (2,-1; 2,-1), time: 3.8888s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_20, [-1.4727003574371338,0.17767998576164246]=>[-1.4727003574371338,-1e-05] (-1,-1; 15,-1), time: 0.5391s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_26, [-0.49448269605636597,1.1250723600387573]=>[-0.09106814284034763,0.8359523236780046] (2,-1; 2,-1), time: 4.0572s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_33, [-2.4177441596984863,0.12141978740692139]=>[-2.4177441596984863,-1e-05] (-1,-1; 15,-1), time: 0.4070s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_88, [-1.644611120223999,0.16635388135910034]=>[-1.644611120223999,-1e-05] (-1,-1; 15,-1), time: 0.4273s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_52, [-0.7019501328468323,0.8707003593444824]=>[-0.3922065125479556,0.480869762445171] (2,-1; 2,-1), time: 3.8519s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_24, [-0.3681985139846802,1.3286856412887573]=>[1e-05,1.3286856412887573] (15,-1; -1,-1), time: 0.9638s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_18, [-0.7343424558639526,0.863714337348938]=>[-0.37448836947747133,0.548033401689817] (2,-1; 2,-1), time: 4.3409s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_59, [-1.4421501159667969,0.3392406702041626]=>[-1.4421501159667969,-1e-05] (-1,-1; 15,-1), time: 0.9788s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_87, [-1.1304762363433838,0.2679448425769806]=>[-1.1304762363433838,-0.0007349859870760464] (-1,-1; 2,-1), time: 0.8472s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_0, [-1.0688040256500244,1.8175311088562012]=>[-0.3470241147462581,1.3165468620761676] (2,-1; 2,-1), time: 5.0330s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_67, [-1.257200002670288,0.5942565202713013]=>[-0.8202168678593242,0.23191111022637373] (2,-1; 2,-1), time: 4.1802s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_57, [-0.442607581615448,1.410409927368164]=>[1e-05,1.410409927368164] (15,-1; -1,-1), time: 6.0310s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_97, [-0.5851525068283081,0.7786620855331421]=>[-0.1829053583674176,0.5362627000660685] (2,-1; 2,-1), time: 6.5297s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_69, [-1.0864803791046143,0.7598686218261719]=>[-0.5313514197571282,0.4556778420074312] (2,-1; 2,-1), time: 6.6926s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_1, [-1.312730073928833,0.3145636320114136]=>[-0.8895162231318463,0.0013157333073131358] (2,-1; 2,-1), time: 6.2692s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_11, [-1.6726572513580322,0.47066769003868103]=>[-1.1123658312857836,0.14273756966211634] (2,-1; 2,-1), time: 3.2535s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_39, [-0.678865909576416,1.507387399673462]=>[-0.24542517481539325,1.06455641803022] (2,-1; 2,-1), time: 3.6668s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_96, [-1.4517213106155396,0.6032747626304626]=>[-1.1504447618826599,0.10099901162596181] (2,-1; 2,-1), time: 4.0850s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_13, [-1.8589515686035156,0.6227682828903198]=>[-1.1430289396836784,0.234393832680092] (2,-1; 2,-1), time: 4.3933s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_41, [-0.9014787673950195,1.0417070388793945]=>[-0.5985123772313905,0.5222812699039309] (2,-1; 2,-1), time: 3.7640s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_4, [-0.7901495695114136,1.0635679960250854]=>[-0.2791973977259198,0.7919037676377674] (2,-1; 2,-1), time: 4.4676s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_12, [-1.5107614994049072,0.2762695550918579]=>[-0.9779855790129443,0.03391697054182415] (2,-1; 2,-1), time: 5.0038s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_66, [-0.7601873874664307,1.0457653999328613]=>[-0.38218023306908994,0.6410019507108943] (2,-1; 2,-1), time: 3.1920s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_42, [-0.8941150903701782,1.0886716842651367]=>[-0.45504793220679834,0.5807133476288424] (2,-1; 2,-1), time: 6.4157s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_76, [-0.6492297649383545,0.762923002243042]=>[-0.43015336283765204,0.33528395026972263] (2,-1; 2,-1), time: 4.6248s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_94, [-1.591478705406189,0.8482123613357544]=>[-0.9224672084041787,0.2852677167865679] (2,-1; 2,-1), time: 4.9112s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_30, [-0.8789747357368469,0.7660237550735474]=>[-0.635059246167061,0.2138041345507531] (2,-1; 2,-1), time: 5.5280s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_85, [-1.639667272567749,0.7360440492630005]=>[-1.0085567259714967,0.27153728839141805] (2,-1; 2,-1), time: 4.5542s, #vars: 1081, #constrs: 344, improved: True
Solving MIP for lay4_36, [-1.115098237991333,0.7300691604614258]=>[-0.661252486984563,0.3081301958189106] (2,-1; 2,-1), time: 5.2871s, #vars: 1081, #constrs: 344, improved: True
MIP improved 48 nodes out of 48 unstable nodes, lb improved 14.337246894836426, ub improved 13.312268257141113, time 11.2063
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_88', 'lay6_0', 'lay6_12', 'lay6_38', 'lay6_24', 'lay6_84', 'lay6_72', 'lay6_65', 'lay6_35', 'lay6_71', 'lay6_51', 'lay6_10', 'lay6_75', 'lay6_85', 'lay6_58', 'lay6_66', 'lay6_62', 'lay6_77', 'lay6_13', 'lay6_18', 'lay6_32', 'lay6_60', 'lay6_7', 'lay6_94', 'lay6_29', 'lay6_27', 'lay6_80', 'lay6_4', 'lay6_79', 'lay6_67', 'lay6_74', 'lay6_45', 'lay6_22', 'lay6_82', 'lay6_14', 'lay6_64', 'lay6_11', 'lay6_6', 'lay6_16', 'lay6_8', 'lay6_81', 'lay6_9', 'lay6_47', 'lay6_46', 'lay6_53', 'lay6_2', 'lay6_49', 'lay6_31', 'lay6_54', 'lay6_69', 'lay6_19', 'lay6_92', 'lay6_33', 'lay6_50', 'lay6_1', 'lay6_93', 'lay6_83', 'lay6_57', 'lay6_86', 'lay6_5', 'lay6_68', 'lay6_34', 'lay6_87', 'lay6_61', 'lay6_37', 'lay6_99', 'lay6_73', 'lay6_42', 'lay6_21'] filter: 1.0
Solving MIP for lay6_12, [-0.04983246326446533,2.949943780899048]=>[1e-05,2.949943780899048] (15,-1; -1,-1), time: 0.2300s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_51, [-0.24160265922546387,3.0163419246673584]=>[1e-05,3.0163419246673584] (15,-1; -1,-1), time: 0.2353s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_85, [-2.596245050430298,0.03835415840148926]=>[-2.596245050430298,-1e-05] (-1,-1; 15,-1), time: 0.2384s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_84, [-1.9311954975128174,0.031148433685302734]=>[-1.9311954975128174,-1e-05] (-1,-1; 15,-1), time: 0.2443s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_88, [-2.1292097568511963,0.21604418754577637]=>[-2.1292097568511963,-1e-05] (-1,-1; 15,-1), time: 0.2770s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_58, [-0.21790188550949097,1.12877357006073]=>[1e-05,1.12877357006073] (15,-1; -1,-1), time: 0.2759s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_65, [-0.20502352714538574,1.8939288854599]=>[1e-05,1.8939288854599] (15,-1; -1,-1), time: 0.2844s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_72, [-1.1323039531707764,0.32839372754096985]=>[-1.1323039531707764,-1e-05] (-1,-1; 15,-1), time: 0.4506s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_62, [-1.7314653396606445,0.17255616188049316]=>[-1.7314653396606445,-1e-05] (-1,-1; 15,-1), time: 0.2197s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_0, [-2.207313299179077,0.4926491379737854]=>[-2.207313299179077,-1e-05] (-1,-1; 15,-1), time: 0.4664s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_10, [-1.6222798824310303,0.3728991746902466]=>[-1.6222798824310303,-1e-05] (-1,-1; 15,-1), time: 0.4868s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_35, [-0.3363969326019287,1.3531293869018555]=>[1e-05,1.3531293869018555] (15,-1; -1,-1), time: 0.5675s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_27, [-1.2389800548553467,0.10819557309150696]=>[-1.2389800548553467,-1e-05] (-1,-1; 15,-1), time: 0.2074s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_94, [-1.9485474824905396,0.03962814807891846]=>[-1.9485474824905396,-1e-05] (-1,-1; 15,-1), time: 0.2249s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_4, [-1.8827488422393799,0.15592968463897705]=>[-1.8827488422393799,-1e-05] (-1,-1; 15,-1), time: 0.2142s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_29, [-1.1044490337371826,0.294954776763916]=>[-1.1044490337371826,-1e-05] (-1,-1; 15,-1), time: 0.4147s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_67, [-0.2617496848106384,1.713356375694275]=>[1e-05,1.713356375694275] (15,-1; -1,-1), time: 0.2240s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_45, [-1.8786792755126953,0.17849785089492798]=>[-1.8786792755126953,-1e-05] (-1,-1; 15,-1), time: 0.2198s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_32, [-0.4467528760433197,1.935960054397583]=>[1e-05,1.935960054397583] (15,-1; -1,-1), time: 0.8153s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_22, [-1.6507689952850342,0.39413124322891235]=>[-1.6507689952850342,-1e-05] (-1,-1; 15,-1), time: 0.4045s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_82, [-1.828202724456787,0.33608585596084595]=>[-1.828202724456787,-1e-05] (-1,-1; 15,-1), time: 0.3714s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_14, [-1.5111708641052246,0.2971701920032501]=>[-1.5111708641052246,-1e-05] (-1,-1; 15,-1), time: 0.3996s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_64, [-1.851000189781189,0.12889283895492554]=>[-1.851000189781189,-1e-05] (-1,-1; 15,-1), time: 0.2009s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_11, [-0.24748599529266357,1.4532363414764404]=>[1e-05,1.4532363414764404] (15,-1; -1,-1), time: 0.2209s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_6, [-2.098145008087158,0.28446948528289795]=>[-2.098145008087158,-1e-05] (-1,-1; 15,-1), time: 0.2086s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_16, [-2.2448806762695312,0.3442842364311218]=>[-2.2448806762695312,-1e-05] (-1,-1; 15,-1), time: 0.2130s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_8, [-2.223707437515259,0.0815313458442688]=>[-2.223707437515259,-1e-05] (-1,-1; 15,-1), time: 0.2072s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_81, [-1.6712568998336792,0.019638001918792725]=>[-1.6712568998336792,-1e-05] (-1,-1; 15,-1), time: 0.2040s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_9, [-1.8429179191589355,0.4187357425689697]=>[-1.8429179191589355,-1e-05] (-1,-1; 15,-1), time: 0.4085s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_53, [-0.17746388912200928,1.31917142868042]=>[1e-05,1.31917142868042] (15,-1; -1,-1), time: 0.2131s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_2, [-2.0910873413085938,0.23820167779922485]=>[-2.0910873413085938,-1e-05] (-1,-1; 15,-1), time: 0.2085s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_49, [-1.6920160055160522,0.4860410690307617]=>[-1.6920160055160522,-1e-05] (-1,-1; 15,-1), time: 0.4246s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_66, [-0.6835602521896362,1.3631649017333984]=>[1e-05,1.3631649017333984] (15,-1; -1,-1), time: 4.0471s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_79, [-1.1397647857666016,0.46322038769721985]=>[-1.1397647857666016,-1e-05] (-1,-1; 15,-1), time: 3.5450s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_54, [-1.4499008655548096,0.2843383550643921]=>[-1.4499008655548096,-1e-05] (-1,-1; 15,-1), time: 0.3991s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_69, [-1.6429213285446167,0.3666954040527344]=>[-1.6429213285446167,-1e-05] (-1,-1; 15,-1), time: 0.5623s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_74, [-0.5057671070098877,1.2939411401748657]=>[1e-05,1.2939411401748657] (15,-1; -1,-1), time: 5.7333s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_71, [-0.47781670093536377,1.0622007846832275]=>[1e-05,1.0622007846832275] (15,-1; -1,-1), time: 7.3013s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_50, [-1.8484864234924316,0.34673863649368286]=>[-1.8484864234924316,-1e-05] (-1,-1; 15,-1), time: 0.3638s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_1, [-3.9843053817749023,0.2702237367630005]=>[-3.9843053817749023,-1e-05] (-1,-1; 15,-1), time: 0.2061s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_24, [-1.195582628250122,1.485153079032898]=>[-0.5026940472010701,0.6349585718179322] (2,-1; 2,-1), time: 8.3205s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_83, [-1.774977684020996,0.19932425022125244]=>[-1.774977684020996,-1e-05] (-1,-1; 15,-1), time: 0.1927s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_57, [-2.220961093902588,0.29012972116470337]=>[-2.220961093902588,-1e-05] (-1,-1; 15,-1), time: 0.1921s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_31, [-1.808004379272461,0.9740728735923767]=>[-1.808004379272461,-1e-05] (-1,-1; 15,-1), time: 5.7104s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_86, [-1.8272836208343506,0.30769121646881104]=>[-1.8272836208343506,-1e-05] (-1,-1; 15,-1), time: 0.1905s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_68, [-2.162912368774414,0.16544651985168457]=>[-2.162912368774414,-1e-05] (-1,-1; 15,-1), time: 0.1876s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_18, [-1.1052460670471191,0.8797022104263306]=>[-0.5301512507389455,0.2936921396105575] (2,-1; 2,-1), time: 9.4706s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_34, [-2.1585283279418945,0.5435909032821655]=>[-2.1585283279418945,-1e-05] (-1,-1; 15,-1), time: 0.6956s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_61, [-0.5717583894729614,1.5270814895629883]=>[1e-05,1.5270814895629883] (15,-1; -1,-1), time: 3.0636s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_93, [-1.6683323383331299,0.8277825117111206]=>[-1.6683323383331299,-1e-05] (-1,-1; 15,-1), time: 5.2532s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_92, [-1.4617104530334473,0.6814488172531128]=>[-1.4617104530334473,-1e-05] (-1,-1; 15,-1), time: 8.3417s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_75, [-1.7601325511932373,1.2926418781280518]=>[-1.1532995055090038,0.27118742765463066] (2,-1; 2,-1), time: 13.3454s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_99, [-1.4254651069641113,0.4462224543094635]=>[-1.4254651069641113,-1e-05] (-1,-1; 15,-1), time: 0.3641s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_60, [-0.7744898796081543,1.9740509986877441]=>[-0.1295337655588481,0.9566802796752306] (2,-1; 2,-1), time: 13.6245s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_42, [-1.302384614944458,0.4482019543647766]=>[-1.302384614944458,-1e-05] (-1,-1; 15,-1), time: 0.6641s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_21, [-1.7786171436309814,0.8227123022079468]=>[-1.7786171436309814,-1e-05] (-1,-1; 15,-1), time: 0.7947s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_38, [-1.7547595500946045,0.8014574646949768]=>[-0.9040476501345984,0.11979938586120265] (2,-1; 2,-1), time: 14.6185s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_47, [-1.442150354385376,0.6963962316513062]=>[-0.7284566588014713,0.10256123015648369] (2,-1; 2,-1), time: 13.3521s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_37, [-1.6502835750579834,0.6612368822097778]=>[-1.6502835750579834,-1e-05] (-1,-1; 15,-1), time: 4.0314s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_7, [-1.1334093809127808,0.8160432577133179]=>[-0.46957813012632477,0.2695073565743545] (2,-1; 9,-1), time: 19.0641s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_77, [-0.9510557055473328,1.2184793949127197]=>[-0.20982060674664574,0.6820565597632662] (9,-1; 2,-1), time: 19.1204s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_5, [-1.2353023290634155,1.1804975271224976]=>[-0.38702944762367963,0.5993760077450149] (2,-1; 2,-1), time: 10.8276s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_46, [-0.8236744403839111,1.154784083366394]=>[-0.17564851173196042,0.6477037486284485] (9,-1; 2,-1), time: 17.6978s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_73, [-1.3691365718841553,0.7557569146156311]=>[-1.3691365718841553,-1e-05] (-1,-1; 15,-1), time: 6.6502s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_80, [-1.3026312589645386,1.488570213317871]=>[-0.7262880485184422,0.5663692382974063] (2,-1; 9,-1), time: 19.8278s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_87, [-0.8356416821479797,0.7939022779464722]=>[-0.2875718497655972,0.23568543748754728] (2,-1; 2,-1), time: 15.2301s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_33, [-0.776069164276123,1.1202324628829956]=>[-0.1631064584275927,0.5205781840175193] (9,-1; 2,-1), time: 20.3342s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_13, [-1.3913788795471191,0.868701696395874]=>[-0.8300543597416364,0.10219994796513025] (2,-1; 9,-1), time: 29.8160s, #vars: 1237, #constrs: 528, improved: True
Solving MIP for lay6_19, [-1.049925446510315,0.473613977432251]=>[-0.5315426026294212,0.03041335955693751] (9,-1; 9,-1), time: 30.0029s, #vars: 1237, #constrs: 528, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 68.96281433105469 with beta sum per layer: []
optimal alpha/beta time: 12.80478549003601
alpha-CROWN with intermediate bounds by MIP: tensor([[ -6.0443,  -5.6650,  -7.0993,  -6.8660,  -8.5823, -10.4659,  -6.4711,
          -9.9753,  -7.7937]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 69 nodes out of 69 unstable nodes, lb improved 14.225870132446289, ub improved 24.525135040283203, time 34.8895
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_46', 'lay8_51', 'lay8_44', 'lay8_69', 'lay8_72', 'lay8_88', 'lay8_41', 'lay8_63', 'lay8_33', 'lay8_8', 'lay8_6', 'lay8_84', 'lay8_10', 'lay8_62', 'lay8_59', 'lay8_22', 'lay8_32', 'lay8_65', 'lay8_34', 'lay8_93', 'lay8_57', 'lay8_64', 'lay8_60', 'lay8_0', 'lay8_96', 'lay8_2', 'lay8_43', 'lay8_75', 'lay8_68', 'lay8_90', 'lay8_40', 'lay8_48', 'lay8_17', 'lay8_50', 'lay8_11', 'lay8_14', 'lay8_20', 'lay8_70', 'lay8_61', 'lay8_35', 'lay8_30', 'lay8_27', 'lay8_77', 'lay8_94', 'lay8_15', 'lay8_66', 'lay8_79', 'lay8_71', 'lay8_16', 'lay8_4', 'lay8_38', 'lay8_26', 'lay8_28', 'lay8_18', 'lay8_56', 'lay8_54', 'lay8_73', 'lay8_85', 'lay8_74', 'lay8_87', 'lay8_29', 'lay8_25', 'lay8_31', 'lay8_76', 'lay8_99', 'lay8_89', 'lay8_1', 'lay8_86', 'lay8_47', 'lay8_13', 'lay8_3', 'lay8_78', 'lay8_9', 'lay8_42', 'lay8_12', 'lay8_80', 'lay8_83', 'lay8_49', 'lay8_82', 'lay8_55', 'lay8_58', 'lay8_97', 'lay8_98', 'lay8_39', 'lay8_5', 'lay8_67'] filter: 1.0
Solving MIP for lay8_69, [-1.6113295555114746,0.9796367883682251]=>[-1.6113295555114746,-1e-05] (-1,-1; 15,-1), time: 0.2363s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_22, [-0.5848903656005859,2.3805952072143555]=>[1e-05,2.3805952072143555] (15,-1; -1,-1), time: 0.2432s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_6, [-0.22952580451965332,2.990859270095825]=>[1e-05,2.990859270095825] (15,-1; -1,-1), time: 0.2564s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_41, [-0.502609372138977,2.137601375579834]=>[1e-05,2.137601375579834] (15,-1; -1,-1), time: 0.2822s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_63, [-0.23751986026763916,3.5576682090759277]=>[1e-05,3.5576682090759277] (15,-1; -1,-1), time: 0.2844s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_33, [-0.5109776854515076,2.1866846084594727]=>[1e-05,2.1866846084594727] (15,-1; -1,-1), time: 0.2910s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_46, [-2.3524484634399414,0.26334530115127563]=>[-2.3524484634399414,-1e-05] (-1,-1; 15,-1), time: 0.2967s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_44, [-0.22646623849868774,2.563683032989502]=>[1e-05,2.563683032989502] (15,-1; -1,-1), time: 0.3014s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_51, [-2.0775856971740723,0.013319015502929688]=>[-2.0775856971740723,-1e-05] (-1,-1; 15,-1), time: 0.3088s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_72, [-1.8021798133850098,0.676161527633667]=>[-1.8021798133850098,-1e-05] (-1,-1; 15,-1), time: 0.3187s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_10, [-2.730318546295166,0.07053983211517334]=>[-2.730318546295166,-1e-05] (-1,-1; 15,-1), time: 0.3172s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_84, [-1.5849370956420898,0.46769875288009644]=>[-1.5849370956420898,-1e-05] (-1,-1; 15,-1), time: 0.3183s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_88, [-0.4915013313293457,2.8898468017578125]=>[1e-05,2.8898468017578125] (15,-1; -1,-1), time: 0.3211s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_32, [-2.316948413848877,0.9779785871505737]=>[-2.316948413848877,-1e-05] (-1,-1; 15,-1), time: 0.2251s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_57, [-2.278524398803711,0.3879501223564148]=>[-2.278524398803711,-1e-05] (-1,-1; 15,-1), time: 0.2260s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_93, [-0.2114771604537964,2.3991827964782715]=>[1e-05,2.3991827964782715] (15,-1; -1,-1), time: 0.2287s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_60, [-0.45543116331100464,2.247424602508545]=>[1e-05,2.247424602508545] (15,-1; -1,-1), time: 0.2281s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_68, [-1.7362005710601807,0.4203379154205322]=>[-1.7362005710601807,-1e-05] (-1,-1; 15,-1), time: 0.2395s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_65, [-1.0116899013519287,1.5556297302246094]=>[1e-05,1.5556297302246094] (15,-1; -1,-1), time: 0.4501s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_40, [-0.670195996761322,2.114193916320801]=>[1e-05,2.114193916320801] (15,-1; -1,-1), time: 0.2237s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_48, [-2.516021728515625,0.6847814321517944]=>[-2.516021728515625,-1e-05] (-1,-1; 15,-1), time: 0.2275s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_17, [-2.5282435417175293,0.18683314323425293]=>[-2.5282435417175293,-1e-05] (-1,-1; 15,-1), time: 0.2227s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_50, [-2.0552825927734375,0.39423906803131104]=>[-2.0552825927734375,-1e-05] (-1,-1; 15,-1), time: 0.2254s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_11, [-2.664710521697998,0.1694110631942749]=>[-2.664710521697998,-1e-05] (-1,-1; 15,-1), time: 0.2205s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_2, [-1.5407466888427734,0.7165215015411377]=>[-1.5407466888427734,-1e-05] (-1,-1; 15,-1), time: 0.6654s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_61, [-2.530062675476074,0.2541927099227905]=>[-2.530062675476074,-1e-05] (-1,-1; 15,-1), time: 0.2246s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_20, [-0.9238071441650391,1.6258323192596436]=>[1e-05,1.6258323192596436] (15,-1; -1,-1), time: 0.4582s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_14, [-2.3737096786499023,1.4850714206695557]=>[-2.3737096786499023,-1e-05] (-1,-1; 15,-1), time: 0.4697s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_70, [-1.7452113628387451,0.6917886734008789]=>[-1.7452113628387451,-1e-05] (-1,-1; 15,-1), time: 0.4770s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_75, [-1.0189491510391235,1.5114978551864624]=>[1e-05,1.5114978551864624] (15,-1; -1,-1), time: 0.9794s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_35, [-1.4736473560333252,0.8225650191307068]=>[-1.4736473560333252,-1e-05] (-1,-1; 15,-1), time: 0.4254s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_30, [-1.9971805810928345,0.645698606967926]=>[-1.9971805810928345,-1e-05] (-1,-1; 15,-1), time: 0.4366s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_77, [-3.180868625640869,0.39059513807296753]=>[-3.180868625640869,-1e-05] (-1,-1; 15,-1), time: 0.2308s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_94, [-2.5903544425964355,0.2743340730667114]=>[-2.5903544425964355,-1e-05] (-1,-1; 15,-1), time: 0.2318s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_15, [-2.8964834213256836,0.20595085620880127]=>[-2.8964834213256836,-1e-05] (-1,-1; 15,-1), time: 0.2383s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_66, [-0.6743917465209961,1.2482142448425293]=>[1e-05,1.2482142448425293] (15,-1; -1,-1), time: 0.2428s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_79, [-3.6268062591552734,0.13455748558044434]=>[-3.6268062591552734,-1e-05] (-1,-1; 15,-1), time: 0.2346s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_16, [-3.170055389404297,0.04670000076293945]=>[-3.170055389404297,-1e-05] (-1,-1; 15,-1), time: 0.2139s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_71, [-1.403365135192871,3.23174786567688]=>[1e-05,3.23174786567688] (15,-1; -1,-1), time: 0.2196s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_26, [-1.9828747510910034,0.37518298625946045]=>[-1.9828747510910034,-1e-05] (-1,-1; 15,-1), time: 0.2192s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_28, [-2.853125810623169,0.4076772928237915]=>[-2.853125810623169,-1e-05] (-1,-1; 15,-1), time: 0.2282s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_18, [-2.11574125289917,0.5876942873001099]=>[-2.11574125289917,-1e-05] (-1,-1; 15,-1), time: 0.2274s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_56, [-2.7955050468444824,0.65056312084198]=>[-2.7955050468444824,-1e-05] (-1,-1; 15,-1), time: 0.2270s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_73, [-2.0546889305114746,0.4386129379272461]=>[-2.0546889305114746,-1e-05] (-1,-1; 15,-1), time: 0.2125s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_85, [-2.508986711502075,0.3969513177871704]=>[-2.508986711502075,-1e-05] (-1,-1; 15,-1), time: 0.1868s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_74, [-2.638788938522339,0.3475983142852783]=>[-2.638788938522339,-1e-05] (-1,-1; 15,-1), time: 0.2029s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_87, [-2.732788324356079,0.4240241050720215]=>[-2.732788324356079,-1e-05] (-1,-1; 15,-1), time: 0.2017s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_29, [-3.373175621032715,0.34565412998199463]=>[-3.373175621032715,-1e-05] (-1,-1; 15,-1), time: 0.1957s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_25, [-2.491476535797119,0.31157630681991577]=>[-2.491476535797119,-1e-05] (-1,-1; 15,-1), time: 0.1861s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_31, [-1.809525728225708,0.5866857767105103]=>[-1.809525728225708,-1e-05] (-1,-1; 15,-1), time: 0.2364s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_99, [-2.178405523300171,0.7049291133880615]=>[-2.178405523300171,-1e-05] (-1,-1; 15,-1), time: 0.2327s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_76, [-0.4844557046890259,1.5862065553665161]=>[1e-05,1.5862065553665161] (15,-1; -1,-1), time: 0.2588s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_89, [-2.51931095123291,0.5152774453163147]=>[-2.51931095123291,-1e-05] (-1,-1; 15,-1), time: 0.2317s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_1, [-1.654365062713623,0.6149157285690308]=>[-1.654365062713623,-1e-05] (-1,-1; 15,-1), time: 0.2317s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_86, [-2.0572550296783447,0.3673211336135864]=>[-2.0572550296783447,-1e-05] (-1,-1; 15,-1), time: 0.2263s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_47, [-1.5977165699005127,0.5539348125457764]=>[-1.5977165699005127,-1e-05] (-1,-1; 15,-1), time: 0.2354s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_3, [-2.0869181156158447,0.18348753452301025]=>[-2.0869181156158447,-1e-05] (-1,-1; 15,-1), time: 0.2225s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_78, [-2.3736720085144043,0.5214378833770752]=>[-2.3736720085144043,-1e-05] (-1,-1; 15,-1), time: 0.2256s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_9, [-2.357529640197754,0.5544136762619019]=>[-2.357529640197754,-1e-05] (-1,-1; 15,-1), time: 0.2325s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_42, [-1.9051055908203125,0.8749892115592957]=>[-1.9051055908203125,-1e-05] (-1,-1; 15,-1), time: 0.2264s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_12, [-1.9272449016571045,0.8794617056846619]=>[-1.9272449016571045,-1e-05] (-1,-1; 15,-1), time: 0.2268s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_83, [-2.330256462097168,0.48476672172546387]=>[-2.330256462097168,-1e-05] (-1,-1; 15,-1), time: 0.2221s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_49, [-1.8801603317260742,0.9546948671340942]=>[-1.8801603317260742,-1e-05] (-1,-1; 15,-1), time: 0.2336s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_82, [-1.6130123138427734,0.9227823615074158]=>[-1.6130123138427734,-1e-05] (-1,-1; 15,-1), time: 6.7189s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_55, [-0.8728379607200623,1.667189598083496]=>[1e-05,1.667189598083496] (15,-1; -1,-1), time: 0.3493s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_58, [-2.559098243713379,1.3754353523254395]=>[-2.559098243713379,-1e-05] (-1,-1; 15,-1), time: 0.2072s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_97, [-2.8051137924194336,0.590479850769043]=>[-2.8051137924194336,-1e-05] (-1,-1; 15,-1), time: 0.2008s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_98, [-1.588050127029419,0.8383523225784302]=>[-1.588050127029419,-1e-05] (-1,-1; 15,-1), time: 0.2001s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_27, [-0.9324867129325867,1.7427802085876465]=>[1e-05,1.7427802085876465] (15,-1; -1,-1), time: 12.7893s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_96, [-0.9376612901687622,1.5553127527236938]=>[-0.08851006457757138,0.48572489608391717] (2,-1; 2,-1), time: 18.4953s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_67, [-2.0408403873443604,1.4304430484771729]=>[-2.0408403873443604,-1e-05] (-1,-1; 15,-1), time: 0.7931s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_43, [-1.2990235090255737,1.261390209197998]=>[-0.39759868557328965,0.29325149907875175] (2,-1; 9,-1), time: 19.6118s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_4, [-1.5055582523345947,1.2025790214538574]=>[-0.6120078787326303,0.13768750179281955] (2,-1; 9,-1), time: 19.3745s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_54, [-1.1274000406265259,1.329998254776001]=>[-0.478934602912457,0.2816396467847571] (2,-1; 9,-1), time: 20.6706s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_59, [-1.543086290359497,2.0982794761657715]=>[-0.17898593687370357,0.7701255207976694] (2,-1; 9,-1), time: 22.5493s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_13, [-0.7517822980880737,1.3615283966064453]=>[-0.13725579158527967,0.30996632802386326] (9,-1; 2,-1), time: 26.4247s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_8, [-1.2402780055999756,0.9427585601806641]=>[-0.32946047800555894,0.1631141921131844] (9,-1; 9,-1), time: 30.0083s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_62, [-1.4936411380767822,1.133591651916504]=>[-0.5778472167304749,0.1028078774190102] (9,-1; 9,-1), time: 30.0226s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_34, [-1.1730923652648926,1.2155495882034302]=>[-0.05940808005374372,0.44469264638158745] (9,-1; 9,-1), time: 30.0026s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_64, [-1.123045563697815,1.193347454071045]=>[-0.32832103668781004,0.12260832704406101] (9,-1; 9,-1), time: 30.0068s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_0, [-1.7177799940109253,1.095571517944336]=>[-0.5717456092380094,0.11793256467288385] (9,-1; 9,-1), time: 30.0210s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_90, [-0.8824036717414856,1.5075145959854126]=>[-0.17278253005654126,0.4199886532804274] (9,-1; 9,-1), time: 30.0200s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_38, [-0.8590798377990723,1.7669156789779663]=>[-0.025178072522645097,0.5874781458273788] (9,-1; 9,-1), time: 30.0325s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_80, [-1.2264713048934937,1.1345428228378296]=>[-0.41548849245213226,0.09401790006223197] (9,-1; 9,-1), time: 30.0069s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_39, [-1.559948205947876,1.4104329347610474]=>[-0.26202302822866186,0.5460188839056018] (9,-1; 2,-1), time: 27.5415s, #vars: 1367, #constrs: 673, improved: True
Solving MIP for lay8_5, [-1.1789354085922241,1.0018260478973389]=>[-0.25936182831206256,0.2512848542116789] (9,-1; 2,-1), time: 26.6148s, #vars: 1367, #constrs: 673, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: -14.160758972167969 with beta sum per layer: []
optimal alpha/beta time: 12.91040301322937
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.3138,  2.0198,  2.8388,  0.7380,  1.7753, -3.4421,  3.5237,  0.8893,
          4.5040]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 86 nodes out of 86 unstable nodes, lb improved 26.167041778564453, ub improved 44.68286895751953, time 41.0322
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_6', 'lay10_37', 'lay10_41', 'lay10_56', 'lay10_5', 'lay10_57', 'lay10_54', 'lay10_62', 'lay10_22', 'lay10_23', 'lay10_35', 'lay10_19', 'lay10_27', 'lay10_39', 'lay10_74', 'lay10_40', 'lay10_32', 'lay10_14', 'lay10_63', 'lay10_51', 'lay10_72', 'lay10_29', 'lay10_67', 'lay10_90', 'lay10_94', 'lay10_47', 'lay10_53', 'lay10_46', 'lay10_4', 'lay10_95', 'lay10_59', 'lay10_73', 'lay10_17', 'lay10_61', 'lay10_78', 'lay10_76', 'lay10_0', 'lay10_64', 'lay10_81', 'lay10_83', 'lay10_60', 'lay10_45', 'lay10_7', 'lay10_91', 'lay10_68', 'lay10_34', 'lay10_82', 'lay10_92', 'lay10_10', 'lay10_30', 'lay10_86', 'lay10_1', 'lay10_97', 'lay10_31', 'lay10_52', 'lay10_15', 'lay10_44', 'lay10_38', 'lay10_84', 'lay10_77', 'lay10_25', 'lay10_33', 'lay10_18', 'lay10_75', 'lay10_66', 'lay10_2', 'lay10_55', 'lay10_11', 'lay10_26', 'lay10_69', 'lay10_65', 'lay10_79', 'lay10_80', 'lay10_98', 'lay10_87', 'lay10_28', 'lay10_96', 'lay10_16', 'lay10_3', 'lay10_58', 'lay10_48', 'lay10_89', 'lay10_21', 'lay10_85', 'lay10_9', 'lay10_13', 'lay10_93', 'lay10_88', 'lay10_20', 'lay10_8', 'lay10_71', 'lay10_12', 'lay10_43', 'lay10_49', 'lay10_50', 'lay10_36', 'lay10_42', 'lay10_24', 'lay10_70', 'lay10_99'] filter: 1.0
Solving MIP for lay10_5, [-1.194645643234253,2.795687675476074]=>[1e-05,2.795687675476074] (15,-1; -1,-1), time: 0.2703s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_22, [-0.9101799726486206,3.5292844772338867]=>[1e-05,3.5292844772338867] (15,-1; -1,-1), time: 0.3240s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_23, [-0.39482080936431885,5.08168363571167]=>[1e-05,5.08168363571167] (15,-1; -1,-1), time: 0.3287s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_41, [-1.0208721160888672,4.336470127105713]=>[1e-05,4.336470127105713] (15,-1; -1,-1), time: 0.3352s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_56, [-2.6595096588134766,1.6949946880340576]=>[-2.6595096588134766,-1e-05] (-1,-1; 15,-1), time: 0.3407s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_37, [-1.5611512660980225,2.1353037357330322]=>[1e-05,2.1353037357330322] (15,-1; -1,-1), time: 0.3410s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_6, [-1.8539128303527832,2.195549726486206]=>[1e-05,2.195549726486206] (15,-1; -1,-1), time: 0.3415s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_19, [-1.2710602283477783,2.9906556606292725]=>[1e-05,2.9906556606292725] (15,-1; -1,-1), time: 0.3457s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_74, [-2.5107357501983643,1.6442588567733765]=>[-2.5107357501983643,-1e-05] (-1,-1; 15,-1), time: 0.3481s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_62, [-0.5489447116851807,3.952737808227539]=>[1e-05,3.952737808227539] (15,-1; -1,-1), time: 0.3694s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_40, [-1.5347007513046265,2.7654497623443604]=>[1e-05,2.7654497623443604] (15,-1; -1,-1), time: 0.3721s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_32, [-2.394474744796753,0.9256961345672607]=>[-2.394474744796753,-1e-05] (-1,-1; 15,-1), time: 0.2719s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_39, [-2.187298059463501,1.3239684104919434]=>[-2.187298059463501,-1e-05] (-1,-1; 15,-1), time: 0.5587s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_63, [-1.4056040048599243,2.7540090084075928]=>[1e-05,2.7540090084075928] (15,-1; -1,-1), time: 0.2642s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_67, [-0.893222451210022,3.241253614425659]=>[1e-05,3.241253614425659] (15,-1; -1,-1), time: 0.2581s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_72, [-0.47818899154663086,5.060829162597656]=>[1e-05,5.060829162597656] (15,-1; -1,-1), time: 0.2600s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_90, [-3.0504255294799805,1.0797380208969116]=>[-3.0504255294799805,-1e-05] (-1,-1; 15,-1), time: 0.2638s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_29, [-2.5975897312164307,1.2152256965637207]=>[-2.5975897312164307,-1e-05] (-1,-1; 15,-1), time: 0.2745s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_53, [-2.5974605083465576,1.2855322360992432]=>[-2.5974605083465576,-1e-05] (-1,-1; 15,-1), time: 0.2637s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_14, [-1.4471676349639893,3.1234405040740967]=>[1e-05,3.1234405040740967] (15,-1; -1,-1), time: 0.3113s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_46, [-1.605764389038086,3.0265681743621826]=>[1e-05,3.0265681743621826] (15,-1; -1,-1), time: 0.2629s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_95, [-2.5051658153533936,1.1891603469848633]=>[-2.5051658153533936,-1e-05] (-1,-1; 15,-1), time: 0.2600s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_73, [-3.741726875305176,0.6885411739349365]=>[-3.741726875305176,-1e-05] (-1,-1; 15,-1), time: 0.2602s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_59, [-3.464024066925049,0.5308424234390259]=>[-3.464024066925049,-1e-05] (-1,-1; 15,-1), time: 0.2623s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_17, [-2.8631699085235596,2.003357410430908]=>[-2.8631699085235596,-1e-05] (-1,-1; 15,-1), time: 0.2620s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_61, [-0.9848012924194336,2.569424629211426]=>[1e-05,2.569424629211426] (15,-1; -1,-1), time: 0.2618s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_78, [-2.1999669075012207,1.0641525983810425]=>[-2.1999669075012207,-1e-05] (-1,-1; 15,-1), time: 0.2631s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_0, [-2.456732988357544,1.0929969549179077]=>[-2.456732988357544,-1e-05] (-1,-1; 15,-1), time: 0.3521s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_64, [-2.9553349018096924,0.6258877515792847]=>[-2.9553349018096924,-1e-05] (-1,-1; 15,-1), time: 0.2717s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_81, [-2.703280448913574,1.4471460580825806]=>[-2.703280448913574,-1e-05] (-1,-1; 15,-1), time: 0.3496s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_83, [-2.5712711811065674,1.0751757621765137]=>[-2.5712711811065674,-1e-05] (-1,-1; 15,-1), time: 0.3513s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_60, [-3.768211841583252,0.8849995136260986]=>[-3.768211841583252,-1e-05] (-1,-1; 15,-1), time: 0.2791s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_45, [-3.5633034706115723,0.8482811450958252]=>[-3.5633034706115723,-1e-05] (-1,-1; 15,-1), time: 0.3447s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_7, [-4.323271751403809,0.38140153884887695]=>[-4.323271751403809,-1e-05] (-1,-1; 15,-1), time: 0.2784s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_91, [-0.07849526405334473,5.616669654846191]=>[1e-05,5.616669654846191] (15,-1; -1,-1), time: 0.2554s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_10, [-3.951040267944336,1.4456658363342285]=>[-3.951040267944336,-1e-05] (-1,-1; 15,-1), time: 0.2192s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_82, [-2.944899797439575,0.7187678813934326]=>[-2.944899797439575,-1e-05] (-1,-1; 15,-1), time: 0.2323s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_68, [-1.5950310230255127,1.8110507726669312]=>[1e-05,1.8110507726669312] (15,-1; -1,-1), time: 0.2523s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_34, [-2.0848214626312256,1.7313868999481201]=>[-2.0848214626312256,-1e-05] (-1,-1; 15,-1), time: 0.2676s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_30, [-1.3708014488220215,5.633767127990723]=>[1e-05,5.633767127990723] (15,-1; -1,-1), time: 0.2623s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_86, [-4.664872169494629,0.6327457427978516]=>[-4.664872169494629,-1e-05] (-1,-1; 15,-1), time: 0.2708s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_97, [-1.4029237031936646,3.0726821422576904]=>[1e-05,3.0726821422576904] (15,-1; -1,-1), time: 0.2563s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_1, [-0.6554166078567505,3.5278217792510986]=>[1e-05,3.5278217792510986] (15,-1; -1,-1), time: 0.2692s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_52, [-2.7686867713928223,1.1227195262908936]=>[-2.7686867713928223,-1e-05] (-1,-1; 15,-1), time: 0.2813s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_15, [-2.602022647857666,1.4084436893463135]=>[-2.602022647857666,-1e-05] (-1,-1; 15,-1), time: 0.2636s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_44, [-3.834878444671631,2.675933361053467]=>[-3.834878444671631,-1e-05] (-1,-1; 15,-1), time: 0.2594s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_84, [-3.0156915187835693,1.011488676071167]=>[-3.0156915187835693,-1e-05] (-1,-1; 15,-1), time: 0.2588s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_38, [-2.3845016956329346,1.319189190864563]=>[-2.3845016956329346,-1e-05] (-1,-1; 15,-1), time: 0.2689s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_25, [-2.510972261428833,1.2568981647491455]=>[-2.510972261428833,-1e-05] (-1,-1; 15,-1), time: 0.2272s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_75, [-2.5725841522216797,0.945194661617279]=>[-2.5725841522216797,-1e-05] (-1,-1; 15,-1), time: 0.2696s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_18, [-2.277019500732422,0.9807735681533813]=>[-2.277019500732422,-1e-05] (-1,-1; 15,-1), time: 0.2765s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_33, [-1.3871099948883057,3.77146053314209]=>[1e-05,3.77146053314209] (15,-1; -1,-1), time: 0.3202s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_66, [-4.170777320861816,0.6505234241485596]=>[-4.170777320861816,-1e-05] (-1,-1; 15,-1), time: 0.2827s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_2, [-2.7373173236846924,1.369419813156128]=>[-2.7373173236846924,-1e-05] (-1,-1; 15,-1), time: 0.2470s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_55, [-1.8557524681091309,1.1027638912200928]=>[-1.8557524681091309,-1e-05] (-1,-1; 15,-1), time: 0.2571s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_26, [-0.9028511047363281,4.4959211349487305]=>[1e-05,4.4959211349487305] (15,-1; -1,-1), time: 0.2715s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_69, [-4.0158162117004395,0.4534163475036621]=>[-4.0158162117004395,-1e-05] (-1,-1; 15,-1), time: 0.2554s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_65, [-0.5650227069854736,4.758341312408447]=>[1e-05,4.758341312408447] (15,-1; -1,-1), time: 0.2561s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_79, [-1.2544950246810913,3.0608644485473633]=>[1e-05,3.0608644485473633] (15,-1; -1,-1), time: 0.2829s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_80, [-1.417008638381958,4.054327011108398]=>[1e-05,4.054327011108398] (15,-1; -1,-1), time: 0.2555s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_87, [-3.4388179779052734,0.7852094173431396]=>[-3.4388179779052734,-1e-05] (-1,-1; 15,-1), time: 0.2669s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_96, [-1.8749407529830933,1.1924000978469849]=>[-1.8749407529830933,-1e-05] (-1,-1; 15,-1), time: 0.2636s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_16, [-2.073756217956543,1.4616680145263672]=>[-2.073756217956543,-1e-05] (-1,-1; 15,-1), time: 0.2641s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_3, [-1.6606497764587402,1.1629281044006348]=>[-1.6606497764587402,-1e-05] (-1,-1; 15,-1), time: 0.2529s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_58, [-4.850802421569824,0.4352126121520996]=>[-4.850802421569824,-1e-05] (-1,-1; 15,-1), time: 0.2597s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_48, [-2.971261501312256,1.2538728713989258]=>[-2.971261501312256,-1e-05] (-1,-1; 15,-1), time: 0.2617s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_89, [-2.9279515743255615,0.8706374168395996]=>[-2.9279515743255615,-1e-05] (-1,-1; 15,-1), time: 0.2631s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_92, [-1.9390060901641846,1.3401355743408203]=>[-1.9390060901641846,-1e-05] (-1,-1; 15,-1), time: 7.0081s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_85, [-2.982950210571289,1.0776745080947876]=>[-2.982950210571289,-1e-05] (-1,-1; 15,-1), time: 0.2556s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_9, [-2.2059803009033203,1.1280574798583984]=>[-2.2059803009033203,-1e-05] (-1,-1; 15,-1), time: 0.5622s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_13, [-1.129767656326294,4.404343605041504]=>[1e-05,4.404343605041504] (15,-1; -1,-1), time: 0.2466s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_93, [-2.107161045074463,1.2928459644317627]=>[-2.107161045074463,-1e-05] (-1,-1; 15,-1), time: 0.2428s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_88, [-2.066643238067627,1.0904030799865723]=>[-2.066643238067627,-1e-05] (-1,-1; 15,-1), time: 0.2543s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_20, [-1.974485993385315,1.4108153581619263]=>[-1.974485993385315,-1e-05] (-1,-1; 15,-1), time: 0.2431s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_8, [-4.217977046966553,0.552143931388855]=>[-4.217977046966553,-1e-05] (-1,-1; 15,-1), time: 0.2463s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_71, [-1.1033039093017578,2.2286224365234375]=>[1e-05,2.2286224365234375] (15,-1; -1,-1), time: 0.2493s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_12, [-1.8378815650939941,2.5445587635040283]=>[1e-05,2.5445587635040283] (15,-1; -1,-1), time: 0.5126s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_54, [-1.7736409902572632,1.6084685325622559]=>[1e-05,0.3748253272789372] (15,-1; 9,-1), time: 15.2937s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_49, [-4.724693298339844,1.714162826538086]=>[-4.724693298339844,-1e-05] (-1,-1; 15,-1), time: 0.2374s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_50, [-3.906052827835083,1.4066166877746582]=>[-3.906052827835083,-1e-05] (-1,-1; 15,-1), time: 0.2335s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_43, [-2.0485823154449463,2.359447717666626]=>[-1.1827671127745518,-1e-05] (2,-1; 15,-1), time: 4.6783s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_36, [-2.255549907684326,1.735316276550293]=>[-2.255549907684326,-1e-05] (-1,-1; 15,-1), time: 0.7492s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_24, [-2.6865711212158203,1.2958499193191528]=>[-2.6865711212158203,-1e-05] (-1,-1; 15,-1), time: 0.2301s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_70, [-1.6303014755249023,2.168785810470581]=>[1e-05,2.168785810470581] (15,-1; -1,-1), time: 0.6191s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_11, [-1.8978476524353027,2.016496419906616]=>[-0.6257644764423795,-1e-05] (9,-1; 15,-1), time: 15.6290s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_99, [-2.326395034790039,2.846212387084961]=>[-1.2704826432643956,-1e-05] (2,-1; 15,-1), time: 4.2520s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_76, [-1.8749110698699951,1.5990028381347656]=>[-0.06520782094588971,0.3785660933078753] (9,-1; 2,-1), time: 22.2553s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_77, [-2.037522554397583,2.3705034255981445]=>[-0.5548608449089569,0.226384369202152] (2,-1; 9,-1), time: 25.9669s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_98, [-1.9841742515563965,1.4861652851104736]=>[-0.06514160034725328,0.3539112236298051] (9,-1; 2,-1), time: 26.1031s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_27, [-2.1820878982543945,1.9675016403198242]=>[-0.4632811481593757,0.11526205704408418] (9,-1; 9,-1), time: 30.0262s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_57, [-1.8048529624938965,2.28800892829895]=>[-0.03502032180921538,0.6442862017748892] (9,-1; 9,-1), time: 30.0415s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_35, [-1.7747673988342285,1.7525677680969238]=>[-0.24515424132994382,0.2779744723630486] (9,-1; 9,-1), time: 30.0848s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_51, [-1.6735289096832275,3.1639366149902344]=>[-0.017428277686246545,0.9122101681053777] (9,-1; 9,-1), time: 30.0025s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_94, [-2.6944000720977783,1.2341364622116089]=>[-0.71865846640108,0.11006591831267358] (9,-1; 9,-1), time: 30.0145s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_47, [-2.113966226577759,1.827566385269165]=>[-0.3952808776982178,0.3080108056009895] (9,-1; 9,-1), time: 30.0079s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_4, [-1.8825111389160156,1.5914931297302246]=>[-0.1508672557416536,0.1660471250350386] (9,-1; 9,-1), time: 30.0083s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_31, [-1.860023021697998,1.8459662199020386]=>[-0.250256237265198,0.28377205865564475] (9,-1; 9,-1), time: 30.0119s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_28, [-2.2518601417541504,1.9125380516052246]=>[-0.11912003184606816,0.45464336919058584] (9,-1; 9,-1), time: 30.0601s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_21, [-1.5259143114089966,1.754138708114624]=>[-0.23912456399563362,0.12828444106508516] (9,-1; 9,-1), time: 30.0028s, #vars: 1499, #constrs: 821, improved: True
Solving MIP for lay10_42, [-2.253740072250366,1.7816201448440552]=>[-0.3399432737611958,0.05293957128156672] (9,-1; 9,-1), time: 30.0071s, #vars: 1499, #constrs: 821, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: -19.943607330322266 with beta sum per layer: []
optimal alpha/beta time: 13.09910273551941
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.0632,  2.4561,  3.2831,  1.3882,  2.4779, -2.6529,  4.0233,  1.6946,
          5.2101]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 62.658111572265625, ub improved 91.65179443359375, time 46.3111
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_56', 'lay12_91', 'lay12_22', 'lay12_31', 'lay12_44', 'lay12_48', 'lay12_17', 'lay12_96', 'lay12_60', 'lay12_6', 'lay12_87', 'lay12_32', 'lay12_73', 'lay12_10', 'lay12_89', 'lay12_68', 'lay12_81', 'lay12_83', 'lay12_9', 'lay12_39', 'lay12_98', 'lay12_79', 'lay12_1', 'lay12_67', 'lay12_95', 'lay12_11', 'lay12_77', 'lay12_18', 'lay12_55', 'lay12_42', 'lay12_45', 'lay12_59', 'lay12_14', 'lay12_4', 'lay12_29', 'lay12_8', 'lay12_63', 'lay12_21', 'lay12_82', 'lay12_0', 'lay12_84', 'lay12_52', 'lay12_92', 'lay12_24', 'lay12_12', 'lay12_13', 'lay12_90', 'lay12_64', 'lay12_76', 'lay12_28', 'lay12_38', 'lay12_54', 'lay12_16', 'lay12_65', 'lay12_25', 'lay12_33', 'lay12_88', 'lay12_46', 'lay12_97', 'lay12_30', 'lay12_19', 'lay12_43', 'lay12_23', 'lay12_7', 'lay12_94', 'lay12_75', 'lay12_37', 'lay12_2', 'lay12_41', 'lay12_36', 'lay12_85', 'lay12_35', 'lay12_57', 'lay12_72', 'lay12_58', 'lay12_78', 'lay12_66', 'lay12_51', 'lay12_61', 'lay12_74', 'lay12_34', 'lay12_20', 'lay12_3', 'lay12_15', 'lay12_40', 'lay12_99', 'lay12_71', 'lay12_27', 'lay12_5', 'lay12_69', 'lay12_53', 'lay12_80', 'lay12_86', 'lay12_26', 'lay12_93', 'lay12_47', 'lay12_70', 'lay12_50', 'lay12_49', 'lay12_62'] filter: 1.0
Solving MIP for lay12_60, [-3.052088499069214,4.369411468505859]=>[1e-05,4.369411468505859] (15,-1; -1,-1), time: 0.3254s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_31, [-2.45054030418396,5.511281490325928]=>[1e-05,5.511281490325928] (15,-1; -1,-1), time: 0.3267s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_44, [-4.81046199798584,2.75087833404541]=>[-4.81046199798584,-1e-05] (-1,-1; 15,-1), time: 0.3286s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_32, [-3.8909826278686523,3.130392551422119]=>[-3.8909826278686523,-1e-05] (-1,-1; 15,-1), time: 0.3305s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_6, [-4.2789387702941895,2.4754109382629395]=>[-4.2789387702941895,-1e-05] (-1,-1; 15,-1), time: 0.3367s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_17, [-3.781690835952759,3.0428218841552734]=>[-3.781690835952759,-1e-05] (-1,-1; 15,-1), time: 0.3493s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_87, [-1.5960578918457031,6.479846477508545]=>[1e-05,6.479846477508545] (15,-1; -1,-1), time: 0.3491s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_22, [-4.671957015991211,2.073092460632324]=>[-4.671957015991211,-1e-05] (-1,-1; 15,-1), time: 0.3799s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_89, [-5.175097942352295,2.2973759174346924]=>[-5.175097942352295,-1e-05] (-1,-1; 15,-1), time: 0.3775s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_10, [-4.423626899719238,2.245945453643799]=>[-4.423626899719238,-1e-05] (-1,-1; 15,-1), time: 0.3821s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_91, [-3.510319471359253,3.1526031494140625]=>[-3.510319471359253,-1e-05] (-1,-1; 15,-1), time: 0.3905s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_56, [-4.406126022338867,1.8722028732299805]=>[-4.406126022338867,-1e-05] (-1,-1; 15,-1), time: 0.3958s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_96, [-4.070412635803223,3.2222583293914795]=>[-4.070412635803223,-1e-05] (-1,-1; 15,-1), time: 0.4005s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_83, [-4.421077251434326,5.836112022399902]=>[1e-05,5.836112022399902] (15,-1; -1,-1), time: 0.3286s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_9, [-4.162006378173828,2.9107768535614014]=>[-4.162006378173828,-1e-05] (-1,-1; 15,-1), time: 0.3268s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_39, [-4.2987565994262695,1.9497292041778564]=>[-4.2987565994262695,-1e-05] (-1,-1; 15,-1), time: 0.3272s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_81, [-4.022418022155762,3.5746490955352783]=>[-4.022418022155762,-1e-05] (-1,-1; 15,-1), time: 0.3338s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_98, [-2.547659397125244,8.81260871887207]=>[1e-05,8.81260871887207] (15,-1; -1,-1), time: 0.3249s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_1, [-4.2227630615234375,3.7256381511688232]=>[-4.2227630615234375,-1e-05] (-1,-1; 15,-1), time: 0.3389s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_11, [-3.6787924766540527,4.363891124725342]=>[1e-05,4.363891124725342] (15,-1; -1,-1), time: 0.3278s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_95, [-3.2354331016540527,4.123875617980957]=>[1e-05,4.123875617980957] (15,-1; -1,-1), time: 0.3325s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_77, [-4.521572589874268,2.124406576156616]=>[-4.521572589874268,-1e-05] (-1,-1; 15,-1), time: 0.3241s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_18, [-5.524986267089844,3.334737777709961]=>[-5.524986267089844,-1e-05] (-1,-1; 15,-1), time: 0.3420s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_55, [-3.807272434234619,2.3792691230773926]=>[-3.807272434234619,-1e-05] (-1,-1; 15,-1), time: 0.3469s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_42, [-5.30772590637207,2.087738275527954]=>[-5.30772590637207,-1e-05] (-1,-1; 15,-1), time: 0.3229s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_45, [-4.394594192504883,2.4179553985595703]=>[-4.394594192504883,-1e-05] (-1,-1; 15,-1), time: 0.3265s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_14, [-4.144575595855713,2.4271745681762695]=>[-4.144575595855713,-1e-05] (-1,-1; 15,-1), time: 0.3316s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_29, [-3.8814051151275635,3.822566032409668]=>[-3.8814051151275635,-1e-05] (-1,-1; 15,-1), time: 0.3302s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_8, [-3.648911952972412,2.7952442169189453]=>[-3.648911952972412,-1e-05] (-1,-1; 15,-1), time: 0.3262s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_63, [-3.2586236000061035,6.708231449127197]=>[1e-05,6.708231449127197] (15,-1; -1,-1), time: 0.3301s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_21, [-3.9213547706604004,2.5755228996276855]=>[-3.9213547706604004,-1e-05] (-1,-1; 15,-1), time: 0.3313s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_0, [-4.974954605102539,2.5235323905944824]=>[-4.974954605102539,-1e-05] (-1,-1; 15,-1), time: 0.3582s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_82, [-4.5954742431640625,2.33449649810791]=>[-4.5954742431640625,-1e-05] (-1,-1; 15,-1), time: 0.3692s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_4, [-4.656219959259033,4.514240264892578]=>[-4.656219959259033,-1e-05] (-1,-1; 15,-1), time: 0.5671s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_84, [-4.46841287612915,1.9834872484207153]=>[-4.46841287612915,-1e-05] (-1,-1; 15,-1), time: 0.3154s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_13, [-5.460496425628662,1.8414952754974365]=>[-5.460496425628662,-1e-05] (-1,-1; 15,-1), time: 0.2913s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_24, [-4.119917869567871,6.37368631362915]=>[1e-05,6.37368631362915] (15,-1; -1,-1), time: 0.3205s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_90, [-5.109515190124512,2.2624926567077637]=>[-5.109515190124512,-1e-05] (-1,-1; 15,-1), time: 0.3039s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_76, [-3.7754735946655273,2.447885751724243]=>[-3.7754735946655273,-1e-05] (-1,-1; 15,-1), time: 0.2539s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_64, [-2.6646881103515625,3.4472596645355225]=>[1e-05,3.4472596645355225] (15,-1; -1,-1), time: 0.3398s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_38, [-5.433452606201172,1.9069581031799316]=>[-5.433452606201172,-1e-05] (-1,-1; 15,-1), time: 0.2844s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_65, [-5.048918724060059,2.1734986305236816]=>[-5.048918724060059,-1e-05] (-1,-1; 15,-1), time: 0.2989s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_54, [-3.8269450664520264,3.8894541263580322]=>[1e-05,3.8894541263580322] (15,-1; -1,-1), time: 0.3153s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_16, [-4.121148109436035,2.225414991378784]=>[-4.121148109436035,-1e-05] (-1,-1; 15,-1), time: 0.3226s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_30, [-5.665372848510742,2.0221526622772217]=>[-5.665372848510742,-1e-05] (-1,-1; 15,-1), time: 0.2835s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_97, [-3.633711814880371,4.496648788452148]=>[1e-05,4.496648788452148] (15,-1; -1,-1), time: 0.3166s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_19, [-4.334887981414795,2.0938329696655273]=>[-4.334887981414795,-1e-05] (-1,-1; 15,-1), time: 0.3200s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_43, [-3.9716379642486572,2.745687961578369]=>[-3.9716379642486572,-1e-05] (-1,-1; 15,-1), time: 0.3149s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_23, [-3.5025784969329834,3.957761287689209]=>[1e-05,3.957761287689209] (15,-1; -1,-1), time: 0.3110s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_7, [-3.7776145935058594,2.994408130645752]=>[-3.7776145935058594,-1e-05] (-1,-1; 15,-1), time: 0.3021s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_94, [-4.820163726806641,2.9198899269104004]=>[-4.820163726806641,-1e-05] (-1,-1; 15,-1), time: 0.3113s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_33, [-4.228897571563721,2.921948194503784]=>[-4.228897571563721,-1e-05] (-1,-1; 15,-1), time: 5.9205s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_2, [-5.64734411239624,2.1406493186950684]=>[-5.64734411239624,-1e-05] (-1,-1; 15,-1), time: 0.3321s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_41, [-2.936067581176758,3.3252201080322266]=>[1e-05,3.3252201080322266] (15,-1; -1,-1), time: 0.3657s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_36, [-4.443183422088623,3.1015751361846924]=>[-4.443183422088623,-1e-05] (-1,-1; 15,-1), time: 0.3574s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_28, [-3.3027708530426025,3.252368450164795]=>[1e-05,1.4293056444814365] (15,-1; 2,-1), time: 7.6338s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_37, [-3.6302101612091064,2.860586643218994]=>[1e-05,1.202487987277565] (15,-1; 2,-1), time: 6.0628s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_35, [-3.573251247406006,4.417047500610352]=>[1e-05,4.417047500610352] (15,-1; -1,-1), time: 0.3558s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_72, [-3.99753999710083,3.7592720985412598]=>[-3.99753999710083,-1e-05] (-1,-1; 15,-1), time: 0.3913s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_58, [-2.8537790775299072,3.3160393238067627]=>[1e-05,3.3160393238067627] (15,-1; -1,-1), time: 0.3666s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_78, [-5.525620460510254,2.0005903244018555]=>[-5.525620460510254,-1e-05] (-1,-1; 15,-1), time: 0.3373s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_66, [-4.073502063751221,3.475188732147217]=>[-4.073502063751221,-1e-05] (-1,-1; 15,-1), time: 0.3606s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_51, [-4.098679542541504,3.2462551593780518]=>[-4.098679542541504,-1e-05] (-1,-1; 15,-1), time: 0.3421s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_61, [-5.6273884773254395,1.7110419273376465]=>[-5.6273884773254395,-1e-05] (-1,-1; 15,-1), time: 0.3262s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_74, [-4.26436710357666,1.8950121402740479]=>[-4.26436710357666,-1e-05] (-1,-1; 15,-1), time: 0.3509s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_34, [-3.1904380321502686,4.856126308441162]=>[1e-05,4.856126308441162] (15,-1; -1,-1), time: 0.3335s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_20, [-3.1007537841796875,4.066671848297119]=>[1e-05,4.066671848297119] (15,-1; -1,-1), time: 0.3348s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_3, [-4.248457431793213,3.3070731163024902]=>[-4.248457431793213,-1e-05] (-1,-1; 15,-1), time: 0.3453s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_15, [-5.232290744781494,4.41082763671875]=>[-5.232290744781494,-1e-05] (-1,-1; 15,-1), time: 0.3286s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_40, [-3.778852701187134,3.3965976238250732]=>[-3.778852701187134,-1e-05] (-1,-1; 15,-1), time: 0.3275s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_99, [-4.263163089752197,1.9508107900619507]=>[-4.263163089752197,-1e-05] (-1,-1; 15,-1), time: 0.3474s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_46, [-3.7055859565734863,4.016749382019043]=>[-0.664880529327452,-1e-05] (9,-1; 15,-1), time: 15.5606s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_27, [-4.425299644470215,3.710296630859375]=>[-4.425299644470215,-1e-05] (-1,-1; 15,-1), time: 0.3177s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_5, [-3.8809585571289062,2.984071731567383]=>[-3.8809585571289062,-1e-05] (-1,-1; 15,-1), time: 0.3363s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_69, [-3.5478172302246094,3.640465259552002]=>[1e-05,3.640465259552002] (15,-1; -1,-1), time: 0.3124s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_53, [-4.374030590057373,4.14692497253418]=>[-4.374030590057373,-1e-05] (-1,-1; 15,-1), time: 0.3219s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_80, [-3.3012752532958984,4.466001033782959]=>[1e-05,4.466001033782959] (15,-1; -1,-1), time: 0.3113s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_86, [-4.567285537719727,3.592904567718506]=>[-4.567285537719727,-1e-05] (-1,-1; 15,-1), time: 0.3205s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_26, [-4.605949401855469,3.65155029296875]=>[-4.605949401855469,-1e-05] (-1,-1; 15,-1), time: 0.3201s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_93, [-4.064161777496338,2.8297290802001953]=>[-4.064161777496338,-1e-05] (-1,-1; 15,-1), time: 0.3291s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_67, [-3.6228160858154297,3.61342191696167]=>[-0.39704996678473253,0.027822598516928292] (2,-1; 9,-1), time: 23.1506s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_92, [-3.3577048778533936,2.7659504413604736]=>[-0.10533759284146535,0.23866994623472715] (9,-1; 2,-1), time: 26.4874s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_50, [-3.278303623199463,5.953959941864014]=>[1e-05,5.953959941864014] (15,-1; -1,-1), time: 0.3147s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_79, [-3.6190714836120605,3.17331862449646]=>[-0.3535929285129535,0.34805684557870503] (2,-1; 9,-1), time: 27.7776s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_49, [-5.47606086730957,2.6658825874328613]=>[-5.47606086730957,-1e-05] (-1,-1; 15,-1), time: 0.3208s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_59, [-4.167220115661621,4.576496124267578]=>[-0.1589232117377988,0.7404926791042513] (9,-1; 2,-1), time: 27.7352s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_62, [-3.376821994781494,4.3656439781188965]=>[1e-05,4.3656439781188965] (15,-1; -1,-1), time: 0.3248s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_48, [-3.4433486461639404,4.670032024383545]=>[-0.2787927550333122,0.4728958124115787] (9,-1; 9,-1), time: 30.0725s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_68, [-3.4373397827148438,4.00078010559082]=>[-0.3747372334778132,0.08523636921657415] (9,-1; 9,-1), time: 30.1115s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_73, [-4.562564373016357,3.782170534133911]=>[-0.4175949146409536,0.1753035386170519] (9,-1; 9,-1), time: 30.1936s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_52, [-3.441608428955078,3.301819324493408]=>[-0.17174033587036164,0.08281042906810052] (9,-1; 9,-1), time: 30.0698s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_12, [-3.635089874267578,2.600229263305664]=>[-0.2454755205647357,0.0017785191117008507] (9,-1; 9,-1), time: 30.0705s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_25, [-4.210141181945801,3.5444436073303223]=>[-0.06330635849640695,0.2613036803495108] (9,-1; 9,-1), time: 30.0603s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_88, [-3.2942118644714355,3.9440252780914307]=>[-0.5039959488553604,0.12431175236225575] (9,-1; 9,-1), time: 30.0234s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_75, [-3.7333483695983887,4.818190574645996]=>[-0.052045053409396434,0.8481149081780489] (9,-1; 9,-1), time: 30.0124s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_47, [-3.702547311782837,3.970163106918335]=>[-0.6887942553603973,-1e-05] (9,-1; 15,-1), time: 15.2934s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_85, [-3.797159433364868,3.700479030609131]=>[-0.19311095080567672,0.08270659867626311] (9,-1; 9,-1), time: 30.0073s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_57, [-3.3244314193725586,3.0987818241119385]=>[-0.40856515686769723,0.00023805718668990931] (9,-1; 9,-1), time: 30.0337s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_71, [-3.488548994064331,2.9140028953552246]=>[-0.143152527863677,0.06593292235849359] (9,-1; 9,-1), time: 30.0062s, #vars: 1627, #constrs: 963, improved: True
Solving MIP for lay12_70, [-4.240046501159668,4.676422119140625]=>[-0.22828446957684204,0.37490686252848476] (9,-1; 9,-1), time: 30.0027s, #vars: 1627, #constrs: 963, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -22.404518127441406 with beta sum per layer: []
optimal alpha/beta time: 11.721636056900024
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.3433,  2.6449,  3.4595,  1.6743,  2.7797, -2.3087,  4.2092,  2.0856,
          5.5167]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 139.4132537841797, ub improved 226.9947052001953, time 54.0463
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_6', 'lay14_99', 'lay14_32', 'lay14_98', 'lay14_90', 'lay14_2', 'lay14_93', 'lay14_61', 'lay14_56', 'lay14_66', 'lay14_33', 'lay14_92', 'lay14_13', 'lay14_24', 'lay14_94', 'lay14_16', 'lay14_62', 'lay14_85', 'lay14_77', 'lay14_58', 'lay14_55', 'lay14_48', 'lay14_21', 'lay14_12', 'lay14_17', 'lay14_45', 'lay14_74', 'lay14_8', 'lay14_7', 'lay14_15', 'lay14_80', 'lay14_72', 'lay14_28', 'lay14_69', 'lay14_37', 'lay14_60', 'lay14_76', 'lay14_53', 'lay14_83', 'lay14_54', 'lay14_49', 'lay14_29', 'lay14_30', 'lay14_39', 'lay14_70', 'lay14_9', 'lay14_23', 'lay14_34', 'lay14_63', 'lay14_75', 'lay14_42', 'lay14_10', 'lay14_50', 'lay14_64', 'lay14_46', 'lay14_0', 'lay14_59', 'lay14_26', 'lay14_38', 'lay14_82', 'lay14_43', 'lay14_96', 'lay14_86', 'lay14_52', 'lay14_11', 'lay14_20', 'lay14_5', 'lay14_36', 'lay14_25', 'lay14_51', 'lay14_79', 'lay14_84', 'lay14_44', 'lay14_87', 'lay14_47', 'lay14_3', 'lay14_31', 'lay14_19', 'lay14_40', 'lay14_81', 'lay14_88', 'lay14_57', 'lay14_78', 'lay14_27', 'lay14_18', 'lay14_89', 'lay14_14', 'lay14_35', 'lay14_4', 'lay14_95', 'lay14_71', 'lay14_68', 'lay14_1', 'lay14_73', 'lay14_97', 'lay14_41', 'lay14_91', 'lay14_22', 'lay14_67', 'lay14_65'] filter: 1.0
Solving MIP for lay14_98, [-10.33332633972168,5.922085285186768]=>[-10.33332633972168,-1e-05] (-1,-1; 15,-1), time: 0.4454s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_33, [-6.786803245544434,8.902569770812988]=>[1e-05,8.902569770812988] (15,-1; -1,-1), time: 0.4483s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_32, [-6.46558141708374,7.198673248291016]=>[1e-05,7.198673248291016] (15,-1; -1,-1), time: 0.4574s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_13, [-6.761921405792236,7.261919975280762]=>[1e-05,7.261919975280762] (15,-1; -1,-1), time: 0.4676s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_24, [-7.4078545570373535,7.322724342346191]=>[-7.4078545570373535,-1e-05] (-1,-1; 15,-1), time: 0.4871s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_2, [-9.176255226135254,7.854761600494385]=>[-9.176255226135254,-1e-05] (-1,-1; 15,-1), time: 0.4945s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_93, [-8.654888153076172,5.810051441192627]=>[-8.654888153076172,-1e-05] (-1,-1; 15,-1), time: 0.5034s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_16, [-7.854743957519531,7.234845161437988]=>[-7.854743957519531,-1e-05] (-1,-1; 15,-1), time: 0.5700s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_61, [-7.761253833770752,4.732753276824951]=>[-7.761253833770752,-1e-05] (-1,-1; 15,-1), time: 0.5933s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_62, [-8.124650001525879,10.51689624786377]=>[1e-05,10.51689624786377] (15,-1; -1,-1), time: 0.3624s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_17, [-9.049813270568848,4.286067008972168]=>[-9.049813270568848,-1e-05] (-1,-1; 15,-1), time: 0.3821s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_45, [-8.4158353805542,5.354303359985352]=>[-8.4158353805542,-1e-05] (-1,-1; 15,-1), time: 0.3760s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_8, [-7.505533695220947,6.105724811553955]=>[-7.505533695220947,-1e-05] (-1,-1; 15,-1), time: 0.3805s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_7, [-9.429078102111816,5.759668827056885]=>[-9.429078102111816,-1e-05] (-1,-1; 15,-1), time: 0.3915s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_15, [-7.211764812469482,6.150166988372803]=>[-7.211764812469482,-1e-05] (-1,-1; 15,-1), time: 0.3283s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_80, [-7.069289684295654,6.46577787399292]=>[-7.069289684295654,-1e-05] (-1,-1; 15,-1), time: 0.3858s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_48, [-6.944823741912842,5.764554977416992]=>[1e-05,1.344824905408933] (15,-1; 2,-1), time: 6.3902s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_74, [-7.689693450927734,5.938169002532959]=>[1e-05,0.9814259352283978] (15,-1; 2,-1), time: 6.1542s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_28, [-7.6768059730529785,7.336297988891602]=>[-7.6768059730529785,-1e-05] (-1,-1; 15,-1), time: 0.3358s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_69, [-7.564794540405273,6.991280555725098]=>[-7.564794540405273,-1e-05] (-1,-1; 15,-1), time: 0.3931s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_37, [-9.313591003417969,6.210360527038574]=>[-9.313591003417969,-1e-05] (-1,-1; 15,-1), time: 0.3149s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_60, [-9.296675682067871,5.2911696434021]=>[-9.296675682067871,-1e-05] (-1,-1; 15,-1), time: 0.3775s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_90, [-6.8732099533081055,6.133275985717773]=>[1e-05,0.5632663684068934] (15,-1; 2,-1), time: 7.9483s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_83, [-7.469044208526611,6.891420364379883]=>[-7.469044208526611,-1e-05] (-1,-1; 15,-1), time: 0.3968s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_55, [-9.04249095916748,8.400827407836914]=>[1e-05,1.7344915246153063] (15,-1; 2,-1), time: 7.9104s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_49, [-8.720361709594727,4.929788112640381]=>[-8.720361709594727,-1e-05] (-1,-1; 15,-1), time: 0.3758s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_29, [-7.325772285461426,7.72654390335083]=>[1e-05,7.72654390335083] (15,-1; -1,-1), time: 0.3790s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_56, [-6.66987419128418,8.177924156188965]=>[-0.737607065210616,-1e-05] (2,-1; 15,-1), time: 10.3050s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_76, [-7.31504487991333,6.696736812591553]=>[1e-05,1.9742772946856566] (15,-1; 2,-1), time: 5.9538s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_70, [-8.095386505126953,7.580528259277344]=>[-8.095386505126953,-1e-05] (-1,-1; 15,-1), time: 0.3499s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_9, [-8.483384132385254,6.476661682128906]=>[-8.483384132385254,-1e-05] (-1,-1; 15,-1), time: 0.3425s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_23, [-6.475350379943848,8.056404113769531]=>[1e-05,8.056404113769531] (15,-1; -1,-1), time: 0.3420s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_34, [-8.880844116210938,5.762679100036621]=>[-8.880844116210938,-1e-05] (-1,-1; 15,-1), time: 0.3354s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_63, [-7.767941474914551,8.313941955566406]=>[1e-05,8.313941955566406] (15,-1; -1,-1), time: 0.3330s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_66, [-8.854875564575195,6.978645324707031]=>[1e-05,0.8365614277776735] (15,-1; 9,-1), time: 15.4611s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_42, [-6.712806701660156,7.763152599334717]=>[1e-05,7.763152599334717] (15,-1; -1,-1), time: 0.3717s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_21, [-6.866704940795898,6.608809471130371]=>[1e-05,0.7677328353405611] (15,-1; 9,-1), time: 15.3982s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_77, [-7.22378396987915,6.1972880363464355]=>[1e-05,0.7381668734086811] (15,-1; 9,-1), time: 15.5077s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_12, [-7.013189315795898,8.080974578857422]=>[-0.8930177797810775,-1e-05] (9,-1; 15,-1), time: 15.4589s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_10, [-8.014030456542969,8.037313461303711]=>[1e-05,8.037313461303711] (15,-1; -1,-1), time: 0.3464s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_50, [-8.402708053588867,5.74871301651001]=>[-8.402708053588867,-1e-05] (-1,-1; 15,-1), time: 0.3690s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_46, [-9.253299713134766,5.934043884277344]=>[-9.253299713134766,-1e-05] (-1,-1; 15,-1), time: 0.3567s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_0, [-6.7713727951049805,7.244617938995361]=>[1e-05,7.244617938995361] (15,-1; -1,-1), time: 0.3643s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_64, [-8.277348518371582,6.17598295211792]=>[-8.277348518371582,-1e-05] (-1,-1; 15,-1), time: 0.6122s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_26, [-7.863430976867676,6.735846519470215]=>[-7.863430976867676,-1e-05] (-1,-1; 15,-1), time: 0.3583s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_59, [-7.45537805557251,7.516714572906494]=>[1e-05,7.516714572906494] (15,-1; -1,-1), time: 0.6603s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_82, [-8.454687118530273,6.949069499969482]=>[-8.454687118530273,-1e-05] (-1,-1; 15,-1), time: 0.3551s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_43, [-7.6966705322265625,6.457159996032715]=>[-7.6966705322265625,-1e-05] (-1,-1; 15,-1), time: 0.3537s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_96, [-8.473357200622559,9.510906219482422]=>[1e-05,9.510906219482422] (15,-1; -1,-1), time: 0.3498s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_86, [-8.751510620117188,6.893726348876953]=>[-8.751510620117188,-1e-05] (-1,-1; 15,-1), time: 0.3610s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_52, [-8.576974868774414,6.472460746765137]=>[-8.576974868774414,-1e-05] (-1,-1; 15,-1), time: 0.3624s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_11, [-10.731499671936035,7.177661895751953]=>[-10.731499671936035,-1e-05] (-1,-1; 15,-1), time: 0.3557s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_30, [-7.123656272888184,6.366010665893555]=>[1e-05,1.414155643500047] (15,-1; 2,-1), time: 8.4919s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_20, [-6.845926761627197,8.396735191345215]=>[1e-05,8.396735191345215] (15,-1; -1,-1), time: 0.3620s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_53, [-7.4583210945129395,7.1144537925720215]=>[1e-05,0.8051540873436568] (15,-1; 2,-1), time: 9.8874s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_5, [-8.388666152954102,10.843329429626465]=>[1e-05,10.843329429626465] (15,-1; -1,-1), time: 0.3517s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_79, [-9.482751846313477,7.450396537780762]=>[-9.482751846313477,-1e-05] (-1,-1; 15,-1), time: 0.3596s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_84, [-7.489599227905273,7.622023582458496]=>[1e-05,7.622023582458496] (15,-1; -1,-1), time: 0.3847s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_44, [-6.76629638671875,7.516800880432129]=>[1e-05,7.516800880432129] (15,-1; -1,-1), time: 0.3786s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_47, [-7.814568042755127,6.664387226104736]=>[-7.814568042755127,-1e-05] (-1,-1; 15,-1), time: 0.3600s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_3, [-7.463779926300049,6.854693412780762]=>[-7.463779926300049,-1e-05] (-1,-1; 15,-1), time: 0.3571s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_31, [-7.313490867614746,7.614393711090088]=>[1e-05,7.614393711090088] (15,-1; -1,-1), time: 0.3792s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_19, [-8.56103801727295,5.299609184265137]=>[-8.56103801727295,-1e-05] (-1,-1; 15,-1), time: 0.3630s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_40, [-6.191115856170654,9.838562965393066]=>[1e-05,9.838562965393066] (15,-1; -1,-1), time: 0.3701s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_99, [-7.454744815826416,7.5927252769470215]=>[-0.5700404187700473,-1e-05] (9,-1; 15,-1), time: 22.0173s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_88, [-7.381882190704346,5.949122428894043]=>[-7.381882190704346,-1e-05] (-1,-1; 15,-1), time: 0.3552s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_51, [-7.907319068908691,6.8755784034729]=>[1e-05,2.7231012484874064] (15,-1; 2,-1), time: 4.7939s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_78, [-7.846029281616211,10.249251365661621]=>[1e-05,10.249251365661621] (15,-1; -1,-1), time: 0.3546s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_27, [-8.560251235961914,6.5684590339660645]=>[-8.560251235961914,-1e-05] (-1,-1; 15,-1), time: 0.3856s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_39, [-8.06218147277832,5.746740818023682]=>[1e-05,0.744422847531099] (15,-1; 9,-1), time: 15.4117s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_38, [-6.55499792098999,7.32419490814209]=>[-1.4561230659496955,-1e-05] (2,-1; 15,-1), time: 9.1601s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_81, [-6.973362445831299,7.73550271987915]=>[-1.398937173933938,-1e-05] (2,-1; 15,-1), time: 7.3456s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_35, [-7.639863014221191,9.580716133117676]=>[1e-05,9.580716133117676] (15,-1; -1,-1), time: 0.3551s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_4, [-7.03983211517334,7.623098373413086]=>[1e-05,7.623098373413086] (15,-1; -1,-1), time: 0.3670s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_94, [-8.139161109924316,6.583878517150879]=>[-0.1481461915907855,0.0578535323151865] (9,-1; 9,-1), time: 30.0160s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_92, [-8.030658721923828,4.782299995422363]=>[-0.03868440037670679,0.31270650173621684] (9,-1; 9,-1), time: 30.0624s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_6, [-7.720156192779541,7.659633159637451]=>[-0.2835796891143733,0.02884572154989154] (9,-1; 9,-1), time: 30.1177s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_71, [-8.741071701049805,6.741537094116211]=>[-8.741071701049805,-1e-05] (-1,-1; 15,-1), time: 0.3403s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_54, [-8.56932258605957,7.340817928314209]=>[1e-05,0.32058231421230005] (15,-1; 9,-1), time: 22.0246s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_85, [-7.714715957641602,5.672307014465332]=>[-0.10093328757058938,0.22017881438887527] (9,-1; 9,-1), time: 30.0111s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_58, [-7.264580726623535,7.108493328094482]=>[-0.18529786974098697,0.07064484525450376] (9,-1; 9,-1), time: 30.0075s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_1, [-7.751689910888672,6.029361724853516]=>[-7.751689910888672,-1e-05] (-1,-1; 15,-1), time: 0.3560s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_73, [-7.560120105743408,6.219060897827148]=>[-7.560120105743408,-1e-05] (-1,-1; 15,-1), time: 0.3367s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_97, [-5.986669540405273,8.44871711730957]=>[1e-05,8.44871711730957] (15,-1; -1,-1), time: 0.3715s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_22, [-9.061347961425781,7.542407989501953]=>[-9.061347961425781,-1e-05] (-1,-1; 15,-1), time: 0.3246s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_41, [-6.333635330200195,9.956795692443848]=>[1e-05,9.956795692443848] (15,-1; -1,-1), time: 0.3464s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_91, [-8.505377769470215,8.410877227783203]=>[-8.505377769470215,-1e-05] (-1,-1; 15,-1), time: 0.3517s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_67, [-6.212413787841797,9.786124229431152]=>[1e-05,9.786124229431152] (15,-1; -1,-1), time: 0.3634s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_72, [-6.803163528442383,8.61269760131836]=>[-0.21563370430366993,0.1070774566423332] (9,-1; 9,-1), time: 30.0991s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_87, [-7.788174152374268,7.697094917297363]=>[1e-05,0.32655088377811387] (15,-1; 9,-1), time: 15.3757s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_95, [-7.621352195739746,7.464608669281006]=>[1e-05,0.6102671866425824] (15,-1; 2,-1), time: 9.1104s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_18, [-6.524580478668213,6.036594867706299]=>[1e-05,0.8284061157462445] (15,-1; 9,-1), time: 15.3075s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_14, [-6.903790473937988,7.567096710205078]=>[-0.732810208287288,-1e-05] (9,-1; 15,-1), time: 15.3248s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_68, [-7.011617660522461,7.279917240142822]=>[-0.9032100025277189,-1e-05] (9,-1; 15,-1), time: 15.3141s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_75, [-7.767137050628662,5.924803733825684]=>[-0.4226158562294438,0.01096207242237904] (9,-1; 9,-1), time: 30.1682s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_65, [-9.00615406036377,9.479253768920898]=>[-1.8370585221768263,-1e-05] (9,-1; 15,-1), time: 15.3057s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_25, [-8.042169570922852,4.875158786773682]=>[-0.13074553156901014,0.04852468927648196] (9,-1; 9,-1), time: 30.0071s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_36, [-7.888652324676514,7.178664684295654]=>[-0.07708819800503486,0.27378479759247404] (9,-1; 9,-1), time: 30.0143s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_57, [-8.944629669189453,5.258086204528809]=>[-0.2864188555335232,0.016053084151549636] (9,-1; 9,-1), time: 30.0298s, #vars: 1759, #constrs: 1111, improved: True
Solving MIP for lay14_89, [-7.187248706817627,7.97438907623291]=>[-0.15836617766252337,0.35851562267624254] (9,-1; 9,-1), time: 30.0063s, #vars: 1759, #constrs: 1111, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -23.675504684448242 with beta sum per layer: []
optimal alpha/beta time: 13.79090929031372
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.4917,  2.7466,  3.5351,  1.8015,  2.9194, -2.1381,  4.3298,  2.3143,
          5.6752]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 425.5681457519531, ub improved 486.75384521484375, time 56.2204
maximum relu layer improved by MIP so far 6
MIP finished with 245.26302027702332s
Run final alpha-CROWN after MIP solving on layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -24.005802154541016 with beta sum per layer: []
optimal alpha/beta time: 9.543437242507935
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.5269,  2.7792,  3.5804,  1.8099,  2.9479, -2.1248,  4.3783,  2.3891,
          5.7191]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[ 2.5269,  2.7792,  0.0000,  3.5804,  1.8099,  2.9479, -2.1248,  4.3783,
          2.3891,  5.7191]], device='cuda:0') min: tensor(-2.1248, device='cuda:0')
time threshold left for bab: 33.67538285255432
##### [0:47] Tested against 0 ######
init opt crown verified for label 0 with bound 2.5268714427948
Image 47 pidx 0 verify end, Time cost: 0.00020623207092285156
47 2.5268714427948
[[47, 0, 0, 11.44690227508545, 0, -1], [47, 0, 0, 254.87771701812744, 0, -2], [47, 2.5268714427948, 0, 0.00020623207092285156, 0, 0]]
##### [0:47] Tested against 1 ######
init opt crown verified for label 1 with bound 2.7791950702667236
Image 47 pidx 1 verify end, Time cost: 0.00029468536376953125
47 2.7791950702667236
[[47, 0, 0, 11.44690227508545, 0, -1], [47, 0, 0, 254.87771701812744, 0, -2], [47, 2.5268714427948, 0, 0.00020623207092285156, 0, 0], [47, 2.7791950702667236, 0, 0.00029468536376953125, 0, 1]]
##### [0:47] Tested against 2 ######
correct label, skip!
##### [0:47] Tested against 3 ######
init opt crown verified for label 3 with bound 3.580378293991089
Image 47 pidx 3 verify end, Time cost: 0.00027680397033691406
47 3.580378293991089
[[47, 0, 0, 11.44690227508545, 0, -1], [47, 0, 0, 254.87771701812744, 0, -2], [47, 2.5268714427948, 0, 0.00020623207092285156, 0, 0], [47, 2.7791950702667236, 0, 0.00029468536376953125, 0, 1], [47, 0, 0, 0, 0, 2], [47, 3.580378293991089, 0, 0.00027680397033691406, 0, 3]]
##### [0:47] Tested against 4 ######
init opt crown verified for label 4 with bound 1.8099262714385986
Image 47 pidx 4 verify end, Time cost: 0.0002894401550292969
47 1.8099262714385986
[[47, 0, 0, 11.44690227508545, 0, -1], [47, 0, 0, 254.87771701812744, 0, -2], [47, 2.5268714427948, 0, 0.00020623207092285156, 0, 0], [47, 2.7791950702667236, 0, 0.00029468536376953125, 0, 1], [47, 0, 0, 0, 0, 2], [47, 3.580378293991089, 0, 0.00027680397033691406, 0, 3], [47, 1.8099262714385986, 0, 0.0002894401550292969, 0, 4]]
##### [0:47] Tested against 5 ######
init opt crown verified for label 5 with bound 2.9478673934936523
Image 47 pidx 5 verify end, Time cost: 0.00028228759765625
47 2.9478673934936523
[[47, 0, 0, 11.44690227508545, 0, -1], [47, 0, 0, 254.87771701812744, 0, -2], [47, 2.5268714427948, 0, 0.00020623207092285156, 0, 0], [47, 2.7791950702667236, 0, 0.00029468536376953125, 0, 1], [47, 0, 0, 0, 0, 2], [47, 3.580378293991089, 0, 0.00027680397033691406, 0, 3], [47, 1.8099262714385986, 0, 0.0002894401550292969, 0, 4], [47, 2.9478673934936523, 0, 0.00028228759765625, 0, 5]]
##### [0:47] Tested against 6 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 2.1248435974121094 with beta sum per layer: []
optimal alpha/beta time: 1.491520643234253
alpha-CROWN with fixed intermediate bounds: tensor([[-2.1248]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-2.1248435974121094
layer 0 size torch.Size([100]) unstable 48
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 15
layer 3 size torch.Size([100]) unstable 16
layer 4 size torch.Size([100]) unstable 14
layer 5 size torch.Size([100]) unstable 16
layer 6 size torch.Size([100]) unstable 11
layer 7 size torch.Size([100]) unstable 15
# of unstable neurons: 163
splitting decisions: [[1, 0]]
single_node_split: True
best_l after optimization: 3.0749826431274414 with beta sum per layer: [0.0, 1.1515122652053833, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 1.0156140327453613
This batch time : update_bounds func: 1.0190	 prepare: 0.0018	 bound: 1.0159	 transfer: 0.0009	 finalize: 0.0004
Accumulated time: update_bounds func: 1.0190	 prepare: 0.0018	 bound: 1.0159	 transfer: 0.0009	 finalize: 0.0004
batch bounding time:  1.0190789699554443
Current worst domains: [-2.1248435974121094, -0.9450424909591675]
length of domains: 2
Total time: 1.0457	 pickout: 0.0011	 decision: 0.0253	 get_bound: 1.0191	 add_domain: 0.0003
Current lb:-2.1248435974121094
2 neurons visited

splitting decisions: [[0, 13], [0, 98]]
single_node_split: True
best_l after optimization: 5.488863945007324 with beta sum per layer: [0.24988393485546112, 2.641472816467285, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.9434633255004883
This batch time : update_bounds func: 0.9481	 prepare: 0.0020	 bound: 0.9438	 transfer: 0.0014	 finalize: 0.0009
Accumulated time: update_bounds func: 1.9671	 prepare: 0.0038	 bound: 1.9597	 transfer: 0.0014	 finalize: 0.0013
batch bounding time:  0.9481728076934814
Current worst domains: [-2.046708345413208, -1.9845770597457886, -0.7468310594558716, -0.710747480392456]
length of domains: 4
Total time: 0.9758	 pickout: 0.0013	 decision: 0.0258	 get_bound: 0.9482	 add_domain: 0.0005
Current lb:-2.046708345413208
6 neurons visited

splitting decisions: [[0, 58], [0, 58], [0, 56], [0, 56]]
single_node_split: True
best_l after optimization: 9.347055435180664 with beta sum per layer: [2.709965944290161, 5.521622657775879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 1.0012235641479492
This batch time : update_bounds func: 1.0082	 prepare: 0.0037	 bound: 1.0016	 transfer: 0.0013	 finalize: 0.0015
Accumulated time: update_bounds func: 2.9753	 prepare: 0.0075	 bound: 2.9613	 transfer: 0.0013	 finalize: 0.0028
batch bounding time:  1.0083184242248535
Current worst domains: [-1.9648945331573486, -1.9380887746810913, -1.9017037153244019, -1.880588412284851, -0.6727468967437744, -0.6386919021606445, -0.19392156600952148, -0.15642023086547852]
length of domains: 8
Total time: 1.0431	 pickout: 0.0025	 decision: 0.0317	 get_bound: 1.0084	 add_domain: 0.0005
Current lb:-1.9648945331573486
14 neurons visited

splitting decisions: [[7, 49], [7, 49], [7, 49], [7, 49], [0, 85], [0, 85], [0, 85], [0, 21]]
single_node_split: True
best_l after optimization: 15.36169147491455 with beta sum per layer: [6.983038425445557, 11.71573257446289, 0.0, 0.0, 0.0, 0.0, 0.0, 6.252101898193359]
optimal alpha/beta time: 0.9853603839874268
This batch time : update_bounds func: 0.9954	 prepare: 0.0053	 bound: 0.9857	 transfer: 0.0013	 finalize: 0.0031
Accumulated time: update_bounds func: 3.9707	 prepare: 0.0128	 bound: 3.9471	 transfer: 0.0013	 finalize: 0.0059
batch bounding time:  0.9954941272735596
Current worst domains: [-1.9532709121704102, -1.9239321947097778, -1.8861184120178223, -1.8628838062286377, -1.5065722465515137, -1.4880262613296509, -1.462775468826294, -1.4445233345031738, -0.5932979583740234, -0.554256796836853]
length of domains: 14
Total time: 1.0309	 pickout: 0.0034	 decision: 0.0313	 get_bound: 0.9955	 add_domain: 0.0007
Current lb:-1.9532709121704102
30 neurons visited

splitting decisions: [[0, 94], [0, 94], [0, 94], [0, 94], [1, 45], [1, 45], [1, 45], [1, 45], [0, 21], [0, 21]]
single_node_split: True
best_l after optimization: 23.686595916748047 with beta sum per layer: [9.929691314697266, 21.64993667602539, 0.0, 0.0, 0.0, 0.0, 0.0, 19.846269607543945]
optimal alpha/beta time: 0.9547901153564453
This batch time : update_bounds func: 0.9691	 prepare: 0.0076	 bound: 0.9552	 transfer: 0.0012	 finalize: 0.0051
Accumulated time: update_bounds func: 4.9398	 prepare: 0.0203	 bound: 4.9022	 transfer: 0.0012	 finalize: 0.0109
batch bounding time:  0.9691236019134521
Current worst domains: [-1.8752697706222534, -1.8601950407028198, -1.8487873077392578, -1.8330234289169312, -1.8083394765853882, -1.7928698062896729, -1.7863909006118774, -1.771363615989685, -1.1974992752075195, -1.1834843158721924]
length of domains: 24
Total time: 1.0061	 pickout: 0.0047	 decision: 0.0310	 get_bound: 0.9692	 add_domain: 0.0012
Current lb:-1.8752697706222534
58 neurons visited

splitting decisions: [[1, 45], [1, 45], [1, 45], [1, 45], [1, 45], [1, 45], [1, 45], [1, 45], [5, 48], [5, 48]]
single_node_split: True
best_l after optimization: 28.327808380126953 with beta sum per layer: [11.16286849975586, 45.123390197753906, 1.5105340480804443, 0.0, 0.0, 5.629701614379883, 0.0, 35.07801055908203]
optimal alpha/beta time: 0.9757111072540283
This batch time : update_bounds func: 0.9974	 prepare: 0.0112	 bound: 0.9761	 transfer: 0.0015	 finalize: 0.0085
Accumulated time: update_bounds func: 5.9372	 prepare: 0.0316	 bound: 5.8784	 transfer: 0.0015	 finalize: 0.0194
batch bounding time:  0.9975442886352539
Current worst domains: [-1.8752697706222534, -1.8601950407028198, -1.8486100435256958, -1.829434871673584, -1.8083394765853882, -1.792494297027588, -1.7816075086593628, -1.7610708475112915, -1.0144333839416504, -1.0106757879257202]
length of domains: 42
Total time: 1.0434	 pickout: 0.0071	 decision: 0.0365	 get_bound: 0.9976	 add_domain: 0.0021
Current lb:-1.8752697706222534
106 neurons visited

splitting decisions: [[0, 95], [0, 95], [0, 95], [0, 95], [0, 95], [0, 95], [0, 95], [0, 95], [5, 92], [5, 92]]
single_node_split: True
best_l after optimization: 42.65349578857422 with beta sum per layer: [29.817487716674805, 85.53837585449219, 1.5291002988815308, 0.0, 0.0, 22.396621704101562, 0.0, 74.12000274658203]
optimal alpha/beta time: 0.9629437923431396
This batch time : update_bounds func: 0.9963	 prepare: 0.0179	 bound: 0.9633	 transfer: 0.0016	 finalize: 0.0134
Accumulated time: update_bounds func: 6.9336	 prepare: 0.0495	 bound: 6.8417	 transfer: 0.0016	 finalize: 0.0328
batch bounding time:  0.9964215755462646
Current worst domains: [-1.8243591785430908, -1.8078516721725464, -1.7898733615875244, -1.7719796895980835, -1.7544455528259277, -1.7339990139007568, -1.7254937887191772, -1.7035701274871826, -1.580766201019287, -1.5702335834503174]
length of domains: 68
Total time: 1.0460	 pickout: 0.0125	 decision: 0.0337	 get_bound: 0.9965	 add_domain: 0.0033
Current lb:-1.8243591785430908
190 neurons visited

splitting decisions: [[0, 56], [0, 56], [0, 56], [0, 56], [0, 56], [0, 56], [0, 56], [0, 56], [0, 56], [0, 56]]
single_node_split: True
best_l after optimization: 60.42812728881836 with beta sum per layer: [76.20967864990234, 172.85899353027344, 0.0, 0.0, 0.0, 11.440805435180664, 3.0517356395721436, 158.81968688964844]
optimal alpha/beta time: 0.9761133193969727
This batch time : update_bounds func: 1.0278	 prepare: 0.0272	 bound: 0.9765	 transfer: 0.0021	 finalize: 0.0219
Accumulated time: update_bounds func: 7.9614	 prepare: 0.0767	 bound: 7.8182	 transfer: 0.0021	 finalize: 0.0547
batch bounding time:  1.027970790863037
Current worst domains: [-1.7819007635116577, -1.7656728029251099, -1.7482496500015259, -1.730197548866272, -1.7089663743972778, -1.6895147562026978, -1.6793447732925415, -1.6595427989959717, -1.5388131141662598, -1.527745008468628]
length of domains: 114
Total time: 1.0918	 pickout: 0.0180	 decision: 0.0401	 get_bound: 1.0281	 add_domain: 0.0056
Current lb:-1.7819007635116577
326 neurons visited

splitting decisions: [[0, 25], [0, 25], [0, 25], [0, 25], [0, 25], [0, 25], [0, 25], [0, 25], [0, 25], [0, 25]]
single_node_split: True
best_l after optimization: 79.21449279785156 with beta sum per layer: [215.8948974609375, 280.24444580078125, 0.2584855258464813, 0.0, 0.0, 24.111804962158203, 33.0908317565918, 351.1145935058594]
optimal alpha/beta time: 0.9702954292297363
This batch time : update_bounds func: 1.0535	 prepare: 0.0447	 bound: 0.9707	 transfer: 0.0027	 finalize: 0.0351
Accumulated time: update_bounds func: 9.0150	 prepare: 0.1214	 bound: 8.7889	 transfer: 0.0027	 finalize: 0.0898
batch bounding time:  1.0537264347076416
Current worst domains: [-1.735973596572876, -1.7205909490585327, -1.7012581825256348, -1.6835498809814453, -1.6630936861038208, -1.6424833536148071, -1.632136583328247, -1.6131891012191772, -1.4904005527496338, -1.478806495666504]
length of domains: 110
Total time: 1.1284	 pickout: 0.0295	 decision: 0.0393	 get_bound: 1.0540	 add_domain: 0.0057
Current lb:-1.735973596572876
554 neurons visited

splitting decisions: [[1, 23], [1, 23], [1, 23], [1, 23], [1, 23], [1, 23], [1, 23], [1, 23], [1, 23], [1, 23]]
single_node_split: True
best_l after optimization: 131.13267517089844 with beta sum per layer: [377.6544189453125, 120.36901092529297, 0.0, 0.0, 0.0, 51.997962951660156, 127.80186462402344, 368.05169677734375]
optimal alpha/beta time: 0.9731636047363281
This batch time : update_bounds func: 1.0570	 prepare: 0.0440	 bound: 0.9736	 transfer: 0.0029	 finalize: 0.0363
Accumulated time: update_bounds func: 10.0719	 prepare: 0.1653	 bound: 9.7625	 transfer: 0.0029	 finalize: 0.1261
batch bounding time:  1.0571873188018799
Current worst domains: [-1.7243977785110474, -1.7091091871261597, -1.6928514242172241, -1.6755573749542236, -1.6489131450653076, -1.63005793094635, -1.6196556091308594, -1.6023310422897339, -1.4752110242843628, -1.4654905796051025]
length of domains: 185
Total time: 1.1338	 pickout: 0.0285	 decision: 0.0379	 get_bound: 1.0574	 add_domain: 0.0100
Current lb:-1.7243977785110474
774 neurons visited

splitting decisions: [[0, 85], [0, 85], [0, 85], [0, 85], [0, 85], [0, 85], [0, 85], [0, 85], [0, 85], [0, 85]]
single_node_split: True
best_l after optimization: 175.30162048339844 with beta sum per layer: [778.298828125, 163.72103881835938, 9.36704158782959, 0.7742643356323242, 4.127073287963867, 132.28289794921875, 304.6015625, 758.152587890625]
optimal alpha/beta time: 0.9828503131866455
This batch time : update_bounds func: 1.1231	 prepare: 0.0737	 bound: 0.9833	 transfer: 0.0044	 finalize: 0.0613
Accumulated time: update_bounds func: 11.1951	 prepare: 0.2390	 bound: 10.7457	 transfer: 0.0044	 finalize: 0.1874
batch bounding time:  1.1234495639801025
Current worst domains: [-1.6694464683532715, -1.6538186073303223, -1.6374163627624512, -1.6203794479370117, -1.5939035415649414, -1.5742841958999634, -1.5638903379440308, -1.5455286502838135, -1.432523488998413, -1.4219319820404053]
length of domains: 271
Total time: 1.2794	 pickout: 0.0473	 decision: 0.0930	 get_bound: 1.1239	 add_domain: 0.0153
Current lb:-1.6694464683532715
1144 neurons visited

splitting decisions: [[2, 60], [2, 60], [2, 60], [2, 60], [2, 60], [2, 60], [2, 60], [5, 48], [0, 85], [2, 60]]
single_node_split: True
best_l after optimization: 216.6796875 with beta sum per layer: [1576.2738037109375, 248.6834259033203, 34.11876678466797, 3.577963352203369, 26.44231414794922, 274.3235168457031, 370.66851806640625, 966.3049926757812]
optimal alpha/beta time: 0.9845070838928223
This batch time : update_bounds func: 1.2372	 prepare: 0.1090	 bound: 0.9849	 transfer: 0.0061	 finalize: 0.1364
Accumulated time: update_bounds func: 12.4323	 prepare: 0.3480	 bound: 11.7307	 transfer: 0.0061	 finalize: 0.3238
batch bounding time:  1.237657070159912
Current worst domains: [-1.6694464683532715, -1.6538186073303223, -1.6374163627624512, -1.6203794479370117, -1.5939035415649414, -1.5742841958999634, -1.5638903379440308, -1.5455286502838135, -1.4219319820404053, -1.411027193069458]
length of domains: 387
Total time: 1.3879	 pickout: 0.0667	 decision: 0.0596	 get_bound: 1.2383	 add_domain: 0.0233
Current lb:-1.6694464683532715
1686 neurons visited

splitting decisions: [[0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84], [0, 84]]
single_node_split: True
best_l after optimization: 267.77191162109375 with beta sum per layer: [2658.692138671875, 426.38311767578125, 24.74301528930664, 6.208067893981934, 80.99050903320312, 391.5098876953125, 500.6150817871094, 1166.58251953125]
optimal alpha/beta time: 0.9905056953430176
This batch time : update_bounds func: 1.2813	 prepare: 0.1531	 bound: 0.9909	 transfer: 0.0076	 finalize: 0.1287
Accumulated time: update_bounds func: 13.7136	 prepare: 0.5011	 bound: 12.7216	 transfer: 0.0076	 finalize: 0.4525
batch bounding time:  1.281898021697998
Current worst domains: [-1.6040832996368408, -1.5960631370544434, -1.5871163606643677, -1.586958885192871, -1.5720922946929932, -1.5638461112976074, -1.5540481805801392, -1.5523569583892822, -1.52649986743927, -1.520532488822937]
length of domains: 510
Total time: 1.5293	 pickout: 0.0985	 decision: 0.0637	 get_bound: 1.2829	 add_domain: 0.0842
Current lb:-1.6040832996368408
2460 neurons visited

splitting decisions: [[1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39], [1, 39]]
single_node_split: True
best_l after optimization: 364.84649658203125 with beta sum per layer: [3096.542724609375, 568.3248291015625, 42.259735107421875, 10.888051986694336, 363.6556396484375, 626.5794677734375, 823.641357421875, 1809.9815673828125]
optimal alpha/beta time: 0.9909660816192627
This batch time : update_bounds func: 1.4199	 prepare: 0.1974	 bound: 0.9914	 transfer: 0.0111	 finalize: 0.2187
Accumulated time: update_bounds func: 15.1335	 prepare: 0.6986	 bound: 13.7130	 transfer: 0.0111	 finalize: 0.6712
batch bounding time:  1.4207251071929932
Current worst domains: [-1.5995216369628906, -1.5922529697418213, -1.5833046436309814, -1.5831818580627441, -1.5667433738708496, -1.5594013929367065, -1.5481657981872559, -1.5475550889968872, -1.5217325687408447, -1.5158523321151733]
length of domains: 773
Total time: 1.6766	 pickout: 0.1319	 decision: 0.0726	 get_bound: 1.4223	 add_domain: 0.0498
Current lb:-1.5995216369628906
3460 neurons visited

splitting decisions: [[2, 47], [2, 47], [2, 47], [2, 47], [2, 47], [2, 47], [2, 47], [2, 47], [2, 47], [2, 47]]
single_node_split: True
best_l after optimization: 424.0000305175781 with beta sum per layer: [2127.6787109375, 557.8194580078125, 122.71749877929688, 23.793453216552734, 601.4442138671875, 527.6486206054688, 620.4797973632812, 1550.465087890625]
optimal alpha/beta time: 0.9882287979125977
This batch time : update_bounds func: 1.4245	 prepare: 0.2030	 bound: 0.9886	 transfer: 0.0120	 finalize: 0.2196
Accumulated time: update_bounds func: 16.5580	 prepare: 0.9015	 bound: 14.7016	 transfer: 0.0120	 finalize: 0.8908
batch bounding time:  1.425508737564087
Current worst domains: [-1.5995216369628906, -1.5922529697418213, -1.5831818580627441, -1.5807991027832031, -1.5667433738708496, -1.5594013929367065, -1.5481657981872559, -1.5475550889968872, -1.5173945426940918, -1.5112215280532837]
length of domains: 1050
Total time: 1.6823	 pickout: 0.1330	 decision: 0.0667	 get_bound: 1.4275	 add_domain: 0.0551
Current lb:-1.5995216369628906
4460 neurons visited

splitting decisions: [[0, 21], [0, 21], [0, 21], [0, 21], [0, 21], [0, 21], [0, 21], [0, 21], [0, 21], [0, 21]]
single_node_split: True
best_l after optimization: 520.4859008789062 with beta sum per layer: [2021.6849365234375, 420.78924560546875, 234.67713928222656, 25.33987808227539, 730.5660400390625, 369.1741027832031, 251.1339874267578, 1061.4676513671875]
optimal alpha/beta time: 0.9986352920532227
This batch time : update_bounds func: 1.3933	 prepare: 0.2057	 bound: 0.9991	 transfer: 0.0122	 finalize: 0.1749
Accumulated time: update_bounds func: 17.9513	 prepare: 1.1072	 bound: 15.7007	 transfer: 0.0122	 finalize: 1.0657
batch bounding time:  1.3941383361816406
Current worst domains: [-1.5254883766174316, -1.517162561416626, -1.5096148252487183, -1.5071403980255127, -1.5029573440551758, -1.501357078552246, -1.4932714700698853, -1.4925451278686523, -1.4875777959823608, -1.4845458269119263]
length of domains: 1391
Total time: 1.7248	 pickout: 0.1378	 decision: 0.1308	 get_bound: 1.3958	 add_domain: 0.0604
Current lb:-1.5254883766174316
5460 neurons visited

splitting decisions: [[0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98], [0, 98]]
single_node_split: True
best_l after optimization: 681.373779296875 with beta sum per layer: [1825.4014892578125, 395.920654296875, 245.00027465820312, 21.189464569091797, 395.9508972167969, 254.16015625, 118.18914031982422, 875.104736328125]
optimal alpha/beta time: 0.9897599220275879
This batch time : update_bounds func: 1.4657	 prepare: 0.2065	 bound: 0.9902	 transfer: 0.0113	 finalize: 0.2562
Accumulated time: update_bounds func: 19.4170	 prepare: 1.3137	 bound: 16.6909	 transfer: 0.0113	 finalize: 1.3220
batch bounding time:  1.466637372970581
Current worst domains: [-1.4617327451705933, -1.4522241353988647, -1.443995714187622, -1.4420268535614014, -1.4371466636657715, -1.4364662170410156, -1.4281337261199951, -1.4262115955352783, -1.421898603439331, -1.4195544719696045]
length of domains: 1799
Total time: 1.8347	 pickout: 0.1427	 decision: 0.1574	 get_bound: 1.4682	 add_domain: 0.0664
Current lb:-1.4617327451705933
6460 neurons visited

splitting decisions: [[0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 88], [0, 88]]
single_node_split: True
best_l after optimization: 793.6907958984375 with beta sum per layer: [1737.16162109375, 230.259521484375, 299.59063720703125, 18.648052215576172, 187.91802978515625, 220.8851318359375, 66.69645690917969, 766.4114379882812]
optimal alpha/beta time: 0.9878201484680176
This batch time : update_bounds func: 1.4797	 prepare: 0.2124	 bound: 0.9883	 transfer: 0.0119	 finalize: 0.2658
Accumulated time: update_bounds func: 20.8967	 prepare: 1.5261	 bound: 17.6792	 transfer: 0.0119	 finalize: 1.5877
batch bounding time: bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,
 1.480743169784546
Current worst domains: [-1.4025871753692627, -1.390840768814087, -1.3868889808654785, -1.3838706016540527, -1.3823301792144775, -1.3817834854125977, -1.376997470855713, -1.376886248588562, -1.3756171464920044, -1.3753219842910767]
length of domains: 2267
Total time: 1.7659	 pickout: 0.1398	 decision: 0.0688	 get_bound: 1.4826	 add_domain: 0.0747
Current lb:-1.4025871753692627
7460 neurons visited

splitting decisions: [[0, 80], [0, 80], [0, 80], [0, 88], [0, 80], [0, 88], [0, 80], [0, 80], [0, 88], [0, 88]]
single_node_split: True
best_l after optimization: 710.3751831054688 with beta sum per layer: [1963.5235595703125, 191.95065307617188, 360.7308349609375, 81.73104858398438, 358.832275390625, 43.38202667236328, 0.0, 77.113037109375]
optimal alpha/beta time: 0.9929718971252441
This batch time : update_bounds func: 1.3835	 prepare: 0.2078	 bound: 0.9934	 transfer: 0.0120	 finalize: 0.1687
Accumulated time: update_bounds func: 22.2802	 prepare: 1.7339	 bound: 18.6726	 transfer: 0.0120	 finalize: 1.7564
batch bounding time:  1.3842651844024658
Current worst domains: [-1.3692224025726318, -1.3679803609848022, -1.3590350151062012, -1.3513892889022827, -1.3403984308242798, -1.340369701385498, -1.336538314819336, -1.335392713546753, -1.3350462913513184, -1.3334128856658936]
length of domains: 2692
Total time: 1.7748	 pickout: 0.1396	 decision: 0.1764	 get_bound: 1.3858	 add_domain: 0.0731
Current lb:-1.3692224025726318
8460 neurons visited

splitting decisions: [[1, 4], [1, 4], [1, 4], [1, 96], [0, 88], [1, 96], [0, 88], [0, 80], [1, 96], [0, 80]]
single_node_split: True
best_l after optimization: 833.7959594726562 with beta sum per layer: [1610.2601318359375, 209.4171600341797, 255.5472412109375, 2.1883201599121094, 300.9759521484375, 4.592479705810547, 0.0, 47.585670471191406]
optimal alpha/beta time: 0.9999239444732666
This batch time : update_bounds func: 1.3916	 prepare: 0.2057	 bound: 1.0004	 transfer: 0.0113	 finalize: 0.1726
Accumulated time: update_bounds func: 23.6718	 prepare: 1.9396	 bound: 19.6730	 transfer: 0.0113	 finalize: 1.9291
batch bounding time:  1.3924365043640137
Current worst domains: [-1.363317847251892, -1.3621277809143066, -1.3523123264312744, -1.316509485244751, -1.313049554824829, -1.3113646507263184, -1.302396297454834, -1.3008153438568115, -1.2998085021972656, -1.2964849472045898]
length of domains: 3176
Total time: 1.9553	 pickout: 0.1368	 decision: 0.1960	 get_bound: 1.3940	 add_domain: 0.2285
Current lb:-1.363317847251892
9460 neurons visited

splitting decisions: [[0, 88], [0, 80], [0, 88], [0, 80], [4, 77], [1, 4], [4, 77], [1, 4], [0, 21], [0, 21]]
single_node_split: True
best_l after optimization: 771.65576171875 with beta sum per layer: [1210.92919921875, 447.957763671875, 300.4249572753906, 0.0, 134.34231567382812, 1.5647190809249878, 0.0, 0.0]
optimal alpha/beta time: 0.9861435890197754
This batch time : update_bounds func: 1.5238	 prepare: 0.1990	 bound: 0.9866	 transfer: 0.0112	 finalize: 0.3257
Accumulated time: update_bounds func: 25.1956	 prepare: 2.1386	 bound: 20.6595	 transfer: 0.0112	 finalize: 2.2548
batch bounding time:  1.5248901844024658
Current worst domains: [-1.3267651796340942, -1.3227742910385132, -1.3118767738342285, -1.3104162216186523, -1.3013375997543335, -1.294443964958191, -1.2933763265609741, -1.284043788909912, -1.2831099033355713, -1.282812476158142]
length of domains: 3659
Total time: 1.8197	 pickout: 0.1407	 decision: 0.0699	 get_bound: 1.5268	 add_domain: 0.0823
Current lb:-1.3267651796340942
10460 neurons visited

splitting decisions: [[0, 88], [0, 80], [1, 4], [0, 80], [1, 4], [5, 48], [1, 4], [4, 77], [0, 88], [2, 38]]
single_node_split: True
best_l after optimization: 764.9281005859375 with beta sum per layer: [1021.796875, 406.72137451171875, 259.17083740234375, 27.78015899658203, 240.67083740234375, 86.15178680419922, 0.0, 0.0]
optimal alpha/beta time: 0.9918673038482666
This batch time : update_bounds func: 1.5594	 prepare: 0.2027	 bound: 0.9923	 transfer: 0.0114	 finalize: 0.3517
Accumulated time: update_bounds func: 26.7550	 prepare: 2.3412	 bound: 21.6518	 transfer: 0.0114	 finalize: 2.6065
batch bounding time:  1.5604677200317383
Current worst domains: [-1.2936842441558838, -1.286065936088562, -1.2842578887939453, -1.2826776504516602, -1.2824535369873047, -1.2799900770187378, -1.2790005207061768, -1.2755485773086548, -1.275109052658081, -1.2742635011672974]
length of domains: 4148
Total time: 1.8605	 pickout: 0.1428	 decision: 0.0702	 get_bound: 1.5624	 add_domain: 0.0850
Current lb:-1.2936842441558838
11460 neurons visited

splitting decisions: [[1, 13], [1, 13], [4, 51], [1, 13], [4, 51], [4, 51], [4, 51], [4, 51], [1, 13], [1, 13]]
single_node_split: True
best_l after optimization: 822.0794067382812 with beta sum per layer: [1065.444091796875, 252.86900329589844, 293.3908996582031, 39.969879150390625, 123.2621078491211, 138.32359313964844, 0.0, 0.0]
optimal alpha/beta time: 0.9939875602722168
This batch time : update_bounds func: 1.5654	 prepare: 0.2057	 bound: 0.9944	 transfer: 0.0116	 finalize: 0.3523
Accumulated time: update_bounds func: 28.3203	 prepare: 2.5469	 bound: 22.6462	 transfer: 0.0116	 finalize: 2.9589
batch bounding time:  1.5664277076721191
Current worst domains: [-1.2828093767166138, -1.2822734117507935, -1.2788381576538086, -1.2783122062683105, -1.2754247188568115, -1.2695741653442383, -1.2683906555175781, -1.2665610313415527, -1.2628415822982788, -1.2595785856246948]
length of domains: 4628
Total time: 1.8701	 pickout: 0.1443	 decision: 0.0712	 get_bound: 1.5683	 add_domain: 0.0863
Current lb:-1.2828093767166138
12460 neurons visited

time out!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Image 47 pidx 6 verify end, Time cost: 34.84419655799866
47 -1.2828093767166138
[[   47.             0.             0.            11.44690228
      0.            -1.        ]
 [   47.             0.             0.           254.87771702
      0.            -2.        ]
 [   47.             2.52687144     0.             0.00020623
      0.             0.        ]
 [   47.             2.77919507     0.             0.00029469
      0.             1.        ]
 [   47.             0.             0.             0.
      0.             2.        ]
 [   47.             3.58037829     0.             0.0002768
      0.             3.        ]
 [   47.             1.80992627     0.             0.00028944
      0.             4.        ]
 [   47.             2.94786739     0.             0.00028229
      0.             5.        ]
 [   47.            -1.28280938 12460.            34.84419656
      0.             6.        ]]
final verified acc: 0.0%[1]
Total verification count: 1 total verified: 0
mean time [total:1]: 301.17016530036926
mean time [cnt:1]: 301.17016530036926
