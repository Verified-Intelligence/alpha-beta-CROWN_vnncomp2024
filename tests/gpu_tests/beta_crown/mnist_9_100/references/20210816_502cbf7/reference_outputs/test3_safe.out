Experiments at Tue Nov  2 10:48:31 2021 on huan-Super-Server
Namespace(batch_size=500, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', crown=False, data='MNIST_ERAN_UN', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=2, epsilon=0.026, incomplete=True, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='eran_models/mnist_9_100_nat_old.pth', loss_reduction_func='sum', lp_test=None, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=16, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, mode='verified-acc', model='mnist_9_100', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', record_lb=False, refinement_batch_size=-1, seed=100, share_slopes=False, solve_slope=True, start=1, timeout=300.0)
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
complete verification for verified accuracy, set decision_thresh to be 0
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
saving results to Verified_ret_[mnist_9_100]_start=1_end=2_iter=50_b=500_int-beta=False_timeout=300.0_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  2  correct label  2 logits tensor([-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
        -0.6332, -3.9480], grad_fn=<SelectBackward0>)
##### PGD attack: True label: 2, Tested against: all others ######
pgd prediction: tensor([-0.0768,  0.0459,  4.1687, -0.1828,  0.1831, -0.8405,  2.6331, -1.2546,
        -0.1692, -3.3632], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([4.2455, 4.1228,    inf, 4.3515, 3.9856, 5.0092, 1.5356, 5.4233, 4.3378,
        7.5319], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
         -0.6332, -3.9480]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 524.27490234375 with beta sum per layer: []
optimal alpha/beta time: 11.422024726867676
initial alpha-CROWN bounds: tensor([[-40.0926, -48.5785, -59.7757, -57.7134, -62.7879, -49.0081, -64.7206,
         -66.4373, -75.1608]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_98', 'lay4_55', 'lay4_64', 'lay4_91', 'lay4_97', 'lay4_79', 'lay4_42', 'lay4_8', 'lay4_63', 'lay4_26', 'lay4_78', 'lay4_81', 'lay4_18', 'lay4_68', 'lay4_37', 'lay4_57', 'lay4_43', 'lay4_94', 'lay4_71', 'lay4_44', 'lay4_75', 'lay4_2', 'lay4_22', 'lay4_52', 'lay4_49', 'lay4_87', 'lay4_96', 'lay4_20', 'lay4_24', 'lay4_76', 'lay4_36', 'lay4_54', 'lay4_66', 'lay4_85', 'lay4_27'] filter: 1.0
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1288: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  labels = torch.from_numpy(labels.astype(np.int))
/home/shiqi/CROWN-GENERAL-old/examples/vision/plnn/utils.py:1292: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1,-1,1,1)
Solving MIP for lay4_81, [-0.4002447724342346,1.9441018104553223]=>[1e-05,1.9441018104553223] (15,-1; -1,-1), time: 0.5781s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-1.6138410568237305,0.25899219512939453]=>[-1.6138410568237305,-1e-05] (-1,-1; 15,-1), time: 0.6254s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_42, [-1.3508524894714355,0.2864314913749695]=>[-1.3508524894714355,-1e-05] (-1,-1; 15,-1), time: 0.6500s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_78, [-1.4546316862106323,0.19505417346954346]=>[-1.4546316862106323,-1e-05] (-1,-1; 15,-1), time: 0.6503s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_37, [-1.3244314193725586,0.2030373513698578]=>[-1.0125319774967456,0.044407557696997335] (2,-1; 2,-1), time: 1.9237s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-1.0799667835235596,0.8651196360588074]=>[-0.691484517634917,0.6781839710723023] (2,-1; 2,-1), time: 1.9592s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-1.0752681493759155,0.4430959224700928]=>[-0.8108635464901772,0.22923390755265977] (2,-1; 2,-1), time: 2.0201s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_57, [-1.1056232452392578,0.3916364908218384]=>[-0.7762518167202331,0.2373257670272675] (2,-1; 2,-1), time: 2.2518s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-0.38050907850265503,1.0006160736083984]=>[-0.1122748916459605,0.7523860268671207] (2,-1; 2,-1), time: 2.2939s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-0.40843647718429565,1.602212905883789]=>[-0.019602403596860975,1.3621156687813114] (2,-1; 2,-1), time: 2.3037s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-0.728748083114624,0.7339929342269897]=>[-0.44783386535454023,0.5700955685482046] (2,-1; 2,-1), time: 2.3190s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-0.7673658728599548,0.6318085193634033]=>[-0.5156042018028935,0.48033031985797425] (2,-1; 2,-1), time: 2.3937s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-1.5222840309143066,0.424213707447052]=>[-1.0440360793369707,0.2748457670044264] (2,-1; 2,-1), time: 2.4967s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-1.0659337043762207,0.9577915668487549]=>[-0.7579130068073727,0.6944049999101529] (2,-1; 2,-1), time: 2.5761s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_87, [-0.12283369898796082,1.1879515647888184]=>[1e-05,1.1879515647888184] (15,-1; -1,-1), time: 0.3292s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_79, [-0.7898585796356201,1.3054511547088623]=>[-0.37610127064072907,1.1250531809869284] (2,-1; 2,-1), time: 2.6546s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_71, [-0.7097050547599792,1.104875087738037]=>[-0.2941382274487081,1.0102690227361006] (2,-1; 2,-1), time: 2.1333s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_43, [-0.9363817572593689,0.7455302476882935]=>[-0.5941294341500188,0.5903167828983737] (2,-1; 2,-1), time: 2.2582s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-0.6134868860244751,1.051188349723816]=>[-0.303906542086798,0.8374080009828848] (2,-1; 2,-1), time: 2.3037s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-0.13816224038600922,2.492262125015259]=>[-0.041954947240827045,1.9559172659060242] (2,-1; 2,-1), time: 2.4205s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-1.1315276622772217,0.714977502822876]=>[-0.647212303213302,0.5625945123712022] (2,-1; 2,-1), time: 3.4399s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-0.5651940107345581,0.9383771419525146]=>[-0.2659500557559994,0.7669962053852815] (2,-1; 2,-1), time: 1.2372s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-0.43746933341026306,0.9863338470458984]=>[-0.2537051521274153,0.7160820794586839] (2,-1; 2,-1), time: 1.6832s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-1.0238701105117798,0.5621940493583679]=>[-0.8234618028136867,0.3053061787319056] (2,-1; 2,-1), time: 2.1460s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-0.8365472555160522,1.2744438648223877]=>[-0.6079119835608593,0.8811351140037806] (2,-1; 2,-1), time: 2.1978s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_2, [-0.4863232374191284,1.2070696353912354]=>[-0.26944624249017723,0.8131577658162081] (2,-1; 2,-1), time: 2.3083s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_20, [-1.2865536212921143,0.2811812162399292]=>[-1.0118083733076564,0.036477564584498044] (2,-1; 2,-1), time: 2.0816s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_49, [-0.9848619699478149,1.0834708213806152]=>[-0.7946751674733689,0.6732647791394804] (2,-1; 2,-1), time: 2.3852s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-1.2521483898162842,0.9102969169616699]=>[-0.916796760110445,0.6757539349270353] (2,-1; 2,-1), time: 1.9559s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_96, [-1.3896347284317017,0.8164054155349731]=>[-1.1766575026192705,0.3909648777145617] (2,-1; 2,-1), time: 2.4792s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_24, [-0.6442217230796814,1.0003206729888916]=>[-0.3420808580341163,0.7180729606652336] (2,-1; 2,-1), time: 2.3652s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_66, [-0.9388824701309204,0.7437215447425842]=>[-0.7512917047142306,0.30327101512987364] (2,-1; 2,-1), time: 2.7823s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-1.1565089225769043,1.107023000717163]=>[-0.94514343176165,0.4267885086377738] (2,-1; 2,-1), time: 3.0727s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-1.119577407836914,1.0060160160064697]=>[-0.9653330067927496,0.36069557202531644] (2,-1; 2,-1), time: 2.9380s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_76, [-0.19510331749916077,1.250624179840088]=>[-0.01106414850460051,0.8644809864809142] (2,-1; 2,-1), time: 3.3297s, #vars: 1047, #constrs: 293, improved: True
MIP improved 35 nodes out of 35 unstable nodes, lb improved 9.036518096923828, ub improved 9.238458633422852, time 6.3962
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_88', 'lay6_10', 'lay6_70', 'lay6_49', 'lay6_33', 'lay6_93', 'lay6_91', 'lay6_31', 'lay6_63', 'lay6_51', 'lay6_66', 'lay6_75', 'lay6_92', 'lay6_35', 'lay6_65', 'lay6_9', 'lay6_24', 'lay6_3', 'lay6_18', 'lay6_7', 'lay6_60', 'lay6_29', 'lay6_47', 'lay6_97', 'lay6_72', 'lay6_32', 'lay6_98', 'lay6_82', 'lay6_16', 'lay6_6', 'lay6_74', 'lay6_38', 'lay6_22', 'lay6_37', 'lay6_46', 'lay6_85', 'lay6_11', 'lay6_28', 'lay6_5', 'lay6_14', 'lay6_64', 'lay6_57', 'lay6_73', 'lay6_34', 'lay6_87', 'lay6_68', 'lay6_53', 'lay6_8', 'lay6_61', 'lay6_42', 'lay6_99', 'lay6_21'] filter: 1.0
Solving MIP for lay6_88, [-1.8883978128433228,0.014213204383850098]=>[-1.8883978128433228,-1e-05] (-1,-1; 15,-1), time: 0.2029s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_75, [-1.5599491596221924,0.08849918842315674]=>[-1.5599491596221924,-1e-05] (-1,-1; 15,-1), time: 0.2138s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_91, [-1.7887763977050781,0.16062027215957642]=>[-1.7887763977050781,-1e-05] (-1,-1; 15,-1), time: 0.2403s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_63, [-1.502488374710083,0.12519344687461853]=>[-1.502488374710083,-1e-05] (-1,-1; 15,-1), time: 0.2868s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_3, [-0.020310699939727783,1.8842588663101196]=>[1e-05,1.8842588663101196] (15,-1; -1,-1), time: 0.1466s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_9, [-1.5695219039916992,0.20742031931877136]=>[-1.5695219039916992,-1e-05] (-1,-1; 15,-1), time: 0.4096s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_66, [-0.48835834860801697,1.429263949394226]=>[1e-05,1.429263949394226] (15,-1; -1,-1), time: 2.5478s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_24, [-1.6524379253387451,0.4909672141075134]=>[-1.6524379253387451,-1e-05] (-1,-1; 15,-1), time: 2.3605s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_47, [-1.410830020904541,0.12071612477302551]=>[-1.410830020904541,-1e-05] (-1,-1; 15,-1), time: 0.1487s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_97, [-1.6402273178100586,0.03288036584854126]=>[-1.6402273178100586,-1e-05] (-1,-1; 15,-1), time: 0.1497s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_18, [-1.2816174030303955,0.42871174216270447]=>[-1.2816174030303955,-1e-05] (-1,-1; 15,-1), time: 2.9571s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_70, [-1.4043796062469482,0.4944249987602234]=>[-1.4043796062469482,-1e-05] (-1,-1; 15,-1), time: 3.3983s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_72, [-0.8979372978210449,0.25436580181121826]=>[-0.8979372978210449,-1e-05] (-1,-1; 15,-1), time: 0.7621s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_98, [-0.249411940574646,1.0418870449066162]=>[1e-05,1.0418870449066162] (15,-1; -1,-1), time: 1.7177s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_31, [-1.333739995956421,0.5479153394699097]=>[-1.333739995956421,-1e-05] (-1,-1; 15,-1), time: 5.5691s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_82, [-1.387284755706787,0.3038707971572876]=>[-1.387284755706787,-1e-05] (-1,-1; 15,-1), time: 2.6838s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_60, [-0.9605419635772705,1.2095534801483154]=>[-0.5145214255031464,0.4855750090503118] (2,-1; 2,-1), time: 5.7202s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_35, [-0.35187098383903503,0.7652931809425354]=>[-0.08914208007794297,0.37395121114620455] (2,-1; 2,-1), time: 6.4703s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_29, [-0.8601278066635132,0.41314417123794556]=>[-0.8601278066635132,-1e-05] (-1,-1; 15,-1), time: 6.8904s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_38, [-1.6098933219909668,0.1550895869731903]=>[-1.6098933219909668,-0.001223749452114873] (-1,-1; 2,-1), time: 1.2574s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_10, [-1.1001619100570679,0.27912935614585876]=>[-0.6233491778185248,0.02200016481230189] (2,-1; 2,-1), time: 7.5712s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_85, [-1.9918246269226074,0.45469629764556885]=>[-1.9918246269226074,-1e-05] (-1,-1; 15,-1), time: 0.6408s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_16, [-1.3581297397613525,0.5592327117919922]=>[-1.3581297397613525,-1e-05] (-1,-1; 15,-1), time: 4.5374s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_7, [-0.8407351970672607,0.8529015183448792]=>[-0.2583562494484702,0.4509097516046474] (2,-1; 2,-1), time: 8.0554s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_22, [-1.192803144454956,0.29083505272865295]=>[-1.192803144454956,-1e-05] (-1,-1; 15,-1), time: 3.0225s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_93, [-1.5377689599990845,1.0185080766677856]=>[-1.0132322617718081,0.14284889467799078] (2,-1; 2,-1), time: 9.3217s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_6, [-1.122422456741333,0.5118243098258972]=>[-0.7474916745559269,0.11786537934355337] (2,-1; 2,-1), time: 4.6883s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_5, [-1.3250315189361572,0.3091686964035034]=>[-1.3250315189361572,-1e-05] (-1,-1; 15,-1), time: 1.8685s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_28, [-0.32290756702423096,1.8896535634994507]=>[1e-05,1.8896535634994507] (15,-1; -1,-1), time: 2.0980s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_51, [-0.517459511756897,1.1459088325500488]=>[-0.0016853161165012126,0.7619437728424355] (2,-1; 2,-1), time: 11.0799s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_65, [-0.8668595552444458,0.8082686066627502]=>[-0.3164096716587812,0.43841457379846566] (2,-1; 2,-1), time: 11.3123s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_68, [-1.7128098011016846,0.22394800186157227]=>[-1.7128098011016846,-1e-05] (-1,-1; 15,-1), time: 0.3351s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_46, [-0.7802941203117371,0.6478804349899292]=>[-0.30893057506500193,0.3418674154348002] (2,-1; 2,-1), time: 4.9837s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_57, [-1.7562291622161865,0.6320056319236755]=>[-1.7562291622161865,-1e-05] (-1,-1; 15,-1), time: 3.1115s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_34, [-1.8116929531097412,0.4554421901702881]=>[-1.8116929531097412,-1e-05] (-1,-1; 15,-1), time: 2.7256s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_33, [-1.0679384469985962,0.44756773114204407]=>[-0.4561954760287728,0.05356551478945917] (2,-1; 2,-1), time: 13.3910s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_49, [-0.7243953943252563,1.7310388088226318]=>[-0.1938194605687993,0.882656823467323] (2,-1; 2,-1), time: 13.6180s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_32, [-1.1110844612121582,0.7054616212844849]=>[-0.46040785508066673,0.2955429135337204] (2,-1; 2,-1), time: 11.2291s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_42, [-1.2056859731674194,0.3259892463684082]=>[-1.2056859731674194,-1e-05] (-1,-1; 15,-1), time: 1.7580s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_11, [-0.4153088331222534,0.9556373357772827]=>[-0.023709345834999885,0.5621370711847179] (2,-1; 2,-1), time: 6.6316s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_74, [-0.819848895072937,0.8749996423721313]=>[-0.42308331705482455,0.23984204743013535] (2,-1; 2,-1), time: 8.8139s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_14, [-0.8168903589248657,0.7306817770004272]=>[-0.32296264408213543,0.38556652693141996] (2,-1; 2,-1), time: 6.1412s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_99, [-1.2547955513000488,0.4617553651332855]=>[-1.2547955513000488,-1e-05] (-1,-1; 15,-1), time: 2.3920s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_87, [-0.875324010848999,0.4631063938140869]=>[-0.4632279669368024,0.08317156739901115] (2,-1; 2,-1), time: 5.9507s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_64, [-1.2267141342163086,0.5079362392425537]=>[-0.5842389812792437,0.13161778847702674] (2,-1; 2,-1), time: 7.4229s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_8, [-1.267527461051941,0.697667121887207]=>[-0.7881206951434119,0.18800202516674258] (2,-1; 2,-1), time: 5.2366s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_53, [-0.3795665204524994,1.1016587018966675]=>[-0.06232822233220756,0.6326886202957615] (2,-1; 2,-1), time: 5.3731s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_73, [-0.8101294040679932,0.8614823818206787]=>[-0.3739598715990392,0.31721037828266196] (2,-1; 2,-1), time: 8.0620s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_92, [-0.6696658134460449,1.249727487564087]=>[-0.30444821597998073,0.642946472691841] (2,-1; 9,-1), time: 17.7503s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_37, [-1.2077045440673828,1.2495718002319336]=>[-0.5961840355080432,0.41855863195126086] (2,-1; 2,-1), time: 12.9073s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_61, [-0.43480226397514343,1.2366989850997925]=>[-0.058829469502113096,0.5462022741585824] (2,-1; 2,-1), time: 9.4994s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_21, [-0.9975375533103943,1.3784136772155762]=>[-0.5768761273567998,0.5262118070131484] (2,-1; 9,-1), time: 16.7910s, #vars: 1207, #constrs: 483, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 214.29922485351562 with beta sum per layer: []
optimal alpha/beta time: 12.88543963432312
alpha-CROWN with intermediate bounds by MIP: tensor([[-16.5520, -19.2681, -24.4070, -23.0615, -26.1028, -20.7658, -25.6337,
         -27.9472, -30.5611]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 52 nodes out of 52 unstable nodes, lb improved 12.42207145690918, ub improved 19.94217872619629, time 30.6828
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_51', 'lay8_59', 'lay8_63', 'lay8_41', 'lay8_44', 'lay8_53', 'lay8_88', 'lay8_33', 'lay8_62', 'lay8_8', 'lay8_22', 'lay8_4', 'lay8_60', 'lay8_93', 'lay8_26', 'lay8_84', 'lay8_65', 'lay8_0', 'lay8_6', 'lay8_69', 'lay8_40', 'lay8_68', 'lay8_32', 'lay8_36', 'lay8_20', 'lay8_64', 'lay8_75', 'lay8_34', 'lay8_73', 'lay8_61', 'lay8_2', 'lay8_96', 'lay8_90', 'lay8_50', 'lay8_43', 'lay8_99', 'lay8_46', 'lay8_48', 'lay8_57', 'lay8_17', 'lay8_71', 'lay8_72', 'lay8_74', 'lay8_94', 'lay8_77', 'lay8_85', 'lay8_30', 'lay8_16', 'lay8_66', 'lay8_31', 'lay8_70', 'lay8_38', 'lay8_35', 'lay8_28', 'lay8_3', 'lay8_56', 'lay8_27', 'lay8_54', 'lay8_79', 'lay8_25', 'lay8_87', 'lay8_1', 'lay8_89', 'lay8_52', 'lay8_86', 'lay8_13', 'lay8_76', 'lay8_78', 'lay8_47', 'lay8_9', 'lay8_97', 'lay8_12', 'lay8_83', 'lay8_80', 'lay8_42', 'lay8_58', 'lay8_55', 'lay8_82', 'lay8_49', 'lay8_98', 'lay8_39', 'lay8_67', 'lay8_5'] filter: 1.0
Solving MIP for lay8_44, [-0.27542245388031006,1.6835877895355225]=>[1e-05,1.6835877895355225] (15,-1; -1,-1), time: 0.2165s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_8, [-0.5367215275764465,1.3435440063476562]=>[1e-05,1.3435440063476562] (15,-1; -1,-1), time: 0.2162s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_53, [-0.048574090003967285,2.663227081298828]=>[1e-05,2.663227081298828] (15,-1; -1,-1), time: 0.2197s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_26, [-1.7962539196014404,0.024802565574645996]=>[-1.7962539196014404,-1e-05] (-1,-1; 15,-1), time: 0.2194s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_93, [-0.24143469333648682,1.9750127792358398]=>[1e-05,1.9750127792358398] (15,-1; -1,-1), time: 0.2235s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_63, [-0.04829061031341553,2.8054616451263428]=>[1e-05,2.8054616451263428] (15,-1; -1,-1), time: 0.2760s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_60, [-0.08424437046051025,1.9652457237243652]=>[1e-05,1.9652457237243652] (15,-1; -1,-1), time: 0.2745s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_51, [-1.741739273071289,0.016778528690338135]=>[-1.741739273071289,-1e-05] (-1,-1; 15,-1), time: 0.2816s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_41, [-0.42302632331848145,1.7971246242523193]=>[1e-05,1.7971246242523193] (15,-1; -1,-1), time: 0.2838s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_62, [-1.3902634382247925,0.6242458820343018]=>[-1.3902634382247925,-1e-05] (-1,-1; 15,-1), time: 0.4120s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_6, [-0.24293315410614014,2.29134202003479]=>[1e-05,2.29134202003479] (15,-1; -1,-1), time: 0.2207s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_69, [-1.2753316164016724,0.5827288031578064]=>[-1.2753316164016724,-1e-05] (-1,-1; 15,-1), time: 0.2216s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_40, [-0.17811614274978638,2.044567108154297]=>[1e-05,2.044567108154297] (15,-1; -1,-1), time: 0.2184s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_36, [-3.2701735496520996,0.23019981384277344]=>[-3.2701735496520996,-1e-05] (-1,-1; 15,-1), time: 0.2228s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_20, [-0.48282933235168457,1.5304961204528809]=>[1e-05,1.5304961204528809] (15,-1; -1,-1), time: 0.2230s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_73, [-1.7683641910552979,0.11798614263534546]=>[-1.7683641910552979,-1e-05] (-1,-1; 15,-1), time: 0.2204s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_61, [-1.5895228385925293,0.29438167810440063]=>[-1.5895228385925293,-1e-05] (-1,-1; 15,-1), time: 0.2232s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_22, [-0.868902325630188,1.7298613786697388]=>[1e-05,1.7298613786697388] (15,-1; -1,-1), time: 1.7085s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_68, [-1.2855310440063477,0.5576329827308655]=>[-1.2855310440063477,-1e-05] (-1,-1; 15,-1), time: 3.2094s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_50, [-1.207910418510437,0.4065301716327667]=>[-1.207910418510437,-1e-05] (-1,-1; 15,-1), time: 3.6366s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_99, [-1.798614740371704,0.2738221287727356]=>[-1.798614740371704,-1e-05] (-1,-1; 15,-1), time: 0.2250s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_46, [-1.684145212173462,0.3043210208415985]=>[-1.684145212173462,-1e-05] (-1,-1; 15,-1), time: 0.2310s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_48, [-2.022761821746826,0.30322206020355225]=>[-2.022761821746826,-1e-05] (-1,-1; 15,-1), time: 0.2410s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_32, [-1.5835494995117188,1.0312120914459229]=>[-1.5835494995117188,-1e-05] (-1,-1; 15,-1), time: 6.0880s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_17, [-1.9169938564300537,0.10425138473510742]=>[-1.9169938564300537,-1e-05] (-1,-1; 15,-1), time: 0.2273s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_71, [-0.6865561008453369,3.0246405601501465]=>[1e-05,3.0246405601501465] (15,-1; -1,-1), time: 0.2229s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_72, [-1.539474368095398,0.29982608556747437]=>[-1.539474368095398,-1e-05] (-1,-1; 15,-1), time: 0.2399s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_74, [-2.151362657546997,0.15447735786437988]=>[-2.151362657546997,-1e-05] (-1,-1; 15,-1), time: 0.2385s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_94, [-2.1619069576263428,0.1592705249786377]=>[-2.1619069576263428,-1e-05] (-1,-1; 15,-1), time: 0.2263s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_77, [-1.794631838798523,0.21656477451324463]=>[-1.794631838798523,-1e-05] (-1,-1; 15,-1), time: 0.2346s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_85, [-1.8447222709655762,0.2517785429954529]=>[-1.8447222709655762,-1e-05] (-1,-1; 15,-1), time: 0.2258s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_75, [-0.7631424069404602,1.358098030090332]=>[1e-05,1.358098030090332] (15,-1; -1,-1), time: 9.8749s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_16, [-2.3818392753601074,0.20849108695983887]=>[-2.3818392753601074,-1e-05] (-1,-1; 15,-1), time: 0.2287s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_57, [-1.3503425121307373,0.599090576171875]=>[-1.3503425121307373,-1e-05] (-1,-1; 15,-1), time: 4.8406s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_31, [-1.6128270626068115,0.23472809791564941]=>[-1.6128270626068115,-1e-05] (-1,-1; 15,-1), time: 0.2323s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_70, [-1.2090802192687988,0.3581421971321106]=>[-1.2090802192687988,-1e-05] (-1,-1; 15,-1), time: 0.3916s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_4, [-1.1093981266021729,0.8563748598098755]=>[-0.4347087763628472,0.11950403199058887] (2,-1; 9,-1), time: 19.5939s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_35, [-1.294654130935669,0.3729161024093628]=>[-1.294654130935669,-1e-05] (-1,-1; 15,-1), time: 0.2298s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_28, [-2.221759557723999,0.30521446466445923]=>[-2.221759557723999,-1e-05] (-1,-1; 15,-1), time: 0.2153s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_3, [-1.7395563125610352,0.03301680088043213]=>[-1.7395563125610352,-1e-05] (-1,-1; 15,-1), time: 0.2174s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_90, [-0.5138362646102905,1.105913519859314]=>[-0.05835265681940383,0.49112841586453704] (2,-1; 9,-1), time: 19.7158s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_33, [-0.6717416048049927,1.2659540176391602]=>[-0.20038441773157833,0.40665895967324656] (9,-1; 2,-1), time: 20.8039s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_56, [-1.663143515586853,0.8312808871269226]=>[-1.663143515586853,-1e-05] (-1,-1; 15,-1), time: 0.7175s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_54, [-1.231956958770752,0.3897673189640045]=>[-1.231956958770752,-1e-05] (-1,-1; 15,-1), time: 0.2150s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_79, [-2.8275885581970215,0.2270200252532959]=>[-2.8275885581970215,-1e-05] (-1,-1; 15,-1), time: 0.2153s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_87, [-1.6754049062728882,0.7097578048706055]=>[-1.6754049062728882,-1e-05] (-1,-1; 15,-1), time: 0.3860s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_84, [-0.9494874477386475,0.6087228059768677]=>[-0.2701702045242685,0.18530288177617632] (9,-1; 2,-1), time: 22.9400s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_89, [-1.3577733039855957,0.37557798624038696]=>[-1.3577733039855957,-1e-05] (-1,-1; 15,-1), time: 0.3959s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_52, [-2.7046239376068115,0.21188807487487793]=>[-2.7046239376068115,-1e-05] (-1,-1; 15,-1), time: 0.2171s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_86, [-1.4952983856201172,0.3933790326118469]=>[-1.4952983856201172,-1e-05] (-1,-1; 15,-1), time: 0.2191s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_65, [-1.1159276962280273,1.0607916116714478]=>[-0.2119274255009528,0.4995754918823756] (9,-1; 2,-1), time: 23.7750s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_30, [-0.804865300655365,0.8063087463378906]=>[-0.10222621953473976,0.304206728076433] (2,-1; 2,-1), time: 16.0070s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_0, [-1.1080832481384277,1.0215070247650146]=>[-0.36582789409993927,0.3053357057569357] (9,-1; 2,-1), time: 23.9153s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_78, [-1.7264533042907715,0.4113624095916748]=>[-1.7264533042907715,-1e-05] (-1,-1; 15,-1), time: 0.2124s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_2, [-1.1968271732330322,0.7064368724822998]=>[-0.5473119899748742,0.024722288831863275] (9,-1; 2,-1), time: 26.5341s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_97, [-2.3096821308135986,0.14619147777557373]=>[-2.3096821308135986,-1e-05] (-1,-1; 15,-1), time: 0.2107s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_12, [-1.8005924224853516,0.7926260232925415]=>[-1.8005924224853516,-1e-05] (-1,-1; 15,-1), time: 0.2109s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_83, [-1.454542636871338,0.269559383392334]=>[-1.454542636871338,-1e-05] (-1,-1; 15,-1), time: 0.2208s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_64, [-0.7489640116691589,1.298868179321289]=>[-0.15574493611937223,0.42104566353053513] (2,-1; 9,-1), time: 28.8634s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_9, [-1.6053175926208496,0.5531508326530457]=>[-1.6053175926208496,-1e-05] (-1,-1; 15,-1), time: 5.0866s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_42, [-1.610973596572876,0.7920774221420288]=>[-1.610973596572876,-1e-05] (-1,-1; 15,-1), time: 0.2133s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_58, [-1.9330089092254639,0.8378810882568359]=>[-1.9330089092254639,-1e-05] (-1,-1; 15,-1), time: 0.2169s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_82, [-1.3248571157455444,0.5743937492370605]=>[-1.3248571157455444,-1e-05] (-1,-1; 15,-1), time: 0.2273s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_88, [-0.8116403818130493,1.2020761966705322]=>[-0.15531944592009606,0.5853038818689892] (9,-1; 9,-1), time: 30.0033s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_59, [-1.4002822637557983,1.3079901933670044]=>[-0.543094355808644,0.3413958727077635] (9,-1; 9,-1), time: 30.0040s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_34, [-0.904708743095398,0.8558627963066101]=>[-0.19477002557254092,0.31869187483226313] (9,-1; 9,-1), time: 30.0048s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_96, [-0.6663700938224792,1.0256375074386597]=>[-0.024465520769105117,0.40545859145027296] (9,-1; 9,-1), time: 30.0070s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_43, [-1.0589348077774048,0.6957798004150391]=>[-0.21035353691304812,0.24184794077344865] (9,-1; 9,-1), time: 30.0033s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_38, [-0.8600380420684814,1.2709236145019531]=>[-0.21382878252836324,0.3933656154437862] (2,-1; 9,-1), time: 24.1500s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_98, [-1.1868972778320312,0.7576337456703186]=>[-1.1868972778320312,-1e-05] (-1,-1; 15,-1), time: 7.1019s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_67, [-1.7943754196166992,1.3734729290008545]=>[-1.7943754196166992,-1e-05] (-1,-1; 15,-1), time: 7.7042s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_66, [-0.7350999116897583,0.9144023656845093]=>[-0.0889790778594531,0.4286352466522417] (9,-1; 9,-1), time: 30.0038s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_1, [-1.0687612295150757,0.646700918674469]=>[-0.4474486877760133,0.05751245412280738] (2,-1; 9,-1), time: 24.2979s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_76, [-0.623764157295227,0.8074691891670227]=>[-0.07149373106315833,0.2720539326568494] (9,-1; 2,-1), time: 22.6356s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_25, [-1.1874616146087646,0.5235857963562012]=>[-0.44056872677238074,0.05136928692032317] (2,-1; 9,-1), time: 25.8905s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_13, [-0.6854051351547241,0.8371750712394714]=>[-0.2719835102066741,0.10089064915921618] (2,-1; 9,-1), time: 23.2784s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_47, [-0.9846371412277222,0.9463859796524048]=>[-0.4160767274827952,0.2451103087977606] (2,-1; 9,-1), time: 25.5331s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_27, [-0.8607509732246399,1.0357530117034912]=>[-0.1830779962946482,0.3873618910034852] (9,-1; 9,-1), time: 30.0071s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_49, [-1.6140531301498413,1.211850643157959]=>[-0.9814671237876776,0.00027059428367046107] (2,-1; 9,-1), time: 21.6553s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_80, [-0.9159373044967651,1.072625756263733]=>[-0.36283480923212785,0.19686380434837114] (2,-1; 9,-1), time: 23.9282s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_55, [-1.0299774408340454,0.939365565776825]=>[-0.29291747218670866,0.21463444892816483] (9,-1; 9,-1), time: 30.0034s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_39, [-0.902795135974884,1.2592236995697021]=>[-0.006190544514652856,0.5596931073161321] (9,-1; 9,-1), time: 30.0057s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_5, [-0.7995197176933289,0.846875786781311]=>[-0.18391507598148768,0.2472853085690145] (9,-1; 9,-1), time: 30.0031s, #vars: 1355, #constrs: 655, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 12.245924949645996 with beta sum per layer: []
optimal alpha/beta time: 13.148333072662354
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.2863, -0.1132, -0.8306, -1.1472, -2.1319, -3.6536,  0.3122, -3.2863,
         -0.1089]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 83 nodes out of 83 unstable nodes, lb improved 22.774150848388672, ub improved 36.03842544555664, time 61.1600
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_23', 'lay10_56', 'lay10_11', 'lay10_55', 'lay10_19', 'lay10_5', 'lay10_35', 'lay10_57', 'lay10_54', 'lay10_32', 'lay10_62', 'lay10_27', 'lay10_22', 'lay10_39', 'lay10_63', 'lay10_74', 'lay10_66', 'lay10_14', 'lay10_67', 'lay10_51', 'lay10_29', 'lay10_94', 'lay10_90', 'lay10_72', 'lay10_40', 'lay10_46', 'lay10_53', 'lay10_76', 'lay10_81', 'lay10_37', 'lay10_59', 'lay10_47', 'lay10_95', 'lay10_61', 'lay10_4', 'lay10_60', 'lay10_1', 'lay10_17', 'lay10_73', 'lay10_0', 'lay10_64', 'lay10_7', 'lay10_91', 'lay10_78', 'lay10_45', 'lay10_83', 'lay10_31', 'lay10_10', 'lay10_82', 'lay10_92', 'lay10_97', 'lay10_44', 'lay10_86', 'lay10_52', 'lay10_68', 'lay10_77', 'lay10_38', 'lay10_25', 'lay10_6', 'lay10_34', 'lay10_15', 'lay10_84', 'lay10_18', 'lay10_33', 'lay10_2', 'lay10_41', 'lay10_30', 'lay10_75', 'lay10_26', 'lay10_69', 'lay10_87', 'lay10_98', 'lay10_80', 'lay10_65', 'lay10_28', 'lay10_79', 'lay10_16', 'lay10_96', 'lay10_3', 'lay10_89', 'lay10_58', 'lay10_85', 'lay10_93', 'lay10_21', 'lay10_48', 'lay10_9', 'lay10_20', 'lay10_13', 'lay10_71', 'lay10_88', 'lay10_8', 'lay10_12', 'lay10_43', 'lay10_49', 'lay10_42', 'lay10_50', 'lay10_36', 'lay10_70', 'lay10_24', 'lay10_99'] filter: 1.0
Solving MIP for lay10_19, [-0.7085464000701904,2.6735150814056396]=>[1e-05,2.6735150814056396] (15,-1; -1,-1), time: 0.2674s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_22, [-0.6856810450553894,2.4830689430236816]=>[1e-05,2.4830689430236816] (15,-1; -1,-1), time: 0.2672s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_63, [-0.8761547803878784,2.365584373474121]=>[1e-05,2.365584373474121] (15,-1; -1,-1), time: 0.2791s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_54, [-1.2114675045013428,1.3519175052642822]=>[1e-05,1.3519175052642822] (15,-1; -1,-1), time: 0.2804s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_23, [-0.050084590911865234,3.933231830596924]=>[1e-05,3.933231830596924] (15,-1; -1,-1), time: 0.3244s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_32, [-1.8358510732650757,0.5963574647903442]=>[-1.8358510732650757,-1e-05] (-1,-1; 15,-1), time: 0.3267s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_5, [-1.099491834640503,2.28495717048645]=>[1e-05,2.28495717048645] (15,-1; -1,-1), time: 0.3352s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_56, [-2.264275312423706,1.0796560049057007]=>[-2.264275312423706,-1e-05] (-1,-1; 15,-1), time: 0.3373s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_62, [-0.7892137765884399,3.0470495223999023]=>[1e-05,3.0470495223999023] (15,-1; -1,-1), time: 0.3404s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_74, [-2.014101982116699,1.3330336809158325]=>[-2.014101982116699,-1e-05] (-1,-1; 15,-1), time: 0.4210s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_55, [-1.5120480060577393,0.888103723526001]=>[-1.5120480060577393,-1e-05] (-1,-1; 15,-1), time: 0.4299s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_14, [-1.123277187347412,2.5403192043304443]=>[1e-05,2.5403192043304443] (15,-1; -1,-1), time: 0.3327s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_66, [-3.26545786857605,0.6309734582901001]=>[-3.26545786857605,-1e-05] (-1,-1; 15,-1), time: 0.3399s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_67, [-0.5065003633499146,2.787804126739502]=>[1e-05,2.787804126739502] (15,-1; -1,-1), time: 0.3357s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_29, [-2.1996407508850098,0.8962951898574829]=>[-2.1996407508850098,-1e-05] (-1,-1; 15,-1), time: 0.3376s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_72, [-0.5514289140701294,4.028789520263672]=>[1e-05,4.028789520263672] (15,-1; -1,-1), time: 0.3293s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_40, [-1.1407990455627441,2.41214656829834]=>[1e-05,2.41214656829834] (15,-1; -1,-1), time: 0.3370s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_90, [-2.5934414863586426,0.9492393732070923]=>[-2.5934414863586426,-1e-05] (-1,-1; 15,-1), time: 0.3448s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_46, [-1.4161475896835327,2.2913661003112793]=>[1e-05,2.2913661003112793] (15,-1; -1,-1), time: 0.3328s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_53, [-1.816908359527588,0.9162337779998779]=>[-1.816908359527588,-1e-05] (-1,-1; 15,-1), time: 0.3425s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_81, [-2.4369571208953857,0.5791378021240234]=>[-2.4369571208953857,-1e-05] (-1,-1; 15,-1), time: 0.2757s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_59, [-2.852431297302246,0.4707512855529785]=>[-2.852431297302246,-1e-05] (-1,-1; 15,-1), time: 0.2632s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_61, [-0.7715709209442139,2.090963363647461]=>[1e-05,2.090963363647461] (15,-1; -1,-1), time: 0.2662s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_95, [-2.06192946434021,0.7179608345031738]=>[-2.06192946434021,-1e-05] (-1,-1; 15,-1), time: 0.2722s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_60, [-3.246774911880493,0.5880875587463379]=>[-3.246774911880493,-1e-05] (-1,-1; 15,-1), time: 0.2703s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_1, [-0.2639613151550293,3.0644750595092773]=>[1e-05,3.0644750595092773] (15,-1; -1,-1), time: 0.2816s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_17, [-2.10634708404541,1.6381547451019287]=>[-2.10634708404541,-1e-05] (-1,-1; 15,-1), time: 0.2718s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_73, [-2.928062915802002,0.752129077911377]=>[-2.928062915802002,-1e-05] (-1,-1; 15,-1), time: 0.2803s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_64, [-2.413423776626587,0.5465710759162903]=>[-2.413423776626587,-1e-05] (-1,-1; 15,-1), time: 0.2719s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_7, [-3.2426137924194336,0.20201539993286133]=>[-3.2426137924194336,-1e-05] (-1,-1; 15,-1), time: 0.2800s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_91, [-0.0603710412979126,4.543938159942627]=>[1e-05,4.543938159942627] (15,-1; -1,-1), time: 0.2665s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_78, [-1.8940171003341675,0.47723543643951416]=>[-1.8940171003341675,-1e-05] (-1,-1; 15,-1), time: 0.2638s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_45, [-2.9684557914733887,0.3457068204879761]=>[-2.9684557914733887,-1e-05] (-1,-1; 15,-1), time: 0.2784s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_83, [-2.022017240524292,0.7611764669418335]=>[-2.022017240524292,-1e-05] (-1,-1; 15,-1), time: 0.2744s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_10, [-3.2581627368927,1.2663402557373047]=>[-3.2581627368927,-1e-05] (-1,-1; 15,-1), time: 0.2499s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_31, [-0.9795756340026855,1.7810006141662598]=>[1e-05,1.7810006141662598] (15,-1; -1,-1), time: 0.2803s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_82, [-2.253539800643921,0.5952954292297363]=>[-2.253539800643921,-1e-05] (-1,-1; 15,-1), time: 0.2756s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_44, [-3.385230302810669,1.1614625453948975]=>[-3.385230302810669,-1e-05] (-1,-1; 15,-1), time: 0.2623s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_97, [-1.1481391191482544,2.4107861518859863]=>[1e-05,2.4107861518859863] (15,-1; -1,-1), time: 0.2735s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_76, [-1.2406845092773438,1.420583963394165]=>[1e-05,1.420583963394165] (15,-1; -1,-1), time: 1.4772s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_86, [-3.86765193939209,0.48498857021331787]=>[-3.86765193939209,-1e-05] (-1,-1; 15,-1), time: 0.2246s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_52, [-2.2065722942352295,0.7623555660247803]=>[-2.2065722942352295,-1e-05] (-1,-1; 15,-1), time: 0.2826s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_25, [-1.8398964405059814,1.1318624019622803]=>[-1.8398964405059814,-1e-05] (-1,-1; 15,-1), time: 0.2661s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_6, [-1.1264251470565796,1.9038923978805542]=>[1e-05,1.9038923978805542] (15,-1; -1,-1), time: 0.2842s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_38, [-1.6852052211761475,1.116532325744629]=>[-1.6852052211761475,-1e-05] (-1,-1; 15,-1), time: 1.0138s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_0, [-1.975898027420044,0.8583065867424011]=>[-1.975898027420044,-1e-05] (-1,-1; 15,-1), time: 5.0414s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_84, [-2.28238582611084,0.9150258302688599]=>[-2.28238582611084,-1e-05] (-1,-1; 15,-1), time: 0.2713s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_18, [-1.5738303661346436,0.7991436719894409]=>[-1.5738303661346436,-1e-05] (-1,-1; 15,-1), time: 0.2688s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_47, [-1.4681310653686523,1.475661277770996]=>[1e-05,1.475661277770996] (15,-1; -1,-1), time: 6.1303s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_33, [-1.134460210800171,3.026437282562256]=>[1e-05,3.026437282562256] (15,-1; -1,-1), time: 0.2811s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_41, [-0.7036745548248291,3.6874008178710938]=>[1e-05,3.6874008178710938] (15,-1; -1,-1), time: 0.2702s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_30, [-0.8525216579437256,4.718761444091797]=>[1e-05,4.718761444091797] (15,-1; -1,-1), time: 0.2606s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_75, [-1.9822382926940918,0.6866753697395325]=>[-1.9822382926940918,-1e-05] (-1,-1; 15,-1), time: 0.2623s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_26, [-0.8091042041778564,3.295207977294922]=>[1e-05,3.295207977294922] (15,-1; -1,-1), time: 0.2654s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_68, [-1.130033016204834,1.3242454528808594]=>[1e-05,1.3242454528808594] (15,-1; -1,-1), time: 5.9657s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_69, [-3.423977851867676,0.5152069330215454]=>[-3.423977851867676,-1e-05] (-1,-1; 15,-1), time: 0.2589s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_87, [-2.47505521774292,0.6606764793395996]=>[-2.47505521774292,-1e-05] (-1,-1; 15,-1), time: 0.2937s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_80, [-1.0271263122558594,3.464235305786133]=>[1e-05,3.464235305786133] (15,-1; -1,-1), time: 0.2414s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_15, [-1.7942602634429932,1.1937191486358643]=>[-1.7942602634429932,-1e-05] (-1,-1; 15,-1), time: 5.6475s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_65, [-0.5927259922027588,3.8772451877593994]=>[1e-05,3.8772451877593994] (15,-1; -1,-1), time: 0.2435s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_79, [-1.013688564300537,2.3296711444854736]=>[1e-05,2.3296711444854736] (15,-1; -1,-1), time: 0.2637s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_37, [-1.3455216884613037,1.6199737787246704]=>[1e-05,1.6199737787246704] (15,-1; -1,-1), time: 12.0057s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_96, [-1.461085319519043,0.993800938129425]=>[-1.461085319519043,-1e-05] (-1,-1; 15,-1), time: 0.2630s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_2, [-1.5919132232666016,1.161137580871582]=>[-1.5919132232666016,-1e-05] (-1,-1; 15,-1), time: 6.6866s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_89, [-2.340360641479492,0.633242130279541]=>[-2.340360641479492,-1e-05] (-1,-1; 15,-1), time: 0.2900s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_58, [-4.1582818031311035,0.37450194358825684]=>[-4.1582818031311035,-1e-05] (-1,-1; 15,-1), time: 0.2748s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_85, [-2.728433847427368,0.5270698070526123]=>[-2.728433847427368,-1e-05] (-1,-1; 15,-1), time: 0.2872s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_93, [-1.7551443576812744,0.9019808769226074]=>[-1.7551443576812744,-1e-05] (-1,-1; 15,-1), time: 0.2562s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_94, [-1.7367315292358398,1.0613012313842773]=>[-0.3195548821598709,0.13504734827939252] (9,-1; 2,-1), time: 26.6104s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_48, [-2.2354397773742676,1.1055035591125488]=>[-2.2354397773742676,-1e-05] (-1,-1; 15,-1), time: 0.2380s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_9, [-1.7078864574432373,0.890833854675293]=>[-1.7078864574432373,-1e-05] (-1,-1; 15,-1), time: 0.2426s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_98, [-1.2308038473129272,1.1857385635375977]=>[1e-05,0.3805606202398802] (15,-1; 9,-1), time: 19.8961s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_13, [-0.9532699584960938,3.185187816619873]=>[1e-05,3.185187816619873] (15,-1; -1,-1), time: 0.2379s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_20, [-1.4892936944961548,1.0534107685089111]=>[-1.4892936944961548,-1e-05] (-1,-1; 15,-1), time: 1.1512s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_71, [-0.8335118293762207,1.6319901943206787]=>[1e-05,1.6319901943206787] (15,-1; -1,-1), time: 0.2478s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_16, [-1.4049534797668457,1.5209286212921143]=>[-0.7308264019500365,0.0009625513534250206] (2,-1; 9,-1), time: 19.6186s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_8, [-3.2962467670440674,0.6121375560760498]=>[-3.2962467670440674,-1e-05] (-1,-1; 15,-1), time: 0.2402s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_88, [-1.5385818481445312,0.8333125114440918]=>[-1.5385818481445312,-1e-05] (-1,-1; 15,-1), time: 0.2526s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_12, [-1.0080304145812988,2.409038543701172]=>[1e-05,2.409038543701172] (15,-1; -1,-1), time: 0.2476s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_43, [-1.7780197858810425,1.5678613185882568]=>[-1.7780197858810425,-1e-05] (-1,-1; 15,-1), time: 0.2397s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_49, [-3.9680609703063965,1.1305525302886963]=>[-3.9680609703063965,-1e-05] (-1,-1; 15,-1), time: 0.2319s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_50, [-2.6686344146728516,1.4689029455184937]=>[-2.6686344146728516,-1e-05] (-1,-1; 15,-1), time: 0.2327s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_39, [-1.5981543064117432,1.037247657775879]=>[-0.4421760097989384,0.06773913855988249] (9,-1; 9,-1), time: 30.0081s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_57, [-1.6563377380371094,1.4801987409591675]=>[-0.2216960969972822,0.29732688072686897] (9,-1; 9,-1), time: 30.0115s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_27, [-1.7455533742904663,1.393082857131958]=>[-0.4068644349877775,0.06392523382891545] (9,-1; 9,-1), time: 30.0119s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_11, [-1.3401507139205933,1.9604692459106445]=>[-0.4247275491671158,0.3291439585557332] (9,-1; 9,-1), time: 30.0140s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_35, [-1.299094319343567,1.388730764389038]=>[-0.2472012721037927,0.2342420215621269] (9,-1; 9,-1), time: 30.0145s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_24, [-1.8404574394226074,1.1247392892837524]=>[-1.8404574394226074,-1e-05] (-1,-1; 15,-1), time: 0.2743s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_51, [-1.282776117324829,2.0521204471588135]=>[-0.15531767550944614,0.4335330169654301] (9,-1; 9,-1), time: 30.0695s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_70, [-1.1100842952728271,1.697798490524292]=>[1e-05,1.697798490524292] (15,-1; -1,-1), time: 1.2280s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_4, [-1.4676321744918823,0.8928086757659912]=>[-0.30221520586149797,0.06914239304634907] (9,-1; 9,-1), time: 30.0085s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_92, [-1.4682012796401978,0.908713698387146]=>[-0.4675323638727327,0.023461360233803994] (2,-1; 9,-1), time: 29.3602s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_77, [-1.3537325859069824,1.947376012802124]=>[-0.30671683258402266,0.2987374797166371] (9,-1; 9,-1), time: 30.0043s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_34, [-1.3570609092712402,1.6857342720031738]=>[-0.346146622222171,0.16302882433588006] (9,-1; 9,-1), time: 30.0067s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_36, [-1.6611524820327759,1.2855606079101562]=>[-1.6611524820327759,-1e-05] (-1,-1; 15,-1), time: 3.8989s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_99, [-2.016928195953369,2.249917507171631]=>[-1.2085195520456922,-1e-05] (2,-1; 15,-1), time: 4.2859s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_28, [-1.8721100091934204,1.057329773902893]=>[-0.3588071984365797,0.14318742181463365] (9,-1; 9,-1), time: 30.0032s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_3, [-1.2633655071258545,1.005241870880127]=>[-0.3287399032948993,0.03248015866514219] (9,-1; 9,-1), time: 30.0067s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_21, [-1.243152379989624,1.254787802696228]=>[-0.3772092442336335,0.0024913424727669295] (9,-1; 9,-1), time: 30.0039s, #vars: 1509, #constrs: 836, improved: True
Solving MIP for lay10_42, [-1.5537688732147217,1.2912378311157227]=>[-0.32746557211535504,0.03732981109081944] (9,-1; 9,-1), time: 30.0064s, #vars: 1509, #constrs: 836, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: -15.320072174072266 with beta sum per layer: []
optimal alpha/beta time: 13.380728006362915
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.3980,  2.4115,  2.0824,  1.4399,  1.8013, -0.7264,  3.0198,  0.4218,
          3.4718]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 49.650535583496094, ub improved 64.84208679199219, time 59.4253
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_60', 'lay12_25', 'lay12_56', 'lay12_32', 'lay12_91', 'lay12_46', 'lay12_44', 'lay12_48', 'lay12_87', 'lay12_17', 'lay12_31', 'lay12_96', 'lay12_6', 'lay12_89', 'lay12_73', 'lay12_81', 'lay12_11', 'lay12_22', 'lay12_68', 'lay12_83', 'lay12_39', 'lay12_98', 'lay12_1', 'lay12_95', 'lay12_67', 'lay12_55', 'lay12_79', 'lay12_45', 'lay12_77', 'lay12_59', 'lay12_42', 'lay12_63', 'lay12_14', 'lay12_8', 'lay12_21', 'lay12_9', 'lay12_82', 'lay12_29', 'lay12_52', 'lay12_84', 'lay12_24', 'lay12_0', 'lay12_92', 'lay12_13', 'lay12_18', 'lay12_12', 'lay12_90', 'lay12_64', 'lay12_10', 'lay12_28', 'lay12_16', 'lay12_38', 'lay12_65', 'lay12_54', 'lay12_4', 'lay12_33', 'lay12_88', 'lay12_76', 'lay12_97', 'lay12_30', 'lay12_19', 'lay12_43', 'lay12_94', 'lay12_23', 'lay12_7', 'lay12_2', 'lay12_75', 'lay12_37', 'lay12_36', 'lay12_85', 'lay12_35', 'lay12_41', 'lay12_57', 'lay12_78', 'lay12_66', 'lay12_58', 'lay12_72', 'lay12_3', 'lay12_61', 'lay12_74', 'lay12_51', 'lay12_20', 'lay12_34', 'lay12_40', 'lay12_15', 'lay12_53', 'lay12_71', 'lay12_99', 'lay12_27', 'lay12_69', 'lay12_5', 'lay12_80', 'lay12_86', 'lay12_26', 'lay12_93', 'lay12_47', 'lay12_70', 'lay12_50', 'lay12_49', 'lay12_62'] filter: 1.0
Solving MIP for lay12_44, [-3.8762283325195312,2.001577377319336]=>[-3.8762283325195312,-1e-05] (-1,-1; 15,-1), time: 0.2693s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_87, [-1.3943250179290771,5.178075313568115]=>[1e-05,5.178075313568115] (15,-1; -1,-1), time: 0.2711s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_17, [-3.0030033588409424,2.244711399078369]=>[-3.0030033588409424,-1e-05] (-1,-1; 15,-1), time: 0.2792s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_56, [-3.3110806941986084,1.3833674192428589]=>[-3.3110806941986084,-1e-05] (-1,-1; 15,-1), time: 0.2823s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_32, [-3.0233347415924072,2.285745620727539]=>[-3.0233347415924072,-1e-05] (-1,-1; 15,-1), time: 0.2867s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_31, [-1.7497872114181519,4.06572151184082]=>[1e-05,4.06572151184082] (15,-1; -1,-1), time: 0.3295s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_89, [-3.9945385456085205,1.7737720012664795]=>[-3.9945385456085205,-1e-05] (-1,-1; 15,-1), time: 0.3295s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_60, [-2.140883445739746,3.7782111167907715]=>[1e-05,3.7782111167907715] (15,-1; -1,-1), time: 0.3324s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_11, [-2.896864414215088,3.392833709716797]=>[1e-05,3.392833709716797] (15,-1; -1,-1), time: 0.2759s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_22, [-3.422546148300171,1.6381562948226929]=>[-3.422546148300171,-1e-05] (-1,-1; 15,-1), time: 0.2782s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_83, [-3.510514974594116,4.613352298736572]=>[1e-05,4.613352298736572] (15,-1; -1,-1), time: 0.2683s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_39, [-3.344465494155884,1.4710559844970703]=>[-3.344465494155884,-1e-05] (-1,-1; 15,-1), time: 0.2683s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_95, [-2.5708858966827393,3.0965521335601807]=>[1e-05,3.0965521335601807] (15,-1; -1,-1), time: 0.2452s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_98, [-1.9988055229187012,6.849392890930176]=>[1e-05,6.849392890930176] (15,-1; -1,-1), time: 0.3107s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_77, [-3.396416664123535,1.7074803113937378]=>[-3.396416664123535,-1e-05] (-1,-1; 15,-1), time: 0.2123s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_55, [-2.917546033859253,1.914304256439209]=>[-2.917546033859253,-1e-05] (-1,-1; 15,-1), time: 0.2683s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_45, [-3.282484531402588,1.745100498199463]=>[-3.282484531402588,-1e-05] (-1,-1; 15,-1), time: 0.2664s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_67, [-2.8696348667144775,2.599034547805786]=>[-2.8696348667144775,-1e-05] (-1,-1; 15,-1), time: 0.2779s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_63, [-2.5023326873779297,5.498597145080566]=>[1e-05,5.498597145080566] (15,-1; -1,-1), time: 0.2543s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_42, [-4.056419849395752,1.4570122957229614]=>[-4.056419849395752,-1e-05] (-1,-1; 15,-1), time: 0.2775s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_8, [-2.845215320587158,2.211256980895996]=>[-2.845215320587158,-1e-05] (-1,-1; 15,-1), time: 0.2637s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_14, [-3.250979423522949,1.8646425008773804]=>[-3.250979423522949,-1e-05] (-1,-1; 15,-1), time: 0.2663s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_21, [-2.9622368812561035,1.973052978515625]=>[-2.9622368812561035,-1e-05] (-1,-1; 15,-1), time: 0.2557s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_82, [-3.459057569503784,1.8487613201141357]=>[-3.459057569503784,-1e-05] (-1,-1; 15,-1), time: 0.2489s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_9, [-2.968787670135498,2.3357717990875244]=>[-2.968787670135498,-1e-05] (-1,-1; 15,-1), time: 0.2611s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_24, [-3.1621522903442383,5.107503890991211]=>[1e-05,5.107503890991211] (15,-1; -1,-1), time: 0.2574s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_84, [-3.5283823013305664,1.503892183303833]=>[-3.5283823013305664,-1e-05] (-1,-1; 15,-1), time: 0.2693s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_0, [-3.862401008605957,1.983501672744751]=>[-3.862401008605957,-1e-05] (-1,-1; 15,-1), time: 0.2609s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_13, [-4.266861438751221,1.3886122703552246]=>[-4.266861438751221,-1e-05] (-1,-1; 15,-1), time: 0.2485s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_18, [-4.043125152587891,2.9543209075927734]=>[-4.043125152587891,-1e-05] (-1,-1; 15,-1), time: 0.2459s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_73, [-3.551802158355713,2.509472370147705]=>[-3.551802158355713,-1e-05] (-1,-1; 15,-1), time: 4.6024s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_90, [-3.665357828140259,1.8531031608581543]=>[-3.665357828140259,-1e-05] (-1,-1; 15,-1), time: 0.2241s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_64, [-1.9678353071212769,2.582735776901245]=>[1e-05,2.582735776901245] (15,-1; -1,-1), time: 0.2325s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_10, [-3.661140203475952,1.5796761512756348]=>[-3.661140203475952,-1e-05] (-1,-1; 15,-1), time: 0.2254s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_28, [-2.483957290649414,2.6023621559143066]=>[1e-05,2.6023621559143066] (15,-1; -1,-1), time: 0.2231s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_16, [-3.059706687927246,1.753248691558838]=>[-3.059706687927246,-1e-05] (-1,-1; 15,-1), time: 0.2355s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_38, [-4.0983123779296875,1.374214768409729]=>[-4.0983123779296875,-1e-05] (-1,-1; 15,-1), time: 0.2234s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_65, [-3.9172632694244385,1.6614699363708496]=>[-3.9172632694244385,-1e-05] (-1,-1; 15,-1), time: 0.2249s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_79, [-2.96944522857666,2.1277225017547607]=>[-2.96944522857666,-1e-05] (-1,-1; 15,-1), time: 5.9815s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_4, [-3.659135580062866,3.479192018508911]=>[-3.659135580062866,-1e-05] (-1,-1; 15,-1), time: 0.2412s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_6, [-3.12973952293396,1.9633400440216064]=>[-3.12973952293396,-1e-05] (-1,-1; 15,-1), time: 10.2507s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_91, [-2.5687482357025146,2.704439163208008]=>[-0.6983333387596539,-1e-05] (9,-1; 15,-1), time: 15.2446s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_81, [-2.929378032684326,3.0232486724853516]=>[-0.8640606150532949,-1e-05] (9,-1; 15,-1), time: 15.4226s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_76, [-3.0004379749298096,1.8286422491073608]=>[-3.0004379749298096,-1e-05] (-1,-1; 15,-1), time: 0.2255s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_97, [-2.6411616802215576,3.451833963394165]=>[1e-05,3.451833963394165] (15,-1; -1,-1), time: 0.2373s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_30, [-4.422515869140625,1.6377652883529663]=>[-4.422515869140625,-1e-05] (-1,-1; 15,-1), time: 0.2288s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_19, [-3.3584296703338623,1.6051472425460815]=>[-3.3584296703338623,-1e-05] (-1,-1; 15,-1), time: 0.2330s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_43, [-3.178457736968994,2.103684425354004]=>[-3.178457736968994,-1e-05] (-1,-1; 15,-1), time: 0.2325s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_94, [-3.562732219696045,2.505082130432129]=>[-3.562732219696045,-1e-05] (-1,-1; 15,-1), time: 0.2288s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_23, [-2.751774787902832,2.8886160850524902]=>[1e-05,2.8886160850524902] (15,-1; -1,-1), time: 0.2335s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_29, [-2.930452823638916,3.1681666374206543]=>[-0.8272293982478408,-1e-05] (9,-1; 15,-1), time: 15.2472s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_7, [-2.7705323696136475,2.4446403980255127]=>[-2.7705323696136475,-1e-05] (-1,-1; 15,-1), time: 0.2507s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_2, [-4.354119777679443,1.6305911540985107]=>[-4.354119777679443,-1e-05] (-1,-1; 15,-1), time: 0.2253s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_36, [-3.340878486633301,2.3808000087738037]=>[-3.340878486633301,-1e-05] (-1,-1; 15,-1), time: 0.2221s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_25, [-3.11371111869812,2.856980323791504]=>[1e-05,0.44669130385134376] (15,-1; 9,-1), time: 20.4496s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_35, [-2.691269874572754,3.553722858428955]=>[1e-05,3.553722858428955] (15,-1; -1,-1), time: 0.2329s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_41, [-2.394578456878662,2.599299192428589]=>[1e-05,2.599299192428589] (15,-1; -1,-1), time: 0.2388s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_57, [-2.728942394256592,2.0688302516937256]=>[-2.728942394256592,-1e-05] (-1,-1; 15,-1), time: 0.2393s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_78, [-4.261452674865723,1.4388641119003296]=>[-4.261452674865723,-1e-05] (-1,-1; 15,-1), time: 0.2248s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_37, [-2.9975664615631104,2.1943752765655518]=>[1e-05,1.0208951347741273] (15,-1; 2,-1), time: 9.4654s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_58, [-2.0721325874328613,2.6888694763183594]=>[1e-05,2.6888694763183594] (15,-1; -1,-1), time: 0.2300s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_96, [-3.0035483837127686,2.5453696250915527]=>[-0.4297923917710942,0.020544436481602278] (9,-1; 9,-1), time: 30.0050s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_46, [-2.6881000995635986,3.341275691986084]=>[-0.3824822208878367,0.15278320453651015] (9,-1; 9,-1), time: 30.0114s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_48, [-2.7078733444213867,3.2163543701171875]=>[-0.38213609177797214,0.106821830481891] (9,-1; 9,-1), time: 30.0092s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_3, [-3.319667100906372,2.66201114654541]=>[-3.319667100906372,-1e-05] (-1,-1; 15,-1), time: 0.2277s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_74, [-3.334529161453247,1.4081867933273315]=>[-3.334529161453247,-1e-05] (-1,-1; 15,-1), time: 0.2206s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_61, [-4.4593377113342285,1.4667437076568604]=>[-4.4593377113342285,-1e-05] (-1,-1; 15,-1), time: 0.2234s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_68, [-2.557469606399536,3.170395851135254]=>[-0.412764406407793,0.13111916514887093] (9,-1; 9,-1), time: 30.0132s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_1, [-3.170208215713501,3.0018246173858643]=>[-0.5973528910612302,0.016039069672379346] (9,-1; 9,-1), time: 30.0090s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_34, [-2.6710875034332275,3.917675256729126]=>[1e-05,3.917675256729126] (15,-1; -1,-1), time: 0.2257s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_51, [-3.1116843223571777,2.396831512451172]=>[-3.1116843223571777,-1e-05] (-1,-1; 15,-1), time: 0.2299s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_20, [-2.3796238899230957,2.9409544467926025]=>[1e-05,2.9409544467926025] (15,-1; -1,-1), time: 0.2302s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_40, [-2.8134305477142334,2.749105215072632]=>[-2.8134305477142334,-1e-05] (-1,-1; 15,-1), time: 0.2272s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_15, [-4.100675582885742,3.626309871673584]=>[-4.100675582885742,-1e-05] (-1,-1; 15,-1), time: 0.2319s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_99, [-3.43562912940979,1.5097371339797974]=>[-3.43562912940979,-1e-05] (-1,-1; 15,-1), time: 0.2280s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_53, [-3.5097289085388184,3.104854106903076]=>[-3.5097289085388184,-1e-05] (-1,-1; 15,-1), time: 0.2391s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_59, [-3.1607139110565186,3.51381254196167]=>[-0.15286475452636705,0.58850048290161] (9,-1; 9,-1), time: 30.0731s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_69, [-2.7808351516723633,2.902496576309204]=>[1e-05,2.902496576309204] (15,-1; -1,-1), time: 0.2358s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_5, [-3.1195030212402344,2.1438169479370117]=>[-3.1195030212402344,-1e-05] (-1,-1; 15,-1), time: 0.2286s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_80, [-2.548586845397949,3.2879393100738525]=>[1e-05,3.2879393100738525] (15,-1; -1,-1), time: 0.2288s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_27, [-3.2517547607421875,3.1758015155792236]=>[-3.2517547607421875,-1e-05] (-1,-1; 15,-1), time: 0.4149s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_86, [-3.4530487060546875,3.121663808822632]=>[-3.4530487060546875,-1e-05] (-1,-1; 15,-1), time: 0.2284s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_26, [-3.5326621532440186,2.7726211547851562]=>[-3.5326621532440186,-1e-05] (-1,-1; 15,-1), time: 0.2375s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_93, [-3.180178642272949,2.1496214866638184]=>[-3.180178642272949,-1e-05] (-1,-1; 15,-1), time: 0.2293s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_50, [-2.4890694618225098,4.21730899810791]=>[1e-05,4.21730899810791] (15,-1; -1,-1), time: 0.2216s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_49, [-4.442661285400391,2.041616916656494]=>[-4.442661285400391,-1e-05] (-1,-1; 15,-1), time: 0.2375s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_52, [-2.512850046157837,2.680203676223755]=>[-0.1027837261769858,0.19391081880158167] (9,-1; 9,-1), time: 30.0133s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_92, [-2.5474512577056885,2.030724048614502]=>[-0.12043923203157182,0.16291072953230798] (9,-1; 9,-1), time: 30.1025s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_12, [-2.831906318664551,2.0622456073760986]=>[-0.1503734289179985,0.07499275434587845] (9,-1; 9,-1), time: 30.0065s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_54, [-3.120124101638794,2.4823620319366455]=>[-0.19057196076432611,0.25429233693923575] (9,-1; 9,-1), time: 30.0077s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_33, [-3.248229503631592,2.258641242980957]=>[-0.3203654135723366,0.07221112893878165] (9,-1; 9,-1), time: 30.0046s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_88, [-2.3751230239868164,3.2060494422912598]=>[-0.20614272153860536,0.40110569417990133] (9,-1; 9,-1), time: 30.0039s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_72, [-2.8610191345214844,3.2417285442352295]=>[-0.9501082810280751,-1e-05] (9,-1; 15,-1), time: 15.2330s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_75, [-2.8814849853515625,3.2427773475646973]=>[-0.04114155109142362,0.42189516729053794] (9,-1; 9,-1), time: 30.0075s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_85, [-2.8439676761627197,2.9556522369384766]=>[-0.21298016776192924,0.06927065766659879] (9,-1; 9,-1), time: 30.0033s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_47, [-2.713054895401001,3.257986068725586]=>[-0.3994395970359199,-1e-05] (9,-1; 15,-1), time: 16.3810s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_71, [-2.5546913146972656,2.288649559020996]=>[-0.1693050919208355,0.08497897055462701] (2,-1; 9,-1), time: 20.5020s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_66, [-2.9643771648406982,3.016779661178589]=>[-0.5240650937880462,0.18107532749234215] (9,-1; 9,-1), time: 30.0057s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_70, [-3.0753185749053955,3.8438403606414795]=>[-0.001228765800176404,0.6697816297462186] (9,-1; 9,-1), time: 30.0028s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_62, [-2.7134032249450684,3.281261920928955]=>[-0.04043742420355552,0.24850151296210676] (9,-1; 9,-1), time: 30.0370s, #vars: 1641, #constrs: 984, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -19.070613861083984 with beta sum per layer: []
optimal alpha/beta time: 11.54079008102417
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.8069,  2.7098,  2.4267,  1.8270,  2.2997, -0.3260,  3.3452,  0.9995,
          3.9817]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 114.69306945800781, ub improved 179.82693481445312, time 61.6659
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_99', 'lay14_56', 'lay14_32', 'lay14_6', 'lay14_90', 'lay14_2', 'lay14_93', 'lay14_61', 'lay14_98', 'lay14_66', 'lay14_33', 'lay14_16', 'lay14_13', 'lay14_24', 'lay14_94', 'lay14_62', 'lay14_92', 'lay14_85', 'lay14_77', 'lay14_55', 'lay14_58', 'lay14_21', 'lay14_48', 'lay14_12', 'lay14_74', 'lay14_17', 'lay14_8', 'lay14_45', 'lay14_7', 'lay14_15', 'lay14_28', 'lay14_69', 'lay14_37', 'lay14_72', 'lay14_80', 'lay14_76', 'lay14_60', 'lay14_53', 'lay14_83', 'lay14_54', 'lay14_49', 'lay14_70', 'lay14_30', 'lay14_29', 'lay14_39', 'lay14_11', 'lay14_23', 'lay14_9', 'lay14_34', 'lay14_42', 'lay14_63', 'lay14_75', 'lay14_10', 'lay14_43', 'lay14_64', 'lay14_50', 'lay14_0', 'lay14_46', 'lay14_59', 'lay14_26', 'lay14_38', 'lay14_82', 'lay14_96', 'lay14_52', 'lay14_86', 'lay14_20', 'lay14_5', 'lay14_36', 'lay14_25', 'lay14_51', 'lay14_79', 'lay14_87', 'lay14_84', 'lay14_44', 'lay14_47', 'lay14_3', 'lay14_31', 'lay14_19', 'lay14_40', 'lay14_81', 'lay14_88', 'lay14_78', 'lay14_57', 'lay14_27', 'lay14_18', 'lay14_89', 'lay14_14', 'lay14_35', 'lay14_4', 'lay14_95', 'lay14_68', 'lay14_71', 'lay14_1', 'lay14_73', 'lay14_97', 'lay14_41', 'lay14_91', 'lay14_22', 'lay14_67', 'lay14_65'] filter: 1.0
Solving MIP for lay14_33, [-5.135476112365723,6.896620750427246]=>[1e-05,6.896620750427246] (15,-1; -1,-1), time: 0.3106s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_24, [-5.756194114685059,5.657774925231934]=>[-5.756194114685059,-1e-05] (-1,-1; 15,-1), time: 0.3149s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_32, [-5.124768257141113,5.377989292144775]=>[1e-05,5.377989292144775] (15,-1; -1,-1), time: 0.3189s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_93, [-6.644225120544434,4.531375408172607]=>[-6.644225120544434,-1e-05] (-1,-1; 15,-1), time: 0.3219s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_2, [-7.128495216369629,6.124044418334961]=>[-7.128495216369629,-1e-05] (-1,-1; 15,-1), time: 0.3229s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_98, [-7.973223686218262,4.618505477905273]=>[-7.973223686218262,-1e-05] (-1,-1; 15,-1), time: 0.3274s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_13, [-5.267108917236328,5.58331823348999]=>[1e-05,5.58331823348999] (15,-1; -1,-1), time: 0.3272s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_16, [-6.0865559577941895,5.557823181152344]=>[-6.0865559577941895,-1e-05] (-1,-1; 15,-1), time: 0.3299s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_61, [-6.030271053314209,3.6725897789001465]=>[-6.030271053314209,-1e-05] (-1,-1; 15,-1), time: 0.3536s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_62, [-6.290631294250488,7.879899978637695]=>[1e-05,7.879899978637695] (15,-1; -1,-1), time: 0.3538s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_17, [-7.038888931274414,3.260333299636841]=>[-7.038888931274414,-1e-05] (-1,-1; 15,-1), time: 0.2635s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_8, [-5.8742570877075195,4.6266350746154785]=>[-5.8742570877075195,-1e-05] (-1,-1; 15,-1), time: 0.2628s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_45, [-6.567763328552246,4.186765670776367]=>[-6.567763328552246,-1e-05] (-1,-1; 15,-1), time: 0.3056s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_7, [-7.272914886474609,4.48646354675293]=>[-7.272914886474609,-1e-05] (-1,-1; 15,-1), time: 0.3029s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_15, [-5.624536991119385,4.753655433654785]=>[-5.624536991119385,-1e-05] (-1,-1; 15,-1), time: 0.3291s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_28, [-5.919252395629883,5.75583028793335]=>[-5.919252395629883,-1e-05] (-1,-1; 15,-1), time: 0.3063s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_69, [-5.7904582023620605,5.522136688232422]=>[-5.7904582023620605,-1e-05] (-1,-1; 15,-1), time: 0.2898s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_37, [-6.9912004470825195,4.928020477294922]=>[-6.9912004470825195,-1e-05] (-1,-1; 15,-1), time: 0.3026s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_90, [-5.256208896636963,4.867361545562744]=>[1e-05,0.48824463216429703] (15,-1; 2,-1), time: 5.2880s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_80, [-5.3577046394348145,5.229256629943848]=>[-5.3577046394348145,-1e-05] (-1,-1; 15,-1), time: 0.2852s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_48, [-5.295199871063232,4.477341175079346]=>[1e-05,1.1897772785092184] (15,-1; 2,-1), time: 5.6029s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_60, [-7.200177192687988,4.07537841796875]=>[-7.200177192687988,-1e-05] (-1,-1; 15,-1), time: 0.2554s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_55, [-7.016911029815674,6.546446800231934]=>[1e-05,1.3899336791856771] (15,-1; 2,-1), time: 7.4074s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_74, [-6.023903846740723,4.5861968994140625]=>[1e-05,0.8694277901898261] (15,-1; 2,-1), time: 8.7869s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_53, [-5.834763526916504,5.527401924133301]=>[1e-05,0.7912525096764688] (15,-1; 2,-1), time: 6.3310s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_49, [-6.760018825531006,3.814640522003174]=>[-6.760018825531006,-1e-05] (-1,-1; 15,-1), time: 0.2616s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_70, [-6.16237735748291,6.039091110229492]=>[-6.16237735748291,-1e-05] (-1,-1; 15,-1), time: 0.2656s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_66, [-6.848590850830078,5.367087364196777]=>[1e-05,0.5349442168008505] (15,-1; 9,-1), time: 15.2667s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_56, [-5.240636825561523,6.362142562866211]=>[-0.6123095604352085,-1e-05] (9,-1; 15,-1), time: 15.3366s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_99, [-5.737438201904297,5.88853120803833]=>[-0.5358319500022489,-1e-05] (9,-1; 15,-1), time: 15.3369s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_12, [-5.478817939758301,6.192963123321533]=>[-0.8925309623526291,-1e-05] (9,-1; 15,-1), time: 15.2797s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_77, [-5.713706016540527,4.729905128479004]=>[1e-05,0.5712508763876762] (15,-1; 9,-1), time: 15.3412s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_11, [-8.221640586853027,5.740542411804199]=>[-8.221640586853027,-1e-05] (-1,-1; 15,-1), time: 0.3360s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_21, [-5.327108860015869,5.110387802124023]=>[1e-05,0.5931560621140074] (15,-1; 9,-1), time: 15.3625s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_92, [-6.205684661865234,3.775697946548462]=>[1e-05,0.339298720126702] (15,-1; 9,-1), time: 15.3825s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_23, [-4.893194198608398,6.3751220703125]=>[1e-05,6.3751220703125] (15,-1; -1,-1), time: 0.2655s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_9, [-6.575832366943359,4.899106979370117]=>[-6.575832366943359,-1e-05] (-1,-1; 15,-1), time: 0.3376s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_34, [-6.869818210601807,4.388925075531006]=>[-6.869818210601807,-1e-05] (-1,-1; 15,-1), time: 0.3258s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_42, [-5.069106101989746,6.065631866455078]=>[1e-05,6.065631866455078] (15,-1; -1,-1), time: 0.3201s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_63, [-6.135979652404785,6.413018226623535]=>[1e-05,6.413018226623535] (15,-1; -1,-1), time: 0.3220s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_43, [-5.8615946769714355,5.121693134307861]=>[-5.8615946769714355,-1e-05] (-1,-1; 15,-1), time: 0.3180s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_50, [-6.438985824584961,4.456193447113037]=>[-6.438985824584961,-1e-05] (-1,-1; 15,-1), time: 0.3323s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_0, [-5.137046813964844,5.6700286865234375]=>[1e-05,5.6700286865234375] (15,-1; -1,-1), time: 0.3251s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_46, [-7.126986980438232,4.690279006958008]=>[-7.126986980438232,-1e-05] (-1,-1; 15,-1), time: 0.2984s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_59, [-5.7258830070495605,5.866546630859375]=>[1e-05,5.866546630859375] (15,-1; -1,-1), time: 0.2785s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_26, [-6.0542097091674805,5.315112113952637]=>[-6.0542097091674805,-1e-05] (-1,-1; 15,-1), time: 0.2935s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_82, [-6.268110275268555,5.526931285858154]=>[-6.268110275268555,-1e-05] (-1,-1; 15,-1), time: 0.3073s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_96, [-6.446942329406738,7.564065456390381]=>[1e-05,7.564065456390381] (15,-1; -1,-1), time: 0.2920s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_52, [-6.638599395751953,4.9690752029418945]=>[-6.638599395751953,-1e-05] (-1,-1; 15,-1), time: 0.2935s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_86, [-6.849878787994385,5.331042766571045]=>[-6.849878787994385,-1e-05] (-1,-1; 15,-1), time: 0.2651s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_20, [-5.321430683135986,6.606764316558838]=>[1e-05,6.606764316558838] (15,-1; -1,-1), time: 0.2807s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_5, [-6.628932952880859,8.57645034790039]=>[1e-05,8.57645034790039] (15,-1; -1,-1), time: 0.2736s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_76, [-5.553819179534912,5.249076843261719]=>[1e-05,1.653410264676456] (15,-1; 9,-1), time: 15.2781s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_10, [-6.354207992553711,6.288382053375244]=>[1e-05,2.387108257352427] (15,-1; 2,-1), time: 5.1089s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_30, [-5.571868896484375,4.954770088195801]=>[1e-05,1.2059626068323552] (15,-1; 9,-1), time: 15.2863s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_64, [-6.370766639709473,4.73708963394165]=>[-6.370766639709473,-1e-05] (-1,-1; 15,-1), time: 12.8514s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_6, [-5.9085164070129395,6.03012228012085]=>[-0.14248875226897417,0.118523600550654] (9,-1; 9,-1), time: 30.0045s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_94, [-6.287145137786865,5.094742774963379]=>[-0.09824869749403384,0.15904603913464865] (9,-1; 9,-1), time: 30.0147s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_58, [-5.4859795570373535,5.642291069030762]=>[-0.11583487807458098,0.17119825997594157] (9,-1; 9,-1), time: 30.0142s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_85, [-5.991581916809082,4.337717056274414]=>[-0.0807121454709313,0.18972043968415986] (9,-1; 9,-1), time: 30.0862s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_29, [-5.726898193359375,5.698101043701172]=>[1e-05,0.7284853065943908] (15,-1; 9,-1), time: 15.2717s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_39, [-6.2101240158081055,4.4675374031066895]=>[1e-05,0.5761168463356822] (15,-1; 9,-1), time: 15.2858s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_38, [-4.941431522369385,5.948829174041748]=>[-1.1625013586892723,-1e-05] (9,-1; 15,-1), time: 15.2468s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_72, [-5.173855304718018,6.898998737335205]=>[-0.11476813425374723,0.2717582859023528] (9,-1; 9,-1), time: 30.0083s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_83, [-5.743149280548096,5.432041645050049]=>[-0.2699176749865666,0.0189096635489621] (2,-1; 9,-1), time: 25.5040s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_54, [-6.684484481811523,5.668176174163818]=>[-0.03824517812724426,0.2544699856650478] (9,-1; 9,-1), time: 30.1112s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_75, [-5.924404144287109,4.6610565185546875]=>[-0.15381082047798983,0.09900216651010585] (9,-1; 9,-1), time: 30.0027s, #vars: 1777, #constrs: 1138, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -21.024627685546875 with beta sum per layer: []
optimal alpha/beta time: 11.576766967773438
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.0518,  2.8574,  2.5793,  2.0401,  2.5607, -0.0851,  3.4951,  1.2870,
          4.2381]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
MIP improved 67 nodes out of 100 unstable nodes, lb improved 214.49600219726562, ub improved 267.2189636230469, time 46.3169
maximum relu layer improved by MIP so far 6
MIP finished with 267.3488698005676s
Run final alpha-CROWN after MIP solving on layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -21.364213943481445 with beta sum per layer: []
optimal alpha/beta time: 10.777766704559326
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.0823,  2.8901,  2.6008,  2.0981,  2.5894, -0.0712,  3.5344,  1.3390,
          4.3014]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[ 2.0823,  2.8901,  0.0000,  2.6008,  2.0981,  2.5894, -0.0712,  3.5344,
          1.3390,  4.3014]], device='cuda:0') min: tensor(-0.0712, device='cuda:0')
time threshold left for bab: 10.085514783859253
##### [0:1] Tested against 0 ######
init opt crown verified for label 0 with bound 2.082270383834839
Image 1 pidx 0 verify end, Time cost: 0.00021886825561523438
1 2.082270383834839
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0]]
##### [0:1] Tested against 1 ######
init opt crown verified for label 1 with bound 2.8901431560516357
Image 1 pidx 1 verify end, Time cost: 0.0002944469451904297
1 2.8901431560516357
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1]]
##### [0:1] Tested against 2 ######
correct label, skip!
##### [0:1] Tested against 3 ######
init opt crown verified for label 3 with bound 2.600766658782959
Image 1 pidx 3 verify end, Time cost: 0.00029206275939941406
1 2.600766658782959
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3]]
##### [0:1] Tested against 4 ######
init opt crown verified for label 4 with bound 2.098055124282837
Image 1 pidx 4 verify end, Time cost: 0.0003275871276855469
1 2.098055124282837
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3], [1, 2.098055124282837, 0, 0.0003275871276855469, 0, 4]]
##### [0:1] Tested against 5 ######
init opt crown verified for label 5 with bound 2.5893924236297607
Image 1 pidx 5 verify end, Time cost: 0.00028634071350097656
1 2.5893924236297607
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3], [1, 2.098055124282837, 0, 0.0003275871276855469, 0, 4], [1, 2.5893924236297607, 0, 0.00028634071350097656, 0, 5]]
##### [0:1] Tested against 6 ######
beta splits: True
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.07134974002838135 with beta sum per layer: []
optimal alpha/beta time: 1.9687860012054443
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0713]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
-0.07134974002838135
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 30
layer 2 size torch.Size([100]) unstable 24
layer 3 size torch.Size([100]) unstable 27
layer 4 size torch.Size([100]) unstable 16
layer 5 size torch.Size([100]) unstable 18
layer 6 size torch.Size([100]) unstable 13
layer 7 size torch.Size([100]) unstable 16
# of unstable neurons: 175
splitting decisions: [[1, 96]]
single_node_split: True
best_l after optimization: 0.012645483016967773 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 1.0380606651306152
This batch time : update_bounds func: 1.0415	 prepare: 0.0019	 bound: 1.0383	 transfer: 0.0008	 finalize: 0.0004
Accumulated time: update_bounds func: 1.0415	 prepare: 0.0019	 bound: 1.0383	 transfer: 0.0008	 finalize: 0.0004
batch bounding time:  1.041579246520996
Current worst domains: [-0.04583460092544556]
length of domains: 1
Total time: 1.0697	 pickout: 0.0012	 decision: 0.0266	 get_bound: 1.0416	 add_domain: 0.0002
Current lb:-0.04583460092544556
2 neurons visited

splitting decisions: [[4, 77]]
single_node_split: True
best_l after optimization: -0.044330447912216187 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.9046745300292969
This batch time : update_bounds func: 0.9081	 prepare: 0.0019	 bound: 0.9050	 transfer: 0.0008	 finalize: 0.0004
Accumulated time: update_bounds func: 1.9496	 prepare: 0.0038	 bound: 1.9433	 transfer: 0.0008	 finalize: 0.0008
batch bounding time:  0.9081809520721436
Current worst domains: [-0.04583460092544556]
length of domains: 1
Total time: 0.9357	 pickout: 0.0011	 decision: 0.0262	 get_bound: 0.9082	 add_domain: 0.0002bab_verification_eran.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  model = LiRPAConvNet(model_ori, torch.tensor(pred), target, solve_slope=args.solve_slope, device=args.device,

Current lb:-0.04583460092544556
4 neurons visited

splitting decisions: [[2, 32]]
single_node_split: True

all verified at 0th iter
best_l after optimization: -0.0240517258644104 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.013611316680908203
This batch time : update_bounds func: 0.0170	 prepare: 0.0020	 bound: 0.0139	 transfer: 0.0006	 finalize: 0.0004
Accumulated time: update_bounds func: 1.9666	 prepare: 0.0057	 bound: 1.9572	 transfer: 0.0006	 finalize: 0.0012
batch bounding time:  0.017003297805786133
Current worst domains: []
length of domains: 0
Total time: 0.0451	 pickout: 0.0012	 decision: 0.0268	 get_bound: 0.0170	 add_domain: 0.0000
No domains left, verification finished!
Image 1 pidx 6 verify end, Time cost: 4.299046754837036
1 999
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3], [1, 2.098055124282837, 0, 0.0003275871276855469, 0, 4], [1, 2.5893924236297607, 0, 0.00028634071350097656, 0, 5], [1, 999, 6, 4.299046754837036, 0, 6]]
##### [0:1] Tested against 7 ######
init opt crown verified for label 7 with bound 3.5344390869140625
Image 1 pidx 7 verify end, Time cost: 0.00022363662719726562
1 3.5344390869140625
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3], [1, 2.098055124282837, 0, 0.0003275871276855469, 0, 4], [1, 2.5893924236297607, 0, 0.00028634071350097656, 0, 5], [1, 999, 6, 4.299046754837036, 0, 6], [1, 3.5344390869140625, 0, 0.00022363662719726562, 0, 7]]
##### [0:1] Tested against 8 ######
init opt crown verified for label 8 with bound 1.3390039205551147
Image 1 pidx 8 verify end, Time cost: 0.0002880096435546875
1 1.3390039205551147
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3], [1, 2.098055124282837, 0, 0.0003275871276855469, 0, 4], [1, 2.5893924236297607, 0, 0.00028634071350097656, 0, 5], [1, 999, 6, 4.299046754837036, 0, 6], [1, 3.5344390869140625, 0, 0.00022363662719726562, 0, 7], [1, 1.3390039205551147, 0, 0.0002880096435546875, 0, 8]]
##### [0:1] Tested against 9 ######
init opt crown verified for label 9 with bound 4.301389217376709
Image 1 pidx 9 verify end, Time cost: 0.0002980232238769531
1 4.301389217376709
[[1, 0, 0, 11.715288639068604, 0, -1], [1, 0, 0, 278.19920468330383, 0, -2], [1, 2.082270383834839, 0, 0.00021886825561523438, 0, 0], [1, 2.8901431560516357, 0, 0.0002944469451904297, 0, 1], [1, 0, 0, 0, 0, 2], [1, 2.600766658782959, 0, 0.00029206275939941406, 0, 3], [1, 2.098055124282837, 0, 0.0003275871276855469, 0, 4], [1, 2.5893924236297607, 0, 0.00028634071350097656, 0, 5], [1, 999, 6, 4.299046754837036, 0, 6], [1, 3.5344390869140625, 0, 0.00022363662719726562, 0, 7], [1, 1.3390039205551147, 0, 0.0002880096435546875, 0, 8], [1, 4.301389217376709, 0, 0.0002980232238769531, 0, 9]]
[[  1.           0.           0.          11.71528864   0.
   -1.        ]
 [  1.           0.           0.         278.19920468   0.
   -2.        ]
 [  1.           2.08227038   0.           0.00021887   0.
    0.        ]
 [  1.           2.89014316   0.           0.00029445   0.
    1.        ]
 [  1.           0.           0.           0.           0.
    2.        ]
 [  1.           2.60076666   0.           0.00029206   0.
    3.        ]
 [  1.           2.09805512   0.           0.00032759   0.
    4.        ]
 [  1.           2.58939242   0.           0.00028634   0.
    5.        ]
 [  1.         999.           6.           4.29904675   0.
    6.        ]
 [  1.           3.53443909   0.           0.00022364   0.
    7.        ]
 [  1.           1.33900392   0.           0.00028801   0.
    8.        ]
 [  1.           4.30138922   0.           0.00029802   0.
    9.        ]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [total:1]: 294.2157690525055
mean time [cnt:1]: 294.2157690525055
