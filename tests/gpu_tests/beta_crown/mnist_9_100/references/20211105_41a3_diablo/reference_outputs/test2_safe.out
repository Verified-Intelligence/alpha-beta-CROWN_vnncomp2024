Experiments at Wed Apr 13 15:41:34 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocession: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=553_end=554_iter=20_b=1024_int-beta=False_timeout=1080_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 553 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label  8  correct label  8 logits tensor([-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
         7.4579, -1.0830], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-147.4231, -168.2039, -182.1790, -186.2389, -212.7903, -158.7987,
         -177.6175, -221.1094, -221.1460]], device='cuda:0') None
best_l after optimization: 744.886962890625 with beta sum per layer: []
optimal alpha/beta time: 15.115026473999023
initial alpha-CROWN bounds: tensor([[-60.0214, -72.3603, -87.3414, -85.4015, -95.5341, -72.7295, -80.7977,
         -96.6739, -94.0271]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 8, Tested against: ['all'] ######
pgd prediction: tensor([-0.0865, -2.0638, -0.6109,  0.0789, -3.1355,  4.1166,  1.3214, -2.9461,
         6.5034, -0.5493], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([6.5899, 8.5672, 7.1143, 6.4245, 9.6388, 2.3868, 5.1820, 9.4495,    inf,
        7.0527], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 851.611611366272]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_28', 'lay4_54', 'lay4_93', 'lay4_94', 'lay4_27', 'lay4_90', 'lay4_57', 'lay4_72', 'lay4_48', 'lay4_24', 'lay4_1', 'lay4_4', 'lay4_50', 'lay4_41', 'lay4_39', 'lay4_36', 'lay4_75', 'lay4_92', 'lay4_71', 'lay4_38', 'lay4_19', 'lay4_18', 'lay4_35', 'lay4_99', 'lay4_0', 'lay4_34', 'lay4_40', 'lay4_25', 'lay4_68', 'lay4_60', 'lay4_42', 'lay4_76', 'lay4_16', 'lay4_98', 'lay4_64', 'lay4_13', 'lay4_15', 'lay4_96', 'lay4_2', 'lay4_26', 'lay4_32', 'lay4_91', 'lay4_6', 'lay4_45'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL_41a3/complete_verifier/utils.py:414: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_50, [-1.6403908729553223,0.10931909084320068]=>[-1.6403908729553223,-1e-05] (-1,-1; 15,-1), time: 0.2369s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_39, [-1.8675518035888672,0.24519109725952148]=>[-1.8675518035888672,-1e-05] (-1,-1; 15,-1), time: 0.3309s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_27, [-1.4022330045700073,0.21355128288269043]=>[-1.4022330045700073,-1e-05] (-1,-1; 15,-1), time: 0.4223s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_71, [-1.3882020711898804,0.1457245647907257]=>[-1.3882020711898804,-1e-05] (-1,-1; 15,-1), time: 0.2821s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_92, [-0.18546411395072937,1.373138189315796]=>[1e-05,1.373138189315796] (15,-1; -1,-1), time: 0.3997s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_38, [-1.2986345291137695,0.023257851600646973]=>[-1.2986345291137695,-1e-05] (-1,-1; 15,-1), time: 0.1931s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_48, [-1.1922874450683594,0.3560238182544708]=>[-0.9395611219420525,0.15409208656856396] (2,-1; 2,-1), time: 1.0829s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_4, [-1.1548452377319336,0.2032204568386078]=>[-0.9102344052001667,0.013763343824722926] (2,-1; 2,-1), time: 1.2251s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_36, [-1.123083472251892,1.0106229782104492]=>[-0.8811365585635047,0.5740667670677312] (2,-1; 2,-1), time: 1.2521s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_94, [-0.7098046541213989,1.6732800006866455]=>[-0.3339389339002727,1.4362988708789761] (2,-1; 2,-1), time: 1.3926s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_99, [-1.1792763471603394,0.01837843656539917]=>[-1.1792763471603394,-1e-05] (-1,-1; 15,-1), time: 0.1803s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_93, [-0.5328854322433472,1.8695212602615356]=>[1e-05,1.8695212602615356] (15,-1; -1,-1), time: 1.4682s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_28, [-1.4632964134216309,0.43072810769081116]=>[-1.1303935481703502,0.1686654984501113] (2,-1; 2,-1), time: 1.4966s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_75, [-0.8867471218109131,0.27298566699028015]=>[-0.7322415067756953,0.11470515847090186] (2,-1; 2,-1), time: 1.2661s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_57, [-0.4871382713317871,1.0114985704421997]=>[-0.16063380293799304,0.8771588876326355] (2,-1; 2,-1), time: 1.6582s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_1, [-0.9012502431869507,0.24949771165847778]=>[-0.6777531231984043,0.0494412910046248] (2,-1; 2,-1), time: 1.7376s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_42, [-0.1426950842142105,1.5677000284194946]=>[1e-05,1.5677000284194946] (15,-1; -1,-1), time: 0.1997s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_25, [-0.3027346432209015,1.36268949508667]=>[1e-05,1.36268949508667] (15,-1; -1,-1), time: 0.4710s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_24, [-0.2791003882884979,1.298137903213501]=>[-0.0005027354798771814,1.0340701958697731] (2,-1; 2,-1), time: 1.9832s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_54, [-0.8314392566680908,0.8294622898101807]=>[-0.38257861173277746,0.706650156514852] (2,-1; 2,-1), time: 2.0154s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_90, [-2.4710538387298584,0.2353634536266327]=>[-1.778856669470219,0.013476069510735763] (2,-1; 2,-1), time: 2.0213s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_19, [-0.32762381434440613,1.3229691982269287]=>[1e-05,1.3229691982269287] (15,-1; -1,-1), time: 1.3590s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_98, [-1.6957439184188843,0.023198500275611877]=>[-1.6957439184188843,-1e-05] (-1,-1; 15,-1), time: 0.1877s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_72, [-1.4346274137496948,0.6795051097869873]=>[-1.1441057839076674,0.24501129497582916] (2,-1; 2,-1), time: 2.1446s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_64, [-0.06516161561012268,1.8840001821517944]=>[1e-05,1.8840001821517944] (15,-1; -1,-1), time: 0.1889s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_41, [-1.2109382152557373,0.46719276905059814]=>[-0.98715594505489,0.0916658874391526] (2,-1; 2,-1), time: 2.2097s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_32, [-0.16484344005584717,1.670555591583252]=>[1e-05,1.670555591583252] (15,-1; -1,-1), time: 0.1951s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_26, [-0.08601903915405273,1.3220866918563843]=>[1e-05,1.3220866918563843] (15,-1; -1,-1), time: 0.2533s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_0, [-1.091691493988037,1.159866452217102]=>[-0.7924996183465693,0.8719402428697796] (2,-1; 2,-1), time: 1.2031s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_6, [-1.6192914247512817,0.034817904233932495]=>[-1.6192914247512817,-1e-05] (-1,-1; 15,-1), time: 0.1569s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_76, [-0.35513120889663696,1.1473861932754517]=>[-0.09250972878471153,0.9393916906068341] (2,-1; 2,-1), time: 1.1114s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_18, [-0.6176158785820007,0.5720081329345703]=>[-0.29338862918783415,0.4667413980319252] (2,-1; 2,-1), time: 2.1174s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_68, [-0.5221256613731384,1.2756409645080566]=>[-0.13719583558372467,1.0770125481194306] (2,-1; 2,-1), time: 1.5278s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_34, [-0.670137345790863,0.9415361285209656]=>[-0.37068237977779456,0.7629615975842019] (2,-1; 2,-1), time: 1.6714s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_40, [-0.37134575843811035,1.2014904022216797]=>[-0.01619951711779942,1.008305159866503] (2,-1; 2,-1), time: 1.6603s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_91, [-0.4828070402145386,1.1078814268112183]=>[-0.2822335819272994,0.8772076374326472] (2,-1; 2,-1), time: 1.0083s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_15, [-1.0668096542358398,0.6806130409240723]=>[-0.7447837956964015,0.4233987403737958] (2,-1; 2,-1), time: 1.2225s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_2, [-0.5327097177505493,1.17824125289917]=>[-0.31214328909862704,0.9279311168467665] (2,-1; 2,-1), time: 1.1164s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_35, [-1.1774122714996338,0.5023936033248901]=>[-0.8117304563784081,0.2568570530522669] (2,-1; 2,-1), time: 2.2058s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_60, [-1.0290472507476807,0.3707287311553955]=>[-0.7059914753253028,0.23399826167095544] (2,-1; 2,-1), time: 2.0102s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_45, [-1.3280658721923828,0.8128953576087952]=>[-1.0800548149212472,0.4017155160731893] (2,-1; 2,-1), time: 1.4343s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_13, [-0.56630939245224,1.67934250831604]=>[-0.11747066561186376,1.3578837123678225] (2,-1; 2,-1), time: 1.9547s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_16, [-1.306368350982666,0.7136249542236328]=>[-0.8095682724333764,0.4924691257444382] (2,-1; 2,-1), time: 2.2765s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_96, [-0.48847711086273193,1.0900901556015015]=>[-0.11305325198582523,0.8863010215766685] (2,-1; 2,-1), time: 2.2416s, #vars: 1037, #constrs: 278, improved: True
MIP improved 44 nodes out of 44 unstable nodes, lb improved 10.820575714111328, ub improved 7.501595973968506, time 5.2531
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_74', 'lay6_28', 'lay6_61', 'lay6_39', 'lay6_73', 'lay6_3', 'lay6_45', 'lay6_75', 'lay6_71', 'lay6_88', 'lay6_53', 'lay6_66', 'lay6_51', 'lay6_70', 'lay6_46', 'lay6_50', 'lay6_65', 'lay6_11', 'lay6_92', 'lay6_90', 'lay6_82', 'lay6_79', 'lay6_43', 'lay6_89', 'lay6_80', 'lay6_36', 'lay6_52', 'lay6_7', 'lay6_72', 'lay6_16', 'lay6_94', 'lay6_64', 'lay6_31', 'lay6_98', 'lay6_27', 'lay6_40', 'lay6_15', 'lay6_21', 'lay6_68', 'lay6_47', 'lay6_41', 'lay6_84', 'lay6_37', 'lay6_63', 'lay6_67', 'lay6_35', 'lay6_4', 'lay6_60', 'lay6_81', 'lay6_58', 'lay6_77', 'lay6_18', 'lay6_97', 'lay6_38', 'lay6_55', 'lay6_33', 'lay6_62', 'lay6_57', 'lay6_23', 'lay6_86', 'lay6_49', 'lay6_14', 'lay6_12', 'lay6_24', 'lay6_0', 'lay6_9', 'lay6_17'] filter: 1.0
Solving MIP for lay6_50, [-1.745639443397522,0.10026925802230835]=>[-1.745639443397522,-1e-05] (-1,-1; 15,-1), time: 0.1741s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_66, [-1.4486441612243652,0.21345239877700806]=>[-1.4486441612243652,-1e-05] (-1,-1; 15,-1), time: 0.3065s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_45, [-1.510605812072754,0.1907721757888794]=>[-1.510605812072754,-1e-05] (-1,-1; 15,-1), time: 0.3417s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_11, [-1.4560296535491943,0.07225304841995239]=>[-1.4560296535491943,-1e-05] (-1,-1; 15,-1), time: 0.1472s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_39, [-2.4151129722595215,0.6586079597473145]=>[-2.4151129722595215,-1e-05] (-1,-1; 15,-1), time: 0.7245s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_82, [-1.416489601135254,0.19363942742347717]=>[-1.416489601135254,-1e-05] (-1,-1; 15,-1), time: 0.2363s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_88, [-1.7680847644805908,0.41731390357017517]=>[-1.7680847644805908,-1e-05] (-1,-1; 15,-1), time: 1.0196s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_53, [-1.2072824239730835,0.37752383947372437]=>[-1.2072824239730835,-1e-05] (-1,-1; 15,-1), time: 1.8217s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_28, [-1.6884346008300781,0.521836519241333]=>[-1.6884346008300781,-1e-05] (-1,-1; 15,-1), time: 2.2632s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_80, [-1.3755676746368408,0.3638709783554077]=>[-1.3755676746368408,-1e-05] (-1,-1; 15,-1), time: 0.2895s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_79, [-0.9860215187072754,0.22797918319702148]=>[-0.9860215187072754,-1e-05] (-1,-1; 15,-1), time: 1.8939s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_52, [-1.2624691724777222,0.12555822730064392]=>[-1.2624691724777222,-1e-05] (-1,-1; 15,-1), time: 0.1309s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_74, [-1.2644749879837036,0.5562226176261902]=>[-1.2644749879837036,-1e-05] (-1,-1; 15,-1), time: 3.0468s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_3, [-1.142356276512146,1.3226423263549805]=>[-0.612963154452013,0.7242663169386481] (2,-1; 2,-1), time: 3.9842s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_90, [-1.8863131999969482,0.5179779529571533]=>[-1.1088397159399395,0.14791380850844585] (2,-1; 2,-1), time: 3.6627s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_16, [-1.9405839443206787,0.20829367637634277]=>[-1.9405839443206787,-1e-05] (-1,-1; 15,-1), time: 0.1502s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_7, [-1.6132463216781616,0.3747871518135071]=>[-1.6132463216781616,-1e-05] (-1,-1; 15,-1), time: 1.1467s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_64, [-0.19315671920776367,1.7078914642333984]=>[1e-05,1.7078914642333984] (15,-1; -1,-1), time: 0.1294s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_46, [-0.38982275128364563,1.1547975540161133]=>[-0.0018066534702338307,0.7509662715722033] (2,-1; 2,-1), time: 4.2728s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_27, [-1.2127994298934937,0.04098588228225708]=>[-1.2127994298934937,-1e-05] (-1,-1; 15,-1), time: 0.1310s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_71, [-1.0379672050476074,0.5819011330604553]=>[-0.5135817327925378,0.2105459284874805] (2,-1; 2,-1), time: 4.4544s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_31, [-0.21010929346084595,2.2859230041503906]=>[1e-05,2.2859230041503906] (15,-1; -1,-1), time: 0.3080s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_21, [-0.07402586936950684,2.333045482635498]=>[1e-05,2.333045482635498] (15,-1; -1,-1), time: 0.1259s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_92, [-1.2033032178878784,0.9132332801818848]=>[-0.7034672071066801,0.3268544953819755] (2,-1; 2,-1), time: 4.2809s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_68, [-1.6000635623931885,0.0072345733642578125]=>[-1.6000635623931885,-1e-05] (-1,-1; 15,-1), time: 0.1309s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_75, [-1.1178967952728271,0.7921106219291687]=>[-0.6801909070784109,0.061524028927563014] (2,-1; 2,-1), time: 5.4582s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_70, [-1.2394599914550781,0.7111034393310547]=>[-0.7388495433879368,0.2316243676742299] (2,-1; 2,-1), time: 5.7757s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_73, [-0.6295838356018066,1.0636769533157349]=>[-0.22462211186675693,0.4533618960992516] (2,-1; 2,-1), time: 5.9704s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_51, [-0.9032884240150452,1.5251086950302124]=>[-0.18426652904154123,0.9410599243844184] (2,-1; 2,-1), time: 6.4258s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_61, [-0.8027287721633911,0.6444492340087891]=>[-0.28175997084383736,0.2297103868397629] (2,-1; 2,-1), time: 7.0309s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_89, [-1.0318117141723633,1.8970153331756592]=>[-0.047163985448741175,1.3479103065801876] (2,-1; 2,-1), time: 5.5827s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_4, [-0.9402437210083008,0.09537482261657715]=>[-0.9402437210083008,-1e-05] (-1,-1; 15,-1), time: 0.2734s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_43, [-1.3826085329055786,0.3065747022628784]=>[-0.7314076052311045,0.05401868491558754] (2,-1; 2,-1), time: 6.9017s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_65, [-1.3634727001190186,0.3393464982509613]=>[-0.7519832475768601,0.08015702637892426] (2,-1; 2,-1), time: 7.9775s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_58, [-0.13851836323738098,1.110095500946045]=>[1e-05,1.110095500946045] (15,-1; -1,-1), time: 0.1304s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_98, [-0.8833906650543213,0.6814481616020203]=>[-0.5236575215156974,0.23014169779776916] (2,-1; 2,-1), time: 4.0634s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_72, [-0.8193504810333252,0.3388862907886505]=>[-0.41536578362376253,0.020816625392924677] (2,-1; 2,-1), time: 5.4283s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_77, [-1.2777087688446045,0.19188156723976135]=>[-1.2777087688446045,-1e-05] (-1,-1; 15,-1), time: 0.2552s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_97, [-1.6297924518585205,0.03071090579032898]=>[-1.6297924518585205,-1e-05] (-1,-1; 15,-1), time: 0.1297s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_38, [-0.13227659463882446,1.8057560920715332]=>[1e-05,1.8057560920715332] (15,-1; -1,-1), time: 0.1289s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_41, [-0.8874521851539612,0.8942745923995972]=>[-0.34586754831871935,0.4906975865791957] (2,-1; 2,-1), time: 3.9782s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_62, [-1.5728788375854492,0.022368192672729492]=>[-1.5728788375854492,-1e-05] (-1,-1; 15,-1), time: 0.1293s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_40, [-0.5223031044006348,1.0519847869873047]=>[-0.0342291032204365,0.7604130649039421] (2,-1; 2,-1), time: 4.4360s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_94, [-0.8012704849243164,1.3551502227783203]=>[-0.14538449994435276,0.818023355358311] (2,-1; 2,-1), time: 4.8603s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_36, [-0.7553470134735107,0.581567645072937]=>[-0.4623077280747505,0.12081645675948349] (2,-1; 2,-1), time: 6.4731s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_86, [-1.4960758686065674,0.0023679137229919434]=>[-1.4960758686065674,-1e-05] (-1,-1; 15,-1), time: 0.1301s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_84, [-1.2369307279586792,1.08756422996521]=>[-0.5813876898438989,0.6640424327416259] (2,-1; 2,-1), time: 3.8854s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_23, [-1.690221905708313,0.5574132204055786]=>[-1.690221905708313,-1e-05] (-1,-1; 15,-1), time: 0.8126s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_12, [-0.4485436677932739,2.021433115005493]=>[1e-05,2.021433115005493] (15,-1; -1,-1), time: 0.3569s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_24, [-0.14338701963424683,2.7786765098571777]=>[1e-05,2.7786765098571777] (15,-1; -1,-1), time: 0.1303s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_47, [-0.7520098686218262,1.1538944244384766]=>[-0.190080818832607,0.6944271603607529] (2,-1; 2,-1), time: 5.3780s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_17, [-1.9522662162780762,0.06429409980773926]=>[-1.9522662162780762,-1e-05] (-1,-1; 15,-1), time: 0.1317s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_37, [-0.6250828504562378,2.099297523498535]=>[-0.06668290872720173,1.331946486787872] (2,-1; 2,-1), time: 4.3978s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_63, [-0.6164649724960327,0.8310720324516296]=>[-0.16666106401744335,0.4123744963412011] (2,-1; 2,-1), time: 4.4481s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_9, [-0.36774635314941406,1.489326000213623]=>[1e-05,1.489326000213623] (15,-1; -1,-1), time: 0.7404s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_14, [-0.4392041563987732,1.0876312255859375]=>[1e-05,1.0876312255859375] (15,-1; -1,-1), time: 1.7396s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_15, [-1.5395960807800293,0.6368930339813232]=>[-0.7445249960841933,0.1321193150672447] (2,-1; 2,-1), time: 6.4972s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_67, [-0.3393094539642334,1.3553030490875244]=>[-0.06362998157853954,0.8253346436820878] (2,-1; 2,-1), time: 4.5955s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_35, [-0.42195597290992737,1.289362907409668]=>[-0.1389218378591909,0.8523467982534182] (2,-1; 2,-1), time: 3.9954s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_60, [-0.6514402627944946,1.7188760042190552]=>[-0.11178142040813441,0.9857428952076046] (2,-1; 2,-1), time: 4.8440s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_55, [-1.1675647497177124,0.7828035354614258]=>[-0.802548227797613,0.18702522001897132] (2,-1; 2,-1), time: 4.0129s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_57, [-1.7001214027404785,0.796608030796051]=>[-1.2397939657355637,0.16482200048014298] (2,-1; 2,-1), time: 4.2244s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_33, [-0.9314285516738892,0.5754343271255493]=>[-0.4807578877077957,0.1763241308833172] (2,-1; 2,-1), time: 4.4759s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_18, [-0.45048174262046814,1.0900039672851562]=>[-0.09817618755699273,0.6004924903310336] (2,-1; 2,-1), time: 5.0986s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_49, [-0.46569395065307617,1.6235692501068115]=>[-0.02543824580976875,1.0825320304693813] (2,-1; 2,-1), time: 4.4414s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_81, [-1.3188300132751465,0.4177427589893341]=>[-0.6370489533821357,0.17374221230597728] (2,-1; 2,-1), time: 5.8958s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_0, [-0.6131439208984375,1.5901844501495361]=>[-0.17636498567794778,0.7557007468853082] (2,-1; 2,-1), time: 6.3845s, #vars: 1193, #constrs: 462, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 350.13348388671875 with beta sum per layer: []
optimal alpha/beta time: 15.504709959030151
alpha-CROWN with intermediate bounds by MIP: tensor([[-28.1835, -33.8007, -41.0798, -39.8071, -44.8488, -34.5380, -38.7148,
         -45.0230, -44.1379]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 67 nodes out of 67 unstable nodes, lb improved 19.745325088500977, ub improved 22.29731559753418, time 16.9955
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_67', 'lay8_97', 'lay8_81', 'lay8_5', 'lay8_39', 'lay8_82', 'lay8_55', 'lay8_59', 'lay8_95', 'lay8_12', 'lay8_3', 'lay8_83', 'lay8_21', 'lay8_31', 'lay8_98', 'lay8_99', 'lay8_13', 'lay8_54', 'lay8_76', 'lay8_27', 'lay8_29', 'lay8_47', 'lay8_78', 'lay8_18', 'lay8_25', 'lay8_72', 'lay8_36', 'lay8_24', 'lay8_62', 'lay8_2', 'lay8_75', 'lay8_73', 'lay8_23', 'lay8_85', 'lay8_15', 'lay8_92', 'lay8_58', 'lay8_71', 'lay8_37', 'lay8_30', 'lay8_9', 'lay8_56', 'lay8_19', 'lay8_20', 'lay8_32', 'lay8_68', 'lay8_28', 'lay8_34', 'lay8_84', 'lay8_35', 'lay8_53', 'lay8_14', 'lay8_46', 'lay8_48', 'lay8_74', 'lay8_6', 'lay8_11', 'lay8_26', 'lay8_40', 'lay8_69', 'lay8_52', 'lay8_43', 'lay8_70', 'lay8_77', 'lay8_10', 'lay8_41', 'lay8_1', 'lay8_79', 'lay8_8', 'lay8_16', 'lay8_45', 'lay8_90', 'lay8_0', 'lay8_49', 'lay8_38', 'lay8_64', 'lay8_57', 'lay8_88', 'lay8_4', 'lay8_22', 'lay8_96', 'lay8_91', 'lay8_80', 'lay8_44', 'lay8_87', 'lay8_66', 'lay8_63', 'lay8_94', 'lay8_50', 'lay8_51', 'lay8_86'] filter: 1.0
Solving MIP for lay8_31, [-1.772436261177063,0.4571414887905121]=>[-1.772436261177063,-1e-05] (-1,-1; 15,-1), time: 0.1710s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_82, [-1.6922847032546997,0.37060195207595825]=>[-1.6922847032546997,-1e-05] (-1,-1; 15,-1), time: 0.2125s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_81, [-1.7475743293762207,0.6336069107055664]=>[-1.7475743293762207,-1e-05] (-1,-1; 15,-1), time: 0.2151s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_99, [-1.764749526977539,0.3520464301109314]=>[-1.764749526977539,-1e-05] (-1,-1; 15,-1), time: 0.2117s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_83, [-1.8766372203826904,0.23598235845565796]=>[-1.8766372203826904,-1e-05] (-1,-1; 15,-1), time: 0.2541s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_27, [-2.284522533416748,0.2265404462814331]=>[-2.284522533416748,-1e-05] (-1,-1; 15,-1), time: 0.1890s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_29, [-2.475768566131592,0.245863676071167]=>[-2.475768566131592,-1e-05] (-1,-1; 15,-1), time: 0.1774s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_59, [-2.1902213096618652,0.8637527227401733]=>[-2.1902213096618652,-1e-05] (-1,-1; 15,-1), time: 0.4967s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_76, [-1.4182934761047363,0.5791574120521545]=>[-1.4182934761047363,-1e-05] (-1,-1; 15,-1), time: 0.3760s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_78, [-0.5752041935920715,1.945522665977478]=>[1e-05,1.945522665977478] (15,-1; -1,-1), time: 0.1699s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_72, [-1.5748801231384277,0.5161451101303101]=>[-1.5748801231384277,-1e-05] (-1,-1; 15,-1), time: 0.1696s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_36, [-2.8896737098693848,0.24820482730865479]=>[-2.8896737098693848,-1e-05] (-1,-1; 15,-1), time: 0.1732s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_24, [-2.960524082183838,0.5521494150161743]=>[-2.960524082183838,-1e-05] (-1,-1; 15,-1), time: 0.1684s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_18, [-1.4080890417099,0.5717054605484009]=>[-1.4080890417099,-1e-05] (-1,-1; 15,-1), time: 4.1396s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_47, [-0.8029364943504333,1.2734038829803467]=>[1e-05,1.2734038829803467] (15,-1; -1,-1), time: 4.4076s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_75, [-2.440899610519409,0.3226134777069092]=>[-2.440899610519409,-1e-05] (-1,-1; 15,-1), time: 0.1740s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_73, [-1.9348697662353516,0.22147762775421143]=>[-1.9348697662353516,-1e-05] (-1,-1; 15,-1), time: 0.1687s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_54, [-1.8069937229156494,0.9704930782318115]=>[-1.8069937229156494,-1e-05] (-1,-1; 15,-1), time: 6.4257s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_2, [-0.7149618864059448,1.100022554397583]=>[1e-05,1.100022554397583] (15,-1; -1,-1), time: 3.4029s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_15, [-2.0680992603302,0.14997732639312744]=>[-2.0680992603302,-1e-05] (-1,-1; 15,-1), time: 0.1770s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_92, [-1.8826706409454346,0.1341261863708496]=>[-1.8826706409454346,-1e-05] (-1,-1; 15,-1), time: 0.1714s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_23, [-1.3811712265014648,0.5020533204078674]=>[-1.3811712265014648,-1e-05] (-1,-1; 15,-1), time: 3.3736s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_58, [-0.8256560564041138,2.9340035915374756]=>[1e-05,2.9340035915374756] (15,-1; -1,-1), time: 0.3284s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_37, [-1.9997823238372803,0.3771764039993286]=>[-1.9997823238372803,-1e-05] (-1,-1; 15,-1), time: 0.1733s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_30, [-1.8175759315490723,0.3309960961341858]=>[-1.8175759315490723,-1e-05] (-1,-1; 15,-1), time: 0.1686s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_9, [-2.2379794120788574,0.3343815803527832]=>[-2.2379794120788574,-1e-05] (-1,-1; 15,-1), time: 0.1641s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_21, [-1.4582645893096924,1.3967841863632202]=>[-0.881537583963209,0.2556376945348563] (2,-1; 2,-1), time: 10.0796s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_12, [-1.7972073554992676,1.176138162612915]=>[-1.7972073554992676,-1e-05] (-1,-1; 15,-1), time: 14.1706s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_20, [-0.5935506224632263,1.9321775436401367]=>[1e-05,1.9321775436401367] (15,-1; -1,-1), time: 0.1764s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_67, [-2.0322537422180176,1.7125372886657715]=>[-1.4315723926934494,0.22120104002006963] (2,-1; 9,-1), time: 16.8511s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_32, [-0.8157792687416077,2.5126800537109375]=>[0.0012923732101684272,2.5126800537109375] (2,-1; -1,-1), time: 2.8750s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_62, [-0.9963630437850952,1.0164271593093872]=>[-0.11555687722806805,0.36171391236016137] (2,-1; 2,-1), time: 16.2799s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_28, [-2.70005464553833,0.08019733428955078]=>[-2.70005464553833,-1e-05] (-1,-1; 15,-1), time: 0.1768s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_84, [-2.064673662185669,0.06809026002883911]=>[-2.064673662185669,-1e-05] (-1,-1; 15,-1), time: 0.1709s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_3, [-1.000993251800537,0.7267194390296936]=>[-0.1811918139708405,0.2686771967628135] (9,-1; 2,-1), time: 17.6814s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_35, [-0.3837392330169678,1.5673820972442627]=>[1e-05,1.5673820972442627] (15,-1; -1,-1), time: 0.1749s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_25, [-1.4306654930114746,0.6630767583847046]=>[-0.5719902692244033,0.04037897037574539] (2,-1; 2,-1), time: 17.1986s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_55, [-1.1994367837905884,0.8599303364753723]=>[-0.4154082418428946,0.15973103270861005] (2,-1; 2,-1), time: 17.8628s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_14, [-2.8567490577697754,0.09972953796386719]=>[-2.8567490577697754,-1e-05] (-1,-1; 15,-1), time: 0.1701s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_5, [-0.9630104303359985,0.832334041595459]=>[-0.24290580117814814,0.22299780142311815] (9,-1; 2,-1), time: 18.8878s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_6, [-1.7743489742279053,0.6338398456573486]=>[-1.7743489742279053,-1e-05] (-1,-1; 15,-1), time: 0.3254s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_95, [-0.8868867754936218,1.24849271774292]=>[-0.27416826160717944,0.4051042660621596] (2,-1; 2,-1), time: 19.3051s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_39, [-1.15174400806427,1.263051986694336]=>[-0.1405377282175785,0.6398156847639352] (9,-1; 2,-1), time: 19.9609s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_13, [-0.7300794720649719,1.1560287475585938]=>[-0.1685480293306083,0.4628568446882608] (2,-1; 9,-1), time: 19.9227s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_40, [-0.21567118167877197,2.073932647705078]=>[1e-05,2.073932647705078] (15,-1; -1,-1), time: 0.1795s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_52, [-1.1100131273269653,1.7601221799850464]=>[1e-05,1.7601221799850464] (15,-1; -1,-1), time: 0.7014s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_43, [-2.6353628635406494,0.4975459575653076]=>[-2.6353628635406494,-1e-05] (-1,-1; 15,-1), time: 0.1756s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_70, [-0.3752442002296448,1.3367515802383423]=>[1e-05,1.3367515802383423] (15,-1; -1,-1), time: 0.1730s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_98, [-1.0124304294586182,0.9493780136108398]=>[-0.1615077993875901,0.33373965217865376] (2,-1; 2,-1), time: 22.3183s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_10, [-2.1447370052337646,0.1796615719795227]=>[-2.1447370052337646,-1e-05] (-1,-1; 15,-1), time: 0.1640s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_41, [-2.037235975265503,0.35532164573669434]=>[-2.037235975265503,-1e-05] (-1,-1; 15,-1), time: 0.1679s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_1, [-1.4901528358459473,0.39142072200775146]=>[-1.4901528358459473,-1e-05] (-1,-1; 15,-1), time: 0.1725s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_97, [-1.0430588722229004,2.220076560974121]=>[-0.01436423671244642,1.1440346015993001] (2,-1; 2,-1), time: 22.8642s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_34, [-1.4131834506988525,0.6261404752731323]=>[-1.4131834506988525,-1e-05] (-1,-1; 15,-1), time: 5.8079s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_26, [-0.8313747644424438,1.2319363355636597]=>[1e-05,1.2319363355636597] (15,-1; -1,-1), time: 4.5490s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_53, [-0.6422345042228699,1.769402265548706]=>[1e-05,1.769402265548706] (15,-1; -1,-1), time: 6.3140s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_90, [-0.14383870363235474,2.556213617324829]=>[1e-05,2.556213617324829] (15,-1; -1,-1), time: 0.1703s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_0, [-0.4580345153808594,2.521021604537964]=>[1e-05,2.521021604537964] (15,-1; -1,-1), time: 0.1726s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_49, [-0.5434982776641846,2.962773323059082]=>[1e-05,2.962773323059082] (15,-1; -1,-1), time: 0.1766s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_11, [-1.7931921482086182,1.4039207696914673]=>[-0.8266361117727906,0.6005120660820696] (2,-1; 2,-1), time: 7.1795s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_71, [-3.0242271423339844,1.1054747104644775]=>[-1.6054798505703525,0.0759682491507997] (9,-1; 2,-1), time: 18.3826s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_57, [-0.3025318384170532,1.955434799194336]=>[1e-05,1.955434799194336] (15,-1; -1,-1), time: 0.1762s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_88, [-1.5538506507873535,0.9029229879379272]=>[-1.5538506507873535,-1e-05] (-1,-1; 15,-1), time: 0.4935s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_56, [-1.113420009613037,1.5806483030319214]=>[-0.2106797433835951,0.6444206278691071] (2,-1; 9,-1), time: 20.6926s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_68, [-0.8615012168884277,0.870441734790802]=>[-0.14973549276304274,0.389254491331857] (2,-1; 2,-1), time: 13.6640s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_96, [-1.7961128950119019,0.6619759798049927]=>[-1.7961128950119019,-1e-05] (-1,-1; 15,-1), time: 0.1731s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_91, [-0.0700455904006958,2.7939767837524414]=>[1e-05,2.7939767837524414] (15,-1; -1,-1), time: 0.1702s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_80, [-0.5283620357513428,1.8531404733657837]=>[1e-05,1.8531404733657837] (15,-1; -1,-1), time: 0.1683s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_19, [-1.2146105766296387,1.3386330604553223]=>[-0.42249634490319554,0.3430798647278316] (9,-1; 2,-1), time: 21.0982s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_87, [-0.06109035015106201,3.1979384422302246]=>[1e-05,3.1979384422302246] (15,-1; -1,-1), time: 0.1714s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_85, [-1.2991220951080322,1.0621721744537354]=>[-0.38019520680331337,0.31323772813602824] (9,-1; 2,-1), time: 24.7606s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_4, [-1.4707746505737305,0.7212021350860596]=>[-1.4707746505737305,-1e-05] (-1,-1; 15,-1), time: 4.0662s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_94, [-2.2133703231811523,0.16513144969940186]=>[-2.2133703231811523,-1e-05] (-1,-1; 15,-1), time: 0.1751s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_16, [-1.2055546045303345,1.0670297145843506]=>[-0.4004792308203067,0.25583944781056583] (2,-1; 2,-1), time: 11.6208s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_51, [-1.1048071384429932,0.38369300961494446]=>[-1.1048071384429932,-1e-05] (-1,-1; 15,-1), time: 0.1750s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_86, [-1.738591194152832,0.5381436944007874]=>[-1.738591194152832,-1e-05] (-1,-1; 15,-1), time: 0.1731s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_79, [-1.8390754461288452,1.0960054397583008]=>[-0.7275560064130756,0.29893794190906964] (2,-1; 2,-1), time: 12.4615s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_48, [-1.4059964418411255,0.8374804258346558]=>[-0.37943591995061643,0.17885338883043797] (9,-1; 2,-1), time: 18.5087s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_8, [-1.360640048980713,1.0007621049880981]=>[-0.6312038199481528,0.2368024134499241] (2,-1; 2,-1), time: 15.6346s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_77, [-1.9439481496810913,1.4324617385864258]=>[-0.5485572648291985,0.7069413212720704] (9,-1; 2,-1), time: 18.7698s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_22, [-1.678221344947815,0.9604068398475647]=>[-0.8763541044337164,0.09467146770786701] (2,-1; 2,-1), time: 10.0961s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_69, [-0.80999755859375,1.547681450843811]=>[-0.06194989827820703,0.7461530028206996] (2,-1; 9,-1), time: 20.5818s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_63, [-1.7155344486236572,2.4270846843719482]=>[-0.8014620830691764,1.0091159136433745] (2,-1; 2,-1), time: 9.3818s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_74, [-1.2279977798461914,0.7832887172698975]=>[-0.44006459529030667,0.1389541197825267] (9,-1; 2,-1), time: 24.2945s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_45, [-1.7080949544906616,1.506168246269226]=>[-1.0422274283925037,0.20118198502013235] (2,-1; 9,-1), time: 18.4519s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_44, [-0.8542982339859009,1.7826722860336304]=>[-0.3487578347785988,0.7095843774266143] (2,-1; 2,-1), time: 12.9706s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_64, [-1.665163278579712,1.241708517074585]=>[-0.8977259342881375,0.06527200035844875] (2,-1; 2,-1), time: 18.0771s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_46, [-1.4572324752807617,0.6587015986442566]=>[-0.6335681767671743,0.03985980533920266] (2,-1; 9,-1), time: 29.5784s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_38, [-1.030815601348877,1.4682211875915527]=>[-0.3650469864055696,0.38187661453526756] (2,-1; 9,-1), time: 22.9138s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_50, [-0.8241710662841797,0.9750097393989563]=>[-0.07681046094161373,0.39668402566476324] (9,-1; 2,-1), time: 18.9591s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_66, [-1.152012825012207,0.5104049444198608]=>[-0.5153948379995348,0.019493575930149415] (9,-1; 2,-1), time: 19.6107s, #vars: 1361, #constrs: 664, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 131.05029296875 with beta sum per layer: []
optimal alpha/beta time: 15.879549980163574
alpha-CROWN with intermediate bounds by MIP: tensor([[-10.5602, -12.4617, -15.1430, -14.5419, -16.3614, -13.6060, -15.8063,
         -16.2733, -16.2966]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 91 nodes out of 91 unstable nodes, lb improved 38.14414978027344, ub improved 45.016361236572266, time 51.8805
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_99', 'lay10_70', 'lay10_49', 'lay10_24', 'lay10_20', 'lay10_36', 'lay10_42', 'lay10_88', 'lay10_65', 'lay10_8', 'lay10_85', 'lay10_43', 'lay10_98', 'lay10_9', 'lay10_27', 'lay10_71', 'lay10_40', 'lay10_21', 'lay10_13', 'lay10_60', 'lay10_87', 'lay10_54', 'lay10_41', 'lay10_10', 'lay10_16', 'lay10_96', 'lay10_26', 'lay10_28', 'lay10_48', 'lay10_89', 'lay10_68', 'lay10_74', 'lay10_66', 'lay10_77', 'lay10_33', 'lay10_59', 'lay10_2', 'lay10_31', 'lay10_44', 'lay10_93', 'lay10_18', 'lay10_69', 'lay10_64', 'lay10_84', 'lay10_86', 'lay10_1', 'lay10_45', 'lay10_61', 'lay10_78', 'lay10_75', 'lay10_11', 'lay10_15', 'lay10_94', 'lay10_25', 'lay10_92', 'lay10_51', 'lay10_97', 'lay10_17', 'lay10_47', 'lay10_4', 'lay10_83', 'lay10_19', 'lay10_72', 'lay10_0', 'lay10_90', 'lay10_37', 'lay10_67', 'lay10_46', 'lay10_76', 'lay10_82', 'lay10_38', 'lay10_52', 'lay10_63', 'lay10_14', 'lay10_29', 'lay10_22', 'lay10_32', 'lay10_95', 'lay10_3', 'lay10_81', 'lay10_23', 'lay10_6', 'lay10_7', 'lay10_12', 'lay10_56', 'lay10_79', 'lay10_35', 'lay10_34', 'lay10_62', 'lay10_73', 'lay10_55', 'lay10_53', 'lay10_57', 'lay10_80', 'lay10_5', 'lay10_50', 'lay10_39', 'lay10_30', 'lay10_91', 'lay10_58'] filter: 1.0
Solving MIP for lay10_71, [-0.8686515092849731,2.8640670776367188]=>[1e-05,2.8640670776367188] (15,-1; -1,-1), time: 0.2395s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_27, [-2.9487969875335693,1.2295494079589844]=>[-2.9487969875335693,-1e-05] (-1,-1; 15,-1), time: 0.2635s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_49, [-3.8309106826782227,1.1779645681381226]=>[-3.8309106826782227,-1e-05] (-1,-1; 15,-1), time: 0.2662s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_9, [-2.3625974655151367,1.2724088430404663]=>[-2.3625974655151367,-1e-05] (-1,-1; 15,-1), time: 0.2753s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_42, [-1.7377671003341675,2.6051149368286133]=>[1e-05,2.6051149368286133] (15,-1; -1,-1), time: 0.2792s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_85, [-2.842539072036743,1.1785931587219238]=>[-2.842539072036743,-1e-05] (-1,-1; 15,-1), time: 0.2959s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_98, [-2.730482578277588,0.8296641707420349]=>[-2.730482578277588,-1e-05] (-1,-1; 15,-1), time: 0.2991s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_43, [-0.9612820148468018,2.74208402633667]=>[1e-05,2.74208402633667] (15,-1; -1,-1), time: 0.3201s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_60, [-3.0050196647644043,1.1551971435546875]=>[-3.0050196647644043,-1e-05] (-1,-1; 15,-1), time: 0.2166s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_10, [-3.355576992034912,1.6015695333480835]=>[-3.355576992034912,-1e-05] (-1,-1; 15,-1), time: 0.2488s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_16, [-1.330509901046753,2.658797025680542]=>[1e-05,2.658797025680542] (15,-1; -1,-1), time: 0.2387s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_41, [-2.4902215003967285,1.3880939483642578]=>[-2.4902215003967285,-1e-05] (-1,-1; 15,-1), time: 0.4437s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_96, [-1.1878480911254883,2.124379873275757]=>[1e-05,2.124379873275757] (15,-1; -1,-1), time: 0.2384s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_28, [-2.8174173831939697,1.0819859504699707]=>[-2.8174173831939697,-1e-05] (-1,-1; 15,-1), time: 0.2020s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_48, [-1.3505250215530396,3.158710479736328]=>[1e-05,3.158710479736328] (15,-1; -1,-1), time: 0.2037s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_89, [-2.6740009784698486,0.9577791690826416]=>[-2.6740009784698486,-1e-05] (-1,-1; 15,-1), time: 0.1983s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_68, [-2.531064510345459,1.1575596332550049]=>[-2.531064510345459,-1e-05] (-1,-1; 15,-1), time: 0.1978s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_74, [-2.6931099891662598,1.5858941078186035]=>[-2.6931099891662598,-1e-05] (-1,-1; 15,-1), time: 0.2031s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_66, [-2.86869478225708,1.2091020345687866]=>[-2.86869478225708,-1e-05] (-1,-1; 15,-1), time: 0.1968s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_88, [-1.9021326303482056,1.1388518810272217]=>[-1.9021326303482056,-1e-05] (-1,-1; 15,-1), time: 2.0703s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_59, [-2.1652204990386963,0.9462385177612305]=>[-2.1652204990386963,-1e-05] (-1,-1; 15,-1), time: 0.2134s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_24, [-2.216942071914673,1.510794758796692]=>[-2.216942071914673,-1e-05] (-1,-1; 15,-1), time: 4.8848s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_70, [-2.1052730083465576,1.5595951080322266]=>[-2.1052730083465576,-1e-05] (-1,-1; 15,-1), time: 6.3278s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_44, [-3.5813498497009277,2.4247207641601562]=>[-3.5813498497009277,-1e-05] (-1,-1; 15,-1), time: 1.1097s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_13, [-2.128202199935913,2.650977373123169]=>[-0.7083514213486888,0.6277408535332761] (2,-1; 9,-1), time: 19.6723s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_18, [-2.4404232501983643,0.8732923269271851]=>[-2.4404232501983643,-1e-05] (-1,-1; 15,-1), time: 0.2056s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_20, [-2.3875370025634766,1.7192996740341187]=>[-0.9881592056831102,0.1975602818110096] (2,-1; 9,-1), time: 21.9468s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_64, [-2.0506858825683594,0.8725848197937012]=>[-2.0506858825683594,-1e-05] (-1,-1; 15,-1), time: 0.2087s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_84, [-1.4540448188781738,2.376157522201538]=>[1e-05,2.376157522201538] (15,-1; -1,-1), time: 0.2025s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_86, [-3.2018487453460693,0.9264304637908936]=>[-3.2018487453460693,-1e-05] (-1,-1; 15,-1), time: 0.2023s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_8, [-2.374899387359619,1.7832715511322021]=>[-0.4959553379268174,0.34763156395132927] (9,-1; 2,-1), time: 22.7420s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_1, [-0.5450572967529297,3.1006884574890137]=>[1e-05,3.1006884574890137] (15,-1; -1,-1), time: 0.2113s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_61, [-1.4232187271118164,2.0567398071289062]=>[1e-05,2.0567398071289062] (15,-1; -1,-1), time: 0.4370s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_78, [-2.5741491317749023,0.8117623925209045]=>[-2.5741491317749023,-1e-05] (-1,-1; 15,-1), time: 0.2016s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_75, [-3.1453163623809814,0.8190146684646606]=>[-3.1453163623809814,-1e-05] (-1,-1; 15,-1), time: 0.1965s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_11, [-0.7386864423751831,3.36381196975708]=>[1e-05,3.36381196975708] (15,-1; -1,-1), time: 0.1943s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_15, [-1.229448676109314,3.066262722015381]=>[1e-05,3.066262722015381] (15,-1; -1,-1), time: 0.1990s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_2, [-2.6626713275909424,1.557868242263794]=>[-0.7032790961019377,0.48515301713133385] (9,-1; 2,-1), time: 23.2733s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_25, [-3.5960562229156494,1.1559168100357056]=>[-3.5960562229156494,-1e-05] (-1,-1; 15,-1), time: 0.1950s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_99, [-1.734259009361267,4.026808738708496]=>[-0.1409695017248152,1.4316640141780972] (9,-1; 9,-1), time: 30.0146s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_36, [-2.0579047203063965,1.7652864456176758]=>[-0.5630637842702217,0.2433170299463298] (9,-1; 9,-1), time: 30.0109s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_65, [-1.743412733078003,2.923895835876465]=>[-0.1459065760603754,0.8981768200315279] (9,-1; 9,-1), time: 30.0180s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_97, [-3.131835460662842,1.2170209884643555]=>[-3.131835460662842,-1e-05] (-1,-1; 15,-1), time: 0.2051s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_17, [-1.6782262325286865,2.7153711318969727]=>[1e-05,2.7153711318969727] (15,-1; -1,-1), time: 0.2047s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_40, [-1.8779115676879883,2.6158320903778076]=>[-0.11058883806218664,1.0459226707843694] (9,-1; 9,-1), time: 30.0144s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_21, [-1.8806054592132568,1.8723022937774658]=>[-0.7028328710618985,0.1525806162019039] (9,-1; 9,-1), time: 30.0097s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_87, [-2.162271022796631,1.522741675376892]=>[-0.6403965816012682,0.18999018883244717] (9,-1; 9,-1), time: 30.0140s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_54, [-1.9119552373886108,1.3608551025390625]=>[-0.21618350690236354,0.2511130258525416] (9,-1; 9,-1), time: 30.0102s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_4, [-2.1476147174835205,1.0397512912750244]=>[-2.1476147174835205,-1e-05] (-1,-1; 15,-1), time: 0.2022s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_19, [-0.39263057708740234,4.63545036315918]=>[1e-05,4.63545036315918] (15,-1; -1,-1), time: 0.2062s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_72, [-2.039520263671875,1.54801607131958]=>[-2.039520263671875,-1e-05] (-1,-1; 15,-1), time: 0.2007s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_47, [-1.9026743173599243,2.8843517303466797]=>[1e-05,2.8843517303466797] (15,-1; -1,-1), time: 0.4182s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_37, [-0.3708939552307129,4.0272626876831055]=>[1e-05,4.0272626876831055] (15,-1; -1,-1), time: 0.2012s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_67, [-0.9404926300048828,2.642660140991211]=>[1e-05,2.642660140991211] (15,-1; -1,-1), time: 0.2010s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_26, [-2.0405025482177734,2.1151952743530273]=>[-0.4752256257377356,0.31812348622169656] (9,-1; 9,-1), time: 30.0117s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_46, [-2.8006577491760254,1.5600917339324951]=>[-2.8006577491760254,-1e-05] (-1,-1; 15,-1), time: 0.2020s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_82, [-2.5491089820861816,0.9156259298324585]=>[-2.5491089820861816,-1e-05] (-1,-1; 15,-1), time: 0.2004s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_38, [-3.1044743061065674,1.0548115968704224]=>[-3.1044743061065674,-1e-05] (-1,-1; 15,-1), time: 0.1991s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_63, [-2.346202850341797,1.7339216470718384]=>[-2.346202850341797,-1e-05] (-1,-1; 15,-1), time: 0.2018s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_76, [-1.9346718788146973,1.422701120376587]=>[-1.9346718788146973,-1e-05] (-1,-1; 15,-1), time: 0.4213s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_77, [-1.4348033666610718,2.8877975940704346]=>[-0.05179539343844275,1.0038139804310384] (9,-1; 9,-1), time: 30.0141s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_33, [-2.1158485412597656,2.2194952964782715]=>[-0.34191889865752856,0.6032787819636382] (9,-1; 9,-1), time: 30.0139s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_32, [-2.733106851577759,0.8272793292999268]=>[-2.733106851577759,-1e-05] (-1,-1; 15,-1), time: 0.2076s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_95, [-2.7107114791870117,0.9290429949760437]=>[-2.7107114791870117,-1e-05] (-1,-1; 15,-1), time: 0.2017s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_3, [-1.8991756439208984,1.1242313385009766]=>[-1.8991756439208984,-1e-05] (-1,-1; 15,-1), time: 0.2034s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_81, [-2.789527416229248,1.067307710647583]=>[-2.789527416229248,-1e-05] (-1,-1; 15,-1), time: 0.2025s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_92, [-2.0622689723968506,1.1917307376861572]=>[-2.0622689723968506,-1e-05] (-1,-1; 15,-1), time: 6.2811s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_6, [-2.3084375858306885,1.0902599096298218]=>[-2.3084375858306885,-1e-05] (-1,-1; 15,-1), time: 0.2014s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_7, [-4.1924052238464355,0.3569061756134033]=>[-4.1924052238464355,-1e-05] (-1,-1; 15,-1), time: 0.2025s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_12, [-1.14937424659729,3.435091733932495]=>[1e-05,3.435091733932495] (15,-1; -1,-1), time: 0.2054s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_79, [-1.4137227535247803,1.977594256401062]=>[1e-05,1.977594256401062] (15,-1; -1,-1), time: 0.2038s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_31, [-1.4737800359725952,1.9632821083068848]=>[-0.030943184374787908,0.43867072497523735] (9,-1; 9,-1), time: 30.0083s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_34, [-1.3199176788330078,3.1033430099487305]=>[1e-05,3.1033430099487305] (15,-1; -1,-1), time: 0.2051s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_29, [-2.416663408279419,1.4575735330581665]=>[-2.416663408279419,-1e-05] (-1,-1; 15,-1), time: 4.5927s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_73, [-2.1939096450805664,1.3367640972137451]=>[-2.1939096450805664,-1e-05] (-1,-1; 15,-1), time: 1.1294s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_93, [-1.4083346128463745,1.710662603378296]=>[-0.3895614416860622,0.3108403310332444] (9,-1; 9,-1), time: 30.0076s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_62, [-1.7449545860290527,1.597486972808838]=>[-1.7449545860290527,-1e-05] (-1,-1; 15,-1), time: 4.7910s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_69, [-1.6684062480926514,1.8771798610687256]=>[-0.23765516402215137,0.43362650994532775] (9,-1; 9,-1), time: 30.0201s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_45, [-2.5740771293640137,1.1132011413574219]=>[-0.6082602082754855,0.06567447803922612] (9,-1; 9,-1), time: 30.0232s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_52, [-1.8753933906555176,1.8630633354187012]=>[1e-05,0.7199062232056392] (15,-1; 9,-1), time: 22.5659s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_51, [-1.6635282039642334,3.7025957107543945]=>[-0.08561410260131698,1.7204851931476022] (2,-1; 9,-1), time: 23.9700s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_50, [-2.1859490871429443,3.670215606689453]=>[1e-05,3.670215606689453] (15,-1; -1,-1), time: 0.6169s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_23, [-1.5942710638046265,4.389726638793945]=>[-0.39069831363782026,1.621306429822767] (2,-1; 9,-1), time: 22.2530s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_94, [-2.3415260314941406,1.4578832387924194]=>[-0.506145356297142,0.35928219722565125] (9,-1; 9,-1), time: 30.0130s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_39, [-2.5560460090637207,1.08897864818573]=>[-2.5560460090637207,-1e-05] (-1,-1; 15,-1), time: 0.2086s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_30, [-3.60951828956604,1.6220483779907227]=>[-3.60951828956604,-1e-05] (-1,-1; 15,-1), time: 0.1976s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_58, [-2.9382317066192627,1.0076086521148682]=>[-2.9382317066192627,-1e-05] (-1,-1; 15,-1), time: 0.2004s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_22, [-1.9787722826004028,2.807760000228882]=>[-0.7281546352253662,0.6962893592820248] (2,-1; 9,-1), time: 25.5948s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_0, [-2.1881444454193115,1.540457844734192]=>[-0.6272205337173695,0.20610669911170162] (9,-1; 9,-1), time: 30.0176s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_83, [-1.9590224027633667,1.268369436264038]=>[-0.2708339629183038,0.13075474103859214] (9,-1; 9,-1), time: 30.0859s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_90, [-2.323894739151001,1.393970251083374]=>[-0.7335391575054488,0.047155919580072786] (9,-1; 9,-1), time: 30.0193s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_14, [-2.282482624053955,1.7742466926574707]=>[-0.4492115664012534,0.5184299296332018] (9,-1; 9,-1), time: 30.0114s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_56, [-1.577465534210205,1.936087727546692]=>[-0.09204912637267698,0.5005925616989509] (9,-1; 9,-1), time: 30.0144s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_35, [-1.7460256814956665,2.280893325805664]=>[-0.3355851857541615,0.6115340859692476] (9,-1; 9,-1), time: 30.0167s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_55, [-1.4789361953735352,1.6858131885528564]=>[-0.477264158523615,0.035599382387986774] (9,-1; 2,-1), time: 26.8226s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_53, [-2.2188169956207275,1.1716095209121704]=>[-0.35148644911565274,0.14441239160486374] (9,-1; 9,-1), time: 30.0508s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_57, [-2.0433244705200195,1.862531304359436]=>[-0.3206176679782071,0.3051336555808487] (9,-1; 9,-1), time: 30.0041s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_5, [-1.8594011068344116,1.9386829137802124]=>[-0.18565535902236072,0.47243574538051863] (9,-1; 2,-1), time: 23.6240s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_80, [-1.9678351879119873,1.822332739830017]=>[-0.18057555772992198,0.6103472416310286] (9,-1; 9,-1), time: 30.0101s, #vars: 1529, #constrs: 866, improved: True
Solving MIP for lay10_91, [-1.3734840154647827,2.554600954055786]=>[-0.1910744120462879,0.7179774340980039] (9,-1; 9,-1), time: 30.0040s, #vars: 1529, #constrs: 866, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: 26.312183380126953 with beta sum per layer: []
optimal alpha/beta time: 15.76730728149414
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.7682, -2.1637, -3.2489, -1.7180, -3.3061, -4.2001, -5.6102, -1.5838,
         -2.7131]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 78.81407165527344, ub improved 108.72811889648438, time 85.0435
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_62', 'lay12_53', 'lay12_97', 'lay12_26', 'lay12_49', 'lay12_80', 'lay12_15', 'lay12_93', 'lay12_50', 'lay12_47', 'lay12_78', 'lay12_40', 'lay12_11', 'lay12_34', 'lay12_76', 'lay12_27', 'lay12_69', 'lay12_1', 'lay12_20', 'lay12_2', 'lay12_5', 'lay12_10', 'lay12_61', 'lay12_94', 'lay12_99', 'lay12_57', 'lay12_41', 'lay12_13', 'lay12_3', 'lay12_74', 'lay12_71', 'lay12_36', 'lay12_68', 'lay12_56', 'lay12_85', 'lay12_43', 'lay12_77', 'lay12_37', 'lay12_73', 'lay12_4', 'lay12_58', 'lay12_24', 'lay12_51', 'lay12_45', 'lay12_22', 'lay12_18', 'lay12_88', 'lay12_33', 'lay12_81', 'lay12_65', 'lay12_54', 'lay12_55', 'lay12_30', 'lay12_29', 'lay12_92', 'lay12_66', 'lay12_39', 'lay12_64', 'lay12_21', 'lay12_28', 'lay12_31', 'lay12_19', 'lay12_46', 'lay12_84', 'lay12_14', 'lay12_42', 'lay12_79', 'lay12_70', 'lay12_83', 'lay12_60', 'lay12_96', 'lay12_32', 'lay12_8', 'lay12_9', 'lay12_90', 'lay12_75', 'lay12_38', 'lay12_89', 'lay12_98', 'lay12_7', 'lay12_52', 'lay12_82', 'lay12_16', 'lay12_35', 'lay12_72', 'lay12_23', 'lay12_59', 'lay12_91', 'lay12_0', 'lay12_95', 'lay12_6', 'lay12_67', 'lay12_25', 'lay12_12', 'lay12_48', 'lay12_17', 'lay12_87', 'lay12_86', 'lay12_44', 'lay12_63'] filter: 1.0
Solving MIP for lay12_97, [-4.465541362762451,3.6363470554351807]=>[-4.465541362762451,-1e-05] (-1,-1; 15,-1), time: 0.2772s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_53, [-4.39426326751709,3.966449499130249]=>[-4.39426326751709,-1e-05] (-1,-1; 15,-1), time: 0.3188s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_11, [-4.833386421203613,3.2047133445739746]=>[-4.833386421203613,-1e-05] (-1,-1; 15,-1), time: 0.3208s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_50, [-3.3389008045196533,6.167030334472656]=>[1e-05,6.167030334472656] (15,-1; -1,-1), time: 0.3398s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_62, [-3.48870587348938,4.744941234588623]=>[1e-05,4.744941234588623] (15,-1; -1,-1), time: 0.3367s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_69, [-3.481520175933838,4.166213035583496]=>[1e-05,4.166213035583496] (15,-1; -1,-1), time: 0.2965s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_1, [-4.190240383148193,3.5499777793884277]=>[-4.190240383148193,-1e-05] (-1,-1; 15,-1), time: 0.3040s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_2, [-5.14430046081543,2.395998477935791]=>[-5.14430046081543,-1e-05] (-1,-1; 15,-1), time: 0.2887s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_5, [-4.699785232543945,2.788874626159668]=>[-4.699785232543945,-1e-05] (-1,-1; 15,-1), time: 0.2950s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_10, [-4.6535868644714355,2.121727228164673]=>[-4.6535868644714355,-1e-05] (-1,-1; 15,-1), time: 0.2784s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_94, [-4.030991554260254,4.1226019859313965]=>[1e-05,4.1226019859313965] (15,-1; -1,-1), time: 0.2525s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_61, [-4.916005611419678,2.173107862472534]=>[-4.916005611419678,-1e-05] (-1,-1; 15,-1), time: 0.2628s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_99, [-4.325344562530518,2.2445123195648193]=>[-4.325344562530518,-1e-05] (-1,-1; 15,-1), time: 0.2915s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_57, [-4.019467830657959,2.737825393676758]=>[-4.019467830657959,-1e-05] (-1,-1; 15,-1), time: 0.2507s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_13, [-6.125848770141602,1.945960521697998]=>[-6.125848770141602,-1e-05] (-1,-1; 15,-1), time: 0.2510s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_74, [-4.8788838386535645,1.6763830184936523]=>[-4.8788838386535645,-1e-05] (-1,-1; 15,-1), time: 0.2557s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_36, [-4.7509965896606445,3.2083816528320312]=>[-4.7509965896606445,-1e-05] (-1,-1; 15,-1), time: 0.2613s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_76, [-3.847996234893799,2.5444040298461914]=>[-3.847996234893799,-1e-05] (-1,-1; 15,-1), time: 1.7161s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_56, [-4.323965549468994,2.143383741378784]=>[-4.323965549468994,-1e-05] (-1,-1; 15,-1), time: 0.2696s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_68, [-3.541323184967041,3.7186691761016846]=>[-0.9439670601886077,-1e-05] (9,-1; 15,-1), time: 15.2994s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_43, [-4.184581756591797,2.9889063835144043]=>[-4.184581756591797,-1e-05] (-1,-1; 15,-1), time: 0.2471s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_80, [-3.7744429111480713,4.305744647979736]=>[-0.6023621563394015,0.15522215843501377] (9,-1; 9,-1), time: 30.0110s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_47, [-3.9228615760803223,4.367772579193115]=>[-0.7457145983809808,0.558066998049673] (9,-1; 9,-1), time: 30.0148s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_93, [-3.966262102127075,3.1829538345336914]=>[-0.5344914361747471,0.18069813574892857] (9,-1; 9,-1), time: 30.0124s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_40, [-3.3914644718170166,3.8088860511779785]=>[-0.25682174148862846,0.43709295437783097] (9,-1; 9,-1), time: 30.0158s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_78, [-4.481618881225586,2.488785743713379]=>[-0.6155943242832675,0.05383967507007529] (9,-1; 9,-1), time: 30.0214s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_27, [-4.168847560882568,4.646386623382568]=>[-0.3694571255088891,1.0350479295032429] (9,-1; 9,-1), time: 30.0258s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_15, [-4.456188678741455,5.691229820251465]=>[-0.5093751781476116,1.1791539180556703] (9,-1; 9,-1), time: 30.0244s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_26, [-4.718413829803467,4.034008502960205]=>[-0.8232361140356099,0.11785508220049062] (9,-1; 9,-1), time: 30.0315s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_49, [-4.281405925750732,3.226398468017578]=>[-0.7128729953625623,0.08934976727819699] (9,-1; 9,-1), time: 30.0708s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_34, [-3.8853585720062256,3.0949206352233887]=>[-0.6613868397757501,0.22143949802337282] (9,-1; 9,-1), time: 30.0839s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_73, [-5.331917762756348,3.202617883682251]=>[-5.331917762756348,-1e-05] (-1,-1; 15,-1), time: 0.2558s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_88, [-2.214552402496338,5.982298374176025]=>[1e-05,5.982298374176025] (15,-1; -1,-1), time: 0.2450s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_18, [-4.332027435302734,4.876320838928223]=>[1e-05,4.876320838928223] (15,-1; -1,-1), time: 0.2631s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_20, [-3.4518020153045654,3.636176347732544]=>[-0.47338879973587344,0.10067682781288412] (9,-1; 9,-1), time: 30.0176s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_81, [-3.008780002593994,4.981207847595215]=>[1e-05,4.981207847595215] (15,-1; -1,-1), time: 0.2464s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_54, [-4.804633140563965,2.8952465057373047]=>[-4.804633140563965,-1e-05] (-1,-1; 15,-1), time: 0.2408s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_30, [-4.709039688110352,2.4799296855926514]=>[-4.709039688110352,-1e-05] (-1,-1; 15,-1), time: 0.2512s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_41, [-3.409829616546631,3.0225324630737305]=>[-0.4153281297959005,0.27142451686858626] (9,-1; 9,-1), time: 30.0285s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_3, [-3.946998357772827,3.445915699005127]=>[-0.5661598537457628,0.04212969715320022] (9,-1; 9,-1), time: 30.0513s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_29, [-3.00593900680542,5.935221195220947]=>[1e-05,5.935221195220947] (15,-1; -1,-1), time: 0.2337s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_92, [-3.5766067504882812,2.5832879543304443]=>[-3.5766067504882812,-1e-05] (-1,-1; 15,-1), time: 0.2557s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_71, [-3.9237215518951416,2.760867118835449]=>[-0.9226834348111673,0.028874735403783113] (9,-1; 9,-1), time: 30.0789s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_66, [-3.5977373123168945,4.491203308105469]=>[1e-05,4.491203308105469] (15,-1; -1,-1), time: 0.2583s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_39, [-4.4698920249938965,1.8346971273422241]=>[-4.4698920249938965,-1e-05] (-1,-1; 15,-1), time: 0.2523s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_64, [-2.3697004318237305,3.7967076301574707]=>[1e-05,3.7967076301574707] (15,-1; -1,-1), time: 0.2485s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_31, [-2.3634767532348633,5.5604658126831055]=>[1e-05,5.5604658126831055] (15,-1; -1,-1), time: 0.2539s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_46, [-3.396176338195801,4.344677925109863]=>[1e-05,4.344677925109863] (15,-1; -1,-1), time: 0.2600s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_85, [-3.9750099182128906,4.026147842407227]=>[-0.6971694339999398,0.22723123531881678] (9,-1; 9,-1), time: 30.1047s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_19, [-4.337505340576172,2.3691840171813965]=>[-4.337505340576172,-1e-05] (-1,-1; 15,-1), time: 1.4634s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_42, [-4.839642524719238,2.1854817867279053]=>[-4.839642524719238,-1e-05] (-1,-1; 15,-1), time: 0.2582s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_79, [-4.220770835876465,2.8778204917907715]=>[-4.220770835876465,-1e-05] (-1,-1; 15,-1), time: 0.2534s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_70, [-3.868847370147705,6.114258766174316]=>[1e-05,6.114258766174316] (15,-1; -1,-1), time: 0.2550s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_83, [-6.070359706878662,3.0745396614074707]=>[-6.070359706878662,-1e-05] (-1,-1; 15,-1), time: 0.2410s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_60, [-3.4886937141418457,4.0434489250183105]=>[1e-05,4.0434489250183105] (15,-1; -1,-1), time: 0.2429s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_37, [-4.206923961639404,2.376589059829712]=>[-4.206923961639404,-1e-05] (-1,-1; 15,-1), time: 5.0180s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_14, [-3.9558238983154297,2.710787057876587]=>[-3.9558238983154297,-1e-05] (-1,-1; 15,-1), time: 5.0945s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_84, [-3.8302462100982666,2.148519515991211]=>[-3.8302462100982666,-1e-05] (-1,-1; 15,-1), time: 6.1662s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_96, [-3.5502820014953613,3.6774840354919434]=>[1e-05,3.6774840354919434] (15,-1; -1,-1), time: 9.8762s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_8, [-3.122075319290161,3.3267154693603516]=>[1e-05,3.3267154693603516] (15,-1; -1,-1), time: 7.1372s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_77, [-3.687286138534546,2.428908586502075]=>[-0.21517310300236883,0.28274796875176744] (9,-1; 9,-1), time: 30.0073s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_24, [-4.82408332824707,4.883305072784424]=>[-0.5924227798014295,1.186404110737308] (9,-1; 9,-1), time: 30.0050s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_51, [-4.247228622436523,3.344160795211792]=>[-1.14409849856755,0.08959785040205387] (9,-1; 9,-1), time: 30.0128s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_58, [-3.611837863922119,2.982250928878784]=>[-0.5513296152440323,0.22496620200200643] (9,-1; 9,-1), time: 30.0109s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_45, [-4.1874494552612305,2.6594865322113037]=>[-0.5590182620441001,0.08294129624893082] (9,-1; 9,-1), time: 30.0175s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_4, [-4.850863933563232,5.191523551940918]=>[-0.8201795963508067,0.3355270528298496] (9,-1; 9,-1), time: 30.0390s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_22, [-4.129651069641113,2.2868576049804688]=>[-0.42854986765956243,0.17988399735817667] (9,-1; 9,-1), time: 30.0685s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_89, [-5.09002685546875,2.4843993186950684]=>[-5.09002685546875,-1e-05] (-1,-1; 15,-1), time: 0.2506s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_52, [-3.8583476543426514,3.1708316802978516]=>[-3.8583476543426514,-1e-05] (-1,-1; 15,-1), time: 0.2431s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_33, [-4.18912935256958,3.355574369430542]=>[-0.38280204688462516,0.8242723736546407] (9,-1; 9,-1), time: 30.0237s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_82, [-4.480815887451172,2.681699752807617]=>[-4.480815887451172,-1e-05] (-1,-1; 15,-1), time: 0.2609s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_16, [-4.6208600997924805,2.099900722503662]=>[-4.6208600997924805,-1e-05] (-1,-1; 15,-1), time: 0.2463s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_65, [-4.316415786743164,2.55694842338562]=>[-0.23088242316640034,0.3526126724810553] (9,-1; 9,-1), time: 30.0171s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_35, [-3.394496440887451,5.304722309112549]=>[1e-05,5.304722309112549] (15,-1; -1,-1), time: 0.2471s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_23, [-3.6971089839935303,4.262555122375488]=>[1e-05,4.262555122375488] (15,-1; -1,-1), time: 0.2491s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_55, [-3.217362880706787,3.0671582221984863]=>[-0.00230777586491265,0.8885071802319097] (9,-1; 9,-1), time: 30.0137s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_6, [-4.396844387054443,2.502563714981079]=>[-4.396844387054443,-1e-05] (-1,-1; 15,-1), time: 0.2737s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_21, [-3.995839834213257,2.6593265533447266]=>[-0.46736903683097314,0.06304293486135822] (9,-1; 9,-1), time: 30.0174s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_28, [-3.6643128395080566,2.846470355987549]=>[-0.603991013648325,0.19489988706019418] (9,-1; 9,-1), time: 30.0086s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_25, [-4.52238655090332,3.497014045715332]=>[-4.52238655090332,-1e-05] (-1,-1; 15,-1), time: 0.5554s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_32, [-4.019836902618408,3.015580177307129]=>[-0.6076713902387809,0.0016412565445841883] (9,-1; 9,-1), time: 30.0189s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_87, [-2.6816606521606445,4.404926776885986]=>[1e-05,4.404926776885986] (15,-1; -1,-1), time: 0.2642s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_9, [-4.027693748474121,3.585522413253784]=>[-0.5892928016641096,0.5196599738002553] (9,-1; 9,-1), time: 30.0715s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_44, [-4.949426651000977,2.777150869369507]=>[-4.949426651000977,-1e-05] (-1,-1; 15,-1), time: 0.2600s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_17, [-4.095332145690918,3.3794264793395996]=>[-4.095332145690918,-1e-05] (-1,-1; 15,-1), time: 7.7280s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_90, [-4.626070022583008,2.8545031547546387]=>[-1.0549627955386303,0.2031111480585785] (9,-1; 9,-1), time: 30.0598s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_75, [-3.7851104736328125,4.578529357910156]=>[-0.821913187881988,0.5984936720508706] (9,-1; 9,-1), time: 30.0311s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_38, [-5.18671989440918,2.1397933959960938]=>[-0.6759700281560557,0.0954533407881996] (9,-1; 9,-1), time: 30.0114s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_7, [-3.5932743549346924,3.574929714202881]=>[-0.5969724821980945,0.11429774350134976] (9,-1; 9,-1), time: 30.0136s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_98, [-4.277393817901611,6.613555908203125]=>[-0.33944016099979096,1.5582967308323459] (9,-1; 9,-1), time: 30.0448s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_72, [-3.5402910709381104,4.681184768676758]=>[-0.17468125107164512,0.769260040157075] (9,-1; 9,-1), time: 30.0228s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_59, [-4.291318893432617,4.546867847442627]=>[-0.7988318797906853,0.7396695868916014] (9,-1; 9,-1), time: 30.0188s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_91, [-3.2344167232513428,3.9865052700042725]=>[-0.0725958227594314,0.9051230022143605] (9,-1; 9,-1), time: 30.0095s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_0, [-4.210921287536621,2.74774169921875]=>[-0.348531440083428,0.17969318056001818] (9,-1; 9,-1), time: 30.0126s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_95, [-3.682661771774292,3.787487745285034]=>[-0.5534958559128215,0.2540511160024072] (9,-1; 9,-1), time: 30.0297s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_67, [-3.8073830604553223,3.691272735595703]=>[-0.7634613868972053,0.18118148065952883] (9,-1; 9,-1), time: 30.0290s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_12, [-3.9725162982940674,2.867521047592163]=>[-0.49090759799865735,0.193899499435517] (9,-1; 9,-1), time: 30.0207s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_48, [-3.682863712310791,4.4329609870910645]=>[-0.8401150534598184,0.5450616495055981] (9,-1; 9,-1), time: 30.1682s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_86, [-3.9746642112731934,5.071529865264893]=>[-0.31158528154592513,1.2371577533343527] (9,-1; 9,-1), time: 30.0346s, #vars: 1697, #constrs: 1068, improved: True
Solving MIP for lay12_63, [-4.553985595703125,3.9472312927246094]=>[-0.565220927596348,0.1355002184311175] (9,-1; 9,-1), time: 30.0074s, #vars: 1697, #constrs: 1068, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -0.48455309867858887 with beta sum per layer: []
optimal alpha/beta time: 16.18251872062683
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.6452,  0.7522, -0.2366,  1.2179,  0.3611, -1.9761, -2.9664,  2.0057,
          0.6815]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 217.6622314453125, ub improved 242.8660430908203, time 99.3993
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_67', 'lay14_91', 'lay14_41', 'lay14_22', 'lay14_95', 'lay14_88', 'lay14_76', 'lay14_40', 'lay14_55', 'lay14_35', 'lay14_5', 'lay14_96', 'lay14_43', 'lay14_84', 'lay14_81', 'lay14_27', 'lay14_1', 'lay14_19', 'lay14_64', 'lay14_66', 'lay14_8', 'lay14_89', 'lay14_71', 'lay14_14', 'lay14_79', 'lay14_4', 'lay14_68', 'lay14_25', 'lay14_18', 'lay14_13', 'lay14_31', 'lay14_99', 'lay14_30', 'lay14_97', 'lay14_82', 'lay14_20', 'lay14_70', 'lay14_49', 'lay14_51', 'lay14_38', 'lay14_72', 'lay14_80', 'lay14_86', 'lay14_36', 'lay14_75', 'lay14_46', 'lay14_52', 'lay14_83', 'lay14_37', 'lay14_47', 'lay14_26', 'lay14_39', 'lay14_6', 'lay14_48', 'lay14_29', 'lay14_57', 'lay14_59', 'lay14_78', 'lay14_10', 'lay14_9', 'lay14_50', 'lay14_0', 'lay14_21', 'lay14_69', 'lay14_23', 'lay14_54', 'lay14_45', 'lay14_74', 'lay14_28', 'lay14_90', 'lay14_17', 'lay14_62', 'lay14_7', 'lay14_32', 'lay14_11', 'lay14_56', 'lay14_12', 'lay14_58', 'lay14_60', 'lay14_53', 'lay14_92', 'lay14_65', 'lay14_34', 'lay14_42', 'lay14_87', 'lay14_77', 'lay14_93', 'lay14_73', 'lay14_85', 'lay14_2', 'lay14_63', 'lay14_24', 'lay14_16', 'lay14_3', 'lay14_61', 'lay14_98', 'lay14_15', 'lay14_33', 'lay14_94', 'lay14_44'] filter: 1.0
Solving MIP for lay14_22, [-8.85737133026123,7.974366188049316]=>[-8.85737133026123,-1e-05] (-1,-1; 15,-1), time: 0.4718s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_41, [-6.534049034118652,10.333608627319336]=>[1e-05,10.333608627319336] (15,-1; -1,-1), time: 0.4877s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_5, [-9.538293838500977,8.841804504394531]=>[-9.538293838500977,-1e-05] (-1,-1; 15,-1), time: 0.4886s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_55, [-9.727477073669434,7.920287609100342]=>[-9.727477073669434,-1e-05] (-1,-1; 15,-1), time: 0.4903s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_95, [-7.950572967529297,7.471796989440918]=>[-7.950572967529297,-1e-05] (-1,-1; 15,-1), time: 0.8218s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_19, [-9.285633087158203,5.384158611297607]=>[-9.285633087158203,-1e-05] (-1,-1; 15,-1), time: 0.3282s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_84, [-7.934393882751465,7.660781383514404]=>[-7.934393882751465,-1e-05] (-1,-1; 15,-1), time: 0.8653s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_8, [-8.151479721069336,6.072051525115967]=>[-8.151479721069336,-1e-05] (-1,-1; 15,-1), time: 0.3032s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_40, [-6.830794811248779,9.841225624084473]=>[1e-05,9.841225624084473] (15,-1; -1,-1), time: 6.9230s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_96, [-9.388915061950684,9.449146270751953]=>[-1.8978722550374383,-1e-05] (9,-1; 15,-1), time: 15.3291s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_81, [-7.202424049377441,8.139457702636719]=>[-1.3108118462379594,-1e-05] (9,-1; 15,-1), time: 15.3436s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_91, [-8.195062637329102,8.794336318969727]=>[-1.3757049489437123,-1e-05] (9,-1; 15,-1), time: 15.3587s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_25, [-8.537945747375488,4.939416885375977]=>[-8.537945747375488,-1e-05] (-1,-1; 15,-1), time: 0.3096s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_14, [-7.205338001251221,7.965168476104736]=>[-1.0186545682703094,-1e-05] (9,-1; 15,-1), time: 15.6335s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_13, [-7.251957893371582,7.094537734985352]=>[-7.251957893371582,-1e-05] (-1,-1; 15,-1), time: 0.3253s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_31, [-7.4135661125183105,8.35980224609375]=>[1e-05,8.35980224609375] (15,-1; -1,-1), time: 0.2976s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_67, [-6.705485820770264,10.136256217956543]=>[-0.7745255786317036,0.3243560307755669] (9,-1; 9,-1), time: 30.0293s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_27, [-8.77214527130127,7.163684844970703]=>[-0.37715416476641334,0.7598898380353314] (9,-1; 9,-1), time: 30.0486s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_88, [-7.385654449462891,6.4348464012146]=>[-0.5303632919227012,0.2184488938167422] (9,-1; 9,-1), time: 30.1213s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_76, [-7.817781448364258,6.710195064544678]=>[-0.6908996110212453,0.1495818100935253] (9,-1; 9,-1), time: 30.1325s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_43, [-7.859428405761719,6.851815700531006]=>[-0.7196818204921923,0.3073161803423623] (9,-1; 9,-1), time: 30.1424s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_35, [-8.282750129699707,9.679183006286621]=>[-0.0502200001941706,1.3495541560924438] (9,-1; 9,-1), time: 30.1826s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_30, [-7.647762775421143,6.0960893630981445]=>[-7.647762775421143,-1e-05] (-1,-1; 15,-1), time: 0.3032s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_97, [-5.925745010375977,9.355883598327637]=>[1e-05,9.355883598327637] (15,-1; -1,-1), time: 0.3084s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_70, [-7.836899280548096,9.176522254943848]=>[1e-05,9.176522254943848] (15,-1; -1,-1), time: 0.3132s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_49, [-9.399710655212402,5.232049465179443]=>[-9.399710655212402,-1e-05] (-1,-1; 15,-1), time: 0.2903s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_64, [-8.598687171936035,6.480389595031738]=>[-0.7450885132331392,0.04731898444520813] (9,-1; 9,-1), time: 30.0318s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_1, [-7.641852378845215,6.628929138183594]=>[-0.35537241793013313,0.4311950598371708] (9,-1; 9,-1), time: 30.1287s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_66, [-9.553632736206055,7.02086877822876]=>[-0.8511394389578276,0.45216355667257235] (9,-1; 9,-1), time: 30.1758s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_38, [-6.157504081726074,8.442283630371094]=>[1e-05,8.442283630371094] (15,-1; -1,-1), time: 0.3072s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_68, [-7.335512161254883,7.627881050109863]=>[-0.9485307695280357,-1e-05] (9,-1; 15,-1), time: 15.3604s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_72, [-6.898201942443848,10.007699012756348]=>[1e-05,10.007699012756348] (15,-1; -1,-1), time: 0.3123s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_86, [-9.392054557800293,7.011146545410156]=>[-9.392054557800293,-1e-05] (-1,-1; 15,-1), time: 0.3149s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_89, [-7.149025917053223,8.416677474975586]=>[-0.02418203309276698,1.080497264661923] (9,-1; 9,-1), time: 30.0335s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_71, [-8.823027610778809,7.426992893218994]=>[-0.3097306328553518,1.0713587909158448] (9,-1; 9,-1), time: 30.0412s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_18, [-6.729595184326172,6.109500885009766]=>[1e-05,0.8854415629248944] (15,-1; 9,-1), time: 15.4300s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_83, [-7.608168125152588,7.6903395652771]=>[1e-05,7.6903395652771] (15,-1; -1,-1), time: 0.3317s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_6, [-8.074872970581055,8.116412162780762]=>[1e-05,8.116412162780762] (15,-1; -1,-1), time: 0.3027s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_48, [-7.248875617980957,5.560546398162842]=>[-7.248875617980957,-1e-05] (-1,-1; 15,-1), time: 0.3027s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_80, [-6.744646072387695,7.413703918457031]=>[1e-05,7.413703918457031] (15,-1; -1,-1), time: 6.0735s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_20, [-7.481689453125,8.623262405395508]=>[1e-05,8.623262405395508] (15,-1; -1,-1), time: 6.5678s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_57, [-9.2529296875,5.31037712097168]=>[-9.2529296875,-1e-05] (-1,-1; 15,-1), time: 0.3127s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_79, [-9.214644432067871,8.365829467773438]=>[-0.7470748803735404,0.4763093794467384] (9,-1; 9,-1), time: 30.0456s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_78, [-8.346221923828125,10.243868827819824]=>[1e-05,10.243868827819824] (15,-1; -1,-1), time: 5.4365s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_9, [-8.716757774353027,6.496059894561768]=>[-8.716757774353027,-1e-05] (-1,-1; 15,-1), time: 0.6217s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_4, [-7.583193778991699,7.559459686279297]=>[-0.3316635437221603,0.40925754981799556] (9,-1; 9,-1), time: 30.0461s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_0, [-7.181512832641602,6.951967239379883]=>[-7.181512832641602,-1e-05] (-1,-1; 15,-1), time: 0.6630s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_99, [-7.699221611022949,7.9184956550598145]=>[-0.23205149126046404,0.6413753336808867] (9,-1; 9,-1), time: 30.0264s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_69, [-7.853935718536377,7.43625545501709]=>[-7.853935718536377,-1e-05] (-1,-1; 15,-1), time: 0.2944s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_23, [-6.550049781799316,8.98633098602295]=>[1e-05,8.98633098602295] (15,-1; -1,-1), time: 0.3171s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_82, [-8.160228729248047,7.608181953430176]=>[-0.22311266778079702,1.204348795874888] (9,-1; 9,-1), time: 30.0254s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_51, [-8.375418663024902,6.224727153778076]=>[-0.11232573452569973,0.9187489231503072] (9,-1; 9,-1), time: 30.0112s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_36, [-7.962934970855713,7.456307411193848]=>[-0.37515983280117876,0.30953868899180337] (9,-1; 9,-1), time: 30.0212s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_75, [-7.788340091705322,6.185048580169678]=>[-0.4598410107894881,0.47253507586695465] (9,-1; 9,-1), time: 30.0154s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_52, [-8.913496971130371,6.564247131347656]=>[-0.60032950985784,0.19466146095172854] (9,-1; 9,-1), time: 30.0182s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_46, [-9.22828483581543,6.536914825439453]=>[-0.7290977896920489,0.22110292862837075] (9,-1; 9,-1), time: 30.1822s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_47, [-8.123745918273926,7.409106254577637]=>[-1.0419938888257463,0.2850338154798236] (9,-1; 9,-1), time: 30.0512s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_26, [-7.859467029571533,7.312039852142334]=>[-0.3834655522124225,0.8618546007676785] (9,-1; 9,-1), time: 30.0526s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_37, [-8.995260238647461,6.684759140014648]=>[-0.640519846219216,0.3257697468577057] (9,-1; 9,-1), time: 30.1620s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_17, [-9.378959655761719,4.551698207855225]=>[-9.378959655761719,-1e-05] (-1,-1; 15,-1), time: 0.2999s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_62, [-8.382125854492188,10.338770866394043]=>[1e-05,10.338770866394043] (15,-1; -1,-1), time: 0.3191s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_7, [-9.954439163208008,5.859369277954102]=>[-9.954439163208008,-1e-05] (-1,-1; 15,-1), time: 0.2977s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_56, [-6.862488746643066,8.843124389648438]=>[1e-05,8.843124389648438] (15,-1; -1,-1), time: 0.3145s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_39, [-8.531625747680664,5.66743803024292]=>[-0.5833084072462885,0.44177837714619095] (9,-1; 9,-1), time: 30.3119s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_60, [-9.642557144165039,5.477020263671875]=>[-9.642557144165039,-1e-05] (-1,-1; 15,-1), time: 0.3301s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_29, [-7.896432399749756,7.587945938110352]=>[-0.42137292469995435,0.7284682947570619] (9,-1; 9,-1), time: 30.1381s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_65, [-8.390823364257812,11.443610191345215]=>[1e-05,11.443610191345215] (15,-1; -1,-1), time: 0.3061s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_34, [-9.36329460144043,5.731134414672852]=>[-9.36329460144043,-1e-05] (-1,-1; 15,-1), time: 0.3240s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_59, [-7.7986531257629395,7.59340763092041]=>[-0.630245627595108,0.359819709429536] (9,-1; 9,-1), time: 30.0675s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_87, [-8.010760307312012,8.380191802978516]=>[1e-05,8.380191802978516] (15,-1; -1,-1), time: 0.2965s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_10, [-8.783945083618164,7.875427722930908]=>[-0.28747742031657914,0.9347126943570225] (9,-1; 9,-1), time: 30.1281s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_77, [-7.830308437347412,6.219586372375488]=>[-7.830308437347412,-1e-05] (-1,-1; 15,-1), time: 0.3243s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_93, [-9.02033805847168,6.037347316741943]=>[-9.02033805847168,-1e-05] (-1,-1; 15,-1), time: 0.6398s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_85, [-8.290030479431152,5.651151180267334]=>[-8.290030479431152,-1e-05] (-1,-1; 15,-1), time: 0.3233s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_2, [-9.44685173034668,8.305408477783203]=>[-9.44685173034668,-1e-05] (-1,-1; 15,-1), time: 0.3234s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_50, [-8.477956771850586,6.158524990081787]=>[-0.45289227944662563,0.29500004185940737] (9,-1; 9,-1), time: 30.2463s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_90, [-7.030045509338379,6.812684059143066]=>[1e-05,1.4378380548819758] (15,-1; 9,-1), time: 15.3126s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_63, [-8.639161109924316,7.9030609130859375]=>[-8.639161109924316,-1e-05] (-1,-1; 15,-1), time: 7.6915s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_21, [-7.225492000579834,6.881999492645264]=>[-0.14950635864720593,0.47622556169493424] (9,-1; 9,-1), time: 30.0962s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_92, [-8.360138893127441,5.13369083404541]=>[1e-05,1.1480174662761733] (15,-1; 9,-1), time: 15.3245s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_98, [-10.441377639770508,6.382540702819824]=>[-10.441377639770508,-1e-05] (-1,-1; 15,-1), time: 0.3210s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_15, [-7.914702892303467,6.233379364013672]=>[-7.914702892303467,-1e-05] (-1,-1; 15,-1), time: 0.3097s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_33, [-6.95237398147583,9.397727012634277]=>[1e-05,9.397727012634277] (15,-1; -1,-1), time: 0.3069s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_54, [-9.089513778686523,7.810307502746582]=>[-0.5722880872374193,0.5210941091563688] (9,-1; 9,-1), time: 30.1710s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_73, [-7.436925411224365,6.831150054931641]=>[1e-05,1.1591592474814927] (15,-1; 9,-1), time: 15.4043s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_94, [-8.629117965698242,6.744758129119873]=>[-8.629117965698242,-1e-05] (-1,-1; 15,-1), time: 6.0005s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_53, [-7.93709659576416,7.488243579864502]=>[1e-05,0.9551935058037262] (15,-1; 9,-1), time: 22.6173s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_45, [-8.91263198852539,5.627121448516846]=>[-0.7456260285372588,0.26716755835629147] (9,-1; 9,-1), time: 30.1360s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_74, [-8.497920989990234,6.084572792053223]=>[-0.4327439012073136,0.5495189210541398] (9,-1; 9,-1), time: 30.1533s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_28, [-7.871541976928711,7.996538162231445]=>[-0.6316559293985913,0.19614511489675127] (9,-1; 9,-1), time: 30.0196s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_11, [-10.749166488647461,7.82386589050293]=>[-0.5464873171857735,1.0496664085136997] (9,-1; 9,-1), time: 30.0084s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_32, [-6.989657402038574,7.071738243103027]=>[-0.48710080679953743,0.6194939396852451] (9,-1; 9,-1), time: 30.1427s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_58, [-7.267636299133301,7.650992393493652]=>[-0.028450048742201715,1.0006924063883638] (9,-1; 9,-1), time: 30.0320s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_12, [-7.10057258605957,8.530696868896484]=>[-0.41788044969388416,0.35492557168354805] (9,-1; 9,-1), time: 30.1249s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_42, [-7.068112850189209,7.323205471038818]=>[-0.8571636087224089,0.02623271173698881] (9,-1; 9,-1), time: 30.0203s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_24, [-7.567464828491211,7.772768974304199]=>[-0.19667632248365233,0.7039248069460678] (9,-1; 9,-1), time: 30.1043s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_16, [-7.65772008895874,7.823369026184082]=>[-0.15853406174613985,0.6928269741902037] (9,-1; 9,-1), time: 30.1201s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_61, [-8.11102294921875,4.960121154785156]=>[-0.48557436873238924,0.031235949152359797] (9,-1; 9,-1), time: 30.1099s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_3, [-7.6130242347717285,7.376017093658447]=>[-0.8574639766540526,0.061061337898893696] (9,-1; 9,-1), time: 30.1575s, #vars: 1885, #constrs: 1300, improved: True
Solving MIP for lay14_44, [-7.06385612487793,7.922583103179932]=>[-0.08904899787308886,0.3757867494406953] (9,-1; 9,-1), time: 30.0055s, #vars: 1885, #constrs: 1300, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -14.70682430267334 with beta sum per layer: []
optimal alpha/beta time: 16.26926565170288
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.8792,  2.4499,  1.4200,  2.6631,  2.2369, -0.7270, -1.4385,  3.8269,
          2.3962]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 529.7017822265625, ub improved 547.4317016601562, time 109.3313
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_68', 'lay16_49', 'lay16_37', 'lay16_14', 'lay16_76', 'lay16_10', 'lay16_54', 'lay16_82', 'lay16_58', 'lay16_35', 'lay16_77', 'lay16_9', 'lay16_98', 'lay16_25', 'lay16_67', 'lay16_50', 'lay16_72', 'lay16_51', 'lay16_13', 'lay16_42', 'lay16_11', 'lay16_80', 'lay16_24', 'lay16_19', 'lay16_56', 'lay16_69', 'lay16_60', 'lay16_65', 'lay16_71', 'lay16_5', 'lay16_6', 'lay16_84', 'lay16_63', 'lay16_33', 'lay16_16', 'lay16_91', 'lay16_53', 'lay16_15', 'lay16_43', 'lay16_44', 'lay16_64', 'lay16_2', 'lay16_57', 'lay16_79', 'lay16_66', 'lay16_36', 'lay16_74', 'lay16_45', 'lay16_23', 'lay16_27', 'lay16_87', 'lay16_86', 'lay16_47', 'lay16_78', 'lay16_61', 'lay16_95', 'lay16_88', 'lay16_52', 'lay16_21', 'lay16_3', 'lay16_75', 'lay16_40', 'lay16_32', 'lay16_29', 'lay16_20', 'lay16_38', 'lay16_81', 'lay16_90', 'lay16_92', 'lay16_62', 'lay16_30', 'lay16_39', 'lay16_85', 'lay16_48', 'lay16_55', 'lay16_1', 'lay16_99', 'lay16_89', 'lay16_18', 'lay16_7', 'lay16_70', 'lay16_94', 'lay16_4', 'lay16_0', 'lay16_28', 'lay16_97', 'lay16_26', 'lay16_83', 'lay16_31', 'lay16_93', 'lay16_12', 'lay16_46', 'lay16_22', 'lay16_41', 'lay16_8', 'lay16_59', 'lay16_96', 'lay16_17', 'lay16_34', 'lay16_73'] filter: 1.0
Solving MIP for lay16_58, [-16.083337783813477,14.412878036499023]=>[-16.083337783813477,-1e-05] (-1,-1; 15,-1), time: 0.4073s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_67, [-19.96674919128418,14.462320327758789]=>[-19.96674919128418,-1e-05] (-1,-1; 15,-1), time: 0.4206s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_50, [-15.547131538391113,15.225157737731934]=>[-15.547131538391113,-1e-05] (-1,-1; 15,-1), time: 0.4306s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_82, [-18.436054229736328,12.983895301818848]=>[-18.436054229736328,-1e-05] (-1,-1; 15,-1), time: 0.4685s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_35, [-20.172317504882812,13.141427040100098]=>[-20.172317504882812,-1e-05] (-1,-1; 15,-1), time: 0.4761s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_68, [-19.797557830810547,17.347078323364258]=>[-19.797557830810547,-1e-05] (-1,-1; 15,-1), time: 0.4944s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_9, [-19.849510192871094,13.43729305267334]=>[-19.849510192871094,-1e-05] (-1,-1; 15,-1), time: 0.5003s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_98, [-21.438640594482422,12.31707763671875]=>[-21.438640594482422,-1e-05] (-1,-1; 15,-1), time: 0.5414s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_51, [-19.064788818359375,16.497156143188477]=>[-19.064788818359375,-1e-05] (-1,-1; 15,-1), time: 0.4180s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_25, [-16.362716674804688,17.932802200317383]=>[1e-05,17.932802200317383] (15,-1; -1,-1), time: 0.9062s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_24, [-20.226985931396484,11.49302864074707]=>[-20.226985931396484,-1e-05] (-1,-1; 15,-1), time: 0.4827s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_56, [-18.344202041625977,9.237686157226562]=>[-18.344202041625977,-1e-05] (-1,-1; 15,-1), time: 0.4258s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_42, [-19.882421493530273,13.983779907226562]=>[-19.882421493530273,-1e-05] (-1,-1; 15,-1), time: 11.1651s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_14, [-16.846656799316406,18.729642868041992]=>[-1.7157777716365723,-1e-05] (9,-1; 15,-1), time: 15.4183s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_60, [-17.810779571533203,14.376532554626465]=>[1e-05,1.2143958222548805] (15,-1; 9,-1), time: 24.6439s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_6, [-18.692398071289062,12.740431785583496]=>[-18.692398071289062,-1e-05] (-1,-1; 15,-1), time: 0.4379s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_76, [-18.996692657470703,15.336545944213867]=>[-1.6367759393685946,0.3530666926180916] (9,-1; 9,-1), time: 30.0113s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_37, [-18.388385772705078,16.816802978515625]=>[-0.4715121191027065,0.7658338504738407] (9,-1; 9,-1), time: 30.0097s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_77, [-19.535884857177734,14.881048202514648]=>[-0.8644499010364638,0.5608328695611158] (9,-1; 9,-1), time: 30.0094s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_54, [-18.300172805786133,15.329655647277832]=>[-0.019830665371083703,1.553448670737984] (9,-1; 9,-1), time: 30.0452s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_49, [-19.26146125793457,18.731658935546875]=>[-0.5726950297277072,1.8739070280903307] (9,-1; 9,-1), time: 30.0779s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_10, [-14.973695755004883,13.022358894348145]=>[-1.2095608867726413,0.06618567108373767] (9,-1; 9,-1), time: 30.2742s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_16, [-18.86330795288086,11.792171478271484]=>[-18.86330795288086,-1e-05] (-1,-1; 15,-1), time: 0.4080s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_63, [-15.995331764221191,14.593366622924805]=>[-15.995331764221191,-1e-05] (-1,-1; 15,-1), time: 0.4362s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_13, [-16.441898345947266,14.038615226745605]=>[-0.36325590623067133,0.5548399949142785] (9,-1; 9,-1), time: 30.0052s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_72, [-20.05301856994629,14.26749038696289]=>[-0.5450508438834167,1.09179647978598] (9,-1; 9,-1), time: 30.0498s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_11, [-16.97232437133789,17.09366798400879]=>[-0.8772903921226273,0.083179548842064] (9,-1; 9,-1), time: 30.0126s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_19, [-20.073808670043945,16.93975257873535]=>[-1.2930248575039147,0.32700227712655133] (9,-1; 9,-1), time: 30.0209s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_80, [-18.514352798461914,14.996251106262207]=>[-1.2651041582167808,0.1951080963705412] (9,-1; 9,-1), time: 30.1820s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_15, [-22.701332092285156,25.666887283325195]=>[1e-05,25.666887283325195] (15,-1; -1,-1), time: 0.4136s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_43, [-21.359664916992188,23.03990936279297]=>[1e-05,23.03990936279297] (15,-1; -1,-1), time: 0.3757s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_69, [-17.29724884033203,15.589009284973145]=>[-0.9473418173635263,0.5644897365610272] (9,-1; 9,-1), time: 30.0093s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_74, [-15.908284187316895,18.732633590698242]=>[1e-05,18.732633590698242] (15,-1; -1,-1), time: 0.3941s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_65, [-16.52168083190918,18.839956283569336]=>[-1.1087798323638371,0.4673679245027114] (9,-1; 9,-1), time: 30.0246s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_45, [-19.96602439880371,20.158315658569336]=>[1e-05,20.158315658569336] (15,-1; -1,-1), time: 0.3935s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_23, [-18.976959228515625,20.289480209350586]=>[1e-05,20.289480209350586] (15,-1; -1,-1), time: 0.4153s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_27, [-19.830795288085938,15.980461120605469]=>[-19.830795288085938,-1e-05] (-1,-1; 15,-1), time: 0.4424s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_71, [-20.446237564086914,17.533126831054688]=>[-1.7024513078204442,0.6228915869774903] (9,-1; 9,-1), time: 30.3161s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_5, [-18.629465103149414,14.38571548461914]=>[-0.8502660788482936,0.544527448802278] (9,-1; 9,-1), time: 30.0215s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_91, [-23.90370750427246,22.96873664855957]=>[1e-05,3.0979505903523408] (15,-1; 9,-1), time: 15.4573s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_57, [-20.00562286376953,15.790032386779785]=>[1e-05,1.7971860975617886] (15,-1; 9,-1), time: 15.4758s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_84, [-18.10120391845703,17.72850227355957]=>[-0.9975178441053953,0.85728254612957] (9,-1; 9,-1), time: 30.0117s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_36, [-23.15775489807129,22.05632209777832]=>[1e-05,2.3724666440877993] (15,-1; 9,-1), time: 28.7701s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_33, [-13.110955238342285,15.337841987609863]=>[-0.9584399566114543,0.027505206366075282] (9,-1; 9,-1), time: 30.0099s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_53, [-18.087757110595703,16.068225860595703]=>[-0.5949743915334758,1.2396430913069265] (9,-1; 9,-1), time: 30.0070s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_3, [-19.231014251708984,14.958173751831055]=>[-19.231014251708984,-1e-05] (-1,-1; 15,-1), time: 0.3865s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_44, [-22.47294044494629,19.40646743774414]=>[-0.6922509120278715,0.8696158980999101] (9,-1; 9,-1), time: 30.0081s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_2, [-17.771499633789062,16.951513290405273]=>[-1.420378296300677,0.30209716154389776] (9,-1; 9,-1), time: 30.0170s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_64, [-20.711997985839844,19.18147850036621]=>[-0.10058996072453737,1.3459286158423187] (9,-1; 9,-1), time: 30.0631s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_79, [-19.368921279907227,16.86438751220703]=>[-1.0296359619757574,0.9577172797191719] (9,-1; 9,-1), time: 30.0067s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_66, [-18.143333435058594,20.117464065551758]=>[-0.013232074642510062,1.8435568556275763] (9,-1; 9,-1), time: 30.0819s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_87, [-20.07038116455078,17.44274139404297]=>[-1.2747394211327654,0.12985575746338857] (9,-1; 9,-1), time: 30.0172s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_88, [-17.734230041503906,16.73052978515625]=>[1e-05,1.5038911185283286] (15,-1; 9,-1), time: 15.4727s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_86, [-17.72791290283203,15.412575721740723]=>[-1.2952787711409715,0.07519731472306576] (9,-1; 9,-1), time: 30.0659s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_47, [-17.265281677246094,16.647287368774414]=>[-0.7007758563795712,0.7259382746493014] (9,-1; 9,-1), time: 30.1392s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_81, [-19.76896858215332,14.682665824890137]=>[-19.76896858215332,-1e-05] (-1,-1; 15,-1), time: 7.1833s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_39, [-19.74416732788086,17.59664535522461]=>[-19.74416732788086,-1e-05] (-1,-1; 15,-1), time: 0.4354s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_85, [-17.717147827148438,10.244885444641113]=>[-17.717147827148438,-1e-05] (-1,-1; 15,-1), time: 0.3857s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_78, [-14.883932113647461,15.511833190917969]=>[-0.6044384023437418,0.596502151838522] (9,-1; 9,-1), time: 30.0188s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_61, [-16.88222885131836,18.79073143005371]=>[-0.22230740501759405,1.5184612272997167] (9,-1; 9,-1), time: 30.0100s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_95, [-18.022911071777344,15.551874160766602]=>[-0.8824007574105591,0.31261146266116774] (9,-1; 9,-1), time: 30.0124s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_1, [-22.321590423583984,14.31882095336914]=>[-22.321590423583984,-1e-05] (-1,-1; 15,-1), time: 0.4673s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_40, [-19.44881248474121,19.144630432128906]=>[1e-05,2.8396645179703324] (15,-1; 9,-1), time: 15.6147s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_29, [-20.89345359802246,22.61163330078125]=>[-1.6026816071212133,-1e-05] (9,-1; 15,-1), time: 15.8193s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_89, [-23.357210159301758,15.129055976867676]=>[-23.357210159301758,-1e-05] (-1,-1; 15,-1), time: 0.4127s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_7, [-21.694293975830078,10.133861541748047]=>[-21.694293975830078,-1e-05] (-1,-1; 15,-1), time: 0.3876s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_30, [-16.761104583740234,16.527313232421875]=>[1e-05,1.513280925691132] (15,-1; 9,-1), time: 15.4608s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_55, [-21.027048110961914,11.799887657165527]=>[-21.027048110961914,-1e-05] (-1,-1; 15,-1), time: 12.1841s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_0, [-19.92106056213379,12.279823303222656]=>[-19.92106056213379,-1e-05] (-1,-1; 15,-1), time: 0.4717s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_52, [-19.159751892089844,12.958733558654785]=>[-0.4497241471820215,0.4115433915738819] (9,-1; 9,-1), time: 30.0064s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_97, [-19.03672218322754,11.045483589172363]=>[-19.03672218322754,-1e-05] (-1,-1; 15,-1), time: 0.4064s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_21, [-19.737350463867188,15.600367546081543]=>[-0.5308912979441137,0.48093209178530455] (9,-1; 9,-1), time: 30.0087s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_75, [-14.71786117553711,10.565071105957031]=>[-0.6313977926471818,0.15398157536309934] (9,-1; 9,-1), time: 30.0654s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_32, [-13.568524360656738,14.353621482849121]=>[-0.22946662242713514,0.9969289182828849] (9,-1; 9,-1), time: 30.0064s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_20, [-14.59556770324707,14.889934539794922]=>[-0.24405686443525898,1.1510458609982115] (9,-1; 9,-1), time: 30.0820s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_38, [-17.733583450317383,8.488259315490723]=>[-0.7365859044998088,0.09802414481971465] (9,-1; 9,-1), time: 30.1248s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_90, [-15.898454666137695,15.692122459411621]=>[-0.7309354336743167,0.39998258645855717] (9,-1; 9,-1), time: 30.0080s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_92, [-17.6363525390625,17.405405044555664]=>[-0.9229708846389343,0.1951878874517846] (9,-1; 9,-1), time: 30.0058s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_22, [-17.90146827697754,11.531535148620605]=>[-17.90146827697754,-1e-05] (-1,-1; 15,-1), time: 0.4217s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_62, [-16.314353942871094,14.30652904510498]=>[-0.0015083242422978043,1.1131014482526564] (9,-1; 9,-1), time: 30.1055s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_8, [-19.55361557006836,10.248453140258789]=>[-19.55361557006836,-1e-05] (-1,-1; 15,-1), time: 0.3740s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_59, [-20.77557373046875,11.110725402832031]=>[-20.77557373046875,-1e-05] (-1,-1; 15,-1), time: 0.3805s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_93, [-17.492158889770508,13.912939071655273]=>[-17.492158889770508,-1e-05] (-1,-1; 15,-1), time: 6.9045s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_46, [-18.117645263671875,12.284697532653809]=>[-18.117645263671875,-1e-05] (-1,-1; 15,-1), time: 7.4387s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_48, [-19.295244216918945,12.687363624572754]=>[-0.8208999949047199,0.13162020170953154] (9,-1; 9,-1), time: 30.0083s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_99, [-18.153785705566406,17.04607391357422]=>[-1.4554117489695093,0.010406204019277328] (9,-1; 9,-1), time: 30.0844s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_18, [-22.741361618041992,9.617729187011719]=>[-0.6877994881433345,0.11538241601838084] (9,-1; 9,-1), time: 30.0511s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_70, [-19.3206844329834,11.653733253479004]=>[-0.7858964394351563,0.32694638958246436] (9,-1; 9,-1), time: 30.0054s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_94, [-15.287100791931152,11.083224296569824]=>[-0.1937757359417624,0.6260404699705677] (9,-1; 9,-1), time: 30.0125s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_4, [-17.98188591003418,18.062416076660156]=>[-0.6315745574931488,0.44723109972759423] (9,-1; 9,-1), time: 30.0067s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_34, [-17.297805786132812,18.333152770996094]=>[-1.7302843401030747,-1e-05] (9,-1; 15,-1), time: 15.4114s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_28, [-18.999073028564453,12.149456024169922]=>[-1.0856777640837099,0.03177400751257798] (9,-1; 9,-1), time: 30.0205s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_26, [-17.072486877441406,12.950181007385254]=>[-0.2133914262182713,0.9013867423187002] (9,-1; 9,-1), time: 30.0108s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_83, [-20.633678436279297,13.492593765258789]=>[-1.0130385945933562,0.2721649635773129] (9,-1; 9,-1), time: 30.1136s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_31, [-21.991474151611328,19.61695098876953]=>[-0.4398456229328028,0.7161770636579551] (9,-1; 9,-1), time: 30.1087s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_12, [-16.768983840942383,12.836121559143066]=>[-0.3281004777383779,0.5140646128671926] (9,-1; 9,-1), time: 30.0077s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_41, [-16.812353134155273,16.133289337158203]=>[-0.8651429973857793,0.32589221979126093] (9,-1; 9,-1), time: 30.0242s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_17, [-15.291913032531738,17.114038467407227]=>[-0.5158415879260584,0.4989409307659446] (9,-1; 9,-1), time: 30.0073s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_96, [-17.429044723510742,12.08860969543457]=>[-0.8251445786749271,0.07578798086080746] (9,-1; 9,-1), time: 30.1460s, #vars: 2071, #constrs: 1529, improved: True
Solving MIP for lay16_73, [-16.553897857666016,13.12797737121582]=>[-0.9885476469010578,0.08272911064735462] (9,-1; 9,-1), time: 30.0639s, #vars: 2071, #constrs: 1529, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -19.779407501220703 with beta sum per layer: []
optimal alpha/beta time: 18.057376623153687
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.3259,  3.0319,  1.9994,  3.1451,  2.9552, -0.2965, -0.8690,  4.4313,
          3.0562]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 1214.9671630859375, ub improved 1366.08349609375, time 129.2065
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([10])
MIP finished with 499.3053903579712s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: -22.489072799682617 with beta sum per layer: []
optimal alpha/beta time: 16.85261082649231
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.5167,  3.3301,  2.3695,  3.3671,  3.3603, -0.0345, -0.5270,  4.7521,
          3.3549]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.5167,  3.3301,  2.3695,  3.3671,  3.3603, -0.0345, -0.5270,  4.7521,
          0.0000,  3.3549]], device='cuda:0') min: tensor(-0.5270, device='cuda:0')
time threshold left for bab: 548.2963664531708
##### [0:553] Tested against 5 ######
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.03480982780456543 with beta sum per layer: []
optimal alpha/beta time: 3.398063898086548
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0348]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.03480982780456543
layer 0 size torch.Size([100]) unstable 26
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 34
layer 3 size torch.Size([100]) unstable 34
layer 4 size torch.Size([100]) unstable 34
layer 5 size torch.Size([100]) unstable 44
layer 6 size torch.Size([100]) unstable 43
layer 7 size torch.Size([100]) unstable 53
# of unstable neurons: 296
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 49]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -0.7271221280097961 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.022837162017822266
This batch time : update_bounds func: 0.0293	 prepare: 0.0040	 bound: 0.0233	 transfer: 0.0013	 finalize: 0.0007
Accumulated time: update_bounds func: 0.0293	 prepare: 0.0040	 bound: 0.0233	 transfer: 0.0013	 finalize: 0.0007
batch bounding time:  0.029384136199951172
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0767	 pickout: 0.0021	 decision: 0.0452	 get_bound: 0.0294	 add_domain: 0.0000
No domains left, verification finished!
Cumulative time: 3.760411500930786

Image 553 pidx 5 verify end, final lower bound 999, upper bound 98.9651870727539, time: 3.85140061378479
553 999
##### [0:553] Tested against 6 ######
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.5269665718078613 with beta sum per layer: []
optimal alpha/beta time: 2.6977593898773193
alpha-CROWN with fixed intermediate bounds: tensor([[-0.5270]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.5269665718078613
layer 0 size torch.Size([100]) unstable 26
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 34
layer 3 size torch.Size([100]) unstable 34
layer 4 size torch.Size([100]) unstable 34
layer 5 size torch.Size([100]) unstable 44
layer 6 size torch.Size([100]) unstable 43
layer 7 size torch.Size([100]) unstable 53
# of unstable neurons: 296
remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 49]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.25462615489959717 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.23732657730579376]
optimal alpha/beta time: 0.8250863552093506
This batch time : update_bounds func: 0.8315	 prepare: 0.0039	 bound: 0.8256	 transfer: 0.0013	 finalize: 0.0006
Accumulated time: update_bounds func: 0.8608	 prepare: 0.0079	 bound: 0.8489	 transfer: 0.0013	 finalize: 0.0013
batch bounding time:  0.831735372543335
Current worst splitting domains [lb, ub] (depth):
[-0.43277, 98.473030] (1), 
length of domains: 1
Total time: 0.8791	 pickout: 0.0022	 decision: 0.0450	 get_bound: 0.8318	 add_domain: 0.0002
Current lb:-0.4327657222747803
2 neurons visited
0 diving domains visited
Cumulative time: 3.6341769695281982

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 15]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.261926531791687 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.23732656240463257, 0.0, 0.0]
optimal alpha/beta time: 0.616046667098999
This batch time : update_bounds func: 0.6227	 prepare: 0.0041	 bound: 0.6166	 transfer: 0.0013	 finalize: 0.0006
Accumulated time: update_bounds func: 1.4835	 prepare: 0.0121	 bound: 1.4655	 transfer: 0.0013	 finalize: 0.0020
batch bounding time:  0.6229479312896729
Current worst splitting domains [lb, ub] (depth):
[-0.35501, 98.473030] (2), 
length of domains: 1
Total time: 0.6700	 pickout: 0.0019	 decision: 0.0450	 get_bound: 0.6230	 add_domain: 0.0002
Current lb:-0.35500991344451904
4 neurons visited
0 diving domains visited
Cumulative time: 4.304342269897461

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[3, 63]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.3669852018356323 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6181881427764893
This batch time : update_bounds func: 0.6250	 prepare: 0.0043	 bound: 0.6187	 transfer: 0.0013	 finalize: 0.0006
Accumulated time: update_bounds func: 2.1085	 prepare: 0.0163	 bound: 2.0842	 transfer: 0.0013	 finalize: 0.0026
batch bounding time:  0.6252689361572266
Current worst splitting domains [lb, ub] (depth):
[-0.35501, 98.473030] (3), 
length of domains: 1
Total time: 0.6721	 pickout: 0.0019	 decision: 0.0447	 get_bound: 0.6253	 add_domain: 0.0002
Current lb:-0.35500991344451904
6 neurons visited
0 diving domains visited
Cumulative time: 4.976541757583618

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 82]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.34085798263549805 with beta sum per layer: [0.12394893169403076, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6252188682556152
This batch time : update_bounds func: 0.6323	 prepare: 0.0043	 bound: 0.6258	 transfer: 0.0014	 finalize: 0.0008
Accumulated time: update_bounds func: 2.7409	 prepare: 0.0207	 bound: 2.7100	 transfer: 0.0014	 finalize: 0.0034
batch bounding time:  0.6325697898864746
Current worst splitting domains [lb, ub] (depth):
[-0.29340, 98.473030] (4), [-0.04746, 98.473030] (4), 
length of domains: 2
Total time: 0.6796	 pickout: 0.0019	 decision: 0.0448	 get_bound: 0.6326	 add_domain: 0.0003
Current lb:-0.29339683055877686
8 neurons visited
0 diving domains visited
Cumulative time: 5.65631365776062

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 84], [7, 84]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.06533610820770264 with beta sum per layer: [0.2887808680534363, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6246612071990967
This batch time : update_bounds func: 0.6327	 prepare: 0.0049	 bound: 0.6252	 transfer: 0.0015	 finalize: 0.0011
Accumulated time: update_bounds func: 3.3736	 prepare: 0.0255	 bound: 3.3352	 transfer: 0.0015	 finalize: 0.0045
batch bounding time:  0.6329927444458008
Current worst splitting domains [lb, ub] (depth):
[-0.29340, 98.473030] (5), [-0.02888, 98.473030] (5), 
length of domains: 2
Total time: 0.6808	 pickout: 0.0023	 decision: 0.0452	 get_bound: 0.6330	 add_domain: 0.0002
Current lb:-0.29339683055877686
12 neurons visited
0 diving domains visited
Cumulative time: 6.337294340133667

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 5], [7, 5]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: 0.04769337177276611 with beta sum per layer: [0.3549623191356659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6229398250579834
This batch time : update_bounds func: 0.6310	 prepare: 0.0049	 bound: 0.6235	 transfer: 0.0014	 finalize: 0.0012
Accumulated time: update_bounds func: 4.0046	 prepare: 0.0304	 bound: 3.9587	 transfer: 0.0014	 finalize: 0.0057
batch bounding time:  0.6312837600708008
Current worst splitting domains [lb, ub] (depth):
[-0.29340, 98.473030] (6), [-0.00589, 98.473030] (6), 
length of domains: 2
Total time: 0.6786	 pickout: 0.0023	 decision: 0.0447	 get_bound: 0.6313	 add_domain: 0.0002
Current lb:-0.29339683055877686
16 neurons visited
0 diving domains visited
Cumulative time: 7.016057968139648

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 71], [4, 23]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: -0.565714955329895 with beta sum per layer: [0.37295985221862793, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3295609951019287]
optimal alpha/beta time: 0.6301887035369873
This batch time : update_bounds func: 0.6384	 prepare: 0.0051	 bound: 0.6308	 transfer: 0.0014	 finalize: 0.0011
Accumulated time: update_bounds func: 4.6431	 prepare: 0.0355	 bound: 4.5895	 transfer: 0.0014	 finalize: 0.0068
batch bounding time:  0.6386985778808594
Current worst splitting domains [lb, ub] (depth):
[-0.29340, 98.473030] (7), [-0.00589, 98.473030] (7), 
length of domains: 2
Total time: 0.6862	 pickout: 0.0024	 decision: 0.0449	 get_bound: 0.6387	 add_domain: 0.0002
Current lb:-0.29339683055877686
20 neurons visited
0 diving domains visited
Cumulative time: 7.702441453933716

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 23], [4, 22]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: -0.4490482807159424 with beta sum per layer: [0.41209492087364197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6273219585418701
This batch time : update_bounds func: 0.6356	 prepare: 0.0050	 bound: 0.6279	 transfer: 0.0015	 finalize: 0.0012
Accumulated time: update_bounds func: 5.2787	 prepare: 0.0405	 bound: 5.2174	 transfer: 0.0015	 finalize: 0.0080
batch bounding time:  0.6358554363250732
Current worst splitting domains [lb, ub] (depth):
[-0.29340, 98.473030] (8), [-0.00589, 98.473030] (8), 
length of domains: 2
Total time: 0.6835	 pickout: 0.0023	 decision: 0.0450	 get_bound: 0.6359	 add_domain: 0.0002
Current lb:-0.29339683055877686
24 neurons visited
0 diving domains visited
Cumulative time: 8.386088609695435

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[4, 22], [0, 68]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: -0.2413862943649292 with beta sum per layer: [0.4585309326648712, 0.0, 0.0, 0.0, 0.23732654750347137, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6286413669586182
This batch time : update_bounds func: 0.6370	 prepare: 0.0052	 bound: 0.6292	 transfer: 0.0015	 finalize: 0.0011
Accumulated time: update_bounds func: 5.9157	 prepare: 0.0457	 bound: 5.8466	 transfer: 0.0015	 finalize: 0.0091
batch bounding time:  0.6372873783111572
Current worst splitting domains [lb, ub] (depth):
[-0.29340, 98.473030] (9), 
length of domains: 1
Total time: 0.6849	 pickout: 0.0024	 decision: 0.0450	 get_bound: 0.6373	 add_domain: 0.0002
Current lb:-0.29339683055877686
28 neurons visited
0 diving domains visited
Cumulative time: 9.071134567260742

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 68]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0
best_l after optimization: 0.2414402961730957 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6275138854980469
This batch time : update_bounds func: 0.6346	 prepare: 0.0045	 bound: 0.6281	 transfer: 0.0014	 finalize: 0.0006
Accumulated time: update_bounds func: 6.5504	 prepare: 0.0502	 bound: 6.4747	 transfer: 0.0014	 finalize: 0.0097
batch bounding time:  0.6348602771759033
Current worst splitting domains [lb, ub] (depth):
[-0.14500, 98.473030] (10), [-0.09644, 98.473030] (10), 
length of domains: 2
Total time: 0.6821	 pickout: 0.0020	 decision: 0.0449	 get_bound: 0.6349	 add_domain: 0.0003
Current lb:-0.1449962854385376
30 neurons visited
0 diving domains visited
Cumulative time: 9.753341436386108

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[5, 98], [5, 98]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: -1.2365864515304565 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6339702606201172
This batch time : update_bounds func: 0.6423	 prepare: 0.0050	 bound: 0.6346	 transfer: 0.0015	 finalize: 0.0011
Accumulated time: update_bounds func: 7.1926	 prepare: 0.0552	 bound: 7.1092	 transfer: 0.0015	 finalize: 0.0108
batch bounding time:  0.642702579498291
Current worst splitting domains [lb, ub] (depth):
[-0.14500, 98.473030] (11), [-0.09644, 98.473030] (11), 
length of domains: 2
Total time: 0.6904	 pickout: 0.0023	 decision: 0.0451	 get_bound: 0.6428	 add_domain: 0.0002
Current lb:-0.1449962854385376
34 neurons visited
0 diving domains visited
Cumulative time: 10.44398307800293

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[0, 84], [0, 84]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: -0.24049949645996094 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.630345344543457
This batch time : update_bounds func: 0.6387	 prepare: 0.0050	 bound: 0.6309	 transfer: 0.0015	 finalize: 0.0011
Accumulated time: update_bounds func: 7.8313	 prepare: 0.0602	 bound: 7.7402	 transfer: 0.0015	 finalize: 0.0119
batch bounding time:  0.6389517784118652
Current worst splitting domains [lb, ub] (depth):
[-0.09478, 98.473030] (12), [-0.02846, 98.473030] (12), 
length of domains: 2
Total time: 0.6873	 pickout: 0.0024	 decision: 0.0456	 get_bound: 0.6390	 add_domain: 0.0003
Current lb:-0.09478163719177246
38 neurons visited
0 diving domains visited
Cumulative time: 11.131523132324219

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 77], [7, 77]]
single_node_split: True
regular batch size: 2*2, diving batch size 1*0
best_l after optimization: -0.24482190608978271 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.6282594203948975
This batch time : update_bounds func: 0.6367	 prepare: 0.0050	 bound: 0.6288	 transfer: 0.0015	 finalize: 0.0013
Accumulated time: update_bounds func: 8.4680	 prepare: 0.0653	 bound: 8.3690	 transfer: 0.0015	 finalize: 0.0132
batch bounding time:  0.6368823051452637
Current worst splitting domains [lb, ub] (depth):
[-0.05735, 98.473030] (13), 
length of domains: 1
Total time: 0.6850	 pickout: 0.0024	 decision: 0.0454	 get_bound: 0.6369	 add_domain: 0.0002
Current lb:-0.05735158920288086
42 neurons visited
0 diving domains visited
Cumulative time: 11.816691637039185

remaining dive domains: 0/-1, dive_rate:0.0
splitting decisions: [[7, 69]]
single_node_split: True
regular batch size: 2*1, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -0.1522301435470581 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
optimal alpha/beta time: 0.022985458374023438
This batch time : update_bounds func: 0.0300	 prepare: 0.0045	 bound: 0.0235	 transfer: 0.0014	 finalize: 0.0006
Accumulated time: update_bounds func: 8.4980	 prepare: 0.0697	 bound: 8.3925	 transfer: 0.0014	 finalize: 0.0138
batch bounding time:  0.03007221221923828
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.0770	 pickout: 0.0020	 decision: 0.0449	 get_bound: 0.0301	 add_domain: 0.0000
No domains left, verification finished!
Cumulative time: 11.89383316040039

Image 553 pidx 6 verify end, final lower bound 999, upper bound 98.47303009033203, time: 11.98245906829834
553 999
##### [0:553] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 3.3670547008514404
Image 553 pidx 3 verify end, final lower bound 3.3670547008514404, upper bound inf, time: 0.00048065185546875
553 3.3670547008514404
##### [0:553] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 2.5167274475097656
Image 553 pidx 0 verify end, final lower bound 2.5167274475097656, upper bound inf, time: 0.0004382133483886719
553 2.5167274475097656
##### [0:553] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 3.3548874855041504
Image 553 pidx 9 verify end, final lower bound 3.3548874855041504, upper bound inf, time: 0.00044608116149902344
553 3.3548874855041504
##### [0:553] Tested against 2 ######
Initial alpha-CROWN verified for label 2 with bound 2.3694684505462646
Image 553 pidx 2 verify end, final lower bound 2.3694684505462646, upper bound inf, time: 0.0004432201385498047
553 2.3694684505462646
##### [0:553] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 3.33010196685791
Image 553 pidx 1 verify end, final lower bound 3.33010196685791, upper bound inf, time: 0.0004456043243408203
553 3.33010196685791
##### [0:553] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 4.752081871032715
Image 553 pidx 7 verify end, final lower bound 4.752081871032715, upper bound inf, time: 0.00044345855712890625
553 4.752081871032715
##### [0:553] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 3.360257148742676
Image 553 pidx 4 verify end, final lower bound 3.360257148742676, upper bound inf, time: 0.00043702125549316406
553 3.360257148742676
##### [0:553] Tested against 8 ######
correct label, skip!
[[553.           0.           0.          15.48548841   0.
   -1.                  inf          inf]
 [553.           0.           0.           0.70265293   0.
   -3.                  inf          inf]
 [553.           0.           0.         516.21815157   0.
   -2.                  inf          inf]
 [553.         999.           2.           3.85140061   0.
    5.          98.96518707   2.38681269]
 [553.         999.          44.          11.98245907   0.
    6.          98.47303009   5.18198729]
 [553.           3.3670547    0.           0.00048065   0.
    3.                  inf   6.42447901]
 [553.           2.51672745   0.           0.00043821   0.
    0.                  inf   6.58988285]
 [553.           3.35488749   0.           0.00044608   0.
    9.                  inf   7.05270529]
 [553.           2.36946845   0.           0.00044322   0.
    2.                  inf   7.11432791]
 [553.           3.33010197   0.           0.0004456    0.
    1.                  inf   8.56720257]
 [553.           4.75208187   0.           0.00044346   0.
    7.                  inf   9.44947052]
 [553.           3.36025715   0.           0.00043702   0.
    4.                  inf   9.63883877]
 [553.           0.           0.           0.           0.
    8.                  inf          inf]]
final verified acc: 100.0%[1]
Total verification count: 1 total verified: 1
mean time [cnt:1] (excluding attack success): 547.5406339168549
