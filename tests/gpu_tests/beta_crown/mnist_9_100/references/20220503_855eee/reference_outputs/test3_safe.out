Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_9_100_nat.pth
  name: mnist_9_100
data:
  start: 1
  end: 2
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 23:31:04 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=1_end=2_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 2, correct label 2, image norm 113.13725280761719, logits tensor([-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
        -0.6332, -3.9480], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
         -0.6332, -3.9480]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-104.2363, -117.7846, -122.3606, -139.7477, -145.5125, -129.5195,
         -140.8107, -146.8014, -168.8638]], device='cuda:0') None
best_l after optimization: 524.2750244140625 with beta sum per layer: []
alpha/beta optimization time: 14.722992420196533
initial alpha-CROWN bounds: tensor([[-40.0926, -48.5785, -59.7757, -57.7135, -62.7879, -49.0081, -64.7206,
         -66.4373, -75.1609]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-75.1609, device='cuda:0', grad_fn=<MinBackward1>)
##### PGD attack: True label: 2, Tested against: ['all'] ######
pgd prediction: tensor([-0.0768,  0.0459,  4.1687, -0.1828,  0.1831, -0.8405,  2.6331, -1.2546,
        -0.1692, -3.3632], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([4.2455, 4.1228,    inf, 4.3515, 3.9856, 5.0092, 1.5356, 5.4233, 4.3379,
        7.5319], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Sorted order for labels to verify: [6, 4, 1, 0, 8, 3, 5, 7, 9, 2]
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 707.5782976150513]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_27', 'lay4_85', 'lay4_66', 'lay4_54', 'lay4_36', 'lay4_76', 'lay4_24', 'lay4_20', 'lay4_96', 'lay4_87', 'lay4_49', 'lay4_52', 'lay4_22', 'lay4_2', 'lay4_75', 'lay4_44', 'lay4_71', 'lay4_94', 'lay4_43', 'lay4_57', 'lay4_37', 'lay4_68', 'lay4_18', 'lay4_81', 'lay4_78', 'lay4_26', 'lay4_63', 'lay4_8', 'lay4_42', 'lay4_79', 'lay4_97', 'lay4_91', 'lay4_64', 'lay4_55', 'lay4_98'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_87, [-0.12283363938331604,1.1879515647888184]=>[1e-05,1.1879515647888184] (15,-1; -1,-1), time: 0.3705s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-1.0238699913024902,0.5621940493583679]=>[-0.8240684683281398,0.30630263874064917] (2,-1; 2,-1), time: 1.6654s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_20, [-1.2865536212921143,0.28118133544921875]=>[-1.0196925093333062,0.03764191029071451] (2,-1; 2,-1), time: 1.7983s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-0.43746936321258545,0.9863338470458984]=>[-0.25106102277406317,0.717788925009599] (2,-1; 2,-1), time: 1.9691s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-0.5651940107345581,0.9383771419525146]=>[-0.26215684494094843,0.7620865668540884] (2,-1; 2,-1), time: 1.9984s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-0.8365471363067627,1.2744438648223877]=>[-0.6080426510067183,0.8811222814354074] (2,-1; 2,-1), time: 1.9999s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-1.2521483898162842,0.9102969169616699]=>[-0.9172173878449541,0.6741258752775117] (2,-1; 2,-1), time: 2.0766s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-0.6134868860244751,1.0511882305145264]=>[-0.31163199585130097,0.8374043330596657] (2,-1; 2,-1), time: 2.4366s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_71, [-0.7097049951553345,1.1048752069473267]=>[-0.29469073094640713,1.010274399848806] (2,-1; 2,-1), time: 2.2289s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-1.1195772886276245,1.0060160160064697]=>[-0.9653330067927512,0.3598934164433108] (2,-1; 2,-1), time: 2.7804s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_49, [-0.9848620891571045,1.0834707021713257]=>[-0.7946616217534559,0.6733227336278726] (2,-1; 2,-1), time: 2.9118s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_81, [-0.4002448320388794,1.9441020488739014]=>[1e-05,1.9441020488739014] (15,-1; -1,-1), time: 0.5285s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_24, [-0.6442219018936157,1.0003207921981812]=>[-0.34289720943408847,0.7183069881061878] (2,-1; 2,-1), time: 3.0525s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_78, [-1.4546316862106323,0.19505417346954346]=>[-1.4546316862106323,-1e-05] (-1,-1; 15,-1), time: 0.5703s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_96, [-1.389634609222412,0.8164052963256836]=>[-1.176657502322389,0.3885188484260073] (2,-1; 2,-1), time: 3.2202s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-1.075268030166626,0.4430958330631256]=>[-0.8147166019924754,0.23114052280386688] (2,-1; 2,-1), time: 1.3344s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_66, [-0.9388822317123413,0.7437213659286499]=>[-0.7512917039914653,0.2995116114380299] (2,-1; 2,-1), time: 3.4315s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_2, [-0.4863232970237732,1.2070696353912354]=>[-0.2638943556656695,0.815175692836501] (2,-1; 2,-1), time: 3.5479s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_42, [-1.3508524894714355,0.2864314913749695]=>[-1.3508524894714355,-1e-05] (-1,-1; 15,-1), time: 0.6037s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-0.13816213607788086,2.492262125015259]=>[-0.0419550136343213,1.959628543921379] (2,-1; 2,-1), time: 2.1293s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-1.6138410568237305,0.25899219512939453]=>[-1.6138410568237305,-1e-05] (-1,-1; 15,-1), time: 0.4147s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_43, [-0.9363817572593689,0.7455302476882935]=>[-0.5987598530295275,0.5903156283649833] (2,-1; 2,-1), time: 2.0724s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-1.1565089225769043,1.107023000717163]=>[-0.9410559152345238,0.42533205374558614] (2,-1; 2,-1), time: 4.0520s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_37, [-1.3244315385818481,0.20303726196289062]=>[-1.0125041340736562,0.04334584226029589] (2,-1; 2,-1), time: 2.1888s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-0.728748083114624,0.7339929938316345]=>[-0.4456824795285348,0.569184034807632] (2,-1; 2,-1), time: 1.5076s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_57, [-1.1056232452392578,0.3916364014148712]=>[-0.7801957599598482,0.235357107770639] (2,-1; 2,-1), time: 2.5074s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-0.40843647718429565,1.602212905883789]=>[-0.02055416826523252,1.361934353327288] (2,-1; 2,-1), time: 2.5416s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-1.0799667835235596,0.8651196956634521]=>[-0.6914823520834006,0.6792824676428223] (2,-1; 2,-1), time: 1.7137s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_76, [-0.19510327279567719,1.250624179840088]=>[-0.011936966029608826,0.8672270427633108] (2,-1; 2,-1), time: 4.6968s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-0.7673658728599548,0.6318085193634033]=>[-0.5169050660227585,0.47995149222171035] (2,-1; 2,-1), time: 2.1670s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_79, [-0.7898585796356201,1.3054511547088623]=>[-0.37771222625408635,1.1263751748212423] (2,-1; 2,-1), time: 2.3223s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-1.0659337043762207,0.9577915072441101]=>[-0.7620509433137932,0.6944049999101527] (2,-1; 2,-1), time: 2.1050s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-0.38050907850265503,1.0006160736083984]=>[-0.11194490651046167,0.7523904962562984] (2,-1; 2,-1), time: 2.5088s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-1.5222840309143066,0.4242137372493744]=>[-1.0500791931348177,0.274845766989225] (2,-1; 2,-1), time: 2.6730s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-1.1315275430679321,0.7149773836135864]=>[-0.6419263483665488,0.5625945123712024] (2,-1; 2,-1), time: 3.4106s, #vars: 1047, #constrs: 293, improved: True
MIP improved 35 nodes out of 35 unstable nodes, lb improved 9.014924049377441, ub improved 9.241006851196289, time 7.6549
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_21', 'lay6_99', 'lay6_42', 'lay6_61', 'lay6_8', 'lay6_53', 'lay6_68', 'lay6_87', 'lay6_34', 'lay6_73', 'lay6_57', 'lay6_64', 'lay6_14', 'lay6_5', 'lay6_28', 'lay6_11', 'lay6_85', 'lay6_46', 'lay6_37', 'lay6_22', 'lay6_38', 'lay6_74', 'lay6_6', 'lay6_16', 'lay6_82', 'lay6_98', 'lay6_32', 'lay6_72', 'lay6_97', 'lay6_47', 'lay6_29', 'lay6_60', 'lay6_7', 'lay6_18', 'lay6_3', 'lay6_24', 'lay6_9', 'lay6_65', 'lay6_35', 'lay6_92', 'lay6_75', 'lay6_66', 'lay6_51', 'lay6_63', 'lay6_31', 'lay6_91', 'lay6_93', 'lay6_33', 'lay6_49', 'lay6_70', 'lay6_10', 'lay6_88'] filter: 1.0
Solving MIP for lay6_68, [-1.7128098011016846,0.2239479422569275]=>[-1.7128098011016846,-1e-05] (-1,-1; 15,-1), time: 0.3780s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_85, [-1.9918248653411865,0.45469629764556885]=>[-1.9918248653411865,-1e-05] (-1,-1; 15,-1), time: 0.9114s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_28, [-0.32290753722190857,1.8896535634994507]=>[1e-05,1.8896535634994507] (15,-1; -1,-1), time: 2.1214s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_42, [-1.2056858539581299,0.3259890675544739]=>[-1.2056858539581299,-1e-05] (-1,-1; 15,-1), time: 2.1942s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_5, [-1.3250315189361572,0.30916863679885864]=>[-1.3250315189361572,-1e-05] (-1,-1; 15,-1), time: 2.4195s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_34, [-1.8116930723190308,0.4554421901702881]=>[-1.8116930723190308,-1e-05] (-1,-1; 15,-1), time: 3.0735s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_99, [-1.2547955513000488,0.4617554247379303]=>[-1.2547955513000488,-1e-05] (-1,-1; 15,-1), time: 3.2661s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_57, [-1.7562291622161865,0.6320055723190308]=>[-1.7562291622161865,-1e-05] (-1,-1; 15,-1), time: 3.6254s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_38, [-1.6098932027816772,0.15508952736854553]=>[-1.6098932027816772,-0.0012626252973127379] (-1,-1; 2,-1), time: 1.6426s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_22, [-1.192803144454956,0.2908344864845276]=>[-1.192803144454956,-1e-05] (-1,-1; 15,-1), time: 2.7677s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_8, [-1.267527461051941,0.697667121887207]=>[-0.7880312753358244,0.18846871677730598] (2,-1; 2,-1), time: 6.1747s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_82, [-1.387284755706787,0.3038707673549652]=>[-1.387284755706787,-1e-05] (-1,-1; 15,-1), time: 2.2534s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_53, [-0.37956658005714417,1.101658582687378]=>[-0.06276184509104155,0.6328074181610465] (2,-1; 2,-1), time: 6.8315s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_97, [-1.6402274370193481,0.032880257815122604]=>[-1.6402274370193481,-1e-05] (-1,-1; 15,-1), time: 0.1310s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_72, [-0.8979372978210449,0.2543659210205078]=>[-0.8979372978210449,-1e-05] (-1,-1; 15,-1), time: 0.6798s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_47, [-1.410830020904541,0.1207161545753479]=>[-1.410830020904541,-1e-05] (-1,-1; 15,-1), time: 0.1301s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_98, [-0.24941188097000122,1.0418870449066162]=>[1e-05,1.0418870449066162] (15,-1; -1,-1), time: 2.1792s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_87, [-0.8753239512443542,0.4631064236164093]=>[-0.4660844361843117,0.0852500419918027] (2,-1; 2,-1), time: 7.7593s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_64, [-1.2267141342163086,0.5079362988471985]=>[-0.584305816393713,0.1332224386067817] (2,-1; 2,-1), time: 7.8129s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_11, [-0.41530895233154297,0.9556376338005066]=>[-0.022692830478554804,0.5642091506119341] (2,-1; 2,-1), time: 7.8333s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_3, [-0.02031075954437256,1.8842588663101196]=>[1e-05,1.8842588663101196] (15,-1; -1,-1), time: 0.1308s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_9, [-1.5695217847824097,0.2074202597141266]=>[-1.5695217847824097,-1e-05] (-1,-1; 15,-1), time: 0.2603s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_46, [-0.7802941203117371,0.6478804349899292]=>[-0.3107698961003825,0.3419735106427276] (2,-1; 2,-1), time: 7.0804s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_6, [-1.122422456741333,0.5118241906166077]=>[-0.7467617931743019,0.11809060289961883] (2,-1; 2,-1), time: 5.1597s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_14, [-0.816890299320221,0.7306817770004272]=>[-0.32293696095840113,0.38465143380330796] (2,-1; 2,-1), time: 8.5881s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_75, [-1.5599491596221924,0.08849918842315674]=>[-1.5599491596221924,-1e-05] (-1,-1; 15,-1), time: 0.1572s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_16, [-1.3581297397613525,0.5592328906059265]=>[-1.3581297397613525,-1e-05] (-1,-1; 15,-1), time: 5.3104s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_73, [-0.8101294040679932,0.8614826202392578]=>[-0.374215797628597,0.3172711542255067] (2,-1; 2,-1), time: 9.7561s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_63, [-1.502488374710083,0.12519344687461853]=>[-1.502488374710083,-1e-05] (-1,-1; 15,-1), time: 0.2932s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_24, [-1.6524379253387451,0.4909672439098358]=>[-1.6524379253387451,-1e-05] (-1,-1; 15,-1), time: 2.5868s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_91, [-1.7887765169143677,0.16062045097351074]=>[-1.7887765169143677,-1e-05] (-1,-1; 15,-1), time: 0.1343s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_66, [-0.48835861682891846,1.4292640686035156]=>[1e-05,1.4292640686035156] (15,-1; -1,-1), time: 2.5767s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_18, [-1.281617522239685,0.42871177196502686]=>[-1.281617522239685,-1e-05] (-1,-1; 15,-1), time: 3.7032s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_60, [-0.9605420231819153,1.2095533609390259]=>[-0.513281982695624,0.485696946294867] (2,-1; 2,-1), time: 6.0417s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_61, [-0.4348022937774658,1.2366989850997925]=>[-0.05813383461901171,0.545739438339066] (2,-1; 2,-1), time: 13.8056s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_7, [-0.8407349586486816,0.8529015779495239]=>[-0.2571757136606031,0.4507419981555421] (2,-1; 2,-1), time: 7.2013s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_88, [-1.8883978128433228,0.014211258850991726]=>[-1.8883978128433228,-1e-05] (-1,-1; 15,-1), time: 0.1318s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_31, [-1.3337403535842896,0.5479153394699097]=>[-1.3337403535842896,-1e-05] (-1,-1; 15,-1), time: 5.3078s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_35, [-0.35187098383903503,0.7652931213378906]=>[-0.08779390257879215,0.37524544446329594] (2,-1; 2,-1), time: 6.9923s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_29, [-0.8601278066635132,0.4131443500518799]=>[-0.8601278066635132,-1e-05] (-1,-1; 15,-1), time: 8.4231s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_74, [-0.8198490142822266,0.8749995231628418]=>[-0.4229727647845748,0.23983941604278272] (2,-1; 2,-1), time: 12.8947s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_70, [-1.4043796062469482,0.4944249391555786]=>[-1.4043796062469482,-1e-05] (-1,-1; 15,-1), time: 2.8365s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_37, [-1.2077045440673828,1.2495719194412231]=>[-0.595886863791572,0.41799081577906166] (2,-1; 2,-1), time: 14.5516s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_21, [-0.9975378513336182,1.3784137964248657]=>[-0.5841280522340209,0.5823400931451974] (2,-1; 9,-1), time: 17.1296s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_32, [-1.1110846996307373,0.7054616212844849]=>[-0.460863076848826,0.29553497702636067] (2,-1; 2,-1), time: 11.6790s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_65, [-0.8668595552444458,0.8082687258720398]=>[-0.316442117854425,0.43849702074001257] (2,-1; 2,-1), time: 11.7443s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_93, [-1.5377683639526367,1.0185085535049438]=>[-1.0144285818533094,0.1431540738026462] (2,-1; 2,-1), time: 9.5350s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_51, [-0.5174593925476074,1.1459089517593384]=>[-0.0015685953241120175,0.7660766106307763] (2,-1; 2,-1), time: 12.0796s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_10, [-1.1001620292663574,0.27912992238998413]=>[-0.6220547978208035,0.020469651333025245] (2,-1; 2,-1), time: 7.8155s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_92, [-0.6696638464927673,1.2497276067733765]=>[-0.3044225676373066,0.6314877707999453] (2,-1; 9,-1), time: 17.0932s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_33, [-1.0679383277893066,0.44756782054901123]=>[-0.456041881388949,0.053150931809907195] (2,-1; 2,-1), time: 14.7525s, #vars: 1207, #constrs: 483, improved: True
Solving MIP for lay6_49, [-0.7243953943252563,1.7310389280319214]=>[-0.19217833112839333,0.8824198757320836] (2,-1; 2,-1), time: 14.7520s, #vars: 1207, #constrs: 483, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 214.09544372558594 with beta sum per layer: []
alpha/beta optimization time: 17.161972045898438
alpha-CROWN with intermediate bounds by MIP: tensor([[-16.5363, -19.2488, -24.3838, -23.0384, -26.0788, -20.7473, -25.6077,
         -27.9224, -30.5320]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 52 nodes out of 52 unstable nodes, lb improved 12.417646408081055, ub improved 19.889190673828125, time 26.9409
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_5', 'lay8_67', 'lay8_39', 'lay8_98', 'lay8_49', 'lay8_82', 'lay8_55', 'lay8_58', 'lay8_42', 'lay8_80', 'lay8_83', 'lay8_12', 'lay8_97', 'lay8_9', 'lay8_47', 'lay8_78', 'lay8_76', 'lay8_13', 'lay8_86', 'lay8_52', 'lay8_89', 'lay8_1', 'lay8_87', 'lay8_25', 'lay8_79', 'lay8_54', 'lay8_27', 'lay8_56', 'lay8_3', 'lay8_28', 'lay8_35', 'lay8_38', 'lay8_70', 'lay8_31', 'lay8_66', 'lay8_16', 'lay8_30', 'lay8_85', 'lay8_77', 'lay8_94', 'lay8_74', 'lay8_72', 'lay8_71', 'lay8_17', 'lay8_57', 'lay8_48', 'lay8_46', 'lay8_99', 'lay8_43', 'lay8_50', 'lay8_90', 'lay8_96', 'lay8_2', 'lay8_61', 'lay8_73', 'lay8_34', 'lay8_75', 'lay8_64', 'lay8_20', 'lay8_36', 'lay8_32', 'lay8_68', 'lay8_40', 'lay8_69', 'lay8_6', 'lay8_0', 'lay8_65', 'lay8_84', 'lay8_26', 'lay8_93', 'lay8_60', 'lay8_4', 'lay8_22', 'lay8_8', 'lay8_62', 'lay8_33', 'lay8_88', 'lay8_53', 'lay8_44', 'lay8_41', 'lay8_63', 'lay8_59', 'lay8_51'] filter: 1.0
Solving MIP for lay8_12, [-1.8005924224853516,0.792625904083252]=>[-1.8005924224853516,-1e-05] (-1,-1; 15,-1), time: 0.2043s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_78, [-1.7264530658721924,0.4113573133945465]=>[-1.7264530658721924,-1e-05] (-1,-1; 15,-1), time: 0.2090s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_83, [-1.4545423984527588,0.26955893635749817]=>[-1.4545423984527588,-1e-05] (-1,-1; 15,-1), time: 0.2565s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_42, [-1.6109730005264282,0.7920771241188049]=>[-1.6109730005264282,-1e-05] (-1,-1; 15,-1), time: 0.2721s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_97, [-2.3096823692321777,0.14619120955467224]=>[-2.3096823692321777,-1e-05] (-1,-1; 15,-1), time: 0.2886s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_82, [-1.324859380722046,0.5743939280509949]=>[-1.324859380722046,-1e-05] (-1,-1; 15,-1), time: 0.3862s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_58, [-1.9330090284347534,0.8378811478614807]=>[-1.9330090284347534,-1e-05] (-1,-1; 15,-1), time: 0.4838s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_86, [-1.4952983856201172,0.3933785557746887]=>[-1.4952983856201172,-1e-05] (-1,-1; 15,-1), time: 0.2311s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_52, [-2.7046239376068115,0.21188746392726898]=>[-2.7046239376068115,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_79, [-2.8275887966156006,0.22702062129974365]=>[-2.8275887966156006,-1e-05] (-1,-1; 15,-1), time: 0.2371s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_89, [-1.3577728271484375,0.3755781054496765]=>[-1.3577728271484375,-1e-05] (-1,-1; 15,-1), time: 0.4863s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_87, [-1.6754047870635986,0.7097561359405518]=>[-1.6754047870635986,-1e-05] (-1,-1; 15,-1), time: 0.4362s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_54, [-1.2319566011428833,0.3897673487663269]=>[-1.2319566011428833,-1e-05] (-1,-1; 15,-1), time: 0.2649s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_3, [-1.739556074142456,0.03301689028739929]=>[-1.739556074142456,-1e-05] (-1,-1; 15,-1), time: 0.2482s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_56, [-1.6631436347961426,0.8312807083129883]=>[-1.6631436347961426,-1e-05] (-1,-1; 15,-1), time: 0.5918s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_28, [-2.22175931930542,0.3052141070365906]=>[-2.22175931930542,-1e-05] (-1,-1; 15,-1), time: 0.2219s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_35, [-1.2946536540985107,0.37291616201400757]=>[-1.2946536540985107,-1e-05] (-1,-1; 15,-1), time: 0.2390s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_70, [-1.2090802192687988,0.3581421673297882]=>[-1.2090802192687988,-1e-05] (-1,-1; 15,-1), time: 0.4762s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_31, [-1.6128267049789429,0.23472678661346436]=>[-1.6128267049789429,-1e-05] (-1,-1; 15,-1), time: 0.2783s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_9, [-1.60531747341156,0.5531508326530457]=>[-1.60531747341156,-1e-05] (-1,-1; 15,-1), time: 6.5163s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_16, [-2.3818392753601074,0.20849096775054932]=>[-2.3818392753601074,-1e-05] (-1,-1; 15,-1), time: 0.2096s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_39, [-0.9027948975563049,1.259223222732544]=>[1e-05,1.259223222732544] (15,-1; -1,-1), time: 7.1296s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_85, [-1.8447222709655762,0.25178372859954834]=>[-1.8447222709655762,-1e-05] (-1,-1; 15,-1), time: 0.2229s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_77, [-1.7946316003799438,0.21656447649002075]=>[-1.7946316003799438,-1e-05] (-1,-1; 15,-1), time: 0.2137s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_94, [-2.1619069576263428,0.15927064418792725]=>[-2.1619069576263428,-1e-05] (-1,-1; 15,-1), time: 0.2178s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_74, [-2.151362419128418,0.15447759628295898]=>[-2.151362419128418,-1e-05] (-1,-1; 15,-1), time: 0.2122s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_72, [-1.5394741296768188,0.29982542991638184]=>[-1.5394741296768188,-1e-05] (-1,-1; 15,-1), time: 0.2132s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_71, [-0.6865559816360474,3.0246405601501465]=>[1e-05,3.0246405601501465] (15,-1; -1,-1), time: 0.2036s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_98, [-1.1868973970413208,0.7576338052749634]=>[-1.1868973970413208,-1e-05] (-1,-1; 15,-1), time: 8.5344s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_17, [-1.9169937372207642,0.10425156354904175]=>[-1.9169937372207642,-1e-05] (-1,-1; 15,-1), time: 0.2107s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_48, [-2.0227620601654053,0.3032216429710388]=>[-2.0227620601654053,-1e-05] (-1,-1; 15,-1), time: 0.2039s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_46, [-1.6841449737548828,0.3043209910392761]=>[-1.6841449737548828,-1e-05] (-1,-1; 15,-1), time: 0.2160s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_99, [-1.7986146211624146,0.27382180094718933]=>[-1.7986146211624146,-1e-05] (-1,-1; 15,-1), time: 0.2064s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_67, [-1.7943754196166992,1.3734725713729858]=>[-1.7943754196166992,-1e-05] (-1,-1; 15,-1), time: 10.4631s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_50, [-1.2079111337661743,0.40653055906295776]=>[-1.2079111337661743,-1e-05] (-1,-1; 15,-1), time: 3.4261s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_57, [-1.3503425121307373,0.5990921258926392]=>[-1.3503425121307373,-1e-05] (-1,-1; 15,-1), time: 6.1234s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_1, [-1.0687612295150757,0.6467009782791138]=>[-0.44743645685638844,0.06009095577201567] (2,-1; 9,-1), time: 23.3615s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_49, [-1.6140525341033936,1.211850643157959]=>[-0.9814554687503855,0.0017813575632809075] (2,-1; 9,-1), time: 23.8920s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_76, [-0.6237650513648987,0.8074689507484436]=>[-0.07632825373197284,0.2721591997420386] (9,-1; 2,-1), time: 23.8208s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_61, [-1.5895229578018188,0.29438161849975586]=>[-1.5895229578018188,-1e-05] (-1,-1; 15,-1), time: 0.2007s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_73, [-1.7683639526367188,0.11798584461212158]=>[-1.7683639526367188,-1e-05] (-1,-1; 15,-1), time: 0.2098s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_80, [-0.9159371256828308,1.0726253986358643]=>[-0.36422636958973686,0.18729640860458469] (2,-1; 9,-1), time: 24.3412s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_13, [-0.685405433177948,0.8371750116348267]=>[-0.271999429626742,0.10010726361160191] (2,-1; 9,-1), time: 24.2800s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_20, [-0.48282915353775024,1.5304958820343018]=>[1e-05,1.5304958820343018] (15,-1; -1,-1), time: 0.2012s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_36, [-3.2701730728149414,0.2301996946334839]=>[-3.2701730728149414,-1e-05] (-1,-1; 15,-1), time: 0.1994s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_30, [-0.8048651218414307,0.806308388710022]=>[-0.10218846266631783,0.3038099025784076] (2,-1; 2,-1), time: 18.2255s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_38, [-0.8600457310676575,1.2709236145019531]=>[-0.21360472822040102,0.39970573344939747] (2,-1; 9,-1), time: 24.9587s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_40, [-0.17811580002307892,2.0445666313171387]=>[1e-05,2.0445666313171387] (15,-1; -1,-1), time: 0.2181s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_69, [-1.2753314971923828,0.5827286243438721]=>[-1.2753314971923828,-1e-05] (-1,-1; 15,-1), time: 0.2057s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_6, [-0.24293291568756104,2.29134202003479]=>[1e-05,2.29134202003479] (15,-1; -1,-1), time: 0.2162s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_47, [-0.9846361875534058,0.9463857412338257]=>[-0.41609168322464507,0.2425393548379613] (2,-1; 9,-1), time: 27.3948s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_68, [-1.285530924797058,0.5576319694519043]=>[-1.285530924797058,-1e-05] (-1,-1; 15,-1), time: 3.2058s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_25, [-1.187461495399475,0.523585319519043]=>[-0.44075350589125045,0.05941179671387341] (2,-1; 9,-1), time: 28.6567s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_26, [-1.7962568998336792,0.024802327156066895]=>[-1.7962568998336792,-1e-05] (-1,-1; 15,-1), time: 0.2288s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_93, [-0.24143481254577637,1.975012183189392]=>[1e-05,1.975012183189392] (15,-1; -1,-1), time: 0.2065s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_60, [-0.08424529433250427,1.9652454853057861]=>[1e-05,1.9652454853057861] (15,-1; -1,-1), time: 0.2077s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_5, [-0.7995194792747498,0.8468758463859558]=>[-0.17772548034228722,0.2698750098867606] (9,-1; 9,-1), time: 30.0089s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_55, [-1.0299798250198364,0.9393650889396667]=>[-0.31481015751290065,0.2322449326773855] (9,-1; 9,-1), time: 30.0122s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_8, [-0.5367268323898315,1.3435441255569458]=>[1e-05,1.3435441255569458] (15,-1; -1,-1), time: 0.2257s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_62, [-1.3902631998062134,0.6242458820343018]=>[-1.3902631998062134,-1e-05] (-1,-1; 15,-1), time: 0.3930s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_27, [-0.8607507348060608,1.0357531309127808]=>[-0.19229768817936038,0.38627084462180267] (9,-1; 9,-1), time: 30.0077s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_32, [-1.5835493803024292,1.0312120914459229]=>[-1.5835493803024292,-1e-05] (-1,-1; 15,-1), time: 6.6080s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_53, [-0.04857379198074341,2.6632320880889893]=>[1e-05,2.6632320880889893] (15,-1; -1,-1), time: 0.2070s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_44, [-0.2754223942756653,1.683587670326233]=>[1e-05,1.683587670326233] (15,-1; -1,-1), time: 0.2173s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_41, [-0.4230259656906128,1.7971246242523193]=>[1e-05,1.7971246242523193] (15,-1; -1,-1), time: 0.2130s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_63, [-0.04828941822052002,2.8054616451263428]=>[1e-05,2.8054616451263428] (15,-1; -1,-1), time: 0.2175s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_66, [-0.7350998520851135,0.9144024848937988]=>[-0.08121476981409798,0.422987931919232] (9,-1; 9,-1), time: 30.0116s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_51, [-1.741739273071289,0.01677808165550232]=>[-1.741739273071289,-1e-05] (-1,-1; 15,-1), time: 0.2043s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_22, [-0.8689020276069641,1.7298612594604492]=>[1e-05,1.7298612594604492] (15,-1; -1,-1), time: 3.1165s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_90, [-0.5138364434242249,1.1059131622314453]=>[-0.05647046067751803,0.4953866394986297] (2,-1; 9,-1), time: 20.0027s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_75, [-0.7631427049636841,1.3580979108810425]=>[1e-05,1.3580979108810425] (15,-1; -1,-1), time: 12.7534s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_43, [-1.0589332580566406,0.6957796812057495]=>[-0.2085852311763818,0.23433751979623835] (9,-1; 9,-1), time: 30.0140s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_96, [-0.6663699150085449,1.0256375074386597]=>[-0.005080868368051645,0.42181058588680387] (2,-1; 9,-1), time: 28.3352s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_4, [-1.1094014644622803,0.856372594833374]=>[-0.4342963391951928,0.11653592087006825] (2,-1; 9,-1), time: 19.2136s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_84, [-0.9494876861572266,0.6087226271629333]=>[-0.2629174199456019,0.18634758806469612] (9,-1; 2,-1), time: 21.1422s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_0, [-1.1080830097198486,1.021506905555725]=>[-0.3559812334165151,0.30543764531044576] (9,-1; 2,-1), time: 22.1847s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_2, [-1.1968268156051636,0.7064368724822998]=>[-0.5312207811634625,0.025882606791013677] (9,-1; 2,-1), time: 27.4663s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_33, [-0.6717413067817688,1.2659538984298706]=>[-0.19835050146102753,0.40675765341304754] (9,-1; 2,-1), time: 21.1178s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_65, [-1.1159300804138184,1.0607914924621582]=>[-0.22588526645006107,0.4985362414425945] (9,-1; 2,-1), time: 24.7577s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_34, [-0.9047086238861084,0.8558635115623474]=>[-0.19437570813809865,0.28572733914454473] (9,-1; 9,-1), time: 30.0046s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_64, [-0.7489638924598694,1.298868179321289]=>[-0.1595431265763973,0.4268243956379039] (9,-1; 9,-1), time: 30.0300s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_88, [-0.8116403818130493,1.2020760774612427]=>[-0.16559418654569585,0.5765680475475747] (9,-1; 9,-1), time: 30.0071s, #vars: 1355, #constrs: 655, improved: True
Solving MIP for lay8_59, [-1.4002814292907715,1.3079904317855835]=>[-0.5237673563890107,0.3271892478106123] (9,-1; 9,-1), time: 30.0086s, #vars: 1355, #constrs: 655, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 12.885807037353516 with beta sum per layer: []
alpha/beta optimization time: 17.61883568763733
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.3475, -0.1692, -0.9047, -1.2075, -2.2243, -3.7185,  0.2503, -3.3691,
         -0.1954]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 83 nodes out of 83 unstable nodes, lb improved 22.807418823242188, ub improved 35.33878707885742, time 63.2038
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_99', 'lay10_24', 'lay10_70', 'lay10_36', 'lay10_50', 'lay10_42', 'lay10_49', 'lay10_43', 'lay10_12', 'lay10_8', 'lay10_88', 'lay10_71', 'lay10_13', 'lay10_20', 'lay10_9', 'lay10_48', 'lay10_21', 'lay10_93', 'lay10_85', 'lay10_58', 'lay10_89', 'lay10_3', 'lay10_96', 'lay10_16', 'lay10_79', 'lay10_28', 'lay10_65', 'lay10_80', 'lay10_98', 'lay10_87', 'lay10_69', 'lay10_26', 'lay10_75', 'lay10_30', 'lay10_41', 'lay10_2', 'lay10_33', 'lay10_18', 'lay10_84', 'lay10_15', 'lay10_34', 'lay10_6', 'lay10_25', 'lay10_38', 'lay10_77', 'lay10_68', 'lay10_52', 'lay10_86', 'lay10_44', 'lay10_97', 'lay10_92', 'lay10_82', 'lay10_10', 'lay10_31', 'lay10_83', 'lay10_45', 'lay10_78', 'lay10_91', 'lay10_7', 'lay10_64', 'lay10_0', 'lay10_73', 'lay10_17', 'lay10_1', 'lay10_60', 'lay10_4', 'lay10_61', 'lay10_95', 'lay10_47', 'lay10_59', 'lay10_37', 'lay10_81', 'lay10_76', 'lay10_53', 'lay10_46', 'lay10_40', 'lay10_72', 'lay10_90', 'lay10_94', 'lay10_29', 'lay10_51', 'lay10_67', 'lay10_14', 'lay10_66', 'lay10_74', 'lay10_63', 'lay10_39', 'lay10_22', 'lay10_27', 'lay10_62', 'lay10_32', 'lay10_54', 'lay10_57', 'lay10_35', 'lay10_5', 'lay10_19', 'lay10_55', 'lay10_11', 'lay10_56', 'lay10_23'] filter: 1.0
Solving MIP for lay10_43, [-1.778019666671753,1.567860722541809]=>[-1.778019666671753,-1e-05] (-1,-1; 15,-1), time: 0.2433s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_24, [-1.8404579162597656,1.1247388124465942]=>[-1.8404579162597656,-1e-05] (-1,-1; 15,-1), time: 0.2717s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_8, [-3.2962470054626465,0.6121368408203125]=>[-3.2962470054626465,-1e-05] (-1,-1; 15,-1), time: 0.2953s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_50, [-2.6686346530914307,1.46890127658844]=>[-2.6686346530914307,-1e-05] (-1,-1; 15,-1), time: 0.2973s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_49, [-3.9680607318878174,1.1305516958236694]=>[-3.9680607318878174,-1e-05] (-1,-1; 15,-1), time: 0.3107s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_12, [-1.008030891418457,2.4090380668640137]=>[1e-05,2.4090380668640137] (15,-1; -1,-1), time: 0.3350s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_13, [-0.953269898891449,3.185187578201294]=>[1e-05,3.185187578201294] (15,-1; -1,-1), time: 0.3366s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_48, [-2.2354393005371094,1.1055022478103638]=>[-2.2354393005371094,-1e-05] (-1,-1; 15,-1), time: 0.3366s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_88, [-1.538581371307373,0.833312451839447]=>[-1.538581371307373,-1e-05] (-1,-1; 15,-1), time: 0.3476s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_9, [-1.7078856229782104,0.8908336162567139]=>[-1.7078856229782104,-1e-05] (-1,-1; 15,-1), time: 0.3492s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_71, [-0.8335107564926147,1.6319894790649414]=>[1e-05,1.6319894790649414] (15,-1; -1,-1), time: 0.3716s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_93, [-1.755143404006958,0.9019814729690552]=>[-1.755143404006958,-1e-05] (-1,-1; 15,-1), time: 0.2905s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_58, [-4.158281326293945,0.37449073791503906]=>[-4.158281326293945,-1e-05] (-1,-1; 15,-1), time: 0.2767s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_85, [-2.7284281253814697,0.5270668268203735]=>[-2.7284281253814697,-1e-05] (-1,-1; 15,-1), time: 0.2932s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_96, [-1.4610856771469116,0.9938000440597534]=>[-1.4610856771469116,-1e-05] (-1,-1; 15,-1), time: 0.2729s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_79, [-1.0136871337890625,2.329671859741211]=>[1e-05,2.329671859741211] (15,-1; -1,-1), time: 0.2635s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_89, [-2.3403592109680176,0.6332393884658813]=>[-2.3403592109680176,-1e-05] (-1,-1; 15,-1), time: 0.3052s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_65, [-0.5927253365516663,3.8772454261779785]=>[1e-05,3.8772454261779785] (15,-1; -1,-1), time: 0.2644s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_80, [-1.0271254777908325,3.4642348289489746]=>[1e-05,3.4642348289489746] (15,-1; -1,-1), time: 0.2556s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_87, [-2.4750537872314453,0.6606748700141907]=>[-2.4750537872314453,-1e-05] (-1,-1; 15,-1), time: 0.2562s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_26, [-0.8091022968292236,3.295207977294922]=>[1e-05,3.295207977294922] (15,-1; -1,-1), time: 0.2428s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_69, [-3.4239766597747803,0.5152045488357544]=>[-3.4239766597747803,-1e-05] (-1,-1; 15,-1), time: 0.2528s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_75, [-1.9822380542755127,0.6866735219955444]=>[-1.9822380542755127,-1e-05] (-1,-1; 15,-1), time: 0.2610s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_30, [-0.8525187373161316,4.718760013580322]=>[1e-05,4.718760013580322] (15,-1; -1,-1), time: 0.2470s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_41, [-0.7036712169647217,3.687401294708252]=>[1e-05,3.687401294708252] (15,-1; -1,-1), time: 0.2635s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_18, [-1.5738312005996704,0.7991418242454529]=>[-1.5738312005996704,-1e-05] (-1,-1; 15,-1), time: 0.2585s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_84, [-2.282386302947998,0.9150249361991882]=>[-2.282386302947998,-1e-05] (-1,-1; 15,-1), time: 0.2594s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_33, [-1.1344594955444336,3.0264368057250977]=>[1e-05,3.0264368057250977] (15,-1; -1,-1), time: 0.2875s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_6, [-1.126424789428711,1.9038912057876587]=>[1e-05,1.9038912057876587] (15,-1; -1,-1), time: 0.2460s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_25, [-1.839895248413086,1.1318620443344116]=>[-1.839895248413086,-1e-05] (-1,-1; 15,-1), time: 0.2510s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_70, [-1.1100858449935913,1.6977930068969727]=>[1e-05,1.6977930068969727] (15,-1; -1,-1), time: 1.4765s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_20, [-1.4892946481704712,1.0534101724624634]=>[-1.4892946481704712,-1e-05] (-1,-1; 15,-1), time: 1.5976s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_52, [-2.206571340560913,0.7623557448387146]=>[-2.206571340560913,-1e-05] (-1,-1; 15,-1), time: 0.2429s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_86, [-3.867652416229248,0.48498642444610596]=>[-3.867652416229248,-1e-05] (-1,-1; 15,-1), time: 0.2324s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_44, [-3.3852286338806152,1.1614524126052856]=>[-3.3852286338806152,-1e-05] (-1,-1; 15,-1), time: 0.2395s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_97, [-1.1481409072875977,2.4107861518859863]=>[1e-05,2.4107861518859863] (15,-1; -1,-1), time: 0.2272s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_38, [-1.6852009296417236,1.1165311336517334]=>[-1.6852009296417236,-1e-05] (-1,-1; 15,-1), time: 1.1310s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_82, [-2.253540277481079,0.5952950716018677]=>[-2.253540277481079,-1e-05] (-1,-1; 15,-1), time: 0.2410s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_10, [-3.2581613063812256,1.2663408517837524]=>[-3.2581613063812256,-1e-05] (-1,-1; 15,-1), time: 0.2261s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_31, [-0.9795763492584229,1.7809873819351196]=>[1e-05,1.7809873819351196] (15,-1; -1,-1), time: 0.2649s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_83, [-2.0220160484313965,0.7611764669418335]=>[-2.0220160484313965,-1e-05] (-1,-1; 15,-1), time: 0.2581s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_45, [-2.9684550762176514,0.3457065224647522]=>[-2.9684550762176514,-1e-05] (-1,-1; 15,-1), time: 0.2687s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_78, [-1.8940168619155884,0.4772360324859619]=>[-1.8940168619155884,-1e-05] (-1,-1; 15,-1), time: 0.2874s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_91, [-0.06036782264709473,4.543938159942627]=>[1e-05,4.543938159942627] (15,-1; -1,-1), time: 0.2243s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_64, [-2.413424015045166,0.546570360660553]=>[-2.413424015045166,-1e-05] (-1,-1; 15,-1), time: 0.2447s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_7, [-3.24261474609375,0.20201313495635986]=>[-3.24261474609375,-1e-05] (-1,-1; 15,-1), time: 0.2525s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_73, [-2.928062915802002,0.7521277070045471]=>[-2.928062915802002,-1e-05] (-1,-1; 15,-1), time: 0.2708s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_17, [-2.106346845626831,1.6381542682647705]=>[-2.106346845626831,-1e-05] (-1,-1; 15,-1), time: 0.2479s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_1, [-0.26395735144615173,3.0644750595092773]=>[1e-05,3.0644750595092773] (15,-1; -1,-1), time: 0.2467s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_60, [-3.246774196624756,0.5880872011184692]=>[-3.246774196624756,-1e-05] (-1,-1; 15,-1), time: 0.2376s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_36, [-1.6611521244049072,1.2855578660964966]=>[-1.6611521244049072,-1e-05] (-1,-1; 15,-1), time: 4.4876s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_61, [-0.7715662717819214,2.090963125228882]=>[1e-05,2.090963125228882] (15,-1; -1,-1), time: 0.2577s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_95, [-2.061929225921631,0.7179629802703857]=>[-2.061929225921631,-1e-05] (-1,-1; 15,-1), time: 0.2746s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_68, [-1.130031704902649,1.3242390155792236]=>[1e-05,1.3242390155792236] (15,-1; -1,-1), time: 4.7662s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_59, [-2.852431058883667,0.4707503914833069]=>[-2.852431058883667,-1e-05] (-1,-1; 15,-1), time: 0.2482s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_15, [-1.7942588329315186,1.1937227249145508]=>[-1.7942588329315186,-1e-05] (-1,-1; 15,-1), time: 5.8228s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_81, [-2.436959743499756,0.57914799451828]=>[-2.436959743499756,-1e-05] (-1,-1; 15,-1), time: 0.2514s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_0, [-1.9758973121643066,0.8583059310913086]=>[-1.9758973121643066,-1e-05] (-1,-1; 15,-1), time: 3.8452s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_2, [-1.5919129848480225,1.1611380577087402]=>[-1.5919129848480225,-1e-05] (-1,-1; 15,-1), time: 6.3404s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_46, [-1.4161726236343384,2.2913663387298584]=>[1e-05,2.2913663387298584] (15,-1; -1,-1), time: 0.2293s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_53, [-1.816900372505188,0.9162333607673645]=>[-1.816900372505188,-1e-05] (-1,-1; 15,-1), time: 0.2377s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_40, [-1.140798568725586,2.4121477603912354]=>[1e-05,2.4121477603912354] (15,-1; -1,-1), time: 0.2406s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_72, [-0.5514280200004578,4.028789520263672]=>[1e-05,4.028789520263672] (15,-1; -1,-1), time: 0.2495s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_90, [-2.593440532684326,0.9492397308349609]=>[-2.593440532684326,-1e-05] (-1,-1; 15,-1), time: 0.2545s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_29, [-2.1996397972106934,0.896294891834259]=>[-2.1996397972106934,-1e-05] (-1,-1; 15,-1), time: 0.2462s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_99, [-2.0169284343719482,2.2499170303344727]=>[-1.208343305036807,-1e-05] (2,-1; 15,-1), time: 8.2110s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_67, [-0.5064986944198608,2.787803888320923]=>[1e-05,2.787803888320923] (15,-1; -1,-1), time: 0.2471s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_14, [-1.123277187347412,2.5403177738189697]=>[1e-05,2.5403177738189697] (15,-1; -1,-1), time: 0.2417s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_66, [-3.2654573917388916,0.6309729814529419]=>[-3.2654573917388916,-1e-05] (-1,-1; 15,-1), time: 0.2328s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_74, [-2.014101505279541,1.333033561706543]=>[-2.014101505279541,-1e-05] (-1,-1; 15,-1), time: 0.2953s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_63, [-0.876153290271759,2.365584373474121]=>[1e-05,2.365584373474121] (15,-1; -1,-1), time: 0.2434s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_47, [-1.4681265354156494,1.475659966468811]=>[1e-05,1.475659966468811] (15,-1; -1,-1), time: 6.3453s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_22, [-0.6856791973114014,2.4830687046051025]=>[1e-05,2.4830687046051025] (15,-1; -1,-1), time: 0.2415s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_76, [-1.2406834363937378,1.4205843210220337]=>[1e-05,1.4205843210220337] (15,-1; -1,-1), time: 4.6841s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_62, [-0.789198637008667,3.0470495223999023]=>[1e-05,3.0470495223999023] (15,-1; -1,-1), time: 0.2665s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_32, [-1.8358488082885742,0.5963599681854248]=>[-1.8358488082885742,-1e-05] (-1,-1; 15,-1), time: 0.2431s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_54, [-1.211459994316101,1.3519175052642822]=>[1e-05,1.3519175052642822] (15,-1; -1,-1), time: 0.2365s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_16, [-1.4049513339996338,1.5209277868270874]=>[-0.7309275991431724,0.018659458618815704] (2,-1; 9,-1), time: 19.6510s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_98, [-1.2308043241500854,1.1857372522354126]=>[1e-05,0.38228979219948855] (15,-1; 9,-1), time: 19.7271s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_5, [-1.099487066268921,2.28495717048645]=>[1e-05,2.28495717048645] (15,-1; -1,-1), time: 0.2472s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_19, [-0.7085450887680054,2.6735143661499023]=>[1e-05,2.6735143661499023] (15,-1; -1,-1), time: 0.2419s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_55, [-1.512048363685608,0.88810133934021]=>[-1.512048363685608,-1e-05] (-1,-1; 15,-1), time: 0.2546s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_37, [-1.3455181121826172,1.6199575662612915]=>[-0.003961184499624886,0.5192225614493973] (9,-1; 2,-1), time: 23.2215s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_56, [-2.264275312423706,1.079655408859253]=>[-2.264275312423706,-1e-05] (-1,-1; 15,-1), time: 0.2860s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_42, [-1.5537679195404053,1.291236162185669]=>[-0.3565937972696458,0.06123750743394853] (9,-1; 9,-1), time: 30.0065s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_23, [-0.05008449777960777,3.933232307434082]=>[1e-05,3.933232307434082] (15,-1; -1,-1), time: 0.2603s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_21, [-1.2431511878967285,1.2547924518585205]=>[-0.3732393760354503,0.020856673755297525] (9,-1; 9,-1), time: 30.0143s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_3, [-1.263366460800171,1.0052425861358643]=>[-0.3446264222742729,0.028586680280439654] (9,-1; 9,-1), time: 30.0228s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_28, [-1.8721094131469727,1.057328462600708]=>[-0.37904219266565753,0.1461373896422773] (9,-1; 9,-1), time: 30.0089s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_92, [-1.4681997299194336,0.9087129831314087]=>[-0.4675148377043735,0.019262883200129505] (2,-1; 9,-1), time: 28.7695s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_34, [-1.357060432434082,1.6857318878173828]=>[-0.35909568803474784,0.16033992657037258] (9,-1; 9,-1), time: 30.0086s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_77, [-1.3537321090698242,1.9473742246627808]=>[-0.30509876650947204,0.2924805242825157] (9,-1; 9,-1), time: 30.0126s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_4, [-1.467631459236145,0.8928078413009644]=>[-0.30561336942747275,0.07279867875439631] (9,-1; 9,-1), time: 30.0066s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_94, [-1.7367318868637085,1.061302900314331]=>[-0.3199901039030066,0.13511749329003653] (9,-1; 2,-1), time: 28.4212s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_51, [-1.2827752828598022,2.0521202087402344]=>[-0.1558506814374107,0.43981518552386495] (9,-1; 9,-1), time: 30.0030s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_39, [-1.5981541872024536,1.0372486114501953]=>[-0.4505476356170182,0.0684448755974145] (9,-1; 9,-1), time: 30.0150s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_27, [-1.7455523014068604,1.3930935859680176]=>[-0.41154273461840035,0.06260728972818679] (9,-1; 9,-1), time: 30.0620s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_57, [-1.6563372611999512,1.4801957607269287]=>[-0.22283435099094648,0.2967084403634209] (9,-1; 9,-1), time: 30.0054s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_35, [-1.2990939617156982,1.3887301683425903]=>[-0.25223690937205356,0.2211644493501444] (9,-1; 9,-1), time: 30.0212s, #vars: 1507, #constrs: 833, improved: True
Solving MIP for lay10_11, [-1.3401466608047485,1.960469126701355]=>[-0.4150911361714059,0.3301812669979343] (9,-1; 9,-1), time: 30.0109s, #vars: 1507, #constrs: 833, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: -15.266423225402832 with beta sum per layer: []
alpha/beta optimization time: 16.96798872947693
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.3858,  2.4112,  2.0829,  1.4322,  1.7918, -0.7366,  3.0197,  0.4138,
          3.4656]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 49.56003189086914, ub improved 65.89842987060547, time 51.8115
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_62', 'lay12_49', 'lay12_50', 'lay12_70', 'lay12_47', 'lay12_93', 'lay12_26', 'lay12_86', 'lay12_80', 'lay12_5', 'lay12_69', 'lay12_27', 'lay12_99', 'lay12_71', 'lay12_53', 'lay12_15', 'lay12_40', 'lay12_34', 'lay12_20', 'lay12_51', 'lay12_74', 'lay12_61', 'lay12_3', 'lay12_72', 'lay12_58', 'lay12_66', 'lay12_78', 'lay12_57', 'lay12_41', 'lay12_35', 'lay12_85', 'lay12_36', 'lay12_37', 'lay12_75', 'lay12_2', 'lay12_7', 'lay12_23', 'lay12_94', 'lay12_43', 'lay12_19', 'lay12_30', 'lay12_97', 'lay12_76', 'lay12_88', 'lay12_33', 'lay12_4', 'lay12_54', 'lay12_65', 'lay12_38', 'lay12_16', 'lay12_28', 'lay12_10', 'lay12_64', 'lay12_90', 'lay12_12', 'lay12_18', 'lay12_13', 'lay12_92', 'lay12_0', 'lay12_24', 'lay12_84', 'lay12_52', 'lay12_29', 'lay12_82', 'lay12_9', 'lay12_21', 'lay12_8', 'lay12_14', 'lay12_63', 'lay12_42', 'lay12_59', 'lay12_77', 'lay12_45', 'lay12_79', 'lay12_55', 'lay12_67', 'lay12_95', 'lay12_1', 'lay12_98', 'lay12_39', 'lay12_83', 'lay12_68', 'lay12_22', 'lay12_11', 'lay12_81', 'lay12_73', 'lay12_89', 'lay12_6', 'lay12_96', 'lay12_31', 'lay12_17', 'lay12_87', 'lay12_48', 'lay12_44', 'lay12_46', 'lay12_91', 'lay12_32', 'lay12_56', 'lay12_25', 'lay12_60'] filter: 1.0
Solving MIP for lay12_53, [-3.5097365379333496,3.10485577583313]=>[-3.5097365379333496,-1e-05] (-1,-1; 15,-1), time: 0.2636s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_5, [-3.1194682121276855,2.1438159942626953]=>[-3.1194682121276855,-1e-05] (-1,-1; 15,-1), time: 0.2779s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_15, [-4.1006760597229,3.6263070106506348]=>[-4.1006760597229,-1e-05] (-1,-1; 15,-1), time: 0.2876s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_93, [-3.18017840385437,2.1496198177337646]=>[-3.18017840385437,-1e-05] (-1,-1; 15,-1), time: 0.2876s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_50, [-2.4890666007995605,4.217307090759277]=>[1e-05,4.217307090759277] (15,-1; -1,-1), time: 0.3020s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_69, [-2.7808303833007812,2.9024946689605713]=>[1e-05,2.9024946689605713] (15,-1; -1,-1), time: 0.3063s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_99, [-3.4356281757354736,1.509759783744812]=>[-3.4356281757354736,-1e-05] (-1,-1; 15,-1), time: 0.3152s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_86, [-3.4530482292175293,3.1216578483581543]=>[-3.4530482292175293,-1e-05] (-1,-1; 15,-1), time: 0.3259s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_26, [-3.5326592922210693,2.7726247310638428]=>[-3.5326592922210693,-1e-05] (-1,-1; 15,-1), time: 0.3267s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_80, [-2.548595666885376,3.287935972213745]=>[1e-05,3.287935972213745] (15,-1; -1,-1), time: 0.3278s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_49, [-4.442658424377441,2.041616916656494]=>[-4.442658424377441,-1e-05] (-1,-1; 15,-1), time: 0.3307s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_40, [-2.8134310245513916,2.749101161956787]=>[-2.8134310245513916,-1e-05] (-1,-1; 15,-1), time: 0.2583s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_34, [-2.6710853576660156,3.917675018310547]=>[1e-05,3.917675018310547] (15,-1; -1,-1), time: 0.2608s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_20, [-2.379621744155884,2.940953493118286]=>[1e-05,2.940953493118286] (15,-1; -1,-1), time: 0.2570s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_27, [-3.2517549991607666,3.175798177719116]=>[-3.2517549991607666,-1e-05] (-1,-1; 15,-1), time: 0.5706s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_61, [-4.459334850311279,1.4667726755142212]=>[-4.459334850311279,-1e-05] (-1,-1; 15,-1), time: 0.3147s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_74, [-3.3345282077789307,1.40818190574646]=>[-3.3345282077789307,-1e-05] (-1,-1; 15,-1), time: 0.3211s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_3, [-3.319661855697632,2.6620113849639893]=>[-3.319661855697632,-1e-05] (-1,-1; 15,-1), time: 0.3030s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_58, [-2.0721304416656494,2.688868284225464]=>[1e-05,2.688868284225464] (15,-1; -1,-1), time: 0.3099s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_78, [-4.261449813842773,1.4388647079467773]=>[-4.261449813842773,-1e-05] (-1,-1; 15,-1), time: 0.3146s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_51, [-3.111689805984497,2.396925926208496]=>[-3.111689805984497,-1e-05] (-1,-1; 15,-1), time: 0.3619s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_57, [-2.7289247512817383,2.068834066390991]=>[-2.7289247512817383,-1e-05] (-1,-1; 15,-1), time: 0.2630s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_41, [-2.39459490776062,2.5992982387542725]=>[1e-05,2.5992982387542725] (15,-1; -1,-1), time: 0.2537s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_35, [-2.691257953643799,3.5537219047546387]=>[1e-05,3.5537219047546387] (15,-1; -1,-1), time: 0.2602s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_36, [-3.340877056121826,2.3807976245880127]=>[-3.340877056121826,-1e-05] (-1,-1; 15,-1), time: 0.3191s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_7, [-2.770530939102173,2.4446380138397217]=>[-2.770530939102173,-1e-05] (-1,-1; 15,-1), time: 0.3020s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_2, [-4.354118347167969,1.6306058168411255]=>[-4.354118347167969,-1e-05] (-1,-1; 15,-1), time: 0.3071s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_23, [-2.751771926879883,2.8886165618896484]=>[1e-05,2.8886165618896484] (15,-1; -1,-1), time: 0.3302s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_94, [-3.5627310276031494,2.505084991455078]=>[-3.5627310276031494,-1e-05] (-1,-1; 15,-1), time: 0.2597s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_43, [-3.1784541606903076,2.1036829948425293]=>[-3.1784541606903076,-1e-05] (-1,-1; 15,-1), time: 0.2620s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_19, [-3.3584320545196533,1.6051504611968994]=>[-3.3584320545196533,-1e-05] (-1,-1; 15,-1), time: 0.2593s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_76, [-3.0004351139068604,1.8286410570144653]=>[-3.0004351139068604,-1e-05] (-1,-1; 15,-1), time: 0.3119s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_97, [-2.6411378383636475,3.451831340789795]=>[1e-05,3.451831340789795] (15,-1; -1,-1), time: 0.3138s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_30, [-4.42251443862915,1.6377589702606201]=>[-4.42251443862915,-1e-05] (-1,-1; 15,-1), time: 0.3446s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_4, [-3.659130573272705,3.479220390319824]=>[-3.659130573272705,-1e-05] (-1,-1; 15,-1), time: 0.2694s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_38, [-4.098297595977783,1.3742139339447021]=>[-4.098297595977783,-1e-05] (-1,-1; 15,-1), time: 0.2995s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_65, [-3.917261838912964,1.6614649295806885]=>[-3.917261838912964,-1e-05] (-1,-1; 15,-1), time: 0.3142s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_28, [-2.483959197998047,2.6023666858673096]=>[1e-05,2.6023666858673096] (15,-1; -1,-1), time: 0.2549s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_16, [-3.0597057342529297,1.753246545791626]=>[-3.0597057342529297,-1e-05] (-1,-1; 15,-1), time: 0.3556s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_90, [-3.6653554439544678,1.8531028032302856]=>[-3.6653554439544678,-1e-05] (-1,-1; 15,-1), time: 0.2540s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_10, [-3.6611380577087402,1.5796793699264526]=>[-3.6611380577087402,-1e-05] (-1,-1; 15,-1), time: 0.2951s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_64, [-1.9678337574005127,2.5827338695526123]=>[1e-05,2.5827338695526123] (15,-1; -1,-1), time: 0.3564s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_18, [-4.043124675750732,2.9543166160583496]=>[-4.043124675750732,-1e-05] (-1,-1; 15,-1), time: 0.2499s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_13, [-4.266858100891113,1.3886079788208008]=>[-4.266858100891113,-1e-05] (-1,-1; 15,-1), time: 0.2882s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_0, [-3.862399101257324,1.9834890365600586]=>[-3.862399101257324,-1e-05] (-1,-1; 15,-1), time: 0.2555s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_24, [-3.162148952484131,5.10750150680542]=>[1e-05,5.10750150680542] (15,-1; -1,-1), time: 0.3094s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_84, [-3.528381109237671,1.5038838386535645]=>[-3.528381109237671,-1e-05] (-1,-1; 15,-1), time: 0.2580s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_72, [-2.861017942428589,3.241727352142334]=>[-0.9746609499158273,-1e-05] (9,-1; 15,-1), time: 15.3680s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_37, [-2.997563362121582,2.194373369216919]=>[1e-05,1.0283533502479745] (15,-1; 9,-1), time: 15.3349s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_82, [-3.4590330123901367,1.848755121231079]=>[-3.4590330123901367,-1e-05] (-1,-1; 15,-1), time: 0.3248s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_9, [-2.968777894973755,2.3357696533203125]=>[-2.968777894973755,-1e-05] (-1,-1; 15,-1), time: 0.3118s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_21, [-2.962212562561035,1.9730520248413086]=>[-2.962212562561035,-1e-05] (-1,-1; 15,-1), time: 0.3089s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_8, [-2.8452141284942627,2.211254596710205]=>[-2.8452141284942627,-1e-05] (-1,-1; 15,-1), time: 0.3261s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_14, [-3.250976324081421,1.8646345138549805]=>[-3.250976324081421,-1e-05] (-1,-1; 15,-1), time: 0.3509s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_63, [-2.5023229122161865,5.498599052429199]=>[1e-05,5.498599052429199] (15,-1; -1,-1), time: 0.3396s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_42, [-4.0564188957214355,1.4570130109786987]=>[-4.0564188957214355,-1e-05] (-1,-1; 15,-1), time: 0.2961s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_77, [-3.3964152336120605,1.7074662446975708]=>[-3.3964152336120605,-1e-05] (-1,-1; 15,-1), time: 0.3006s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_47, [-2.713069200515747,3.2579846382141113]=>[-0.4200335748444093,-1e-05] (9,-1; 15,-1), time: 17.5834s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_45, [-3.2824835777282715,1.7450988292694092]=>[-3.2824835777282715,-1e-05] (-1,-1; 15,-1), time: 0.3220s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_29, [-2.9304518699645996,3.1681625843048096]=>[-0.8346085256817296,-1e-05] (9,-1; 15,-1), time: 15.2805s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_55, [-2.9175446033477783,1.9143006801605225]=>[-2.9175446033477783,-1e-05] (-1,-1; 15,-1), time: 0.2880s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_67, [-2.869633913040161,2.5990140438079834]=>[-2.869633913040161,-1e-05] (-1,-1; 15,-1), time: 0.2684s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_95, [-2.570848226547241,3.096540927886963]=>[1e-05,3.096540927886963] (15,-1; -1,-1), time: 0.2921s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_98, [-1.9988020658493042,6.849391937255859]=>[1e-05,6.849391937255859] (15,-1; -1,-1), time: 0.3059s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_39, [-3.3444645404815674,1.471057653427124]=>[-3.3444645404815674,-1e-05] (-1,-1; 15,-1), time: 0.3583s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_83, [-3.5105140209198,4.613351821899414]=>[1e-05,4.613351821899414] (15,-1; -1,-1), time: 0.3177s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_71, [-2.5546817779541016,2.2886369228363037]=>[-0.16891538814671267,0.09532127792897639] (2,-1; 9,-1), time: 21.8789s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_22, [-3.4225454330444336,1.6381539106369019]=>[-3.4225454330444336,-1e-05] (-1,-1; 15,-1), time: 0.2559s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_11, [-2.8968617916107178,3.3928325176239014]=>[1e-05,3.3928325176239014] (15,-1; -1,-1), time: 0.2574s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_79, [-2.9694411754608154,2.1277363300323486]=>[-2.9694411754608154,-1e-05] (-1,-1; 15,-1), time: 7.8584s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_62, [-2.713367462158203,3.2812581062316895]=>[-0.044647460680340326,0.2625331110572917] (9,-1; 9,-1), time: 30.0079s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_70, [-3.075317144393921,3.8438360691070557]=>[-0.006762986834817484,0.6803810000391319] (9,-1; 9,-1), time: 30.0098s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_89, [-3.9945528507232666,1.7737619876861572]=>[-3.9945528507232666,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_66, [-2.964378595352173,3.0167458057403564]=>[-0.5602043639929,0.1700310180064095] (9,-1; 9,-1), time: 30.1008s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_85, [-2.8439512252807617,2.9556491374969482]=>[-0.21753532619580615,0.0664778264094445] (9,-1; 9,-1), time: 30.0094s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_31, [-1.74978506565094,4.065721035003662]=>[1e-05,4.065721035003662] (15,-1; -1,-1), time: 0.3017s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_75, [-2.881497859954834,3.2427830696105957]=>[-0.04739017601074518,0.4187338521873777] (9,-1; 9,-1), time: 30.1520s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_17, [-3.003000020980835,2.2447009086608887]=>[-3.003000020980835,-1e-05] (-1,-1; 15,-1), time: 0.3085s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_87, [-1.3943204879760742,5.178075313568115]=>[1e-05,5.178075313568115] (15,-1; -1,-1), time: 0.2917s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_54, [-3.1201188564300537,2.4823498725891113]=>[-0.19096784194694125,0.2730753710662925] (9,-1; 9,-1), time: 30.0132s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_88, [-2.3751189708709717,3.206052541732788]=>[-0.2352863282855093,0.39997705487826135] (9,-1; 9,-1), time: 30.0921s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_33, [-3.2482357025146484,2.258639335632324]=>[-0.32951565477721534,0.06867878707377402] (9,-1; 9,-1), time: 30.0543s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_44, [-3.8762261867523193,2.001577377319336]=>[-3.8762261867523193,-1e-05] (-1,-1; 15,-1), time: 0.2767s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_56, [-3.311087131500244,1.3833582401275635]=>[-3.311087131500244,-1e-05] (-1,-1; 15,-1), time: 0.2624s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_32, [-3.0233283042907715,2.2857418060302734]=>[-3.0233283042907715,-1e-05] (-1,-1; 15,-1), time: 0.2908s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_60, [-2.140880823135376,3.7782082557678223]=>[1e-05,3.7782082557678223] (15,-1; -1,-1), time: 0.2541s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_12, [-2.8319029808044434,2.0622386932373047]=>[-0.15778430227700474,0.07518767005164177] (9,-1; 9,-1), time: 30.0507s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_92, [-2.5474507808685303,2.030700922012329]=>[-0.13828735917904886,0.17222076182831778] (9,-1; 9,-1), time: 30.0089s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_52, [-2.512847900390625,2.6802027225494385]=>[-0.10454862819466526,0.1999768339533444] (9,-1; 9,-1), time: 30.1027s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_73, [-3.5518007278442383,2.5094709396362305]=>[-3.5518007278442383,-1e-05] (-1,-1; 15,-1), time: 7.7846s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_81, [-2.9293744564056396,3.0232455730438232]=>[-0.8627111371682373,-1e-05] (9,-1; 15,-1), time: 15.4463s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_6, [-3.1297354698181152,1.9633365869522095]=>[-3.1297354698181152,-1e-05] (-1,-1; 15,-1), time: 9.0402s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_91, [-2.5687427520751953,2.7044355869293213]=>[-0.7062733106096156,-1e-05] (9,-1; 15,-1), time: 15.2591s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_59, [-3.160712242126465,3.5138120651245117]=>[-0.16073554872496817,0.6117400628553924] (9,-1; 9,-1), time: 30.0051s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_1, [-3.1702024936676025,3.0018224716186523]=>[-0.6078251283813665,0.016347748906054574] (9,-1; 9,-1), time: 30.0054s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_68, [-2.5574676990509033,3.170395851135254]=>[-0.41796725727181716,0.1310183310246333] (9,-1; 9,-1), time: 30.0156s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_25, [-3.113720178604126,2.8569741249084473]=>[1e-05,0.4333450799359309] (15,-1; 9,-1), time: 21.2024s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_96, [-3.0035228729248047,2.5453805923461914]=>[-0.4319926289209076,0.020149367461956703] (9,-1; 9,-1), time: 30.0216s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_48, [-2.707871198654175,3.2163519859313965]=>[-0.38722022796048133,0.11975612315116428] (9,-1; 9,-1), time: 30.0349s, #vars: 1641, #constrs: 984, improved: True
Solving MIP for lay12_46, [-2.6881020069122314,3.341275453567505]=>[-0.3900080201520924,0.15699517609271088] (9,-1; 9,-1), time: 30.0141s, #vars: 1641, #constrs: 984, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: -18.92489242553711 with beta sum per layer: []
alpha/beta optimization time: 13.754914283752441
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.7834,  2.7009,  2.4157,  1.8116,  2.2789, -0.3401,  3.3355,  0.9782,
          3.9606]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 114.47341918945312, ub improved 179.74490356445312, time 61.8436
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_65', 'lay14_67', 'lay14_22', 'lay14_91', 'lay14_41', 'lay14_97', 'lay14_73', 'lay14_1', 'lay14_71', 'lay14_68', 'lay14_95', 'lay14_4', 'lay14_35', 'lay14_14', 'lay14_89', 'lay14_18', 'lay14_27', 'lay14_57', 'lay14_78', 'lay14_88', 'lay14_81', 'lay14_40', 'lay14_19', 'lay14_31', 'lay14_3', 'lay14_47', 'lay14_44', 'lay14_84', 'lay14_87', 'lay14_79', 'lay14_51', 'lay14_25', 'lay14_36', 'lay14_5', 'lay14_20', 'lay14_86', 'lay14_52', 'lay14_96', 'lay14_82', 'lay14_38', 'lay14_26', 'lay14_59', 'lay14_46', 'lay14_0', 'lay14_50', 'lay14_64', 'lay14_43', 'lay14_10', 'lay14_75', 'lay14_63', 'lay14_42', 'lay14_34', 'lay14_9', 'lay14_23', 'lay14_11', 'lay14_39', 'lay14_29', 'lay14_30', 'lay14_70', 'lay14_49', 'lay14_54', 'lay14_83', 'lay14_53', 'lay14_60', 'lay14_76', 'lay14_80', 'lay14_72', 'lay14_37', 'lay14_69', 'lay14_28', 'lay14_15', 'lay14_7', 'lay14_45', 'lay14_8', 'lay14_17', 'lay14_74', 'lay14_12', 'lay14_48', 'lay14_21', 'lay14_58', 'lay14_55', 'lay14_77', 'lay14_85', 'lay14_92', 'lay14_62', 'lay14_94', 'lay14_24', 'lay14_13', 'lay14_16', 'lay14_33', 'lay14_66', 'lay14_98', 'lay14_61', 'lay14_93', 'lay14_2', 'lay14_90', 'lay14_6', 'lay14_32', 'lay14_56', 'lay14_99'] filter: 1.0
Solving MIP for lay14_4, [-5.478599548339844,5.900885105133057]=>[1e-05,5.900885105133057] (15,-1; -1,-1), time: 0.2978s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_97, [-4.566001892089844,6.718571186065674]=>[1e-05,6.718571186065674] (15,-1; -1,-1), time: 0.3063s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_91, [-6.684630393981934,6.362928867340088]=>[-6.684630393981934,-1e-05] (-1,-1; 15,-1), time: 0.3172s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_71, [-6.661914825439453,5.290317535400391]=>[-6.661914825439453,-1e-05] (-1,-1; 15,-1), time: 0.3218s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_22, [-7.057586669921875,5.742241382598877]=>[-7.057586669921875,-1e-05] (-1,-1; 15,-1), time: 0.3260s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_35, [-5.879476547241211,7.43464994430542]=>[1e-05,7.43464994430542] (15,-1; -1,-1), time: 0.3290s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_1, [-5.960693359375,4.729593276977539]=>[-5.960693359375,-1e-05] (-1,-1; 15,-1), time: 0.3323s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_41, [-4.769387722015381,7.655491828918457]=>[1e-05,7.655491828918457] (15,-1; -1,-1), time: 0.3328s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_67, [-4.900500297546387,7.477261066436768]=>[1e-05,7.477261066436768] (15,-1; -1,-1), time: 0.3586s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_88, [-5.69769287109375,4.6126556396484375]=>[-5.69769287109375,-1e-05] (-1,-1; 15,-1), time: 0.2804s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_89, [-5.3944621086120605,6.304683208465576]=>[1e-05,6.304683208465576] (15,-1; -1,-1), time: 0.6157s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_78, [-5.98975133895874,7.513394832611084]=>[1e-05,7.513394832611084] (15,-1; -1,-1), time: 0.2968s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_19, [-6.748988151550293,4.0633416175842285]=>[-6.748988151550293,-1e-05] (-1,-1; 15,-1), time: 0.2801s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_40, [-4.852759838104248,7.507237911224365]=>[1e-05,7.507237911224365] (15,-1; -1,-1), time: 0.2880s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_27, [-6.621188640594482,5.278255462646484]=>[-6.621188640594482,-1e-05] (-1,-1; 15,-1), time: 0.3224s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_3, [-5.706940174102783,5.46193265914917]=>[-5.706940174102783,-1e-05] (-1,-1; 15,-1), time: 0.2773s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_31, [-5.564087390899658,6.022122859954834]=>[1e-05,6.022122859954834] (15,-1; -1,-1), time: 0.3506s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_47, [-5.978914737701416,5.286510944366455]=>[-5.978914737701416,-1e-05] (-1,-1; 15,-1), time: 0.2763s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_79, [-7.281093120574951,5.9847493171691895]=>[-7.281093120574951,-1e-05] (-1,-1; 15,-1), time: 0.2937s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_84, [-5.781472206115723,5.8833208084106445]=>[1e-05,5.8833208084106445] (15,-1; -1,-1), time: 0.3066s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_87, [-5.987963676452637,6.008635520935059]=>[1e-05,6.008635520935059] (15,-1; -1,-1), time: 0.3081s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_44, [-5.208029270172119,5.824685573577881]=>[1e-05,5.824685573577881] (15,-1; -1,-1), time: 0.3322s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_5, [-6.628926753997803,8.576444625854492]=>[1e-05,8.576444625854492] (15,-1; -1,-1), time: 0.2930s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_86, [-6.849874019622803,5.331084251403809]=>[-6.849874019622803,-1e-05] (-1,-1; 15,-1), time: 0.2947s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_52, [-6.6385979652404785,4.969088554382324]=>[-6.6385979652404785,-1e-05] (-1,-1; 15,-1), time: 0.3033s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_96, [-6.446942329406738,7.564063549041748]=>[1e-05,7.564063549041748] (15,-1; -1,-1), time: 0.3160s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_20, [-5.321415424346924,6.606760025024414]=>[1e-05,6.606760025024414] (15,-1; -1,-1), time: 0.3665s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_82, [-6.268101215362549,5.52692985534668]=>[-6.268101215362549,-1e-05] (-1,-1; 15,-1), time: 0.2872s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_26, [-6.054223537445068,5.315037727355957]=>[-6.054223537445068,-1e-05] (-1,-1; 15,-1), time: 0.2713s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_59, [-5.725830078125,5.866543769836426]=>[1e-05,5.866543769836426] (15,-1; -1,-1), time: 0.3099s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_46, [-7.127001762390137,4.690464973449707]=>[-7.127001762390137,-1e-05] (-1,-1; 15,-1), time: 0.2980s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_0, [-5.1370415687561035,5.670036792755127]=>[1e-05,5.670036792755127] (15,-1; -1,-1), time: 0.2897s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_50, [-6.438971042633057,4.456178665161133]=>[-6.438971042633057,-1e-05] (-1,-1; 15,-1), time: 0.2763s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_43, [-5.861598014831543,5.12168550491333]=>[-5.861598014831543,-1e-05] (-1,-1; 15,-1), time: 0.2851s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_63, [-6.135980606079102,6.4130144119262695]=>[1e-05,6.4130144119262695] (15,-1; -1,-1), time: 0.2855s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_42, [-5.069088935852051,6.065629482269287]=>[1e-05,6.065629482269287] (15,-1; -1,-1), time: 0.2778s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_34, [-6.869814395904541,4.388917446136475]=>[-6.869814395904541,-1e-05] (-1,-1; 15,-1), time: 0.3330s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_9, [-6.575821399688721,4.899085521697998]=>[-6.575821399688721,-1e-05] (-1,-1; 15,-1), time: 0.3063s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_23, [-4.8931884765625,6.375119209289551]=>[1e-05,6.375119209289551] (15,-1; -1,-1), time: 0.2811s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_11, [-8.22163200378418,5.740538597106934]=>[-8.22163200378418,-1e-05] (-1,-1; 15,-1), time: 0.2740s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_10, [-6.354167461395264,6.288377285003662]=>[1e-05,2.3869453431443555] (15,-1; 2,-1), time: 3.8272s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_57, [-6.855637073516846,4.046392917633057]=>[-6.855637073516846,-1e-05] (-1,-1; 15,-1), time: 5.6868s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_51, [-6.055698871612549,5.459969997406006]=>[1e-05,2.376296732982528] (15,-1; 2,-1), time: 6.2950s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_70, [-6.162383079528809,6.039083003997803]=>[-6.162383079528809,-1e-05] (-1,-1; 15,-1), time: 0.3092s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_49, [-6.7600016593933105,3.8146300315856934]=>[-6.7600016593933105,-1e-05] (-1,-1; 15,-1), time: 0.3422s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_64, [-6.3707685470581055,4.737138748168945]=>[-6.3707685470581055,-1e-05] (-1,-1; 15,-1), time: 13.4148s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_18, [-4.976691246032715,4.690484046936035]=>[1e-05,0.673589604108219] (15,-1; 9,-1), time: 15.2978s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_14, [-5.278213977813721,5.9261956214904785]=>[-0.5971290270421045,-1e-05] (9,-1; 15,-1), time: 15.3040s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_95, [-5.8603386878967285,5.769738674163818]=>[1e-05,0.5853360223399854] (15,-1; 9,-1), time: 15.3062s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_65, [-6.835282802581787,7.812586307525635]=>[-1.4315146335461413,-1e-05] (9,-1; 15,-1), time: 15.3129s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_68, [-5.319591999053955,5.6973676681518555]=>[-0.6523295233528044,-1e-05] (9,-1; 15,-1), time: 15.3147s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_80, [-5.357701778411865,5.229247570037842]=>[-5.357701778411865,-1e-05] (-1,-1; 15,-1), time: 0.2838s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_60, [-7.200214862823486,4.075370788574219]=>[-7.200214862823486,-1e-05] (-1,-1; 15,-1), time: 0.3257s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_81, [-5.447555065155029,5.995638847351074]=>[-1.183606449921115,-1e-05] (9,-1; 15,-1), time: 15.2989s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_37, [-6.991192817687988,4.928034782409668]=>[-6.991192817687988,-1e-05] (-1,-1; 15,-1), time: 0.2744s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_69, [-5.790443420410156,5.522130012512207]=>[-5.790443420410156,-1e-05] (-1,-1; 15,-1), time: 0.2796s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_28, [-5.919275760650635,5.755884647369385]=>[-5.919275760650635,-1e-05] (-1,-1; 15,-1), time: 0.2799s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_15, [-5.624542713165283,4.753661632537842]=>[-5.624542713165283,-1e-05] (-1,-1; 15,-1), time: 0.3084s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_7, [-7.272916793823242,4.486459732055664]=>[-7.272916793823242,-1e-05] (-1,-1; 15,-1), time: 0.2906s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_45, [-6.56775426864624,4.186738014221191]=>[-6.56775426864624,-1e-05] (-1,-1; 15,-1), time: 0.3036s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_17, [-7.03887414932251,3.260392665863037]=>[-7.03887414932251,-1e-05] (-1,-1; 15,-1), time: 0.2825s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_8, [-5.8742451667785645,4.626627445220947]=>[-5.8742451667785645,-1e-05] (-1,-1; 15,-1), time: 0.3173s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_38, [-4.941427230834961,5.948832035064697]=>[-1.1444814514023367,-1e-05] (9,-1; 15,-1), time: 15.2973s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_39, [-6.210080146789551,4.467551231384277]=>[1e-05,0.576011379554391] (15,-1; 9,-1), time: 15.3244s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_29, [-5.726851463317871,5.698104381561279]=>[1e-05,0.763280515182706] (15,-1; 9,-1), time: 15.2865s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_30, [-5.571866035461426,4.954764366149902]=>[1e-05,1.215645351005383] (15,-1; 9,-1), time: 15.3060s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_48, [-5.295192241668701,4.4773383140563965]=>[1e-05,1.1896851999095048] (15,-1; 2,-1), time: 6.4446s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_74, [-6.023895263671875,4.586203575134277]=>[1e-05,0.8710633556169777] (15,-1; 2,-1), time: 8.2770s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_73, [-5.664909362792969,4.970301151275635]=>[-0.4447948042131353,0.07517235476593358] (9,-1; 9,-1), time: 30.0243s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_62, [-6.290624141693115,7.879896640777588]=>[1e-05,7.879896640777588] (15,-1; -1,-1), time: 0.2835s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_53, [-5.834712028503418,5.527409553527832]=>[1e-05,0.7913351578627776] (15,-1; 9,-1), time: 15.2839s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_76, [-5.553786277770996,5.2490763664245605]=>[1e-05,1.6466532839345578] (15,-1; 9,-1), time: 15.3029s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_25, [-6.2013840675354,3.773639440536499]=>[-0.17963973155973129,0.041955141718403054] (9,-1; 9,-1), time: 30.0077s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_36, [-5.997506141662598,5.6440958976745605]=>[-0.054722411280038186,0.24795528745239756] (9,-1; 9,-1), time: 30.1729s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_24, [-5.7561845779418945,5.6577863693237305]=>[-5.7561845779418945,-1e-05] (-1,-1; 15,-1), time: 0.2769s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_13, [-5.267131328582764,5.583319664001465]=>[1e-05,5.583319664001465] (15,-1; -1,-1), time: 0.3348s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_16, [-6.086556911468506,5.557815074920654]=>[-6.086556911468506,-1e-05] (-1,-1; 15,-1), time: 0.3005s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_33, [-5.1355204582214355,6.896615028381348]=>[1e-05,6.896615028381348] (15,-1; -1,-1), time: 0.2747s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_61, [-6.030265808105469,3.672584295272827]=>[-6.030265808105469,-1e-05] (-1,-1; 15,-1), time: 0.2960s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_98, [-7.973221778869629,4.618479251861572]=>[-7.973221778869629,-1e-05] (-1,-1; 15,-1), time: 0.3060s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_93, [-6.644214630126953,4.531375408172607]=>[-6.644214630126953,-1e-05] (-1,-1; 15,-1), time: 0.2749s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_2, [-7.128488063812256,6.124034881591797]=>[-7.128488063812256,-1e-05] (-1,-1; 15,-1), time: 0.2909s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_12, [-5.478872776031494,6.192956447601318]=>[-0.9053626950955288,-1e-05] (9,-1; 15,-1), time: 15.2840s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_75, [-5.924396991729736,4.661050319671631]=>[-0.16179574070806887,0.10535638184134796] (9,-1; 9,-1), time: 30.0086s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_55, [-7.016958236694336,6.546448230743408]=>[1e-05,1.3900606018856287] (15,-1; 2,-1), time: 10.9174s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_21, [-5.327106475830078,5.110391139984131]=>[1e-05,0.583304827709388] (15,-1; 9,-1), time: 15.2995s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_32, [-5.1248016357421875,5.377995491027832]=>[1e-05,5.377995491027832] (15,-1; -1,-1), time: 0.3088s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_77, [-5.713743686676025,4.7299418449401855]=>[1e-05,0.5838937181975443] (15,-1; 9,-1), time: 15.2843s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_90, [-5.256202220916748,4.867356300354004]=>[1e-05,0.48815819992386683] (15,-1; 2,-1), time: 6.0895s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_54, [-6.684502124786377,5.668190956115723]=>[-0.04768023509871572,0.2585437960245256] (9,-1; 9,-1), time: 30.0076s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_92, [-6.205644607543945,3.775712490081787]=>[1e-05,0.34950673602086113] (15,-1; 9,-1), time: 15.3227s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_83, [-5.743125915527344,5.432037830352783]=>[-0.2698849677599199,0.027445416240162248] (2,-1; 9,-1), time: 28.4235s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_72, [-5.173843860626221,6.898998260498047]=>[-0.12167755705259925,0.27190806382768384] (9,-1; 9,-1), time: 30.0065s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_66, [-6.848592281341553,5.3670806884765625]=>[1e-05,0.5179816502701866] (15,-1; 9,-1), time: 15.3065s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_56, [-5.240623474121094,6.362070560455322]=>[-0.6123528192881807,-1e-05] (9,-1; 15,-1), time: 15.2730s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_99, [-5.7374162673950195,5.888531684875488]=>[-0.5371454868247438,-1e-05] (9,-1; 15,-1), time: 15.2777s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_58, [-5.486029624938965,5.642287254333496]=>[-0.12776033037775233,0.17441542943574978] (9,-1; 9,-1), time: 30.0129s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_85, [-5.991573333740234,4.337709426879883]=>[-0.09120268827479737,0.1910578060266504] (9,-1; 9,-1), time: 30.0113s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_94, [-6.287167549133301,5.0947041511535645]=>[-0.08812032854219864,0.15564208337939306] (9,-1; 9,-1), time: 30.0075s, #vars: 1777, #constrs: 1138, improved: True
Solving MIP for lay14_6, [-5.908513069152832,6.030113220214844]=>[-0.14527664505869223,0.12364725239561195] (9,-1; 9,-1), time: 30.0198s, #vars: 1777, #constrs: 1138, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -20.88906478881836 with beta sum per layer: []
alpha/beta optimization time: 17.032568216323853
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.0306,  2.8478,  2.5713,  2.0239,  2.5436, -0.1020,  3.4851,  1.2673,
          4.2214]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 331.9263610839844, ub improved 375.75738525390625, time 62.2397
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_40', 'lay16_68', 'lay16_49', 'lay16_37', 'lay16_82', 'lay16_60', 'lay16_25', 'lay16_19', 'lay16_98', 'lay16_67', 'lay16_9', 'lay16_45', 'lay16_62', 'lay16_55', 'lay16_88', 'lay16_35', 'lay16_72', 'lay16_79', 'lay16_54', 'lay16_1', 'lay16_32', 'lay16_10', 'lay16_58', 'lay16_7', 'lay16_41', 'lay16_13', 'lay16_24', 'lay16_4', 'lay16_3', 'lay16_87', 'lay16_15', 'lay16_57', 'lay16_80', 'lay16_27', 'lay16_95', 'lay16_34', 'lay16_86', 'lay16_5', 'lay16_2', 'lay16_53', 'lay16_12', 'lay16_63', 'lay16_14', 'lay16_65', 'lay16_64', 'lay16_39', 'lay16_71', 'lay16_69', 'lay16_29', 'lay16_99', 'lay16_91', 'lay16_26', 'lay16_76', 'lay16_44', 'lay16_74', 'lay16_43', 'lay16_61', 'lay16_36', 'lay16_20', 'lay16_38', 'lay16_70', 'lay16_0', 'lay16_66', 'lay16_75', 'lay16_52', 'lay16_56', 'lay16_94', 'lay16_21', 'lay16_11', 'lay16_51', 'lay16_31', 'lay16_78', 'lay16_77', 'lay16_50', 'lay16_97', 'lay16_47', 'lay16_48', 'lay16_16', 'lay16_85', 'lay16_73', 'lay16_28', 'lay16_30', 'lay16_83', 'lay16_33', 'lay16_93', 'lay16_84', 'lay16_92', 'lay16_90', 'lay16_81', 'lay16_18', 'lay16_6', 'lay16_22', 'lay16_59', 'lay16_23', 'lay16_46', 'lay16_8', 'lay16_89', 'lay16_42', 'lay16_96', 'lay16_17'] filter: 1.0
Solving MIP for lay16_98, [-16.016157150268555,9.343838691711426]=>[-16.016157150268555,-1e-05] (-1,-1; 15,-1), time: 0.3466s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_25, [-12.23696231842041,13.337787628173828]=>[1e-05,13.337787628173828] (15,-1; -1,-1), time: 0.3711s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_88, [-13.335603713989258,12.32834529876709]=>[-13.335603713989258,-1e-05] (-1,-1; 15,-1), time: 0.4321s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_35, [-14.996869087219238,9.795393943786621]=>[-14.996869087219238,-1e-05] (-1,-1; 15,-1), time: 0.4650s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_45, [-15.143997192382812,14.718292236328125]=>[-15.143997192382812,-1e-05] (-1,-1; 15,-1), time: 0.4726s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_19, [-15.275842666625977,12.592294692993164]=>[-15.275842666625977,-1e-05] (-1,-1; 15,-1), time: 0.4834s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_62, [-12.250978469848633,10.626241683959961]=>[-12.250978469848633,-1e-05] (-1,-1; 15,-1), time: 0.4868s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_60, [-13.394623756408691,10.665552139282227]=>[-13.394623756408691,-1e-05] (-1,-1; 15,-1), time: 0.4905s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_9, [-14.741098403930664,10.071028709411621]=>[-14.741098403930664,-1e-05] (-1,-1; 15,-1), time: 0.4993s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_67, [-14.946682929992676,10.954750061035156]=>[-14.946682929992676,-1e-05] (-1,-1; 15,-1), time: 0.4993s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_55, [-15.746968269348145,8.784541130065918]=>[-15.746968269348145,-1e-05] (-1,-1; 15,-1), time: 0.5017s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_68, [-14.827073097229004,12.86740493774414]=>[-14.827073097229004,-1e-05] (-1,-1; 15,-1), time: 0.6138s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_72, [-15.367944717407227,10.564969062805176]=>[-15.367944717407227,-1e-05] (-1,-1; 15,-1), time: 0.3328s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_79, [-14.486241340637207,12.513481140136719]=>[-14.486241340637207,-1e-05] (-1,-1; 15,-1), time: 0.3392s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_54, [-13.772683143615723,11.288103103637695]=>[-13.772683143615723,-1e-05] (-1,-1; 15,-1), time: 0.4467s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_41, [-12.66325855255127,11.934638977050781]=>[-12.66325855255127,-1e-05] (-1,-1; 15,-1), time: 0.4124s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_32, [-10.131912231445312,10.702374458312988]=>[1e-05,10.702374458312988] (15,-1; -1,-1), time: 0.4490s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_7, [-16.060989379882812,7.616812705993652]=>[-16.060989379882812,-1e-05] (-1,-1; 15,-1), time: 0.4377s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_1, [-15.564223289489746,8.853434562683105]=>[-15.564223289489746,-1e-05] (-1,-1; 15,-1), time: 0.4582s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_58, [-11.959930419921875,10.740230560302734]=>[-11.959930419921875,-1e-05] (-1,-1; 15,-1), time: 0.4430s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_24, [-15.206975936889648,8.591446876525879]=>[-15.206975936889648,-1e-05] (-1,-1; 15,-1), time: 0.4318s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_13, [-12.304593086242676,10.390908241271973]=>[-12.304593086242676,-1e-05] (-1,-1; 15,-1), time: 0.4465s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_4, [-13.417166709899902,13.41268539428711]=>[-13.417166709899902,-1e-05] (-1,-1; 15,-1), time: 0.3818s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_3, [-13.66567325592041,9.230546951293945]=>[-13.66567325592041,-1e-05] (-1,-1; 15,-1), time: 0.3349s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_87, [-15.186896324157715,12.902594566345215]=>[-15.186896324157715,-1e-05] (-1,-1; 15,-1), time: 0.3436s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_80, [-14.942866325378418,15.722594261169434]=>[1e-05,15.722594261169434] (15,-1; -1,-1), time: 0.3900s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_34, [-12.782327651977539,14.343217849731445]=>[1e-05,14.343217849731445] (15,-1; -1,-1), time: 0.3830s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_15, [-13.767425537109375,16.463186264038086]=>[1e-05,16.463186264038086] (15,-1; -1,-1), time: 0.4485s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_86, [-13.197269439697266,11.563419342041016]=>[-13.197269439697266,-1e-05] (-1,-1; 15,-1), time: 0.3928s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_53, [-13.658777236938477,11.873878479003906]=>[-13.658777236938477,-1e-05] (-1,-1; 15,-1), time: 0.3263s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_2, [-13.282550811767578,12.620902061462402]=>[-13.282550811767578,-1e-05] (-1,-1; 15,-1), time: 0.3530s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_65, [-14.61721420288086,16.85743522644043]=>[1e-05,16.85743522644043] (15,-1; -1,-1), time: 0.3674s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_14, [-17.00628662109375,18.576595306396484]=>[1e-05,18.576595306396484] (15,-1; -1,-1), time: 0.3904s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_5, [-13.81209659576416,10.937440872192383]=>[1e-05,1.7699262683726433] (15,-1; 2,-1), time: 9.6558s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_99, [-13.41684627532959,12.754417419433594]=>[-13.41684627532959,-1e-05] (-1,-1; 15,-1), time: 2.6391s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_91, [-14.853326797485352,14.578598022460938]=>[-14.853326797485352,-1e-05] (-1,-1; 15,-1), time: 0.4150s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_37, [-13.734286308288574,12.614147186279297]=>[1e-05,0.6156123748579545] (15,-1; 9,-1), time: 15.4655s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_10, [-10.965555191040039,9.857966423034668]=>[1e-05,0.8020312729636132] (15,-1; 9,-1), time: 15.7056s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_12, [-13.302495956420898,11.87606430053711]=>[1e-05,0.9047611238430616] (15,-1; 9,-1), time: 15.3327s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_27, [-16.678302764892578,15.757217407226562]=>[1e-05,1.9853841548297622] (15,-1; 9,-1), time: 15.4803s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_44, [-14.869306564331055,12.15148639678955]=>[-14.869306564331055,-1e-05] (-1,-1; 15,-1), time: 0.3853s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_71, [-15.014373779296875,13.295852661132812]=>[1e-05,1.6616537527191675] (15,-1; 9,-1), time: 15.3422s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_74, [-11.975250244140625,13.979212760925293]=>[1e-05,13.979212760925293] (15,-1; -1,-1), time: 0.3487s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_63, [-11.819769859313965,11.037443161010742]=>[1e-05,0.2487808949856672] (15,-1; 9,-1), time: 15.5030s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_61, [-12.522945404052734,13.972322463989258]=>[1e-05,13.972322463989258] (15,-1; -1,-1), time: 0.4500s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_20, [-12.90672492980957,13.65138053894043]=>[1e-05,13.65138053894043] (15,-1; -1,-1), time: 0.3368s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_69, [-12.845527648925781,11.671553611755371]=>[1e-05,0.8662973659908074] (15,-1; 9,-1), time: 15.4017s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_29, [-15.675952911376953,17.008649826049805]=>[-1.7178683331420974,-1e-05] (9,-1; 15,-1), time: 15.4091s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_38, [-13.31783676147461,6.323139667510986]=>[-13.31783676147461,-1e-05] (-1,-1; 15,-1), time: 0.4151s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_0, [-14.893787384033203,9.188307762145996]=>[-14.893787384033203,-1e-05] (-1,-1; 15,-1), time: 0.3194s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_75, [-10.91655158996582,7.938093662261963]=>[-10.91655158996582,-1e-05] (-1,-1; 15,-1), time: 0.4503s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_52, [-14.3934965133667,9.64008903503418]=>[-14.3934965133667,-1e-05] (-1,-1; 15,-1), time: 0.3850s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_21, [-14.688196182250977,11.619373321533203]=>[-14.688196182250977,-1e-05] (-1,-1; 15,-1), time: 0.4985s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_26, [-12.657112121582031,9.74195384979248]=>[1e-05,0.6600931419761834] (15,-1; 2,-1), time: 9.5274s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_51, [-14.347500801086426,12.19273567199707]=>[-14.347500801086426,-1e-05] (-1,-1; 15,-1), time: 0.3484s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_36, [-14.63233470916748,13.239018440246582]=>[-14.63233470916748,-1e-05] (-1,-1; 15,-1), time: 7.1327s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_78, [-11.050399780273438,11.553464889526367]=>[1e-05,11.553464889526367] (15,-1; -1,-1), time: 0.3835s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_49, [-14.543591499328613,13.781639099121094]=>[-0.5905876491458468,0.037657949606041775] (9,-1; 9,-1), time: 30.0656s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_82, [-13.640613555908203,9.690508842468262]=>[-0.1596423004963888,0.00742963756601561] (9,-1; 9,-1), time: 30.1658s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_40, [-14.577577590942383,14.253215789794922]=>[-0.1530637073672383,0.5431953474947081] (9,-1; 9,-1), time: 30.3737s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_50, [-11.448793411254883,11.53985595703125]=>[1e-05,11.53985595703125] (15,-1; -1,-1), time: 0.3662s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_97, [-14.242561340332031,8.221034049987793]=>[-14.242561340332031,-1e-05] (-1,-1; 15,-1), time: 0.3532s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_47, [-12.925395011901855,12.365633010864258]=>[-12.925395011901855,-1e-05] (-1,-1; 15,-1), time: 0.3840s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_48, [-14.444832801818848,9.415850639343262]=>[-14.444832801818848,-1e-05] (-1,-1; 15,-1), time: 0.3407s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_76, [-13.982501029968262,11.86982250213623]=>[1e-05,2.553402678647162] (15,-1; 9,-1), time: 15.3714s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_16, [-14.088685989379883,8.769996643066406]=>[-14.088685989379883,-1e-05] (-1,-1; 15,-1), time: 0.3328s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_57, [-17.788320541381836,13.864458084106445]=>[-0.34344418951862205,0.36964936626215616] (9,-1; 9,-1), time: 30.0194s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_95, [-13.338722229003906,11.629979133605957]=>[-0.17528957681945725,0.1789112086601415] (9,-1; 9,-1), time: 30.1367s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_85, [-13.359707832336426,7.696343421936035]=>[-13.359707832336426,-1e-05] (-1,-1; 15,-1), time: 0.4136s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_28, [-14.216400146484375,9.037368774414062]=>[-14.216400146484375,-1e-05] (-1,-1; 15,-1), time: 0.3664s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_64, [-13.675089836120605,11.808381080627441]=>[-0.24601293837438734,0.1444430327381292] (9,-1; 9,-1), time: 30.0077s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_33, [-10.564765930175781,13.7999906539917]=>[1e-05,13.7999906539917] (15,-1; -1,-1), time: 0.3430s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_93, [-13.034897804260254,10.347712516784668]=>[-13.034897804260254,-1e-05] (-1,-1; 15,-1), time: 0.3230s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_84, [-13.421109199523926,13.441366195678711]=>[1e-05,13.441366195678711] (15,-1; -1,-1), time: 0.3419s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_39, [-14.52547836303711,13.432358741760254]=>[-0.3287280011630288,0.3639141473321017] (9,-1; 9,-1), time: 30.2502s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_92, [-13.165823936462402,12.97358226776123]=>[-13.165823936462402,-1e-05] (-1,-1; 15,-1), time: 0.3442s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_81, [-13.491495132446289,9.322135925292969]=>[-13.491495132446289,-1e-05] (-1,-1; 15,-1), time: 0.3505s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_18, [-17.260587692260742,7.147195816040039]=>[-17.260587692260742,-1e-05] (-1,-1; 15,-1), time: 0.3466s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_6, [-14.0902738571167,9.509068489074707]=>[-14.0902738571167,-1e-05] (-1,-1; 15,-1), time: 0.3326s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_22, [-13.441248893737793,8.601181983947754]=>[-13.441248893737793,-1e-05] (-1,-1; 15,-1), time: 0.3519s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_59, [-15.677571296691895,8.296292304992676]=>[-15.677571296691895,-1e-05] (-1,-1; 15,-1), time: 0.3146s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_23, [-11.58066177368164,13.279232025146484]=>[1e-05,13.279232025146484] (15,-1; -1,-1), time: 0.3483s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_46, [-15.030379295349121,10.454381942749023]=>[-15.030379295349121,-1e-05] (-1,-1; 15,-1), time: 0.3610s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_70, [-14.45216178894043,8.89465045928955]=>[1e-05,0.4263456137770932] (15,-1; 9,-1), time: 15.3809s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_8, [-14.504085540771484,7.66702938079834]=>[-14.504085540771484,-1e-05] (-1,-1; 15,-1), time: 0.3600s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_89, [-17.513042449951172,11.452259063720703]=>[-17.513042449951172,-1e-05] (-1,-1; 15,-1), time: 0.3288s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_42, [-14.876343727111816,10.451958656311035]=>[-14.876343727111816,-1e-05] (-1,-1; 15,-1), time: 0.3129s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_96, [-13.037715911865234,9.085192680358887]=>[-13.037715911865234,-1e-05] (-1,-1; 15,-1), time: 0.3751s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_56, [-14.754555702209473,9.192559242248535]=>[1e-05,0.4820450287223861] (15,-1; 9,-1), time: 15.3661s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_31, [-16.265464782714844,14.664835929870605]=>[1e-05,1.1524671707211331] (15,-1; 9,-1), time: 15.3617s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_77, [-14.390902519226074,11.317105293273926]=>[1e-05,1.7140698751138115] (15,-1; 9,-1), time: 15.3672s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_83, [-15.37049388885498,10.211432456970215]=>[1e-05,0.6339109995618973] (15,-1; 9,-1), time: 15.3608s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_30, [-12.518494606018066,12.311185836791992]=>[1e-05,0.4754875452629521] (15,-1; 9,-1), time: 15.5441s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_43, [-12.388776779174805,13.86729621887207]=>[-0.8220247055702158,0.09232148969487533] (9,-1; 9,-1), time: 30.0220s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_66, [-11.823575973510742,12.400042533874512]=>[-0.17248424582390895,0.3629727873835576] (9,-1; 9,-1), time: 30.0111s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_94, [-12.542563438415527,9.79891586303711]=>[-0.23694012233741668,0.05601018879363421] (9,-1; 9,-1), time: 30.0049s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_17, [-11.449824333190918,12.75769329071045]=>[-0.5395297923196963,-1e-05] (9,-1; 15,-1), time: 15.3531s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_11, [-12.634740829467773,12.832816123962402]=>[-0.16511343026384462,0.06556869909667538] (9,-1; 9,-1), time: 30.0158s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_73, [-12.343913078308105,9.95918083190918]=>[-0.16496739192859133,0.3573532867153961] (9,-1; 9,-1), time: 30.2107s, #vars: 1899, #constrs: 1271, improved: True
Solving MIP for lay16_90, [-11.851963996887207,11.97493839263916]=>[-0.4694730914109571,0.0019706630036748067] (9,-1; 9,-1), time: 30.1323s, #vars: 1899, #constrs: 1271, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -21.354461669921875 with beta sum per layer: []
alpha/beta optimization time: 16.903042316436768
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.0777,  2.8832,  2.6087,  2.0854,  2.5900, -0.0825,  3.5366,  1.3496,
          4.3058]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 610.0355834960938, ub improved 922.0633544921875, time 62.3534
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([10])
MIP finished with 338.1661968231201s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: -21.849294662475586 with beta sum per layer: []
alpha/beta optimization time: 12.215717077255249
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.1380,  2.8934,  2.6469,  2.1350,  2.6811, -0.0251,  3.5591,  1.4595,
          4.3613]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.1380,  2.8934,  0.0000,  2.6469,  2.1350,  2.6811, -0.0251,  3.5591,
          1.4595,  4.3613]], device='cuda:0') min: tensor(-0.0251, device='cuda:0')
time threshold left for bab: 534.0296585559845
##### [0:1] Tested against 6 ######
Model prediction is: tensor([[-0.2375,  0.2779,  5.2551,  0.2432,  0.0210, -1.1316,  2.6393, -1.1056,
         -0.6332, -3.9480]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.025114916265010834 with beta sum per layer: []
alpha/beta optimization time: 2.912461519241333
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0251]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.025114916265010834
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 30
layer 2 size torch.Size([100]) unstable 24
layer 3 size torch.Size([100]) unstable 26
layer 4 size torch.Size([100]) unstable 17
layer 5 size torch.Size([100]) unstable 18
layer 6 size torch.Size([100]) unstable 11
layer 7 size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 170
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [4, 51] 
split level 1: [2, 60] 
split level 2: [2, 21] 
split level 3: [1, 49] 
split level 4: [1, 96] 
split level 5: [0, 85] 
regular batch size: 2*32, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -29.666837692260742 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.018941640853881836
This batch time : update_bounds func: 0.0424	 prepare: 0.0116	 bound: 0.0194	 transfer: 0.0012	 finalize: 0.0100
Accumulated time: update_bounds func: 0.0424	 prepare: 0.0116	 bound: 0.0194	 transfer: 0.0012	 finalize: 0.0100
batch bounding time:  0.042532920837402344
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.1259	 pickout: 0.0015	 decision: 0.0678	 get_bound: 0.0567	 add_domain: 0.0000
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 3.5080785751342773

Image 1 label 6 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 3.593553304672241
1 1.0000000116860974e-07
##### [0:1] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 2.134988307952881
Image 1 label 4 verification end, final lower bound 2.134988307952881, upper bound inf, time: 0.0003685951232910156
1 2.134988307952881
##### [0:1] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 2.8934218883514404
Image 1 label 1 verification end, final lower bound 2.8934218883514404, upper bound inf, time: 0.000362396240234375
1 2.8934218883514404
##### [0:1] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 2.137988805770874
Image 1 label 0 verification end, final lower bound 2.137988805770874, upper bound inf, time: 0.0003666877746582031
1 2.137988805770874
##### [0:1] Tested against 8 ######
Initial alpha-CROWN verified for label 8 with bound 1.4595165252685547
Image 1 label 8 verification end, final lower bound 1.4595165252685547, upper bound inf, time: 0.00036215782165527344
1 1.4595165252685547
##### [0:1] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 2.6468939781188965
Image 1 label 3 verification end, final lower bound 2.6468939781188965, upper bound inf, time: 0.0003631114959716797
1 2.6468939781188965
##### [0:1] Tested against 5 ######
Initial alpha-CROWN verified for label 5 with bound 2.6811277866363525
Image 1 label 5 verification end, final lower bound 2.6811277866363525, upper bound inf, time: 0.000362396240234375
1 2.6811277866363525
##### [0:1] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 3.5591201782226562
Image 1 label 7 verification end, final lower bound 3.5591201782226562, upper bound inf, time: 0.00036787986755371094
1 3.5591201782226562
##### [0:1] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 4.361328125
Image 1 label 9 verification end, final lower bound 4.361328125, upper bound inf, time: 0.0003666877746582031
1 4.361328125
##### [0:1] Tested against 2 ######
groundtruth label, skip!
Result: image 1 verification success (with branch and bound)!
Wall time: 370.6326084136963

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [1]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 369.56682229042053
