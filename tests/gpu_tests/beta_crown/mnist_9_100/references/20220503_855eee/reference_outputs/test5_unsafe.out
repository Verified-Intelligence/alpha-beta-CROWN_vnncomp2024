Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_9_100_nat.pth
  name: mnist_9_100
data:
  start: 759
  end: 760
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 23:50:37 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=759_end=760_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 759 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 9, correct label 9, image norm 74.45098114013672, logits tensor([-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
         1.3393,  8.1315], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
          1.3393,  8.1315]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-260.0689, -266.6104, -317.1270, -290.3136, -228.9527, -264.0708,
         -340.3299, -267.4384, -310.4316]], device='cuda:0') None
best_l after optimization: 1156.5068359375 with beta sum per layer: []
alpha/beta optimization time: 14.257115840911865
initial alpha-CROWN bounds: tensor([[-109.2036, -122.9636, -150.2834, -136.5245, -101.6635, -118.5379,
         -153.5011, -121.6151, -142.2142]], device='cuda:0',
       grad_fn=<AsStridedBackward>)
worst class: tensor(-153.5011, device='cuda:0', grad_fn=<MinBackward1>)
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 707.9575357437134]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_94', 'lay4_64', 'lay4_93', 'lay4_33', 'lay4_8', 'lay4_72', 'lay4_38', 'lay4_16', 'lay4_18', 'lay4_85', 'lay4_23', 'lay4_52', 'lay4_63', 'lay4_99', 'lay4_68', 'lay4_26', 'lay4_36', 'lay4_60', 'lay4_75', 'lay4_40', 'lay4_30', 'lay4_46', 'lay4_22', 'lay4_11', 'lay4_89', 'lay4_39', 'lay4_61', 'lay4_91', 'lay4_88', 'lay4_34', 'lay4_41', 'lay4_7', 'lay4_48', 'lay4_87', 'lay4_92', 'lay4_44', 'lay4_80', 'lay4_25', 'lay4_54', 'lay4_83', 'lay4_3', 'lay4_90', 'lay4_53', 'lay4_12', 'lay4_69', 'lay4_10', 'lay4_97', 'lay4_98', 'lay4_55', 'lay4_86', 'lay4_58', 'lay4_27', 'lay4_74', 'lay4_5'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_99, [-0.1743655949831009,1.3701198101043701]=>[1e-05,1.3701198101043701] (15,-1; -1,-1), time: 0.2538s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_23, [-1.1515381336212158,0.2135612666606903]=>[-1.1515381336212158,-1e-05] (-1,-1; 15,-1), time: 0.4212s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-1.3487017154693604,0.7268288731575012]=>[-1.1371380832739708,0.30960695618309686] (2,-1; 2,-1), time: 1.3198s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-0.9063466787338257,0.15461617708206177]=>[-0.6984786581997063,0.016018684493526978] (2,-1; 2,-1), time: 1.4193s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_72, [-0.8483368158340454,0.738963782787323]=>[-0.5615582386596247,0.5531818577293462] (2,-1; 2,-1), time: 1.4780s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-0.5651997327804565,0.6784636974334717]=>[-0.2954770550910965,0.5608608166742762] (2,-1; 2,-1), time: 1.4726s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_30, [-1.1954543590545654,0.04381018877029419]=>[-1.1954543590545654,-1e-05] (-1,-1; 15,-1), time: 0.3013s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-0.5836037397384644,0.33304277062416077]=>[-0.366447787458664,0.2094410873442452] (2,-1; 2,-1), time: 2.0066s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-1.7521812915802002,0.02355438470840454]=>[-1.7521812915802002,-1e-05] (-1,-1; 15,-1), time: 0.2573s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_16, [-1.3193869590759277,0.2044147551059723]=>[-0.9501611408135168,0.034916343628474206] (2,-1; 2,-1), time: 2.1123s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-0.9564698934555054,0.46861475706100464]=>[-0.6232827766315804,0.2863373037149284] (2,-1; 2,-1), time: 2.2173s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_39, [-1.8542728424072266,0.06870782375335693]=>[-1.8542728424072266,-1e-05] (-1,-1; 15,-1), time: 0.2692s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_33, [-1.6073378324508667,0.514650285243988]=>[-1.134840740425318,0.28201759395201437] (2,-1; 2,-1), time: 2.4247s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_93, [-1.2027573585510254,0.21140356361865997]=>[-0.8482958336182589,0.04187281010490537] (2,-1; 2,-1), time: 2.4913s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_34, [-0.9295833110809326,0.08976775407791138]=>[-0.9295833110809326,-1e-05] (-1,-1; 15,-1), time: 0.2007s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-1.251033067703247,0.15285015106201172]=>[-0.9373515155798884,0.023762566462622925] (2,-1; 2,-1), time: 2.7168s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-1.198513388633728,0.6507127285003662]=>[-0.9946133208103316,0.13415319088923977] (2,-1; 2,-1), time: 2.4728s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-0.5736883878707886,0.511353611946106]=>[-0.2863773912469124,0.4113777649943394] (2,-1; 2,-1), time: 2.8913s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_46, [-0.7196506261825562,0.949271559715271]=>[-0.425522151818796,0.7537473414918251] (2,-1; 2,-1), time: 1.4603s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-0.8815778493881226,0.6325346231460571]=>[-0.5332004996663252,0.34195108755570786] (2,-1; 2,-1), time: 3.0310s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_40, [-1.106849193572998,0.24568086862564087]=>[-0.8371575719939752,0.07093426388105527] (2,-1; 2,-1), time: 1.6878s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_11, [-1.308661937713623,0.3666135370731354]=>[-1.0434974223116489,0.05430559452660685] (2,-1; 2,-1), time: 1.5586s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_60, [-0.8623926639556885,0.5759027004241943]=>[-0.4989066808471634,0.44042888986586926] (2,-1; 2,-1), time: 3.1704s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_41, [-0.6153373122215271,1.1595466136932373]=>[-0.3954759545065948,0.8510437605687037] (2,-1; 2,-1), time: 0.9898s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_38, [-1.0058921575546265,0.22603607177734375]=>[-0.6768595943086291,0.0054510413944299] (2,-1; 2,-1), time: 3.7432s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_89, [-1.103907823562622,0.7040257453918457]=>[-0.7249425584389885,0.5131788266127907] (2,-1; 2,-1), time: 1.7957s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_61, [-0.9485687017440796,0.8114701509475708]=>[-0.7167503201210603,0.45766246374887654] (2,-1; 2,-1), time: 1.6497s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-0.8898061513900757,0.21572279930114746]=>[-0.8898061513900757,-1e-05] (-1,-1; 15,-1), time: 0.9934s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-0.9911574125289917,0.18953724205493927]=>[-0.61104739438229,0.05807817995342817] (2,-1; 2,-1), time: 4.2553s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_83, [-0.2630249261856079,1.100989580154419]=>[1e-05,1.100989580154419] (15,-1; -1,-1), time: 0.6504s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_53, [-0.2965484857559204,1.3572520017623901]=>[1e-05,1.3572520017623901] (15,-1; -1,-1), time: 0.5224s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-0.48542729020118713,1.086203932762146]=>[-0.301738880809391,0.7020002839358435] (2,-1; 2,-1), time: 2.3088s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_88, [-0.9748654961585999,0.33562523126602173]=>[-0.6684515913981489,0.14600847897249195] (2,-1; 2,-1), time: 2.6280s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_90, [-1.03913152217865,1.3562307357788086]=>[-0.6344187083307848,1.1098364268405772] (2,-1; 2,-1), time: 1.4212s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_3, [-0.5036665201187134,0.6694812774658203]=>[-0.28088440799377545,0.4428086322801844] (2,-1; 2,-1), time: 1.5646s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_80, [-0.35974183678627014,1.0856677293777466]=>[-0.1194989201524834,0.7921413925031817] (2,-1; 2,-1), time: 2.2002s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_87, [-0.4260343015193939,0.6510959267616272]=>[-0.12607040793365815,0.5424952679946023] (2,-1; 2,-1), time: 2.4514s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_92, [-0.4697991609573364,0.6789436340332031]=>[-0.21280933139289746,0.47342303868752833] (2,-1; 2,-1), time: 2.4148s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_25, [-0.2804132103919983,0.9484854936599731]=>[1e-05,0.9484854936599731] (15,-1; -1,-1), time: 1.8600s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-1.2795904874801636,0.11004003882408142]=>[-1.2795904874801636,-1e-05] (-1,-1; 15,-1), time: 0.2045s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_74, [-1.1592724323272705,0.03473854064941406]=>[-1.1592724323272705,-1e-05] (-1,-1; 15,-1), time: 0.1866s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_5, [-1.716740608215332,0.036165863275527954]=>[-1.716740608215332,-1e-05] (-1,-1; 15,-1), time: 0.2524s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_86, [-0.14907845854759216,0.8724653124809265]=>[1e-05,0.8724653124809265] (15,-1; -1,-1), time: 0.3711s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-0.6694962978363037,1.006374716758728]=>[-0.3162753578745336,0.7621371189237068] (2,-1; 2,-1), time: 2.0934s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-0.6599987745285034,0.3343784213066101]=>[-0.4352555572502558,0.0715151521281179] (2,-1; 2,-1), time: 4.4247s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_10, [-0.8772891759872437,1.018729329109192]=>[-0.4608823524207196,0.9016724368462409] (2,-1; 2,-1), time: 1.6868s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-0.6056125164031982,0.8922140002250671]=>[-0.34157637896032356,0.7124253043237732] (2,-1; 2,-1), time: 1.6781s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-0.615065336227417,1.1172301769256592]=>[-0.2787048437648149,0.921720649876085] (2,-1; 2,-1), time: 1.5255s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_12, [-0.6308667659759521,0.7225924134254456]=>[-0.31309949138257714,0.5115932817193508] (2,-1; 2,-1), time: 2.2369s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_7, [-0.5796011686325073,0.622363269329071]=>[-0.26524979110286734,0.47273791787351516] (2,-1; 2,-1), time: 3.7667s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_69, [-0.4788885712623596,0.8546819686889648]=>[-0.27075657032894934,0.5693059204550159] (2,-1; 2,-1), time: 2.2535s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-0.4994373321533203,1.1779546737670898]=>[-0.10955894213114614,1.0134435172913117] (2,-1; 2,-1), time: 1.8713s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_58, [-0.30571869015693665,0.8858224153518677]=>[1e-05,0.8858224153518677] (15,-1; -1,-1), time: 1.8618s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_48, [-0.8855576515197754,0.13081008195877075]=>[-0.5518650123387229,0.026175161029424757] (2,-1; 2,-1), time: 4.5412s, #vars: 1047, #constrs: 293, improved: True
MIP improved 54 nodes out of 54 unstable nodes, lb improved 13.150580406188965, ub improved 9.20150089263916, time 7.9508
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_39', 'lay6_28', 'lay6_74', 'lay6_42', 'lay6_55', 'lay6_75', 'lay6_64', 'lay6_31', 'lay6_34', 'lay6_0', 'lay6_77', 'lay6_73', 'lay6_4', 'lay6_83', 'lay6_51', 'lay6_93', 'lay6_91', 'lay6_69', 'lay6_32', 'lay6_36', 'lay6_72', 'lay6_17', 'lay6_40', 'lay6_33', 'lay6_11', 'lay6_71', 'lay6_60', 'lay6_81', 'lay6_98', 'lay6_37', 'lay6_54', 'lay6_57', 'lay6_97', 'lay6_94', 'lay6_50', 'lay6_16', 'lay6_68', 'lay6_13', 'lay6_41', 'lay6_46', 'lay6_1', 'lay6_43', 'lay6_30', 'lay6_35', 'lay6_48', 'lay6_88', 'lay6_86', 'lay6_95', 'lay6_38', 'lay6_99', 'lay6_89', 'lay6_62', 'lay6_96', 'lay6_8', 'lay6_29', 'lay6_78', 'lay6_66', 'lay6_20', 'lay6_58', 'lay6_27', 'lay6_84', 'lay6_65', 'lay6_26', 'lay6_82', 'lay6_49', 'lay6_7', 'lay6_70', 'lay6_14', 'lay6_85', 'lay6_56', 'lay6_61', 'lay6_15', 'lay6_92', 'lay6_63', 'lay6_79', 'lay6_76', 'lay6_5'] filter: 1.0
Solving MIP for lay6_93, [-2.2853050231933594,0.09975522756576538]=>[-2.2853050231933594,-1e-05] (-1,-1; 15,-1), time: 0.1571s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_31, [-1.483723759651184,0.2609884738922119]=>[-1.483723759651184,-1e-05] (-1,-1; 15,-1), time: 0.1944s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_51, [-2.291271924972534,0.015105326659977436]=>[-2.291271924972534,-1e-05] (-1,-1; 15,-1), time: 0.2029s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_28, [-1.5203149318695068,0.2566783130168915]=>[-1.5203149318695068,-1e-05] (-1,-1; 15,-1), time: 0.2121s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_91, [-1.7781027555465698,0.1729707419872284]=>[-1.7781027555465698,-1e-05] (-1,-1; 15,-1), time: 0.1538s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_32, [-1.7650787830352783,0.08133196830749512]=>[-1.7650787830352783,-1e-05] (-1,-1; 15,-1), time: 0.2059s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_0, [-1.5622837543487549,0.26261571049690247]=>[-1.5622837543487549,-1e-05] (-1,-1; 15,-1), time: 0.4209s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_17, [-1.5609464645385742,0.11102950572967529]=>[-1.5609464645385742,-1e-05] (-1,-1; 15,-1), time: 0.1698s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_69, [-1.3602046966552734,0.25128239393234253]=>[-1.3602046966552734,-1e-05] (-1,-1; 15,-1), time: 0.5053s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_33, [-1.40627920627594,0.13843461871147156]=>[-1.40627920627594,-1e-05] (-1,-1; 15,-1), time: 0.1536s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_40, [-0.27546441555023193,1.0200413465499878]=>[1e-05,1.0200413465499878] (15,-1; -1,-1), time: 1.0022s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_77, [-1.44734525680542,0.32219362258911133]=>[-1.44734525680542,-1e-05] (-1,-1; 15,-1), time: 2.9613s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_81, [-1.143455982208252,0.2761348485946655]=>[-1.143455982208252,-1e-05] (-1,-1; 15,-1), time: 0.8556s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_74, [-1.1542315483093262,0.5256814956665039]=>[-1.1542315483093262,-1e-05] (-1,-1; 15,-1), time: 4.1448s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_11, [-1.3457069396972656,0.4124848246574402]=>[-1.3457069396972656,-1e-05] (-1,-1; 15,-1), time: 3.6421s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_37, [-1.847795844078064,0.37004101276397705]=>[-1.847795844078064,-1e-05] (-1,-1; 15,-1), time: 0.3842s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_57, [-2.0714285373687744,0.3316223621368408]=>[-2.0714285373687744,-1e-05] (-1,-1; 15,-1), time: 0.2775s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_83, [-0.9594017267227173,0.42928996682167053]=>[-0.9594017267227173,-1e-05] (-1,-1; 15,-1), time: 5.2786s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_4, [-0.7552454471588135,0.6110626459121704]=>[-0.3095592162921692,0.256474219177671] (2,-1; 2,-1), time: 5.5630s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_98, [-1.151747465133667,0.37257012724876404]=>[-1.151747465133667,-1e-05] (-1,-1; 15,-1), time: 1.8180s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_97, [-1.214400053024292,0.27142924070358276]=>[-1.214400053024292,-1e-05] (-1,-1; 15,-1), time: 1.0088s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_39, [-0.9586821794509888,1.2080262899398804]=>[-0.41723507421162503,0.5689000576279567] (2,-1; 2,-1), time: 6.1509s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_55, [-1.326935052871704,0.5339042544364929]=>[-1.326935052871704,-1e-05] (-1,-1; 15,-1), time: 6.2913s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_13, [-1.6593061685562134,0.08629882335662842]=>[-1.6593061685562134,-1e-05] (-1,-1; 15,-1), time: 0.1545s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_46, [-1.219380497932434,0.1378813236951828]=>[-1.219380497932434,-1e-05] (-1,-1; 15,-1), time: 0.3595s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_75, [-0.6964699625968933,1.3947246074676514]=>[-0.058878069148750406,1.1053051548039907] (2,-1; 2,-1), time: 6.8526s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_1, [-0.5702506303787231,2.977414608001709]=>[1e-05,2.977414608001709] (15,-1; -1,-1), time: 0.2896s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_34, [-1.439502477645874,1.1705600023269653]=>[-0.7426755535393612,0.46553007156113135] (2,-1; 2,-1), time: 7.9449s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_73, [-0.8703199625015259,0.7044793963432312]=>[-0.43432317374215723,0.15661183108976023] (2,-1; 2,-1), time: 8.9519s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_48, [-1.753105640411377,0.030577724799513817]=>[-1.753105640411377,-1e-05] (-1,-1; 15,-1), time: 0.1802s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_36, [-0.9567593336105347,0.4896085262298584]=>[-0.6090039719357626,0.06734933620304627] (2,-1; 2,-1), time: 10.7195s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_30, [-1.5787640810012817,1.9468529224395752]=>[-0.9275432450183352,1.1638911312808298] (2,-1; 2,-1), time: 4.7572s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_95, [-0.0643625259399414,2.791267156600952]=>[1e-05,2.791267156600952] (15,-1; -1,-1), time: 0.1587s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_60, [-1.3221546411514282,0.653814971446991]=>[-0.7522967976989112,0.10102975920269681] (2,-1; 2,-1), time: 10.7258s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_38, [-0.33822569251060486,2.023693084716797]=>[1e-05,2.023693084716797] (15,-1; -1,-1), time: 0.3267s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_89, [-0.4199519753456116,1.36929452419281]=>[1e-05,1.36929452419281] (15,-1; -1,-1), time: 0.6929s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_68, [-0.5918641090393066,1.7988646030426025]=>[-0.051085785914015164,1.2270460544706345] (2,-1; 2,-1), time: 7.2235s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_94, [-0.7303011417388916,0.7680831551551819]=>[-0.26946050744488115,0.37798368420753575] (2,-1; 2,-1), time: 8.3168s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_41, [-0.9965732097625732,0.8937784433364868]=>[-0.496443853523202,0.38617955447387176] (2,-1; 2,-1), time: 7.7100s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_71, [-0.8741374015808105,0.7056421041488647]=>[-0.39466069702898005,0.2612405264337978] (2,-1; 2,-1), time: 13.8506s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_35, [-0.8061953783035278,0.6176546216011047]=>[-0.42905628637168736,0.23211300702268106] (2,-1; 2,-1), time: 6.9207s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_88, [-1.0285345315933228,1.0690011978149414]=>[-0.4503509861845839,0.474455977652371] (2,-1; 2,-1), time: 6.5173s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_20, [-0.12737512588500977,1.8627508878707886]=>[1e-05,1.8627508878707886] (15,-1; -1,-1), time: 0.1553s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_72, [-0.8659409880638123,0.5446758270263672]=>[-0.34295678902897014,0.08046347828752168] (2,-1; 2,-1), time: 16.6382s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_27, [-1.5033762454986572,0.046298228204250336]=>[-1.5033762454986572,-1e-05] (-1,-1; 15,-1), time: 0.1541s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_29, [-0.49885159730911255,1.0757211446762085]=>[1e-05,1.0757211446762085] (15,-1; -1,-1), time: 3.1436s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_64, [-0.7991542816162109,0.5599685907363892]=>[-0.3066778248331555,0.11902971665013329] (2,-1; 2,-1), time: 17.2143s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_84, [-1.7859069108963013,0.17934507131576538]=>[-1.7859069108963013,-1e-05] (-1,-1; 15,-1), time: 0.1516s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_54, [-0.4912649095058441,1.080318570137024]=>[-0.008505042067397956,0.6406107722647882] (2,-1; 2,-1), time: 13.0387s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_82, [-0.2805515229701996,1.5930812358856201]=>[1e-05,1.5930812358856201] (15,-1; -1,-1), time: 0.1576s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_78, [-0.6105054616928101,1.960990309715271]=>[1e-05,1.960990309715271] (15,-1; -1,-1), time: 2.8403s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_50, [-1.012006402015686,0.7112175822257996]=>[-0.5235851904621622,0.18669191900967005] (2,-1; 2,-1), time: 11.9383s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_16, [-0.7086821794509888,0.9776089191436768]=>[-0.17220368941064212,0.4338261421639109] (2,-1; 2,-1), time: 12.1573s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_14, [-1.6825520992279053,0.35649746656417847]=>[-1.6825520992279053,-1e-05] (-1,-1; 15,-1), time: 0.3287s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_42, [-0.5954477787017822,0.800937831401825]=>[-0.2735848616099433,0.2721977785248437] (2,-1; 9,-1), time: 17.8472s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_26, [-0.4344877302646637,1.5504151582717896]=>[1e-05,1.5504151582717896] (15,-1; -1,-1), time: 0.6420s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_66, [-0.5048810839653015,1.2280993461608887]=>[1e-05,1.2280993461608887] (15,-1; -1,-1), time: 3.0704s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_92, [-0.11675751209259033,1.4635478258132935]=>[1e-05,1.4635478258132935] (15,-1; -1,-1), time: 0.1714s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_49, [-1.3149551153182983,0.4304446280002594]=>[-1.3149551153182983,-1e-05] (-1,-1; 15,-1), time: 0.8527s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_58, [-0.37020349502563477,0.9457119703292847]=>[1e-05,0.9457119703292847] (15,-1; -1,-1), time: 3.3747s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_96, [-0.8002547025680542,0.7782353162765503]=>[-0.3613212853226069,0.4688694332942411] (2,-1; 2,-1), time: 6.3936s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_5, [-0.0173150934278965,1.737382173538208]=>[1e-05,1.737382173538208] (15,-1; -1,-1), time: 0.1575s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_15, [-1.6439331769943237,0.4762278199195862]=>[-1.6439331769943237,-1e-05] (-1,-1; 15,-1), time: 2.1560s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_8, [-0.6445883512496948,1.478025197982788]=>[-0.19014957195324703,0.9426565139160061] (2,-1; 2,-1), time: 7.1407s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_79, [-1.1505963802337646,0.3765564560890198]=>[-1.1505963802337646,-1e-05] (-1,-1; 15,-1), time: 2.6003s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_61, [-0.920172929763794,1.4845415353775024]=>[-0.4491592756245507,0.8974395177681044] (2,-1; 2,-1), time: 4.9751s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_86, [-0.6948322057723999,0.9152649641036987]=>[-0.12538965102957683,0.4802176929371889] (2,-1; 2,-1), time: 12.3163s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_70, [-0.578694224357605,1.5471917390823364]=>[-0.08015242734494815,0.9823875862634828] (2,-1; 2,-1), time: 6.9394s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_65, [-0.49707889556884766,0.6381133198738098]=>[-0.022046603186012943,0.3628028967178965] (2,-1; 2,-1), time: 7.3841s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_43, [-0.8737562298774719,0.7824701070785522]=>[-0.44333512883428217,0.4176222067241888] (9,-1; 2,-1), time: 17.7312s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_85, [-0.6428300738334656,1.073429822921753]=>[-0.10578851337565005,0.5400719287240833] (2,-1; 2,-1), time: 7.3460s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_56, [-0.8167869448661804,1.0132797956466675]=>[-0.4249940446240236,0.38197495548643623] (2,-1; 2,-1), time: 7.5774s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_62, [-0.4112691581249237,1.0386855602264404]=>[1e-05,1.0386855602264404] (15,-1; -1,-1), time: 12.9052s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_76, [-1.2483566999435425,0.39087849855422974]=>[-1.2483566999435425,-1e-05] (-1,-1; 15,-1), time: 6.9560s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_63, [-0.6133327484130859,1.314073085784912]=>[-0.010974314291942342,0.8943449179841974] (2,-1; 2,-1), time: 11.9099s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_99, [-0.9621269106864929,0.6000301837921143]=>[-0.4151829988706289,0.12083483036620032] (9,-1; 2,-1), time: 20.5635s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_7, [-0.9746086597442627,0.463929146528244]=>[-0.43223572608765304,0.08558060810871009] (9,-1; 9,-1), time: 30.0065s, #vars: 1225, #constrs: 510, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 576.1940307617188 with beta sum per layer: []
alpha/beta optimization time: 16.834922075271606
alpha-CROWN with intermediate bounds by MIP: tensor([[-54.2362, -60.7996, -75.2188, -68.5627, -50.5578, -58.9743, -75.8097,
         -60.7841, -71.2509]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 77 nodes out of 77 unstable nodes, lb improved 21.106847763061523, ub improved 23.650585174560547, time 48.1934
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_88', 'lay8_98', 'lay8_7', 'lay8_81', 'lay8_15', 'lay8_67', 'lay8_21', 'lay8_60', 'lay8_82', 'lay8_13', 'lay8_55', 'lay8_5', 'lay8_58', 'lay8_63', 'lay8_33', 'lay8_69', 'lay8_22', 'lay8_39', 'lay8_95', 'lay8_66', 'lay8_19', 'lay8_90', 'lay8_41', 'lay8_20', 'lay8_3', 'lay8_44', 'lay8_54', 'lay8_24', 'lay8_74', 'lay8_18', 'lay8_49', 'lay8_38', 'lay8_34', 'lay8_76', 'lay8_16', 'lay8_37', 'lay8_78', 'lay8_43', 'lay8_11', 'lay8_9', 'lay8_68', 'lay8_99', 'lay8_70', 'lay8_42', 'lay8_26', 'lay8_73', 'lay8_32', 'lay8_30', 'lay8_89', 'lay8_35', 'lay8_71', 'lay8_91', 'lay8_85', 'lay8_10', 'lay8_72', 'lay8_56', 'lay8_0', 'lay8_79', 'lay8_17', 'lay8_6', 'lay8_25', 'lay8_57', 'lay8_40', 'lay8_36', 'lay8_59', 'lay8_96', 'lay8_77', 'lay8_83', 'lay8_52', 'lay8_64', 'lay8_84', 'lay8_61', 'lay8_23', 'lay8_92', 'lay8_14', 'lay8_8', 'lay8_50', 'lay8_65', 'lay8_51', 'lay8_2', 'lay8_1', 'lay8_28', 'lay8_93', 'lay8_75', 'lay8_31', 'lay8_46', 'lay8_53', 'lay8_29', 'lay8_47', 'lay8_62', 'lay8_48', 'lay8_12', 'lay8_27', 'lay8_87', 'lay8_80', 'lay8_94', 'lay8_4', 'lay8_86'] filter: 1.0
Solving MIP for lay8_58, [-2.5725462436676025,0.254083514213562]=>[-2.5725462436676025,-1e-05] (-1,-1; 15,-1), time: 0.1922s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_5, [-1.723055124282837,0.4647614359855652]=>[-1.723055124282837,-1e-05] (-1,-1; 15,-1), time: 0.2388s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_69, [-2.3660733699798584,0.2916187047958374]=>[-2.3660733699798584,-1e-05] (-1,-1; 15,-1), time: 0.2576s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_13, [-2.492513656616211,0.47596538066864014]=>[-2.492513656616211,-1e-05] (-1,-1; 15,-1), time: 0.2649s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_60, [-2.1357109546661377,0.3239198923110962]=>[-2.1357109546661377,-1e-05] (-1,-1; 15,-1), time: 0.2740s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_63, [-2.482839584350586,0.199848473072052]=>[-2.482839584350586,-1e-05] (-1,-1; 15,-1), time: 0.2799s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_33, [-1.9001524448394775,0.38786694407463074]=>[-1.9001524448394775,-1e-05] (-1,-1; 15,-1), time: 0.2928s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_88, [-1.537207007408142,0.6756432056427002]=>[-1.537207007408142,-1e-05] (-1,-1; 15,-1), time: 0.4395s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_82, [-1.7120680809020996,0.7453891038894653]=>[-1.7120680809020996,-1e-05] (-1,-1; 15,-1), time: 0.4667s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_95, [-1.7756909132003784,0.5877744555473328]=>[-1.7756909132003784,-1e-05] (-1,-1; 15,-1), time: 0.2055s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_66, [-1.928757667541504,0.4806206226348877]=>[-1.928757667541504,-1e-05] (-1,-1; 15,-1), time: 0.2106s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_67, [-2.483935594558716,1.2287352085113525]=>[-2.483935594558716,-1e-05] (-1,-1; 15,-1), time: 0.4815s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_55, [-1.7037839889526367,0.6959893107414246]=>[-1.7037839889526367,-1e-05] (-1,-1; 15,-1), time: 0.5314s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_44, [-2.7694039344787598,0.1368107795715332]=>[-2.7694039344787598,-1e-05] (-1,-1; 15,-1), time: 0.2083s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_54, [-2.176450490951538,0.32154685258865356]=>[-2.176450490951538,-1e-05] (-1,-1; 15,-1), time: 0.2106s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_3, [-2.076854944229126,0.4527144134044647]=>[-2.076854944229126,-1e-05] (-1,-1; 15,-1), time: 0.2191s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_19, [-2.1848413944244385,0.7454233765602112]=>[-2.1848413944244385,-1e-05] (-1,-1; 15,-1), time: 0.4405s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_74, [-1.7849057912826538,0.38981062173843384]=>[-1.7849057912826538,-1e-05] (-1,-1; 15,-1), time: 0.2241s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_18, [-2.458951950073242,0.15590530633926392]=>[-2.458951950073242,-1e-05] (-1,-1; 15,-1), time: 0.1782s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_49, [-2.2336344718933105,1.0460000038146973]=>[-2.2336344718933105,-1e-05] (-1,-1; 15,-1), time: 0.4199s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_37, [-0.7627047300338745,1.4148480892181396]=>[1e-05,1.4148480892181396] (15,-1; -1,-1), time: 0.2077s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_16, [-0.9057754278182983,2.5921385288238525]=>[1e-05,2.5921385288238525] (15,-1; -1,-1), time: 5.3302s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_21, [-1.4736628532409668,0.8199238181114197]=>[-1.4736628532409668,-1e-05] (-1,-1; 15,-1), time: 6.8659s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_20, [-1.656245470046997,0.8865046501159668]=>[-1.656245470046997,-1e-05] (-1,-1; 15,-1), time: 8.9336s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_76, [-1.2930904626846313,0.6156549453735352]=>[-1.2930904626846313,-1e-05] (-1,-1; 15,-1), time: 13.2244s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_9, [-0.8985141515731812,1.5155258178710938]=>[1e-05,1.5155258178710938] (15,-1; -1,-1), time: 4.8811s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_38, [-1.9335466623306274,0.8692243099212646]=>[-0.9327947045225085,0.0674275041531965] (2,-1; 2,-1), time: 13.8991s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_39, [-1.4815378189086914,1.6040117740631104]=>[-0.5797161279808318,0.4561902127435032] (2,-1; 2,-1), time: 14.4860s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_70, [-0.7573320269584656,1.733871579170227]=>[1e-05,1.733871579170227] (15,-1; -1,-1), time: 0.4060s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_42, [-1.8158347606658936,0.8845008015632629]=>[-1.8158347606658936,-1e-05] (-1,-1; 15,-1), time: 5.2022s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_41, [-1.7337383031845093,1.107730746269226]=>[-0.8793421577830945,0.18255531208986445] (9,-1; 2,-1), time: 20.9688s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_78, [-1.530722737312317,1.4001719951629639]=>[-0.5443807051856071,0.3583933118837216] (2,-1; 2,-1), time: 19.9760s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_32, [-3.45434832572937,0.00407017394900322]=>[-3.45434832572937,-1e-05] (-1,-1; 15,-1), time: 0.1931s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_30, [-0.9098493456840515,2.467648506164551]=>[1e-05,2.467648506164551] (15,-1; -1,-1), time: 0.3852s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_7, [-1.6465274095535278,0.9430087804794312]=>[-0.7495798307938362,0.05601662669117535] (2,-1; 9,-1), time: 23.6616s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_24, [-1.2998756170272827,1.4645605087280273]=>[-0.26450455047876564,0.5171993733208818] (2,-1; 9,-1), time: 23.5641s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_91, [-2.656485080718994,0.16118887066841125]=>[-2.656485080718994,-1e-05] (-1,-1; 15,-1), time: 0.1761s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_43, [-2.425600290298462,0.7710843682289124]=>[-1.0829544540734157,0.22597516786160354] (9,-1; 2,-1), time: 18.8174s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_11, [-1.3186612129211426,1.8152971267700195]=>[-0.5008525937025055,0.6827989578696712] (9,-1; 2,-1), time: 19.3104s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_22, [-1.551232099533081,0.8134533762931824]=>[-0.5280393496827218,0.030508790036183116] (2,-1; 9,-1), time: 27.2785s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_56, [-0.5031785368919373,2.8914387226104736]=>[1e-05,2.8914387226104736] (15,-1; -1,-1), time: 0.1989s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_90, [-1.3016383647918701,0.8643296360969543]=>[-0.5320078901125177,0.008594147758138528] (2,-1; 9,-1), time: 28.2306s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_79, [-3.084705352783203,0.23989373445510864]=>[-3.084705352783203,-1e-05] (-1,-1; 15,-1), time: 0.1809s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_17, [-0.6679046154022217,2.9039113521575928]=>[1e-05,2.9039113521575928] (15,-1; -1,-1), time: 0.2162s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_15, [-1.279571771621704,0.7593270540237427]=>[-0.5274982235779083,0.004416658709595124] (9,-1; 9,-1), time: 30.0119s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_98, [-0.988222599029541,1.1436516046524048]=>[-0.3076030032776231,0.2940238337498088] (9,-1; 9,-1), time: 30.0123s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_81, [-1.1666184663772583,1.0356875658035278]=>[-0.41368254933911713,0.1499283948856922] (9,-1; 9,-1), time: 30.0189s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_25, [-0.6611219644546509,2.2603063583374023]=>[1e-05,2.2603063583374023] (15,-1; -1,-1), time: 0.2234s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_36, [-0.11044714599847794,2.9575586318969727]=>[1e-05,2.9575586318969727] (15,-1; -1,-1), time: 0.2012s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_34, [-1.194368839263916,1.0253701210021973]=>[-0.3001393501184415,0.22066179506764508] (9,-1; 9,-1), time: 30.0105s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_6, [-0.9574676156044006,1.4780172109603882]=>[1e-05,1.4780172109603882] (15,-1; -1,-1), time: 5.0538s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_77, [-0.3319154977798462,2.8081469535827637]=>[1e-05,2.8081469535827637] (15,-1; -1,-1), time: 0.1932s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_72, [-0.8088591694831848,2.0172488689422607]=>[-0.16559094614438244,1.023777675282943] (2,-1; 2,-1), time: 10.1018s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_99, [-0.8931738138198853,1.6785039901733398]=>[-0.004500483188011463,0.8202767160386644] (9,-1; 2,-1), time: 26.4413s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_89, [-1.361622929573059,1.9704805612564087]=>[-0.362854470252707,0.8054137975118753] (2,-1; 9,-1), time: 19.9791s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_52, [-2.4679760932922363,1.20095694065094]=>[-2.4679760932922363,-1e-05] (-1,-1; 15,-1), time: 5.4843s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_61, [-0.7996209859848022,1.757548213005066]=>[1e-05,1.757548213005066] (15,-1; -1,-1), time: 0.4212s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_84, [-1.4347840547561646,0.5849915742874146]=>[-1.4347840547561646,-1e-05] (-1,-1; 15,-1), time: 0.9702s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_92, [-1.4643055200576782,0.6021965146064758]=>[-1.4643055200576782,-1e-05] (-1,-1; 15,-1), time: 0.2479s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_14, [-3.825328826904297,0.17987851798534393]=>[-3.825328826904297,-1e-05] (-1,-1; 15,-1), time: 0.1934s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_68, [-1.2946650981903076,0.7414891719818115]=>[-0.3488829329617806,0.2110000687282456] (9,-1; 9,-1), time: 30.0187s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_59, [-2.3078420162200928,3.0960121154785156]=>[-1.1198503076663044,1.0680765939437575] (2,-1; 2,-1), time: 14.2286s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_26, [-1.011919379234314,1.010745644569397]=>[-0.10585430106458373,0.3773457976094402] (9,-1; 9,-1), time: 30.0202s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_51, [-1.7167192697525024,0.5147840976715088]=>[-1.7167192697525024,-1e-05] (-1,-1; 15,-1), time: 0.2212s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_73, [-1.2671658992767334,1.425538420677185]=>[-0.31803081901995023,0.652112026573716] (2,-1; 9,-1), time: 25.5173s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_2, [-1.6050084829330444,0.5330885052680969]=>[-1.6050084829330444,-1e-05] (-1,-1; 15,-1), time: 0.2616s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_0, [-1.3799405097961426,1.4382990598678589]=>[-0.5879546819957847,0.4458327131462662] (2,-1; 9,-1), time: 18.4232s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_23, [-1.4580296277999878,0.7231924533843994]=>[-1.4580296277999878,-1e-05] (-1,-1; 15,-1), time: 3.9270s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_93, [-1.5853354930877686,0.7792307138442993]=>[-1.5853354930877686,-1e-05] (-1,-1; 15,-1), time: 0.7117s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_35, [-1.0401018857955933,1.0173465013504028]=>[-0.07646808557705423,0.3748659443738162] (9,-1; 2,-1), time: 25.2743s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_31, [-0.734013557434082,2.508690595626831]=>[1e-05,2.508690595626831] (15,-1; -1,-1), time: 0.2050s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_46, [-2.157694101333618,0.3588178753852844]=>[-2.157694101333618,-1e-05] (-1,-1; 15,-1), time: 0.2104s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_71, [-1.7307466268539429,3.3141028881073]=>[-0.5845522830554047,1.7952847641379224] (9,-1; 2,-1), time: 25.2116s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_47, [-1.9888981580734253,0.30593937635421753]=>[-1.9888981580734253,-1e-05] (-1,-1; 15,-1), time: 0.2017s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_53, [-1.5459554195404053,0.7684684991836548]=>[-1.5459554195404053,-1e-05] (-1,-1; 15,-1), time: 3.6064s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_40, [-1.3073365688323975,0.9110808968544006]=>[-0.47427802127220436,0.18215263246774718] (2,-1; 9,-1), time: 21.0581s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_12, [-2.1496734619140625,1.0326638221740723]=>[-2.1496734619140625,-1e-05] (-1,-1; 15,-1), time: 0.4013s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_1, [-1.6289854049682617,0.7872108817100525]=>[-1.6289854049682617,-1e-05] (-1,-1; 15,-1), time: 6.8029s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_87, [-3.1247637271881104,0.5855366587638855]=>[-3.1247637271881104,-1e-05] (-1,-1; 15,-1), time: 0.2178s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_80, [-2.4764158725738525,0.44954362511634827]=>[-2.4764158725738525,-1e-05] (-1,-1; 15,-1), time: 0.2061s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_96, [-1.1690051555633545,1.2473722696304321]=>[-0.3020078237391253,0.40372607880715916] (9,-1; 2,-1), time: 23.3528s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_85, [-1.1617765426635742,1.1634628772735596]=>[-0.43675936913483865,0.13019749278466328] (9,-1; 9,-1), time: 30.0171s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_4, [-2.8424456119537354,0.49894189834594727]=>[-2.8424456119537354,-1e-05] (-1,-1; 15,-1), time: 0.2432s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_86, [-1.7158093452453613,0.6087797284126282]=>[-1.7158093452453613,-1e-05] (-1,-1; 15,-1), time: 0.1853s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_10, [-1.067946195602417,0.9447753429412842]=>[-0.28091772844418933,0.23785422354056335] (9,-1; 9,-1), time: 30.0130s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_27, [-1.58475923538208,1.0101436376571655]=>[-1.58475923538208,-1e-05] (-1,-1; 15,-1), time: 4.6897s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_57, [-0.9597193002700806,1.7192938327789307]=>[-0.29706556009466556,0.7132711194103988] (2,-1; 9,-1), time: 26.6524s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_94, [-1.610630989074707,0.7651894092559814]=>[-1.610630989074707,-1e-05] (-1,-1; 15,-1), time: 4.4224s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_8, [-1.5630348920822144,0.9107515811920166]=>[-1.5630348920822144,-1e-05] (-1,-1; 15,-1), time: 14.4677s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_50, [-1.8348807096481323,1.1937366724014282]=>[-0.9866722814909353,0.20087127189072002] (2,-1; 2,-1), time: 14.6450s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_64, [-1.9070029258728027,1.1330572366714478]=>[-0.9316732295817451,0.10304279998120026] (9,-1; 2,-1), time: 19.3760s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_29, [-1.1812907457351685,1.4583616256713867]=>[-0.20914590083546855,0.6088064592080195] (2,-1; 2,-1), time: 15.4147s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_83, [-1.5145622491836548,1.296271800994873]=>[-0.7116241642082248,0.15196513482740437] (9,-1; 9,-1), time: 30.0185s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_48, [-1.6730501651763916,1.3856977224349976]=>[-0.6799939672435905,0.5383370697116181] (2,-1; 2,-1), time: 13.9175s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_75, [-1.7508203983306885,1.998648762702942]=>[-0.7652735450760512,0.5967828155453939] (2,-1; 2,-1), time: 20.1514s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_65, [-1.610079050064087,1.0919480323791504]=>[-0.7890833814663616,0.2078962439660067] (9,-1; 2,-1), time: 23.0961s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_28, [-1.1116011142730713,1.1973544359207153]=>[-0.4477161709319353,0.10694121857881546] (9,-1; 9,-1), time: 30.0062s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_62, [-1.2297836542129517,1.1451671123504639]=>[-0.40921135368861467,0.17379091383627052] (9,-1; 9,-1), time: 30.0198s, #vars: 1389, #constrs: 706, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 296.78753662109375 with beta sum per layer: []
alpha/beta optimization time: 17.284250736236572
alpha-CROWN with intermediate bounds by MIP: tensor([[-27.7764, -30.9236, -38.9658, -35.8699, -25.9058, -30.2809, -38.3371,
         -31.5442, -37.1839]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 98 nodes out of 98 unstable nodes, lb improved 42.88766860961914, ub improved 62.90153121948242, time 79.8696
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_23', 'lay10_99', 'lay10_65', 'lay10_88', 'lay10_22', 'lay10_42', 'lay10_72', 'lay10_51', 'lay10_26', 'lay10_37', 'lay10_71', 'lay10_91', 'lay10_70', 'lay10_79', 'lay10_12', 'lay10_13', 'lay10_46', 'lay10_40', 'lay10_24', 'lay10_19', 'lay10_93', 'lay10_43', 'lay10_47', 'lay10_20', 'lay10_81', 'lay10_14', 'lay10_63', 'lay10_34', 'lay10_9', 'lay10_15', 'lay10_80', 'lay10_48', 'lay10_36', 'lay10_49', 'lay10_56', 'lay10_60', 'lay10_1', 'lay10_25', 'lay10_75', 'lay10_10', 'lay10_31', 'lay10_38', 'lay10_66', 'lay10_78', 'lay10_77', 'lay10_3', 'lay10_82', 'lay10_21', 'lay10_2', 'lay10_18', 'lay10_64', 'lay10_97', 'lay10_92', 'lay10_33', 'lay10_8', 'lay10_85', 'lay10_86', 'lay10_67', 'lay10_73', 'lay10_52', 'lay10_54', 'lay10_4', 'lay10_6', 'lay10_28', 'lay10_45', 'lay10_17', 'lay10_76', 'lay10_7', 'lay10_55', 'lay10_16', 'lay10_35', 'lay10_61', 'lay10_84', 'lay10_30', 'lay10_53', 'lay10_69', 'lay10_95', 'lay10_96', 'lay10_58', 'lay10_29', 'lay10_50', 'lay10_32', 'lay10_0', 'lay10_87', 'lay10_90', 'lay10_11', 'lay10_74', 'lay10_59', 'lay10_94', 'lay10_68', 'lay10_62', 'lay10_27', 'lay10_44', 'lay10_83', 'lay10_39', 'lay10_98', 'lay10_57', 'lay10_41', 'lay10_89', 'lay10_5'] filter: 1.0
Solving MIP for lay10_13, [-2.831460952758789,1.9222655296325684]=>[-2.831460952758789,-1e-05] (-1,-1; 15,-1), time: 0.2175s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_99, [-2.7871150970458984,2.363023519515991]=>[-2.7871150970458984,-1e-05] (-1,-1; 15,-1), time: 0.3310s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_22, [-2.666882276535034,1.8058598041534424]=>[-2.666882276535034,-1e-05] (-1,-1; 15,-1), time: 0.3381s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_37, [-2.7411949634552,1.4795544147491455]=>[-2.7411949634552,-1e-05] (-1,-1; 15,-1), time: 0.5965s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_24, [-2.8505966663360596,1.301626205444336]=>[-2.8505966663360596,-1e-05] (-1,-1; 15,-1), time: 0.2953s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_93, [-2.7909014225006104,1.0203466415405273]=>[-2.7909014225006104,-1e-05] (-1,-1; 15,-1), time: 0.2207s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_19, [-2.6654651165008545,2.0142273902893066]=>[-2.6654651165008545,-1e-05] (-1,-1; 15,-1), time: 0.2909s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_26, [-3.0242152214050293,1.6990382671356201]=>[-3.0242152214050293,-1e-05] (-1,-1; 15,-1), time: 1.4946s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_20, [-2.7552995681762695,1.2871315479278564]=>[-2.7552995681762695,-1e-05] (-1,-1; 15,-1), time: 0.2596s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_81, [-2.673131227493286,1.3550188541412354]=>[-2.673131227493286,-1e-05] (-1,-1; 15,-1), time: 0.2522s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_12, [-3.0728883743286133,2.445786952972412]=>[-3.0728883743286133,-1e-05] (-1,-1; 15,-1), time: 6.6780s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_51, [-2.5500569343566895,1.6801791191101074]=>[-2.5500569343566895,-1e-05] (-1,-1; 15,-1), time: 7.6018s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_23, [-2.3142778873443604,2.3297505378723145]=>[-0.8270161579280703,-1e-05] (9,-1; 15,-1), time: 20.1465s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_9, [-2.5408363342285156,1.415770411491394]=>[-2.5408363342285156,-1e-05] (-1,-1; 15,-1), time: 0.2222s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_91, [-2.2914669513702393,2.3430850505828857]=>[-0.983225359455041,-1e-05] (9,-1; 15,-1), time: 22.0776s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_40, [-2.2324094772338867,3.2286739349365234]=>[-0.6708826067324912,0.9087054007091239] (2,-1; 9,-1), time: 23.6566s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_65, [-2.8506412506103516,1.8386003971099854]=>[-0.7272951262108861,0.0036465650348408212] (9,-1; 9,-1), time: 30.0093s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_71, [-1.7484632730484009,2.381577491760254]=>[-0.29448458205598227,0.5062539170241117] (9,-1; 9,-1), time: 30.0095s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_42, [-2.4673361778259277,2.8054120540618896]=>[-0.6128043384661608,0.5040187010779074] (9,-1; 9,-1), time: 30.0111s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_79, [-2.3550124168395996,1.875009298324585]=>[-0.6242759591678849,0.04380294248315306] (9,-1; 9,-1), time: 30.0114s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_72, [-2.367692470550537,2.2233285903930664]=>[-0.461074130513488,0.2097271491116835] (9,-1; 9,-1), time: 30.0189s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_88, [-2.1224629878997803,1.497563123703003]=>[-0.38033877248571246,0.04697139300904687] (9,-1; 9,-1), time: 30.0128s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_70, [-2.1441452503204346,2.278977632522583]=>[-0.41395102701157577,0.19106061219412013] (9,-1; 9,-1), time: 30.0208s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_46, [-1.913941740989685,2.969609022140503]=>[-0.16437442061348836,0.8161112631346449] (9,-1; 9,-1), time: 30.0136s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_25, [-1.9068396091461182,3.008362293243408]=>[1e-05,3.008362293243408] (15,-1; -1,-1), time: 0.2197s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_75, [-1.8385040760040283,3.1754488945007324]=>[1e-05,3.1754488945007324] (15,-1; -1,-1), time: 0.2219s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_31, [-1.4747955799102783,2.3340182304382324]=>[1e-05,2.3340182304382324] (15,-1; -1,-1), time: 0.2110s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_49, [-3.100994348526001,2.2994563579559326]=>[-3.100994348526001,-1e-05] (-1,-1; 15,-1), time: 0.4562s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_10, [-1.7850456237792969,3.4167122840881348]=>[1e-05,3.4167122840881348] (15,-1; -1,-1), time: 0.2406s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_43, [-1.8639823198318481,2.615676164627075]=>[-0.5761028746008152,0.1869652481108534] (9,-1; 9,-1), time: 30.0174s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_47, [-2.5670509338378906,2.5059468746185303]=>[-0.901838373793378,0.34203601517092386] (9,-1; 9,-1), time: 30.0278s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_77, [-2.501241683959961,3.0741238594055176]=>[1e-05,3.0741238594055176] (15,-1; -1,-1), time: 0.8412s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_14, [-1.962794542312622,2.3895671367645264]=>[-0.08934930002240773,0.7178641954233708] (9,-1; 9,-1), time: 30.0055s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_2, [-1.4287687540054321,3.004734754562378]=>[1e-05,3.004734754562378] (15,-1; -1,-1), time: 0.2074s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_66, [-2.311732292175293,3.4070630073547363]=>[1e-05,3.4070630073547363] (15,-1; -1,-1), time: 2.4654s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_78, [-2.5625834465026855,1.4393988847732544]=>[-2.5625834465026855,-1e-05] (-1,-1; 15,-1), time: 4.5660s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_56, [-2.7211005687713623,1.6255286931991577]=>[-2.7211005687713623,-1e-05] (-1,-1; 15,-1), time: 6.6440s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_63, [-2.1419808864593506,3.0267961025238037]=>[-0.49118896399064466,0.6274071142808016] (9,-1; 9,-1), time: 30.0133s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_34, [-2.276787042617798,2.1592109203338623]=>[-0.5885446876365316,0.03989044963858533] (9,-1; 9,-1), time: 30.0074s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_18, [-2.368356704711914,2.6976311206817627]=>[1e-05,2.6976311206817627] (15,-1; -1,-1), time: 6.9660s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_15, [-2.075155258178711,2.825176477432251]=>[-0.295734695633305,0.9611482070070262] (9,-1; 9,-1), time: 30.0208s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_86, [-2.4084253311157227,2.8296191692352295]=>[1e-05,2.8296191692352295] (15,-1; -1,-1), time: 0.7482s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_80, [-2.5252511501312256,1.9872392416000366]=>[-0.7785425716202788,0.10516343723429693] (9,-1; 9,-1), time: 30.0206s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_48, [-2.131565809249878,2.6332437992095947]=>[-0.05003929473642463,0.778958534918087] (9,-1; 9,-1), time: 30.0055s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_60, [-2.303678274154663,2.3466901779174805]=>[-0.526973180731059,0.5033027739415707] (9,-1; 2,-1), time: 24.7203s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_54, [-2.6396799087524414,1.5150731801986694]=>[-2.6396799087524414,-1e-05] (-1,-1; 15,-1), time: 0.2084s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_4, [-1.7922794818878174,2.1408588886260986]=>[1e-05,2.1408588886260986] (15,-1; -1,-1), time: 4.7395s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_8, [-2.4330406188964844,3.084923267364502]=>[-0.7946890285493972,0.79720171417846] (2,-1; 9,-1), time: 22.2998s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_36, [-1.8487608432769775,2.2322580814361572]=>[-0.25484827006543126,0.2933652492243872] (9,-1; 9,-1), time: 30.0136s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_1, [-2.120950222015381,2.197737693786621]=>[-0.5299942411268954,0.20401810169905282] (9,-1; 9,-1), time: 30.0174s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_38, [-2.3357720375061035,2.2901268005371094]=>[-0.5151856584170126,0.415336328101272] (9,-1; 9,-1), time: 30.0133s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_3, [-2.1036224365234375,1.9612321853637695]=>[-0.6579072348588895,0.23252518810559056] (9,-1; 9,-1), time: 30.0165s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_82, [-2.3089382648468018,1.8692067861557007]=>[-0.45519371471159464,0.6076706168207692] (9,-1; 9,-1), time: 30.0073s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_45, [-2.6371235847473145,1.6679989099502563]=>[-2.6371235847473145,-1e-05] (-1,-1; 15,-1), time: 1.2293s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_21, [-1.793565273284912,2.1908576488494873]=>[-0.31594091224651344,0.1826346497272266] (9,-1; 9,-1), time: 30.0055s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_16, [-1.2980952262878418,2.6384384632110596]=>[1e-05,2.6384384632110596] (15,-1; -1,-1), time: 0.2317s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_64, [-2.4918243885040283,1.497471570968628]=>[-0.5799620900454149,0.05803539759744003] (9,-1; 9,-1), time: 30.0063s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_97, [-1.6909126043319702,3.0350749492645264]=>[-0.39991690436716454,0.7460933422858371] (9,-1; 9,-1), time: 30.0075s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_92, [-1.909734845161438,1.8021687269210815]=>[-0.18839538504446038,0.3860494801453606] (9,-1; 9,-1), time: 30.0169s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_33, [-2.195558786392212,2.6155707836151123]=>[-0.3972331614924527,0.4973577517238741] (9,-1; 9,-1), time: 30.0278s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_69, [-1.758321762084961,2.355750799179077]=>[1e-05,2.355750799179077] (15,-1; -1,-1), time: 0.2501s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_85, [-2.4998509883880615,1.6638976335525513]=>[-0.47203379021219544,0.0989366958293133] (9,-1; 9,-1), time: 30.0050s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_7, [-1.7467519044876099,1.9941097497940063]=>[1e-05,1.9941097497940063] (15,-1; -1,-1), time: 8.6913s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_58, [-2.5858864784240723,3.6742024421691895]=>[1e-05,3.6742024421691895] (15,-1; -1,-1), time: 8.6032s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_67, [-1.9670809507369995,2.1334991455078125]=>[-0.18980424146319896,0.40068943884811226] (9,-1; 9,-1), time: 30.0153s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_50, [-1.9037160873413086,3.0007829666137695]=>[1e-05,3.0007829666137695] (15,-1; -1,-1), time: 0.2391s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_32, [-2.847935914993286,1.2716320753097534]=>[-2.847935914993286,-1e-05] (-1,-1; 15,-1), time: 0.2199s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_73, [-2.376462936401367,1.9868263006210327]=>[-0.6858279270721946,0.17438472018747211] (9,-1; 9,-1), time: 30.0193s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_87, [-1.659088373184204,2.939696788787842]=>[1e-05,2.939696788787842] (15,-1; -1,-1), time: 0.2345s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_52, [-2.3172011375427246,2.2136709690093994]=>[-0.4799610622008296,0.5072400031083638] (2,-1; 9,-1), time: 28.9810s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_76, [-2.0708320140838623,2.7412192821502686]=>[-0.45203072507429015,0.735563577180765] (9,-1; 2,-1), time: 27.0350s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_90, [-2.455376386642456,1.7360259294509888]=>[-2.455376386642456,-1e-05] (-1,-1; 15,-1), time: 7.0930s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_6, [-2.277869462966919,1.564447283744812]=>[-0.28565315596760593,0.16826651673045148] (9,-1; 9,-1), time: 30.0051s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_28, [-2.5377511978149414,2.0086429119110107]=>[-0.28683030966279427,0.5127265395503022] (9,-1; 9,-1), time: 30.0088s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_17, [-2.210444450378418,3.1775879859924316]=>[-0.3344705743552586,0.41762756257526734] (9,-1; 9,-1), time: 30.0136s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_11, [-1.9578206539154053,1.9167261123657227]=>[-1.9578206539154053,-1e-05] (-1,-1; 15,-1), time: 7.2874s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_27, [-1.505120873451233,4.1808390617370605]=>[1e-05,4.1808390617370605] (15,-1; -1,-1), time: 0.2084s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_44, [-3.9492695331573486,1.0398814678192139]=>[-3.9492695331573486,-1e-05] (-1,-1; 15,-1), time: 0.2081s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_55, [-1.3297221660614014,2.323316812515259]=>[-0.0064764524550364,0.6598676078152511] (9,-1; 9,-1), time: 30.0102s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_35, [-2.2936298847198486,2.5286993980407715]=>[-0.5123030875577613,0.2944156767938895] (9,-1; 9,-1), time: 30.0065s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_61, [-2.4356749057769775,1.5071302652359009]=>[-0.6460055594980287,0.2481345411099581] (9,-1; 9,-1), time: 30.0047s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_98, [-1.5529435873031616,3.019798755645752]=>[1e-05,3.019798755645752] (15,-1; -1,-1), time: 0.2354s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_83, [-2.927544355392456,1.4027024507522583]=>[-2.927544355392456,-1e-05] (-1,-1; 15,-1), time: 1.0395s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_84, [-2.0529863834381104,2.1967849731445312]=>[-0.030100601729883644,0.5414384476819809] (9,-1; 9,-1), time: 30.0044s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_5, [-2.6526782512664795,1.3343583345413208]=>[-2.6526782512664795,-1e-05] (-1,-1; 15,-1), time: 0.2314s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_30, [-2.3903536796569824,2.3374722003936768]=>[-0.39548893760868115,0.307319887053639] (9,-1; 9,-1), time: 30.0181s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_53, [-2.1541473865509033,2.6975483894348145]=>[-0.21798265915902035,0.7031858034328682] (9,-1; 9,-1), time: 30.0072s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_95, [-2.703828811645508,1.697753667831421]=>[-0.7470846719308867,0.08554937708407809] (9,-1; 9,-1), time: 30.0216s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_96, [-2.0789339542388916,2.410440444946289]=>[-0.5636123860678734,0.5434498661953168] (9,-1; 9,-1), time: 30.0069s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_0, [-2.264190912246704,2.083620071411133]=>[-0.3200946558659945,0.5380747221483897] (2,-1; 9,-1), time: 23.9988s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_29, [-1.6770528554916382,2.705167531967163]=>[-0.07728252205461499,0.8131837757952511] (9,-1; 9,-1), time: 30.0044s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_74, [-2.369704484939575,3.275205135345459]=>[-0.739325865832912,0.7918042659254279] (9,-1; 9,-1), time: 30.0058s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_59, [-2.0867676734924316,1.9181607961654663]=>[-0.1937789084084236,0.49398492698761126] (9,-1; 9,-1), time: 30.0193s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_94, [-1.9568673372268677,2.1798624992370605]=>[-0.3198738342566221,0.7013757397090725] (9,-1; 9,-1), time: 30.0098s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_68, [-2.4088618755340576,1.8996249437332153]=>[-0.32865082589079864,0.4912965289754168] (9,-1; 9,-1), time: 30.0073s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_62, [-1.8653161525726318,2.0277771949768066]=>[-0.2523352297570048,0.32740679633832853] (9,-1; 9,-1), time: 30.0144s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_39, [-2.4373831748962402,1.7118682861328125]=>[-0.5961658480634111,0.016477757881930694] (9,-1; 9,-1), time: 30.0195s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_57, [-2.3115382194519043,1.9108941555023193]=>[-0.4611592183236341,0.1294210781630942] (9,-1; 9,-1), time: 30.0055s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_41, [-2.0484607219696045,1.8507375717163086]=>[-0.3971757373949479,0.1394826653340072] (9,-1; 9,-1), time: 30.0074s, #vars: 1565, #constrs: 920, improved: True
Solving MIP for lay10_89, [-2.7207541465759277,1.5069159269332886]=>[-0.5689775515285234,0.028080133124447577] (9,-1; 9,-1), time: 30.0245s, #vars: 1565, #constrs: 920, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: 149.3615264892578 with beta sum per layer: []
alpha/beta optimization time: 15.757342338562012
alpha-CROWN with intermediate bounds by MIP: tensor([[-13.7545, -15.2204, -19.7000, -18.8565, -12.7092, -15.1881, -18.2994,
         -16.3283, -19.3053]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 135.4507598876953, ub improved 147.5526885986328, time 122.5856
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_98', 'lay12_50', 'lay12_62', 'lay12_31', 'lay12_0', 'lay12_46', 'lay12_63', 'lay12_87', 'lay12_15', 'lay12_34', 'lay12_45', 'lay12_80', 'lay12_97', 'lay12_20', 'lay12_4', 'lay12_23', 'lay12_69', 'lay12_43', 'lay12_88', 'lay12_51', 'lay12_95', 'lay12_53', 'lay12_60', 'lay12_49', 'lay12_37', 'lay12_96', 'lay12_99', 'lay12_29', 'lay12_61', 'lay12_85', 'lay12_40', 'lay12_1', 'lay12_11', 'lay12_22', 'lay12_67', 'lay12_3', 'lay12_10', 'lay12_39', 'lay12_57', 'lay12_30', 'lay12_77', 'lay12_5', 'lay12_18', 'lay12_74', 'lay12_13', 'lay12_90', 'lay12_7', 'lay12_86', 'lay12_2', 'lay12_58', 'lay12_32', 'lay12_65', 'lay12_55', 'lay12_94', 'lay12_91', 'lay12_33', 'lay12_19', 'lay12_92', 'lay12_66', 'lay12_42', 'lay12_28', 'lay12_54', 'lay12_9', 'lay12_52', 'lay12_8', 'lay12_41', 'lay12_21', 'lay12_89', 'lay12_36', 'lay12_84', 'lay12_14', 'lay12_71', 'lay12_79', 'lay12_12', 'lay12_25', 'lay12_73', 'lay12_68', 'lay12_75', 'lay12_27', 'lay12_59', 'lay12_82', 'lay12_76', 'lay12_70', 'lay12_64', 'lay12_47', 'lay12_56', 'lay12_38', 'lay12_6', 'lay12_17', 'lay12_16', 'lay12_93', 'lay12_81', 'lay12_44', 'lay12_78', 'lay12_26', 'lay12_24', 'lay12_72', 'lay12_35', 'lay12_83', 'lay12_48'] filter: 1.0
Solving MIP for lay12_23, [-6.235504627227783,4.150424003601074]=>[-6.235504627227783,-1e-05] (-1,-1; 15,-1), time: 0.3369s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_69, [-5.482809543609619,4.000863075256348]=>[-5.482809543609619,-1e-05] (-1,-1; 15,-1), time: 0.3555s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_15, [-6.16558313369751,5.541832447052002]=>[-6.16558313369751,-1e-05] (-1,-1; 15,-1), time: 1.0170s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_20, [-4.830393314361572,4.36369514465332]=>[-4.830393314361572,-1e-05] (-1,-1; 15,-1), time: 1.2779s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_31, [-4.825217247009277,4.528799057006836]=>[-4.825217247009277,-1e-05] (-1,-1; 15,-1), time: 1.6689s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_51, [-5.983227252960205,3.7087514400482178]=>[-5.983227252960205,-1e-05] (-1,-1; 15,-1), time: 0.3783s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_34, [-5.3104753494262695,3.891599655151367]=>[-5.3104753494262695,-1e-05] (-1,-1; 15,-1), time: 2.2001s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_97, [-5.453307151794434,4.917295932769775]=>[-5.453307151794434,-1e-05] (-1,-1; 15,-1), time: 7.6274s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_0, [-5.622379779815674,3.6562390327453613]=>[-5.622379779815674,-1e-05] (-1,-1; 15,-1), time: 12.3540s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_37, [-5.415446758270264,3.0262491703033447]=>[-5.415446758270264,-1e-05] (-1,-1; 15,-1), time: 0.4000s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_87, [-4.256161689758301,4.471930027008057]=>[-0.956320551897319,-1e-05] (9,-1; 15,-1), time: 20.4737s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_80, [-4.520477294921875,5.499388694763184]=>[-0.5340621038276713,0.29983773492471305] (9,-1; 9,-1), time: 30.0061s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_63, [-5.9106645584106445,5.052093982696533]=>[-1.2824695272534004,0.2198997106964725] (9,-1; 9,-1), time: 30.0092s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_98, [-6.3178935050964355,5.365782737731934]=>[-0.9913643558168351,0.027389820561697212] (9,-1; 9,-1), time: 30.0084s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_50, [-5.50133752822876,5.201767444610596]=>[-0.8890210938406906,0.0434034638645774] (9,-1; 9,-1), time: 30.0086s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_46, [-4.6901421546936035,5.197484016418457]=>[-0.5587532319264426,0.8004168259291573] (9,-1; 9,-1), time: 30.0160s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_45, [-5.360452651977539,3.3518543243408203]=>[-0.8502959561354742,0.09004119524582342] (9,-1; 9,-1), time: 30.0290s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_4, [-5.786378860473633,6.320350646972656]=>[-0.6745221508292222,0.45632155565993093] (9,-1; 9,-1), time: 30.0838s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_62, [-5.123106002807617,5.273189544677734]=>[-1.0078021313474603,0.018672459070766298] (9,-1; 9,-1), time: 30.1155s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_43, [-4.904307842254639,4.138230800628662]=>[-0.5180328284641401,0.7799936264820271] (9,-1; 9,-1), time: 30.0330s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_88, [-4.415400981903076,4.869080066680908]=>[-0.5810054631955616,0.4081289074882622] (9,-1; 9,-1), time: 30.0262s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_95, [-4.6860880851745605,4.838640213012695]=>[-0.6555234356382725,0.2270219498548895] (9,-1; 9,-1), time: 30.0134s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_53, [-4.817192077636719,6.537568092346191]=>[-0.5510520079622611,1.1127413975432883] (9,-1; 9,-1), time: 30.0384s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_57, [-4.821745872497559,3.4590866565704346]=>[-4.821745872497559,-1e-05] (-1,-1; 15,-1), time: 0.3553s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_60, [-5.031692028045654,4.059847831726074]=>[-0.8158792355148873,0.169344037837538] (9,-1; 9,-1), time: 30.0764s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_99, [-5.279809474945068,3.099033832550049]=>[-5.279809474945068,-1e-05] (-1,-1; 15,-1), time: 13.0263s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_5, [-5.671329498291016,3.684573173522949]=>[-5.671329498291016,-1e-05] (-1,-1; 15,-1), time: 0.3579s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_18, [-5.518505096435547,6.556183815002441]=>[1e-05,6.556183815002441] (15,-1; -1,-1), time: 0.3203s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_49, [-5.534431457519531,4.5782151222229]=>[-0.7771085178917821,0.6193799314775341] (9,-1; 9,-1), time: 30.0852s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_96, [-5.001290321350098,4.482922077178955]=>[-0.48411151500674177,0.4381519437122272] (9,-1; 9,-1), time: 30.0079s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_3, [-4.880475997924805,6.023228645324707]=>[1e-05,6.023228645324707] (15,-1; -1,-1), time: 13.5374s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_7, [-4.344261169433594,5.5006794929504395]=>[1e-05,5.5006794929504395] (15,-1; -1,-1), time: 0.3582s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_86, [-4.515044212341309,6.818430423736572]=>[1e-05,6.818430423736572] (15,-1; -1,-1), time: 0.4490s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_30, [-4.7538676261901855,4.2558698654174805]=>[1e-05,1.2630794403024403] (15,-1; 9,-1), time: 16.1762s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_58, [-4.755897521972656,3.6161999702453613]=>[-4.755897521972656,-1e-05] (-1,-1; 15,-1), time: 2.2125s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_90, [-5.063356876373291,4.533508777618408]=>[1e-05,1.0542033791992893] (15,-1; 9,-1), time: 15.4101s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_61, [-5.703612327575684,3.4832260608673096]=>[-0.8870157304321994,0.062211662496523094] (9,-1; 9,-1), time: 30.0064s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_85, [-5.024989128112793,5.0382890701293945]=>[-0.6500807251277282,0.3121668614236433] (9,-1; 9,-1), time: 30.0190s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_1, [-4.824177265167236,5.861822605133057]=>[-0.4093411925339338,1.3055867262224232] (9,-1; 9,-1), time: 30.0220s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_40, [-4.3527445793151855,4.809304237365723]=>[-0.5603402279700235,0.18724565225239542] (9,-1; 9,-1), time: 30.0393s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_11, [-5.373112201690674,5.178319454193115]=>[-1.0862017225429632,0.6194778949864277] (9,-1; 9,-1), time: 30.0446s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_22, [-5.060337543487549,3.0707693099975586]=>[-0.6957574247026311,0.06663176439469681] (9,-1; 9,-1), time: 30.0294s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_67, [-4.719340801239014,4.736367702484131]=>[-0.5519996096533389,0.19359361916727708] (9,-1; 9,-1), time: 30.0117s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_29, [-4.8135762214660645,4.968698978424072]=>[-0.7890745643435384,0.3036215041498801] (9,-1; 9,-1), time: 30.1211s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_42, [-5.691407680511475,3.3360235691070557]=>[-5.691407680511475,-1e-05] (-1,-1; 15,-1), time: 0.4240s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_2, [-5.061448097229004,4.145005702972412]=>[1e-05,1.1221986575617766] (15,-1; 9,-1), time: 15.8821s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_10, [-5.099800109863281,3.6490609645843506]=>[-0.5375201490648654,0.4379652095391257] (9,-1; 9,-1), time: 30.0072s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_39, [-5.367731094360352,2.6922247409820557]=>[-0.7262400843276559,0.02760836685233335] (9,-1; 9,-1), time: 30.1057s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_77, [-4.790175437927246,3.2196125984191895]=>[-0.6316477353382084,0.21485971675393736] (9,-1; 9,-1), time: 30.0110s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_74, [-5.276840686798096,3.221121072769165]=>[-0.5345017004388699,0.9523048253608817] (9,-1; 9,-1), time: 30.0117s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_33, [-5.576996326446533,3.8129334449768066]=>[-5.576996326446533,-1e-05] (-1,-1; 15,-1), time: 7.2874s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_13, [-6.467752456665039,4.030858516693115]=>[-0.7889785048997697,1.2754498929600635] (9,-1; 9,-1), time: 30.0263s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_89, [-6.514094352722168,3.2138705253601074]=>[-6.514094352722168,-1e-05] (-1,-1; 15,-1), time: 0.3600s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_19, [-5.584695339202881,3.155484199523926]=>[-5.584695339202881,-1e-05] (-1,-1; 15,-1), time: 8.0983s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_84, [-5.034735202789307,2.815831184387207]=>[-5.034735202789307,-1e-05] (-1,-1; 15,-1), time: 0.3107s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_32, [-5.207871913909912,4.230888366699219]=>[-0.9711726078408657,0.05777925115442384] (9,-1; 9,-1), time: 30.1244s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_94, [-5.346626281738281,4.8286333084106445]=>[1e-05,1.1526678861660915] (15,-1; 9,-1), time: 21.6873s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_65, [-5.544435024261475,3.5079782009124756]=>[-0.8921151309821145,0.2045910511312521] (9,-1; 9,-1), time: 30.1787s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_91, [-3.978498935699463,4.970483779907227]=>[-0.05373931639625074,0.9440842437520326] (9,-1; 9,-1), time: 30.0065s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_55, [-4.62153434753418,3.5996603965759277]=>[-0.5039915960750416,0.36960332952868197] (9,-1; 9,-1), time: 30.0327s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_92, [-4.120408535003662,3.9208459854125977]=>[-0.3177949811062671,0.5297908262015726] (9,-1; 9,-1), time: 30.0128s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_66, [-5.39453649520874,4.734349250793457]=>[-0.5614845202544779,1.0844123926759648] (9,-1; 9,-1), time: 30.0125s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_28, [-4.701758861541748,3.613631248474121]=>[-0.6975034106227096,0.0683955751110924] (9,-1; 9,-1), time: 30.0267s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_54, [-5.468862056732178,4.1030120849609375]=>[-1.0449666034918772,0.023724488441396394] (9,-1; 9,-1), time: 30.0637s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_9, [-4.405518054962158,4.658298492431641]=>[-0.03354394910139667,0.8940973352069393] (9,-1; 9,-1), time: 30.0326s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_52, [-4.412309169769287,4.802104473114014]=>[-0.43996408444873786,0.6474567434411213] (9,-1; 9,-1), time: 30.0118s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_8, [-4.141193389892578,4.643049716949463]=>[-0.12993334871870224,0.8740127495674161] (9,-1; 9,-1), time: 30.1560s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_12, [-5.409814357757568,3.566345453262329]=>[-5.409814357757568,-1e-05] (-1,-1; 15,-1), time: 5.7561s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_41, [-4.698724269866943,3.536766767501831]=>[-0.9657105784183337,0.023550952973480595] (9,-1; 9,-1), time: 30.0187s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_21, [-5.448650360107422,3.669011354446411]=>[-1.2042332480839073,0.2538529251585855] (9,-1; 9,-1), time: 30.0284s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_36, [-5.804994583129883,4.475558280944824]=>[-0.5704736394162311,0.7168248765442978] (9,-1; 9,-1), time: 30.0098s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_14, [-5.034202575683594,3.699662446975708]=>[-0.5750314563778225,0.23186456220527665] (9,-1; 9,-1), time: 30.0051s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_38, [-6.283753871917725,2.8431835174560547]=>[-6.283753871917725,-1e-05] (-1,-1; 15,-1), time: 0.3852s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_17, [-3.901259422302246,5.897025108337402]=>[1e-05,5.897025108337402] (15,-1; -1,-1), time: 0.3201s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_6, [-5.4300336837768555,3.427508592605591]=>[-5.4300336837768555,-1e-05] (-1,-1; 15,-1), time: 0.3262s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_93, [-5.28882360458374,3.841630220413208]=>[-5.28882360458374,-1e-05] (-1,-1; 15,-1), time: 0.3049s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_16, [-5.15930700302124,3.0646464824676514]=>[-5.15930700302124,-1e-05] (-1,-1; 15,-1), time: 0.6878s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_56, [-5.538482189178467,2.896423816680908]=>[-5.538482189178467,-1e-05] (-1,-1; 15,-1), time: 11.8874s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_78, [-5.931187629699707,3.113295078277588]=>[-5.931187629699707,-1e-05] (-1,-1; 15,-1), time: 0.8647s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_71, [-4.865010738372803,3.8684377670288086]=>[-0.7258192820619378,0.42942506127590346] (9,-1; 9,-1), time: 30.0414s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_79, [-4.756096839904785,3.8101513385772705]=>[-0.5217516461938602,0.2876036175105746] (9,-1; 9,-1), time: 30.0060s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_73, [-4.994142532348633,4.926361560821533]=>[-0.5080154931317231,0.4807467048330597] (9,-1; 9,-1), time: 30.0175s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_25, [-5.718189239501953,4.500188827514648]=>[-0.5741926424098801,0.3470258679732917] (9,-1; 9,-1), time: 30.1110s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_68, [-4.0854105949401855,5.900150775909424]=>[-0.5474662744118438,1.0298818706334574] (9,-1; 9,-1), time: 30.0457s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_75, [-4.9204630851745605,4.155289173126221]=>[-0.664982376417189,0.20249430008266658] (9,-1; 9,-1), time: 30.0256s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_35, [-5.642982482910156,5.300648212432861]=>[-5.642982482910156,-1e-05] (-1,-1; 15,-1), time: 0.3132s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_83, [-6.849163055419922,4.283328533172607]=>[-6.849163055419922,-1e-05] (-1,-1; 15,-1), time: 0.3057s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_27, [-5.923662185668945,4.954586982727051]=>[-0.9017496376576857,0.192598664029535] (9,-1; 9,-1), time: 30.0054s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_59, [-4.420899868011475,6.844427585601807]=>[-0.09581900191346972,1.6187287801510628] (9,-1; 9,-1), time: 30.0075s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_82, [-5.837421894073486,3.4635651111602783]=>[-0.7744633011346372,0.11970190090260743] (9,-1; 9,-1), time: 30.1052s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_76, [-4.523590564727783,3.6166744232177734]=>[-0.6098437190410353,0.142687580084477] (9,-1; 9,-1), time: 30.0047s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_70, [-5.425970554351807,5.716147422790527]=>[-0.7725238250930416,0.29966216267279766] (9,-1; 9,-1), time: 30.0941s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_47, [-4.473880767822266,5.311838626861572]=>[-0.2986187224415464,0.7110369094269902] (9,-1; 9,-1), time: 30.0109s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_64, [-4.0198469161987305,4.088008403778076]=>[-0.659565596332362,0.19531610779214967] (9,-1; 9,-1), time: 30.1280s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_81, [-4.815176486968994,4.850910186767578]=>[-0.5114173553604011,0.5701271761425981] (9,-1; 9,-1), time: 30.0054s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_44, [-5.869233131408691,4.237271785736084]=>[-0.8160744890019745,0.4375435780453489] (9,-1; 9,-1), time: 30.0117s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_26, [-5.472632884979248,6.606382369995117]=>[-0.3854099216138712,1.3250316391030847] (9,-1; 9,-1), time: 30.0238s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_24, [-5.299551486968994,6.381345748901367]=>[-0.8729426292873816,1.1769327395552476] (9,-1; 9,-1), time: 30.0242s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_72, [-4.517618656158447,6.623878479003906]=>[-0.40664833936625383,1.3561789378384401] (9,-1; 9,-1), time: 30.0195s, #vars: 1777, #constrs: 1188, improved: True
Solving MIP for lay12_48, [-4.639240264892578,5.016316890716553]=>[-0.6984745899985066,0.18412557370728064] (9,-1; 9,-1), time: 30.0193s, #vars: 1777, #constrs: 1188, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: 89.62934875488281 with beta sum per layer: []
alpha/beta optimization time: 17.43133783340454
alpha-CROWN with intermediate bounds by MIP: tensor([[ -8.0744,  -8.7852, -11.8128, -12.2945,  -7.1143,  -9.0592,  -9.9933,
         -10.4367, -12.0589]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 318.3942565917969, ub improved 378.0218200683594, time 150.9482
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_41', 'lay14_35', 'lay14_67', 'lay14_87', 'lay14_92', 'lay14_18', 'lay14_31', 'lay14_19', 'lay14_40', 'lay14_63', 'lay14_5', 'lay14_95', 'lay14_78', 'lay14_57', 'lay14_23', 'lay14_90', 'lay14_74', 'lay14_76', 'lay14_84', 'lay14_89', 'lay14_77', 'lay14_97', 'lay14_39', 'lay14_11', 'lay14_66', 'lay14_32', 'lay14_33', 'lay14_75', 'lay14_94', 'lay14_58', 'lay14_53', 'lay14_85', 'lay14_51', 'lay14_64', 'lay14_28', 'lay14_38', 'lay14_36', 'lay14_52', 'lay14_82', 'lay14_47', 'lay14_80', 'lay14_72', 'lay14_46', 'lay14_86', 'lay14_65', 'lay14_70', 'lay14_73', 'lay14_50', 'lay14_44', 'lay14_37', 'lay14_7', 'lay14_14', 'lay14_3', 'lay14_26', 'lay14_49', 'lay14_42', 'lay14_83', 'lay14_34', 'lay14_69', 'lay14_96', 'lay14_88', 'lay14_59', 'lay14_1', 'lay14_71', 'lay14_10', 'lay14_98', 'lay14_21', 'lay14_60', 'lay14_22', 'lay14_9', 'lay14_79', 'lay14_29', 'lay14_25', 'lay14_48', 'lay14_55', 'lay14_61', 'lay14_30', 'lay14_16', 'lay14_0', 'lay14_20', 'lay14_8', 'lay14_45', 'lay14_2', 'lay14_12', 'lay14_43', 'lay14_56', 'lay14_91', 'lay14_68', 'lay14_17', 'lay14_13', 'lay14_6', 'lay14_24', 'lay14_27', 'lay14_15', 'lay14_62', 'lay14_54', 'lay14_81', 'lay14_99', 'lay14_93', 'lay14_4'] filter: 1.0
Solving MIP for lay14_63, [-11.238627433776855,9.839240074157715]=>[-11.238627433776855,-1e-05] (-1,-1; 15,-1), time: 12.9347s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_87, [-10.614663124084473,10.069819450378418]=>[-0.7963897793354107,0.7047807759426716] (9,-1; 9,-1), time: 30.0095s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_41, [-9.330475807189941,11.622196197509766]=>[-1.0598874626814958,0.12287567771871696] (9,-1; 9,-1), time: 30.0121s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_19, [-11.116133689880371,7.199552059173584]=>[-0.6589964849103537,0.29963255342304085] (9,-1; 9,-1), time: 30.0085s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_90, [-9.623289108276367,8.278675079345703]=>[-0.6171489259572369,0.4645780090738572] (9,-1; 9,-1), time: 30.0087s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_5, [-11.689638137817383,11.644176483154297]=>[-1.1104368055545755,0.9283115253061681] (9,-1; 9,-1), time: 30.0109s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_95, [-10.108285903930664,9.820780754089355]=>[-0.439982512908286,0.8437566007773272] (9,-1; 9,-1), time: 30.0062s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_40, [-9.23474407196045,11.987712860107422]=>[-1.2592544248342856,0.032012797025638626] (9,-1; 9,-1), time: 30.0064s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_18, [-8.956706047058105,7.7466278076171875]=>[-0.5808376687183118,0.431674550578666] (9,-1; 9,-1), time: 30.0071s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_67, [-8.773658752441406,12.950882911682129]=>[-0.7274343658579937,0.8098055157611355] (9,-1; 9,-1), time: 30.0108s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_92, [-11.230052947998047,6.224134922027588]=>[-0.44441285416528076,0.5203344806196709] (9,-1; 9,-1), time: 30.0150s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_31, [-10.3971529006958,9.793401718139648]=>[-1.0146455614208536,0.48845806322883284] (9,-1; 9,-1), time: 30.0125s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_57, [-11.690217971801758,6.824074745178223]=>[-0.8932104206690807,0.07035546570391706] (9,-1; 9,-1), time: 30.0233s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_35, [-10.855599403381348,11.976665496826172]=>[-1.467319456512245,0.4452858142882739] (9,-1; 9,-1), time: 30.0335s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_78, [-11.439361572265625,11.290534973144531]=>[-1.2208991222921812,0.19433551137233496] (9,-1; 9,-1), time: 30.0489s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_23, [-9.266288757324219,10.266024589538574]=>[-0.9702203033990977,0.32528200426639975] (9,-1; 9,-1), time: 30.0864s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_39, [-11.13270092010498,6.880866527557373]=>[-11.13270092010498,-1e-05] (-1,-1; 15,-1), time: 2.0357s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_74, [-11.228034019470215,7.744355201721191]=>[-1.4097163758390936,0.07844817798812259] (9,-1; 9,-1), time: 30.0066s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_76, [-9.958938598632812,8.627403259277344]=>[-0.43532384974687716,0.6627375482769976] (9,-1; 9,-1), time: 30.0079s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_77, [-10.000831604003906,7.888422966003418]=>[-0.9333008039728893,0.04631579197981612] (9,-1; 9,-1), time: 30.0078s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_84, [-10.099093437194824,10.140816688537598]=>[-0.5667658663014313,0.4968480241689839] (9,-1; 9,-1), time: 30.0062s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_89, [-9.583606719970703,10.449360847473145]=>[-0.9388530604012137,0.18882102524683417] (9,-1; 9,-1), time: 30.0086s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_11, [-13.460342407226562,10.15243148803711]=>[-0.4086690978733987,1.1860561457931704] (9,-1; 9,-1), time: 30.0047s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_66, [-12.09597110748291,8.845245361328125]=>[-0.6438640513268302,0.4308578621196931] (9,-1; 9,-1), time: 30.0055s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_32, [-9.07508373260498,8.247007369995117]=>[-0.624372899964414,0.25975810905362295] (9,-1; 9,-1), time: 30.0050s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_75, [-10.154878616333008,8.177607536315918]=>[-0.09269002239859604,1.1117746159210686] (9,-1; 9,-1), time: 30.0050s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_33, [-9.422504425048828,10.848075866699219]=>[-0.6902529227154051,0.41029784657222823] (9,-1; 9,-1), time: 30.0127s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_94, [-11.40506362915039,8.756649017333984]=>[-1.302967562623697,0.0666984351488648] (9,-1; 9,-1), time: 30.0118s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_97, [-8.118057250976562,10.457502365112305]=>[-0.4291576270000567,0.683591477657614] (9,-1; 9,-1), time: 30.0159s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_58, [-9.961507797241211,9.490245819091797]=>[-0.47702711778205,0.5015790628495564] (9,-1; 9,-1), time: 30.0064s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_53, [-10.482478141784668,9.522561073303223]=>[-1.3133140305580344,0.042533159946249434] (9,-1; 9,-1), time: 30.0336s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_85, [-10.724493980407715,7.711218357086182]=>[-1.3109406811560667,0.2870184262822743] (9,-1; 9,-1), time: 30.0990s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_72, [-9.378388404846191,12.13097095489502]=>[1e-05,12.13097095489502] (15,-1; -1,-1), time: 0.4337s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_47, [-9.534356117248535,10.170639038085938]=>[1e-05,10.170639038085938] (15,-1; -1,-1), time: 0.4636s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_38, [-8.227123260498047,10.494674682617188]=>[1e-05,10.494674682617188] (15,-1; -1,-1), time: 0.9076s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_51, [-11.240020751953125,7.879588603973389]=>[-1.0954144751934962,0.27932426398277205] (9,-1; 9,-1), time: 30.0054s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_28, [-9.921935081481934,10.9625825881958]=>[1e-05,10.9625825881958] (15,-1; -1,-1), time: 6.3239s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_3, [-9.267401695251465,10.107099533081055]=>[1e-05,10.107099533081055] (15,-1; -1,-1), time: 0.6344s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_80, [-8.959927558898926,9.365657806396484]=>[1e-05,9.365657806396484] (15,-1; -1,-1), time: 8.4792s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_14, [-8.995076179504395,10.863835334777832]=>[1e-05,10.863835334777832] (15,-1; -1,-1), time: 8.1373s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_65, [-11.439332008361816,13.288931846618652]=>[1e-05,13.288931846618652] (15,-1; -1,-1), time: 11.5901s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_64, [-11.22294807434082,9.033684730529785]=>[-0.5156226421944019,1.6110542284500857] (9,-1; 9,-1), time: 30.0525s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_73, [-9.529390335083008,8.712798118591309]=>[1e-05,1.5003904959471592] (15,-1; 9,-1), time: 15.9408s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_52, [-11.427638053894043,8.777704238891602]=>[-0.8190281377474469,0.3928667692926719] (9,-1; 9,-1), time: 30.0057s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_36, [-10.109724998474121,10.007011413574219]=>[-0.09918342076959338,1.602910262568217] (9,-1; 9,-1), time: 30.0156s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_86, [-11.114004135131836,9.481342315673828]=>[-0.5348628269066047,0.6580263025900209] (9,-1; 9,-1), time: 30.0062s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_46, [-11.710826873779297,8.66252326965332]=>[-0.15879978145976315,1.3899996630329399] (9,-1; 9,-1), time: 30.0143s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_82, [-10.179443359375,9.82919692993164]=>[-0.07310851680003089,1.3156135654609187] (9,-1; 9,-1), time: 30.0386s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_70, [-10.5426025390625,10.639233589172363]=>[-0.04772343130971656,1.2895700141015263] (9,-1; 9,-1), time: 30.1224s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_50, [-10.76744556427002,8.240274429321289]=>[-0.5292947698722624,1.011872259617766] (9,-1; 9,-1), time: 30.0289s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_37, [-11.198346138000488,8.815549850463867]=>[-0.1252588790787937,0.866212802408858] (9,-1; 9,-1), time: 30.0058s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_44, [-9.10580825805664,10.526667594909668]=>[-0.38789154569691026,1.4827847264184997] (9,-1; 9,-1), time: 30.0376s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_7, [-12.766159057617188,7.957276821136475]=>[-0.7222006737162355,0.674782240404265] (9,-1; 9,-1), time: 30.0060s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_26, [-9.939611434936523,9.509421348571777]=>[-0.5188555553115429,1.051607321610467] (9,-1; 9,-1), time: 30.0057s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_49, [-11.45168399810791,7.234094619750977]=>[-0.45488439196329833,0.8299254851408041] (9,-1; 9,-1), time: 30.0635s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_42, [-9.020636558532715,9.595108985900879]=>[-0.36958743993890236,0.6546186500322418] (9,-1; 9,-1), time: 30.0155s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_83, [-9.871768951416016,9.499298095703125]=>[-0.4634161747731889,0.8671693528883043] (9,-1; 9,-1), time: 30.0051s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_34, [-11.860726356506348,7.453002452850342]=>[-0.9619004135174303,0.07827577408400564] (9,-1; 9,-1), time: 30.0079s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_69, [-9.813291549682617,10.242337226867676]=>[-0.2715880295411155,1.4629280854111895] (9,-1; 9,-1), time: 30.0053s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_88, [-9.376884460449219,8.727590560913086]=>[-0.4702821070871321,0.9637608025897387] (9,-1; 9,-1), time: 30.0069s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_59, [-9.981258392333984,9.804691314697266]=>[-0.7363949492870033,0.4515887518789364] (9,-1; 9,-1), time: 30.0080s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_96, [-10.877253532409668,13.101157188415527]=>[-0.20024722162872405,1.780246418625318] (9,-1; 9,-1), time: 30.0349s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_71, [-11.367329597473145,9.641682624816895]=>[-0.5763905506098574,0.8136859076165387] (9,-1; 9,-1), time: 30.0041s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_1, [-10.136069297790527,8.693081855773926]=>[-0.6212403845256425,1.145282838376582] (9,-1; 9,-1), time: 30.0561s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_10, [-11.745319366455078,9.641197204589844]=>[-1.0487727562607125,0.15939657232465765] (9,-1; 9,-1), time: 30.0095s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_98, [-13.272939682006836,8.500652313232422]=>[-0.9689871599797446,0.8924582947698577] (9,-1; 9,-1), time: 30.0042s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_60, [-12.387182235717773,7.268182754516602]=>[-0.9006805790138276,0.16777142396981765] (9,-1; 9,-1), time: 30.0041s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_21, [-9.637081146240234,8.566193580627441]=>[-0.9972218880856087,0.19361296361716068] (9,-1; 9,-1), time: 30.0252s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_22, [-11.079843521118164,10.820136070251465]=>[-0.62328411709195,1.0390541964905302] (9,-1; 9,-1), time: 30.0042s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_2, [-10.835821151733398,11.42108154296875]=>[1e-05,11.42108154296875] (15,-1; -1,-1), time: 0.8295s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_79, [-11.409703254699707,11.035332679748535]=>[1e-05,1.7350598503982244] (15,-1; 9,-1), time: 28.2964s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_9, [-11.115145683288574,8.789702415466309]=>[-0.6175190734218607,0.786717456511178] (9,-1; 9,-1), time: 30.0183s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_29, [-10.243882179260254,8.91111946105957]=>[-0.8788380314063653,0.1984642708710894] (9,-1; 9,-1), time: 30.0062s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_25, [-11.050009727478027,6.520823001861572]=>[-0.8789379333215717,0.05096747703431714] (9,-1; 9,-1), time: 30.0472s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_48, [-9.4185152053833,7.233797073364258]=>[-1.005904666704484,0.08417877098801192] (9,-1; 9,-1), time: 30.0275s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_55, [-11.920565605163574,10.788859367370605]=>[-0.994657982605489,1.0661940053777368] (9,-1; 9,-1), time: 30.0090s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_61, [-10.88907241821289,6.453346252441406]=>[-0.907001451645048,0.060258907234026465] (9,-1; 9,-1), time: 30.0104s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_30, [-9.716004371643066,8.162174224853516]=>[-0.9658414805308924,0.7304949419384557] (9,-1; 9,-1), time: 30.0155s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_16, [-9.739349365234375,10.245684623718262]=>[-0.6264043532792831,0.5765481866328518] (9,-1; 9,-1), time: 30.0321s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_0, [-9.18582534790039,9.098077774047852]=>[-0.5927783869001404,0.5614986814262304] (9,-1; 9,-1), time: 30.0098s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_20, [-9.758549690246582,11.259078025817871]=>[-1.087627079983884,1.3726081797916747] (9,-1; 9,-1), time: 30.0071s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_8, [-10.048345565795898,8.330343246459961]=>[-0.7679833910823705,0.5783057702254645] (9,-1; 9,-1), time: 30.0048s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_45, [-11.337571144104004,7.4888715744018555]=>[-0.9600976320033691,0.6896661853595294] (9,-1; 9,-1), time: 30.0177s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_12, [-9.275312423706055,10.877159118652344]=>[-0.8520717650760182,0.48091680473143006] (9,-1; 9,-1), time: 30.0055s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_43, [-10.696805000305176,8.778918266296387]=>[-0.8789993588572365,0.33869039561644204] (9,-1; 9,-1), time: 30.0059s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_56, [-8.985329627990723,11.045089721679688]=>[-0.7775570006290639,0.5763827757450977] (9,-1; 9,-1), time: 30.0161s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_91, [-9.811041831970215,12.175213813781738]=>[-0.3336230339046886,1.5583857960764056] (9,-1; 9,-1), time: 30.0056s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_68, [-9.150751113891602,10.375100135803223]=>[-0.5671540515864927,0.8243957306648309] (9,-1; 9,-1), time: 30.0059s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_17, [-11.92573356628418,6.063940525054932]=>[-0.7972212939068668,0.16531689143095024] (9,-1; 9,-1), time: 30.0069s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_13, [-9.433879852294922,9.335378646850586]=>[-0.6955223789133231,0.23893756856553489] (9,-1; 9,-1), time: 30.0286s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_6, [-10.398052215576172,10.308833122253418]=>[-0.4371591855336706,0.7376380761729764] (9,-1; 9,-1), time: 30.0064s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_24, [-9.28751277923584,10.123053550720215]=>[-0.28177796788444287,0.6474515701596683] (9,-1; 9,-1), time: 30.0456s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_27, [-11.368223190307617,9.12331771850586]=>[-0.55571719099773,0.5163226911722063] (9,-1; 9,-1), time: 30.0041s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_15, [-9.576171875,8.595046997070312]=>[-0.1417462449011404,1.151561770569479] (9,-1; 9,-1), time: 30.0184s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_81, [-8.879347801208496,10.981324195861816]=>[-0.22806998809929635,0.9571398761076636] (9,-1; 9,-1), time: 30.0094s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_62, [-11.348580360412598,11.607932090759277]=>[-1.1327418497133073,0.0042581466664765675] (9,-1; 9,-1), time: 30.0321s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_54, [-11.434678077697754,9.842769622802734]=>[-1.1496407477295194,0.13069829818336942] (9,-1; 9,-1), time: 30.0691s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_99, [-10.111384391784668,10.182405471801758]=>[-0.8994703614096419,0.7554679186250565] (9,-1; 9,-1), time: 30.0182s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_93, [-11.642497062683105,7.818514823913574]=>[-0.8830551901847722,0.2806054380613561] (9,-1; 9,-1), time: 30.0141s, #vars: 2001, #constrs: 1474, improved: True
Solving MIP for lay14_4, [-9.96002197265625,9.839760780334473]=>[-0.8629748430040104,0.5462438475978445] (9,-1; 9,-1), time: 30.0094s, #vars: 2001, #constrs: 1474, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: 59.3371696472168 with beta sum per layer: []
alpha/beta optimization time: 14.468619346618652
alpha-CROWN with intermediate bounds by MIP: tensor([[-4.9494, -5.4946, -7.8915, -9.1600, -4.2316, -5.9079, -5.6188, -7.5815,
         -8.5019]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 956.6190185546875, ub improved 791.5628662109375, time 181.3497
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_68', 'lay16_57', 'lay16_23', 'lay16_37', 'lay16_15', 'lay16_77', 'lay16_82', 'lay16_71', 'lay16_76', 'lay16_84', 'lay16_10', 'lay16_32', 'lay16_14', 'lay16_49', 'lay16_25', 'lay16_9', 'lay16_40', 'lay16_96', 'lay16_35', 'lay16_74', 'lay16_98', 'lay16_66', 'lay16_12', 'lay16_24', 'lay16_42', 'lay16_94', 'lay16_30', 'lay16_65', 'lay16_20', 'lay16_1', 'lay16_93', 'lay16_70', 'lay16_6', 'lay16_28', 'lay16_80', 'lay16_54', 'lay16_22', 'lay16_31', 'lay16_60', 'lay16_7', 'lay16_5', 'lay16_55', 'lay16_4', 'lay16_45', 'lay16_72', 'lay16_33', 'lay16_73', 'lay16_50', 'lay16_3', 'lay16_53', 'lay16_90', 'lay16_89', 'lay16_48', 'lay16_91', 'lay16_19', 'lay16_79', 'lay16_41', 'lay16_87', 'lay16_51', 'lay16_95', 'lay16_2', 'lay16_63', 'lay16_44', 'lay16_64', 'lay16_86', 'lay16_99', 'lay16_29', 'lay16_61', 'lay16_43', 'lay16_27', 'lay16_69', 'lay16_26', 'lay16_11', 'lay16_78', 'lay16_39', 'lay16_38', 'lay16_21', 'lay16_52', 'lay16_36', 'lay16_0', 'lay16_34', 'lay16_47', 'lay16_58', 'lay16_85', 'lay16_97', 'lay16_75', 'lay16_16', 'lay16_13', 'lay16_88', 'lay16_62', 'lay16_67', 'lay16_81', 'lay16_56', 'lay16_8', 'lay16_59', 'lay16_83', 'lay16_92', 'lay16_17', 'lay16_46', 'lay16_18'] filter: 1.0
Solving MIP for lay16_68, [-25.313806533813477,22.342824935913086]=>[-1.6479371472465314,0.9033804291599373] (9,-1; 9,-1), time: 30.0062s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_37, [-23.84868812561035,21.39176368713379]=>[-1.6737415523899404,0.540167213697738] (9,-1; 9,-1), time: 30.0129s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_71, [-26.374303817749023,22.100252151489258]=>[-2.5163013940598247,0.1956303037865404] (9,-1; 9,-1), time: 30.0078s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_84, [-23.443288803100586,22.00481605529785]=>[-2.1235245400272937,0.33667474342343834] (9,-1; 9,-1), time: 30.0062s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_32, [-17.56248664855957,17.89542007446289]=>[-1.1826272021738364,0.46431294302180764] (9,-1; 9,-1), time: 30.0092s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_23, [-20.337060928344727,22.210485458374023]=>[-1.0478215580531272,1.128443291301492] (9,-1; 9,-1), time: 30.0072s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_57, [-26.14678192138672,20.07946014404297]=>[-1.6491265324732032,0.5690471119963547] (9,-1; 9,-1), time: 30.0096s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_15, [-24.484092712402344,27.62897300720215]=>[-1.8991782867431295,1.5000479435772718] (9,-1; 9,-1), time: 30.0097s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_10, [-19.10836410522461,16.810640335083008]=>[-1.1249282518988213,0.701174014704649] (9,-1; 9,-1), time: 30.0096s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_14, [-21.205171585083008,24.521968841552734]=>[-0.7530328960858216,1.7528098717997105] (9,-1; 9,-1), time: 30.0152s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_77, [-25.360506057739258,18.926368713378906]=>[-2.234946407705708,0.45018371416513703] (9,-1; 9,-1), time: 30.0109s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_82, [-23.90094566345215,16.780832290649414]=>[-2.2493497337948356,0.39020492938253293] (9,-1; 9,-1), time: 30.0120s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_25, [-21.258852005004883,22.084491729736328]=>[-1.215009797321055,0.7005580966957057] (9,-1; 9,-1), time: 30.0143s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_76, [-24.477420806884766,19.475278854370117]=>[-1.5251873646924652,0.6456312172258276] (9,-1; 9,-1), time: 30.0142s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_49, [-24.809661865234375,23.305686950683594]=>[-1.2928232645107522,1.3297166907786977] (9,-1; 9,-1), time: 30.0099s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_9, [-25.398286819458008,17.38423728942871]=>[-1.6504636535619197,0.52117119473852] (9,-1; 9,-1), time: 30.0192s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_40, [-25.255922317504883,24.118860244750977]=>[-0.678456247031156,1.6775175040014718] (9,-1; 9,-1), time: 30.0063s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_96, [-22.562681198120117,15.577795028686523]=>[-1.4990517086449695,0.3625357879716212] (9,-1; 9,-1), time: 30.0082s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_74, [-20.928064346313477,22.87215232849121]=>[-1.277884397818226,0.809681088678749] (9,-1; 9,-1), time: 30.0037s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_35, [-25.894514083862305,16.793624877929688]=>[-2.455768715651995,0.18707112220747293] (9,-1; 9,-1), time: 30.0139s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_24, [-25.95921516418457,14.846443176269531]=>[-1.3807212792879475,0.42649457337629165] (9,-1; 9,-1), time: 30.0050s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_42, [-25.640016555786133,17.952280044555664]=>[-1.52289275463062,0.5311940082733045] (9,-1; 9,-1), time: 30.0061s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_98, [-27.83730125427246,15.883218765258789]=>[-2.0415425772097437,0.4577827025340443] (9,-1; 9,-1), time: 30.0062s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_65, [-20.91388702392578,24.184579849243164]=>[-1.3887672314015531,0.9426505735797137] (9,-1; 9,-1), time: 30.0050s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_12, [-21.74980926513672,16.528282165527344]=>[-1.225262126477133,0.7992399612706729] (9,-1; 9,-1), time: 30.0061s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_66, [-20.31779670715332,20.97596549987793]=>[-0.5037821592245643,1.5871685863193914] (9,-1; 9,-1), time: 30.0033s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_93, [-22.309221267700195,17.816328048706055]=>[-1.347688792186647,0.7616738676496062] (9,-1; 9,-1), time: 30.0077s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_20, [-18.952272415161133,19.040525436401367]=>[-0.9832652269133931,1.0840516372760487] (9,-1; 9,-1), time: 30.0075s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_30, [-21.81134796142578,21.05303192138672]=>[-1.3679187013137875,0.7607532825473484] (9,-1; 9,-1), time: 30.0124s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_70, [-25.059856414794922,14.766404151916504]=>[-1.559109597560777,0.3236677553479955] (9,-1; 9,-1), time: 30.0051s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_94, [-19.752315521240234,14.179852485656738]=>[-1.3496221898434868,0.3608813770688804] (9,-1; 9,-1), time: 30.0113s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_1, [-27.029842376708984,15.325085639953613]=>[-1.4624484983526622,0.5542425039364908] (9,-1; 9,-1), time: 30.0223s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_6, [-23.800880432128906,16.422773361206055]=>[-1.0987582252487929,0.6502234175340197] (9,-1; 9,-1), time: 30.0058s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_80, [-23.749404907226562,19.248394012451172]=>[-2.174165825065042,0.4550689382495333] (9,-1; 9,-1), time: 30.0064s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_28, [-24.469127655029297,15.660609245300293]=>[-1.0919499404359183,0.635693998901654] (9,-1; 9,-1), time: 30.0080s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_60, [-23.039592742919922,18.31879425048828]=>[-0.9041640001508859,1.2831663100702384] (9,-1; 9,-1), time: 30.0043s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_22, [-22.727218627929688,14.968173027038574]=>[-1.4082392256490521,0.3828405419609638] (9,-1; 9,-1), time: 30.0050s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_54, [-23.6501407623291,19.46820068359375]=>[-0.9880434790173608,1.3272547803391777] (9,-1; 9,-1), time: 30.0071s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_31, [-28.504518508911133,25.13249397277832]=>[-1.9951556931889367,0.9995838967707538] (9,-1; 9,-1), time: 30.0118s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_7, [-27.93221664428711,13.035160064697266]=>[-2.283927509781205,0.19966575683274077] (9,-1; 9,-1), time: 30.0106s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_72, [-25.887939453125,18.10884666442871]=>[-1.29304032786414,1.056172078676533] (9,-1; 9,-1), time: 30.0049s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_4, [-23.151338577270508,23.473249435424805]=>[-1.1392631572345804,1.7177577465824525] (9,-1; 9,-1), time: 30.0076s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_5, [-24.178983688354492,18.16132164001465]=>[-1.753574978011375,0.2681106794340116] (9,-1; 9,-1), time: 30.0107s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_45, [-25.811267852783203,25.17146873474121]=>[-0.8690997988680818,1.997279232132011] (9,-1; 9,-1), time: 30.0066s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_33, [-16.909685134887695,19.755966186523438]=>[-1.4116998301541692,0.5131506685467971] (9,-1; 9,-1), time: 30.0064s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_73, [-21.298856735229492,16.97495460510254]=>[-0.8360029134607554,0.8547993017101734] (9,-1; 9,-1), time: 30.0064s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_55, [-27.16387939453125,15.230267524719238]=>[-1.8498868345520099,0.3193814738409715] (9,-1; 9,-1), time: 30.0092s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_50, [-19.79281997680664,19.807052612304688]=>[-1.0393122449149077,0.8470909847420826] (9,-1; 9,-1), time: 30.0060s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_53, [-26.230083465576172,26.30643653869629]=>[1e-05,26.30643653869629] (15,-1; -1,-1), time: 3.6359s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_3, [-23.318674087524414,15.995874404907227]=>[-1.425225481223866,0.5174394606382284] (9,-1; 9,-1), time: 30.0051s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_90, [-20.426652908325195,20.384700775146484]=>[-0.6122538881016818,1.5673720006963143] (9,-1; 9,-1), time: 30.0081s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_48, [-24.84419059753418,16.268037796020508]=>[-1.1265279138899598,0.7495449933814332] (9,-1; 9,-1), time: 30.0036s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_91, [-25.5465145111084,25.154523849487305]=>[-0.43984482341667996,2.7741123780584056] (9,-1; 9,-1), time: 30.0034s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_19, [-29.464468002319336,26.844253540039062]=>[-0.44140880534962906,2.809069990227277] (9,-1; 9,-1), time: 30.0036s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_89, [-30.195680618286133,19.518150329589844]=>[-1.9234722101301758,0.6567397226770978] (9,-1; 9,-1), time: 30.0048s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_79, [-27.84781837463379,26.710256576538086]=>[-0.2562846400086322,2.5838298215820923] (9,-1; 9,-1), time: 30.0198s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_63, [-23.576051712036133,22.418346405029297]=>[-0.7444058391508209,1.379897812318398] (9,-1; 9,-1), time: 30.0037s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_2, [-22.332170486450195,21.914722442626953]=>[-0.43084719940778454,1.5968610453298642] (9,-1; 9,-1), time: 30.0058s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_51, [-23.92494010925293,21.67232322692871]=>[-0.7489316298677369,1.8517163772202163] (9,-1; 9,-1), time: 30.0059s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_95, [-24.924745559692383,24.00789451599121]=>[-0.8062867345862531,1.639158600339754] (9,-1; 9,-1), time: 30.0054s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_64, [-23.71436309814453,20.019380569458008]=>[-0.758107558310487,1.3777381875313623] (9,-1; 9,-1), time: 30.0066s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_41, [-25.021448135375977,24.34679412841797]=>[-0.4936615326037802,2.987148764043169] (9,-1; 9,-1), time: 30.0244s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_44, [-25.358116149902344,21.27783203125]=>[-0.7197304653188283,2.0201189610402874] (9,-1; 9,-1), time: 30.0176s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_87, [-29.75540542602539,27.306222915649414]=>[-0.6562136265355686,2.2329537477787027] (9,-1; 9,-1), time: 30.0409s, #vars: 2275, #constrs: 1835, improved: True
Solving MIP for lay16_86, [-22.288375854492188,20.04637908935547]=>[-0.30614586471572547,1.508772135170156] (9,-1; 9,-1), time: 30.0057s, #vars: 2275, #constrs: 1835, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: 42.84208679199219 with beta sum per layer: []
alpha/beta optimization time: 16.16674542427063
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.8772, -3.7835, -5.7945, -7.6205, -2.6944, -4.2518, -3.1187, -6.0458,
         -6.6557]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 65 nodes out of 100 unstable nodes, lb improved 1473.9859619140625, ub improved 1214.165771484375, time 124.3984
maximum relu layer improved by MIP so far 7
MIP finished with 717.3830709457397s
Run final alpha-CROWN after MIP solving on layer 16 and relu idx 7
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 37.4951286315918 with beta sum per layer: []
alpha/beta optimization time: 11.981276988983154
alpha-CROWN with intermediate bounds improved by MIP: tensor([[-2.2511, -3.2103, -5.0361, -7.1463, -2.2050, -3.7456, -2.3186, -5.5111,
         -6.0711]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[-2.2511, -3.2103, -5.0361, -7.1463, -2.2050, -3.7456, -2.3186, -5.5111,
         -6.0711,  0.0000]], device='cuda:0') min: tensor(-7.1463, device='cuda:0')
time threshold left for bab: 155.52655601501465
##### [0:759] Tested against 6 ######
Model prediction is: tensor([[-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
          1.3393,  8.1315]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 2.3196940422058105 with beta sum per layer: []
alpha/beta optimization time: 2.658257007598877
alpha-CROWN with fixed intermediate bounds: tensor([[-2.3197]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-2.3196940422058105
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 39
layer 2 size torch.Size([100]) unstable 32
layer 3 size torch.Size([100]) unstable 38
layer 4 size torch.Size([100]) unstable 56
layer 5 size torch.Size([100]) unstable 62
layer 6 size torch.Size([100]) unstable 87
layer 7 size torch.Size([100]) unstable 99
-----------------
# of unstable neurons: 444
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 15] 
split level 1: [0, 60] 
split level 2: [7, 74] 
split level 3: [7, 23] 
split level 4: [7, 57] 
split level 5: [7, 77] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: 47.240989685058594 with beta sum per layer: [3.397075891494751, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 31.425186157226562]
alpha/beta optimization time: 0.5083932876586914
This batch time : update_bounds func: 0.5310	 prepare: 0.0106	 bound: 0.5089	 transfer: 0.0011	 finalize: 0.0102
Accumulated time: update_bounds func: 0.5310	 prepare: 0.0106	 bound: 0.5089	 transfer: 0.0011	 finalize: 0.0102
batch bounding time:  0.5312459468841553
Current worst splitting domains [lb, ub] (depth):
[-1.14288,   inf] (7), [-1.10459,   inf] (7), [-1.07870,   inf] (7), [-1.07634,   inf] (7), [-1.06745,   inf] (7), [-1.00385,   inf] (7), [-0.98807,   inf] (7), [-0.98205,   inf] (7), [-0.96695,   inf] (7), [-0.96057,   inf] (7), [-0.94112,   inf] (7), [-0.91363,   inf] (7), [-0.91064,   inf] (7), [-0.90606,   inf] (7), [-0.89638,   inf] (7), [-0.88846,   inf] (7), [-0.88235,   inf] (7), [-0.86131,   inf] (7), [-0.85861,   inf] (7), [-0.81620,   inf] (7), 
length of domains: 64
Total time: 0.6179	 pickout: 0.0014	 decision: 0.0663	 get_bound: 0.5455	 add_domain: 0.0047
Current lb:-1.1428756713867188
64 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.7466485500335693

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 100]) pre split depth:  1
batch:  torch.Size([64, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 76] [7, 76] [7, 76] [7, 76] [7, 76] [7, 76] [7, 76] [7, 76] [7, 76] [7, 76] 
regular batch size: 2*64, diving batch size 1*0
best_l after optimization: 55.20787048339844 with beta sum per layer: [7.198400497436523, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3514373302459717, 121.9103775024414]
alpha/beta optimization time: 0.5098028182983398
This batch time : update_bounds func: 0.5562	 prepare: 0.0239	 bound: 0.5103	 transfer: 0.0013	 finalize: 0.0204
Accumulated time: update_bounds func: 1.0872	 prepare: 0.0345	 bound: 1.0192	 transfer: 0.0013	 finalize: 0.0307
batch bounding time:  0.5565409660339355
Current worst splitting domains [lb, ub] (depth):
[-0.96450,   inf] (9), [-0.91846,   inf] (9), [-0.88265,   inf] (9), [-0.87483,   inf] (9), [-0.86584,   inf] (9), [-0.83372,   inf] (9), [-0.81703,   inf] (9), [-0.79422,   inf] (9), [-0.78822,   inf] (9), [-0.78609,   inf] (9), [-0.78114,   inf] (9), [-0.77865,   inf] (9), [-0.77833,   inf] (9), [-0.76166,   inf] (9), [-0.73864,   inf] (9), [-0.72696,   inf] (9), [-0.72250,   inf] (9), [-0.70688,   inf] (9), [-0.70413,   inf] (9), [-0.69609,   inf] (9), 
length of domains: 121
Total time: 0.6278	 pickout: 0.0151	 decision: 0.0483	 get_bound: 0.5567	 add_domain: 0.0076
Current lb:-0.9644960165023804
192 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 4.376528263092041

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([121, 100]) pre split depth:  1
batch:  torch.Size([121, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 84] [7, 84] [7, 84] [7, 84] [7, 84] [7, 84] [7, 25] [7, 84] [7, 84] [7, 84] 
regular batch size: 2*121, diving batch size 1*0
best_l after optimization: 50.990543365478516 with beta sum per layer: [13.926426887512207, 0.0, 0.0, 0.0, 0.0, 5.918399810791016, 2.5852365493774414, 288.9620361328125]
alpha/beta optimization time: 0.5099313259124756
This batch time : update_bounds func: 0.5931	 prepare: 0.0435	 bound: 0.5104	 transfer: 0.0015	 finalize: 0.0371
Accumulated time: update_bounds func: 1.6803	 prepare: 0.0779	 bound: 1.5296	 transfer: 0.0015	 finalize: 0.0677
batch bounding time:  0.5935037136077881
Current worst splitting domains [lb, ub] (depth):
[-0.80482,   inf] (11), [-0.75924,   inf] (11), [-0.72469,   inf] (11), [-0.71185,   inf] (11), [-0.69514,   inf] (11), [-0.68134,   inf] (11), [-0.64922,   inf] (11), [-0.62387,   inf] (11), [-0.62183,   inf] (11), [-0.62061,   inf] (11), [-0.61991,   inf] (11), [-0.61796,   inf] (11), [-0.61129,   inf] (11), [-0.60694,   inf] (11), [-0.60308,   inf] (11), [-0.58828,   inf] (11), [-0.58588,   inf] (11), [-0.56937,   inf] (11), [-0.56708,   inf] (11), [-0.54484,   inf] (11), 
length of domains: 187
Total time: 0.6948	 pickout: 0.0276	 decision: 0.0604	 get_bound: 0.5939	 add_domain: 0.0130
Current lb:-0.8048229217529297
434 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 5.075408935546875

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([187, 100]) pre split depth:  1
batch:  torch.Size([187, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 32] [7, 32] [6, 33] [7, 32] [7, 32] [7, 32] [7, 84] [7, 32] [7, 32] [7, 25] 
regular batch size: 2*187, diving batch size 1*0
best_l after optimization: 29.893272399902344 with beta sum per layer: [18.843433380126953, 0.0, 0.0, 0.0, 0.0, 9.30514144897461, 12.062511444091797, 463.5254211425781]
alpha/beta optimization time: 0.5202512741088867
This batch time : update_bounds func: 0.6511	 prepare: 0.0692	 bound: 0.5208	 transfer: 0.0018	 finalize: 0.0583
Accumulated time: update_bounds func: 2.3314	 prepare: 0.1471	 bound: 2.0504	 transfer: 0.0018	 finalize: 0.1261
batch bounding time:  0.6516668796539307
Current worst splitting domains [lb, ub] (depth):
[-0.63941,   inf] (13), [-0.61257,   inf] (13), [-0.58166,   inf] (13), [-0.57800,   inf] (13), [-0.57424,   inf] (13), [-0.54866,   inf] (13), [-0.51977,   inf] (13), [-0.51701,   inf] (13), [-0.51113,   inf] (13), [-0.50671,   inf] (13), [-0.49456,   inf] (13), [-0.49009,   inf] (13), [-0.48696,   inf] (13), [-0.48362,   inf] (13), [-0.46393,   inf] (13), [-0.46025,   inf] (13), [-0.45762,   inf] (13), [-0.44491,   inf] (13), [-0.44371,   inf] (13), [-0.44042,   inf] (13), 
length of domains: 210
Total time: 0.7832	 pickout: 0.0428	 decision: 0.0729	 get_bound: 0.6523	 add_domain: 0.0153
Current lb:-0.6394129991531372
808 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 5.866465091705322

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([210, 100]) pre split depth:  1
batch:  torch.Size([210, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 33] [7, 25] [7, 25] [7, 25] [7, 25] [7, 25] [7, 25] [7, 25] [0, 0] [7, 25] 
regular batch size: 2*210, diving batch size 1*0
best_l after optimization: 7.28874397277832 with beta sum per layer: [16.522899627685547, 0.0, 0.0, 0.0, 0.0, 7.305657386779785, 20.473773956298828, 472.3135070800781]
alpha/beta optimization time: 0.5218656063079834
This batch time : update_bounds func: 0.6750	 prepare: 0.0781	 bound: 0.5224	 transfer: 0.0045	 finalize: 0.0690
Accumulated time: update_bounds func: 3.0063	 prepare: 0.2252	 bound: 2.5728	 transfer: 0.0045	 finalize: 0.1951
batch bounding time:  0.6756048202514648
Current worst splitting domains [lb, ub] (depth):
[-0.48161,   inf] (15), [-0.45660,   inf] (15), [-0.43861,   inf] (15), [-0.40697,   inf] (15), [-0.40453,   inf] (15), [-0.39983,   inf] (15), [-0.39801,   inf] (15), [-0.39666,   inf] (15), [-0.39654,   inf] (15), [-0.39140,   inf] (15), [-0.38916,   inf] (15), [-0.38539,   inf] (15), [-0.37925,   inf] (15), [-0.35143,   inf] (15), [-0.34387,   inf] (15), [-0.34275,   inf] (15), [-0.34201,   inf] (15), [-0.33891,   inf] (15), [-0.33850,   inf] (15), [-0.33391,   inf] (15), 
length of domains: 187
Total time: 0.8573	 pickout: 0.0494	 decision: 0.1172	 get_bound: 0.6763	 add_domain: 0.0145
Current lb:-0.48160532116889954
1228 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 6.733714580535889

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([187, 100]) pre split depth:  1
batch:  torch.Size([187, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 25] [6, 31] [6, 35] [6, 33] [6, 33] [6, 33] [6, 23] [6, 35] [6, 23] [7, 32] 
regular batch size: 2*187, diving batch size 1*0
best_l after optimization: -5.041464805603027 with beta sum per layer: [14.44413948059082, 0.0, 0.0, 0.0, 0.0, 3.588486671447754, 24.652372360229492, 294.9356384277344]
alpha/beta optimization time: 0.5135724544525146
This batch time : update_bounds func: 0.6449	 prepare: 0.0705	 bound: 0.5141	 transfer: 0.0029	 finalize: 0.0565
Accumulated time: update_bounds func: 3.6512	 prepare: 0.2957	 bound: 3.0869	 transfer: 0.0029	 finalize: 0.2516
batch bounding time:  0.645432710647583
Current worst splitting domains [lb, ub] (depth):
[-0.41015,   inf] (17), [-0.36230,   inf] (17), [-0.35251,   inf] (17), [-0.30640,   inf] (17), [-0.30204,   inf] (17), [-0.28243,   inf] (17), [-0.28230,   inf] (17), [-0.26811,   inf] (17), [-0.26136,   inf] (17), [-0.25889,   inf] (17), [-0.25853,   inf] (17), [-0.25641,   inf] (17), [-0.25562,   inf] (17), [-0.24885,   inf] (17), [-0.23146,   inf] (17), [-0.22699,   inf] (17), [-0.22524,   inf] (17), [-0.22375,   inf] (17), [-0.22260,   inf] (17), [-0.22091,   inf] (17), 
length of domains: 151
Total time: 0.7752	 pickout: 0.0441	 decision: 0.0739	 get_bound: 0.6460	 add_domain: 0.0112
Current lb:-0.4101529121398926
1602 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 7.5166051387786865

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([151, 100]) pre split depth:  1
batch:  torch.Size([151, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 33] [6, 31] [7, 25] [0, 0] [6, 33] [7, 49] [6, 23] [6, 35] [7, 49] [7, 49] 
regular batch size: 2*151, diving batch size 1*0
best_l after optimization: -21.287216186523438 with beta sum per layer: [6.856837272644043, 0.0, 0.0, 0.0, 0.0, 0.18944808840751648, 26.670833587646484, 167.37942504882812]
alpha/beta optimization time: 0.5124025344848633
This batch time : update_bounds func: 0.6199	 prepare: 0.0583	 bound: 0.5129	 transfer: 0.0017	 finalize: 0.0463
Accumulated time: update_bounds func: 4.2711	 prepare: 0.3541	 bound: 3.5998	 transfer: 0.0017	 finalize: 0.2978
batch bounding time:  0.6204235553741455
Current worst splitting domains [lb, ub] (depth):
[-0.29822,   inf] (19), [-0.21602,   inf] (19), [-0.20512,   inf] (19), [-0.19998,   inf] (19), [-0.17881,   inf] (19), [-0.17624,   inf] (19), [-0.17154,   inf] (19), [-0.17013,   inf] (19), [-0.16158,   inf] (19), [-0.15761,   inf] (19), [-0.15242,   inf] (19), [-0.14310,   inf] (19), [-0.14169,   inf] (19), [-0.13734,   inf] (19), [-0.13688,   inf] (19), [-0.13616,   inf] (19), [-0.13567,   inf] (19), [-0.13510,   inf] (19), [-0.13182,   inf] (19), [-0.13013,   inf] (19), 
length of domains: 69
Total time: 0.7687	 pickout: 0.0357	 decision: 0.1066	 get_bound: 0.6209	 add_domain: 0.0055
Current lb:-0.2982161343097687
1904 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 8.292764902114868

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([69, 100]) pre split depth:  1
batch:  torch.Size([69, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 0] [6, 23] [7, 32] [5, 98] [0, 0] [0, 0] [0, 0] [5, 98] [7, 49] [6, 31] 
regular batch size: 2*69, diving batch size 1*0
best_l after optimization: -11.090792655944824 with beta sum per layer: [0.9370993971824646, 0.0, 0.0, 0.0, 0.0, 0.3234500288963318, 14.978702545166016, 48.78832244873047]
alpha/beta optimization time: 0.5135385990142822
This batch time : update_bounds func: 0.5667	 prepare: 0.0286	 bound: 0.5141	 transfer: 0.0014	 finalize: 0.0219
Accumulated time: update_bounds func: 4.8378	 prepare: 0.3827	 bound: 4.1138	 transfer: 0.0014	 finalize: 0.3197
batch bounding time:  0.5671303272247314
Current worst splitting domains [lb, ub] (depth):
[-0.20960,   inf] (21), [-0.17291,   inf] (21), [-0.13270,   inf] (21), [-0.11012,   inf] (21), [-0.08023,   inf] (21), [-0.07729,   inf] (21), [-0.07082,   inf] (21), [-0.07021,   inf] (21), [-0.06500,   inf] (21), [-0.05215,   inf] (21), [-0.04974,   inf] (21), [-0.04168,   inf] (21), [-0.03686,   inf] (21), [-0.03644,   inf] (21), [-0.03454,   inf] (21), [-0.03414,   inf] (21), [-0.03251,   inf] (21), [-0.03193,   inf] (21), [-0.03089,   inf] (21), [-0.02794,   inf] (21), 
length of domains: 33
Total time: 0.6388	 pickout: 0.0176	 decision: 0.0502	 get_bound: 0.5674	 add_domain: 0.0036
Current lb:-0.20960202813148499
2042 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 8.93472409248352

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([33, 100]) pre split depth:  1
batch:  torch.Size([33, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 5] [7, 49] [6, 23] [7, 5] [6, 23] [6, 31] [5, 98] [7, 49] [5, 98] [6, 78] 
regular batch size: 2*33, diving batch size 1*0
best_l after optimization: -6.630163192749023 with beta sum per layer: [0.15831546485424042, 0.0, 0.0, 0.0, 0.0, 0.0, 8.771162033081055, 16.514205932617188]
alpha/beta optimization time: 0.5049560070037842
This batch time : update_bounds func: 0.5324	 prepare: 0.0152	 bound: 0.5055	 transfer: 0.0011	 finalize: 0.0105
Accumulated time: update_bounds func: 5.3702	 prepare: 0.3978	 bound: 4.6193	 transfer: 0.0011	 finalize: 0.3302
batch bounding time:  0.5326757431030273
Current worst splitting domains [lb, ub] (depth):
[-0.09717,   inf] (23), [-0.04630,   inf] (23), [-0.03831,   inf] (23), [-0.03126,   inf] (23), [-0.01095,   inf] (23), [-0.00984,   inf] (23), 
length of domains: 6
Total time: 0.5848	 pickout: 0.0089	 decision: 0.0424	 get_bound: 0.5328	 add_domain: 0.0006
Current lb:-0.09717384725809097
2108 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 9.521275043487549

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 100]) pre split depth:  4
batch:  torch.Size([6, 100]) post split depth:  4
splitting decisions: 
split level 0: [6, 23] [6, 31] [6, 23] [7, 5] [7, 5] [7, 5] 
split level 1: [5, 98] [6, 23] [7, 32] [6, 23] [6, 35] [7, 49] 
split level 2: [7, 49] [7, 49] [7, 49] [6, 67] [7, 49] [6, 35] 
split level 3: [5, 88] [5, 88] [5, 88] [7, 30] [6, 67] [6, 67] 
regular batch size: 2*48, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -54.460968017578125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.293519973754883]
alpha/beta optimization time: 0.018299579620361328
This batch time : update_bounds func: 0.0548	 prepare: 0.0203	 bound: 0.0187	 transfer: 0.0012	 finalize: 0.0143
Accumulated time: update_bounds func: 5.4250	 prepare: 0.4182	 bound: 4.6380	 transfer: 0.0012	 finalize: 0.3445
batch bounding time:  0.054923295974731445
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.1262	 pickout: 0.0026	 decision: 0.0480	 get_bound: 0.0755	 add_domain: 0.0000
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 9.648625135421753

Image 759 label 6 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 9.731001615524292
759 1.0000000116860974e-07
##### [0:759] Tested against 2 ######
Model prediction is: tensor([[-3.7821, -2.6866, -2.2361,  0.8124,  2.1267,  0.5156, -4.5729,  2.0149,
          1.3393,  8.1315]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 5.036834239959717 with beta sum per layer: []
alpha/beta optimization time: 2.421621799468994
alpha-CROWN with fixed intermediate bounds: tensor([[-5.0368]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-5.036834716796875
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 39
layer 2 size torch.Size([100]) unstable 32
layer 3 size torch.Size([100]) unstable 38
layer 4 size torch.Size([100]) unstable 56
layer 5 size torch.Size([100]) unstable 62
layer 6 size torch.Size([100]) unstable 87
layer 7 size torch.Size([100]) unstable 99
-----------------
# of unstable neurons: 444
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 15] 
split level 1: [7, 14] 
split level 2: [7, 57] 
split level 3: [7, 23] 
split level 4: [7, 20] 
split level 5: [7, 65] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: 185.15573120117188 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 61.922176361083984]
alpha/beta optimization time: 0.49699926376342773
This batch time : update_bounds func: 0.5191	 prepare: 0.0104	 bound: 0.4975	 transfer: 0.0011	 finalize: 0.0100
Accumulated time: update_bounds func: 5.9441	 prepare: 0.4286	 bound: 5.1355	 transfer: 0.0011	 finalize: 0.3545
batch bounding time:  0.5193238258361816
Current worst splitting domains [lb, ub] (depth):
[-4.21856,   inf] (7), [-4.12408,   inf] (7), [-4.10077,   inf] (7), [-4.03035,   inf] (7), [-3.83951,   inf] (7), [-3.80927,   inf] (7), [-3.77557,   inf] (7), [-3.73495,   inf] (7), [-3.71739,   inf] (7), [-3.67743,   inf] (7), [-3.56463,   inf] (7), [-3.52422,   inf] (7), [-3.51831,   inf] (7), [-3.46771,   inf] (7), [-3.34872,   inf] (7), [-3.28007,   inf] (7), [-3.15483,   inf] (7), [-3.15178,   inf] (7), [-3.11927,   inf] (7), [-3.11884,   inf] (7), 
length of domains: 64
Total time: 0.6041	 pickout: 0.0013	 decision: 0.0646	 get_bound: 0.5334	 add_domain: 0.0046
Current lb:-4.218557357788086
64 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.0722599029541016

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 100]) pre split depth:  1
batch:  torch.Size([64, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 5] [6, 5] [6, 5] [6, 5] [5, 24] [5, 24] [6, 5] [6, 5] [6, 5] [6, 5] 
regular batch size: 2*64, diving batch size 1*0
best_l after optimization: 314.0159912109375 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 1.5169107913970947, 18.393211364746094, 197.10784912109375]
alpha/beta optimization time: 0.5165426731109619
This batch time : update_bounds func: 0.5606	 prepare: 0.0226	 bound: 0.5170	 transfer: 0.0013	 finalize: 0.0194
Accumulated time: update_bounds func: 6.5047	 prepare: 0.4512	 bound: 5.6525	 transfer: 0.0013	 finalize: 0.3738
batch bounding time:  0.5609180927276611
Current worst splitting domains [lb, ub] (depth):
[-4.17911,   inf] (9), [-4.09711,   inf] (9), [-4.05728,   inf] (9), [-3.98767,   inf] (9), [-3.76281,   inf] (9), [-3.72484,   inf] (9), [-3.67846,   inf] (9), [-3.63748,   inf] (9), [-3.62074,   inf] (9), [-3.57877,   inf] (9), [-3.44691,   inf] (9), [-3.39460,   inf] (9), [-3.39374,   inf] (9), [-3.35049,   inf] (9), [-3.26888,   inf] (9), [-3.20076,   inf] (9), [-3.18545,   inf] (9), [-3.18467,   inf] (9), [-3.15372,   inf] (9), [-3.12834,   inf] (9), 
length of domains: 128
Total time: 0.6310	 pickout: 0.0145	 decision: 0.0476	 get_bound: 0.5611	 add_domain: 0.0078
Current lb:-4.179111003875732
192 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.70520281791687

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([128, 100]) pre split depth:  1
batch:  torch.Size([128, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 24] [5, 24] [3, 59] [3, 59] [6, 5] [6, 35] [3, 59] [3, 59] [3, 59] [3, 59] 
regular batch size: 2*128, diving batch size 1*0
best_l after optimization: 537.3773803710938 with beta sum per layer: [0.09761915355920792, 0.0, 0.0, 2.9354286193847656, 0.0, 10.135642051696777, 69.99359130859375, 514.1022338867188]
alpha/beta optimization time: 0.5100772380828857
This batch time : update_bounds func: 0.5971	 prepare: 0.0451	 bound: 0.5106	 transfer: 0.0016	 finalize: 0.0392
Accumulated time: update_bounds func: 7.1018	 prepare: 0.4963	 bound: 6.1631	 transfer: 0.0016	 finalize: 0.4130
batch bounding time:  0.5974774360656738
Current worst splitting domains [lb, ub] (depth):
[-4.14747,   inf] (11), [-4.05728,   inf] (11), [-4.05560,   inf] (11), [-3.98199,   inf] (11), [-3.71392,   inf] (11), [-3.68779,   inf] (11), [-3.62946,   inf] (11), [-3.59554,   inf] (11), [-3.58402,   inf] (11), [-3.54265,   inf] (11), [-3.43781,   inf] (11), [-3.38655,   inf] (11), [-3.38257,   inf] (11), [-3.38090,   inf] (11), [-3.32391,   inf] (11), [-3.27746,   inf] (11), [-3.22759,   inf] (11), [-3.19660,   inf] (11), [-3.16065,   inf] (11), [-3.13264,   inf] (11), 
length of domains: 256
Total time: 0.7049	 pickout: 0.0279	 decision: 0.0616	 get_bound: 0.5979	 add_domain: 0.0175
Current lb:-4.147467613220215
448 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 4.4137043952941895

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([256, 100]) pre split depth:  1
batch:  torch.Size([256, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 59] [5, 24] [3, 59] [7, 80] [3, 59] [0, 60] [6, 35] [6, 55] [7, 80] [6, 55] 
regular batch size: 2*256, diving batch size 1*0
best_l after optimization: 892.0879516601562 with beta sum per layer: [3.430931568145752, 0.0, 0.0, 9.031923294067383, 0.0, 32.59819793701172, 187.0913848876953, 1280.73828125]
alpha/beta optimization time: 0.5173563957214355
This batch time : update_bounds func: 0.7409	 prepare: 0.0888	 bound: 0.5179	 transfer: 0.0034	 finalize: 0.1297
Accumulated time: update_bounds func: 7.8427	 prepare: 0.5850	 bound: 6.6810	 transfer: 0.0034	 finalize: 0.5427
batch bounding time:  0.7416326999664307
Current worst splitting domains [lb, ub] (depth):
[-4.14747,   inf] (13), [-4.05560,   inf] (13), [-4.03800,   inf] (13), [-3.76731,   inf] (13), [-3.67223,   inf] (13), [-3.66934,   inf] (13), [-3.62946,   inf] (13), [-3.54394,   inf] (13), [-3.53609,   inf] (13), [-3.47977,   inf] (13), [-3.39865,   inf] (13), [-3.36884,   inf] (13), [-3.35658,   inf] (13), [-3.34588,   inf] (13), [-3.32557,   inf] (13), [-3.30921,   inf] (13), [-3.29787,   inf] (13), [-3.28559,   inf] (13), [-3.23522,   inf] (13), [-3.20562,   inf] (13), 
length of domains: 512
Total time: 0.9264	 pickout: 0.0574	 decision: 0.0913	 get_bound: 0.7424	 add_domain: 0.0353
Current lb:-4.147467613220215
960 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 5.347541809082031

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([512, 100]) pre split depth:  1
batch:  torch.Size([512, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [0, 60] [0, 60] [6, 55] [0, 60] [5, 24] [5, 24] [7, 80] [6, 20] [7, 80] 
regular batch size: 2*512, diving batch size 1*0
best_l after optimization: 1423.9853515625 with beta sum per layer: [15.726964950561523, 0.0, 0.0, 21.916015625, 0.0, 99.39836120605469, 461.9790954589844, 3090.4638671875]
alpha/beta optimization time: 0.5373117923736572
This batch time : update_bounds func: 0.9420	 prepare: 0.1776	 bound: 0.5378	 transfer: 0.0095	 finalize: 0.2146
Accumulated time: update_bounds func: 8.7846	 prepare: 0.7626	 bound: 7.2188	 transfer: 0.0095	 finalize: 0.7574
batch bounding time:  0.9430699348449707
Current worst splitting domains [lb, ub] (depth):
[-4.02977,   inf] (15), [-3.94668,   inf] (15), [-3.90028,   inf] (15), [-3.86390,   inf] (15), [-3.78150,   inf] (15), [-3.74515,   inf] (15), [-3.70594,   inf] (15), [-3.60759,   inf] (15), [-3.59635,   inf] (15), [-3.52793,   inf] (15), [-3.43212,   inf] (15), [-3.34145,   inf] (15), [-3.32448,   inf] (15), [-3.31425,   inf] (15), [-3.30583,   inf] (15), [-3.29753,   inf] (15), [-3.29212,   inf] (15), [-3.26349,   inf] (15), [-3.25004,   inf] (15), [-3.23463,   inf] (15), 
length of domains: 1024
Total time: 1.2889	 pickout: 0.1164	 decision: 0.1532	 get_bound: 0.9447	 add_domain: 0.0747
Current lb:-4.0297722816467285
1984 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 6.651576519012451

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 35] [7, 80] [7, 80] [6, 35] [7, 80] [7, 80] [5, 24] [6, 55] [0, 60] [6, 5] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2119.78515625 with beta sum per layer: [59.10295486450195, 0.0, 0.0, 51.10371780395508, 0.4427183270454407, 275.6575622558594, 1117.1903076171875, 7326.05078125]
alpha/beta optimization time: 0.560528039932251
This batch time : update_bounds func: 1.3655	 prepare: 0.3708	 bound: 0.5611	 transfer: 0.0174	 finalize: 0.4113
Accumulated time: update_bounds func: 10.1502	 prepare: 1.1334	 bound: 7.7799	 transfer: 0.0174	 finalize: 1.1687
batch bounding time:  1.3680622577667236
Current worst splitting domains [lb, ub] (depth):
[-4.02977,   inf] (17), [-3.85800,   inf] (17), [-3.74969,   inf] (17), [-3.70616,   inf] (17), [-3.65662,   inf] (17), [-3.65003,   inf] (17), [-3.61849,   inf] (17), [-3.60237,   inf] (17), [-3.58565,   inf] (17), [-3.55076,   inf] (17), [-3.53948,   inf] (17), [-3.49454,   inf] (17), [-3.46382,   inf] (17), [-3.45756,   inf] (17), [-3.45356,   inf] (17), [-3.44806,   inf] (17), [-3.39077,   inf] (17), [-3.31001,   inf] (17), [-3.29794,   inf] (17), [-3.28177,   inf] (17), 
length of domains: 1841
Total time: 2.1708	 pickout: 0.2355	 decision: 0.3209	 get_bound: 1.3716	 add_domain: 0.2428
Current lb:-4.0297722816467285
4032 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 8.858615398406982

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 20] [6, 20] [7, 27] [6, 20] [5, 11] [7, 27] [7, 27] [6, 20] [7, 27] [6, 20] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2812.126953125 with beta sum per layer: [73.25276184082031, 0.0, 0.0, 124.4857177734375, 0.0, 626.9912719726562, 2251.139892578125, 4775.341796875]
alpha/beta optimization time: 0.5601789951324463
This batch time : update_bounds func: 1.4225	 prepare: 0.3918	 bound: 0.5608	 transfer: 0.0153	 finalize: 0.4495
Accumulated time: update_bounds func: 11.5727	 prepare: 1.5253	 bound: 8.3407	 transfer: 0.0153	 finalize: 1.6181
batch bounding time:  1.4250164031982422
Current worst splitting domains [lb, ub] (depth):
[-3.99761,   inf] (19), [-3.81240,   inf] (19), [-3.66808,   inf] (19), [-3.64325,   inf] (19), [-3.63636,   inf] (19), [-3.56301,   inf] (19), [-3.51774,   inf] (19), [-3.51186,   inf] (19), [-3.50557,   inf] (19), [-3.49733,   inf] (19), [-3.46988,   inf] (19), [-3.44551,   inf] (19), [-3.39422,   inf] (19), [-3.39077,   inf] (19), [-3.36774,   inf] (19), [-3.32417,   inf] (19), [-3.27359,   inf] (19), [-3.24602,   inf] (19), [-3.24000,   inf] (19), [-3.22517,   inf] (19), 
length of domains: 2865
Total time: 2.2865	 pickout: 0.2486	 decision: 0.3275	 get_bound: 1.4286	 add_domain: 0.2818
Current lb:-3.9976067543029785
6080 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 11.177565097808838

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 80] [7, 80] [6, 55] [7, 27] [6, 20] [6, 20] [7, 80] [6, 55] [6, 0] [7, 76] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3034.2607421875 with beta sum per layer: [153.15037536621094, 0.0, 0.0, 248.72073364257812, 2.379572629928589, 729.3990478515625, 2641.55322265625, 4189.7333984375]
alpha/beta optimization time: 0.5356442928314209
This batch time : update_bounds func: 1.4408	 prepare: 0.4045	 bound: 0.5363	 transfer: 0.0192	 finalize: 0.4756
Accumulated time: update_bounds func: 13.0136	 prepare: 1.9297	 bound: 8.8770	 transfer: 0.0192	 finalize: 2.0937
batch bounding time:  1.443181037902832
Current worst splitting domains [lb, ub] (depth):
[-3.79986,   inf] (21), [-3.74496,   inf] (21), [-3.64841,   inf] (21), [-3.61822,   inf] (21), [-3.59363,   inf] (21), [-3.55413,   inf] (21), [-3.54176,   inf] (21), [-3.51589,   inf] (21), [-3.49047,   inf] (21), [-3.42669,   inf] (21), [-3.37645,   inf] (21), [-3.35378,   inf] (21), [-3.30426,   inf] (21), [-3.29751,   inf] (21), [-3.28051,   inf] (21), [-3.23225,   inf] (21), [-3.21413,   inf] (21), [-3.20874,   inf] (21), [-3.19127,   inf] (21), [-3.15036,   inf] (21), 
length of domains: 3889
Total time: 2.2643	 pickout: 0.2443	 decision: 0.2508	 get_bound: 1.4468	 add_domain: 0.3224
Current lb:-3.7998602390289307
8128 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 13.476642608642578

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 76] [7, 27] [5, 11] [7, 76] [7, 31] [7, 27] [7, 31] [6, 55] [5, 11] [6, 35] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3178.0517578125 with beta sum per layer: [215.49549865722656, 0.0, 0.7547580003738403, 319.94036865234375, 21.75808334350586, 716.23046875, 2319.64697265625, 4657.578125]
alpha/beta optimization time: 0.5518651008605957
This batch time : update_bounds func: 1.4960	 prepare: 0.4057	 bound: 0.5525	 transfer: 0.0199	 finalize: 0.5129
Accumulated time: update_bounds func: 14.5096	 prepare: 2.3354	 bound: 9.4295	 transfer: 0.0199	 finalize: 2.6066
batch bounding time:  1.4985694885253906
Current worst splitting domains [lb, ub] (depth):
[-3.64841,   inf] (23), [-3.64390,   inf] (23), [-3.62752,   inf] (23), [-3.56422,   inf] (23), [-3.53031,   inf] (23), [-3.48772,   inf] (23), [-3.48488,   inf] (23), [-3.45139,   inf] (23), [-3.44902,   inf] (23), [-3.44563,   inf] (23), [-3.41018,   inf] (23), [-3.37558,   inf] (23), [-3.32275,   inf] (23), [-3.30778,   inf] (23), [-3.27927,   inf] (23), [-3.23595,   inf] (23), [-3.23538,   inf] (23), [-3.19628,   inf] (23), [-3.18558,   inf] (23), [-3.12120,   inf] (23), 
length of domains: 4913
Total time: 2.3459	 pickout: 0.2529	 decision: 0.4080	 get_bound: 1.5022	 add_domain: 0.1827
Current lb:-3.648406744003296
10176 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 15.866942644119263

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 27] [7, 76] [7, 27] [7, 27] [7, 34] [7, 27] [5, 11] [7, 34] [7, 76] [7, 27] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3292.656005859375 with beta sum per layer: [169.7355194091797, 0.0, 7.212339401245117, 344.5397033691406, 62.53779602050781, 517.12841796875, 2015.5367431640625, 4977.3173828125]
alpha/beta optimization time: 0.5393056869506836
This batch time : update_bounds func: 1.5258	 prepare: 0.4139	 bound: 0.5399	 transfer: 0.0193	 finalize: 0.3315
Accumulated time: update_bounds func: 16.0354	 prepare: 2.7493	 bound: 9.9694	 transfer: 0.0193	 finalize: 2.9381
batch bounding time:  1.528052806854248
Current worst splitting domains [lb, ub] (depth):
[-3.55487,   inf] (25), [-3.51980,   inf] (25), [-3.48488,   inf] (25), [-3.47139,   inf] (25), [-3.46390,   inf] (25), [-3.46155,   inf] (25), [-3.42595,   inf] (25), [-3.39312,   inf] (25), [-3.38922,   inf] (25), [-3.33227,   inf] (25), [-3.31232,   inf] (25), [-3.29283,   inf] (25), [-3.27274,   inf] (25), [-3.26607,   inf] (25), [-3.22818,   inf] (25), [-3.22671,   inf] (25), [-3.19405,   inf] (25), [-3.19061,   inf] (25), [-3.18295,   inf] (25), [-3.17682,   inf] (25), 
length of domains: 5937
Total time: 2.4940	 pickout: 0.2888	 decision: 0.2575	 get_bound: 1.5314	 add_domain: 0.4162
Current lb:-3.55487322807312
12224 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 18.39677357673645

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 76] [7, 34] [7, 12] [6, 35] [7, 34] [7, 34] [7, 34] [0, 60] [7, 76] [7, 12] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3378.864013671875 with beta sum per layer: [205.38983154296875, 0.0, 13.684575080871582, 341.91448974609375, 97.40599060058594, 418.68316650390625, 1753.765380859375, 4990.73828125]
alpha/beta optimization time: 0.5358784198760986
This batch time : update_bounds func: 1.5540	 prepare: 0.4230	 bound: 0.5365	 transfer: 0.0187	 finalize: 0.5709
Accumulated time: update_bounds func: 17.5894	 prepare: 3.1722	 bound: 10.5059	 transfer: 0.0187	 finalize: 3.5089
batch bounding time:  1.5562472343444824
Current worst splitting domains [lb, ub] (depth):
[-3.46431,   inf] (27), [-3.46354,   inf] (27), [-3.40715,   inf] (27), [-3.40660,   inf] (27), [-3.38671,   inf] (27), [-3.36790,   inf] (27), [-3.35379,   inf] (27), [-3.32487,   inf] (27), [-3.29021,   inf] (27), [-3.28706,   inf] (27), [-3.22533,   inf] (27), [-3.21572,   inf] (27), [-3.21571,   inf] (27), [-3.20822,   inf] (27), [-3.20463,   inf] (27), [-3.20023,   inf] (27), [-3.16186,   inf] (27), [-3.16045,   inf] (27), [-3.14059,   inf] (27), [-3.13238,   inf] (27), 
length of domains: 6961
Total time: 2.2619	 pickout: 0.2591	 decision: 0.2502	 get_bound: 1.5597	 add_domain: 0.1930
Current lb:-3.464311361312866
14272 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 20.696085929870605

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 76] [7, 12] [7, 12] [7, 31] [7, 34] [5, 11] [7, 31] [7, 34] [4, 74] [7, 76] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3517.047119140625 with beta sum per layer: [207.74916076660156, 0.0, 4.609329700469971, 242.4438934326172, 79.93516540527344, 339.8546142578125, 1529.247802734375, 5319.279296875]
alpha/beta optimization time: 0.5392622947692871
This batch time : update_bounds func: 1.3436	 prepare: 0.4352	 bound: 0.5399	 transfer: 0.0192	 finalize: 0.3441
Accumulated time: update_bounds func: 18.9330	 prepare: 3.6074	 bound: 11.0458	 transfer: 0.0192	 finalize: 3.8530
batch bounding time:  1.3459885120391846
Current worst splitting domains [lb, ub] (depth):
[-3.36307,   inf] (29), [-3.34204,   inf] (29), [-3.33919,   inf] (29), [-3.33748,   inf] (29), [-3.28261,   inf] (29), [-3.28204,   inf] (29), [-3.27720,   inf] (29), [-3.26810,   inf] (29), [-3.26586,   inf] (29), [-3.25207,   inf] (29), [-3.20335,   inf] (29), [-3.14937,   inf] (29), [-3.14618,   inf] (29), [-3.12019,   inf] (29), [-3.10401,   inf] (29), [-3.10364,   inf] (29), [-3.10299,   inf] (29), [-3.09919,   inf] (29), [-3.09142,   inf] (29), [-3.08320,   inf] (29), 
length of domains: 7985
Total time: 2.3329	 pickout: 0.2600	 decision: 0.5225	 get_bound: 1.3495	 add_domain: 0.2009
Current lb:-3.3630692958831787
16320 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 23.072269678115845

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 74] [7, 12] [7, 31] [7, 31] [5, 11] [7, 12] [4, 74] [7, 31] [2, 30] [7, 12] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3666.839111328125 with beta sum per layer: [195.6396484375, 0.0, 2.119804620742798, 141.37686157226562, 65.82940673828125, 323.52880859375, 1214.2408447265625, 5862.10302734375]
alpha/beta optimization time: 0.5384676456451416
This batch time : update_bounds func: 1.3278	 prepare: 0.4345	 bound: 0.5391	 transfer: 0.0186	 finalize: 0.3305
Accumulated time: update_bounds func: 20.2609	 prepare: 4.0420	 bound: 11.5849	 transfer: 0.0186	 finalize: 4.1835
batch bounding time:  1.3315258026123047
Current worst splitting domains [lb, ub] (depth):
[-3.33218,   inf] (31), [-3.28260,   inf] (31), [-3.26668,   inf] (31), [-3.25783,   inf] (31), [-3.25565,   inf] (31), [-3.23082,   inf] (31), [-3.20925,   inf] (31), [-3.20104,   inf] (31), [-3.16783,   inf] (31), [-3.12868,   inf] (31), [-3.12551,   inf] (31), [-3.09633,   inf] (31), [-3.09299,   inf] (31), [-3.07160,   inf] (31), [-3.03724,   inf] (31), [-3.03708,   inf] (31), [-3.00739,   inf] (31), [-2.98316,   inf] (31), [-2.98227,   inf] (31), [-2.97724,   inf] (31), 
length of domains: 9009
Total time: 2.6933	 pickout: 0.2648	 decision: 0.5597	 get_bound: 1.3351	 add_domain: 0.5337
Current lb:-3.332183361053467
18368 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 25.80270791053772

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 12] [7, 31] [7, 12] [5, 11] [2, 30] [7, 76] [5, 11] [7, 12] [5, 11] [5, 11] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3847.34814453125 with beta sum per layer: [161.01840209960938, 3.849863052368164, 7.197758197784424, 23.608509063720703, 78.47953796386719, 396.0921630859375, 1025.7666015625, 5793.55078125]
alpha/beta optimization time: 0.5432331562042236
This batch time : update_bounds func: 1.3316	 prepare: 0.4317	 bound: 0.5438	 transfer: 0.0190	 finalize: 0.3319
Accumulated time: update_bounds func: 21.5925	 prepare: 4.4736	 bound: 12.1287	 transfer: 0.0190	 finalize: 4.5153
batch bounding time:  1.3341915607452393
Current worst splitting domains [lb, ub] (depth):
[-3.25783,   inf] (33), [-3.22082,   inf] (33), [-3.20350,   inf] (33), [-3.20202,   inf] (33), [-3.19975,   inf] (33), [-3.16184,   inf] (33), [-3.14112,   inf] (33), [-3.12073,   inf] (33), [-3.06482,   inf] (33), [-3.06336,   inf] (33), [-3.06323,   inf] (33), [-3.02199,   inf] (33), [-3.02013,   inf] (33), [-3.00790,   inf] (33), [-2.99811,   inf] (33), [-2.97949,   inf] (33), [-2.97815,   inf] (33), [-2.96504,   inf] (33), [-2.96250,   inf] (33), [-2.95999,   inf] (33), 
length of domains: 10033
Total time: 2.4566	 pickout: 0.2669	 decision: 0.2554	 get_bound: 1.3379	 add_domain: 0.5963
Current lb:-3.25783371925354
20416 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 28.29897403717041

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 30] [7, 34] [7, 31] [2, 30] [4, 74] [7, 74] [6, 35] [7, 74] [0, 75] [7, 74] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3978.7216796875 with beta sum per layer: [143.70425415039062, 22.671443939208984, 16.967201232910156, 0.771458625793457, 122.23260498046875, 383.3973083496094, 931.4852294921875, 5214.7509765625]
alpha/beta optimization time: 0.5412514209747314
This batch time : update_bounds func: 1.3433	 prepare: 0.4440	 bound: 0.5419	 transfer: 0.0193	 finalize: 0.3332
Accumulated time: update_bounds func: 22.9357	 prepare: 4.9176	 bound: 12.6705	 transfer: 0.0193	 finalize: 4.8486
batch bounding time:  1.345839262008667
Current worst splitting domains [lb, ub] (depth):
[-3.21899,   inf] (35), [-3.17778,   inf] (35), [-3.17378,   inf] (35), [-3.15033,   inf] (35), [-3.12818,   inf] (35), [-3.12619,   inf] (35), [-3.05271,   inf] (35), [-3.01613,   inf] (35), [-2.99338,   inf] (35), [-2.96960,   inf] (35), [-2.96621,   inf] (35), [-2.95285,   inf] (35), [-2.94697,   inf] (35), [-2.94210,   inf] (35), [-2.94146,   inf] (35), [-2.93072,   inf] (35), [-2.91007,   inf] (35), [-2.89976,   inf] (35), [-2.88670,   inf] (35), [-2.88656,   inf] (35), 
length of domains: 11057
Total time: 2.5323	 pickout: 0.2815	 decision: 0.2521	 get_bound: 1.3496	 add_domain: 0.6491
Current lb:-3.218989849090576
22464 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 30.869945764541626

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 41] [1, 41] [1, 41] [1, 41] [2, 39] [2, 30] [1, 41] [1, 41] [7, 74] [2, 30] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3993.13037109375 with beta sum per layer: [138.23971557617188, 47.672760009765625, 58.18990707397461, 1.5427172183990479, 156.90692138671875, 297.24609375, 817.2052612304688, 4881.46435546875]
alpha/beta optimization time: 0.5474777221679688
This batch time : update_bounds func: 1.3770	 prepare: 0.4561	 bound: 0.5481	 transfer: 0.0194	 finalize: 0.3477
Accumulated time: update_bounds func: 24.3127	 prepare: 5.3737	 bound: 13.2186	 transfer: 0.0194	 finalize: 5.1963
batch bounding time:  1.3793210983276367
Current worst splitting domains [lb, ub] (depth):
[-3.21692,   inf] (37), [-3.17436,   inf] (37), [-3.16212,   inf] (37), [-3.14827,   inf] (37), [-3.12818,   inf] (37), [-3.08828,   inf] (37), [-3.04781,   inf] (37), [-3.01026,   inf] (37), [-2.95429,   inf] (37), [-2.93464,   inf] (37), [-2.92107,   inf] (37), [-2.90446,   inf] (37), [-2.89908,   inf] (37), [-2.89811,   inf] (37), [-2.89720,   inf] (37), [-2.89050,   inf] (37), [-2.87395,   inf] (37), [-2.85092,   inf] (37), [-2.83377,   inf] (37), [-2.83052,   inf] (37), 
length of domains: 12081
Total time: 2.6443	 pickout: 0.2746	 decision: 0.2563	 get_bound: 1.3831	 add_domain: 0.7302
Current lb:-3.2169153690338135
24512 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 33.55415678024292

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 75] [7, 76] [2, 30] [0, 87] [1, 41] [1, 41] [2, 30] [0, 75] [7, 34] [1, 41] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3960.4384765625 with beta sum per layer: [196.9122314453125, 63.513710021972656, 112.15324401855469, 3.9343981742858887, 181.26058959960938, 207.29647827148438, 806.5615234375, 4694.48779296875]
alpha/beta optimization time: 0.5468056201934814
This batch time : update_bounds func: 1.3615	 prepare: 0.4536	 bound: 0.5475	 transfer: 0.0190	 finalize: 0.3364
Accumulated time: update_bounds func: 25.6741	 prepare: 5.8273	 bound: 13.7661	 transfer: 0.0190	 finalize: 5.5327
batch bounding time:  1.363896369934082
Current worst splitting domains [lb, ub] (depth):
[-3.12818,   inf] (39), [-3.11420,   inf] (39), [-3.08780,   inf] (39), [-3.04465,   inf] (39), [-3.04358,   inf] (39), [-2.99843,   inf] (39), [-2.99748,   inf] (39), [-2.99739,   inf] (39), [-2.94996,   inf] (39), [-2.93297,   inf] (39), [-2.91031,   inf] (39), [-2.89821,   inf] (39), [-2.87430,   inf] (39), [-2.87258,   inf] (39), [-2.85434,   inf] (39), [-2.84969,   inf] (39), [-2.83248,   inf] (39), [-2.83052,   inf] (39), [-2.82791,   inf] (39), [-2.81752,   inf] (39), 
length of domains: 13105
Total time: 2.1324	 pickout: 0.2772	 decision: 0.2571	 get_bound: 1.3675	 add_domain: 0.2306
Current lb:-3.1281838417053223
26560 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 35.728983640670776

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 51] [2, 39] [0, 75] [0, 23] [0, 75] [0, 75] [0, 87] [6, 35] [6, 0] [0, 75] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3924.8251953125 with beta sum per layer: [221.74838256835938, 92.71546936035156, 191.74398803710938, 6.230917930603027, 157.52365112304688, 135.07980346679688, 792.9698486328125, 4428.8486328125]
alpha/beta optimization time: 0.5444447994232178
This batch time : update_bounds func: 1.3705	 prepare: 0.4636	 bound: 0.5451	 transfer: 0.0185	 finalize: 0.3382
Accumulated time: update_bounds func: 27.0446	 prepare: 6.2909	 bound: 14.3112	 transfer: 0.0185	 finalize: 5.8709
batch bounding time:  1.3728313446044922
Current worst splitting domains [lb, ub] (depth):
[-3.11420,   inf] (41), [-2.99684,   inf] (41), [-2.97405,   inf] (41), [-2.96855,   inf] (41), [-2.92549,   inf] (41), [-2.91031,   inf] (41), [-2.89042,   inf] (41), [-2.88447,   inf] (41), [-2.87781,   inf] (41), [-2.87320,   inf] (41), [-2.86178,   inf] (41), [-2.84182,   inf] (41), [-2.83501,   inf] (41), [-2.83052,   inf] (41), [-2.81195,   inf] (41), [-2.80191,   inf] (41), [-2.78706,   inf] (41), [-2.78548,   inf] (41), [-2.77553,   inf] (41), [-2.77299,   inf] (41), 
length of domains: 14129
Total time: 2.6291	 pickout: 0.2762	 decision: 0.7413	 get_bound: 1.3764	 add_domain: 0.2353
Current lb:-3.114201784133911
28608 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 38.40028214454651

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 51] [2, 30] [2, 39] [2, 39] [4, 74] [0, 75] [2, 39] [0, 23] [0, 23] [4, 74] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3852.979736328125 with beta sum per layer: [295.68994140625, 103.31649780273438, 249.04989624023438, 10.191447257995605, 135.56179809570312, 86.19122314453125, 824.1767578125, 4379.99365234375]
alpha/beta optimization time: 0.5499687194824219
This batch time : update_bounds func: 1.9036	 prepare: 0.4718	 bound: 0.5506	 transfer: 0.0183	 finalize: 0.3381
Accumulated time: update_bounds func: 28.9483	 prepare: 6.7627	 bound: 14.8617	 transfer: 0.0183	 finalize: 6.2090
batch bounding time:  1.9059436321258545
Current worst splitting domains [lb, ub] (depth):
[-2.99759,   inf] (43), [-2.97405,   inf] (43), [-2.96855,   inf] (43), [-2.94627,   inf] (43), [-2.91031,   inf] (43), [-2.89042,   inf] (43), [-2.86178,   inf] (43), [-2.84866,   inf] (43), [-2.81195,   inf] (43), [-2.80650,   inf] (43), [-2.79637,   inf] (43), [-2.79517,   inf] (43), [-2.78529,   inf] (43), [-2.78035,   inf] (43), [-2.76425,   inf] (43), [-2.76198,   inf] (43), [-2.74439,   inf] (43), [-2.74216,   inf] (43), [-2.73849,   inf] (43), [-2.73587,   inf] (43), 
length of domains: 15153
Total time: 2.6912	 pickout: 0.2833	 decision: 0.2572	 get_bound: 1.9095	 add_domain: 0.2413
Current lb:-2.9975857734680176
30656 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 41.13403534889221

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [1, 46] [6, 51] [0, 87] [0, 23] [6, 51] [0, 23] [0, 23] [0, 23] [2, 39] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3778.764892578125 with beta sum per layer: [360.5753173828125, 108.53706359863281, 233.85626220703125, 10.399642944335938, 113.117919921875, 80.99465942382812, 846.422607421875, 4446.71728515625]
alpha/beta optimization time: 0.5765283107757568
This batch time : update_bounds func: 1.9936	 prepare: 0.4813	 bound: 0.5771	 transfer: 0.0186	 finalize: 0.9114
Accumulated time: update_bounds func: 30.9418	 prepare: 7.2440	 bound: 15.4389	 transfer: 0.0186	 finalize: 7.1204
batch bounding time:  1.99619460105896
Current worst splitting domains [lb, ub] (depth):
[-2.93916,   inf] (45), [-2.88177,   inf] (45), [-2.85784,   inf] (45), [-2.84118,   inf] (45), [-2.82371,   inf] (45), [-2.80663,   inf] (45), [-2.80650,   inf] (45), [-2.77659,   inf] (45), [-2.76959,   inf] (45), [-2.76425,   inf] (45), [-2.74216,   inf] (45), [-2.74180,   inf] (45), [-2.73330,   inf] (45), [-2.73187,   inf] (45), [-2.71069,   inf] (45), [-2.69538,   inf] (45), [-2.69137,   inf] (45), [-2.68756,   inf] (45), [-2.67590,   inf] (45), [-2.67537,   inf] (45), 
length of domains: 16177
Total time: 2.7934	 pickout: 0.2848	 decision: 0.2610	 get_bound: 1.9999	 add_domain: 0.2476
Current lb:-2.9391567707061768
32704 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 43.9728422164917

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [0, 75] [0, 75] [0, 87] [0, 75] [4, 74] [1, 46] [2, 39] [0, 75] [1, 46] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3691.177490234375 with beta sum per layer: [463.5967712402344, 154.72726440429688, 228.8745574951172, 9.473541259765625, 104.87246704101562, 87.66969299316406, 855.1806640625, 4309.966796875]
alpha/beta optimization time: 0.5762760639190674
This batch time : update_bounds func: 1.4274	 prepare: 0.4834	 bound: 0.5770	 transfer: 0.0187	 finalize: 0.3427
Accumulated time: update_bounds func: 32.3692	 prepare: 7.7274	 bound: 16.0159	 transfer: 0.0187	 finalize: 7.4631
batch bounding time:  1.4299392700195312
Current worst splitting domains [lb, ub] (depth):
[-2.83314,   inf] (47), [-2.78677,   inf] (47), [-2.77659,   inf] (47), [-2.75176,   inf] (47), [-2.73621,   inf] (47), [-2.71220,   inf] (47), [-2.69554,   inf] (47), [-2.69414,   inf] (47), [-2.68629,   inf] (47), [-2.68590,   inf] (47), [-2.68546,   inf] (47), [-2.67267,   inf] (47), [-2.65417,   inf] (47), [-2.64935,   inf] (47), [-2.64627,   inf] (47), [-2.63814,   inf] (47), [-2.62736,   inf] (47), [-2.62408,   inf] (47), [-2.62358,   inf] (47), [-2.61377,   inf] (47), 
length of domains: 17201
Total time: 2.2303	 pickout: 0.2857	 decision: 0.2574	 get_bound: 1.4336	 add_domain: 0.2536
Current lb:-2.8331403732299805
34752 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 46.25408864021301

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 74] [1, 46] [1, 46] [4, 74] [2, 39] [7, 12] [0, 23] [1, 46] [0, 87] [2, 30] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3622.25146484375 with beta sum per layer: [580.0616455078125, 187.97479248046875, 158.94305419921875, 7.029383659362793, 127.02629852294922, 95.21281433105469, 752.965576171875, 4327.87890625]
alpha/beta optimization time: 0.551030158996582
This batch time : update_bounds func: 1.4137	 prepare: 0.4913	 bound: 0.5516	 transfer: 0.0185	 finalize: 0.3471
Accumulated time: update_bounds func: 33.7829	 prepare: 8.2187	 bound: 16.5675	 transfer: 0.0185	 finalize: 7.8102
batch bounding time:  1.4166135787963867
Current worst splitting domains [lb, ub] (depth):
[-2.81562,   inf] (49), [-2.73879,   inf] (49), [-2.73621,   inf] (49), [-2.73044,   inf] (49), [-2.72690,   inf] (49), [-2.65321,   inf] (49), [-2.65311,   inf] (49), [-2.63282,   inf] (49), [-2.61883,   inf] (49), [-2.59584,   inf] (49), [-2.57139,   inf] (49), [-2.56953,   inf] (49), [-2.56830,   inf] (49), [-2.56280,   inf] (49), [-2.55984,   inf] (49), [-2.55724,   inf] (49), [-2.55383,   inf] (49), [-2.55128,   inf] (49), [-2.54374,   inf] (49), [-2.53927,   inf] (49), 
length of domains: 18225
Total time: 2.8925	 pickout: 0.2827	 decision: 0.9315	 get_bound: 1.4203	 add_domain: 0.2581
Current lb:-2.8156182765960693
36800 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 49.20451378822327

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 64] [1, 64] [1, 46] [0, 87] [1, 64] [1, 64] [4, 74] [0, 23] [0, 39] [0, 39] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3560.248046875 with beta sum per layer: [568.88037109375, 230.17236328125, 126.54158020019531, 0.0, 145.566650390625, 100.3245849609375, 770.884521484375, 4242.84326171875]
alpha/beta optimization time: 0.5465426445007324
This batch time : update_bounds func: 2.2169	 prepare: 0.4948	 bound: 0.5472	 transfer: 0.0191	 finalize: 1.1505
Accumulated time: update_bounds func: 35.9998	 prepare: 8.7135	 bound: 17.1147	 transfer: 0.0191	 finalize: 8.9607
batch bounding time:  2.2192776203155518
Current worst splitting domains [lb, ub] (depth):
[-2.71514,   inf] (51), [-2.71230,   inf] (51), [-2.63676,   inf] (51), [-2.62098,   inf] (51), [-2.61970,   inf] (51), [-2.60120,   inf] (51), [-2.59839,   inf] (51), [-2.56074,   inf] (51), [-2.55984,   inf] (51), [-2.55383,   inf] (51), [-2.53752,   inf] (51), [-2.53257,   inf] (51), [-2.52242,   inf] (51), [-2.51774,   inf] (51), [-2.50049,   inf] (51), [-2.49725,   inf] (51), [-2.48595,   inf] (51), [-2.47337,   inf] (51), [-2.47330,   inf] (51), [-2.47311,   inf] (51), 
length of domains: 19249
Total time: 3.0563	 pickout: 0.3103	 decision: 0.2602	 get_bound: 2.2229	 add_domain: 0.2628
Current lb:-2.7151386737823486
38848 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 52.30959367752075

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 0] [1, 64] [0, 0] [6, 55] [1, 64] [7, 74] [0, 0] [4, 74] [1, 46] [1, 46] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3488.6298828125 with beta sum per layer: [673.9893798828125, 333.33697509765625, 112.49833679199219, 3.1768689155578613, 92.04109191894531, 93.11909484863281, 715.853759765625, 4097.482421875]
alpha/beta optimization time: 0.5435659885406494
This batch time : update_bounds func: 1.4099	 prepare: 0.4973	 bound: 0.5442	 transfer: 0.0186	 finalize: 0.3445
Accumulated time: update_bounds func: 37.4097	 prepare: 9.2108	 bound: 17.6589	 transfer: 0.0186	 finalize: 9.3052
batch bounding time:  1.4123876094818115
Current worst splitting domains [lb, ub] (depth):
[-2.62550,   inf] (53), [-2.61473,   inf] (53), [-2.59818,   inf] (53), [-2.54697,   inf] (53), [-2.53205,   inf] (53), [-2.53004,   inf] (53), [-2.52678,   inf] (53), [-2.51283,   inf] (53), [-2.50322,   inf] (53), [-2.49399,   inf] (53), [-2.49065,   inf] (53), [-2.45783,   inf] (53), [-2.45253,   inf] (53), [-2.44423,   inf] (53), [-2.44222,   inf] (53), [-2.44170,   inf] (53), [-2.43888,   inf] (53), [-2.43444,   inf] (53), [-2.43409,   inf] (53), [-2.43072,   inf] (53), 
length of domains: 20273
Total time: 2.2418	 pickout: 0.2992	 decision: 0.2615	 get_bound: 1.4161	 add_domain: 0.2650
Current lb:-2.6254971027374268
40896 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 54.59985566139221

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 74] [0, 0] [1, 64] [7, 74] [1, 64] [1, 64] [1, 64] [7, 74] [7, 74] [0, 0] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3445.92431640625 with beta sum per layer: [669.5714721679688, 432.42303466796875, 122.24494171142578, 8.731739044189453, 94.73524475097656, 83.92144775390625, 624.9794921875, 3896.117919921875]
alpha/beta optimization time: 0.5411877632141113
This batch time : update_bounds func: 2.2010	 prepare: 0.5013	 bound: 0.5418	 transfer: 0.0185	 finalize: 1.1337
Accumulated time: update_bounds func: 39.6106	 prepare: 9.7121	 bound: 18.2007	 transfer: 0.0185	 finalize: 10.4389
batch bounding time:  2.2033865451812744
Current worst splitting domains [lb, ub] (depth):
[-2.53009,   inf] (55), [-2.51871,   inf] (55), [-2.50719,   inf] (55), [-2.44713,   inf] (55), [-2.43584,   inf] (55), [-2.43290,   inf] (55), [-2.42441,   inf] (55), [-2.42300,   inf] (55), [-2.41144,   inf] (55), [-2.40518,   inf] (55), [-2.40341,   inf] (55), [-2.40148,   inf] (55), [-2.39508,   inf] (55), [-2.36375,   inf] (55), [-2.34841,   inf] (55), [-2.34598,   inf] (55), [-2.34571,   inf] (55), [-2.34438,   inf] (55), [-2.34270,   inf] (55), [-2.33951,   inf] (55), 
length of domains: 21297
Total time: 3.0407	 pickout: 0.3036	 decision: 0.2616	 get_bound: 2.2071	 add_domain: 0.2683
Current lb:-2.5300865173339844
42944 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 57.68952202796936

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 74] [0, 39] [0, 0] [0, 39] [0, 0] [0, 0] [0, 0] [1, 64] [7, 74] [1, 64] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3394.2958984375 with beta sum per layer: [620.2562255859375, 514.8151245117188, 106.15343475341797, 4.61624813079834, 167.96942138671875, 90.24523162841797, 645.6648559570312, 3771.86083984375]
alpha/beta optimization time: 0.5442216396331787
This batch time : update_bounds func: 1.4218	 prepare: 0.5049	 bound: 0.5449	 transfer: 0.0185	 finalize: 0.3482
Accumulated time: update_bounds func: 41.0324	 prepare: 10.2169	 bound: 18.7455	 transfer: 0.0185	 finalize: 10.7871
batch bounding time:  1.4242267608642578
Current worst splitting domains [lb, ub] (depth):
[-2.43510,   inf] (57), [-2.43240,   inf] (57), [-2.41329,   inf] (57), [-2.38258,   inf] (57), [-2.35811,   inf] (57), [-2.34085,   inf] (57), [-2.34051,   inf] (57), [-2.33644,   inf] (57), [-2.33464,   inf] (57), [-2.31689,   inf] (57), [-2.31207,   inf] (57), [-2.31155,   inf] (57), [-2.29425,   inf] (57), [-2.28977,   inf] (57), [-2.28760,   inf] (57), [-2.28127,   inf] (57), [-2.26661,   inf] (57), [-2.26222,   inf] (57), [-2.25886,   inf] (57), [-2.25182,   inf] (57), 
length of domains: 22321
Total time: 2.2572	 pickout: 0.2969	 decision: 0.2629	 get_bound: 1.4279	 add_domain: 0.2695
Current lb:-2.435100555419922
44992 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 59.99736189842224

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 39] [4, 47] [4, 47] [2, 61] [7, 77] [0, 39] [6, 0] [0, 54] [0, 0] [2, 61] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3309.7958984375 with beta sum per layer: [532.371826171875, 523.62890625, 176.20068359375, 7.841509819030762, 126.65972900390625, 99.3651123046875, 730.7252197265625, 3866.04248046875]
alpha/beta optimization time: 0.5441465377807617
This batch time : update_bounds func: 1.4231	 prepare: 0.5053	 bound: 0.5448	 transfer: 0.0185	 finalize: 0.3481
Accumulated time: update_bounds func: 42.4555	 prepare: 10.7222	 bound: 19.2903	 transfer: 0.0185	 finalize: 11.1353
batch bounding time:  1.4254415035247803
Current worst splitting domains [lb, ub] (depth):
[-2.42476,   inf] (59), [-2.39963,   inf] (59), [-2.37244,   inf] (59), [-2.33123,   inf] (59), [-2.30679,   inf] (59), [-2.29462,   inf] (59), [-2.26304,   inf] (59), [-2.25593,   inf] (59), [-2.25369,   inf] (59), [-2.23729,   inf] (59), [-2.23365,   inf] (59), [-2.23044,   inf] (59), [-2.22510,   inf] (59), [-2.22437,   inf] (59), [-2.21477,   inf] (59), [-2.21266,   inf] (59), [-2.21130,   inf] (59), [-2.20389,   inf] (59), [-2.20378,   inf] (59), [-2.20151,   inf] (59), 
length of domains: 23345
Total time: 3.1317	 pickout: 0.2993	 decision: 1.1285	 get_bound: 1.4292	 add_domain: 0.2748
Current lb:-2.4247608184814453
47040 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 63.18170499801636

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 61] [3, 71] [2, 34] [4, 97] [2, 34] [4, 97] [0, 39] [7, 10] [0, 39] [0, 39] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3264.599609375 with beta sum per layer: [495.1133728027344, 458.987060546875, 179.4478759765625, 21.737247467041016, 178.07882690429688, 146.19346618652344, 769.2686767578125, 3980.25048828125]
alpha/beta optimization time: 0.5437614917755127
This batch time : update_bounds func: 1.4233	 prepare: 0.5059	 bound: 0.5444	 transfer: 0.0185	 finalize: 0.3482
Accumulated time: update_bounds func: 43.8788	 prepare: 11.2281	 bound: 19.8347	 transfer: 0.0185	 finalize: 11.4834
batch bounding time:  1.42572021484375
Current worst splitting domains [lb, ub] (depth):
[-2.42476,   inf] (61), [-2.37473,   inf] (61), [-2.35926,   inf] (61), [-2.29793,   inf] (61), [-2.29412,   inf] (61), [-2.26229,   inf] (61), [-2.21271,   inf] (61), [-2.20949,   inf] (61), [-2.20357,   inf] (61), [-2.20100,   inf] (61), [-2.19695,   inf] (61), [-2.18542,   inf] (61), [-2.17570,   inf] (61), [-2.15968,   inf] (61), [-2.15811,   inf] (61), [-2.15658,   inf] (61), [-2.15139,   inf] (61), [-2.14569,   inf] (61), [-2.13571,   inf] (61), [-2.13527,   inf] (61), 
length of domains: 24369
Total time: 2.2695	 pickout: 0.3004	 decision: 0.2663	 get_bound: 1.4294	 add_domain: 0.2735
Current lb:-2.4247608184814453
49088 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 65.50353455543518

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 39] [2, 34] [0, 39] [3, 71] [0, 39] [0, 39] [0, 39] [4, 47] [4, 97] [2, 61] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3191.462646484375 with beta sum per layer: [525.265625, 441.23284912109375, 178.4618377685547, 42.130645751953125, 161.9281005859375, 156.1331787109375, 694.166748046875, 4072.824462890625]
alpha/beta optimization time: 0.5432388782501221
This batch time : update_bounds func: 1.4223	 prepare: 0.5019	 bound: 0.5439	 transfer: 0.0186	 finalize: 0.3517
Accumulated time: update_bounds func: 45.3011	 prepare: 11.7300	 bound: 20.3785	 transfer: 0.0186	 finalize: 11.8352
batch bounding time:  1.4247703552246094
Current worst splitting domains [lb, ub] (depth):
[-2.36697,   inf] (63), [-2.33078,   inf] (63), [-2.27508,   inf] (63), [-2.24818,   inf] (63), [-2.20100,   inf] (63), [-2.19695,   inf] (63), [-2.19399,   inf] (63), [-2.17664,   inf] (63), [-2.17162,   inf] (63), [-2.17106,   inf] (63), [-2.17035,   inf] (63), [-2.15361,   inf] (63), [-2.14618,   inf] (63), [-2.13754,   inf] (63), [-2.13124,   inf] (63), [-2.12221,   inf] (63), [-2.11728,   inf] (63), [-2.10798,   inf] (63), [-2.10774,   inf] (63), [-2.10623,   inf] (63), 
length of domains: 25393
Total time: 3.2178	 pickout: 0.2993	 decision: 1.2146	 get_bound: 1.4286	 add_domain: 0.2753
Current lb:-2.3669729232788086
51136 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 68.77386689186096

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 61] [2, 34] [1, 90] [3, 71] [1, 90] [3, 39] [1, 90] [3, 71] [2, 34] [2, 34] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3137.122802734375 with beta sum per layer: [514.7742919921875, 442.5531311035156, 134.8229217529297, 48.16429901123047, 134.29281616210938, 179.2083282470703, 891.24462890625, 4207.4697265625]
alpha/beta optimization time: 0.5445585250854492
This batch time : update_bounds func: 1.4182	 prepare: 0.4970	 bound: 0.5452	 transfer: 0.0186	 finalize: 0.3511
Accumulated time: update_bounds func: 46.7193	 prepare: 12.2270	 bound: 20.9237	 transfer: 0.0186	 finalize: 12.1863
batch bounding time:  1.4207146167755127
Current worst splitting domains [lb, ub] (depth):
[-2.36697,   inf] (65), [-2.32311,   inf] (65), [-2.23524,   inf] (65), [-2.22082,   inf] (65), [-2.17722,   inf] (65), [-2.15746,   inf] (65), [-2.15740,   inf] (65), [-2.15703,   inf] (65), [-2.15660,   inf] (65), [-2.15240,   inf] (65), [-2.12913,   inf] (65), [-2.11356,   inf] (65), [-2.11005,   inf] (65), [-2.09223,   inf] (65), [-2.08517,   inf] (65), [-2.08404,   inf] (65), [-2.08000,   inf] (65), [-2.07054,   inf] (65), [-2.06576,   inf] (65), [-2.06077,   inf] (65), 
length of domains: 26417
Total time: 2.2624	 pickout: 0.2984	 decision: 0.2656	 get_bound: 1.4245	 add_domain: 0.2738
Current lb:-2.3669729232788086
53184 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 71.08922576904297

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 54] [3, 39] [0, 54] [3, 39] [0, 84] [2, 61] [2, 34] [0, 16] [2, 34] [3, 39] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3113.70947265625 with beta sum per layer: [481.962890625, 476.142822265625, 159.5841064453125, 38.084224700927734, 171.32620239257812, 179.87484741210938, 736.5606689453125, 4422.78125]
alpha/beta optimization time: 0.5470073223114014
This batch time : update_bounds func: 2.4792	 prepare: 0.4953	 bound: 0.5476	 transfer: 0.0184	 finalize: 0.3520
Accumulated time: update_bounds func: 49.1984	 prepare: 12.7223	 bound: 21.4714	 transfer: 0.0184	 finalize: 12.5383
batch bounding time:  2.48167085647583
Current worst splitting domains [lb, ub] (depth):
[-2.31691,   inf] (67), [-2.19974,   inf] (67), [-2.19441,   inf] (67), [-2.19295,   inf] (67), [-2.15746,   inf] (67), [-2.15235,   inf] (67), [-2.14603,   inf] (67), [-2.13903,   inf] (67), [-2.11356,   inf] (67), [-2.10566,   inf] (67), [-2.10489,   inf] (67), [-2.06235,   inf] (67), [-2.06054,   inf] (67), [-2.06003,   inf] (67), [-2.03644,   inf] (67), [-2.03086,   inf] (67), [-2.01884,   inf] (67), [-2.01675,   inf] (67), [-2.01630,   inf] (67), [-2.01259,   inf] (67), 
length of domains: 27441
Total time: 3.3255	 pickout: 0.2977	 decision: 0.2681	 get_bound: 2.4855	 add_domain: 0.2742
Current lb:-2.316906452178955
55232 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 74.46251273155212

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 45] [1, 90] [1, 90] [0, 45] [0, 54] [2, 61] [0, 54] [0, 45] [0, 45] [0, 54] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3053.736572265625 with beta sum per layer: [612.0919189453125, 510.4691467285156, 158.30731201171875, 43.536842346191406, 201.63009643554688, 168.71356201171875, 872.5623168945312, 4212.24658203125]
alpha/beta optimization time: 0.5473542213439941
This batch time : update_bounds func: 1.4335	 prepare: 0.5087	 bound: 0.5480	 transfer: 0.0186	 finalize: 0.3521
Accumulated time: update_bounds func: 50.6319	 prepare: 13.2309	 bound: 22.0194	 transfer: 0.0186	 finalize: 12.8904
batch bounding time:  1.4359703063964844
Current worst splitting domains [lb, ub] (depth):
[-2.25895,   inf] (69), [-2.15697,   inf] (69), [-2.15235,   inf] (69), [-2.15191,   inf] (69), [-2.12111,   inf] (69), [-2.07293,   inf] (69), [-2.04878,   inf] (69), [-2.03302,   inf] (69), [-2.03159,   inf] (69), [-2.01757,   inf] (69), [-2.01675,   inf] (69), [-2.01630,   inf] (69), [-2.00208,   inf] (69), [-1.99663,   inf] (69), [-1.99385,   inf] (69), [-1.98319,   inf] (69), [-1.97677,   inf] (69), [-1.97392,   inf] (69), [-1.97096,   inf] (69), [-1.96399,   inf] (69), 
length of domains: 28465
Total time: 2.2879	 pickout: 0.3006	 decision: 0.2693	 get_bound: 1.4398	 add_domain: 0.2782
Current lb:-2.25894832611084
57280 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 76.81359434127808

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 84] [4, 97] [0, 54] [4, 97] [0, 84] [0, 84] [0, 54] [2, 61] [2, 61] [0, 45] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3044.8876953125 with beta sum per layer: [512.5737915039062, 406.80584716796875, 154.88046264648438, 32.064369201660156, 165.1118621826172, 162.94528198242188, 802.5474853515625, 4674.96875]
alpha/beta optimization time: 0.553436279296875
This batch time : update_bounds func: 2.6923	 prepare: 0.4947	 bound: 0.5541	 transfer: 0.0185	 finalize: 1.6187
Accumulated time: update_bounds func: 53.3242	 prepare: 13.7257	 bound: 22.5734	 transfer: 0.0185	 finalize: 14.5091
batch bounding time:  2.6948206424713135
Current worst splitting domains [lb, ub] (depth):
[-2.19833,   inf] (71), [-2.11209,   inf] (71), [-2.10755,   inf] (71), [-2.05361,   inf] (71), [-2.03302,   inf] (71), [-2.03159,   inf] (71), [-2.00592,   inf] (71), [-1.97729,   inf] (71), [-1.97358,   inf] (71), [-1.95397,   inf] (71), [-1.95220,   inf] (71), [-1.93818,   inf] (71), [-1.93607,   inf] (71), [-1.90400,   inf] (71), [-1.90360,   inf] (71), [-1.89960,   inf] (71), [-1.89431,   inf] (71), [-1.89089,   inf] (71), [-1.89024,   inf] (71), [-1.88968,   inf] (71), 
length of domains: 29489
Total time: 3.5531	 pickout: 0.3061	 decision: 0.2752	 get_bound: 2.6987	 add_domain: 0.2732
Current lb:-2.198333978652954
59328 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 80.4145336151123

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 54] [0, 16] [7, 77] [0, 54] [7, 77] [7, 77] [0, 54] [0, 16] [0, 16] [0, 54] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 3033.56689453125 with beta sum per layer: [474.39410400390625, 409.991455078125, 124.01911163330078, 26.615921020507812, 181.8000946044922, 179.26100158691406, 1048.131591796875, 4605.9990234375]
alpha/beta optimization time: 0.5487344264984131
This batch time : update_bounds func: 1.4468	 prepare: 0.5169	 bound: 0.5494	 transfer: 0.0191	 finalize: 0.3547
Accumulated time: update_bounds func: 54.7710	 prepare: 14.2425	 bound: 23.1228	 transfer: 0.0191	 finalize: 14.8638
batch bounding time:  1.4493672847747803
Current worst splitting domains [lb, ub] (depth):
[-2.04664,   inf] (73), [-2.04226,   inf] (73), [-1.97980,   inf] (73), [-1.95381,   inf] (73), [-1.95367,   inf] (73), [-1.95167,   inf] (73), [-1.87904,   inf] (73), [-1.87679,   inf] (73), [-1.87662,   inf] (73), [-1.87550,   inf] (73), [-1.87448,   inf] (73), [-1.87340,   inf] (73), [-1.87209,   inf] (73), [-1.86880,   inf] (73), [-1.86543,   inf] (73), [-1.86440,   inf] (73), [-1.85824,   inf] (73), [-1.85656,   inf] (73), [-1.85519,   inf] (73), [-1.85292,   inf] (73), 
length of domains: 30513
Total time: 2.3125	 pickout: 0.3069	 decision: 0.2782	 get_bound: 1.4532	 add_domain: 0.2742
Current lb:-2.0466387271881104
61376 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 82.78744721412659

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 71] [3, 71] [0, 45] [0, 45] [0, 45] [0, 45] [2, 34] [2, 34] [2, 34] [2, 34] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2990.458984375 with beta sum per layer: [445.3797607421875, 412.33056640625, 141.3210906982422, 37.97716522216797, 176.47152709960938, 203.71881103515625, 1001.6243896484375, 4688.4765625]
alpha/beta optimization time: 0.5483171939849854
This batch time : update_bounds func: 1.4355	 prepare: 0.5050	 bound: 0.5490	 transfer: 0.0186	 finalize: 0.3560
Accumulated time: update_bounds func: 56.2066	 prepare: 14.7475	 bound: 23.6718	 transfer: 0.0186	 finalize: 15.2198
batch bounding time:  1.4380381107330322
Current worst splitting domains [lb, ub] (depth):
[-2.01211,   inf] (75), [-2.00701,   inf] (75), [-1.91555,   inf] (75), [-1.89231,   inf] (75), [-1.88974,   inf] (75), [-1.88797,   inf] (75), [-1.87169,   inf] (75), [-1.86908,   inf] (75), [-1.86755,   inf] (75), [-1.86541,   inf] (75), [-1.83144,   inf] (75), [-1.82709,   inf] (75), [-1.82262,   inf] (75), [-1.81992,   inf] (75), [-1.81856,   inf] (75), [-1.81771,   inf] (75), [-1.81767,   inf] (75), [-1.81143,   inf] (75), [-1.81107,   inf] (75), [-1.80863,   inf] (75), 
length of domains: 31537
Total time: 2.3029	 pickout: 0.3119	 decision: 0.2743	 get_bound: 1.4420	 add_domain: 0.2748
Current lb:-2.0121090412139893
63424 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 85.1502103805542

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 90] [1, 90] [7, 77] [0, 16] [3, 39] [7, 77] [0, 45] [0, 45] [0, 45] [0, 45] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2955.36572265625 with beta sum per layer: [508.04046630859375, 364.0120849609375, 153.58189392089844, 28.89608383178711, 153.92831420898438, 202.54458618164062, 1061.4771728515625, 5015.6787109375]
alpha/beta optimization time: 0.5469605922698975
This batch time : update_bounds func: 1.4280	 prepare: 0.4970	 bound: 0.5476	 transfer: 0.0185	 finalize: 0.3586
Accumulated time: update_bounds func: 57.6345	 prepare: 15.2445	 bound: 24.2194	 transfer: 0.0185	 finalize: 15.5784
batch bounding time:  1.4305133819580078
Current worst splitting domains [lb, ub] (depth):
[-1.96827,   inf] (77), [-1.96344,   inf] (77), [-1.86663,   inf] (77), [-1.81292,   inf] (77), [-1.81025,   inf] (77), [-1.80543,   inf] (77), [-1.80281,   inf] (77), [-1.78913,   inf] (77), [-1.78038,   inf] (77), [-1.78034,   inf] (77), [-1.77991,   inf] (77), [-1.77752,   inf] (77), [-1.77543,   inf] (77), [-1.77457,   inf] (77), [-1.77167,   inf] (77), [-1.76557,   inf] (77), [-1.76005,   inf] (77), [-1.75937,   inf] (77), [-1.75926,   inf] (77), [-1.75728,   inf] (77), 
length of domains: 32561
Total time: 3.6771	 pickout: 0.3256	 decision: 1.6427	 get_bound: 1.4344	 add_domain: 0.2745
Current lb:-1.9682668447494507
65472 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 88.8874740600586

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 77] [7, 77] [0, 16] [0, 16] [3, 39] [3, 39] [3, 39] [1, 90] [1, 90] [0, 16] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2930.203369140625 with beta sum per layer: [504.86578369140625, 400.2003173828125, 150.57296752929688, 36.656097412109375, 184.94223022460938, 143.41830444335938, 1058.9678955078125, 4994.7529296875]
alpha/beta optimization time: 0.550264835357666
This batch time : update_bounds func: 1.4377	 prepare: 0.5031	 bound: 0.5509	 transfer: 0.0194	 finalize: 0.3571
Accumulated time: update_bounds func: 59.0723	 prepare: 15.7476	 bound: 24.7703	 transfer: 0.0194	 finalize: 15.9355
batch bounding time:  1.4402987957000732
Current worst splitting domains [lb, ub] (depth):
[-1.81414,   inf] (79), [-1.81028,   inf] (79), [-1.80940,   inf] (79), [-1.80560,   inf] (79), [-1.79068,   inf] (79), [-1.78684,   inf] (79), [-1.78158,   inf] (79), [-1.75389,   inf] (79), [-1.74410,   inf] (79), [-1.73787,   inf] (79), [-1.73437,   inf] (79), [-1.73412,   inf] (79), [-1.73296,   inf] (79), [-1.73241,   inf] (79), [-1.72907,   inf] (79), [-1.72596,   inf] (79), [-1.72353,   inf] (77), [-1.72023,   inf] (79), [-1.71828,   inf] (79), [-1.71458,   inf] (79), 
length of domains: 33585
Total time: 2.3188	 pickout: 0.3252	 decision: 0.2725	 get_bound: 1.4441	 add_domain: 0.2769
Current lb:-1.8141392469406128
67520 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 91.25770950317383

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 97] [4, 40] [4, 97] [4, 40] [0, 16] [4, 40] [4, 40] [0, 45] [7, 77] [4, 40] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2903.417236328125 with beta sum per layer: [503.4421081542969, 374.7843017578125, 173.636962890625, 36.66300582885742, 213.687744140625, 206.51454162597656, 1098.485107421875, 4923.35791015625]
alpha/beta optimization time: 0.5506112575531006
This batch time : update_bounds func: 1.4587	 prepare: 0.5103	 bound: 0.5513	 transfer: 0.0188	 finalize: 0.3718
Accumulated time: update_bounds func: 60.5310	 prepare: 16.2579	 bound: 25.3216	 transfer: 0.0188	 finalize: 16.3073
batch bounding time:  1.4612760543823242
Current worst splitting domains [lb, ub] (depth):
[-1.78902,   inf] (81), [-1.78464,   inf] (81), [-1.77157,   inf] (81), [-1.76977,   inf] (81), [-1.76726,   inf] (81), [-1.76477,   inf] (81), [-1.71565,   inf] (79), [-1.71424,   inf] (81), [-1.70915,   inf] (81), [-1.70623,   inf] (81), [-1.70405,   inf] (81), [-1.70353,   inf] (81), [-1.70285,   inf] (49), [-1.70257,   inf] (59), [-1.69839,   inf] (81), [-1.69700,   inf] (81), [-1.69631,   inf] (49), [-1.69618,   inf] (63), [-1.69552,   inf] (61), [-1.69549,   inf] (71), 
length of domains: 34609
Total time: 3.8777	 pickout: 0.3387	 decision: 0.2739	 get_bound: 1.4657	 add_domain: 1.7993
Current lb:-1.7890182733535767
69568 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 95.18624067306519

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [4, 97] [4, 97] [4, 40] [0, 16] [4, 40] [0, 16] [0, 39] [0, 84] [0, 84] [6, 55] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2897.9345703125 with beta sum per layer: [491.1272888183594, 372.2065734863281, 149.95632934570312, 27.611717224121094, 217.78067016601562, 173.4755859375, 1161.260986328125, 5037.63037109375]
alpha/beta optimization time: 0.552020788192749
This batch time : update_bounds func: 1.4233	 prepare: 0.4879	 bound: 0.5527	 transfer: 0.0190	 finalize: 0.3573
Accumulated time: update_bounds func: 61.9543	 prepare: 16.7458	 bound: 25.8742	 transfer: 0.0190	 finalize: 16.6646
batch bounding time:  1.4259033203125
Current worst splitting domains [lb, ub] (depth):
[-1.75336,   inf] (83), [-1.74913,   inf] (83), [-1.74789,   inf] (83), [-1.74349,   inf] (83), [-1.69105,   inf] (53), [-1.69099,   inf] (59), [-1.69095,   inf] (49), [-1.69074,   inf] (65), [-1.69051,   inf] (61), [-1.68921,   inf] (59), [-1.68607,   inf] (61), [-1.68439,   inf] (51), [-1.68341,   inf] (49), [-1.68279,   inf] (55), [-1.68256,   inf] (65), [-1.68256,   inf] (41), [-1.68255,   inf] (59), [-1.68255,   inf] (53), [-1.68254,   inf] (39), [-1.68253,   inf] (61), 
length of domains: 35633
Total time: 2.3017	 pickout: 0.3213	 decision: 0.2747	 get_bound: 1.4298	 add_domain: 0.2758
Current lb:-1.7533570528030396
71616 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 97.53835773468018

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 16] [0, 16] [0, 16] [0, 16] [0, 16] [0, 23] [1, 46] [0, 0] [0, 23] [1, 46] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2864.341796875 with beta sum per layer: [513.2413940429688, 411.4945983886719, 179.93556213378906, 35.149681091308594, 193.1787109375, 229.42599487304688, 1149.8076171875, 5074.10400390625]
alpha/beta optimization time: 0.5504167079925537
This batch time : update_bounds func: 1.4202	 prepare: 0.4852	 bound: 0.5511	 transfer: 0.0190	 finalize: 0.3584
Accumulated time: update_bounds func: 63.3746	 prepare: 17.2310	 bound: 26.4253	 transfer: 0.0190	 finalize: 17.0230
batch bounding time:  1.4228477478027344
Current worst splitting domains [lb, ub] (depth):
[-1.67927,   inf] (63), [-1.67856,   inf] (63), [-1.67668,   inf] (67), [-1.67631,   inf] (55), [-1.67567,   inf] (49), [-1.67314,   inf] (55), [-1.67309,   inf] (81), [-1.67308,   inf] (47), [-1.67307,   inf] (49), [-1.67306,   inf] (47), [-1.67306,   inf] (43), [-1.67306,   inf] (47), [-1.67304,   inf] (33), [-1.67303,   inf] (47), [-1.67303,   inf] (37), [-1.67303,   inf] (49), [-1.67302,   inf] (55), [-1.67302,   inf] (43), [-1.67301,   inf] (69), [-1.67300,   inf] (71), 
length of domains: 36657
Total time: 2.3035	 pickout: 0.3197	 decision: 0.2814	 get_bound: 1.4267	 add_domain: 0.2756
Current lb:-1.6792677640914917
73664 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 99.89199018478394

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [1, 64] [0, 16] [1, 46] [1, 41] [0, 0] [0, 45] [5, 53] [6, 0] [1, 46] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2836.5185546875 with beta sum per layer: [525.3079223632812, 390.02984619140625, 157.32611083984375, 30.596696853637695, 185.36358642578125, 193.18142700195312, 1076.2119140625, 5180.283203125]
alpha/beta optimization time: 0.5533151626586914
This batch time : update_bounds func: 3.0224	 prepare: 0.4865	 bound: 0.5540	 transfer: 0.0191	 finalize: 1.9559
Accumulated time: update_bounds func: 66.3970	 prepare: 17.7175	 bound: 26.9793	 transfer: 0.0191	 finalize: 18.9789
batch bounding time:  3.0254628658294678
Current worst splitting domains [lb, ub] (depth):
[-1.67261,   inf] (63), [-1.67141,   inf] (59), [-1.66775,   inf] (63), [-1.66668,   inf] (49), [-1.66528,   inf] (57), [-1.66496,   inf] (57), [-1.66396,   inf] (59), [-1.66349,   inf] (63), [-1.66348,   inf] (45), [-1.66348,   inf] (37), [-1.66347,   inf] (45), [-1.66346,   inf] (49), [-1.66346,   inf] (55), [-1.66346,   inf] (53), [-1.66345,   inf] (51), [-1.66345,   inf] (63), [-1.66344,   inf] (59), [-1.66343,   inf] (45), [-1.66343,   inf] (63), [-1.66343,   inf] (55), 
length of domains: 37681
Total time: 3.9014	 pickout: 0.3169	 decision: 0.2763	 get_bound: 3.0298	 add_domain: 0.2784
Current lb:-1.6726149320602417
75712 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 103.84422564506531

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [1, 46] [2, 30] [2, 30] [1, 64] [4, 40] [2, 30] [5, 53] [0, 87] [5, 80] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2838.27001953125 with beta sum per layer: [500.3443603515625, 333.53936767578125, 173.757568359375, 34.67304229736328, 224.67926025390625, 173.82534790039062, 1137.4832763671875, 5245.251953125]
alpha/beta optimization time: 0.5501246452331543
This batch time : update_bounds func: 1.4185	 prepare: 0.4848	 bound: 0.5508	 transfer: 0.0185	 finalize: 0.3574
Accumulated time: update_bounds func: 67.8155	 prepare: 18.2023	 bound: 27.5300	 transfer: 0.0185	 finalize: 19.3362
batch bounding time:  1.4210450649261475
Current worst splitting domains [lb, ub] (depth):
[-1.66170,   inf] (65), [-1.66013,   inf] (63), [-1.65872,   inf] (53), [-1.65754,   inf] (63), [-1.65745,   inf] (63), [-1.65645,   inf] (49), [-1.65590,   inf] (63), [-1.65522,   inf] (51), [-1.65503,   inf] (59), [-1.65413,   inf] (39), [-1.65412,   inf] (43), [-1.65411,   inf] (49), [-1.65411,   inf] (47), [-1.65410,   inf] (37), [-1.65408,   inf] (57), [-1.65408,   inf] (59), [-1.65407,   inf] (73), [-1.65407,   inf] (61), [-1.65407,   inf] (55), [-1.65404,   inf] (59), 
length of domains: 38705
Total time: 2.2947	 pickout: 0.3144	 decision: 0.2784	 get_bound: 1.4250	 add_domain: 0.2769
Current lb:-1.6616991758346558
77760 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 106.19131231307983

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 46] [0, 87] [1, 46] [1, 41] [0, 0] [7, 84] [2, 30] [0, 23] [7, 96] [6, 87] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2807.943359375 with beta sum per layer: [564.5213623046875, 404.64959716796875, 175.10379028320312, 21.126840591430664, 196.12770080566406, 234.59735107421875, 1131.91455078125, 5059.06103515625]
alpha/beta optimization time: 0.5504021644592285
This batch time : update_bounds func: 1.4148	 prepare: 0.4827	 bound: 0.5510	 transfer: 0.0186	 finalize: 0.3557
Accumulated time: update_bounds func: 69.2303	 prepare: 18.6849	 bound: 28.0811	 transfer: 0.0186	 finalize: 19.6919
batch bounding time:  1.4177391529083252
Current worst splitting domains [lb, ub] (depth):
[-1.65230,   inf] (57), [-1.64951,   inf] (65), [-1.64942,   inf] (57), [-1.64850,   inf] (67), [-1.64712,   inf] (53), [-1.64712,   inf] (53), [-1.64625,   inf] (57), [-1.64602,   inf] (61), [-1.64499,   inf] (61), [-1.64499,   inf] (43), [-1.64495,   inf] (51), [-1.64495,   inf] (57), [-1.64495,   inf] (39), [-1.64494,   inf] (69), [-1.64493,   inf] (41), [-1.64493,   inf] (67), [-1.64492,   inf] (39), [-1.64492,   inf] (67), [-1.64491,   inf] (65), [-1.64491,   inf] (51), 
length of domains: 39729
Total time: 2.2923	 pickout: 0.3105	 decision: 0.2813	 get_bound: 1.4220	 add_domain: 0.2785
Current lb:-1.6523027420043945
79808 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 108.53403449058533

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 66] [4, 40] [0, 16] [0, 87] [1, 64] [2, 30] [7, 33] [0, 87] [0, 39] [6, 23] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2791.0791015625 with beta sum per layer: [564.075439453125, 373.4899597167969, 152.2364501953125, 30.61574935913086, 180.07984924316406, 193.1372833251953, 1023.9584350585938, 5292.740234375]
alpha/beta optimization time: 0.5512135028839111
This batch time : update_bounds func: 1.4213	 prepare: 0.4846	 bound: 0.5519	 transfer: 0.0190	 finalize: 0.3592
Accumulated time: update_bounds func: 70.6516	 prepare: 19.1695	 bound: 28.6329	 transfer: 0.0190	 finalize: 20.0512
batch bounding time:  1.4238617420196533
Current worst splitting domains [lb, ub] (depth):
[-1.64286,   inf] (67), [-1.64284,   inf] (69), [-1.63957,   inf] (77), [-1.63813,   inf] (69), [-1.63784,   inf] (55), [-1.63708,   inf] (71), [-1.63678,   inf] (55), [-1.63638,   inf] (51), [-1.63636,   inf] (75), [-1.63636,   inf] (39), [-1.63636,   inf] (47), [-1.63636,   inf] (37), [-1.63634,   inf] (45), [-1.63634,   inf] (45), [-1.63632,   inf] (47), [-1.63631,   inf] (57), [-1.63630,   inf] (61), [-1.63630,   inf] (41), [-1.63629,   inf] (45), [-1.63628,   inf] (43), 
length of domains: 40753
Total time: 4.0642	 pickout: 0.3096	 decision: 0.2814	 get_bound: 1.4278	 add_domain: 2.0455
Current lb:-1.6428638696670532
81856 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 112.64825487136841

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 64] [7, 10] [0, 54] [6, 35] [7, 73] [2, 34] [7, 66] [1, 41] [0, 54] [6, 20] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2786.9794921875 with beta sum per layer: [464.8619384765625, 346.2181396484375, 154.49032592773438, 33.8690299987793, 252.42636108398438, 186.35240173339844, 1267.95166015625, 5302.5615234375]
alpha/beta optimization time: 0.5502760410308838
This batch time : update_bounds func: 1.4245	 prepare: 0.4899	 bound: 0.5509	 transfer: 0.0196	 finalize: 0.3575
Accumulated time: update_bounds func: 72.0761	 prepare: 19.6594	 bound: 29.1839	 transfer: 0.0196	 finalize: 20.4086
batch bounding time:  1.4270243644714355
Current worst splitting domains [lb, ub] (depth):
[-1.63530,   inf] (71), [-1.63527,   inf] (55), [-1.63288,   inf] (65), [-1.63054,   inf] (61), [-1.62868,   inf] (45), [-1.62844,   inf] (55), [-1.62838,   inf] (51), [-1.62822,   inf] (53), [-1.62797,   inf] (53), [-1.62797,   inf] (59), [-1.62795,   inf] (63), [-1.62795,   inf] (69), [-1.62792,   inf] (41), [-1.62791,   inf] (53), [-1.62791,   inf] (49), [-1.62790,   inf] (51), [-1.62790,   inf] (39), [-1.62788,   inf] (35), [-1.62787,   inf] (39), [-1.62786,   inf] (75), 
length of domains: 41777
Total time: 2.3063	 pickout: 0.3151	 decision: 0.2835	 get_bound: 1.4308	 add_domain: 0.2769
Current lb:-1.6353025436401367
83904 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 115.00811290740967

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 90] [2, 30] [1, 64] [0, 87] [7, 73] [0, 87] [0, 23] [1, 46] [6, 95] [0, 23] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2751.5029296875 with beta sum per layer: [554.8687133789062, 415.8505554199219, 193.58763122558594, 19.521263122558594, 158.42120361328125, 204.5050811767578, 1202.5615234375, 5267.28759765625]
alpha/beta optimization time: 0.5498805046081543
This batch time : update_bounds func: 1.4253	 prepare: 0.4894	 bound: 0.5505	 transfer: 0.0192	 finalize: 0.3592
Accumulated time: update_bounds func: 73.5015	 prepare: 20.1488	 bound: 29.7344	 transfer: 0.0192	 finalize: 20.7679
batch bounding time:  1.4278030395507812
Current worst splitting domains [lb, ub] (depth):
[-1.62733,   inf] (59), [-1.62560,   inf] (63), [-1.62527,   inf] (61), [-1.62442,   inf] (71), [-1.62345,   inf] (63), [-1.62229,   inf] (63), [-1.62208,   inf] (53), [-1.62205,   inf] (47), [-1.62194,   inf] (61), [-1.62098,   inf] (57), [-1.62005,   inf] (57), [-1.61996,   inf] (51), [-1.61969,   inf] (49), [-1.61968,   inf] (59), [-1.61967,   inf] (53), [-1.61965,   inf] (47), [-1.61964,   inf] (35), [-1.61962,   inf] (43), [-1.61962,   inf] (41), [-1.61961,   inf] (55), 
length of domains: 42801
Total time: 2.3099	 pickout: 0.3196	 decision: 0.2781	 get_bound: 1.4315	 add_domain: 0.2806
Current lb:-1.6273330450057983
85952 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 117.37049555778503

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 46] [5, 1] [1, 46] [0, 16] [0, 87] [2, 61] [1, 46] [6, 67] [2, 30] [1, 41] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2748.298095703125 with beta sum per layer: [524.125, 389.2413330078125, 162.34249877929688, 26.925901412963867, 243.4558563232422, 229.06069946289062, 1204.936767578125, 5271.515625]
alpha/beta optimization time: 0.5520741939544678
This batch time : update_bounds func: 1.4210	 prepare: 0.4857	 bound: 0.5527	 transfer: 0.0185	 finalize: 0.3576
Accumulated time: update_bounds func: 74.9224	 prepare: 20.6346	 bound: 30.2871	 transfer: 0.0185	 finalize: 21.1255
batch bounding time:  1.4234592914581299
Current worst splitting domains [lb, ub] (depth):
[-1.61938,   inf] (53), [-1.61905,   inf] (79), [-1.61596,   inf] (73), [-1.61575,   inf] (73), [-1.61575,   inf] (53), [-1.61554,   inf] (69), [-1.61479,   inf] (73), [-1.61330,   inf] (61), [-1.61311,   inf] (65), [-1.61259,   inf] (63), [-1.61174,   inf] (55), [-1.61174,   inf] (53), [-1.61174,   inf] (53), [-1.61173,   inf] (49), [-1.61173,   inf] (63), [-1.61173,   inf] (39), [-1.61173,   inf] (35), [-1.61172,   inf] (43), [-1.61172,   inf] (59), [-1.61171,   inf] (85), 
length of domains: 43825
Total time: 2.3012	 pickout: 0.3131	 decision: 0.2795	 get_bound: 1.4275	 add_domain: 0.2811
Current lb:-1.6193815469741821
88000 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 119.72377943992615

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 46] [2, 34] [0, 16] [4, 47] [6, 67] [1, 46] [0, 16] [5, 53] [7, 66] [0, 75] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2734.03515625 with beta sum per layer: [497.25921630859375, 394.14813232421875, 168.27825927734375, 26.23662567138672, 187.7052459716797, 216.58279418945312, 1170.0123291015625, 5318.82666015625]
alpha/beta optimization time: 0.5863499641418457
This batch time : update_bounds func: 3.4586	 prepare: 0.4903	 bound: 0.5870	 transfer: 0.0204	 finalize: 2.3539
Accumulated time: update_bounds func: 78.3810	 prepare: 21.1249	 bound: 30.8741	 transfer: 0.0204	 finalize: 23.4794
batch bounding time:  3.461268424987793
Current worst splitting domains [lb, ub] (depth):
[-1.61154,   inf] (65), [-1.61033,   inf] (49), [-1.61026,   inf] (81), [-1.60912,   inf] (67), [-1.60912,   inf] (63), [-1.60882,   inf] (61), [-1.60874,   inf] (49), [-1.60761,   inf] (71), [-1.60609,   inf] (73), [-1.60562,   inf] (75), [-1.60496,   inf] (51), [-1.60454,   inf] (55), [-1.60454,   inf] (53), [-1.60453,   inf] (43), [-1.60452,   inf] (57), [-1.60452,   inf] (55), [-1.60451,   inf] (53), [-1.60450,   inf] (45), [-1.60448,   inf] (49), [-1.60448,   inf] (57), 
length of domains: 44849
Total time: 4.3380	 pickout: 0.3134	 decision: 0.2790	 get_bound: 3.4652	 add_domain: 0.2804
Current lb:-1.6115361452102661
90048 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 124.11805534362793

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 46] [7, 73] [3, 39] [0, 39] [5, 1] [0, 75] [6, 67] [5, 53] [1, 90] [6, 30] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2715.986572265625 with beta sum per layer: [496.95135498046875, 359.6720886230469, 138.36004638671875, 44.47794723510742, 200.29531860351562, 246.093994140625, 1244.656005859375, 5547.20947265625]
alpha/beta optimization time: 0.5826051235198975
This batch time : update_bounds func: 1.4550	 prepare: 0.4861	 bound: 0.5833	 transfer: 0.0198	 finalize: 0.3586
Accumulated time: update_bounds func: 79.8360	 prepare: 21.6109	 bound: 31.4574	 transfer: 0.0198	 finalize: 23.8380
batch bounding time:  1.4575364589691162
Current worst splitting domains [lb, ub] (depth):
[-1.60388,   inf] (71), [-1.60155,   inf] (55), [-1.60070,   inf] (73), [-1.60057,   inf] (49), [-1.60053,   inf] (71), [-1.59955,   inf] (77), [-1.59938,   inf] (63), [-1.59936,   inf] (63), [-1.59855,   inf] (59), [-1.59801,   inf] (83), [-1.59769,   inf] (43), [-1.59767,   inf] (57), [-1.59766,   inf] (41), [-1.59766,   inf] (47), [-1.59765,   inf] (69), [-1.59764,   inf] (47), [-1.59763,   inf] (37), [-1.59762,   inf] (77), [-1.59762,   inf] (41), [-1.59761,   inf] (41), 
length of domains: 45873
Total time: 2.3397	 pickout: 0.3135	 decision: 0.2805	 get_bound: 1.4615	 add_domain: 0.2842
Current lb:-1.6038751602172852
92096 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 126.51812934875488

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 53] [0, 16] [1, 90] [0, 87] [2, 34] [6, 0] [1, 46] [0, 39] [6, 51] [0, 45] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2699.22998046875 with beta sum per layer: [541.5987548828125, 380.42681884765625, 170.71502685546875, 41.726356506347656, 205.6448974609375, 187.46258544921875, 1296.896484375, 5447.1376953125]
alpha/beta optimization time: 0.5510971546173096
This batch time : update_bounds func: 1.4348	 prepare: 0.4894	 bound: 0.5517	 transfer: 0.0197	 finalize: 0.3671
Accumulated time: update_bounds func: 81.2708	 prepare: 22.1003	 bound: 32.0091	 transfer: 0.0197	 finalize: 24.2050
batch bounding time:  1.4377977848052979
Current worst splitting domains [lb, ub] (depth):
[-1.59765,   inf] (71), [-1.59735,   inf] (75), [-1.59343,   inf] (53), [-1.59247,   inf] (61), [-1.59244,   inf] (57), [-1.59194,   inf] (63), [-1.59164,   inf] (73), [-1.59142,   inf] (75), [-1.59136,   inf] (59), [-1.59133,   inf] (75), [-1.59068,   inf] (55), [-1.59058,   inf] (53), [-1.59058,   inf] (43), [-1.59057,   inf] (47), [-1.59057,   inf] (57), [-1.59057,   inf] (71), [-1.59056,   inf] (43), [-1.59056,   inf] (61), [-1.59056,   inf] (53), [-1.59054,   inf] (69), 
length of domains: 46897
Total time: 2.3197	 pickout: 0.3131	 decision: 0.2782	 get_bound: 1.4421	 add_domain: 0.2863
Current lb:-1.5976502895355225
94144 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 128.89181399345398

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 10] [1, 90] [7, 30] [0, 23] [0, 16] [7, 70] [4, 40] [2, 34] [0, 75] [1, 90] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2678.99072265625 with beta sum per layer: [532.0233154296875, 368.3231201171875, 165.18563842773438, 60.978084564208984, 181.358642578125, 208.9951934814453, 1159.652587890625, 5384.9580078125]
alpha/beta optimization time: 0.5906553268432617
This batch time : update_bounds func: 1.5239	 prepare: 0.5304	 bound: 0.5914	 transfer: 0.0195	 finalize: 0.3751
Accumulated time: update_bounds func: 82.7946	 prepare: 22.6307	 bound: 32.6005	 transfer: 0.0195	 finalize: 24.5802
batch bounding time:  1.5271296501159668
Current worst splitting domains [lb, ub] (depth):
[-1.58731,   inf] (65), [-1.58701,   inf] (51), [-1.58634,   inf] (51), [-1.58568,   inf] (59), [-1.58472,   inf] (53), [-1.58383,   inf] (49), [-1.58383,   inf] (43), [-1.58382,   inf] (49), [-1.58382,   inf] (37), [-1.58381,   inf] (37), [-1.58380,   inf] (47), [-1.58379,   inf] (43), [-1.58379,   inf] (29), [-1.58379,   inf] (75), [-1.58378,   inf] (37), [-1.58378,   inf] (49), [-1.58378,   inf] (45), [-1.58378,   inf] (45), [-1.58377,   inf] (47), [-1.58377,   inf] (61), 
length of domains: 47920
Total time: 2.4331	 pickout: 0.3318	 decision: 0.2872	 get_bound: 1.5322	 add_domain: 0.2819
Current lb:-1.5873146057128906
96192 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 131.38242030143738

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 41] [1, 46] [2, 30] [1, 46] [1, 46] [6, 23] [7, 84] [7, 66] [6, 23] [6, 23] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2662.981201171875 with beta sum per layer: [513.4173583984375, 373.233154296875, 194.25299072265625, 36.95536422729492, 224.5328369140625, 223.49786376953125, 1358.88720703125, 5493.013671875]
alpha/beta optimization time: 0.5573182106018066
This batch time : update_bounds func: 1.4317	 prepare: 0.4863	 bound: 0.5580	 transfer: 0.0189	 finalize: 0.3611
Accumulated time: update_bounds func: 84.2263	 prepare: 23.1170	 bound: 33.1585	 transfer: 0.0189	 finalize: 24.9413
batch bounding time:  1.4344696998596191
Current worst splitting domains [lb, ub] (depth):
[-1.58337,   inf] (51), [-1.58324,   inf] (67), [-1.58219,   inf] (51), [-1.58129,   inf] (57), [-1.58029,   inf] (57), [-1.57936,   inf] (51), [-1.57852,   inf] (49), [-1.57766,   inf] (61), [-1.57764,   inf] (53), [-1.57702,   inf] (77), [-1.57680,   inf] (47), [-1.57680,   inf] (43), [-1.57680,   inf] (55), [-1.57679,   inf] (69), [-1.57679,   inf] (65), [-1.57678,   inf] (57), [-1.57676,   inf] (45), [-1.57676,   inf] (47), [-1.57676,   inf] (57), [-1.57676,   inf] (45), 
length of domains: 48944
Total time: 4.5435	 pickout: 0.3206	 decision: 2.5032	 get_bound: 1.4386	 add_domain: 0.2810
Current lb:-1.5833709239959717
98240 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 135.98506903648376

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 87] [0, 23] [1, 46] [7, 96] [1, 46] [2, 30] [7, 73] [1, 64] [7, 30] [4, 97] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2645.707275390625 with beta sum per layer: [547.5484619140625, 382.460205078125, 182.42572021484375, 53.77835464477539, 221.22628784179688, 272.59454345703125, 1304.023681640625, 5586.03857421875]
alpha/beta optimization time: 0.5619385242462158
This batch time : update_bounds func: 1.4372	 prepare: 0.4893	 bound: 0.5626	 transfer: 0.0189	 finalize: 0.3590
Accumulated time: update_bounds func: 85.6635	 prepare: 23.6063	 bound: 33.7211	 transfer: 0.0189	 finalize: 25.3002
batch bounding time:  1.4398057460784912
Current worst splitting domains [lb, ub] (depth):
[-1.57651,   inf] (63), [-1.57493,   inf] (55), [-1.57492,   inf] (73), [-1.57406,   inf] (79), [-1.57401,   inf] (77), [-1.57371,   inf] (77), [-1.57319,   inf] (61), [-1.57227,   inf] (73), [-1.57199,   inf] (73), [-1.57043,   inf] (61), [-1.57043,   inf] (53), [-1.57043,   inf] (59), [-1.57041,   inf] (49), [-1.57041,   inf] (43), [-1.57040,   inf] (37), [-1.57040,   inf] (49), [-1.57040,   inf] (49), [-1.57038,   inf] (61), [-1.57038,   inf] (49), [-1.57037,   inf] (53), 
length of domains: 49968
Total time: 2.3325	 pickout: 0.3240	 decision: 0.2860	 get_bound: 1.4438	 add_domain: 0.2787
Current lb:-1.576514482498169
100288 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 138.36959552764893

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 39] [6, 58] [3, 71] [3, 71] [1, 90] [1, 90] [1, 46] [1, 90] [3, 71] [6, 30] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2637.406982421875 with beta sum per layer: [516.0963134765625, 442.1858215332031, 145.09747314453125, 56.99960708618164, 216.5858154296875, 224.98870849609375, 1204.8798828125, 5370.11962890625]
alpha/beta optimization time: 0.5579202175140381
This batch time : update_bounds func: 1.4473	 prepare: 0.5021	 bound: 0.5586	 transfer: 0.0191	 finalize: 0.3601
Accumulated time: update_bounds func: 87.1108	 prepare: 24.1084	 bound: 34.2797	 transfer: 0.0191	 finalize: 25.6604
batch bounding time:  1.449903964996338
Current worst splitting domains [lb, ub] (depth):
[-1.56935,   inf] (63), [-1.56899,   inf] (53), [-1.56634,   inf] (65), [-1.56602,   inf] (67), [-1.56367,   inf] (73), [-1.56366,   inf] (49), [-1.56364,   inf] (45), [-1.56364,   inf] (63), [-1.56364,   inf] (43), [-1.56363,   inf] (53), [-1.56363,   inf] (59), [-1.56363,   inf] (55), [-1.56362,   inf] (59), [-1.56362,   inf] (31), [-1.56361,   inf] (75), [-1.56360,   inf] (55), [-1.56359,   inf] (43), [-1.56358,   inf] (59), [-1.56358,   inf] (43), [-1.56357,   inf] (49), 
length of domains: 50991
Total time: 2.3445	 pickout: 0.3224	 decision: 0.2850	 get_bound: 1.4539	 add_domain: 0.2831
Current lb:-1.569350242614746
102336 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 140.76828122138977

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 23] [0, 23] [0, 87] [2, 61] [0, 54] [2, 30] [1, 41] [6, 30] [0, 39] [1, 64] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2615.83642578125 with beta sum per layer: [601.61865234375, 432.00048828125, 148.64443969726562, 42.368988037109375, 180.35440063476562, 225.1084442138672, 1223.3780517578125, 5575.39697265625]
alpha/beta optimization time: 0.557410717010498
This batch time : update_bounds func: 1.4393	 prepare: 0.4926	 bound: 0.5581	 transfer: 0.0190	 finalize: 0.3624
Accumulated time: update_bounds func: 88.5501	 prepare: 24.6010	 bound: 34.8377	 transfer: 0.0190	 finalize: 26.0227
batch bounding time:  1.4418416023254395
Current worst splitting domains [lb, ub] (depth):
[-1.56602,   inf] (69), [-1.56295,   inf] (59), [-1.56042,   inf] (61), [-1.55958,   inf] (79), [-1.55891,   inf] (67), [-1.55804,   inf] (65), [-1.55733,   inf] (49), [-1.55732,   inf] (59), [-1.55732,   inf] (77), [-1.55731,   inf] (49), [-1.55731,   inf] (39), [-1.55730,   inf] (37), [-1.55729,   inf] (39), [-1.55729,   inf] (75), [-1.55728,   inf] (51), [-1.55728,   inf] (51), [-1.55726,   inf] (65), [-1.55725,   inf] (67), [-1.55725,   inf] (45), [-1.55725,   inf] (45), 
length of domains: 52015
Total time: 2.3403	 pickout: 0.3305	 decision: 0.2821	 get_bound: 1.4457	 add_domain: 0.2819
Current lb:-1.5660169124603271
104384 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 143.1638159751892

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 51] [0, 23] [0, 0] [3, 39] [0, 87] [1, 46] [2, 39] [2, 39] [5, 11] [6, 30] 
regular batch size: 2*1024, diving batch size 1*0
best_l after optimization: 2607.16943359375 with beta sum per layer: [553.1347045898438, 334.4443054199219, 168.77098083496094, 60.099761962890625, 202.1607666015625, 194.48825073242188, 1364.3638916015625, 5605.21142578125]
alpha/beta optimization time: 0.5529801845550537
This batch time : update_bounds func: 1.4330	 prepare: 0.4936	 bound: 0.5536	 transfer: 0.0189	 finalize: 0.3595
Accumulated time: update_bounds func: 89.9832	 prepare: 25.0945	 bound: 35.3913	 transfer: 0.0189	 finalize: 26.3822
batch bounding time:  1.436044454574585
Current worst splitting domains [lb, ub] (depth):
[-1.55732,   inf] (61), [-1.55504,   inf] (59), [-1.55377,   inf] (79), [-1.55322,   inf] (75), [-1.55321,   inf] (55), [-1.55114,   inf] (47), [-1.55112,   inf] (45), [-1.55111,   inf] (41), [-1.55111,   inf] (49), [-1.55110,   inf] (67), [-1.55109,   inf] (43), [-1.55109,   inf] (49), [-1.55108,   inf] (61), [-1.55107,   inf] (43), [-1.55107,   inf] (47), [-1.55107,   inf] (39), [-1.55107,   inf] (81), [-1.55106,   inf] (61), [-1.55104,   inf] (65), [-1.55102,   inf] (59), 
length of domains: 53038
Total time: 4.7510	 pickout: 0.3440	 decision: 2.6845	 get_bound: 1.4404	 add_domain: 0.2820
Current lb:-1.5573222637176514
106432 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Time out!!!!!!!!
Image 759 label 2 verification end, final lower bound -1.5573222637176514, upper bound inf, time: 150.1695454120636
759 -1.5573222637176514
Result: image 759 verification failure (with branch and bound).
Wall time: 904.489207983017

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 0): []
verification failure idx (total 1): [759]
final verified acc: 0.0%[1]
verifier is called on 1 examples.
total verified: 0
mean time [cnt:1] (excluding attack success): 904.3739986419678
