Building native CUDA modules...
/home/zhouxingshi/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
model:
  path: mnist_9_100_nat.pth
  name: mnist_9_100
data:
  start: 553
  end: 554
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1024
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 1080
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  use_auto_attack: false
  use_diversed_pgd: false
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 23:21:51 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.1223)
Note runnerup label is empty here!
############################
epsilon after preprocessing: tensor([[[[0.0260]]]]), data_max = tensor([[[[1.]]]]), data_min = tensor([[[[0.]]]])
Task length: 1
saving results to Verified_ret_[mnist_9_100]_start=553_end=554_iter=20_b=1024_timeout=1080_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 img ID: 553 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
predicted label 8, correct label 8, image norm 125.2235336303711, logits tensor([-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
         7.4579, -1.0830], device='cuda:0', grad_fn=<SelectBackward>)
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-147.4231, -168.2039, -182.1790, -186.2389, -212.7903, -158.7987,
         -177.6175, -221.1094, -221.1460]], device='cuda:0') None
best_l after optimization: 744.8883666992188 with beta sum per layer: []
alpha/beta optimization time: 15.30739688873291
initial alpha-CROWN bounds: tensor([[-60.0216, -72.3604, -87.3416, -85.4018, -95.5343, -72.7297, -80.7978,
         -96.6740, -94.0273]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-96.6740, device='cuda:0', grad_fn=<MinBackward1>)
##### PGD attack: True label: 8, Tested against: ['all'] ######
pgd prediction: tensor([-0.0865, -2.0638, -0.6109,  0.0789, -3.1355,  4.1166,  1.3214, -2.9461,
         6.5034, -0.5493], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([6.5899, 8.5672, 7.1143, 6.4245, 9.6388, 2.3868, 5.1820, 9.4495,    inf,
        7.0527], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Sorted order for labels to verify: [5, 6, 3, 0, 9, 2, 1, 7, 4, 8]
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2023-03-23
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 851.103172492981]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_28', 'lay4_54', 'lay4_93', 'lay4_94', 'lay4_27', 'lay4_90', 'lay4_57', 'lay4_72', 'lay4_48', 'lay4_24', 'lay4_1', 'lay4_4', 'lay4_50', 'lay4_41', 'lay4_39', 'lay4_36', 'lay4_75', 'lay4_92', 'lay4_71', 'lay4_38', 'lay4_19', 'lay4_18', 'lay4_35', 'lay4_99', 'lay4_0', 'lay4_34', 'lay4_40', 'lay4_25', 'lay4_68', 'lay4_60', 'lay4_42', 'lay4_76', 'lay4_16', 'lay4_98', 'lay4_64', 'lay4_13', 'lay4_15', 'lay4_96', 'lay4_2', 'lay4_26', 'lay4_32', 'lay4_91', 'lay4_6', 'lay4_45'] filter: 1.0
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:579: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
Solving MIP for lay4_50, [-1.6403908729553223,0.1093190461397171]=>[-1.6403908729553223,-1e-05] (-1,-1; 15,-1), time: 0.1952s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_39, [-1.8675518035888672,0.24519115686416626]=>[-1.8675518035888672,-1e-05] (-1,-1; 15,-1), time: 0.3163s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_27, [-1.4022328853607178,0.21355123817920685]=>[-1.4022328853607178,-1e-05] (-1,-1; 15,-1), time: 0.3401s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_71, [-1.38820219039917,0.14572453498840332]=>[-1.38820219039917,-1e-05] (-1,-1; 15,-1), time: 0.2490s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_92, [-0.18546411395072937,1.3731383085250854]=>[1e-05,1.3731383085250854] (15,-1; -1,-1), time: 0.4195s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_38, [-1.2986345291137695,0.023257851600646973]=>[-1.2986345291137695,-1e-05] (-1,-1; 15,-1), time: 0.1826s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_4, [-1.1548452377319336,0.203220397233963]=>[-0.9132247384268203,0.013763343824719054] (2,-1; 2,-1), time: 0.9762s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_94, [-0.7098047733306885,1.6732800006866455]=>[-0.33889293152768585,1.4362988708789761] (2,-1; 2,-1), time: 1.0949s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_48, [-1.192287564277649,0.3560238182544708]=>[-0.9415545462049522,0.15409208652049297] (2,-1; 2,-1), time: 1.2033s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_99, [-1.1792762279510498,0.01837841421365738]=>[-1.1792762279510498,-1e-05] (-1,-1; 15,-1), time: 0.2001s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_36, [-1.123083233833313,1.0106229782104492]=>[-0.8727334361450156,0.5694982571779732] (2,-1; 2,-1), time: 1.4824s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_57, [-0.4871382415294647,1.0114985704421997]=>[-0.16068423554242592,0.8771588876324872] (2,-1; 2,-1), time: 1.5135s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_93, [-0.5328854322433472,1.869521141052246]=>[1e-05,1.869521141052246] (15,-1; -1,-1), time: 1.5285s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_75, [-0.8867471218109131,0.27298569679260254]=>[-0.7274747112874237,0.12023973368406024] (2,-1; 2,-1), time: 1.3546s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_1, [-0.9012502431869507,0.2494976818561554]=>[-0.678101241226975,0.04944129079486165] (2,-1; 2,-1), time: 1.6676s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_28, [-1.4632964134216309,0.43072816729545593]=>[-1.1303935480977805,0.16868853103555123] (2,-1; 2,-1), time: 1.7368s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_42, [-0.14269497990608215,1.5677001476287842]=>[1e-05,1.5677001476287842] (15,-1; -1,-1), time: 0.1932s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_19, [-0.32762381434440613,1.3229691982269287]=>[1e-05,1.3229691982269287] (15,-1; -1,-1), time: 1.2310s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_25, [-0.3027344048023224,1.3626893758773804]=>[1e-05,1.3626893758773804] (15,-1; -1,-1), time: 0.4688s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_90, [-2.4710538387298584,0.2353636920452118]=>[-1.7736925587006251,0.013476067842454167] (2,-1; 2,-1), time: 2.0494s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_24, [-0.2791004776954651,1.298137903213501]=>[-0.0022456593538364824,1.030772905940835] (2,-1; 2,-1), time: 2.0540s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_64, [-0.06516164541244507,1.8840001821517944]=>[1e-05,1.8840001821517944] (15,-1; -1,-1), time: 0.1789s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_98, [-1.6957439184188843,0.02319849468767643]=>[-1.6957439184188843,-1e-05] (-1,-1; 15,-1), time: 0.1996s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_41, [-1.2109382152557373,0.4671928286552429]=>[-0.9871559450226914,0.09197810716875834] (2,-1; 2,-1), time: 2.2134s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_0, [-1.091691493988037,1.1598665714263916]=>[-0.792499616884272,0.8780268825704507] (2,-1; 2,-1), time: 1.0801s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_72, [-1.4346274137496948,0.6795051693916321]=>[-1.149958502629867,0.2528232735259592] (2,-1; 2,-1), time: 2.3425s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_26, [-0.08601903915405273,1.3220866918563843]=>[1e-05,1.3220866918563843] (15,-1; -1,-1), time: 0.2558s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_32, [-0.16484349966049194,1.6705554723739624]=>[1e-05,1.6705554723739624] (15,-1; -1,-1), time: 0.2238s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_54, [-0.8314392566680908,0.8294622898101807]=>[-0.379692878473459,0.7057084753541958] (2,-1; 2,-1), time: 2.5450s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_6, [-1.6192914247512817,0.0348179005086422]=>[-1.6192914247512817,-1e-05] (-1,-1; 15,-1), time: 0.1914s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_18, [-0.617615818977356,0.5720080733299255]=>[-0.2910878387003872,0.46674139803192516] (2,-1; 2,-1), time: 2.1632s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_76, [-0.35513123869895935,1.1473861932754517]=>[-0.09112986327605678,0.9393916906068341] (2,-1; 2,-1), time: 1.2673s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_68, [-0.5221256613731384,1.2756410837173462]=>[-0.12932308530462297,1.07701254797577] (2,-1; 2,-1), time: 1.5531s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_34, [-0.670137345790863,0.9415360689163208]=>[-0.3706762682108822,0.7629615975157509] (2,-1; 2,-1), time: 1.8299s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_40, [-0.3713456690311432,1.2014904022216797]=>[-0.014089177224602864,1.0083051591785999] (2,-1; 2,-1), time: 1.7851s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_2, [-0.5327097177505493,1.17824125289917]=>[-0.3135808135708237,0.9279311168467665] (2,-1; 2,-1), time: 1.1823s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_15, [-1.0668096542358398,0.680613100528717]=>[-0.7445548771515352,0.4202188710966116] (2,-1; 2,-1), time: 1.3505s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_91, [-0.4828069806098938,1.1078814268112183]=>[-0.28223358177254076,0.8774155823052112] (2,-1; 2,-1), time: 1.0645s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_60, [-1.0290472507476807,0.3707287311553955]=>[-0.7058310739904649,0.23399826161025433] (2,-1; 2,-1), time: 1.9092s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_35, [-1.1774122714996338,0.5023934841156006]=>[-0.8049762833190671,0.25685705301100414] (2,-1; 2,-1), time: 2.6093s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_45, [-1.3280657529830933,0.8128951191902161]=>[-1.079462520208821,0.40099319782794807] (2,-1; 2,-1), time: 1.0903s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_13, [-0.5663093328475952,1.67934250831604]=>[-0.1217622323240669,1.3609861419842875] (2,-1; 2,-1), time: 1.8281s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_16, [-1.3063684701919556,0.7136249542236328]=>[-0.8121331740195084,0.49231374682658596] (2,-1; 2,-1), time: 2.0751s, #vars: 1037, #constrs: 278, improved: True
Solving MIP for lay4_96, [-0.4884771704673767,1.0900901556015015]=>[-0.11094132797965969,0.8865361168461764] (2,-1; 2,-1), time: 2.2915s, #vars: 1037, #constrs: 278, improved: True
MIP improved 44 nodes out of 44 unstable nodes, lb improved 10.83908462524414, ub improved 7.491147518157959, time 5.1619
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_74', 'lay6_28', 'lay6_61', 'lay6_39', 'lay6_73', 'lay6_3', 'lay6_45', 'lay6_75', 'lay6_71', 'lay6_88', 'lay6_53', 'lay6_66', 'lay6_51', 'lay6_70', 'lay6_46', 'lay6_50', 'lay6_65', 'lay6_11', 'lay6_92', 'lay6_90', 'lay6_82', 'lay6_79', 'lay6_43', 'lay6_89', 'lay6_80', 'lay6_36', 'lay6_52', 'lay6_7', 'lay6_72', 'lay6_16', 'lay6_94', 'lay6_64', 'lay6_31', 'lay6_98', 'lay6_27', 'lay6_40', 'lay6_15', 'lay6_21', 'lay6_68', 'lay6_47', 'lay6_41', 'lay6_84', 'lay6_37', 'lay6_63', 'lay6_67', 'lay6_35', 'lay6_4', 'lay6_60', 'lay6_81', 'lay6_58', 'lay6_77', 'lay6_18', 'lay6_97', 'lay6_38', 'lay6_55', 'lay6_33', 'lay6_62', 'lay6_23', 'lay6_57', 'lay6_86', 'lay6_49', 'lay6_14', 'lay6_12', 'lay6_24', 'lay6_0', 'lay6_9', 'lay6_17'] filter: 1.0
Solving MIP for lay6_50, [-1.7456393241882324,0.10026884078979492]=>[-1.7456393241882324,-1e-05] (-1,-1; 15,-1), time: 0.1456s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_66, [-1.4486441612243652,0.21345239877700806]=>[-1.4486441612243652,-1e-05] (-1,-1; 15,-1), time: 0.2836s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_45, [-1.510605812072754,0.1907726228237152]=>[-1.510605812072754,-1e-05] (-1,-1; 15,-1), time: 0.3213s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_11, [-1.4560296535491943,0.07225292921066284]=>[-1.4560296535491943,-1e-05] (-1,-1; 15,-1), time: 0.1259s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_39, [-2.4151127338409424,0.6586079597473145]=>[-2.4151127338409424,-1e-05] (-1,-1; 15,-1), time: 0.5963s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_82, [-1.4164894819259644,0.19363933801651]=>[-1.4164894819259644,-1e-05] (-1,-1; 15,-1), time: 0.2336s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_88, [-1.7680847644805908,0.41731396317481995]=>[-1.7680847644805908,-1e-05] (-1,-1; 15,-1), time: 0.9881s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_53, [-1.2072818279266357,0.3775236904621124]=>[-1.2072818279266357,-1e-05] (-1,-1; 15,-1), time: 1.9503s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_79, [-0.9860214591026306,0.22797910869121552]=>[-0.9860214591026306,-1e-05] (-1,-1; 15,-1), time: 1.7091s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_28, [-1.6884346008300781,0.5218364596366882]=>[-1.6884346008300781,-1e-05] (-1,-1; 15,-1), time: 2.5665s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_80, [-1.3755676746368408,0.3638709783554077]=>[-1.3755676746368408,-1e-05] (-1,-1; 15,-1), time: 0.3069s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_52, [-1.2624690532684326,0.1255583018064499]=>[-1.2624690532684326,-1e-05] (-1,-1; 15,-1), time: 0.1286s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_74, [-1.2644749879837036,0.5562217235565186]=>[-1.2644749879837036,-1e-05] (-1,-1; 15,-1), time: 3.6048s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_7, [-1.6132463216781616,0.374786913394928]=>[-1.6132463216781616,-1e-05] (-1,-1; 15,-1), time: 0.6407s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_16, [-1.9405839443206787,0.20829367637634277]=>[-1.9405839443206787,-1e-05] (-1,-1; 15,-1), time: 0.1550s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_3, [-1.1423561573028564,1.3226420879364014]=>[-0.6129654823235615,0.7259339643043514] (2,-1; 2,-1), time: 4.2089s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_64, [-0.19315668940544128,1.7078913450241089]=>[1e-05,1.7078913450241089] (15,-1; -1,-1), time: 0.1465s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_46, [-0.38982269167900085,1.1547974348068237]=>[-0.006474042189477719,0.751303315359217] (2,-1; 2,-1), time: 4.5649s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_31, [-0.21010887622833252,2.2859227657318115]=>[1e-05,2.2859227657318115] (15,-1; -1,-1), time: 0.3265s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_27, [-1.2127994298934937,0.04098588228225708]=>[-1.2127994298934937,-1e-05] (-1,-1; 15,-1), time: 0.1525s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_92, [-1.2033032178878784,0.91323322057724]=>[-0.7058512909111448,0.32387372325302005] (2,-1; 2,-1), time: 4.6147s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_90, [-1.8863130807876587,0.5179779529571533]=>[-1.1086485521053913,0.14796833145495142] (2,-1; 2,-1), time: 4.5788s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_75, [-1.1178967952728271,0.7921107411384583]=>[-0.6804402704805333,0.06162980931885215] (2,-1; 2,-1), time: 5.0111s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_21, [-0.07402581721544266,2.333045244216919]=>[1e-05,2.333045244216919] (15,-1; -1,-1), time: 0.1269s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_71, [-1.0379664897918701,0.5819011926651001]=>[-0.513443995225027,0.20850667807796408] (2,-1; 2,-1), time: 5.1521s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_68, [-1.600063681602478,0.0072348713874816895]=>[-1.600063681602478,-1e-05] (-1,-1; 15,-1), time: 0.1392s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_70, [-1.2394602298736572,0.7111034989356995]=>[-0.7386977246419697,0.2258763635175957] (2,-1; 2,-1), time: 5.6284s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_73, [-0.6295838356018066,1.0636770725250244]=>[-0.2241934281018369,0.455957095496313] (2,-1; 2,-1), time: 6.1792s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_51, [-0.9032881855964661,1.525108814239502]=>[-0.1851346343196646,0.9406128214052937] (2,-1; 2,-1), time: 7.0726s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_89, [-1.0318114757537842,1.8970153331756592]=>[-0.047111517944719794,1.346483192321691] (2,-1; 2,-1), time: 6.1817s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_61, [-0.8027287721633911,0.6444492936134338]=>[-0.28124802470079263,0.22982539124965198] (2,-1; 2,-1), time: 8.2009s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_4, [-0.9402437210083008,0.09537485241889954]=>[-0.9402437210083008,-1e-05] (-1,-1; 15,-1), time: 0.3035s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_98, [-0.8833907246589661,0.6814481019973755]=>[-0.5226551086361004,0.23194991146736085] (2,-1; 2,-1), time: 4.0581s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_43, [-1.382608413696289,0.3065747618675232]=>[-0.7313232930601797,0.060252042428236625] (2,-1; 2,-1), time: 7.6875s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_58, [-0.13851872086524963,1.110095500946045]=>[1e-05,1.110095500946045] (15,-1; -1,-1), time: 0.1320s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_77, [-1.2777090072631836,0.19188155233860016]=>[-1.2777090072631836,-1e-05] (-1,-1; 15,-1), time: 0.2522s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_94, [-0.8012704849243164,1.3551503419876099]=>[-0.14418511364864747,0.8189612827286096] (2,-1; 2,-1), time: 5.4629s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_97, [-1.62979257106781,0.030710965394973755]=>[-1.62979257106781,-1e-05] (-1,-1; 15,-1), time: 0.1452s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_38, [-0.1322765350341797,1.8057562112808228]=>[1e-05,1.8057562112808228] (15,-1; -1,-1), time: 0.1308s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_84, [-1.2369307279586792,1.08756422996521]=>[-0.5827054817706023,0.661966975718853] (2,-1; 2,-1), time: 4.4980s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_65, [-1.3634727001190186,0.3393465280532837]=>[-0.7518545068127699,0.08115249525760045] (2,-1; 2,-1), time: 9.6073s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_41, [-0.8874521851539612,0.8942747116088867]=>[-0.34678865614902565,0.4888342750086676] (2,-1; 2,-1), time: 4.7180s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_62, [-1.5728788375854492,0.022368190810084343]=>[-1.5728788375854492,-1e-05] (-1,-1; 15,-1), time: 0.1339s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_40, [-0.52230304479599,1.0519850254058838]=>[-0.03103839698568784,0.762091532369187] (2,-1; 2,-1), time: 5.1250s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_47, [-0.7520097494125366,1.1538944244384766]=>[-0.1913823480107262,0.6936031985798525] (2,-1; 2,-1), time: 4.9610s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_86, [-1.496075987815857,0.002367854118347168]=>[-1.496075987815857,-1e-05] (-1,-1; 15,-1), time: 0.1458s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_37, [-0.6250829100608826,2.099297523498535]=>[-0.06819982068254789,1.3312810160340076] (2,-1; 2,-1), time: 4.5226s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_12, [-0.4485437273979187,2.0214343070983887]=>[1e-05,2.0214343070983887] (15,-1; -1,-1), time: 0.3692s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_36, [-0.7553470134735107,0.581567645072937]=>[-0.46266176789136526,0.12212571387200799] (2,-1; 2,-1), time: 8.0298s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_24, [-0.14338701963424683,2.7786765098571777]=>[1e-05,2.7786765098571777] (15,-1; -1,-1), time: 0.1481s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_72, [-0.819351077079773,0.3388862907886505]=>[-0.41551920142079224,0.01956047864744498] (2,-1; 2,-1), time: 7.5608s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_9, [-0.367746502161026,1.489326000213623]=>[1e-05,1.489326000213623] (15,-1; -1,-1), time: 0.5979s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_17, [-1.9522664546966553,0.06429445743560791]=>[-1.9522664546966553,-1e-05] (-1,-1; 15,-1), time: 0.1383s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_63, [-0.6164650321006775,0.8310720920562744]=>[-0.16611265907013825,0.41197570497283104] (2,-1; 2,-1), time: 5.3455s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_23, [-1.6902217864990234,0.5574129819869995]=>[-1.6902217864990234,-1e-05] (-1,-1; 15,-1), time: 1.7686s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_67, [-0.33930888772010803,1.3553032875061035]=>[-0.06005085615348123,0.8253066266538059] (2,-1; 2,-1), time: 4.8096s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_14, [-0.43920421600341797,1.0876312255859375]=>[1e-05,1.0876312255859375] (15,-1; -1,-1), time: 1.9168s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_35, [-0.4219559133052826,1.2893623113632202]=>[-0.14141311020888325,0.8525679487130269] (2,-1; 2,-1), time: 4.1410s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_15, [-1.5395960807800293,0.6368931531906128]=>[-0.7430996716051528,0.1314980092154332] (2,-1; 2,-1), time: 8.0798s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_60, [-0.6514402031898499,1.7188760042190552]=>[-0.11848569676969412,0.9855912641035354] (2,-1; 2,-1), time: 4.9404s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_55, [-1.1675641536712646,0.7828035354614258]=>[-0.8027722887639521,0.18962908664716524] (2,-1; 2,-1), time: 4.2271s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_18, [-0.45048168301582336,1.0900039672851562]=>[-0.10244130924821533,0.6001681505770523] (2,-1; 2,-1), time: 4.8063s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_33, [-0.9314284324645996,0.5754343867301941]=>[-0.47957792434160645,0.1768311784561314] (2,-1; 2,-1), time: 4.3544s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_49, [-0.46569395065307617,1.6235692501068115]=>[-0.025838040059769488,1.0895913083909918] (2,-1; 2,-1), time: 4.1687s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_81, [-1.3188300132751465,0.41774362325668335]=>[-0.6370961311602393,0.17467367472356626] (2,-1; 2,-1), time: 5.9485s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_57, [-1.7001208066940308,0.796608030796051]=>[-1.2396434920020576,0.1664538977958339] (2,-1; 2,-1), time: 4.6966s, #vars: 1193, #constrs: 462, improved: True
Solving MIP for lay6_0, [-0.6131438612937927,1.5901844501495361]=>[-0.1739081101642909,0.7535731584787632] (2,-1; 2,-1), time: 7.4125s, #vars: 1193, #constrs: 462, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
best_l after optimization: 350.2488708496094 with beta sum per layer: []
alpha/beta optimization time: 16.326207637786865
alpha-CROWN with intermediate bounds by MIP: tensor([[-28.1925, -33.8120, -41.0930, -39.8206, -44.8637, -34.5489, -38.7271,
         -45.0380, -44.1532]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 67 nodes out of 67 unstable nodes, lb improved 19.73387336730957, ub improved 22.28949737548828, time 18.7547
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_67', 'lay8_97', 'lay8_81', 'lay8_5', 'lay8_39', 'lay8_82', 'lay8_55', 'lay8_59', 'lay8_95', 'lay8_12', 'lay8_3', 'lay8_83', 'lay8_21', 'lay8_31', 'lay8_98', 'lay8_99', 'lay8_13', 'lay8_54', 'lay8_76', 'lay8_27', 'lay8_29', 'lay8_47', 'lay8_78', 'lay8_18', 'lay8_25', 'lay8_72', 'lay8_36', 'lay8_24', 'lay8_62', 'lay8_2', 'lay8_75', 'lay8_73', 'lay8_23', 'lay8_85', 'lay8_15', 'lay8_92', 'lay8_58', 'lay8_71', 'lay8_37', 'lay8_30', 'lay8_9', 'lay8_56', 'lay8_19', 'lay8_20', 'lay8_32', 'lay8_68', 'lay8_28', 'lay8_34', 'lay8_84', 'lay8_35', 'lay8_53', 'lay8_14', 'lay8_46', 'lay8_48', 'lay8_74', 'lay8_6', 'lay8_11', 'lay8_26', 'lay8_40', 'lay8_69', 'lay8_52', 'lay8_43', 'lay8_70', 'lay8_77', 'lay8_10', 'lay8_41', 'lay8_1', 'lay8_79', 'lay8_8', 'lay8_16', 'lay8_45', 'lay8_90', 'lay8_0', 'lay8_49', 'lay8_38', 'lay8_64', 'lay8_57', 'lay8_88', 'lay8_4', 'lay8_22', 'lay8_96', 'lay8_91', 'lay8_80', 'lay8_44', 'lay8_87', 'lay8_66', 'lay8_63', 'lay8_94', 'lay8_51', 'lay8_86', 'lay8_50'] filter: 1.0
Solving MIP for lay8_82, [-1.692285418510437,0.3706023693084717]=>[-1.692285418510437,-1e-05] (-1,-1; 15,-1), time: 0.1719s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_31, [-1.7724366188049316,0.45714542269706726]=>[-1.7724366188049316,-1e-05] (-1,-1; 15,-1), time: 0.1768s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_83, [-1.8766380548477173,0.23598983883857727]=>[-1.8766380548477173,-1e-05] (-1,-1; 15,-1), time: 0.1818s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_81, [-1.7475742101669312,0.6336076259613037]=>[-1.7475742101669312,-1e-05] (-1,-1; 15,-1), time: 0.1992s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_99, [-1.7647498846054077,0.3520427942276001]=>[-1.7647498846054077,-1e-05] (-1,-1; 15,-1), time: 0.2033s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_29, [-2.475768804550171,0.24586409330368042]=>[-2.475768804550171,-1e-05] (-1,-1; 15,-1), time: 0.1768s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_27, [-2.284522294998169,0.22653895616531372]=>[-2.284522294998169,-1e-05] (-1,-1; 15,-1), time: 0.2033s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_76, [-1.4182932376861572,0.5791574120521545]=>[-1.4182932376861572,-1e-05] (-1,-1; 15,-1), time: 0.3932s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_59, [-2.190220832824707,0.8637528419494629]=>[-2.190220832824707,-1e-05] (-1,-1; 15,-1), time: 0.6137s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_78, [-0.5752049088478088,1.9455227851867676]=>[1e-05,1.9455227851867676] (15,-1; -1,-1), time: 0.2072s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_72, [-1.5748800039291382,0.5161451101303101]=>[-1.5748800039291382,-1e-05] (-1,-1; 15,-1), time: 0.2144s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_36, [-2.889674663543701,0.24820435047149658]=>[-2.889674663543701,-1e-05] (-1,-1; 15,-1), time: 0.2204s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_24, [-2.960524082183838,0.5521506071090698]=>[-2.960524082183838,-1e-05] (-1,-1; 15,-1), time: 0.2228s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_18, [-1.4080904722213745,0.5717055201530457]=>[-1.4080904722213745,-1e-05] (-1,-1; 15,-1), time: 3.7805s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_47, [-0.8029383420944214,1.2734060287475586]=>[1e-05,1.2734060287475586] (15,-1; -1,-1), time: 5.3303s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_75, [-2.440887928009033,0.32261380553245544]=>[-2.440887928009033,-1e-05] (-1,-1; 15,-1), time: 0.1999s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_73, [-1.9348692893981934,0.22147762775421143]=>[-1.9348692893981934,-1e-05] (-1,-1; 15,-1), time: 0.2057s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_54, [-1.806994080543518,0.9704931378364563]=>[-1.806994080543518,-1e-05] (-1,-1; 15,-1), time: 7.4450s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_2, [-0.7149648666381836,1.100022554397583]=>[1e-05,1.100022554397583] (15,-1; -1,-1), time: 3.8424s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_15, [-2.0680999755859375,0.14997756481170654]=>[-2.0680999755859375,-1e-05] (-1,-1; 15,-1), time: 0.1949s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_92, [-1.882670521736145,0.13411855697631836]=>[-1.882670521736145,-1e-05] (-1,-1; 15,-1), time: 0.2039s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_58, [-0.8256558179855347,2.9340038299560547]=>[1e-05,2.9340038299560547] (15,-1; -1,-1), time: 0.3232s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_21, [-1.4582648277282715,1.3967843055725098]=>[-0.8813996052759314,0.2567306674192741] (2,-1; 2,-1), time: 9.8896s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_37, [-1.9997830390930176,0.3771760165691376]=>[-1.9997830390930176,-1e-05] (-1,-1; 15,-1), time: 0.1813s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_23, [-1.3811726570129395,0.5020528435707092]=>[-1.3811726570129395,-1e-05] (-1,-1; 15,-1), time: 4.0699s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_30, [-1.8175759315490723,0.33099648356437683]=>[-1.8175759315490723,-1e-05] (-1,-1; 15,-1), time: 0.1700s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_9, [-2.2379796504974365,0.3343706727027893]=>[-2.2379796504974365,-1e-05] (-1,-1; 15,-1), time: 0.1728s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_25, [-1.430663824081421,0.6630768179893494]=>[-0.5719549681965549,0.04026487319175644] (2,-1; 2,-1), time: 12.3039s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_20, [-0.5935503244400024,1.9321765899658203]=>[1e-05,1.9321765899658203] (15,-1; -1,-1), time: 0.2007s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_32, [-0.8157793283462524,2.5126802921295166]=>[0.0011762234843670904,2.5126802921295166] (2,-1; -1,-1), time: 3.0231s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_67, [-2.032254219055176,1.7125369310379028]=>[-1.4212316934359872,0.2400282808368588] (2,-1; 9,-1), time: 17.2343s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_28, [-2.7000558376312256,0.08019673824310303]=>[-2.7000558376312256,-1e-05] (-1,-1; 15,-1), time: 0.1989s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_3, [-1.0009924173355103,0.7267199158668518]=>[-0.19656421300379842,0.268206816806242] (9,-1; 2,-1), time: 18.4230s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_84, [-2.064673900604248,0.0680781751871109]=>[-2.064673900604248,-1e-05] (-1,-1; 15,-1), time: 0.2032s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_35, [-0.3837401270866394,1.5673823356628418]=>[1e-05,1.5673823356628418] (15,-1; -1,-1), time: 0.1830s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_5, [-0.9630110263824463,0.8323360085487366]=>[-0.2682704249897586,0.22311007331016586] (9,-1; 2,-1), time: 18.8581s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_14, [-2.8567488193511963,0.09972956031560898]=>[-2.8567488193511963,-1e-05] (-1,-1; 15,-1), time: 0.1897s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_62, [-0.9963706135749817,1.0164355039596558]=>[-0.1153134441802296,0.361919289486246] (2,-1; 2,-1), time: 18.4027s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_13, [-0.7300798296928406,1.1560295820236206]=>[-0.16926993591214493,0.48678367232208447] (2,-1; 9,-1), time: 19.5637s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_55, [-1.1994550228118896,0.8599298596382141]=>[-0.41540352919820567,0.15938856629667122] (2,-1; 2,-1), time: 20.3584s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_95, [-0.8868865966796875,1.2484934329986572]=>[-0.28946432015983364,0.40526466884124357] (9,-1; 2,-1), time: 20.4330s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_39, [-1.1517435312271118,1.2630534172058105]=>[-0.16201900938348027,0.6397809343563552] (9,-1; 2,-1), time: 20.7345s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_6, [-1.7743486166000366,0.633840024471283]=>[-1.7743486166000366,-1e-05] (-1,-1; 15,-1), time: 0.3616s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_40, [-0.21567082405090332,2.0739328861236572]=>[1e-05,2.0739328861236572] (15,-1; -1,-1), time: 0.1983s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_97, [-1.0430601835250854,2.220076560974121]=>[-0.013991157970375841,1.1441127502234663] (2,-1; 2,-1), time: 22.8527s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_52, [-1.1100131273269653,1.7601251602172852]=>[1e-05,1.7601251602172852] (15,-1; -1,-1), time: 0.5381s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_12, [-1.7972068786621094,1.1761376857757568]=>[-1.051931934352382,0.001703477981930631] (2,-1; 9,-1), time: 23.4629s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_43, [-2.635364532470703,0.4975455105304718]=>[-2.635364532470703,-1e-05] (-1,-1; 15,-1), time: 0.1787s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_70, [-0.37524473667144775,1.3367466926574707]=>[1e-05,1.3367466926574707] (15,-1; -1,-1), time: 0.1738s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_10, [-2.1447367668151855,0.17966431379318237]=>[-2.1447367668151855,-1e-05] (-1,-1; 15,-1), time: 0.1624s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_41, [-2.0372393131256104,0.3553323745727539]=>[-2.0372393131256104,-1e-05] (-1,-1; 15,-1), time: 0.1747s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_1, [-1.4901529550552368,0.3914188742637634]=>[-1.4901529550552368,-1e-05] (-1,-1; 15,-1), time: 0.1751s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_53, [-0.6422345042228699,1.7694027423858643]=>[1e-05,1.7694027423858643] (15,-1; -1,-1), time: 5.7543s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_34, [-1.413183569908142,0.6261404156684875]=>[-1.413183569908142,-1e-05] (-1,-1; 15,-1), time: 7.3438s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_98, [-1.0124313831329346,0.9493811130523682]=>[-0.16128885781239202,0.3540341382705386] (2,-1; 9,-1), time: 26.0320s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_26, [-0.8313749432563782,1.2319339513778687]=>[1e-05,1.2319339513778687] (15,-1; -1,-1), time: 5.4292s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_90, [-0.14383983612060547,2.556213140487671]=>[1e-05,2.556213140487671] (15,-1; -1,-1), time: 0.1694s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_0, [-0.4580339193344116,2.521022319793701]=>[1e-05,2.521022319793701] (15,-1; -1,-1), time: 0.1706s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_49, [-0.5434979796409607,2.962773323059082]=>[1e-05,2.962773323059082] (15,-1; -1,-1), time: 0.1724s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_71, [-3.0242271423339844,1.1054774522781372]=>[-1.6258158988911466,0.07598773931667883] (9,-1; 2,-1), time: 19.2655s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_11, [-1.7931910753250122,1.403921365737915]=>[-0.8266326790439572,0.6012221693040576] (2,-1; 2,-1), time: 8.5138s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_57, [-0.30253028869628906,1.9554362297058105]=>[1e-05,1.9554362297058105] (15,-1; -1,-1), time: 0.1782s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_88, [-1.55385160446167,0.9029227495193481]=>[-1.55385160446167,-1e-05] (-1,-1; 15,-1), time: 0.5224s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_56, [-1.1134341955184937,1.5806472301483154]=>[-0.21083747217209442,0.6463053847286543] (2,-1; 9,-1), time: 21.4719s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_19, [-1.2146100997924805,1.338634729385376]=>[-0.42707327563414516,0.3426872443203749] (9,-1; 2,-1), time: 21.5930s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_68, [-0.8615012764930725,0.8704453110694885]=>[-0.14986839121696793,0.38905942656082265] (2,-1; 2,-1), time: 15.9005s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_96, [-1.7961134910583496,0.6619755625724792]=>[-1.7961134910583496,-1e-05] (-1,-1; 15,-1), time: 0.1871s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_91, [-0.07004570960998535,2.793976306915283]=>[1e-05,2.793976306915283] (15,-1; -1,-1), time: 0.1660s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_80, [-0.528361976146698,1.8531408309936523]=>[1e-05,1.8531408309936523] (15,-1; -1,-1), time: 0.1937s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_87, [-0.06109122931957245,3.1979384422302246]=>[1e-05,3.1979384422302246] (15,-1; -1,-1), time: 0.1817s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_4, [-1.4707705974578857,0.7212016582489014]=>[-1.4707705974578857,-1e-05] (-1,-1; 15,-1), time: 4.8257s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_85, [-1.2991238832473755,1.0621719360351562]=>[-0.37664283142009963,0.3130904712436672] (9,-1; 2,-1), time: 27.2744s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_94, [-2.2133703231811523,0.16513127088546753]=>[-2.2133703231811523,-1e-05] (-1,-1; 15,-1), time: 0.1761s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_51, [-1.1048089265823364,0.38369467854499817]=>[-1.1048089265823364,-1e-05] (-1,-1; 15,-1), time: 0.1766s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_86, [-1.7385964393615723,0.5381439328193665]=>[-1.7385964393615723,-1e-05] (-1,-1; 15,-1), time: 0.1718s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_16, [-1.2055538892745972,1.0670298337936401]=>[-0.39983870575029623,0.2557191434914611] (2,-1; 2,-1), time: 12.9397s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_48, [-1.4059962034225464,0.8374819159507751]=>[-0.39892911439327394,0.17901462141913285] (9,-1; 2,-1), time: 18.7964s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_79, [-1.8390754461288452,1.0960054397583008]=>[-0.7290023391088606,0.2983874395321384] (2,-1; 2,-1), time: 14.5937s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_8, [-1.3606404066085815,1.0007617473602295]=>[-0.6315566765513698,0.23688519448576167] (2,-1; 2,-1), time: 16.2475s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_77, [-1.9439473152160645,1.4324644804000854]=>[-0.5592491247875021,0.7074915196723897] (9,-1; 2,-1), time: 18.8939s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_22, [-1.6782212257385254,0.9604078531265259]=>[-0.8761055586080647,0.09446991321622174] (2,-1; 2,-1), time: 11.0941s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_69, [-0.8099983930587769,1.547681212425232]=>[-0.06189134954835668,0.7539724564851964] (2,-1; 9,-1), time: 21.9207s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_63, [-1.715535283088684,2.4270849227905273]=>[-0.8020766406931584,1.0090102121906328] (2,-1; 2,-1), time: 10.2842s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_45, [-1.7080960273742676,1.5061688423156738]=>[-1.04225458849291,0.1752171478908196] (2,-1; 9,-1), time: 18.7802s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_74, [-1.2279982566833496,0.7832879424095154]=>[-0.4357807078090622,0.13823618103419974] (2,-1; 2,-1), time: 26.2714s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_44, [-0.8542986512184143,1.782672643661499]=>[-0.3482203295752219,0.7095806979904256] (2,-1; 2,-1), time: 13.9175s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_64, [-1.6651667356491089,1.2417066097259521]=>[-0.8975637363341314,0.06519501753371473] (2,-1; 2,-1), time: 17.9355s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_46, [-1.4572334289550781,0.6587009429931641]=>[-0.6477902741867726,0.048927197131014406] (9,-1; 9,-1), time: 30.0125s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_38, [-1.030815839767456,1.4682210683822632]=>[-0.3652259323493603,0.3614185568896824] (2,-1; 9,-1), time: 24.3288s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_66, [-1.1520178318023682,0.5104044079780579]=>[-0.5078579002223241,0.019377246022308888] (9,-1; 2,-1), time: 20.5613s, #vars: 1361, #constrs: 664, improved: True
Solving MIP for lay8_50, [-0.8241724967956543,0.9750102758407593]=>[-0.07748969273311894,0.39727591195066003] (9,-1; 2,-1), time: 18.7390s, #vars: 1361, #constrs: 664, improved: True
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
best_l after optimization: 131.24163818359375 with beta sum per layer: []
alpha/beta optimization time: 17.409376621246338
alpha-CROWN with intermediate bounds by MIP: tensor([[-10.5757, -12.4807, -15.1652, -14.5635, -16.3853, -13.6241, -15.8263,
         -16.3000, -16.3211]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 91 nodes out of 91 unstable nodes, lb improved 38.7666015625, ub improved 44.979095458984375, time 54.9390
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_99', 'lay10_70', 'lay10_49', 'lay10_24', 'lay10_20', 'lay10_36', 'lay10_42', 'lay10_88', 'lay10_65', 'lay10_8', 'lay10_85', 'lay10_43', 'lay10_98', 'lay10_9', 'lay10_27', 'lay10_71', 'lay10_40', 'lay10_21', 'lay10_13', 'lay10_60', 'lay10_87', 'lay10_54', 'lay10_41', 'lay10_10', 'lay10_16', 'lay10_96', 'lay10_26', 'lay10_28', 'lay10_48', 'lay10_89', 'lay10_68', 'lay10_74', 'lay10_66', 'lay10_77', 'lay10_33', 'lay10_59', 'lay10_2', 'lay10_31', 'lay10_44', 'lay10_93', 'lay10_18', 'lay10_69', 'lay10_64', 'lay10_84', 'lay10_86', 'lay10_1', 'lay10_45', 'lay10_61', 'lay10_78', 'lay10_75', 'lay10_11', 'lay10_15', 'lay10_94', 'lay10_25', 'lay10_92', 'lay10_51', 'lay10_97', 'lay10_17', 'lay10_47', 'lay10_4', 'lay10_83', 'lay10_19', 'lay10_72', 'lay10_0', 'lay10_46', 'lay10_90', 'lay10_37', 'lay10_67', 'lay10_76', 'lay10_82', 'lay10_38', 'lay10_52', 'lay10_63', 'lay10_14', 'lay10_29', 'lay10_22', 'lay10_32', 'lay10_95', 'lay10_3', 'lay10_81', 'lay10_23', 'lay10_6', 'lay10_7', 'lay10_12', 'lay10_79', 'lay10_56', 'lay10_35', 'lay10_34', 'lay10_62', 'lay10_73', 'lay10_55', 'lay10_53', 'lay10_57', 'lay10_80', 'lay10_5', 'lay10_50', 'lay10_39', 'lay10_30', 'lay10_91', 'lay10_58'] filter: 1.0
Solving MIP for lay10_85, [-2.8425378799438477,1.178593635559082]=>[-2.8425378799438477,-1e-05] (-1,-1; 15,-1), time: 0.2164s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_27, [-2.9487967491149902,1.2295433282852173]=>[-2.9487967491149902,-1e-05] (-1,-1; 15,-1), time: 0.2120s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_43, [-0.9612697958946228,2.7420847415924072]=>[1e-05,2.7420847415924072] (15,-1; -1,-1), time: 0.2736s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_42, [-1.7377665042877197,2.6051177978515625]=>[1e-05,2.6051177978515625] (15,-1; -1,-1), time: 0.2999s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_9, [-2.362610340118408,1.272417664527893]=>[-2.362610340118408,-1e-05] (-1,-1; 15,-1), time: 0.3015s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_71, [-0.8686351180076599,2.8640663623809814]=>[1e-05,2.8640663623809814] (15,-1; -1,-1), time: 0.3139s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_49, [-3.8309078216552734,1.1779736280441284]=>[-3.8309078216552734,-1e-05] (-1,-1; 15,-1), time: 0.3263s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_98, [-2.7304840087890625,0.8296658992767334]=>[-2.7304840087890625,-1e-05] (-1,-1; 15,-1), time: 0.3245s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_60, [-3.0050206184387207,1.1551841497421265]=>[-3.0050206184387207,-1e-05] (-1,-1; 15,-1), time: 0.2461s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_10, [-3.3555800914764404,1.6015639305114746]=>[-3.3555800914764404,-1e-05] (-1,-1; 15,-1), time: 0.2509s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_16, [-1.330512285232544,2.658796548843384]=>[1e-05,2.658796548843384] (15,-1; -1,-1), time: 0.2374s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_41, [-2.4902219772338867,1.3880884647369385]=>[-2.4902219772338867,-1e-05] (-1,-1; 15,-1), time: 0.4927s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_96, [-1.1878570318222046,2.124380588531494]=>[1e-05,2.124380588531494] (15,-1; -1,-1), time: 0.2579s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_28, [-2.8174173831939697,1.081987738609314]=>[-2.8174173831939697,-1e-05] (-1,-1; 15,-1), time: 0.2677s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_48, [-1.3505260944366455,3.1587109565734863]=>[1e-05,3.1587109565734863] (15,-1; -1,-1), time: 0.2382s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_89, [-2.674006462097168,0.9577842950820923]=>[-2.674006462097168,-1e-05] (-1,-1; 15,-1), time: 0.2617s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_68, [-2.5310676097869873,1.1575623750686646]=>[-2.5310676097869873,-1e-05] (-1,-1; 15,-1), time: 0.2963s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_66, [-2.8686940670013428,1.2091010808944702]=>[-2.8686940670013428,-1e-05] (-1,-1; 15,-1), time: 0.2195s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_74, [-2.6931118965148926,1.585897445678711]=>[-2.6931118965148926,-1e-05] (-1,-1; 15,-1), time: 0.2951s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_88, [-1.9021351337432861,1.1388543844223022]=>[-1.9021351337432861,-1e-05] (-1,-1; 15,-1), time: 2.6431s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_59, [-2.16521954536438,0.946237325668335]=>[-2.16521954536438,-1e-05] (-1,-1; 15,-1), time: 0.2391s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_24, [-2.2169320583343506,1.510794758796692]=>[-2.2169320583343506,-1e-05] (-1,-1; 15,-1), time: 5.8354s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_70, [-2.105273723602295,1.5595896244049072]=>[-2.105273723602295,-1e-05] (-1,-1; 15,-1), time: 7.5652s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_44, [-3.5813491344451904,2.424720525741577]=>[-3.5813491344451904,-1e-05] (-1,-1; 15,-1), time: 1.9614s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_13, [-2.128199577331543,2.6509790420532227]=>[-0.7078910008649439,0.6225852432144551] (2,-1; 9,-1), time: 21.6004s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_18, [-2.4404232501983643,0.873293399810791]=>[-2.4404232501983643,-1e-05] (-1,-1; 15,-1), time: 0.2299s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_20, [-2.3875372409820557,1.7193107604980469]=>[-0.9881695330149413,0.18886841124446535] (2,-1; 9,-1), time: 22.4291s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_64, [-2.0506880283355713,0.8725902438163757]=>[-2.0506880283355713,-1e-05] (-1,-1; 15,-1), time: 0.2069s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_84, [-1.4540457725524902,2.3761520385742188]=>[1e-05,2.3761520385742188] (15,-1; -1,-1), time: 0.1977s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_86, [-3.2018485069274902,0.9264323711395264]=>[-3.2018485069274902,-1e-05] (-1,-1; 15,-1), time: 0.1962s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_1, [-0.545045018196106,3.1006908416748047]=>[1e-05,3.1006908416748047] (15,-1; -1,-1), time: 0.1890s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_8, [-2.3748981952667236,1.7832722663879395]=>[-0.4853658662134591,0.34758582514925784] (9,-1; 2,-1), time: 26.2080s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_61, [-1.4232196807861328,2.056736946105957]=>[1e-05,2.056736946105957] (15,-1; -1,-1), time: 0.5015s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_78, [-2.5741465091705322,0.8117658495903015]=>[-2.5741465091705322,-1e-05] (-1,-1; 15,-1), time: 0.2402s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_75, [-3.145318031311035,0.8189980983734131]=>[-3.145318031311035,-1e-05] (-1,-1; 15,-1), time: 0.2063s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_11, [-0.7386882305145264,3.3638107776641846]=>[1e-05,3.3638107776641846] (15,-1; -1,-1), time: 0.2158s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_15, [-1.2294477224349976,3.0662641525268555]=>[1e-05,3.0662641525268555] (15,-1; -1,-1), time: 0.2172s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_2, [-2.662672996520996,1.5578722953796387]=>[-0.7020610572793895,0.4851573020429817] (9,-1; 2,-1), time: 26.4395s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_25, [-3.596055269241333,1.155925989151001]=>[-3.596055269241333,-1e-05] (-1,-1; 15,-1), time: 0.2100s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_36, [-2.0579028129577637,1.765282154083252]=>[-0.559533592142376,0.26445989783906854] (9,-1; 9,-1), time: 30.0072s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_65, [-1.7434152364730835,2.923895835876465]=>[-0.15122648648968873,0.9085086758603941] (9,-1; 9,-1), time: 30.0149s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_99, [-1.7342517375946045,4.0268096923828125]=>[-0.1741382040030212,1.4437368678221099] (9,-1; 9,-1), time: 30.0241s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_97, [-3.1318366527557373,1.217018723487854]=>[-3.1318366527557373,-1e-05] (-1,-1; 15,-1), time: 0.2041s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_40, [-1.8779089450836182,2.6158316135406494]=>[-0.10090966665282612,1.050451023966299] (9,-1; 9,-1), time: 30.0079s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_17, [-1.6782304048538208,2.7153685092926025]=>[1e-05,2.7153685092926025] (15,-1; -1,-1), time: 0.2189s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_21, [-1.8806042671203613,1.8723032474517822]=>[-0.725469977385949,0.15011579030703984] (9,-1; 9,-1), time: 30.0393s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_87, [-2.162268877029419,1.5227433443069458]=>[-0.6317514294021858,0.19218963409723153] (9,-1; 9,-1), time: 30.0067s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_54, [-1.9119552373886108,1.3608591556549072]=>[-0.23454048973537506,0.25544350876967015] (9,-1; 9,-1), time: 30.0095s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_4, [-2.1476125717163086,1.0397533178329468]=>[-2.1476125717163086,-1e-05] (-1,-1; 15,-1), time: 0.1992s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_19, [-0.39263081550598145,4.635449409484863]=>[1e-05,4.635449409484863] (15,-1; -1,-1), time: 0.2216s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_72, [-2.039520263671875,1.548015832901001]=>[-2.039520263671875,-1e-05] (-1,-1; 15,-1), time: 0.2116s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_46, [-2.800659656524658,1.5600873231887817]=>[-2.800659656524658,-1e-05] (-1,-1; 15,-1), time: 0.1952s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_47, [-1.9026784896850586,2.884352684020996]=>[1e-05,2.884352684020996] (15,-1; -1,-1), time: 0.4729s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_37, [-0.37089505791664124,4.027261734008789]=>[1e-05,4.027261734008789] (15,-1; -1,-1), time: 0.1908s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_26, [-2.040526866912842,2.115196704864502]=>[-0.4832854816181201,0.3145684408770276] (9,-1; 9,-1), time: 30.0253s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_67, [-0.9404961466789246,2.6426615715026855]=>[1e-05,2.6426615715026855] (15,-1; -1,-1), time: 0.1943s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_82, [-2.5491132736206055,0.9156336784362793]=>[-2.5491132736206055,-1e-05] (-1,-1; 15,-1), time: 0.2037s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_38, [-3.1044766902923584,1.0548113584518433]=>[-3.1044766902923584,-1e-05] (-1,-1; 15,-1), time: 0.2389s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_63, [-2.3462038040161133,1.733925700187683]=>[-2.3462038040161133,-1e-05] (-1,-1; 15,-1), time: 0.2058s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_76, [-1.9346731901168823,1.4226967096328735]=>[-1.9346731901168823,-1e-05] (-1,-1; 15,-1), time: 0.6604s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_77, [-1.434804081916809,2.887796640396118]=>[-0.05369923856860781,1.005700588081616] (9,-1; 9,-1), time: 30.0083s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_33, [-2.115849256515503,2.2194976806640625]=>[-0.3444966159336228,0.637558821395573] (9,-1; 9,-1), time: 30.0210s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_32, [-2.7331056594848633,0.8272799253463745]=>[-2.7331056594848633,-1e-05] (-1,-1; 15,-1), time: 0.2105s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_95, [-2.7107126712799072,0.9290403127670288]=>[-2.7107126712799072,-1e-05] (-1,-1; 15,-1), time: 0.2193s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_3, [-1.8991751670837402,1.1242337226867676]=>[-1.8991751670837402,-1e-05] (-1,-1; 15,-1), time: 0.1980s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_81, [-2.7895286083221436,1.0673089027404785]=>[-2.7895286083221436,-1e-05] (-1,-1; 15,-1), time: 0.2412s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_6, [-2.3084278106689453,1.0902665853500366]=>[-2.3084278106689453,-1e-05] (-1,-1; 15,-1), time: 0.2216s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_7, [-4.19240665435791,0.35690736770629883]=>[-4.19240665435791,-1e-05] (-1,-1; 15,-1), time: 0.2289s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_12, [-1.1494146585464478,3.435091733932495]=>[1e-05,3.435091733932495] (15,-1; -1,-1), time: 0.2496s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_79, [-1.4137212038040161,1.977595567703247]=>[1e-05,1.977595567703247] (15,-1; -1,-1), time: 0.2508s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_31, [-1.4737802743911743,1.9632821083068848]=>[-0.03169037116390559,0.4638960042235618] (9,-1; 9,-1), time: 30.0080s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_29, [-2.4166553020477295,1.4575763940811157]=>[-2.4166553020477295,-1e-05] (-1,-1; 15,-1), time: 5.2927s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_92, [-2.0622687339782715,1.1917381286621094]=>[-2.0622687339782715,-1e-05] (-1,-1; 15,-1), time: 7.0582s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_34, [-1.3199189901351929,3.10335636138916]=>[1e-05,3.10335636138916] (15,-1; -1,-1), time: 0.2021s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_73, [-2.193909168243408,1.3367689847946167]=>[-2.193909168243408,-1e-05] (-1,-1; 15,-1), time: 1.0448s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_93, [-1.4083322286605835,1.7106637954711914]=>[-0.39866307706250165,0.3097640323658856] (9,-1; 9,-1), time: 30.0886s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_62, [-1.7449557781219482,1.597486972808838]=>[-1.7449557781219482,-1e-05] (-1,-1; 15,-1), time: 4.7548s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_69, [-1.668410062789917,1.8771803379058838]=>[-0.25357687977939325,0.4385509742249847] (9,-1; 9,-1), time: 30.0104s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_45, [-2.574078321456909,1.1131995916366577]=>[-0.6170634428055324,0.07228751867530363] (9,-1; 9,-1), time: 30.0045s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_52, [-1.8753892183303833,1.8630633354187012]=>[1e-05,0.7250162121455533] (15,-1; 9,-1), time: 22.7423s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_50, [-2.185950756072998,3.670212507247925]=>[1e-05,3.670212507247925] (15,-1; -1,-1), time: 0.6276s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_39, [-2.556044816970825,1.088978886604309]=>[-2.556044816970825,-1e-05] (-1,-1; 15,-1), time: 0.1952s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_30, [-3.6095216274261475,1.6220523118972778]=>[-3.6095216274261475,-1e-05] (-1,-1; 15,-1), time: 0.1990s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_51, [-1.6635303497314453,3.7025954723358154]=>[-0.08700107332402776,1.717375092456463] (2,-1; 9,-1), time: 25.3988s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_58, [-2.938230514526367,1.0076110363006592]=>[-2.938230514526367,-1e-05] (-1,-1; 15,-1), time: 0.2394s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_23, [-1.5942699909210205,4.3897271156311035]=>[-0.3906955326346015,1.6362900633537747] (2,-1; 9,-1), time: 24.4628s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_94, [-2.3415277004241943,1.4578813314437866]=>[-0.5010496016724196,0.38971729924975335] (9,-1; 9,-1), time: 30.0076s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_22, [-1.978774905204773,2.8077609539031982]=>[-0.7281911789874643,0.6969845798352077] (2,-1; 9,-1), time: 27.3264s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_83, [-1.9590106010437012,1.2683618068695068]=>[-0.27525564604653385,0.13059406130292342] (9,-1; 9,-1), time: 30.0446s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_0, [-2.1881422996520996,1.5404582023620605]=>[-0.6327527749586569,0.22771591293360666] (9,-1; 9,-1), time: 30.0296s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_90, [-2.3238980770111084,1.3939698934555054]=>[-0.7394832294519046,0.050600127089061524] (9,-1; 9,-1), time: 30.0095s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_14, [-2.282482624053955,1.7742472887039185]=>[-0.45749090603711945,0.5510474797938222] (9,-1; 9,-1), time: 30.0126s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_55, [-1.4789358377456665,1.6858099699020386]=>[-0.4798304555143977,0.03559397582795415] (9,-1; 2,-1), time: 25.3765s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_56, [-1.5774637460708618,1.936089038848877]=>[-0.08127555941850745,0.4971457714573974] (9,-1; 9,-1), time: 30.0444s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_35, [-1.7460265159606934,2.280897378921509]=>[-0.3420900887533297,0.6189963527050689] (9,-1; 9,-1), time: 30.0107s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_53, [-2.2188174724578857,1.1716092824935913]=>[-0.35444081331959976,0.15066077792450033] (9,-1; 9,-1), time: 30.0215s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_57, [-2.043323516845703,1.8625327348709106]=>[-0.3017701403832278,0.33020267822770566] (9,-1; 9,-1), time: 30.0228s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_5, [-1.8594003915786743,1.9386839866638184]=>[-0.2221339261401705,0.47240102666728245] (9,-1; 2,-1), time: 25.3629s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_80, [-1.9678338766098022,1.8223339319229126]=>[-0.1758932498882237,0.6112568448945276] (9,-1; 9,-1), time: 30.0104s, #vars: 1531, #constrs: 869, improved: True
Solving MIP for lay10_91, [-1.3734831809997559,2.554603099822998]=>[-0.18821513292840847,0.7267172278336608] (9,-1; 9,-1), time: 30.0069s, #vars: 1531, #constrs: 869, improved: True
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
best_l after optimization: 26.780885696411133 with beta sum per layer: []
alpha/beta optimization time: 17.428191423416138
alpha-CROWN with intermediate bounds by MIP: tensor([[-1.8141, -2.2131, -3.2974, -1.7749, -3.3645, -4.2447, -5.6479, -1.6486,
         -2.7756]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 78.68976593017578, ub improved 108.47107696533203, time 85.4368
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_62', 'lay12_53', 'lay12_97', 'lay12_26', 'lay12_49', 'lay12_80', 'lay12_15', 'lay12_93', 'lay12_50', 'lay12_47', 'lay12_78', 'lay12_40', 'lay12_11', 'lay12_34', 'lay12_76', 'lay12_27', 'lay12_69', 'lay12_1', 'lay12_20', 'lay12_2', 'lay12_5', 'lay12_10', 'lay12_61', 'lay12_94', 'lay12_99', 'lay12_57', 'lay12_41', 'lay12_13', 'lay12_3', 'lay12_74', 'lay12_71', 'lay12_36', 'lay12_68', 'lay12_56', 'lay12_85', 'lay12_43', 'lay12_37', 'lay12_77', 'lay12_73', 'lay12_4', 'lay12_58', 'lay12_24', 'lay12_51', 'lay12_45', 'lay12_22', 'lay12_18', 'lay12_88', 'lay12_33', 'lay12_81', 'lay12_65', 'lay12_54', 'lay12_55', 'lay12_30', 'lay12_29', 'lay12_92', 'lay12_66', 'lay12_39', 'lay12_64', 'lay12_21', 'lay12_28', 'lay12_31', 'lay12_19', 'lay12_46', 'lay12_84', 'lay12_14', 'lay12_42', 'lay12_79', 'lay12_70', 'lay12_83', 'lay12_60', 'lay12_96', 'lay12_32', 'lay12_8', 'lay12_9', 'lay12_90', 'lay12_75', 'lay12_38', 'lay12_89', 'lay12_98', 'lay12_52', 'lay12_7', 'lay12_82', 'lay12_16', 'lay12_35', 'lay12_72', 'lay12_23', 'lay12_59', 'lay12_91', 'lay12_0', 'lay12_95', 'lay12_6', 'lay12_67', 'lay12_25', 'lay12_12', 'lay12_48', 'lay12_17', 'lay12_87', 'lay12_86', 'lay12_44', 'lay12_63'] filter: 1.0
Solving MIP for lay12_62, [-3.4887847900390625,4.744948863983154]=>[1e-05,4.744948863983154] (15,-1; -1,-1), time: 0.3002s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_53, [-4.394255638122559,3.966451406478882]=>[-4.394255638122559,-1e-05] (-1,-1; 15,-1), time: 0.2988s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_50, [-3.338907241821289,6.16702127456665]=>[1e-05,6.16702127456665] (15,-1; -1,-1), time: 0.3109s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_97, [-4.465539932250977,3.636349678039551]=>[-4.465539932250977,-1e-05] (-1,-1; 15,-1), time: 0.3259s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_11, [-4.833395004272461,3.204709053039551]=>[-4.833395004272461,-1e-05] (-1,-1; 15,-1), time: 0.3355s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_1, [-4.190247535705566,3.549959659576416]=>[-4.190247535705566,-1e-05] (-1,-1; 15,-1), time: 0.2836s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_69, [-3.48150634765625,4.166215419769287]=>[1e-05,4.166215419769287] (15,-1; -1,-1), time: 0.2913s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_2, [-5.1443023681640625,2.396010637283325]=>[-5.1443023681640625,-1e-05] (-1,-1; 15,-1), time: 0.2795s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_5, [-4.6997857093811035,2.7888755798339844]=>[-4.6997857093811035,-1e-05] (-1,-1; 15,-1), time: 0.2726s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_10, [-4.6535868644714355,2.1217451095581055]=>[-4.6535868644714355,-1e-05] (-1,-1; 15,-1), time: 0.2748s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_61, [-4.916014671325684,2.1731181144714355]=>[-4.916014671325684,-1e-05] (-1,-1; 15,-1), time: 0.2779s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_99, [-4.3253493309021,2.244497776031494]=>[-4.3253493309021,-1e-05] (-1,-1; 15,-1), time: 0.2600s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_94, [-4.030995845794678,4.122602939605713]=>[1e-05,4.122602939605713] (15,-1; -1,-1), time: 0.3239s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_13, [-6.125851631164551,1.94598388671875]=>[-6.125851631164551,-1e-05] (-1,-1; 15,-1), time: 0.2658s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_57, [-4.019475936889648,2.7378270626068115]=>[-4.019475936889648,-1e-05] (-1,-1; 15,-1), time: 0.3103s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_74, [-4.878881931304932,1.6764118671417236]=>[-4.878881931304932,-1e-05] (-1,-1; 15,-1), time: 0.2741s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_36, [-4.75100040435791,3.2083919048309326]=>[-4.75100040435791,-1e-05] (-1,-1; 15,-1), time: 0.2813s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_76, [-3.847989559173584,2.544429063796997]=>[-3.847989559173584,-1e-05] (-1,-1; 15,-1), time: 5.4675s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_56, [-4.323971271514893,2.143416166305542]=>[-4.323971271514893,-1e-05] (-1,-1; 15,-1), time: 0.2662s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_68, [-3.5413143634796143,3.718654155731201]=>[-0.9549231757804583,-1e-05] (9,-1; 15,-1), time: 15.3234s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_43, [-4.184581279754639,2.9889047145843506]=>[-4.184581279754639,-1e-05] (-1,-1; 15,-1), time: 0.3366s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_37, [-4.206928253173828,2.3765785694122314]=>[-4.206928253173828,-1e-05] (-1,-1; 15,-1), time: 5.9058s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_40, [-3.3914661407470703,3.8088903427124023]=>[-0.2648997812030771,0.4550651372826363] (9,-1; 9,-1), time: 30.0080s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_47, [-3.922847270965576,4.367777347564697]=>[-0.7577868894753454,0.5540562987107416] (9,-1; 9,-1), time: 30.0122s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_34, [-3.8853583335876465,3.0949525833129883]=>[-0.6766056584417023,0.23660284012621904] (9,-1; 9,-1), time: 30.0211s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_78, [-4.481614589691162,2.488811492919922]=>[-0.6390755624779457,0.062469564353725436] (9,-1; 9,-1), time: 30.0226s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_27, [-4.168783664703369,4.646391868591309]=>[-0.3776664538236133,1.0398143516486928] (9,-1; 9,-1), time: 30.0230s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_93, [-3.966259241104126,3.1829569339752197]=>[-0.5300424349714321,0.20271756267693217] (9,-1; 9,-1), time: 30.0374s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_15, [-4.456171989440918,5.691226482391357]=>[-0.5138866589387995,1.1842484518962804] (9,-1; 9,-1), time: 30.0499s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_26, [-4.718423843383789,4.0340118408203125]=>[-0.8179084416004474,0.11921512668850867] (9,-1; 9,-1), time: 30.1000s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_80, [-3.774447441101074,4.305745601654053]=>[-0.59223294255226,0.17163350705342115] (9,-1; 9,-1), time: 30.1333s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_49, [-4.281412601470947,3.2263941764831543]=>[-0.7124095153656729,0.07065422698185973] (9,-1; 9,-1), time: 30.1750s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_73, [-5.331914901733398,3.202625036239624]=>[-5.331914901733398,-1e-05] (-1,-1; 15,-1), time: 0.2478s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_20, [-3.4518063068389893,3.6361827850341797]=>[-0.48213795868309295,0.09278674287715144] (9,-1; 9,-1), time: 30.0409s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_18, [-4.332033634185791,4.876356601715088]=>[1e-05,4.876356601715088] (15,-1; -1,-1), time: 0.2672s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_88, [-2.2145421504974365,5.9822998046875]=>[1e-05,5.9822998046875] (15,-1; -1,-1), time: 0.2980s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_81, [-3.008784055709839,4.981207847595215]=>[1e-05,4.981207847595215] (15,-1; -1,-1), time: 0.2446s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_54, [-4.804633617401123,2.895212411880493]=>[-4.804633617401123,-1e-05] (-1,-1; 15,-1), time: 0.2808s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_30, [-4.709042549133301,2.479938268661499]=>[-4.709042549133301,-1e-05] (-1,-1; 15,-1), time: 0.2580s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_29, [-3.005955696105957,5.935222148895264]=>[1e-05,5.935222148895264] (15,-1; -1,-1), time: 0.2697s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_3, [-3.9469869136810303,3.4459190368652344]=>[-0.5849050039447331,0.04883999877532018] (9,-1; 9,-1), time: 30.0249s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_41, [-3.4098353385925293,3.022538185119629]=>[-0.41506805119452467,0.269990794644232] (9,-1; 9,-1), time: 30.1317s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_92, [-3.5766055583953857,2.5833263397216797]=>[-3.5766055583953857,-1e-05] (-1,-1; 15,-1), time: 0.2503s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_66, [-3.5977582931518555,4.491212368011475]=>[1e-05,4.491212368011475] (15,-1; -1,-1), time: 0.2516s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_71, [-3.923746109008789,2.760875940322876]=>[-0.9280839603778165,0.04304439400320611] (9,-1; 9,-1), time: 30.0350s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_39, [-4.469889163970947,1.8347092866897583]=>[-4.469889163970947,-1e-05] (-1,-1; 15,-1), time: 0.3095s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_64, [-2.3697264194488525,3.7967100143432617]=>[1e-05,3.7967100143432617] (15,-1; -1,-1), time: 0.2893s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_31, [-2.3634750843048096,5.560465335845947]=>[1e-05,5.560465335845947] (15,-1; -1,-1), time: 0.2742s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_46, [-3.3961715698242188,4.344672203063965]=>[1e-05,4.344672203063965] (15,-1; -1,-1), time: 0.3446s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_19, [-4.337515830993652,2.369185447692871]=>[-4.337515830993652,-1e-05] (-1,-1; 15,-1), time: 1.9441s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_42, [-4.8396453857421875,2.185490131378174]=>[-4.8396453857421875,-1e-05] (-1,-1; 15,-1), time: 0.2756s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_79, [-4.220774173736572,2.8778085708618164]=>[-4.220774173736572,-1e-05] (-1,-1; 15,-1), time: 0.2762s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_70, [-3.8688464164733887,6.114258766174316]=>[1e-05,6.114258766174316] (15,-1; -1,-1), time: 0.2759s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_83, [-6.070359230041504,3.074544906616211]=>[-6.070359230041504,-1e-05] (-1,-1; 15,-1), time: 0.2676s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_60, [-3.4886817932128906,4.043449878692627]=>[1e-05,4.043449878692627] (15,-1; -1,-1), time: 0.3259s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_85, [-3.9750008583068848,4.026124954223633]=>[-0.6883669702832474,0.23584575775419883] (9,-1; 9,-1), time: 30.1678s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_14, [-3.9558212757110596,2.7108259201049805]=>[-3.9558212757110596,-1e-05] (-1,-1; 15,-1), time: 4.6497s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_84, [-3.8302526473999023,2.1485180854797363]=>[-3.8302526473999023,-1e-05] (-1,-1; 15,-1), time: 8.9424s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_32, [-4.019845962524414,3.015570878982544]=>[-4.019845962524414,-1e-05] (-1,-1; 15,-1), time: 9.1488s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_8, [-3.1220834255218506,3.326718330383301]=>[1e-05,3.326718330383301] (15,-1; -1,-1), time: 10.3589s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_77, [-3.6872706413269043,2.428896903991699]=>[-0.21800243920978354,0.2854881563676043] (9,-1; 9,-1), time: 30.1123s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_4, [-4.850888252258301,5.19150972366333]=>[-0.8279788950008974,0.36724254656962163] (9,-1; 9,-1), time: 30.0303s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_45, [-4.187439918518066,2.659456729888916]=>[-0.5782397490336041,0.08827017530698852] (9,-1; 9,-1), time: 30.0474s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_24, [-4.824089050292969,4.883303642272949]=>[-0.5835345953675523,1.1992864908479242] (9,-1; 9,-1), time: 30.0623s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_22, [-4.129637718200684,2.2868878841400146]=>[-0.42364197134776127,0.1871350360732107] (9,-1; 9,-1), time: 30.0370s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_58, [-3.6118266582489014,2.9822640419006348]=>[-0.5546892300940435,0.1976688941904976] (9,-1; 9,-1), time: 30.0948s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_51, [-4.247227668762207,3.344149589538574]=>[-1.1449468958597304,0.0947677576412388] (9,-1; 9,-1), time: 30.1701s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_33, [-4.189127445220947,3.355583906173706]=>[-0.3960574137006874,0.8373357712564939] (9,-1; 9,-1), time: 30.0234s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_89, [-5.090049743652344,2.4843926429748535]=>[-5.090049743652344,-1e-05] (-1,-1; 15,-1), time: 0.2677s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_52, [-3.8583455085754395,3.170809030532837]=>[-3.8583455085754395,-1e-05] (-1,-1; 15,-1), time: 0.2537s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_82, [-4.480813980102539,2.681706666946411]=>[-4.480813980102539,-1e-05] (-1,-1; 15,-1), time: 0.3000s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_16, [-4.620858669281006,2.0999114513397217]=>[-4.620858669281006,-1e-05] (-1,-1; 15,-1), time: 0.2441s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_55, [-3.2173540592193604,3.0671565532684326]=>[-0.003040031361125388,0.8860632307862536] (9,-1; 9,-1), time: 30.0199s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_65, [-4.316417694091797,2.5569498538970947]=>[-0.2437909388292645,0.35121301641842134] (9,-1; 9,-1), time: 30.1003s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_35, [-3.394502639770508,5.304690361022949]=>[1e-05,5.304690361022949] (15,-1; -1,-1), time: 0.2750s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_23, [-3.697113513946533,4.262557506561279]=>[1e-05,4.262557506561279] (15,-1; -1,-1), time: 0.2392s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_6, [-4.396864891052246,2.5025670528411865]=>[-4.396864891052246,-1e-05] (-1,-1; 15,-1), time: 0.2753s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_21, [-3.995833158493042,2.6593096256256104]=>[-0.46634947425317275,0.05993197795629411] (9,-1; 9,-1), time: 30.1022s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_28, [-3.6643102169036865,2.8464677333831787]=>[-0.617375712155393,0.20185332567239703] (9,-1; 9,-1), time: 30.0064s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_25, [-4.522397041320801,3.4970149993896484]=>[-4.522397041320801,-1e-05] (-1,-1; 15,-1), time: 0.5463s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_96, [-3.5502748489379883,3.677485704421997]=>[-0.04794895969337039,0.9077479097218965] (9,-1; 9,-1), time: 30.0934s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_87, [-2.681666851043701,4.404929161071777]=>[1e-05,4.404929161071777] (15,-1; -1,-1), time: 0.2774s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_17, [-4.0953369140625,3.3793911933898926]=>[-4.0953369140625,-1e-05] (-1,-1; 15,-1), time: 7.6720s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_44, [-4.94943380355835,2.77715802192688]=>[-4.94943380355835,-1e-05] (-1,-1; 15,-1), time: 0.2612s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_9, [-4.027693271636963,3.5855515003204346]=>[-0.595706323738832,0.5070976584518252] (9,-1; 9,-1), time: 30.1007s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_90, [-4.626067161560059,2.8545029163360596]=>[-1.0663878781647191,0.2056708945012046] (9,-1; 9,-1), time: 30.0347s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_75, [-3.7851152420043945,4.578528881072998]=>[-0.8367843010107576,0.6060713819384704] (9,-1; 9,-1), time: 30.0131s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_38, [-5.186700820922852,2.139801502227783]=>[-0.6710065537965794,0.08888958878586221] (9,-1; 9,-1), time: 30.1774s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_7, [-3.593261480331421,3.5748958587646484]=>[-0.5949900050987721,0.11305232974907263] (9,-1; 9,-1), time: 30.0190s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_98, [-4.277376651763916,6.613561153411865]=>[-0.3634005059372701,1.5600464035480843] (9,-1; 9,-1), time: 30.1168s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_72, [-3.540303945541382,4.681175231933594]=>[-0.16667335996739485,0.7715020295174448] (9,-1; 9,-1), time: 30.0264s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_59, [-4.291323184967041,4.54686975479126]=>[-0.7947145978416242,0.7399903974119837] (9,-1; 9,-1), time: 30.0363s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_91, [-3.2344202995300293,3.9865055084228516]=>[-0.0812993455989399,0.919624503294361] (9,-1; 9,-1), time: 30.0137s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_95, [-3.6827101707458496,3.787492275238037]=>[-0.5593915344767081,0.2500456738258287] (9,-1; 9,-1), time: 30.0229s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_0, [-4.21092414855957,2.74774432182312]=>[-0.33661379925007284,0.2014108530149502] (9,-1; 9,-1), time: 30.0495s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_67, [-3.807382583618164,3.6912741661071777]=>[-0.7664878339037636,0.19366210009389945] (9,-1; 9,-1), time: 30.0315s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_12, [-3.9725141525268555,2.8675293922424316]=>[-0.49597802436748345,0.19341544098210292] (9,-1; 9,-1), time: 30.0195s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_48, [-3.682877540588379,4.4329705238342285]=>[-0.8396742698911774,0.5642467963111294] (9,-1; 9,-1), time: 30.1229s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_86, [-3.9746711254119873,5.071530342102051]=>[-0.3137498114545779,1.2516771968116005] (9,-1; 9,-1), time: 30.0337s, #vars: 1699, #constrs: 1071, improved: True
Solving MIP for lay12_63, [-4.553997039794922,3.947190999984741]=>[-0.5626803287162663,0.13559071374265594] (9,-1; 9,-1), time: 30.0051s, #vars: 1699, #constrs: 1071, improved: True
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
best_l after optimization: 0.30503347516059875 with beta sum per layer: []
alpha/beta optimization time: 17.767876625061035
alpha-CROWN with intermediate bounds by MIP: tensor([[ 0.5752,  0.6582, -0.3238,  1.1336,  0.2575, -2.0467, -3.0357,  1.8972,
          0.5796]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 214.0091094970703, ub improved 245.42578125, time 100.0930
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_67', 'lay14_91', 'lay14_41', 'lay14_22', 'lay14_95', 'lay14_88', 'lay14_76', 'lay14_40', 'lay14_55', 'lay14_35', 'lay14_5', 'lay14_96', 'lay14_43', 'lay14_84', 'lay14_81', 'lay14_27', 'lay14_1', 'lay14_19', 'lay14_64', 'lay14_66', 'lay14_8', 'lay14_89', 'lay14_71', 'lay14_14', 'lay14_79', 'lay14_4', 'lay14_68', 'lay14_25', 'lay14_18', 'lay14_13', 'lay14_31', 'lay14_99', 'lay14_30', 'lay14_97', 'lay14_82', 'lay14_20', 'lay14_70', 'lay14_49', 'lay14_51', 'lay14_38', 'lay14_72', 'lay14_80', 'lay14_86', 'lay14_36', 'lay14_75', 'lay14_46', 'lay14_52', 'lay14_83', 'lay14_37', 'lay14_47', 'lay14_26', 'lay14_39', 'lay14_6', 'lay14_48', 'lay14_29', 'lay14_57', 'lay14_59', 'lay14_78', 'lay14_10', 'lay14_9', 'lay14_50', 'lay14_0', 'lay14_21', 'lay14_69', 'lay14_23', 'lay14_54', 'lay14_45', 'lay14_74', 'lay14_28', 'lay14_90', 'lay14_17', 'lay14_62', 'lay14_7', 'lay14_32', 'lay14_11', 'lay14_56', 'lay14_12', 'lay14_58', 'lay14_60', 'lay14_53', 'lay14_65', 'lay14_92', 'lay14_34', 'lay14_42', 'lay14_87', 'lay14_77', 'lay14_93', 'lay14_73', 'lay14_85', 'lay14_2', 'lay14_63', 'lay14_24', 'lay14_16', 'lay14_3', 'lay14_61', 'lay14_98', 'lay14_15', 'lay14_33', 'lay14_94', 'lay14_44'] filter: 1.0
Solving MIP for lay14_5, [-9.53831672668457,8.841761589050293]=>[-9.53831672668457,-1e-05] (-1,-1; 15,-1), time: 0.3636s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_41, [-6.534034729003906,10.333606719970703]=>[1e-05,10.333606719970703] (15,-1; -1,-1), time: 0.3711s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_55, [-9.727560043334961,7.920229434967041]=>[-9.727560043334961,-1e-05] (-1,-1; 15,-1), time: 0.3952s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_22, [-8.857381820678711,7.974381446838379]=>[-8.857381820678711,-1e-05] (-1,-1; 15,-1), time: 0.4326s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_19, [-9.285605430603027,5.38417911529541]=>[-9.285605430603027,-1e-05] (-1,-1; 15,-1), time: 0.3131s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_95, [-7.9506659507751465,7.471744060516357]=>[-7.9506659507751465,-1e-05] (-1,-1; 15,-1), time: 0.7607s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_8, [-8.15151309967041,6.072166442871094]=>[-8.15151309967041,-1e-05] (-1,-1; 15,-1), time: 0.3308s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_84, [-7.934444427490234,7.660766124725342]=>[-7.934444427490234,-1e-05] (-1,-1; 15,-1), time: 1.2332s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_40, [-6.830801963806152,9.841226577758789]=>[1e-05,9.841226577758789] (15,-1; -1,-1), time: 8.2232s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_96, [-9.388955116271973,9.449145317077637]=>[-1.9178127488134955,-1e-05] (9,-1; 15,-1), time: 15.3520s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_91, [-8.195067405700684,8.79435920715332]=>[-1.3843959725076576,-1e-05] (9,-1; 15,-1), time: 15.3869s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_81, [-7.202463626861572,8.139460563659668]=>[-1.3391457453605544,-1e-05] (9,-1; 15,-1), time: 15.4385s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_25, [-8.537967681884766,4.939364433288574]=>[-8.537967681884766,-1e-05] (-1,-1; 15,-1), time: 0.3670s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_14, [-7.205402374267578,7.965213298797607]=>[-1.0240523351757254,-1e-05] (9,-1; 15,-1), time: 16.0748s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_13, [-7.252050399780273,7.094554901123047]=>[-7.252050399780273,-1e-05] (-1,-1; 15,-1), time: 0.3280s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_31, [-7.413496971130371,8.359809875488281]=>[1e-05,8.359809875488281] (15,-1; -1,-1), time: 0.3365s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_88, [-7.385677814483643,6.434808254241943]=>[-0.5311632928131804,0.22827050390795844] (9,-1; 9,-1), time: 30.0119s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_35, [-8.282769203186035,9.679203987121582]=>[-0.07778944848973542,1.3834774576052875] (9,-1; 9,-1), time: 30.0256s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_43, [-7.859498500823975,6.851710796356201]=>[-0.7068901566002186,0.32715833141171147] (9,-1; 9,-1), time: 30.0237s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_27, [-8.772210121154785,7.163715362548828]=>[-0.38356589246383216,0.7366736275724789] (9,-1; 9,-1), time: 30.1072s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_67, [-6.705451011657715,10.136260032653809]=>[-0.7695392958549695,0.3241000036156424] (9,-1; 9,-1), time: 30.1182s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_76, [-7.817880630493164,6.710124492645264]=>[-0.6556369745365787,0.1517051556254364] (9,-1; 9,-1), time: 30.2160s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_97, [-5.925839424133301,9.35588550567627]=>[1e-05,9.35588550567627] (15,-1; -1,-1), time: 0.3146s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_30, [-7.6477508544921875,6.096085548400879]=>[-7.6477508544921875,-1e-05] (-1,-1; 15,-1), time: 0.3514s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_70, [-7.836893081665039,9.176529884338379]=>[1e-05,9.176529884338379] (15,-1; -1,-1), time: 0.3259s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_64, [-8.598687171936035,6.480387210845947]=>[-0.7687785853232282,0.044120279597512316] (9,-1; 9,-1), time: 30.0549s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_1, [-7.641916275024414,6.628841876983643]=>[-0.3354483982636928,0.42170576320871345] (9,-1; 9,-1), time: 30.0999s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_66, [-9.55373764038086,7.020837783813477]=>[-0.8254429059891447,0.46157248058445094] (9,-1; 9,-1), time: 30.0694s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_49, [-9.399721145629883,5.231912136077881]=>[-9.399721145629883,-1e-05] (-1,-1; 15,-1), time: 0.3319s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_38, [-6.1574883460998535,8.44229793548584]=>[1e-05,8.44229793548584] (15,-1; -1,-1), time: 0.3338s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_72, [-6.8981523513793945,10.007710456848145]=>[1e-05,10.007710456848145] (15,-1; -1,-1), time: 0.3067s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_89, [-7.149045467376709,8.416680335998535]=>[-0.03007207472296676,1.082321647027645] (9,-1; 9,-1), time: 30.0224s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_68, [-7.335452079772949,7.627896785736084]=>[-0.9464275793145182,-1e-05] (9,-1; 15,-1), time: 15.3958s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_86, [-9.392046928405762,7.011173725128174]=>[-9.392046928405762,-1e-05] (-1,-1; 15,-1), time: 0.3472s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_83, [-7.60813570022583,7.690331935882568]=>[1e-05,7.690331935882568] (15,-1; -1,-1), time: 0.3162s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_71, [-8.823037147521973,7.427050590515137]=>[-0.30350681590505263,1.0676636135262176] (9,-1; 9,-1), time: 30.1043s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_18, [-6.729672431945801,6.109621524810791]=>[1e-05,0.8778115098571009] (15,-1; 9,-1), time: 15.3622s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_6, [-8.074883460998535,8.116430282592773]=>[1e-05,8.116430282592773] (15,-1; -1,-1), time: 0.3158s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_48, [-7.248896598815918,5.560615062713623]=>[-7.248896598815918,-1e-05] (-1,-1; 15,-1), time: 0.6501s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_80, [-6.744690895080566,7.413731575012207]=>[1e-05,7.413731575012207] (15,-1; -1,-1), time: 6.4873s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_57, [-9.252978324890137,5.310370445251465]=>[-9.252978324890137,-1e-05] (-1,-1; 15,-1), time: 0.3541s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_79, [-9.214666366577148,8.36587905883789]=>[-0.7469190530991205,0.4995494716130657] (9,-1; 9,-1), time: 30.1344s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_20, [-7.4817376136779785,8.623199462890625]=>[1e-05,8.623199462890625] (15,-1; -1,-1), time: 9.0837s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_4, [-7.583201885223389,7.559452533721924]=>[-0.3447246168990476,0.4125925158744694] (9,-1; 9,-1), time: 30.0857s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_78, [-8.34627914428711,10.243876457214355]=>[1e-05,10.243876457214355] (15,-1; -1,-1), time: 7.2031s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_9, [-8.716851234436035,6.496066570281982]=>[-8.716851234436035,-1e-05] (-1,-1; 15,-1), time: 0.9993s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_0, [-7.18150520324707,6.951874732971191]=>[-7.18150520324707,-1e-05] (-1,-1; 15,-1), time: 0.6766s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_99, [-7.699218273162842,7.918517589569092]=>[-0.23133560269860515,0.6836053398216309] (9,-1; 9,-1), time: 30.0474s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_69, [-7.853935241699219,7.43622350692749]=>[-7.853935241699219,-1e-05] (-1,-1; 15,-1), time: 0.3188s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_23, [-6.550013542175293,8.986340522766113]=>[1e-05,8.986340522766113] (15,-1; -1,-1), time: 0.3419s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_82, [-8.160240173339844,7.608217716217041]=>[-0.23977335661313268,1.1996792782561463] (9,-1; 9,-1), time: 30.1082s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_51, [-8.375467300415039,6.224747657775879]=>[-0.14911247640357891,0.9085371573279146] (9,-1; 9,-1), time: 30.1153s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_36, [-7.96298360824585,7.456354141235352]=>[-0.37383578057607597,0.3021558848235761] (9,-1; 9,-1), time: 30.0733s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_75, [-7.788320064544678,6.184963703155518]=>[-0.44307546283343935,0.4732855137088179] (9,-1; 9,-1), time: 30.1196s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_46, [-9.228288650512695,6.536881923675537]=>[-0.7302101317753638,0.2280326815175633] (9,-1; 9,-1), time: 30.0220s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_52, [-8.913512229919434,6.564337253570557]=>[-0.6198038047839285,0.19814925633148492] (9,-1; 9,-1), time: 30.0291s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_37, [-8.995258331298828,6.684670448303223]=>[-0.627762668854294,0.33130956233748043] (9,-1; 9,-1), time: 30.0057s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_47, [-8.123780250549316,7.409074783325195]=>[-1.11076372924162,0.282036948679578] (9,-1; 9,-1), time: 30.0265s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_17, [-9.378990173339844,4.551781177520752]=>[-9.378990173339844,-1e-05] (-1,-1; 15,-1), time: 0.3256s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_62, [-8.382140159606934,10.338773727416992]=>[1e-05,10.338773727416992] (15,-1; -1,-1), time: 0.3209s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_26, [-7.8595075607299805,7.312032699584961]=>[-0.38596113518439984,0.8898957693251711] (9,-1; 9,-1), time: 30.0080s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_39, [-8.531636238098145,5.667479991912842]=>[-0.5983553253211634,0.4369305611108915] (9,-1; 9,-1), time: 30.0381s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_7, [-9.954426765441895,5.8594889640808105]=>[-9.954426765441895,-1e-05] (-1,-1; 15,-1), time: 0.3730s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_56, [-6.862490177154541,8.843070030212402]=>[1e-05,8.843070030212402] (15,-1; -1,-1), time: 0.3172s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_60, [-9.642516136169434,5.477058410644531]=>[-9.642516136169434,-1e-05] (-1,-1; 15,-1), time: 0.4124s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_65, [-8.390847206115723,11.443614959716797]=>[1e-05,11.443614959716797] (15,-1; -1,-1), time: 0.3361s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_29, [-7.896430969238281,7.58795166015625]=>[-0.4200866392588361,0.7163964840970296] (9,-1; 9,-1), time: 30.0204s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_34, [-9.36325454711914,5.731024265289307]=>[-9.36325454711914,-1e-05] (-1,-1; 15,-1), time: 0.3077s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_59, [-7.798651695251465,7.5933685302734375]=>[-0.6384592254712556,0.39247878207833936] (9,-1; 9,-1), time: 30.0285s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_87, [-8.010740280151367,8.3801908493042]=>[1e-05,8.3801908493042] (15,-1; -1,-1), time: 0.3978s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_77, [-7.830268859863281,6.219605445861816]=>[-7.830268859863281,-1e-05] (-1,-1; 15,-1), time: 0.3406s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_93, [-9.020362854003906,6.037356853485107]=>[-9.020362854003906,-1e-05] (-1,-1; 15,-1), time: 1.0736s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_10, [-8.78388500213623,7.875443935394287]=>[-0.2725928411467015,0.8868185748943368] (9,-1; 9,-1), time: 30.0704s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_85, [-8.289996147155762,5.651077747344971]=>[-8.289996147155762,-1e-05] (-1,-1; 15,-1), time: 0.3742s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_2, [-9.44686508178711,8.30553150177002]=>[-9.44686508178711,-1e-05] (-1,-1; 15,-1), time: 0.3475s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_50, [-8.477928161621094,6.158481597900391]=>[-0.4824269062167119,0.30918630639125216] (9,-1; 9,-1), time: 30.0322s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_90, [-7.029978275299072,6.812731742858887]=>[1e-05,1.4545741023346666] (15,-1; 9,-1), time: 15.3293s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_92, [-8.360194206237793,5.133635997772217]=>[1e-05,1.1462406957729863] (15,-1; 9,-1), time: 15.3815s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_21, [-7.225475788116455,6.882014751434326]=>[-0.18365222718771118,0.49558260610678373] (9,-1; 9,-1), time: 30.1956s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_54, [-9.089426040649414,7.810310363769531]=>[-0.6242039806905669,0.5243449895267607] (9,-1; 9,-1), time: 30.0223s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_98, [-10.441391944885254,6.382797718048096]=>[-10.441391944885254,-1e-05] (-1,-1; 15,-1), time: 0.3683s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_15, [-7.914723873138428,6.233349800109863]=>[-7.914723873138428,-1e-05] (-1,-1; 15,-1), time: 0.3252s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_33, [-6.952402114868164,9.397727966308594]=>[1e-05,9.397727966308594] (15,-1; -1,-1), time: 0.3724s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_63, [-8.639176368713379,7.903062343597412]=>[-8.639176368713379,-1e-05] (-1,-1; 15,-1), time: 11.0445s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_73, [-7.4370622634887695,6.831130027770996]=>[1e-05,1.1807512304391516] (15,-1; 9,-1), time: 15.7151s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_94, [-8.629155158996582,6.744802474975586]=>[-8.629155158996582,-1e-05] (-1,-1; 15,-1), time: 8.8639s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_45, [-8.912586212158203,5.627251625061035]=>[-0.708324479746948,0.2636876353191561] (9,-1; 9,-1), time: 30.0688s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_74, [-8.497978210449219,6.084605693817139]=>[-0.4356632908932194,0.536877654436184] (9,-1; 9,-1), time: 30.1133s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_28, [-7.8715667724609375,7.996554851531982]=>[-0.6264019461922907,0.21213654752202227] (9,-1; 9,-1), time: 30.1614s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_32, [-6.989603042602539,7.071743965148926]=>[-0.4614407796213412,0.6286026369901714] (9,-1; 9,-1), time: 30.0768s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_11, [-10.749138832092285,7.8238630294799805]=>[-0.5598332824752721,1.0529100096934216] (9,-1; 9,-1), time: 30.0691s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_12, [-7.1005754470825195,8.530695915222168]=>[-0.42769148562408543,0.35819223739871314] (9,-1; 9,-1), time: 30.0896s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_58, [-7.267688751220703,7.650994300842285]=>[-0.04623183203093525,1.0222141182949274] (9,-1; 9,-1), time: 30.0505s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_53, [-7.93699836730957,7.488368988037109]=>[-0.00694755399152263,0.9775875203129906] (9,-1; 9,-1), time: 30.1012s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_42, [-7.068141460418701,7.323217868804932]=>[-0.8808025526646687,0.002521277600720407] (9,-1; 9,-1), time: 30.1296s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_24, [-7.56746768951416,7.772731304168701]=>[-0.21498738111984247,0.7164000715108346] (9,-1; 9,-1), time: 30.0218s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_16, [-7.657559394836426,7.823277473449707]=>[-0.13168825085589872,0.6981647706293862] (9,-1; 9,-1), time: 30.1207s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_3, [-7.613009452819824,7.376071929931641]=>[-0.8792640345496113,0.05721191576245129] (9,-1; 9,-1), time: 30.0145s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_61, [-8.111030578613281,4.960020065307617]=>[-0.47877469449794796,0.05479021291858141] (9,-1; 9,-1), time: 30.0419s, #vars: 1887, #constrs: 1303, improved: True
Solving MIP for lay14_44, [-7.063819408416748,7.922613143920898]=>[-0.0936970942771014,0.38590529434574655] (9,-1; 9,-1), time: 30.0858s, #vars: 1887, #constrs: 1303, improved: True
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
best_l after optimization: -14.068509101867676 with beta sum per layer: []
alpha/beta optimization time: 17.764705181121826
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.8184,  2.3633,  1.3452,  2.6001,  2.1533, -0.7820, -1.5049,  3.7502,
          2.3248]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 529.4159545898438, ub improved 547.18994140625, time 111.9739
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_68', 'lay16_49', 'lay16_37', 'lay16_14', 'lay16_76', 'lay16_10', 'lay16_54', 'lay16_82', 'lay16_58', 'lay16_35', 'lay16_77', 'lay16_9', 'lay16_98', 'lay16_25', 'lay16_67', 'lay16_50', 'lay16_72', 'lay16_51', 'lay16_13', 'lay16_42', 'lay16_11', 'lay16_80', 'lay16_24', 'lay16_19', 'lay16_56', 'lay16_69', 'lay16_60', 'lay16_65', 'lay16_71', 'lay16_5', 'lay16_6', 'lay16_84', 'lay16_63', 'lay16_33', 'lay16_16', 'lay16_91', 'lay16_53', 'lay16_15', 'lay16_43', 'lay16_44', 'lay16_64', 'lay16_2', 'lay16_57', 'lay16_79', 'lay16_66', 'lay16_36', 'lay16_74', 'lay16_45', 'lay16_23', 'lay16_27', 'lay16_87', 'lay16_86', 'lay16_47', 'lay16_78', 'lay16_61', 'lay16_95', 'lay16_88', 'lay16_52', 'lay16_21', 'lay16_3', 'lay16_75', 'lay16_40', 'lay16_32', 'lay16_29', 'lay16_20', 'lay16_38', 'lay16_81', 'lay16_90', 'lay16_92', 'lay16_62', 'lay16_30', 'lay16_39', 'lay16_85', 'lay16_48', 'lay16_55', 'lay16_1', 'lay16_99', 'lay16_89', 'lay16_18', 'lay16_7', 'lay16_70', 'lay16_94', 'lay16_4', 'lay16_0', 'lay16_28', 'lay16_97', 'lay16_26', 'lay16_83', 'lay16_31', 'lay16_93', 'lay16_12', 'lay16_46', 'lay16_22', 'lay16_41', 'lay16_8', 'lay16_59', 'lay16_96', 'lay16_17', 'lay16_34', 'lay16_73'] filter: 1.0
Solving MIP for lay16_50, [-15.547135353088379,15.224973678588867]=>[-15.547135353088379,-1e-05] (-1,-1; 15,-1), time: 0.5119s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_35, [-20.172351837158203,13.141438484191895]=>[-20.172351837158203,-1e-05] (-1,-1; 15,-1), time: 0.5264s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_9, [-19.849504470825195,13.437270164489746]=>[-19.849504470825195,-1e-05] (-1,-1; 15,-1), time: 0.5308s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_58, [-16.08320426940918,14.413044929504395]=>[-16.08320426940918,-1e-05] (-1,-1; 15,-1), time: 0.5566s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_68, [-19.797706604003906,17.347118377685547]=>[-19.797706604003906,-1e-05] (-1,-1; 15,-1), time: 0.5619s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_67, [-19.966899871826172,14.462494850158691]=>[-19.966899871826172,-1e-05] (-1,-1; 15,-1), time: 0.5672s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_98, [-21.438703536987305,12.317267417907715]=>[-21.438703536987305,-1e-05] (-1,-1; 15,-1), time: 0.5955s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_82, [-18.436140060424805,12.983894348144531]=>[-18.436140060424805,-1e-05] (-1,-1; 15,-1), time: 0.5998s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_24, [-20.22709083557129,11.493035316467285]=>[-20.22709083557129,-1e-05] (-1,-1; 15,-1), time: 0.4411s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_51, [-19.064842224121094,16.497150421142578]=>[-19.064842224121094,-1e-05] (-1,-1; 15,-1), time: 0.5304s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_56, [-18.343889236450195,9.237754821777344]=>[-18.343889236450195,-1e-05] (-1,-1; 15,-1), time: 0.4842s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_25, [-16.36273956298828,17.93279457092285]=>[1e-05,17.93279457092285] (15,-1; -1,-1), time: 2.0166s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_14, [-16.846590042114258,18.729808807373047]=>[-1.749799669992316,-1e-05] (9,-1; 15,-1), time: 15.5529s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_60, [-17.810808181762695,14.376617431640625]=>[1e-05,1.22541679811673] (15,-1; 9,-1), time: 28.4188s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_76, [-18.996761322021484,15.336481094360352]=>[-1.6382533866883526,0.4122069311102518] (9,-1; 9,-1), time: 30.0094s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_77, [-19.535993576049805,14.880988121032715]=>[-0.8987621709027271,0.5708908674573926] (9,-1; 9,-1), time: 30.0078s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_37, [-18.3884220123291,16.816970825195312]=>[-0.5117390837765453,0.7980809813309456] (9,-1; 9,-1), time: 30.0103s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_49, [-19.261451721191406,18.73167610168457]=>[-0.6084279109606352,1.8739832700679853] (9,-1; 9,-1), time: 30.0213s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_10, [-14.973725318908691,13.022377014160156]=>[-1.2238951096353188,0.08392413890679282] (9,-1; 9,-1), time: 30.0260s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_54, [-18.300228118896484,15.329691886901855]=>[-0.007009803373400434,1.5994571163183884] (9,-1; 9,-1), time: 30.0387s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_63, [-15.99526309967041,14.593375205993652]=>[-15.99526309967041,-1e-05] (-1,-1; 15,-1), time: 0.4334s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_16, [-18.86332893371582,11.792229652404785]=>[-18.86332893371582,-1e-05] (-1,-1; 15,-1), time: 0.4206s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_72, [-20.053041458129883,14.267533302307129]=>[-0.5747560707162614,1.1297454735256804] (9,-1; 9,-1), time: 30.0051s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_6, [-18.692298889160156,12.74057388305664]=>[-18.692298889160156,-1e-05] (-1,-1; 15,-1), time: 0.5248s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_13, [-16.441911697387695,14.038605690002441]=>[-0.371764639241431,0.5619827505922143] (9,-1; 9,-1), time: 30.0060s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_42, [-19.882457733154297,13.983901977539062]=>[-0.989890792880095,0.008791849413319116] (9,-1; 9,-1), time: 30.0064s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_11, [-16.972341537475586,17.093738555908203]=>[-0.8518000722748429,0.0687663762289507] (9,-1; 9,-1), time: 30.0053s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_80, [-18.514530181884766,14.996268272399902]=>[-1.294190685556084,0.21259803092318813] (9,-1; 9,-1), time: 30.0078s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_19, [-20.073816299438477,16.93979263305664]=>[-1.2972118327253197,0.3244540086469628] (9,-1; 9,-1), time: 30.0131s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_15, [-22.701335906982422,25.666908264160156]=>[1e-05,25.666908264160156] (15,-1; -1,-1), time: 0.4515s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_43, [-21.359699249267578,23.039920806884766]=>[1e-05,23.039920806884766] (15,-1; -1,-1), time: 0.4614s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_69, [-17.29725456237793,15.588926315307617]=>[-0.9461895954255471,0.5457827484602484] (9,-1; 9,-1), time: 30.0059s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_74, [-15.908331871032715,18.73265266418457]=>[1e-05,18.73265266418457] (15,-1; -1,-1), time: 0.4216s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_45, [-19.966083526611328,20.158252716064453]=>[1e-05,20.158252716064453] (15,-1; -1,-1), time: 0.4984s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_23, [-18.976972579956055,20.289491653442383]=>[1e-05,20.289491653442383] (15,-1; -1,-1), time: 0.4797s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_65, [-16.521581649780273,18.839937210083008]=>[-1.1369716731797723,0.48828104617211365] (9,-1; 9,-1), time: 30.0572s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_27, [-19.83100128173828,15.980648040771484]=>[-19.83100128173828,-1e-05] (-1,-1; 15,-1), time: 0.9065s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_91, [-23.903743743896484,22.968772888183594]=>[1e-05,3.0592646741925833] (15,-1; 9,-1), time: 15.4701s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_71, [-20.446332931518555,17.53318977355957]=>[-1.7246565320772247,0.6381299074714752] (9,-1; 9,-1), time: 30.0123s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_57, [-20.005666732788086,15.790191650390625]=>[1e-05,1.8103421073644463] (15,-1; 9,-1), time: 15.4995s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_5, [-18.62912368774414,14.385743141174316]=>[-0.8519243020243151,0.594625600599324] (9,-1; 9,-1), time: 30.0095s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_84, [-18.101215362548828,17.728511810302734]=>[-0.9998865482270738,0.8760084494032698] (9,-1; 9,-1), time: 30.0077s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_33, [-13.110976219177246,15.337899208068848]=>[-1.0069092122692491,0.05312863241016983] (9,-1; 9,-1), time: 30.0038s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_53, [-18.087907791137695,16.068254470825195]=>[-0.6413328349467081,1.227524942780013] (9,-1; 9,-1), time: 30.0261s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_64, [-20.712020874023438,19.18149757385254]=>[-0.11944481728242243,1.3516714531550633] (9,-1; 9,-1), time: 30.0044s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_44, [-22.47296142578125,19.406492233276367]=>[-0.7381980670801328,0.8770861093407609] (9,-1; 9,-1), time: 30.0142s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_2, [-17.771530151367188,16.951478958129883]=>[-1.3779801585641713,0.3196692890657647] (9,-1; 9,-1), time: 30.0043s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_79, [-19.368976593017578,16.864421844482422]=>[-1.0405592040330398,0.9388050916811955] (9,-1; 9,-1), time: 30.0046s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_66, [-18.143367767333984,20.117467880249023]=>[-0.050695986172712246,1.8446889934963493] (9,-1; 9,-1), time: 30.0202s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_3, [-19.231035232543945,14.958202362060547]=>[-19.231035232543945,-1e-05] (-1,-1; 15,-1), time: 0.4912s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_36, [-23.15778923034668,22.056325912475586]=>[-0.03735650882356865,2.3663026444617183] (9,-1; 9,-1), time: 30.1296s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_87, [-20.070362091064453,17.4427547454834]=>[-1.2942971957895988,0.14167451884109494] (9,-1; 9,-1), time: 30.0091s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_86, [-17.727935791015625,15.412491798400879]=>[-1.268754094298577,0.08397192520011311] (9,-1; 9,-1), time: 30.0121s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_47, [-17.265512466430664,16.647321701049805]=>[-0.6794923466150402,0.7396847711442321] (9,-1; 9,-1), time: 30.0052s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_81, [-19.768980026245117,14.682707786560059]=>[-19.768980026245117,-1e-05] (-1,-1; 15,-1), time: 8.3825s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_88, [-17.734289169311523,16.730527877807617]=>[1e-05,1.5430066122295305] (15,-1; 9,-1), time: 15.5042s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_78, [-14.883934020996094,15.511956214904785]=>[-0.6585910428457178,0.6202124056490721] (9,-1; 9,-1), time: 30.0173s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_61, [-16.882192611694336,18.790767669677734]=>[-0.23979981597703057,1.5703556227587057] (9,-1; 9,-1), time: 30.1146s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_39, [-19.744335174560547,17.596548080444336]=>[-19.744335174560547,-1e-05] (-1,-1; 15,-1), time: 0.4625s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_85, [-17.71695327758789,10.2451753616333]=>[-17.71695327758789,-1e-05] (-1,-1; 15,-1), time: 0.4272s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_40, [-19.448789596557617,19.14476776123047]=>[1e-05,2.8282630312476753] (15,-1; 9,-1), time: 15.4547s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_95, [-18.022823333740234,15.55196475982666]=>[-0.9101337906812613,0.310406949434147] (9,-1; 9,-1), time: 30.0278s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_1, [-22.321613311767578,14.318853378295898]=>[-22.321613311767578,-1e-05] (-1,-1; 15,-1), time: 0.4218s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_29, [-20.89354133605957,22.611679077148438]=>[-1.629924418613997,-1e-05] (9,-1; 15,-1), time: 15.8973s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_89, [-23.357250213623047,15.129152297973633]=>[-23.357250213623047,-1e-05] (-1,-1; 15,-1), time: 0.4608s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_7, [-21.69435691833496,10.133650779724121]=>[-21.69435691833496,-1e-05] (-1,-1; 15,-1), time: 0.4566s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_30, [-16.76093864440918,16.527484893798828]=>[1e-05,1.5213235155413782] (15,-1; 9,-1), time: 15.4535s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_55, [-21.026994705200195,11.79931354522705]=>[-21.026994705200195,-1e-05] (-1,-1; 15,-1), time: 11.1119s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_0, [-19.92105484008789,12.27987003326416]=>[-19.92105484008789,-1e-05] (-1,-1; 15,-1), time: 0.4939s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_21, [-19.737316131591797,15.600068092346191]=>[-0.5576180961518872,0.5107209664208107] (9,-1; 9,-1), time: 30.0045s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_52, [-19.15950584411621,12.958852767944336]=>[-0.4596990304359685,0.4028283131927638] (9,-1; 9,-1), time: 30.0159s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_75, [-14.717781066894531,10.565033912658691]=>[-0.6561749346303757,0.12297882482158852] (9,-1; 9,-1), time: 30.0170s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_97, [-19.03662872314453,11.045763969421387]=>[-19.03662872314453,-1e-05] (-1,-1; 15,-1), time: 0.5253s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_32, [-13.568578720092773,14.353643417358398]=>[-0.2117113007031626,0.9411809303538446] (9,-1; 9,-1), time: 30.0062s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_20, [-14.595489501953125,14.889841079711914]=>[-0.24792659544870405,1.1214298671150393] (9,-1; 9,-1), time: 30.0335s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_38, [-17.733795166015625,8.488255500793457]=>[-0.7692655951808952,0.11383349970014803] (9,-1; 9,-1), time: 30.0077s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_90, [-15.898316383361816,15.692085266113281]=>[-0.7377847369393855,0.4412141018496693] (9,-1; 9,-1), time: 30.0057s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_92, [-17.636489868164062,17.40560531616211]=>[-0.9633039400512247,0.2201274956159971] (9,-1; 9,-1), time: 30.0054s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_22, [-17.90159034729004,11.531569480895996]=>[-17.90159034729004,-1e-05] (-1,-1; 15,-1), time: 0.4402s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_62, [-16.314857482910156,14.306475639343262]=>[-0.027782372671518042,1.1211064717215657] (9,-1; 9,-1), time: 30.0162s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_8, [-19.553653717041016,10.248649597167969]=>[-19.553653717041016,-1e-05] (-1,-1; 15,-1), time: 0.4128s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_59, [-20.775638580322266,11.110917091369629]=>[-20.775638580322266,-1e-05] (-1,-1; 15,-1), time: 0.4365s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_93, [-17.492168426513672,13.912975311279297]=>[-17.492168426513672,-1e-05] (-1,-1; 15,-1), time: 7.7321s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_46, [-18.118227005004883,12.284332275390625]=>[-18.118227005004883,-1e-05] (-1,-1; 15,-1), time: 8.7571s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_48, [-19.295021057128906,12.6873197555542]=>[-0.8225636288508207,0.147823106732569] (9,-1; 9,-1), time: 30.0168s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_99, [-18.153785705566406,17.04610252380371]=>[-1.474075574467859,0.0355972699797857] (9,-1; 9,-1), time: 30.0230s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_18, [-22.741270065307617,9.617961883544922]=>[-0.6899756885212555,0.12542542223932754] (9,-1; 9,-1), time: 30.0063s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_70, [-19.320695877075195,11.653721809387207]=>[-0.7938696161235457,0.34023023763162247] (9,-1; 9,-1), time: 30.0045s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_94, [-15.287086486816406,11.083106994628906]=>[-0.19120795660614232,0.6294031482627434] (9,-1; 9,-1), time: 30.0075s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_34, [-17.297832489013672,18.333240509033203]=>[-1.7077196777384418,-1e-05] (9,-1; 15,-1), time: 15.4135s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_4, [-17.981861114501953,18.06243896484375]=>[-0.6443125251595315,0.526852295746759] (9,-1; 9,-1), time: 30.1783s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_28, [-18.998991012573242,12.149882316589355]=>[-1.077883041663703,0.0057644607976781795] (9,-1; 9,-1), time: 30.0176s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_26, [-17.07251739501953,12.950011253356934]=>[-0.21962508623806415,0.8649813307896878] (9,-1; 9,-1), time: 30.0045s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_31, [-21.99159049987793,19.61686897277832]=>[-0.45140501053468657,0.7616411456551244] (9,-1; 9,-1), time: 30.0097s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_83, [-20.633798599243164,13.492887496948242]=>[-1.019775552882619,0.2680323093841724] (9,-1; 9,-1), time: 30.0285s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_12, [-16.769046783447266,12.836082458496094]=>[-0.3136394233805342,0.5137916241336973] (9,-1; 9,-1), time: 30.0041s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_41, [-16.812387466430664,16.133317947387695]=>[-0.8675708101747047,0.31412556967374583] (9,-1; 9,-1), time: 30.0141s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_96, [-17.42898941040039,12.088760375976562]=>[-0.8592925990756923,0.08602228636739619] (9,-1; 9,-1), time: 30.0074s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_17, [-15.292113304138184,17.11402130126953]=>[-0.538053563039122,0.48916844451658914] (9,-1; 9,-1), time: 30.0041s, #vars: 2075, #constrs: 1535, improved: True
Solving MIP for lay16_73, [-16.55390167236328,13.128104209899902]=>[-1.0092358024809593,0.07768453315038078] (9,-1; 9,-1), time: 30.0941s, #vars: 2075, #constrs: 1535, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
best_l after optimization: -19.400081634521484 with beta sum per layer: []
alpha/beta optimization time: 17.519283533096313
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.2981,  2.9740,  1.9582,  3.1088,  2.9074, -0.3311, -0.9126,  4.3860,
          3.0114]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 1233.0587158203125, ub improved 1365.5269775390625, time 130.6469
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([10])
MIP finished with 509.20770359039307s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: -22.101686477661133 with beta sum per layer: []
alpha/beta optimization time: 12.752351760864258
alpha-CROWN with intermediate bounds improved by MIP: tensor([[ 2.4889,  3.2431,  2.3025,  3.3179,  3.3011, -0.0868, -0.5061,  4.7150,
          3.3262]], device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[ 2.4889,  3.2431,  2.3025,  3.3179,  3.3011, -0.0868, -0.5061,  4.7150,
          0.0000,  3.3262]], device='cuda:0') min: tensor(-0.5061, device='cuda:0')
time threshold left for bab: 541.8579912185669
##### [0:553] Tested against 5 ######
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.08734378218650818 with beta sum per layer: []
alpha/beta optimization time: 3.137777090072632
alpha-CROWN with fixed intermediate bounds: tensor([[-0.0873]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.08734378218650818
layer 0 size torch.Size([100]) unstable 26
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 34
layer 3 size torch.Size([100]) unstable 35
layer 4 size torch.Size([100]) unstable 34
layer 5 size torch.Size([100]) unstable 44
layer 6 size torch.Size([100]) unstable 44
layer 7 size torch.Size([100]) unstable 55
-----------------
# of unstable neurons: 300
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 49] 
split level 1: [5, 15] 
split level 2: [5, 27] 
split level 3: [7, 72] 
split level 4: [5, 47] 
split level 5: [7, 5] 
regular batch size: 2*32, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -60.44190216064453 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.019234180450439453
This batch time : update_bounds func: 0.0423	 prepare: 0.0112	 bound: 0.0197	 transfer: 0.0012	 finalize: 0.0101
Accumulated time: update_bounds func: 0.0423	 prepare: 0.0112	 bound: 0.0197	 transfer: 0.0012	 finalize: 0.0101
batch bounding time:  0.04236555099487305
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.1271	 pickout: 0.0017	 decision: 0.0686	 get_bound: 0.0568	 add_domain: 0.0001
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 3.7411792278289795

Image 553 label 5 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 3.824583053588867
553 1.0000000116860974e-07
##### [0:553] Tested against 6 ######
Model prediction is: tensor([[-0.3976, -1.4053,  0.1465,  0.1728, -3.2297,  2.8400,  0.6845, -2.5296,
          7.4579, -1.0830]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
setting alpha for layer /28 start_node /29
setting alpha for layer /28 start_node /31
setting alpha for layer /28 start_node /33
setting alpha for layer /28 start_node /35
setting alpha for layer /28 start_node /37
setting alpha for layer /28 start_node /39
setting alpha for layer /28 start_node /41
not setting layer /28 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /30 start_node /31
setting alpha for layer /30 start_node /33
setting alpha for layer /30 start_node /35
setting alpha for layer /30 start_node /37
setting alpha for layer /30 start_node /39
setting alpha for layer /30 start_node /41
not setting layer /30 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /32 start_node /33
setting alpha for layer /32 start_node /35
setting alpha for layer /32 start_node /37
setting alpha for layer /32 start_node /39
setting alpha for layer /32 start_node /41
not setting layer /32 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /34 start_node /35
setting alpha for layer /34 start_node /37
setting alpha for layer /34 start_node /39
setting alpha for layer /34 start_node /41
not setting layer /34 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /36 start_node /37
setting alpha for layer /36 start_node /39
setting alpha for layer /36 start_node /41
not setting layer /36 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /38 start_node /39
setting alpha for layer /38 start_node /41
not setting layer /38 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
setting alpha for layer /40 start_node /41
not setting layer /40 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
not setting layer /42 start_node /43 because shape mismatch (torch.Size([2, 1, 1, 100]) != torch.Size([2, 9, 1, 100]))
0 /27 torch.Size([1, 100])
1 /29 torch.Size([1, 100])
2 /31 torch.Size([1, 100])
3 /33 torch.Size([1, 100])
4 /35 torch.Size([1, 100])
5 /37 torch.Size([1, 100])
6 /39 torch.Size([1, 100])
7 /41 torch.Size([1, 100])
best_l after optimization: 0.5060928463935852 with beta sum per layer: []
alpha/beta optimization time: 2.480755090713501
alpha-CROWN with fixed intermediate bounds: tensor([[-0.5061]], device='cuda:0', grad_fn=<AsStridedBackward>) None
-0.5060928463935852
layer 0 size torch.Size([100]) unstable 26
layer 1 size torch.Size([100]) unstable 28
layer 2 size torch.Size([100]) unstable 34
layer 3 size torch.Size([100]) unstable 35
layer 4 size torch.Size([100]) unstable 34
layer 5 size torch.Size([100]) unstable 44
layer 6 size torch.Size([100]) unstable 44
layer 7 size torch.Size([100]) unstable 55
-----------------
# of unstable neurons: 300
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 49] 
split level 1: [5, 15] 
split level 2: [7, 84] 
split level 3: [7, 5] 
split level 4: [7, 71] 
split level 5: [0, 82] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: -39.030601501464844 with beta sum per layer: [0.18639297783374786, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.5296621322631836
This batch time : update_bounds func: 0.5520	 prepare: 0.0110	 bound: 0.5301	 transfer: 0.0012	 finalize: 0.0095
Accumulated time: update_bounds func: 0.5943	 prepare: 0.0221	 bound: 0.5498	 transfer: 0.0012	 finalize: 0.0196
batch bounding time:  0.5522322654724121
Current worst splitting domains [lb, ub] (depth):
[-0.23397,   inf] (7), 
length of domains: 1
Total time: 0.6359	 pickout: 0.0015	 decision: 0.0677	 get_bound: 0.5665	 add_domain: 0.0002
Current lb:-0.2339743673801422
64 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.1673762798309326

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [4, 23] 
split level 1: [3, 63] 
split level 2: [4, 22] 
split level 3: [7, 77] 
split level 4: [7, 76] 
split level 5: [0, 68] 
regular batch size: 2*32, diving batch size 1*0
best_l after optimization: -51.48614501953125 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.5362181663513184
This batch time : update_bounds func: 0.5625	 prepare: 0.0147	 bound: 0.5368	 transfer: 0.0012	 finalize: 0.0096
Accumulated time: update_bounds func: 1.1567	 prepare: 0.0369	 bound: 1.0866	 transfer: 0.0012	 finalize: 0.0291
batch bounding time:  0.5627200603485107
Current worst splitting domains [lb, ub] (depth):
[-0.11652,   inf] (14), [-0.06643,   inf] (14), 
length of domains: 2
Total time: 0.6481	 pickout: 0.0016	 decision: 0.0684	 get_bound: 0.5779	 add_domain: 0.0003
Current lb:-0.1165158599615097
128 neurons visited
0 diving domains visited
Global ub: inf, batch ub: inf
Cumulative time: 3.8162858486175537

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([2, 100]) pre split depth:  5
batch:  torch.Size([2, 100]) post split depth:  5
splitting decisions: 
split level 0: [5, 98] [5, 98] 
split level 1: [5, 27] [5, 27] 
split level 2: [0, 84] [0, 84] 
split level 3: [7, 69] [7, 69] 
split level 4: [1, 45] [1, 45] 
regular batch size: 2*32, diving batch size 1*0

all verified at 0th iter
best_l after optimization: -56.63243103027344 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.019524812698364258
This batch time : update_bounds func: 0.0466	 prepare: 0.0157	 bound: 0.0200	 transfer: 0.0012	 finalize: 0.0096
Accumulated time: update_bounds func: 1.2034	 prepare: 0.0525	 bound: 1.1066	 transfer: 0.0012	 finalize: 0.0387
batch bounding time:  0.046742916107177734
Current worst splitting domains [lb, ub] (depth):

length of domains: 0
Total time: 0.1217	 pickout: 0.0018	 decision: 0.0583	 get_bound: 0.0615	 add_domain: 0.0000
No domains left, verification finished!
Global ub: inf, batch ub: inf
Cumulative time: 3.9387598037719727

Image 553 label 6 verification end, final lower bound 1.0000000116860974e-07, upper bound inf, time: 4.0201497077941895
553 1.0000000116860974e-07
##### [0:553] Tested against 3 ######
Initial alpha-CROWN verified for label 3 with bound 3.3178939819335938
Image 553 label 3 verification end, final lower bound 3.3178939819335938, upper bound inf, time: 0.00039839744567871094
553 3.3178939819335938
##### [0:553] Tested against 0 ######
Initial alpha-CROWN verified for label 0 with bound 2.488884925842285
Image 553 label 0 verification end, final lower bound 2.488884925842285, upper bound inf, time: 0.0003871917724609375
553 2.488884925842285
##### [0:553] Tested against 9 ######
Initial alpha-CROWN verified for label 9 with bound 3.326247453689575
Image 553 label 9 verification end, final lower bound 3.326247453689575, upper bound inf, time: 0.0003998279571533203
553 3.326247453689575
##### [0:553] Tested against 2 ######
Initial alpha-CROWN verified for label 2 with bound 2.3024728298187256
Image 553 label 2 verification end, final lower bound 2.3024728298187256, upper bound inf, time: 0.00038361549377441406
553 2.3024728298187256
##### [0:553] Tested against 1 ######
Initial alpha-CROWN verified for label 1 with bound 3.2430803775787354
Image 553 label 1 verification end, final lower bound 3.2430803775787354, upper bound inf, time: 0.0003821849822998047
553 3.2430803775787354
##### [0:553] Tested against 7 ######
Initial alpha-CROWN verified for label 7 with bound 4.714951515197754
Image 553 label 7 verification end, final lower bound 4.714951515197754, upper bound inf, time: 0.00039076805114746094
553 4.714951515197754
##### [0:553] Tested against 4 ######
Initial alpha-CROWN verified for label 4 with bound 3.301053762435913
Image 553 label 4 verification end, final lower bound 3.301053762435913, upper bound inf, time: 0.0003871917724609375
553 3.301053762435913
##### [0:553] Tested against 8 ######
groundtruth label, skip!
Result: image 553 verification success (with branch and bound)!
Wall time: 547.0908164978027

number of correctly classified examples: 1
incorrectly classified idx (total 0): []
attack success idx (total 0): []
verification success idx (total 1): [553]
verification failure idx (total 0): []
final verified acc: 100.0%[1]
verifier is called on 1 examples.
total verified: 1
mean time [cnt:1] (excluding attack success): 545.9894807338715
