Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: null
  root_path: ''
model:
  path: mnist_9_100_nat.pth
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_9_100
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 53
  end: 54
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 14:00:22 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
saving results to Verified_ret_[mnist_9_100]_start=53_end=54_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_multiclass=allclass_domain.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-198.43608093, -282.37454224, -298.01736450, -275.85656738,
         -333.24005127, -268.87960815, -360.65878296, -271.77770996,
         -317.30407715]], device='cuda:0') None
best_l after optimization: -1345.814453125 with beta sum per layer: []
alpha/beta optimization time: 11.001207113265991
initial alpha-CROWN bounds: tensor([[ -88.89543152, -151.17634583, -161.79132080, -149.01881409,
         -171.72929382, -131.35853577, -181.01005554, -146.41349792,
         -164.42121887]], device='cuda:0')
Worst class: (+ rhs) -181.0100555419922
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.0065000057220458984, initialization=uniform, GAMA=False
model output: tensor([[-0.80867857, -2.37042332, -2.23100662,  1.94248581, -3.40118361,
          6.53264761,  0.59598207, -3.86019969,  2.94964743,  1.43447447]],
       device='cuda:0')
pgd prediction: tensor([[[-0.79266459, -1.99811590, -1.72904444,  1.54812908, -2.49472952,
           4.95486498,  0.12718776, -2.94377923,  2.60641289,  1.52581406],
         [-0.79266459, -1.99811590, -1.72904444,  1.54812908, -2.49472952,
           4.95486498,  0.12718776, -2.94377923,  2.60641289,  1.52581406]]],
       device='cuda:0')
pgd attack margin tensor([[[5.74752951, 6.95298100, 6.68390942, 3.40673590, 7.44959450,
          4.82767725, 7.89864445, 2.34845209, 3.42905092]]], device='cuda:0')
number of violation:  0
Attack finished in 0.7094 seconds.
pgd attack failed
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [40]; unstable size 40; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [61]; unstable size 61; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 90 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [90]; unstable size 90; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_85', 'lay4_88', 'lay4_16', 'lay4_96', 'lay4_49', 'lay4_7', 'lay4_78', 'lay4_90', 'lay4_86', 'lay4_23', 'lay4_75', 'lay4_97', 'lay4_0', 'lay4_53', 'lay4_82', 'lay4_28', 'lay4_18', 'lay4_1', 'lay4_40', 'lay4_10', 'lay4_95', 'lay4_3', 'lay4_99', 'lay4_43', 'lay4_20', 'lay4_21', 'lay4_67', 'lay4_42', 'lay4_11', 'lay4_70', 'lay4_24', 'lay4_60', 'lay4_38', 'lay4_39', 'lay4_52', 'lay4_79', 'lay4_83', 'lay4_5', 'lay4_98', 'lay4_59', 'lay4_37', 'lay4_50', 'lay4_54', 'lay4_33', 'lay4_65', 'lay4_41', 'lay4_6', 'lay4_8', 'lay4_77', 'lay4_30', 'lay4_63', 'lay4_48', 'lay4_62', 'lay4_87', 'lay4_72', 'lay4_45', 'lay4_74', 'lay4_51', 'lay4_26', 'lay4_47', 'lay4_9'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:701: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
Solving MIP for lay4_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6244s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_28, [-inf,inf]=>[-0.7854000865782407,0.8693745039017642] (2,-1; 2,-1), time: 0.8661s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_0, [-inf,inf]=>[-1.59272656285563,0.1934103996380903] (2,-1; 2,-1), time: 1.2483s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1971s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[-0.9663146111219819,0.4088845089973859] (2,-1; 2,-1), time: 2.1929s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.7320323771356316,0.20926501559626445] (2,-1; 2,-1), time: 2.2178s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_96, [-inf,inf]=>[-1.3064789275147144,0.029178628140175664] (2,-1; 2,-1), time: 2.3010s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_23, [-inf,inf]=>[-1.2930640480651685,0.10070876261465367] (2,-1; 2,-1), time: 2.4086s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_90, [-inf,inf]=>[-2.0559345081358504,0.08294104383426852] (2,-1; 2,-1), time: 2.4133s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4426s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2362s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1769s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3901s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1854s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2355s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.1759800598572397,0.9983977774895048] (2,-1; 2,-1), time: 2.8536s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.7257719210974034,0.4041026959700015] (2,-1; 2,-1), time: 2.8776s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1946s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_82, [-inf,inf]=>[-0.29714421293126053,0.9420685060269219] (2,-1; 2,-1), time: 3.0394s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2010s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.4216567931465183,0.8954079280522211] (2,-1; 2,-1), time: 3.0746s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2074s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4112s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[-0.8006930509762039,0.27356356979701113] (2,-1; 2,-1), time: 3.2723s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[-0.22473260284431823,0.5618070177796105] (2,-1; 2,-1), time: 3.4582s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1885s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2873s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5872s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_1, [-inf,inf]=>[-0.4511916469521564,0.35647235635003227] (2,-1; 2,-1), time: 2.9778s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_78, [-inf,inf]=>[-0.5562529274551552,0.23135354090748447] (2,-1; 2,-1), time: 4.2936s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_10, [-inf,inf]=>[-0.9351432689074615,0.16369367744507946] (2,-1; 2,-1), time: 3.1535s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[-0.49067065318256203,0.8405199928906647] (2,-1; 2,-1), time: 1.6769s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[-0.5335072068737822,0.31652896840995903] (2,-1; 2,-1), time: 4.2375s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_67, [-inf,inf]=>[-0.9949536385404496,0.07786291278767771] (2,-1; 2,-1), time: 2.5049s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_20, [-inf,inf]=>[-0.7989367093731998,0.02211750722123187] (2,-1; 2,-1), time: 2.8296s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_37, [-inf,inf]=>[-0.061966151747760975,1.1330271382893309] (2,-1; 2,-1), time: 2.0179s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-0.8930498953882683,0.3861625911829643] (2,-1; 2,-1), time: 2.0242s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1925s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_77, [-inf,inf]=>[1e-05,1.784082057584048] (15,-1; 2,-1), time: 0.9528s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_95, [-inf,inf]=>[-0.2590098351453943,0.6296052721473429] (2,-1; 2,-1), time: 3.6477s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1814s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-0.954906357325416,0.40920325238781696] (2,-1; 2,-1), time: 2.9766s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-0.6539855706582938,0.6638167499757166] (2,-1; 2,-1), time: 2.6939s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2001s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_21, [-inf,inf]=>[-0.6688058140660241,0.560516777962351] (2,-1; 2,-1), time: 3.6217s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1886s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1628s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.7228504296453314,0.2354060304136616] (2,-1; 2,-1), time: 3.4977s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_6, [-inf,inf]=>[1e-05,1.2202272626420012] (15,-1; 2,-1), time: 1.7691s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7357s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_50, [-inf,inf]=>[-0.023988290938549556,0.9547776840589238] (2,-1; 2,-1), time: 3.1629s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_65, [-inf,inf]=>[-0.5935845582064629,0.3135817870406853] (2,-1; 2,-1), time: 2.8300s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.4310441785762677,0.45629862580253766] (2,-1; 2,-1), time: 1.5357s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-1.01983732456754,0.3330264169271158] (2,-1; 2,-1), time: 3.3293s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[1e-05,1.1459247932251233] (15,-1; 2,-1), time: 2.3028s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-0.8530652286912168,0.3169094007516789] (2,-1; 2,-1), time: 3.2306s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.5595603048469746,0.2186316066421664] (2,-1; 2,-1), time: 3.4423s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_9, [-inf,inf]=>[-0.28563118951193406,0.5902440592351863] (2,-1; 2,-1), time: 2.5365s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-0.26918817466632244,0.5325644861450219] (2,-1; 2,-1), time: 2.9317s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_62, [-inf,inf]=>[1e-05,1.0717150863628437] (15,-1; 2,-1), time: 3.2784s, #vars: 1065, #constrs: 320, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[1e-05,0.7648119817676566] (15,-1; 2,-1), time: 3.1530s, #vars: 1065, #constrs: 320, improved: True
PGD done for relu layer 2
MIP improved 61 nodes out of 61 unstable nodes, lb improved 15.387578010559082, ub improved 16.19501304626465, time 10.4260
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_85', 'lay6_30', 'lay6_60', 'lay6_13', 'lay6_91', 'lay6_56', 'lay6_12', 'lay6_1', 'lay6_39', 'lay6_23', 'lay6_61', 'lay6_62', 'lay6_38', 'lay6_90', 'lay6_74', 'lay6_34', 'lay6_64', 'lay6_36', 'lay6_4', 'lay6_42', 'lay6_14', 'lay6_78', 'lay6_51', 'lay6_8', 'lay6_5', 'lay6_87', 'lay6_97', 'lay6_19', 'lay6_50', 'lay6_26', 'lay6_82', 'lay6_9', 'lay6_95', 'lay6_68', 'lay6_33', 'lay6_27', 'lay6_32', 'lay6_6', 'lay6_99', 'lay6_96', 'lay6_3', 'lay6_48', 'lay6_21', 'lay6_46', 'lay6_75', 'lay6_71', 'lay6_28', 'lay6_40', 'lay6_88', 'lay6_25', 'lay6_72', 'lay6_35', 'lay6_22', 'lay6_0', 'lay6_83', 'lay6_93', 'lay6_20', 'lay6_77', 'lay6_15', 'lay6_43', 'lay6_66', 'lay6_80', 'lay6_67', 'lay6_24', 'lay6_45', 'lay6_81', 'lay6_86', 'lay6_29', 'lay6_10', 'lay6_79', 'lay6_55', 'lay6_11', 'lay6_98', 'lay6_63', 'lay6_59', 'lay6_7', 'lay6_54', 'lay6_73', 'lay6_69', 'lay6_44', 'lay6_52', 'lay6_53', 'lay6_76', 'lay6_94', 'lay6_41', 'lay6_18', 'lay6_58', 'lay6_84'] filter: 1.0
Solving MIP for lay6_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1748s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1827s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2953s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1727s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5005s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5935s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1936s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2156s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1935s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7529s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.8249s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.5833s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.6792s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.3473s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.0247s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[-0.7131353009065762,0.39443630803160273] (2,-1; 2,-1), time: 7.6549s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.1742s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5904s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.5804476684424439,0.4528695023408233] (2,-1; 2,-1), time: 10.0658s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.3661075733842192,0.34470556566420313] (2,-1; 2,-1), time: 11.4871s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2345s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1741s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4448s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1775s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1751s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9184s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5076s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[-0.48079001276090577,0.27095285130584434] (2,-1; 2,-1), time: 17.0245s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-0.2714383534033571,0.2636839823626589] (2,-1; 2,-1), time: 14.8392s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_90, [-inf,inf]=>[-0.755956016058529,0.15363865522995113] (9,-1; 2,-1), time: 18.4429s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9793s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7638s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[-0.35916615331505325,0.5419801475037654] (2,-1; 2,-1), time: 14.8504s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-0.4180133050717962,0.0842416630542015] (2,-1; 2,-1), time: 9.9534s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-0.7473080920972838,0.1308655906480261] (2,-1; 9,-1), time: 21.9318s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[-0.2126583696673869,0.3897250267537569] (2,-1; 9,-1), time: 20.1810s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.8752s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_21, [-inf,inf]=>[-0.7663224492130681,0.25913858364723075] (2,-1; 2,-1), time: 8.1270s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.5315914508594567,0.13101250775876] (2,-1; 9,-1), time: 20.1833s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-0.28642714059216134,0.4162176625024224] (2,-1; 9,-1), time: 23.9488s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_14, [-inf,inf]=>[-0.6845436775630583,0.03799416791603657] (9,-1; 2,-1), time: 24.8949s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_93, [-inf,inf]=>[1e-05,1.481998527260223] (15,-1; 2,-1), time: 2.8626s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1721s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[1e-05,1.1348715532999678] (15,-1; 2,-1), time: 6.8342s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[-0.6857709188852728,0.04116792216693974] (2,-1; 9,-1), time: 21.2948s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1731s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2275s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7702s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3005s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1669s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5936s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.30989380642350134,0.24475556455427727] (9,-1; 9,-1), time: 30.0263s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.6133981251860912,0.09578267752421245] (9,-1; 9,-1), time: 30.0252s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2162s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-0.6743377013144268,0.2800188097244581] (2,-1; 2,-1), time: 11.1290s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5653s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1779s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_6, [-inf,inf]=>[-0.5142238853324959,0.19894387732546753] (9,-1; 2,-1), time: 19.2506s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1722s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[1e-05,1.117187870184778] (15,-1; 2,-1), time: 4.5798s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_25, [-inf,inf]=>[-0.3193712661445898,0.412205136241478] (2,-1; 2,-1), time: 12.4730s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.04212176670603516,0.7780962826857645] (2,-1; 9,-1), time: 27.0191s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-0.3755314145524645,0.22797264905439923] (2,-1; 9,-1), time: 19.2646s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1798s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1758s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.2845264307031047,0.23966464744268212] (2,-1; 9,-1), time: 22.7424s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_59, [-inf,inf]=>[-0.008515994582970702,0.717032509884904] (2,-1; 2,-1), time: 15.0223s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_52, [-inf,inf]=>[1e-05,0.8455543033999399] (15,-1; 2,-1), time: 4.0554s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-0.3194114051263368,0.30745509502401963] (9,-1; 2,-1), time: 23.1185s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-0.566673139632322,0.030522513433811453] (9,-1; 2,-1), time: 18.7209s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2218s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.33936943816111287,0.21253026884540263] (2,-1; 2,-1), time: 14.7576s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_40, [-inf,inf]=>[-0.5169751032936127,0.007326200194561488] (9,-1; 9,-1), time: 30.0125s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-0.299572130867954,0.2726267743437582] (9,-1; 2,-1), time: 19.9151s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-0.49480167647240986,0.09644261193452018] (9,-1; 2,-1), time: 19.9685s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.8380856669880887] (15,-1; 2,-1), time: 3.2067s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[1e-05,0.6197545290751483] (15,-1; 2,-1), time: 16.1432s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-0.22354980909073685,0.5223968870526764] (2,-1; 9,-1), time: 20.9272s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-0.3903806251134122,0.2510081603159258] (2,-1; 9,-1), time: 29.4019s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[1e-05,1.7353760785687664] (15,-1; 2,-1), time: 3.3996s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_22, [-inf,inf]=>[-0.1863278270523676,0.39994941101797227] (9,-1; 9,-1), time: 30.0091s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_67, [-inf,inf]=>[-0.5682525812405891,0.001691883996431079] (9,-1; 2,-1), time: 27.7197s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[-0.15621164619662037,0.3021997372534425] (9,-1; 9,-1), time: 30.0167s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.23835550943127862,0.3395150084148483] (9,-1; 2,-1), time: 23.0559s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[1e-05,0.6434153963295226] (15,-1; 2,-1), time: 11.8281s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[1e-05,0.914732482822549] (15,-1; 2,-1), time: 13.3856s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_53, [-inf,inf]=>[-0.36509167214857413,0.10490100764534632] (9,-1; 2,-1), time: 19.7549s, #vars: 1235, #constrs: 525, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.025953925866375235,0.6663910355143309] (9,-1; 2,-1), time: 26.6378s, #vars: 1235, #constrs: 525, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 1 has unstable to stable neurons: [(16, -1), (49, -1), (40, -1), (3, -1), (99, -1), (43, -1), (42, -1), (11, -1), (70, -1), (24, -1), (60, -1), (52, -1), (79, -1), (98, -1), (59, -1), (6, 1), (77, 1), (30, 1), (48, -1), (62, 1), (87, -1), (72, -1), (45, -1), (51, -1), (26, 1), (47, -1)]
best_l after optimization: -501.26422119140625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.545357704162598
alpha-CROWN with intermediate bounds by MIP: tensor([[-32.98818588, -55.85081482, -60.18857193, -55.55183029, -64.14229584,
         -48.42745590, -67.21530151, -54.92773056, -61.97201920]],
       device='cuda:0') None
MIP improved 88 nodes out of 88 unstable nodes, lb improved 29.50046157836914, ub improved 43.26084899902344, time 74.2857
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_71', 'lay8_87', 'lay8_59', 'lay8_17', 'lay8_77', 'lay8_75', 'lay8_19', 'lay8_89', 'lay8_28', 'lay8_57', 'lay8_39', 'lay8_33', 'lay8_30', 'lay8_79', 'lay8_20', 'lay8_48', 'lay8_24', 'lay8_16', 'lay8_31', 'lay8_7', 'lay8_34', 'lay8_11', 'lay8_62', 'lay8_41', 'lay8_81', 'lay8_88', 'lay8_25', 'lay8_72', 'lay8_38', 'lay8_3', 'lay8_97', 'lay8_92', 'lay8_0', 'lay8_60', 'lay8_52', 'lay8_69', 'lay8_98', 'lay8_63', 'lay8_22', 'lay8_66', 'lay8_27', 'lay8_40', 'lay8_4', 'lay8_5', 'lay8_65', 'lay8_78', 'lay8_93', 'lay8_2', 'lay8_85', 'lay8_43', 'lay8_6', 'lay8_61', 'lay8_29', 'lay8_14', 'lay8_53', 'lay8_55', 'lay8_50', 'lay8_95', 'lay8_45', 'lay8_21', 'lay8_36', 'lay8_10', 'lay8_58', 'lay8_73', 'lay8_82', 'lay8_15', 'lay8_76', 'lay8_56', 'lay8_9', 'lay8_67', 'lay8_44', 'lay8_90', 'lay8_74', 'lay8_83', 'lay8_94', 'lay8_13', 'lay8_80', 'lay8_54', 'lay8_96', 'lay8_26', 'lay8_68', 'lay8_1', 'lay8_70', 'lay8_91', 'lay8_51', 'lay8_32', 'lay8_46', 'lay8_37', 'lay8_99', 'lay8_42', 'lay8_23', 'lay8_18', 'lay8_35', 'lay8_49', 'lay8_86', 'lay8_64', 'lay8_84', 'lay8_47', 'lay8_8', 'lay8_12'] filter: 1.0
Solving MIP for lay8_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2663s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2726s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3138s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2387s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2347s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7440s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7891s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7971s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3148s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9132s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9588s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0556s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2638s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3608s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7323s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2970s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1722s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2527s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.9609s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4756s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5862s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7718s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3010s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2621s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7221s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[1e-05,1.4003400139072804] (15,-1; 9,-1), time: 15.2614s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[1e-05,1.4435534258181606] (15,-1; 9,-1), time: 15.2976s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2437s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[1e-05,0.5794934700533669] (15,-1; 9,-1), time: 15.7559s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2490s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[1e-05,1.1505131084629756] (15,-1; 9,-1), time: 16.7392s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3005s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.2555683220714475,0.4507175197939484] (9,-1; 9,-1), time: 30.0185s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[-0.3677496745815926,0.25455320191574093] (9,-1; 9,-1), time: 30.0181s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.2418010561062606,0.38629232028404953] (9,-1; 9,-1), time: 30.0212s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-0.1402648912904249,0.5274435501313226] (9,-1; 9,-1), time: 30.0244s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_87, [-inf,inf]=>[-0.4788886823465238,0.47288195981091863] (9,-1; 9,-1), time: 30.0683s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2463s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2409s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7242s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-0.46280682437893145,0.08488483281085468] (9,-1; 9,-1), time: 30.0118s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[-0.3154988786798885,0.26656219796382424] (9,-1; 9,-1), time: 30.0216s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2364s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-0.38440396023394996,0.2523383190585952] (9,-1; 9,-1), time: 30.0135s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2350s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-0.2293520182697455,0.44777999250786366] (9,-1; 9,-1), time: 30.0984s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2401s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-0.6762012089463155,0.034941864198608175] (9,-1; 9,-1), time: 30.0283s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[1e-05,1.5368572055964103] (15,-1; 9,-1), time: 15.5026s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2632s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-0.16937999770557724,0.3054090213975903] (9,-1; 9,-1), time: 30.0179s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2504s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-0.011536859145972255,0.5332413440680825] (9,-1; 9,-1), time: 30.1079s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.6568534308299522,0.0033789741091414895] (9,-1; 9,-1), time: 30.0118s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[1e-05,0.7038849584039227] (15,-1; 9,-1), time: 15.6720s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-0.04551958747228861,0.6188523664354022] (9,-1; 9,-1), time: 30.0136s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.0794953916298766] (15,-1; 9,-1), time: 15.2582s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[1e-05,0.7568929079083073] (15,-1; 9,-1), time: 15.6279s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[1e-05,1.6597773773909454] (15,-1; 9,-1), time: 15.3002s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-0.4016975781237839,0.07358256524623606] (9,-1; 9,-1), time: 30.0212s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[1e-05,0.9625510374730393] (15,-1; 9,-1), time: 20.1000s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[1e-05,2.326860032151466] (15,-1; 2,-1), time: 4.4641s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2432s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[-0.5904249852537984,0.07108347359832404] (9,-1; 9,-1), time: 30.0102s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.6043005291835623,0.034656674787116544] (9,-1; 9,-1), time: 30.0250s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-0.1011871985047049,0.5481638197003288] (9,-1; 9,-1), time: 30.0122s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[1e-05,2.3157040163916056] (15,-1; 9,-1), time: 15.2518s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.20090348135124012,0.3758245006496744] (9,-1; 9,-1), time: 30.0238s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-0.56645018548299,0.12334654675968043] (9,-1; 9,-1), time: 30.0167s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[1e-05,0.7232582843298615] (15,-1; 9,-1), time: 15.7619s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.2763228426388728,0.27543652916660416] (9,-1; 9,-1), time: 30.0120s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.14572812733874427,0.3550936037347103] (9,-1; 9,-1), time: 30.0183s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[-0.7459859497398075,0.01655778356355643] (9,-1; 9,-1), time: 30.0187s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[1e-05,0.7672039285715703] (15,-1; 9,-1), time: 20.2334s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-0.5526352327867254,0.17332857657820672] (9,-1; 9,-1), time: 30.0119s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[1e-05,1.548028244976844] (15,-1; 9,-1), time: 15.3156s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-0.2175465638446715,0.39892827787781626] (9,-1; 9,-1), time: 30.0221s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2979s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[1e-05,0.66498601117901] (15,-1; 9,-1), time: 15.7072s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.6434906359736077,0.015754578497939244] (9,-1; 9,-1), time: 30.0292s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[1e-05,1.4906436685401323] (15,-1; 9,-1), time: 15.3018s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-0.0866919243942753,0.49750985776631257] (9,-1; 9,-1), time: 30.0091s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.5335091682313461,0.14999012296546152] (9,-1; 9,-1), time: 30.0137s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[1e-05,1.7157469504745033] (15,-1; 9,-1), time: 15.2439s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.65009402412467,0.01612031468129849] (9,-1; 9,-1), time: 30.0132s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.12032721998552164,0.4887061278871396] (9,-1; 9,-1), time: 30.0177s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[1e-05,2.4920312499886506] (15,-1; 2,-1), time: 13.9501s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-0.8023789609709577,0.01081840616522468] (9,-1; 9,-1), time: 30.0132s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[1e-05,0.8213773165544058] (15,-1; 2,-1), time: 9.9812s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-0.3256206962263513,0.10508587964870338] (9,-1; 9,-1), time: 30.0129s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[1e-05,0.9077336272210703] (15,-1; 9,-1), time: 15.2861s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[1e-05,1.423340349485765] (15,-1; 9,-1), time: 15.2471s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-0.47481737899481186,0.1084001552709227] (9,-1; 9,-1), time: 30.1420s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[-0.18019142441373728,0.4221669656863362] (9,-1; 9,-1), time: 30.0191s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.3782517820967277,0.29107618427278587] (9,-1; 9,-1), time: 30.0117s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[1e-05,1.56764556665037] (15,-1; 9,-1), time: 15.2834s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[1e-05,2.428434269572393] (15,-1; 9,-1), time: 15.2774s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-0.5695169536161391,0.03692019155280035] (9,-1; 9,-1), time: 30.0141s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-0.4574116345607098,0.10063925620103017] (9,-1; 9,-1), time: 30.0105s, #vars: 1411, #constrs: 739, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-0.12885493499982986,0.26548334617015457] (9,-1; 9,-1), time: 30.0149s, #vars: 1411, #constrs: 739, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 2 has unstable to stable neurons: [(30, -1), (13, -1), (56, -1), (12, -1), (1, -1), (39, -1), (23, -1), (38, -1), (34, -1), (64, -1), (36, -1), (42, -1), (78, -1), (51, -1), (87, -1), (19, -1), (9, -1), (95, -1), (33, -1), (32, -1), (99, -1), (96, -1), (3, -1), (48, -1), (46, -1), (75, -1), (71, -1), (88, 1), (93, 1), (77, -1), (15, -1), (43, -1), (66, -1), (80, -1), (24, -1), (45, -1), (86, 1), (29, -1), (10, -1), (79, -1), (63, -1), (73, 1), (69, -1), (44, -1), (52, 1), (76, 1), (94, 1), (18, -1), (58, 1), (84, 1)]
best_l after optimization: -99.17781066894531 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.738251447677612
alpha-CROWN with intermediate bounds by MIP: tensor([[ -6.41744852, -10.29911423, -11.48284435, -11.15278816, -12.85354424,
          -9.07269382, -13.05801296, -11.34353447, -13.49783230]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 72.19705963134766, ub improved 108.13130187988281, time 108.3144
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_80', 'lay10_14', 'lay10_40', 'lay10_46', 'lay10_86', 'lay10_74', 'lay10_58', 'lay10_8', 'lay10_27', 'lay10_17', 'lay10_7', 'lay10_35', 'lay10_42', 'lay10_79', 'lay10_2', 'lay10_1', 'lay10_18', 'lay10_30', 'lay10_75', 'lay10_57', 'lay10_5', 'lay10_33', 'lay10_0', 'lay10_91', 'lay10_72', 'lay10_13', 'lay10_37', 'lay10_97', 'lay10_52', 'lay10_10', 'lay10_93', 'lay10_66', 'lay10_94', 'lay10_82', 'lay10_51', 'lay10_87', 'lay10_98', 'lay10_60', 'lay10_50', 'lay10_15', 'lay10_39', 'lay10_88', 'lay10_89', 'lay10_96', 'lay10_95', 'lay10_47', 'lay10_29', 'lay10_28', 'lay10_4', 'lay10_23', 'lay10_48', 'lay10_22', 'lay10_3', 'lay10_6', 'lay10_85', 'lay10_69', 'lay10_77', 'lay10_21', 'lay10_44', 'lay10_76', 'lay10_99', 'lay10_63', 'lay10_65', 'lay10_53', 'lay10_59', 'lay10_36', 'lay10_43', 'lay10_49', 'lay10_70', 'lay10_54', 'lay10_55', 'lay10_26', 'lay10_41', 'lay10_71', 'lay10_84', 'lay10_24', 'lay10_90', 'lay10_9', 'lay10_20', 'lay10_81', 'lay10_78', 'lay10_45', 'lay10_73', 'lay10_19', 'lay10_31', 'lay10_34', 'lay10_68', 'lay10_67', 'lay10_56', 'lay10_92', 'lay10_11', 'lay10_25', 'lay10_83', 'lay10_32', 'lay10_64', 'lay10_38', 'lay10_61', 'lay10_12', 'lay10_62', 'lay10_16'] filter: 1.0
Solving MIP for lay10_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3388s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3448s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3413s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4170s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3285s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3373s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9241s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3465s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3088s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3424s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0289s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.5011s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.5512s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[1e-05,1.3394317068022574] (15,-1; 9,-1), time: 15.3159s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[1e-05,1.1322330424846463] (15,-1; 9,-1), time: 15.3694s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3148s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.9897639201660922,0.15393915388745266] (9,-1; 9,-1), time: 30.0156s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.06625272159947634,0.6729402280366525] (9,-1; 9,-1), time: 30.0279s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-0.09248949251579629,0.8348192132976917] (9,-1; 9,-1), time: 30.0260s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-0.19982096777512712,0.28698789876871705] (9,-1; 9,-1), time: 30.0215s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[-0.7574266796716796,0.022207879075247145] (9,-1; 9,-1), time: 30.3110s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.5039649993995843,0.1610619630861819] (9,-1; 9,-1), time: 30.3348s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[-0.6099616655494909,0.20395399861969826] (9,-1; 9,-1), time: 30.3788s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[-0.5362098470726065,0.3248590517673893] (9,-1; 9,-1), time: 30.0288s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[-0.833392576129215,0.0006019817227056125] (9,-1; 9,-1), time: 30.3812s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[-0.6141343297952171,0.1688997029137976] (9,-1; 9,-1), time: 30.4077s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[-0.571400640395191,0.07955834920232015] (9,-1; 9,-1), time: 30.3149s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[1e-05,1.6778402531602037] (15,-1; 9,-1), time: 15.3279s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2981s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.3596607554528088,0.2448559273810918] (9,-1; 9,-1), time: 30.0091s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3592s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8880s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3418s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2896s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.9702577310880699,0.028991726068895166] (9,-1; 9,-1), time: 30.0267s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6342s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.6147077575493342,0.028973225463648417] (9,-1; 9,-1), time: 30.0191s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,2.959214460292492] (15,-1; 9,-1), time: 15.3604s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[-0.02057178949626598,0.6614464139301695] (9,-1; 9,-1), time: 30.0970s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3092s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2894s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[1e-05,0.978977730841874] (15,-1; 9,-1), time: 16.2003s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[1e-05,1.0869753365751968] (15,-1; 9,-1), time: 16.1788s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3477s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.5290s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4501s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-0.5504472585744582,0.04414546365663378] (9,-1; 9,-1), time: 30.0289s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-0.09744992048285925,0.4442605877323566] (9,-1; 9,-1), time: 30.1002s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[-0.5094420093508925,0.015689934276992046] (9,-1; 9,-1), time: 30.0196s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.03699830892962343,0.5365205983892505] (9,-1; 9,-1), time: 30.0286s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3181s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3121s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-0.13441064810745268,0.5509121762069299] (9,-1; 9,-1), time: 30.4829s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-0.6571827791395474,0.022584831388648138] (9,-1; 9,-1), time: 30.2406s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-0.6367491632546076,0.013531959987640226] (9,-1; 9,-1), time: 30.1195s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-0.2717566928194691,0.4928878347577248] (9,-1; 9,-1), time: 30.0274s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9861s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,0.8820299430949479] (15,-1; 9,-1), time: 15.3203s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[1e-05,1.9246535774492946] (15,-1; 9,-1), time: 15.3276s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3629s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3062s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-0.18925190788035792,0.5125913745212634] (9,-1; 9,-1), time: 30.0326s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[1e-05,1.1233917131689661] (15,-1; 9,-1), time: 15.3115s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2972s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3429s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3608s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[1e-05,3.422734498234972] (15,-1; 9,-1), time: 15.4331s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[1e-05,0.8668194514146467] (15,-1; 9,-1), time: 15.3262s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_22, [-inf,inf]=>[-0.2206515197645553,0.24708810558923028] (9,-1; 9,-1), time: 30.0557s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-0.1344033975127596,0.28926916238382705] (9,-1; 9,-1), time: 30.1261s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[1e-05,1.5238158426037542] (15,-1; 9,-1), time: 15.3590s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[1e-05,1.7417730447434814] (15,-1; 9,-1), time: 15.5657s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[1e-05,1.749438452567955] (15,-1; 9,-1), time: 15.3672s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[1e-05,0.7118920051414374] (15,-1; 9,-1), time: 16.8045s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[1e-05,2.672104231995741] (15,-1; 9,-1), time: 15.3266s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[1e-05,1.0403055703422772] (15,-1; 9,-1), time: 15.4177s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[1e-05,0.7348644024656906] (15,-1; 9,-1), time: 15.3297s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[1e-05,2.0454205581614024] (15,-1; 9,-1), time: 15.4489s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9552s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3293s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.44461151190222953,0.15247074044547618] (9,-1; 9,-1), time: 30.0293s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-0.604644360842451,0.026660170598546803] (9,-1; 9,-1), time: 30.0135s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-0.4262865717708847,0.026640844244560945] (9,-1; 9,-1), time: 30.0290s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3064s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-0.3503963649665536,0.17611106424214326] (9,-1; 9,-1), time: 30.0232s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-0.36156116852511605,0.24505597918817415] (9,-1; 9,-1), time: 30.0290s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-0.02582162099701385,0.6272696084903832] (9,-1; 9,-1), time: 30.0280s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-0.3977871136385153,0.11315329371543338] (9,-1; 9,-1), time: 30.0322s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-0.4503258710676104,0.09886648535821006] (9,-1; 9,-1), time: 30.0673s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.6708s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[1e-05,0.595193812221852] (15,-1; 9,-1), time: 15.3763s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[1e-05,2.158822821580738] (15,-1; 9,-1), time: 15.3268s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[1e-05,1.4796026871713641] (15,-1; 9,-1), time: 15.3997s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[1e-05,0.5295168989031355] (15,-1; 9,-1), time: 23.5774s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[1e-05,0.9215475851313175] (15,-1; 9,-1), time: 15.6127s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[1e-05,0.4131086869842246] (15,-1; 9,-1), time: 28.7920s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[1e-05,2.0929116900584703] (15,-1; 9,-1), time: 15.3110s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-0.17242060060331757,0.4474753176934471] (9,-1; 9,-1), time: 30.0201s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[1e-05,2.6870156179167206] (15,-1; 9,-1), time: 15.4563s, #vars: 1587, #constrs: 953, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-0.08192288951837874,0.3991341230321745] (9,-1; 9,-1), time: 30.0263s, #vars: 1587, #constrs: 953, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 3 has unstable to stable neurons: [(71, -1), (59, -1), (17, -1), (77, -1), (19, -1), (89, -1), (57, -1), (39, -1), (33, -1), (20, -1), (48, -1), (24, -1), (16, 1), (31, -1), (7, -1), (34, -1), (11, 1), (62, -1), (81, -1), (88, -1), (3, -1), (97, -1), (92, 1), (0, -1), (52, 1), (98, -1), (63, -1), (22, -1), (66, -1), (4, -1), (65, -1), (78, 1), (93, -1), (85, 1), (43, -1), (6, -1), (14, -1), (55, -1), (45, -1), (21, -1), (36, 1), (10, 1), (58, 1), (82, -1), (76, -1), (56, 1), (67, 1), (74, 1), (13, 1), (80, 1), (54, -1), (70, 1), (91, 1), (32, 1), (42, 1), (18, -1), (35, 1), (49, 1), (64, 1), (47, 1), (8, 1), (12, 1)]
best_l after optimization: -17.628639221191406 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 13.595796585083008
alpha-CROWN with intermediate bounds by MIP: tensor([[-0.08860660, -0.97212887, -1.27119064, -3.38024044, -1.96716213,
         -0.88343406, -1.67303848, -3.06689119, -4.32594681]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 176.53700256347656, ub improved 260.1324768066406, time 121.0915
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_24', 'lay12_59', 'lay12_18', 'lay12_4', 'lay12_13', 'lay12_17', 'lay12_29', 'lay12_92', 'lay12_96', 'lay12_83', 'lay12_46', 'lay12_94', 'lay12_95', 'lay12_87', 'lay12_90', 'lay12_53', 'lay12_2', 'lay12_21', 'lay12_63', 'lay12_10', 'lay12_99', 'lay12_68', 'lay12_69', 'lay12_30', 'lay12_86', 'lay12_35', 'lay12_77', 'lay12_73', 'lay12_81', 'lay12_7', 'lay12_39', 'lay12_32', 'lay12_45', 'lay12_43', 'lay12_98', 'lay12_11', 'lay12_34', 'lay12_97', 'lay12_44', 'lay12_5', 'lay12_62', 'lay12_71', 'lay12_49', 'lay12_26', 'lay12_31', 'lay12_61', 'lay12_38', 'lay12_65', 'lay12_51', 'lay12_74', 'lay12_42', 'lay12_54', 'lay12_50', 'lay12_8', 'lay12_0', 'lay12_88', 'lay12_48', 'lay12_82', 'lay12_85', 'lay12_23', 'lay12_58', 'lay12_93', 'lay12_40', 'lay12_1', 'lay12_57', 'lay12_78', 'lay12_28', 'lay12_72', 'lay12_60', 'lay12_80', 'lay12_20', 'lay12_66', 'lay12_3', 'lay12_33', 'lay12_9', 'lay12_41', 'lay12_67', 'lay12_75', 'lay12_91', 'lay12_89', 'lay12_19', 'lay12_14', 'lay12_56', 'lay12_84', 'lay12_16', 'lay12_37', 'lay12_47', 'lay12_64', 'lay12_79', 'lay12_12', 'lay12_76', 'lay12_70', 'lay12_55', 'lay12_15', 'lay12_52', 'lay12_27', 'lay12_22', 'lay12_36', 'lay12_6', 'lay12_25'] filter: 1.0
Solving MIP for lay12_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4378s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4439s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4558s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4796s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4798s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5093s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5106s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4197s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4295s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.0377s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.3848s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[1e-05,1.3282834467657298] (15,-1; 9,-1), time: 15.4164s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[1e-05,1.8897651021431676] (15,-1; 9,-1), time: 15.4640s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[1e-05,1.3828749601484738] (15,-1; 9,-1), time: 15.4690s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3972s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3844s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,3.3559752384543686] (15,-1; 9,-1), time: 15.3939s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3461s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[1e-05,0.8287757407141199] (15,-1; 9,-1), time: 16.3169s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[1e-05,1.558674325215333] (15,-1; 9,-1), time: 16.1250s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-0.6103752905898102,0.12129383352228877] (9,-1; 9,-1), time: 30.0161s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-0.5017681925709611,0.14774903516068547] (9,-1; 9,-1), time: 30.0171s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-0.644383517026382,0.03709361768783047] (9,-1; 9,-1), time: 30.0186s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.15723956573121872,0.3738426172285804] (9,-1; 9,-1), time: 30.1062s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[-0.6721459188535965,0.023989261158246327] (9,-1; 9,-1), time: 30.1080s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-0.19632635956547467,0.22341001453768855] (9,-1; 9,-1), time: 30.0274s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3932s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4961s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[-0.650753157894018,0.06407869816782069] (9,-1; 9,-1), time: 30.0733s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-0.26339300317584885,0.6935272279713948] (9,-1; 9,-1), time: 30.0115s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[1e-05,1.0459781045929544] (15,-1; 9,-1), time: 15.4587s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[-0.2433875821722779,0.49187708226453325] (9,-1; 9,-1), time: 30.0905s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4160s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4613s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4077s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.030328949689271384,0.3836217131062816] (9,-1; 9,-1), time: 30.0838s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3911s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.7622s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.7897s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4182s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[-0.027583034785698447,0.6476619133059225] (9,-1; 9,-1), time: 30.0132s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.7894216433709386,0.0025196770161984715] (9,-1; 9,-1), time: 30.0361s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3902s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-0.640013965628526,0.017780560690610854] (9,-1; 9,-1), time: 30.0102s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.07635883451099489,0.8234927040068305] (9,-1; 9,-1), time: 30.0878s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-0.8009814781625867,0.10001802195283471] (9,-1; 9,-1), time: 30.0312s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[1e-05,1.138565169990351] (15,-1; 9,-1), time: 22.4116s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-0.7356265441370341,0.01584915751861757] (9,-1; 9,-1), time: 30.0789s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-0.14469183234600372,0.7163589297914468] (9,-1; 9,-1), time: 30.0181s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 12.6125s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-0.005878896647859845,0.434086777478278] (9,-1; 9,-1), time: 30.0169s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-0.4712392337788181,0.21306732311449572] (9,-1; 9,-1), time: 30.0094s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-0.4806136192190035,0.05822042081977503] (9,-1; 9,-1), time: 30.0151s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4023s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-0.1180095905865451,0.506175963387982] (9,-1; 9,-1), time: 30.0248s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.22724809591518194,0.6171243564798597] (9,-1; 9,-1), time: 30.0439s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4205s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3788s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4375s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4581s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3643s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4262s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[1e-05,1.6096656478705573] (15,-1; 9,-1), time: 15.3824s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4120s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-0.36253892794537507,0.08334406734668237] (9,-1; 9,-1), time: 30.0108s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4043s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3566s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4672s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[1e-05,0.6671881267104776] (15,-1; 9,-1), time: 24.3541s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2891s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4127s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4427s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.15140886322102587,0.2796998204100783] (9,-1; 9,-1), time: 30.0740s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4233s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4038s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4079s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[1e-05,1.2089079241098872] (15,-1; 9,-1), time: 15.4444s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.8447s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-0.7550876765140904,0.026777404054911812] (9,-1; 9,-1), time: 30.0284s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[1e-05,2.594112921515253] (15,-1; 9,-1), time: 15.4699s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[1e-05,1.812072850581393] (15,-1; 9,-1), time: 15.4465s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[1e-05,1.3396304863213386] (15,-1; 9,-1), time: 15.4647s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[1e-05,1.1680147459948698] (15,-1; 9,-1), time: 15.4194s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[1e-05,0.738892406359131] (15,-1; 9,-1), time: 15.4355s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3894s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-0.43712368753952663,0.25450497311150877] (9,-1; 9,-1), time: 30.0263s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-0.18633992278867445,0.3851727224269846] (9,-1; 9,-1), time: 30.0260s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[1e-05,2.0777548253523532] (15,-1; 9,-1), time: 15.3537s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[1e-05,2.796314535612364] (15,-1; 9,-1), time: 15.4515s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[1e-05,2.2371706561454676] (15,-1; 9,-1), time: 15.4457s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[1e-05,0.5395917152012855] (15,-1; 9,-1), time: 15.4333s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[1e-05,4.032762620680002] (15,-1; 9,-1), time: 15.4083s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-0.47049191322848016,0.33499780248902644] (9,-1; 9,-1), time: 30.0560s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[1e-05,0.8561603847017455] (15,-1; 9,-1), time: 15.4418s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.4619340929808274,0.1875969492322116] (9,-1; 9,-1), time: 30.0932s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[1e-05,0.7676388261959979] (15,-1; 9,-1), time: 15.3895s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[1e-05,2.783354182798597] (15,-1; 9,-1), time: 15.4649s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[1e-05,0.6649945530944364] (15,-1; 9,-1), time: 15.4025s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.020419447077834135,0.34242824840749786] (9,-1; 9,-1), time: 30.0117s, #vars: 1759, #constrs: 1161, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.3586246426418742,0.2930489070544772] (9,-1; 9,-1), time: 30.0088s, #vars: 1759, #constrs: 1161, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 4 has unstable to stable neurons: [(80, -1), (14, -1), (40, -1), (8, 1), (79, -1), (2, -1), (1, 1), (30, -1), (57, -1), (5, -1), (33, -1), (91, -1), (72, -1), (13, -1), (37, -1), (10, 1), (93, -1), (87, 1), (50, 1), (15, -1), (88, -1), (89, -1), (96, 1), (95, -1), (28, -1), (4, -1), (48, -1), (6, -1), (85, -1), (69, 1), (77, 1), (21, -1), (44, -1), (76, 1), (99, 1), (63, 1), (65, -1), (53, -1), (36, -1), (43, 1), (49, 1), (55, 1), (26, -1), (41, -1), (9, 1), (20, -1), (81, -1), (78, -1), (73, 1), (19, 1), (31, 1), (34, 1), (68, 1), (56, 1), (92, 1), (11, 1), (25, 1), (83, -1), (32, -1), (64, -1), (38, 1), (12, 1), (62, -1), (16, 1)]
best_l after optimization: 7.49432373046875 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 13.39430022239685
alpha-CROWN with intermediate bounds by MIP: tensor([[ 1.84394646,  2.05461478,  1.77668619, -0.95375657,  1.46607780,
          1.42433703,  1.88461781, -0.56700253, -1.43519664]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 380.6046447753906, ub improved 579.1117553710938, time 106.6905
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_20', 'lay14_5', 'lay14_92', 'lay14_2', 'lay14_75', 'lay14_11', 'lay14_47', 'lay14_64', 'lay14_18', 'lay14_72', 'lay14_59', 'lay14_14', 'lay14_87', 'lay14_0', 'lay14_46', 'lay14_51', 'lay14_54', 'lay14_8', 'lay14_84', 'lay14_85', 'lay14_10', 'lay14_91', 'lay14_35', 'lay14_36', 'lay14_86', 'lay14_16', 'lay14_76', 'lay14_22', 'lay14_1', 'lay14_19', 'lay14_56', 'lay14_31', 'lay14_28', 'lay14_50', 'lay14_41', 'lay14_12', 'lay14_37', 'lay14_98', 'lay14_77', 'lay14_60', 'lay14_30', 'lay14_82', 'lay14_21', 'lay14_42', 'lay14_4', 'lay14_74', 'lay14_33', 'lay14_96', 'lay14_44', 'lay14_45', 'lay14_79', 'lay14_63', 'lay14_78', 'lay14_29', 'lay14_3', 'lay14_9', 'lay14_88', 'lay14_83', 'lay14_23', 'lay14_73', 'lay14_69', 'lay14_70', 'lay14_15', 'lay14_40', 'lay14_55', 'lay14_62', 'lay14_67', 'lay14_71', 'lay14_24', 'lay14_57', 'lay14_81', 'lay14_32', 'lay14_90', 'lay14_7', 'lay14_52', 'lay14_66', 'lay14_26', 'lay14_25', 'lay14_53', 'lay14_65', 'lay14_39', 'lay14_6', 'lay14_99', 'lay14_13', 'lay14_38', 'lay14_49', 'lay14_80', 'lay14_48', 'lay14_43', 'lay14_95', 'lay14_68', 'lay14_89', 'lay14_17', 'lay14_34', 'lay14_61', 'lay14_58', 'lay14_27', 'lay14_93', 'lay14_97', 'lay14_94'] filter: 1.0
Solving MIP for lay14_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5268s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5284s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5325s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5541s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5531s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5581s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5701s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6145s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4723s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5239s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5315s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5500s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6018s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5289s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6028s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4838s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6741s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[1e-05,1.1605683996816925] (15,-1; 9,-1), time: 15.4933s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[1e-05,0.4893857553085935] (15,-1; 9,-1), time: 15.4994s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[1e-05,0.5050854805836081] (15,-1; 9,-1), time: 16.3547s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[1e-05,0.7103758102280714] (15,-1; 9,-1), time: 24.5110s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.15667854010971155,0.2152834335397825] (9,-1; 9,-1), time: 30.0176s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.5559071405225244,0.01984081193356879] (9,-1; 9,-1), time: 30.0185s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.09932963744974088,0.45522632303709454] (9,-1; 9,-1), time: 30.0200s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[-0.6938010045489721,0.2252591647264872] (9,-1; 9,-1), time: 30.0687s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[-0.858768035612912,0.2267070290638572] (9,-1; 9,-1), time: 30.0757s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-0.8442587100072895,0.15017152559427394] (9,-1; 9,-1), time: 30.1000s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5090s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.3768118261657359,0.23452618258949817] (9,-1; 9,-1), time: 30.0114s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.3188869622295451,0.17966922156015694] (9,-1; 9,-1), time: 30.0148s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5264s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[-0.3742211279746084,0.18628966092927945] (9,-1; 9,-1), time: 30.0100s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5211s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.28899752513113935,0.36064492518918106] (9,-1; 9,-1), time: 30.1480s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4808s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-0.3070499962887278,0.6499729382421213] (9,-1; 9,-1), time: 30.0105s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[1e-05,2.4831781664798607] (15,-1; 9,-1), time: 15.6334s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[-0.23264640963193337,0.4747106992106657] (9,-1; 9,-1), time: 30.0105s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7643s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4221s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5801s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[1e-05,1.3028999010047058] (15,-1; 9,-1), time: 15.5164s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-0.36919121333710786,0.14537090737864466] (9,-1; 9,-1), time: 30.0098s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[1e-05,0.9647177088238151] (15,-1; 9,-1), time: 15.5390s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[1e-05,1.8350753152399282] (15,-1; 9,-1), time: 15.5691s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[1e-05,1.7648327376976933] (15,-1; 9,-1), time: 15.5532s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.30617097578620167,0.3605457526817442] (9,-1; 9,-1), time: 30.0104s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[1e-05,1.3724171885568084] (15,-1; 9,-1), time: 15.5148s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.3037s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[1e-05,0.559475813243721] (15,-1; 9,-1), time: 25.5182s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.3317201000890337,0.1653268506106422] (9,-1; 9,-1), time: 30.0158s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-0.6839210649121916,0.016793925089051868] (9,-1; 9,-1), time: 30.0099s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-0.45073110542349454,0.0015326627484700517] (9,-1; 9,-1), time: 30.3180s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-0.01703209319432265,0.46594430464252284] (9,-1; 9,-1), time: 30.0097s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5058s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[1e-05,1.0464189925767107] (15,-1; 9,-1), time: 15.4675s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-0.14596029674952096,0.3189280166140265] (9,-1; 9,-1), time: 30.0393s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5281s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[1e-05,1.1830877866962046] (15,-1; 9,-1), time: 16.3994s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[1e-05,1.0165009760514676] (15,-1; 9,-1), time: 15.4718s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7874s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-0.43011989402431994,0.16499578088128322] (9,-1; 9,-1), time: 30.0107s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-0.07914454723846781,0.8140615070253104] (9,-1; 9,-1), time: 30.1193s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5151s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[1e-05,1.0524878366430637] (15,-1; 9,-1), time: 16.5813s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5159s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5571s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.3128033297482177,0.28292964979811697] (9,-1; 9,-1), time: 30.0195s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4861s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.7067495724349376,0.017348484975158448] (9,-1; 9,-1), time: 30.0526s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4630s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-0.33906386667454824,0.322332428827216] (9,-1; 9,-1), time: 30.1707s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[1e-05,4.468111967207064] (15,-1; 9,-1), time: 15.5017s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2874s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[1e-05,2.2845612846079084] (15,-1; 9,-1), time: 15.4904s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.71527909516437,0.2303786396316709] (9,-1; 9,-1), time: 30.0090s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[1e-05,1.2641332537160406] (15,-1; 9,-1), time: 23.1726s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5352s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[1e-05,0.6187079939276456] (15,-1; 9,-1), time: 23.9441s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5352s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[1e-05,2.583038662771931] (15,-1; 9,-1), time: 15.5598s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-0.41187325310516437,0.2402171402547668] (9,-1; 9,-1), time: 30.0121s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.18511493371696322,0.42345754738704433] (9,-1; 9,-1), time: 30.0480s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-0.1769384308747369,0.3457928240360521] (9,-1; 9,-1), time: 30.0107s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-0.5198279502727295,0.20016511041677693] (9,-1; 9,-1), time: 30.0084s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5591s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-0.6793331997255141,0.16245624914789356] (9,-1; 9,-1), time: 30.0099s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.5433860537290156,0.0915909093928023] (9,-1; 9,-1), time: 30.0278s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_39, [-inf,inf]=>[-0.5427991153462037,0.14054478356479286] (9,-1; 9,-1), time: 30.0224s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-0.27826651669492686,0.33808669408892317] (9,-1; 9,-1), time: 30.0129s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.056378360110246994,0.5323548363767466] (9,-1; 9,-1), time: 30.0192s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[1e-05,1.9835646969512757] (15,-1; 9,-1), time: 15.5036s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[1e-05,2.2972402192890855] (15,-1; 9,-1), time: 15.4197s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[1e-05,0.7885360574712358] (15,-1; 9,-1), time: 16.6589s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[1e-05,2.1097556057407645] (15,-1; 9,-1), time: 15.4680s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[1e-05,2.2770372427909282] (15,-1; 9,-1), time: 15.4484s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[1e-05,2.8077560690135814] (15,-1; 9,-1), time: 15.5908s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-0.17175174277865246,0.2581897638223037] (9,-1; 9,-1), time: 30.0147s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-0.40270337768504894,0.05028323683183722] (9,-1; 9,-1), time: 30.0098s, #vars: 1921, #constrs: 1354, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-0.7501351420845304,0.0773219982966394] (9,-1; 9,-1), time: 30.0111s, #vars: 1921, #constrs: 1354, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 5 has unstable to stable neurons: [(24, -1), (59, -1), (18, 1), (13, -1), (17, -1), (29, 1), (92, -1), (96, -1), (83, -1), (94, 1), (95, -1), (63, -1), (10, -1), (99, -1), (68, 1), (86, 1), (35, 1), (73, -1), (81, 1), (39, -1), (45, -1), (34, -1), (44, -1), (5, -1), (38, -1), (65, -1), (51, -1), (74, -1), (54, -1), (50, 1), (0, -1), (88, 1), (82, -1), (85, 1), (93, -1), (40, 1), (57, -1), (78, -1), (28, -1), (72, 1), (60, 1), (80, -1), (20, -1), (66, 1), (3, 1), (33, -1), (9, 1), (67, -1), (75, -1), (91, 1), (89, -1), (19, -1), (14, -1), (56, -1), (84, -1), (16, -1), (37, -1), (47, 1), (79, -1), (12, -1), (76, -1), (70, 1), (55, 1), (15, 1), (52, 1), (27, 1), (22, 1), (6, -1), (25, 1)]
best_l after optimization: 13.722432136535645 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.71563458442688
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.40473080,  2.76580548,  2.50434256, -0.33328009,  2.28150463,
          2.02008343,  2.79665208,  0.02279997, -0.74020672]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 899.4192504882812, ub improved 1285.7760009765625, time 118.6078
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_15', 'lay16_87', 'lay16_11', 'lay16_35', 'lay16_64', 'lay16_20', 'lay16_51', 'lay16_95', 'lay16_0', 'lay16_19', 'lay16_99', 'lay16_34', 'lay16_82', 'lay16_76', 'lay16_65', 'lay16_27', 'lay16_86', 'lay16_80', 'lay16_44', 'lay16_4', 'lay16_14', 'lay16_2', 'lay16_41', 'lay16_53', 'lay16_30', 'lay16_70', 'lay16_83', 'lay16_31', 'lay16_68', 'lay16_58', 'lay16_79', 'lay16_98', 'lay16_69', 'lay16_71', 'lay16_23', 'lay16_40', 'lay16_89', 'lay16_1', 'lay16_84', 'lay16_73', 'lay16_74', 'lay16_88', 'lay16_39', 'lay16_85', 'lay16_92', 'lay16_47', 'lay16_9', 'lay16_77', 'lay16_29', 'lay16_57', 'lay16_63', 'lay16_46', 'lay16_25', 'lay16_50', 'lay16_37', 'lay16_66', 'lay16_78', 'lay16_5', 'lay16_3', 'lay16_28', 'lay16_12', 'lay16_93', 'lay16_18', 'lay16_90', 'lay16_56', 'lay16_97', 'lay16_94', 'lay16_59', 'lay16_32', 'lay16_7', 'lay16_13', 'lay16_36', 'lay16_17', 'lay16_96', 'lay16_43', 'lay16_24', 'lay16_21', 'lay16_33', 'lay16_52', 'lay16_6', 'lay16_60', 'lay16_75', 'lay16_91', 'lay16_55', 'lay16_54', 'lay16_38', 'lay16_81', 'lay16_8', 'lay16_45', 'lay16_26', 'lay16_72', 'lay16_16', 'lay16_61', 'lay16_48', 'lay16_10', 'lay16_67', 'lay16_49', 'lay16_62', 'lay16_42', 'lay16_22'] filter: 1.0
Solving MIP for lay16_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6327s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6561s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6993s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7474s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7707s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7731s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7923s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9067s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6218s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6326s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6595s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.0315s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5723s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6010s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5163s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6548s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6403s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6081s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6376s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_79, [-inf,inf]=>[1e-05,1.0865354670106662] (15,-1; 9,-1), time: 15.6123s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_53, [-inf,inf]=>[1e-05,0.9174699949304378] (15,-1; 9,-1), time: 27.4908s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7576s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_87, [-inf,inf]=>[-1.0733814624763778,0.12135184455458263] (9,-1; 9,-1), time: 30.0123s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_19, [-inf,inf]=>[-1.0293777205552346,0.43855256718416114] (9,-1; 9,-1), time: 30.0110s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-0.2621516221741008,0.4492841999461444] (9,-1; 9,-1), time: 30.0200s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-1.1565217473608955,0.28774569415270923] (9,-1; 9,-1), time: 30.0168s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-1.1515901833036635,0.039433907456963034] (9,-1; 9,-1), time: 30.0135s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_95, [-inf,inf]=>[-0.6380253290120177,0.30143417696984953] (9,-1; 9,-1), time: 30.0217s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.7718792911014534,0.10977574451329454] (9,-1; 9,-1), time: 30.0236s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6692s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_85, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6745s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-1.097000829162343,0.021424780721843957] (9,-1; 9,-1), time: 30.0108s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7234s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-0.6756533794676551,0.07346249235484402] (9,-1; 9,-1), time: 30.0170s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_2, [-inf,inf]=>[-0.2805822792107697,0.39500973344840096] (9,-1; 9,-1), time: 30.0106s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_41, [-inf,inf]=>[-0.2907931511314987,0.6171150992100013] (9,-1; 9,-1), time: 30.0193s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-0.3883377386668782,0.27641709246570373] (9,-1; 9,-1), time: 30.0131s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5936s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6562s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-0.6786028060843813,0.05227687596223482] (9,-1; 9,-1), time: 30.0189s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[1e-05,1.2189805743478441] (15,-1; 9,-1), time: 15.5952s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6634s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-0.17359407750958158,0.7073978730127751] (9,-1; 9,-1), time: 30.1439s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6118s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7306s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[1e-05,1.468018643972325] (15,-1; 9,-1), time: 15.6747s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6012s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[1e-05,1.980176171743952] (15,-1; 9,-1), time: 15.6853s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7392s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6381s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[1e-05,0.6646108415666109] (15,-1; 9,-1), time: 15.6960s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[1e-05,0.8839059462139404] (15,-1; 9,-1), time: 27.1375s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_59, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6306s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-0.48212724861307904,0.08959682576575177] (9,-1; 9,-1), time: 30.0105s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7394s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-1.383478203113243,0.04434565865647869] (9,-1; 9,-1), time: 30.0101s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-0.390359802630175,0.36001140589203273] (9,-1; 9,-1), time: 30.0187s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-0.3801927334882582,0.5920864230294749] (9,-1; 9,-1), time: 30.0113s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-0.5247064464757372,0.2003026311736141] (9,-1; 9,-1), time: 30.0100s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-0.09703953715633018,1.228579736994408] (9,-1; 9,-1), time: 30.0107s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_63, [-inf,inf]=>[-0.8899404219558981,0.20211465831947947] (9,-1; 9,-1), time: 30.0097s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-0.03508229723785414,1.163521044466245] (9,-1; 9,-1), time: 30.0136s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5173s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-0.9561499091624607,0.01253582336697048] (9,-1; 9,-1), time: 30.0150s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-0.4686214585287198,0.22787931131804015] (9,-1; 9,-1), time: 30.0096s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6699s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7494s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6544s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5685s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-0.6120001798669363,0.040237417786010435] (9,-1; 9,-1), time: 30.0112s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-0.3159111852494793,0.23230059161577296] (9,-1; 9,-1), time: 30.0088s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5818s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5616s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.5971s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[1e-05,1.2622207825867298] (15,-1; 9,-1), time: 15.6231s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[1e-05,2.5829951990962465] (15,-1; 9,-1), time: 15.6970s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-0.30663914277787563,0.2330771930454458] (9,-1; 9,-1), time: 30.0081s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[1e-05,1.0288369280711473] (15,-1; 9,-1), time: 15.6268s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-0.7427780093375023,0.011077995909868561] (9,-1; 9,-1), time: 30.0109s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6724s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_91, [-inf,inf]=>[1e-05,3.351662970150558] (15,-1; 9,-1), time: 15.7488s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6243s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-0.545845212439899,0.013799816133594683] (9,-1; 9,-1), time: 30.0104s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[1e-05,1.765626078921446] (15,-1; 9,-1), time: 15.7182s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6218s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6066s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[1e-05,4.002839568647586] (15,-1; 9,-1), time: 15.6178s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-0.19925145390750393,0.4442297469745632] (9,-1; 9,-1), time: 30.0140s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_13, [-inf,inf]=>[-0.46274503018557467,0.03613302397565849] (9,-1; 9,-1), time: 30.0140s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-0.12359009635593882,0.8482284739637975] (9,-1; 9,-1), time: 30.0200s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[-0.6955493522865691,0.1460486170601313] (9,-1; 9,-1), time: 30.0102s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[1e-05,2.413167750523305] (15,-1; 9,-1), time: 15.6855s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-0.04974682660405996,0.3819360478303183] (9,-1; 9,-1), time: 30.0102s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[1e-05,3.059969525517731] (15,-1; 9,-1), time: 15.6332s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[1e-05,1.3114997197094553] (15,-1; 9,-1), time: 15.5947s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[1e-05,1.7445711272345072] (15,-1; 9,-1), time: 15.7186s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[1e-05,3.9691520133448086] (15,-1; 9,-1), time: 15.6920s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[1e-05,1.1207623431280438] (15,-1; 9,-1), time: 15.6981s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_38, [-inf,inf]=>[-0.08557413415618365,0.37258739221822346] (9,-1; 9,-1), time: 30.1520s, #vars: 2095, #constrs: 1565, improved: True
Solving MIP for lay16_26, [-inf,inf]=>[-0.051211361192362,0.6304402809293325] (9,-1; 9,-1), time: 30.0194s, #vars: 2095, #constrs: 1565, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 6 has unstable to stable neurons: [(20, -1), (5, -1), (92, -1), (75, -1), (11, -1), (72, 1), (59, -1), (14, 1), (87, -1), (51, -1), (54, -1), (8, -1), (85, -1), (10, -1), (35, -1), (36, 1), (86, -1), (16, -1), (1, 1), (19, -1), (56, -1), (41, 1), (37, 1), (77, -1), (30, -1), (82, 1), (4, -1), (74, -1), (33, 1), (96, 1), (45, -1), (79, 1), (63, -1), (3, 1), (9, -1), (23, 1), (73, 1), (69, 1), (70, 1), (15, -1), (67, 1), (71, 1), (24, -1), (57, -1), (32, -1), (52, -1), (25, -1), (53, -1), (65, 1), (13, -1), (38, 1), (49, -1), (80, 1), (48, -1), (43, 1), (68, 1), (89, 1), (17, -1), (34, -1), (58, 1), (27, 1), (97, 1), (94, -1)]
best_l after optimization: 17.34043312072754 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.860568761825562
alpha-CROWN with intermediate bounds by MIP: tensor([[ 2.72361016,  3.11520672,  2.91379929,  0.05859947,  2.74914813,
          2.32390165,  3.35004973,  0.38423014, -0.27811170]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 1813.5264892578125, ub improved 2710.885009765625, time 101.6632
maximum relu layer improved by MIP so far 7
Linear(in_features=100, out_features=10, bias=True) 8 18 torch.Size([9, 1])
MIP finished with 643.1307497024536s
Run final alpha-CROWN after MIP solving on layer 18 and relu idx 8
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])

all verified at 0th iter
best_l after optimization: 19.499950408935547 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 0.06651902198791504
alpha-CROWN with intermediate bounds improved by MIP: tensor([[2.86485910, 3.27024055, 3.19000745, 0.35088181, 3.03669477, 2.43802118,
         3.68851662, 0.56627774, 0.09445262]], device='cuda:0') None
refined global lb: tensor([[2.86485910],
        [3.27024055],
        [3.19000745],
        [0.35088181],
        [3.03669477],
        [2.43802118],
        [3.68851662],
        [0.56627774],
        [0.09445262]], device='cuda:0') min: tensor(0.09445262, device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 658.2319 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time [1] 658.2318942546844 max time 658.2318942546844
safe-incomplete-refine (total 1): [0]
