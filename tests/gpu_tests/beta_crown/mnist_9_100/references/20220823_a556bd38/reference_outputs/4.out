Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: null
  root_path: ''
model:
  path: mnist_9_100_nat.pth
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_9_100
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 759
  end: 760
  select_instance: null
  num_outputs: 10
  mean: [0.0]
  std: [1.0]
  pkl_path: null
  dataset: MNIST_ERAN_UN
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.026
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 1024
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 900
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 14:43:01 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Flatten()
  (1): Linear(in_features=784, out_features=100, bias=True)
  (2): ReLU()
  (3): Linear(in_features=100, out_features=100, bias=True)
  (4): ReLU()
  (5): Linear(in_features=100, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=100, bias=True)
  (8): ReLU()
  (9): Linear(in_features=100, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=100, bias=True)
  (12): ReLU()
  (13): Linear(in_features=100, out_features=100, bias=True)
  (14): ReLU()
  (15): Linear(in_features=100, out_features=100, bias=True)
  (16): ReLU()
  (17): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. No normalization used!
Shape: torch.Size([1000, 1, 28, 28]) torch.Size([1000]) torch.Size([1000])
X range: tensor(1.) tensor(0.) tensor(0.12226459)
Note runnerup label is empty here!
############################
saving results to Verified_ret_[mnist_9_100]_start=759_end=760_iter=20_b=1024_timeout=900_branching=kfsb-max-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip_cplex_cuts=False_multiclass=allclass_domain.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 759 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-3.56774282, -2.49215603, -2.09614205,  0.89472860,  1.83690405,
          0.54328597, -4.33675528,  1.86856866,  1.38485730,  7.56602335]],
       device='cuda:0')
layer /28 using sparse-features alpha with shape [31]; unstable size 31; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [55]; unstable size 55; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [84]; unstable size 84; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-260.06887817, -266.61035156, -317.12704468, -290.31356812,
         -228.95268250, -264.07080078, -340.32992554, -267.43841553,
         -310.43157959]], device='cuda:0') None
best_l after optimization: -1156.50927734375 with beta sum per layer: []
alpha/beta optimization time: 11.11636471748352
initial alpha-CROWN bounds: tensor([[-109.20401764, -122.96388245, -150.28405762, -136.52453613,
         -101.66368103, -118.53813934, -153.50122070, -121.61570740,
         -142.21403503]], device='cuda:0')
Worst class: (+ rhs) -153.501220703125
Start solving intermediate bounds with MIP...
layer /28 using sparse-features alpha with shape [31]; unstable size 31; total size 100 (torch.Size([1, 100]))
layer /28 start_node /input.3 using sparse-spec alpha with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /28 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /30 using sparse-features alpha with shape [55]; unstable size 55; total size 100 (torch.Size([1, 100]))
layer /30 start_node /input.7 using sparse-spec alpha with unstable size 84 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /30 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /32 using sparse-features alpha with shape [84]; unstable size 84; total size 100 (torch.Size([1, 100]))
layer /32 start_node /input.11 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /32 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /34 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /34 start_node /input.15 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /34 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /36 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /36 start_node /input.19 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /36 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /38 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /38 start_node /input.23 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /38 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /40 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /40 start_node /input.27 using full alpha with unstable size 100 total_size 100 output_shape torch.Size([100])
layer /40 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
layer /42 using full alpha with shape torch.Size([100]); unstable size 100; total size 100 (torch.Size([1, 100]))
layer /42 start_node /43 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 720.0]

Linear(in_features=784, out_features=100, bias=True) 0 2 torch.Size([100])
Linear(in_features=100, out_features=100, bias=True) 1 4 torch.Size([100])
sorted candidates ['lay4_94', 'lay4_64', 'lay4_16', 'lay4_68', 'lay4_93', 'lay4_46', 'lay4_33', 'lay4_60', 'lay4_52', 'lay4_38', 'lay4_8', 'lay4_26', 'lay4_90', 'lay4_18', 'lay4_61', 'lay4_41', 'lay4_55', 'lay4_23', 'lay4_92', 'lay4_97', 'lay4_72', 'lay4_98', 'lay4_63', 'lay4_7', 'lay4_11', 'lay4_30', 'lay4_91', 'lay4_39', 'lay4_54', 'lay4_40', 'lay4_36', 'lay4_89', 'lay4_85', 'lay4_86', 'lay4_34', 'lay4_99', 'lay4_3', 'lay4_80', 'lay4_22', 'lay4_69', 'lay4_87', 'lay4_27', 'lay4_48', 'lay4_75', 'lay4_88', 'lay4_25', 'lay4_44', 'lay4_5', 'lay4_83', 'lay4_12', 'lay4_10', 'lay4_53', 'lay4_74', 'lay4_58'] filter: 1.0
PGD done for relu layer 1
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:701: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(eps_temp).reshape(1, -1, 1, 1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
Solving MIP for lay4_90, [-inf,inf]=>[-0.6413640345092932,1.1141691141514432] (2,-1; 2,-1), time: 0.5961s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_94, [-inf,inf]=>[-1.1388351921569015,0.313649964626067] (2,-1; 2,-1), time: 0.8061s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_41, [-inf,inf]=>[-0.3917236031371129,0.85608176852637] (2,-1; 2,-1), time: 0.9365s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_26, [-inf,inf]=>[-0.30146194699116713,0.5572357455255706] (2,-1; 2,-1), time: 0.9641s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_46, [-inf,inf]=>[-0.43018930810129924,0.7583488445787803] (2,-1; 2,-1), time: 1.0214s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_61, [-inf,inf]=>[-0.7187681855525302,0.4579776065827569] (2,-1; 2,-1), time: 1.0173s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_33, [-inf,inf]=>[-1.1376601886110296,0.2844131076268937] (2,-1; 2,-1), time: 1.2715s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4581s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_18, [-inf,inf]=>[-0.6976275934601512,0.01682618498649739] (2,-1; 2,-1), time: 1.3530s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_16, [-inf,inf]=>[-0.9520165785126206,0.03491648303693742] (2,-1; 2,-1), time: 1.4926s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_72, [-inf,inf]=>[-0.5622564664059233,0.5504978412724351] (2,-1; 2,-1), time: 0.6486s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_60, [-inf,inf]=>[-0.496727059427995,0.4441727952423028] (2,-1; 2,-1), time: 1.7181s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_30, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2327s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_64, [-inf,inf]=>[-0.6238662392107308,0.2902084050630879] (2,-1; 2,-1), time: 1.7645s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_93, [-inf,inf]=>[-0.8514613332431494,0.044568437335033004] (2,-1; 2,-1), time: 1.7879s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_97, [-inf,inf]=>[-0.3470107087655599,0.7176905358219695] (2,-1; 2,-1), time: 0.8875s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_52, [-inf,inf]=>[-0.28213647720820917,0.41412923842423927] (2,-1; 2,-1), time: 1.8680s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1706s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_8, [-inf,inf]=>[-0.3668824290556541,0.2110057227708904] (2,-1; 2,-1), time: 2.0633s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_55, [-inf,inf]=>[-0.11146265524282074,1.0149967564861255] (2,-1; 2,-1), time: 1.5525s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1896s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_38, [-inf,inf]=>[-0.6865090919828112,0.0034980350302873386] (2,-1; 2,-1), time: 2.2663s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_98, [-inf,inf]=>[-0.27676541294771695,0.9244694322780284] (2,-1; 2,-1), time: 1.3039s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_68, [-inf,inf]=>[-0.5349876455691047,0.34210226627461005] (2,-1; 2,-1), time: 2.4157s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1771s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_11, [-inf,inf]=>[-1.048903057374795,0.05586684266358419] (2,-1; 2,-1), time: 1.1530s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_99, [-inf,inf]=>[1e-05,1.1833003687562496] (15,-1; 2,-1), time: 0.3991s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_89, [-inf,inf]=>[-0.7319218116855819,0.5130452573686993] (2,-1; 2,-1), time: 0.7121s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_63, [-inf,inf]=>[-0.9376049735437177,0.026469017970990126] (2,-1; 2,-1), time: 1.3539s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_86, [-inf,inf]=>[1e-05,0.7060011103092603] (15,-1; 2,-1), time: 0.7693s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1702s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_40, [-inf,inf]=>[-0.8359727546892098,0.07093455728725653] (2,-1; 2,-1), time: 0.9983s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_92, [-inf,inf]=>[-0.2125512218477915,0.4770767394253574] (2,-1; 2,-1), time: 1.9590s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1689s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_7, [-inf,inf]=>[-0.26588862482655784,0.4802496744366263] (2,-1; 2,-1), time: 1.8449s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_91, [-inf,inf]=>[-0.30421024288030757,0.695428420553807] (2,-1; 2,-1), time: 1.5533s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_3, [-inf,inf]=>[-0.2827008139620103,0.44443923256837026] (2,-1; 2,-1), time: 1.2680s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8895s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_80, [-inf,inf]=>[-0.11629802801526297,0.7957358001909448] (2,-1; 2,-1), time: 1.4154s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1768s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_69, [-inf,inf]=>[-0.2688374196660471,0.5695165578467709] (2,-1; 2,-1), time: 1.5257s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_36, [-inf,inf]=>[-0.9935187245317009,0.1395083639825051] (2,-1; 2,-1), time: 2.1890s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_54, [-inf,inf]=>[-0.3083411250523772,0.7621640724376555] (2,-1; 2,-1), time: 2.2458s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_53, [-inf,inf]=>[1e-05,1.1197243883266397] (15,-1; 2,-1), time: 0.8033s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_83, [-inf,inf]=>[1e-05,0.890275359263073] (15,-1; 2,-1), time: 1.1913s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_88, [-inf,inf]=>[-0.6675741747618671,0.15222728536718413] (2,-1; 2,-1), time: 1.5798s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_87, [-inf,inf]=>[-0.12650726138424262,0.542579402628329] (2,-1; 2,-1), time: 1.8597s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_85, [-inf,inf]=>[-0.6113393228710733,0.05861085794064891] (2,-1; 2,-1), time: 2.5360s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_10, [-inf,inf]=>[-0.46667539611095166,0.9017356129609497] (2,-1; 2,-1), time: 1.3800s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_12, [-inf,inf]=>[-0.31249592480324745,0.5117767834467608] (2,-1; 2,-1), time: 1.5763s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_25, [-inf,inf]=>[1e-05,0.8021289697872253] (15,-1; 2,-1), time: 2.1024s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_48, [-inf,inf]=>[-0.5528012096934927,0.026175215632000218] (2,-1; 2,-1), time: 2.2247s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_58, [-inf,inf]=>[0.014244793702979364,0.7350639761180333] (2,-1; 2,-1), time: 1.5345s, #vars: 1047, #constrs: 293, improved: True
Solving MIP for lay4_75, [-inf,inf]=>[-0.43845475767663483,0.07106416191789994] (2,-1; 2,-1), time: 2.8149s, #vars: 1047, #constrs: 293, improved: True
PGD done for relu layer 2
MIP improved 54 nodes out of 54 unstable nodes, lb improved 13.116986274719238, ub improved 10.23635196685791, time 6.6134
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=100, out_features=100, bias=True) 2 6 torch.Size([100])
sorted candidates ['lay6_39', 'lay6_55', 'lay6_34', 'lay6_30', 'lay6_64', 'lay6_60', 'lay6_89', 'lay6_91', 'lay6_74', 'lay6_36', 'lay6_71', 'lay6_42', 'lay6_28', 'lay6_4', 'lay6_93', 'lay6_85', 'lay6_31', 'lay6_8', 'lay6_56', 'lay6_61', 'lay6_77', 'lay6_72', 'lay6_75', 'lay6_97', 'lay6_43', 'lay6_15', 'lay6_88', 'lay6_65', 'lay6_33', 'lay6_17', 'lay6_51', 'lay6_83', 'lay6_32', 'lay6_96', 'lay6_0', 'lay6_68', 'lay6_11', 'lay6_50', 'lay6_99', 'lay6_73', 'lay6_69', 'lay6_81', 'lay6_7', 'lay6_57', 'lay6_13', 'lay6_78', 'lay6_94', 'lay6_37', 'lay6_62', 'lay6_63', 'lay6_98', 'lay6_16', 'lay6_76', 'lay6_84', 'lay6_35', 'lay6_40', 'lay6_1', 'lay6_38', 'lay6_26', 'lay6_41', 'lay6_95', 'lay6_82', 'lay6_66', 'lay6_70', 'lay6_46', 'lay6_14', 'lay6_79', 'lay6_54', 'lay6_27', 'lay6_58', 'lay6_48', 'lay6_29', 'lay6_5', 'lay6_86', 'lay6_20', 'lay6_92', 'lay6_49'] filter: 1.0
Solving MIP for lay6_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1780s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_28, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2130s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2693s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1987s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.5464s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_89, [-inf,inf]=>[1e-05,0.9230069660474222] (15,-1; 2,-1), time: 2.7430s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2209s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_61, [-inf,inf]=>[-0.4501907472430475,0.9015019627818164] (2,-1; 2,-1), time: 3.8550s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_77, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7106s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_30, [-inf,inf]=>[-0.9276644026083566,1.1629842295923019] (2,-1; 2,-1), time: 4.3525s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_4, [-inf,inf]=>[-0.30969406370903374,0.2561497672371006] (2,-1; 2,-1), time: 4.4763s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_8, [-inf,inf]=>[-0.1900527762519673,0.941034049851978] (2,-1; 2,-1), time: 4.4273s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_39, [-inf,inf]=>[-0.4164613869150404,0.5690797144857977] (2,-1; 2,-1), time: 4.8460s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1783s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_34, [-inf,inf]=>[-0.7420065542667281,0.4663150591726415] (2,-1; 2,-1), time: 5.1717s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_17, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2025s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1728s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2498s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1713s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_56, [-inf,inf]=>[-0.424712454907557,0.3825501420752509] (2,-1; 2,-1), time: 5.4904s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3652s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_36, [-inf,inf]=>[-0.6090461980915333,0.06760529122684701] (2,-1; 2,-1), time: 6.0234s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9339s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_85, [-inf,inf]=>[-0.10579348892076823,0.5400956772333511] (2,-1; 2,-1), time: 6.9113s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_71, [-inf,inf]=>[-0.3972852391844299,0.2610848327154439] (2,-1; 2,-1), time: 7.7166s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_60, [-inf,inf]=>[-0.7543464715140358,0.1009079072269942] (2,-1; 2,-1), time: 7.8882s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.1722s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6215s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2385s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1755s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4045s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9379s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_75, [-inf,inf]=>[-0.058538215933891954,1.108770269679442] (2,-1; 2,-1), time: 4.6126s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3917s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_88, [-inf,inf]=>[-0.4491840848755705,0.47410923909476305] (2,-1; 2,-1), time: 5.0616s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_65, [-inf,inf]=>[-0.021757487866341733,0.3629431326503686] (2,-1; 2,-1), time: 5.0199s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_96, [-inf,inf]=>[-0.3614285269740431,0.4703318294578233] (2,-1; 2,-1), time: 4.2995s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_98, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3977s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_68, [-inf,inf]=>[-0.051579347262277295,1.2284459754874804] (2,-1; 2,-1), time: 5.2603s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2018s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_78, [-inf,inf]=>[1e-05,1.2859815082298842] (15,-1; 2,-1), time: 4.1527s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_72, [-inf,inf]=>[-0.34236156444437066,0.08049306742297756] (2,-1; 2,-1), time: 10.8738s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_94, [-inf,inf]=>[-0.26431583460259855,0.37790181762648173] (2,-1; 2,-1), time: 5.0289s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_73, [-inf,inf]=>[-0.4339425925738388,0.1564662240689307] (2,-1; 2,-1), time: 6.9500s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_43, [-inf,inf]=>[-0.41895510024244426,0.4192166587611787] (2,-1; 2,-1), time: 9.8747s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_40, [-inf,inf]=>[1e-05,0.6402015079370411] (15,-1; 2,-1), time: 3.2251s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_1, [-inf,inf]=>[1e-05,2.5123637178261387] (15,-1; 2,-1), time: 2.1386s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5519s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_50, [-inf,inf]=>[-0.5233417597023233,0.1871314307075155] (2,-1; 2,-1), time: 9.6339s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_38, [-inf,inf]=>[1e-05,1.5257020125091223] (15,-1; 2,-1), time: 2.4200s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4325s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4455s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_16, [-inf,inf]=>[-0.17276336454218044,0.43294933887083087] (2,-1; 2,-1), time: 6.8727s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_95, [-inf,inf]=>[1e-05,2.1250323522069094] (15,-1; 2,-1), time: 2.5244s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_82, [-inf,inf]=>[1e-05,1.2242397383570154] (15,-1; 2,-1), time: 2.2807s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_35, [-inf,inf]=>[-0.42932913683971785,0.2320369240180314] (2,-1; 2,-1), time: 5.6816s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2071s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_48, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.1764s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_26, [-inf,inf]=>[1e-05,1.027715672480744] (15,-1; 2,-1), time: 3.1424s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_42, [-inf,inf]=>[-0.2754273632533076,0.2483821481504325] (2,-1; 9,-1), time: 17.0256s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_62, [-inf,inf]=>[1e-05,0.5617684217237849] (15,-1; 2,-1), time: 9.0835s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_20, [-inf,inf]=>[1e-05,1.572571327116345] (15,-1; 2,-1), time: 1.4932s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.4371s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8653s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_5, [-inf,inf]=>[1e-05,1.2399198464490488] (15,-1; 2,-1), time: 2.1945s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_66, [-inf,inf]=>[1e-05,0.8027476750243845] (15,-1; 2,-1), time: 4.6751s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_64, [-inf,inf]=>[-0.30692959644747475,0.11972440856406114] (2,-1; 2,-1), time: 19.8140s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_41, [-inf,inf]=>[-0.49649809084866353,0.3853017335478068] (2,-1; 2,-1), time: 6.0847s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_58, [-inf,inf]=>[1e-05,0.6634960069750041] (15,-1; 2,-1), time: 3.8969s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_63, [-inf,inf]=>[-0.012007555436841169,0.8957399184588116] (2,-1; 2,-1), time: 11.5349s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_92, [-inf,inf]=>[1e-05,1.0429227620391721] (15,-1; 2,-1), time: 3.8101s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_70, [-inf,inf]=>[-0.08008313124623859,0.9821649025900803] (2,-1; 2,-1), time: 5.5675s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_29, [-inf,inf]=>[1e-05,0.7054046967474245] (15,-1; 2,-1), time: 5.0428s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_86, [-inf,inf]=>[-0.12701637257750004,0.4803775287570085] (2,-1; 2,-1), time: 7.4588s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_54, [-inf,inf]=>[-0.009528724813643074,0.6401608012158679] (2,-1; 2,-1), time: 7.8724s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_99, [-inf,inf]=>[-0.3944912235950058,0.12105316569310141] (9,-1; 2,-1), time: 18.8889s, #vars: 1225, #constrs: 510, improved: True
Solving MIP for lay6_7, [-inf,inf]=>[-0.4184393505009466,0.06900206036343928] (9,-1; 9,-1), time: 30.0133s, #vars: 1225, #constrs: 510, improved: True
PGD done for relu layer 3
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 1 has unstable to stable neurons: [(23, -1), (30, -1), (39, -1), (86, 1), (34, -1), (99, 1), (22, -1), (27, -1), (25, 1), (44, -1), (5, -1), (83, 1), (53, 1), (74, -1), (58, 1)]
best_l after optimization: -578.5963134765625 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.25978708267212
alpha-CROWN with intermediate bounds by MIP: tensor([[-54.46358109, -61.05664062, -75.53063202, -68.84465790, -50.76920319,
         -59.22023392, -76.13102722, -61.03638840, -71.54397583]],
       device='cuda:0') None
MIP improved 77 nodes out of 77 unstable nodes, lb improved 21.162487030029297, ub improved 30.4653263092041, time 38.8569
maximum relu layer improved by MIP so far 2
Linear(in_features=100, out_features=100, bias=True) 3 8 torch.Size([100])
sorted candidates ['lay8_71', 'lay8_19', 'lay8_75', 'lay8_7', 'lay8_87', 'lay8_22', 'lay8_33', 'lay8_24', 'lay8_89', 'lay8_28', 'lay8_59', 'lay8_88', 'lay8_39', 'lay8_34', 'lay8_20', 'lay8_40', 'lay8_15', 'lay8_60', 'lay8_67', 'lay8_53', 'lay8_66', 'lay8_52', 'lay8_63', 'lay8_78', 'lay8_93', 'lay8_21', 'lay8_81', 'lay8_42', 'lay8_41', 'lay8_2', 'lay8_4', 'lay8_57', 'lay8_58', 'lay8_74', 'lay8_0', 'lay8_62', 'lay8_65', 'lay8_54', 'lay8_38', 'lay8_95', 'lay8_3', 'lay8_50', 'lay8_64', 'lay8_90', 'lay8_72', 'lay8_11', 'lay8_98', 'lay8_16', 'lay8_48', 'lay8_27', 'lay8_25', 'lay8_96', 'lay8_13', 'lay8_30', 'lay8_91', 'lay8_49', 'lay8_69', 'lay8_6', 'lay8_43', 'lay8_76', 'lay8_79', 'lay8_94', 'lay8_10', 'lay8_99', 'lay8_44', 'lay8_37', 'lay8_17', 'lay8_35', 'lay8_82', 'lay8_26', 'lay8_12', 'lay8_77', 'lay8_1', 'lay8_8', 'lay8_80', 'lay8_68', 'lay8_83', 'lay8_85', 'lay8_5', 'lay8_55', 'lay8_70', 'lay8_9', 'lay8_92', 'lay8_32', 'lay8_51', 'lay8_56', 'lay8_73', 'lay8_18', 'lay8_61', 'lay8_31', 'lay8_23', 'lay8_47', 'lay8_84', 'lay8_36', 'lay8_86', 'lay8_14', 'lay8_29', 'lay8_46'] filter: 1.0
Solving MIP for lay8_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2621s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2806s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_60, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_88, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.5805s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6804s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_66, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2556s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_67, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7329s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2203s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_53, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.6628s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9062s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_52, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.2444s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.7435s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.7701s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_21, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.4086s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_59, [-inf,inf]=>[-1.1196249723686942,1.0670837918155345] (2,-1; 2,-1), time: 9.7406s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_2, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2151s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_4, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2418s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2506s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_74, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2573s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_39, [-inf,inf]=>[-0.5795465466502657,0.4560205062724615] (2,-1; 2,-1), time: 17.7166s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_75, [-inf,inf]=>[-0.7649884207494002,0.5968868942766931] (2,-1; 2,-1), time: 18.0625s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_89, [-inf,inf]=>[-0.3615801510634369,0.7705183250315342] (2,-1; 9,-1), time: 18.2357s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2273s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_40, [-inf,inf]=>[-0.4741655016903046,0.17347799043227838] (2,-1; 9,-1), time: 19.5559s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_95, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2261s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_3, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2594s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_78, [-inf,inf]=>[-0.5445375243394571,0.35852234147486706] (2,-1; 2,-1), time: 18.7089s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_71, [-inf,inf]=>[-0.5615447743177603,1.7952670984786485] (9,-1; 2,-1), time: 20.7443s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_7, [-inf,inf]=>[-0.7497341954349211,0.008090125165627071] (2,-1; 9,-1), time: 20.8586s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_24, [-inf,inf]=>[-0.2646500626627313,0.5066199195983947] (2,-1; 9,-1), time: 22.0694s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_22, [-inf,inf]=>[-0.5280049269582802,0.0106696776764163] (2,-1; 9,-1), time: 23.7693s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_38, [-inf,inf]=>[-0.9344751737526745,0.06739607360783616] (2,-1; 2,-1), time: 9.0424s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_0, [-inf,inf]=>[-0.5877900198414044,0.3996952855326675] (2,-1; 9,-1), time: 17.7020s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_41, [-inf,inf]=>[-0.8734931148996209,0.18250090603264282] (9,-1; 2,-1), time: 19.4420s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_72, [-inf,inf]=>[-0.16554122740872662,1.0239360317416388] (2,-1; 2,-1), time: 8.5470s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_34, [-inf,inf]=>[-0.297729290827544,0.2186965007324044] (9,-1; 9,-1), time: 30.0118s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_28, [-inf,inf]=>[-0.4425306444529923,0.09721483000943429] (9,-1; 9,-1), time: 30.0203s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2176s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_15, [-inf,inf]=>[-0.49039032689440587,0.012876465102101449] (9,-1; 9,-1), time: 30.0146s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_81, [-inf,inf]=>[-0.4026772349221059,0.15101366746638828] (2,-1; 9,-1), time: 25.1835s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2188s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2187s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6074s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.3686s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_57, [-inf,inf]=>[-0.29704554064649297,0.709585553017457] (2,-1; 9,-1), time: 22.2811s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_79, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2476s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_27, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4044s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_30, [-inf,inf]=>[1e-05,1.787001768111101] (15,-1; 2,-1), time: 3.9789s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_25, [-inf,inf]=>[1e-05,1.5139671279338212] (15,-1; 2,-1), time: 4.9983s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2592s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_50, [-inf,inf]=>[-0.9861992609798397,0.20075791554627903] (2,-1; 2,-1), time: 15.5300s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_94, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 3.2968s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_16, [-inf,inf]=>[1e-05,1.6422568877683947] (15,-1; 2,-1), time: 8.5041s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_82, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6210s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_48, [-inf,inf]=>[-0.680246792020327,0.5381523828200278] (2,-1; 2,-1), time: 9.2978s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7163s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_37, [-inf,inf]=>[1e-05,0.834308500597935] (15,-1; 2,-1), time: 3.5941s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_65, [-inf,inf]=>[-0.7807817240715262,0.20795614100198115] (9,-1; 2,-1), time: 20.8012s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_64, [-inf,inf]=>[-0.9209278752447629,0.1030418720899594] (9,-1; 2,-1), time: 18.7179s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_80, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2219s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_11, [-inf,inf]=>[-0.48413316539091583,0.6826303220684309] (2,-1; 2,-1), time: 17.9517s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_76, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.3391s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_17, [-inf,inf]=>[1e-05,1.9506967510690707] (15,-1; 2,-1), time: 6.5732s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2225s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_55, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.6186s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_77, [-inf,inf]=>[1e-05,2.02257496204746] (15,-1; 2,-1), time: 5.4135s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_1, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.6065s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_92, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2466s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2424s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2548s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_8, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1596s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_62, [-inf,inf]=>[-0.4123027637523694,0.20127182476240368] (9,-1; 9,-1), time: 30.0095s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_18, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2444s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_43, [-inf,inf]=>[-1.042534192195976,0.22571865385029974] (9,-1; 2,-1), time: 18.1565s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_6, [-inf,inf]=>[1e-05,0.8079604263665343] (15,-1; 9,-1), time: 18.6039s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_56, [-inf,inf]=>[1e-05,1.9314890949024468] (15,-1; 2,-1), time: 4.0329s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_47, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2484s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1975s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_96, [-inf,inf]=>[-0.29782411964525224,0.4039599588972194] (9,-1; 2,-1), time: 21.3093s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_86, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2233s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_31, [-inf,inf]=>[1e-05,1.9410225974726547] (15,-1; 2,-1), time: 2.4846s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_14, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2494s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_46, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2205s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 2.7224s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_98, [-inf,inf]=>[-0.29222753290579934,0.2807954156848146] (9,-1; 9,-1), time: 30.0158s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_36, [-inf,inf]=>[1e-05,2.0641442678748754] (15,-1; 2,-1), time: 5.4635s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_99, [-inf,inf]=>[-0.01384171657159855,0.82028693087019] (9,-1; 2,-1), time: 23.3050s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_70, [-inf,inf]=>[1e-05,0.8857802686898157] (15,-1; 9,-1), time: 15.5219s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_35, [-inf,inf]=>[-0.07453189470867787,0.3748375153660354] (9,-1; 2,-1), time: 23.6045s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_9, [-inf,inf]=>[1e-05,0.7636165721142253] (15,-1; 9,-1), time: 18.3670s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_10, [-inf,inf]=>[-0.26969006684665864,0.24613907851093433] (9,-1; 9,-1), time: 30.0114s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_61, [-inf,inf]=>[1e-05,1.0018807490511297] (15,-1; 9,-1), time: 15.6056s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_26, [-inf,inf]=>[-0.1007242955601982,0.3617701588975637] (9,-1; 2,-1), time: 28.7879s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_83, [-inf,inf]=>[-0.692205924030787,0.09497227309946374] (9,-1; 2,-1), time: 28.1553s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_68, [-inf,inf]=>[-0.33934461251025194,0.20147839394905373] (9,-1; 9,-1), time: 30.0122s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_73, [-inf,inf]=>[-0.31849037196509505,0.6399050595872631] (2,-1; 9,-1), time: 22.7049s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_85, [-inf,inf]=>[-0.4416121017409305,0.12043393826997115] (9,-1; 9,-1), time: 30.0094s, #vars: 1389, #constrs: 706, improved: True
Solving MIP for lay8_29, [-inf,inf]=>[-0.22984999698114592,0.6091046000421484] (9,-1; 2,-1), time: 19.5598s, #vars: 1389, #constrs: 706, improved: True
PGD done for relu layer 4
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 2 has unstable to stable neurons: [(55, -1), (89, 1), (91, -1), (74, -1), (28, -1), (93, -1), (31, -1), (77, -1), (97, -1), (15, -1), (33, -1), (17, -1), (51, -1), (83, -1), (32, -1), (0, -1), (11, -1), (69, -1), (81, -1), (57, -1), (13, -1), (78, 1), (37, -1), (62, 1), (98, -1), (76, -1), (84, -1), (40, 1), (1, 1), (38, 1), (26, 1), (95, 1), (82, 1), (66, 1), (46, -1), (14, -1), (79, -1), (27, -1), (58, 1), (48, -1), (29, 1), (5, 1), (20, 1), (92, 1), (49, -1)]
best_l after optimization: -296.42132568359375 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.486601114273071
alpha-CROWN with intermediate bounds by MIP: tensor([[-27.74119186, -30.88487053, -38.91827393, -35.82728195, -25.87310791,
         -30.24288368, -38.28709412, -31.50704002, -37.13956070]],
       device='cuda:0') None
MIP improved 98 nodes out of 98 unstable nodes, lb improved 42.307594299316406, ub improved 73.30953216552734, time 71.8722
maximum relu layer improved by MIP so far 3
Linear(in_features=100, out_features=100, bias=True) 4 10 torch.Size([100])
sorted candidates ['lay10_37', 'lay10_23', 'lay10_80', 'lay10_40', 'lay10_14', 'lay10_79', 'lay10_35', 'lay10_1', 'lay10_74', 'lay10_72', 'lay10_46', 'lay10_42', 'lay10_22', 'lay10_91', 'lay10_33', 'lay10_51', 'lay10_63', 'lay10_5', 'lay10_99', 'lay10_30', 'lay10_34', 'lay10_13', 'lay10_73', 'lay10_19', 'lay10_11', 'lay10_17', 'lay10_88', 'lay10_93', 'lay10_94', 'lay10_57', 'lay10_15', 'lay10_44', 'lay10_26', 'lay10_96', 'lay10_47', 'lay10_65', 'lay10_89', 'lay10_71', 'lay10_2', 'lay10_41', 'lay10_27', 'lay10_48', 'lay10_67', 'lay10_21', 'lay10_77', 'lay10_12', 'lay10_59', 'lay10_3', 'lay10_50', 'lay10_39', 'lay10_8', 'lay10_76', 'lay10_29', 'lay10_6', 'lay10_86', 'lay10_81', 'lay10_97', 'lay10_54', 'lay10_60', 'lay10_0', 'lay10_68', 'lay10_56', 'lay10_70', 'lay10_43', 'lay10_98', 'lay10_10', 'lay10_53', 'lay10_52', 'lay10_95', 'lay10_25', 'lay10_84', 'lay10_75', 'lay10_55', 'lay10_92', 'lay10_9', 'lay10_36', 'lay10_24', 'lay10_18', 'lay10_66', 'lay10_31', 'lay10_38', 'lay10_69', 'lay10_78', 'lay10_85', 'lay10_20', 'lay10_82', 'lay10_62', 'lay10_49', 'lay10_64', 'lay10_28', 'lay10_4', 'lay10_61', 'lay10_45', 'lay10_90', 'lay10_16', 'lay10_87', 'lay10_58', 'lay10_7', 'lay10_83', 'lay10_32'] filter: 1.0
Solving MIP for lay10_22, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3280s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.7988s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3152s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2918s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.5422s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.6098s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_13, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3066s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_91, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.1951s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2898s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_11, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.3155s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_40, [-inf,inf]=>[-0.6703478080277464,0.9054506086866974] (2,-1; 9,-1), time: 21.1718s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_14, [-inf,inf]=>[-0.08544629010920857,0.736625783500307] (9,-1; 9,-1), time: 30.0123s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_79, [-inf,inf]=>[-0.6423193781710913,0.04091118132434331] (9,-1; 9,-1), time: 30.0132s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_35, [-inf,inf]=>[-0.512303888260732,0.2860546959126919] (9,-1; 9,-1), time: 30.0153s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_46, [-inf,inf]=>[-0.15865168641633814,0.8263169031616293] (9,-1; 9,-1), time: 30.0151s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_74, [-inf,inf]=>[-0.7433385536614634,0.8062993152576977] (9,-1; 9,-1), time: 30.0157s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_42, [-inf,inf]=>[-0.6130169654120539,0.46022661438268414] (9,-1; 9,-1), time: 30.0168s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_72, [-inf,inf]=>[-0.46059131461677105,0.24901238777913323] (9,-1; 9,-1), time: 30.0176s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_1, [-inf,inf]=>[-0.5415231584026798,0.20248641486695318] (9,-1; 9,-1), time: 30.0181s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_80, [-inf,inf]=>[-0.7761532107368743,0.10382091143787234] (9,-1; 9,-1), time: 30.0200s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_33, [-inf,inf]=>[-0.3872592431718646,0.49332003077923986] (9,-1; 9,-1), time: 30.0264s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_44, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2869s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_63, [-inf,inf]=>[-0.48553594797779553,0.6235397061207784] (9,-1; 9,-1), time: 30.0137s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3338s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_30, [-inf,inf]=>[-0.3931764207652274,0.27961924429206025] (9,-1; 9,-1), time: 30.0112s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_26, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5318s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_34, [-inf,inf]=>[-0.5819942414072121,0.0431116500721592] (9,-1; 9,-1), time: 30.0114s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_73, [-inf,inf]=>[-0.7032549434683959,0.17677816385904918] (9,-1; 9,-1), time: 30.0117s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_17, [-inf,inf]=>[-0.3101036046305167,0.43582319723031526] (9,-1; 9,-1), time: 30.0181s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_2, [-inf,inf]=>[1e-05,1.117516974522804] (15,-1; 9,-1), time: 15.2627s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_27, [-inf,inf]=>[1e-05,1.7461700145804193] (15,-1; 9,-1), time: 15.2574s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4872s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_77, [-inf,inf]=>[1e-05,1.6973183978587476] (15,-1; 2,-1), time: 5.7773s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_88, [-inf,inf]=>[-0.36994164642464605,0.038991697244575484] (9,-1; 9,-1), time: 30.0249s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_96, [-inf,inf]=>[-0.5519748225617737,0.5318450167823545] (9,-1; 9,-1), time: 30.0137s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_15, [-inf,inf]=>[-0.2886563134670503,0.9558751429679154] (9,-1; 9,-1), time: 30.0163s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_57, [-inf,inf]=>[-0.4714733098167255,0.11241837118565261] (9,-1; 9,-1), time: 30.0100s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_94, [-inf,inf]=>[-0.3200966751332286,0.7027675408762516] (9,-1; 9,-1), time: 30.0220s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_65, [-inf,inf]=>[-0.7273131663558633,0.004882838878776253] (9,-1; 9,-1), time: 30.0135s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_47, [-inf,inf]=>[-0.8838461374233256,0.3541972479154296] (9,-1; 9,-1), time: 30.0193s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_89, [-inf,inf]=>[-0.5589971832531101,0.017838641878550558] (9,-1; 9,-1), time: 30.0664s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_71, [-inf,inf]=>[-0.27785098815936615,0.48910106817893345] (9,-1; 9,-1), time: 30.0084s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_81, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3178s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_41, [-inf,inf]=>[-0.3866304913470407,0.09865911386767816] (9,-1; 9,-1), time: 30.0233s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_54, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3045s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_48, [-inf,inf]=>[-0.038051437419846026,0.7820544025436443] (9,-1; 9,-1), time: 30.0114s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_67, [-inf,inf]=>[-0.14133037146273625,0.4100230775783454] (9,-1; 9,-1), time: 30.0336s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_50, [-inf,inf]=>[1e-05,1.3749837802801899] (15,-1; 9,-1), time: 15.3296s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_21, [-inf,inf]=>[-0.3187994577408707,0.1554048826871617] (9,-1; 9,-1), time: 30.0153s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.4546s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_86, [-inf,inf]=>[1e-05,1.3368270464650678] (15,-1; 9,-1), time: 15.8148s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_59, [-inf,inf]=>[-0.20294938002994534,0.5015750389877476] (9,-1; 9,-1), time: 30.0082s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_3, [-inf,inf]=>[-0.6591520776864657,0.22915019953965493] (9,-1; 9,-1), time: 30.0446s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_98, [-inf,inf]=>[1e-05,1.3521062415228302] (15,-1; 9,-1), time: 15.2483s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_39, [-inf,inf]=>[-0.599126189217093,0.013605030145419071] (9,-1; 9,-1), time: 30.0272s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_10, [-inf,inf]=>[1e-05,1.3460326481935208] (15,-1; 9,-1), time: 15.2932s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_8, [-inf,inf]=>[-0.7946245386499026,0.8130819646984312] (2,-1; 9,-1), time: 23.1437s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_60, [-inf,inf]=>[-0.5357034180389878,0.5033178863970491] (9,-1; 2,-1), time: 23.9814s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_25, [-inf,inf]=>[1e-05,1.477344431591262] (15,-1; 2,-1), time: 6.5226s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_9, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2715s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_76, [-inf,inf]=>[-0.466805375757382,0.7678274300294535] (9,-1; 9,-1), time: 30.0129s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_6, [-inf,inf]=>[-0.27073248541939665,0.18441126883874087] (9,-1; 9,-1), time: 30.0102s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_29, [-inf,inf]=>[-0.07242965788586345,0.8326004775141769] (9,-1; 9,-1), time: 30.0144s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_97, [-inf,inf]=>[-0.38672002192681604,0.7298576463368318] (9,-1; 9,-1), time: 30.0117s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_24, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2926s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_0, [-inf,inf]=>[-0.3330089197084709,0.5252462347078742] (9,-1; 9,-1), time: 30.0088s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_68, [-inf,inf]=>[-0.30947346895364514,0.48485913013475684] (9,-1; 9,-1), time: 30.0150s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 4.6104s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_70, [-inf,inf]=>[-0.40270739373891157,0.16337898952395394] (9,-1; 9,-1), time: 30.0107s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2599s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_43, [-inf,inf]=>[-0.5777819373572999,0.17699813480643628] (9,-1; 9,-1), time: 30.0179s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_75, [-inf,inf]=>[1e-05,1.8440956958453476] (15,-1; 9,-1), time: 15.3015s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_49, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.8421s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_52, [-inf,inf]=>[-0.4799699154190148,0.480187126961544] (2,-1; 9,-1), time: 26.1824s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_18, [-inf,inf]=>[1e-05,1.7182700904377326] (15,-1; 2,-1), time: 12.9348s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_31, [-inf,inf]=>[1e-05,0.7604963647825597] (15,-1; 9,-1), time: 15.2935s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_69, [-inf,inf]=>[1e-05,1.0534052109070162] (15,-1; 9,-1), time: 15.2975s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_53, [-inf,inf]=>[-0.19686396379076027,0.6898646719892809] (9,-1; 9,-1), time: 30.0120s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_45, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.2344s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_66, [-inf,inf]=>[1e-05,1.507872990361961] (15,-1; 9,-1), time: 17.0589s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_95, [-inf,inf]=>[-0.7427842140686017,0.08684257351061749] (9,-1; 9,-1), time: 30.0135s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_84, [-inf,inf]=>[-0.0440350467977521,0.5313677828392704] (9,-1; 9,-1), time: 30.0131s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_90, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.2762s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_55, [-inf,inf]=>[-0.02074206141793858,0.664998590606959] (9,-1; 9,-1), time: 30.0914s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_32, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2972s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.7103s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_92, [-inf,inf]=>[-0.16798780572798025,0.38273194873045147] (9,-1; 9,-1), time: 30.0354s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_36, [-inf,inf]=>[-0.24031496236544805,0.2903068245373995] (9,-1; 9,-1), time: 30.0184s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_4, [-inf,inf]=>[1e-05,0.7768675857683991] (15,-1; 9,-1), time: 16.0203s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_38, [-inf,inf]=>[-0.5116234174591151,0.41611114704640956] (9,-1; 9,-1), time: 30.0115s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_58, [-inf,inf]=>[1e-05,2.2731935937092307] (15,-1; 2,-1), time: 11.0494s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_16, [-inf,inf]=>[1e-05,0.673586538549789] (15,-1; 9,-1), time: 15.2520s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_87, [-inf,inf]=>[1e-05,1.3775940500899317] (15,-1; 9,-1), time: 15.3015s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_85, [-inf,inf]=>[-0.4635894610189481,0.09473404671293341] (9,-1; 9,-1), time: 30.0258s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_82, [-inf,inf]=>[-0.4292350789202326,0.5968681146451431] (9,-1; 9,-1), time: 30.0202s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_62, [-inf,inf]=>[-0.25746926801873476,0.32491809665442994] (9,-1; 9,-1), time: 30.0088s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_64, [-inf,inf]=>[-0.556402292307723,0.05870527983295656] (9,-1; 9,-1), time: 30.0146s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_28, [-inf,inf]=>[-0.29207778148076735,0.5150860091704591] (9,-1; 9,-1), time: 30.0169s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_7, [-inf,inf]=>[1e-05,0.4804968430332803] (15,-1; 9,-1), time: 21.9651s, #vars: 1563, #constrs: 917, improved: True
Solving MIP for lay10_61, [-inf,inf]=>[-0.6276768915196949,0.248530541760556] (9,-1; 9,-1), time: 30.0110s, #vars: 1563, #constrs: 917, improved: True
PGD done for relu layer 5
Run alpha-CROWN after refining layer 8 and relu idx 3
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 3 has unstable to stable neurons: [(19, -1), (87, -1), (33, -1), (88, -1), (20, -1), (60, -1), (67, -1), (53, -1), (66, -1), (52, -1), (63, -1), (93, -1), (21, -1), (42, -1), (2, -1), (4, -1), (58, -1), (74, -1), (54, -1), (95, -1), (3, -1), (90, -1), (16, 1), (27, -1), (25, 1), (13, -1), (30, 1), (91, -1), (49, -1), (69, -1), (6, 1), (76, -1), (79, -1), (94, -1), (44, -1), (37, 1), (17, 1), (82, -1), (12, -1), (77, 1), (1, -1), (8, -1), (80, -1), (5, -1), (55, -1), (70, 1), (9, 1), (92, -1), (32, -1), (51, -1), (56, 1), (18, -1), (61, 1), (31, 1), (23, -1), (47, -1), (84, -1), (36, 1), (86, -1), (14, -1), (46, -1)]
best_l after optimization: -145.52981567382812 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.281056642532349
alpha-CROWN with intermediate bounds by MIP: tensor([[-13.38530827, -14.81450939, -19.19572067, -18.42813492, -12.35885048,
         -14.79914856, -17.77586365, -15.94236565, -18.82990646]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 132.91087341308594, ub improved 176.68289184570312, time 136.1365
maximum relu layer improved by MIP so far 4
Linear(in_features=100, out_features=100, bias=True) 5 12 torch.Size([100])
sorted candidates ['lay12_24', 'lay12_31', 'lay12_98', 'lay12_59', 'lay12_63', 'lay12_0', 'lay12_87', 'lay12_83', 'lay12_46', 'lay12_29', 'lay12_35', 'lay12_4', 'lay12_96', 'lay12_61', 'lay12_68', 'lay12_81', 'lay12_72', 'lay12_62', 'lay12_23', 'lay12_50', 'lay12_51', 'lay12_69', 'lay12_67', 'lay12_95', 'lay12_45', 'lay12_15', 'lay12_60', 'lay12_99', 'lay12_88', 'lay12_48', 'lay12_58', 'lay12_53', 'lay12_75', 'lay12_27', 'lay12_34', 'lay12_66', 'lay12_64', 'lay12_3', 'lay12_94', 'lay12_97', 'lay12_20', 'lay12_32', 'lay12_85', 'lay12_11', 'lay12_28', 'lay12_8', 'lay12_43', 'lay12_33', 'lay12_57', 'lay12_54', 'lay12_41', 'lay12_25', 'lay12_37', 'lay12_80', 'lay12_77', 'lay12_39', 'lay12_49', 'lay12_1', 'lay12_92', 'lay12_18', 'lay12_86', 'lay12_40', 'lay12_38', 'lay12_55', 'lay12_19', 'lay12_42', 'lay12_52', 'lay12_14', 'lay12_90', 'lay12_79', 'lay12_22', 'lay12_30', 'lay12_76', 'lay12_13', 'lay12_7', 'lay12_10', 'lay12_26', 'lay12_5', 'lay12_91', 'lay12_84', 'lay12_2', 'lay12_17', 'lay12_65', 'lay12_70', 'lay12_9', 'lay12_12', 'lay12_89', 'lay12_71', 'lay12_47', 'lay12_21', 'lay12_74', 'lay12_36', 'lay12_82', 'lay12_6', 'lay12_78', 'lay12_73', 'lay12_93', 'lay12_16', 'lay12_56', 'lay12_44'] filter: 1.0
Solving MIP for lay12_83, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3730s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_35, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.4604s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_31, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6145s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_23, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3236s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_87, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 5.7669s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_51, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3017s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_69, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.2819s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_0, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.0234s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_68, [-inf,inf]=>[-0.5789358498996197,0.9894701230594599] (9,-1; 9,-1), time: 30.0211s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_61, [-inf,inf]=>[-0.8867216784546278,0.04071727098539559] (9,-1; 9,-1), time: 30.0246s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_29, [-inf,inf]=>[-0.7846156145401756,0.25733746592473644] (9,-1; 9,-1), time: 30.0338s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_96, [-inf,inf]=>[-0.47251395519556655,0.38267188108124683] (9,-1; 9,-1), time: 30.0293s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_81, [-inf,inf]=>[-0.49502328751287744,0.5487599230224582] (9,-1; 9,-1), time: 30.0322s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_4, [-inf,inf]=>[-0.6847262905429027,0.43697604302214044] (9,-1; 9,-1), time: 30.0383s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_59, [-inf,inf]=>[-0.07727864837798319,1.5773385376628573] (9,-1; 9,-1), time: 30.0434s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_63, [-inf,inf]=>[-1.2935481756254537,0.21557242652875058] (9,-1; 9,-1), time: 30.0490s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_46, [-inf,inf]=>[-0.5031516547111634,0.7617709608853898] (9,-1; 9,-1), time: 30.0579s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_98, [-inf,inf]=>[-0.9438986897987687,0.030787255601037296] (9,-1; 9,-1), time: 30.0621s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_24, [-inf,inf]=>[-0.8432681599310058,1.1291003222143838] (9,-1; 9,-1), time: 30.1077s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_72, [-inf,inf]=>[-0.3502353840653466,1.3421688072531064] (9,-1; 9,-1), time: 30.0290s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_62, [-inf,inf]=>[-0.9716594373660103,0.007905146321629152] (9,-1; 9,-1), time: 30.0496s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_58, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3567s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_15, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.6156s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_34, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.5409s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_50, [-inf,inf]=>[-0.8622506654362473,0.03767250658252744] (9,-1; 9,-1), time: 30.0124s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_20, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.3971s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_67, [-inf,inf]=>[-0.5613904141109187,0.19284855913913646] (9,-1; 9,-1), time: 30.0236s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_95, [-inf,inf]=>[-0.6701292079560864,0.21406311576767034] (9,-1; 9,-1), time: 30.0295s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_97, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 8.3472s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_99, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.0209s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_94, [-inf,inf]=>[1e-05,1.145102924324178] (15,-1; 9,-1), time: 21.1431s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_3, [-inf,inf]=>[1e-05,1.4761844930045083] (15,-1; 9,-1), time: 26.0585s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_45, [-inf,inf]=>[-0.8429760944727477,0.0945602839980167] (9,-1; 9,-1), time: 30.0257s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_60, [-inf,inf]=>[-0.7741491134346804,0.1645213986010424] (9,-1; 9,-1), time: 30.0200s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_75, [-inf,inf]=>[-0.6627823832204351,0.16277093939281834] (9,-1; 9,-1), time: 30.0104s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_48, [-inf,inf]=>[-0.719478463075732,0.18056289341890489] (9,-1; 9,-1), time: 30.0260s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_88, [-inf,inf]=>[-0.572799716656801,0.3993683114764077] (9,-1; 9,-1), time: 30.0309s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_53, [-inf,inf]=>[-0.573243666123412,1.0694688136453978] (9,-1; 9,-1), time: 30.0432s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_27, [-inf,inf]=>[-0.892118045178118,0.1930685094768025] (9,-1; 9,-1), time: 30.0442s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_57, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3160s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_37, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3103s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_66, [-inf,inf]=>[-0.5369911665433823,1.1323538567119265] (9,-1; 9,-1), time: 30.0232s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_64, [-inf,inf]=>[-0.6530074166670995,0.19298557408630443] (9,-1; 9,-1), time: 30.0415s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_32, [-inf,inf]=>[-0.9195266745056375,0.06812089390923312] (9,-1; 9,-1), time: 30.1461s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_33, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.2981s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_85, [-inf,inf]=>[-0.6261040192534212,0.28083314759217387] (9,-1; 9,-1), time: 30.0127s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_11, [-inf,inf]=>[-1.1027548111920384,0.5996748010710656] (9,-1; 9,-1), time: 30.0133s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_38, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3843s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_8, [-inf,inf]=>[-0.09504548619092165,0.8719845229309364] (9,-1; 9,-1), time: 30.0595s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_28, [-inf,inf]=>[-0.6808543643017482,0.0884622732379404] (9,-1; 9,-1), time: 30.1903s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_42, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3156s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_19, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 6.3188s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_18, [-inf,inf]=>[1e-05,2.4928324638594863] (15,-1; 9,-1), time: 15.2997s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_86, [-inf,inf]=>[1e-05,2.7596379329862146] (15,-1; 9,-1), time: 15.3259s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_43, [-inf,inf]=>[-0.4752416472332441,0.7763966632504276] (9,-1; 9,-1), time: 30.0095s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_54, [-inf,inf]=>[-0.9948137408769633,0.0741357919618475] (9,-1; 9,-1), time: 30.0157s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_25, [-inf,inf]=>[-0.5667005506105649,0.31230194613529344] (9,-1; 9,-1), time: 30.0354s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_41, [-inf,inf]=>[-0.9650913141803142,0.033147648875806957] (9,-1; 9,-1), time: 30.0547s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_80, [-inf,inf]=>[-0.5067175733593723,0.295705159521209] (9,-1; 9,-1), time: 30.0430s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_77, [-inf,inf]=>[-0.6073231550241732,0.20829570751742577] (9,-1; 9,-1), time: 30.0622s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_39, [-inf,inf]=>[-0.7287157725877722,0.061937366258247285] (9,-1; 9,-1), time: 30.0202s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_49, [-inf,inf]=>[-0.7425667637575372,0.6056598133757758] (9,-1; 9,-1), time: 30.0484s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_1, [-inf,inf]=>[-0.40316060186077673,1.3187365028521112] (9,-1; 9,-1), time: 30.0166s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_92, [-inf,inf]=>[-0.32605895648023553,0.5343194962982285] (9,-1; 9,-1), time: 30.0136s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_5, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3455s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_84, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3829s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_90, [-inf,inf]=>[1e-05,1.0513259672557786] (15,-1; 9,-1), time: 15.3123s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_40, [-inf,inf]=>[-0.5647296940309395,0.17830522587391334] (9,-1; 9,-1), time: 30.0653s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_55, [-inf,inf]=>[-0.49558568035674505,0.35640780407933875] (9,-1; 9,-1), time: 30.0182s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_7, [-inf,inf]=>[1e-05,2.0856933688407717] (15,-1; 2,-1), time: 9.7104s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_52, [-inf,inf]=>[-0.40657659735245855,0.6318907617628466] (9,-1; 9,-1), time: 30.0340s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_89, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3319s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_30, [-inf,inf]=>[1e-05,1.2355763778372466] (15,-1; 9,-1), time: 16.0387s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_17, [-inf,inf]=>[1e-05,1.6846986082407613] (15,-1; 9,-1), time: 15.3267s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_14, [-inf,inf]=>[-0.5808370032437397,0.20719352197782465] (9,-1; 9,-1), time: 30.0188s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_2, [-inf,inf]=>[1e-05,1.1227027781982908] (15,-1; 9,-1), time: 16.1192s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_12, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 7.5867s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_79, [-inf,inf]=>[-0.5165842116314241,0.2665128601984185] (9,-1; 9,-1), time: 30.0114s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_6, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3375s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_78, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.9720s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_22, [-inf,inf]=>[-0.7032629849589354,0.07715669187572159] (9,-1; 9,-1), time: 30.0299s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_93, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 0.3303s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_16, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.1882s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_76, [-inf,inf]=>[-0.5502690239079874,0.1303014473090258] (9,-1; 9,-1), time: 30.0101s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_13, [-inf,inf]=>[-0.765659017511404,1.277845309092362] (9,-1; 9,-1), time: 30.0209s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_10, [-inf,inf]=>[-0.5046383707097588,0.4133110079993309] (9,-1; 9,-1), time: 30.0170s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_26, [-inf,inf]=>[-0.36047525401108527,1.2882848618814493] (9,-1; 9,-1), time: 30.0553s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_91, [-inf,inf]=>[-0.04421366989320491,0.937665839569207] (9,-1; 9,-1), time: 30.0583s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_65, [-inf,inf]=>[-0.8894485635400301,0.2180731134871236] (9,-1; 9,-1), time: 30.0402s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_56, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 9.9351s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_70, [-inf,inf]=>[-0.7571912614529335,0.2955654616152463] (9,-1; 9,-1), time: 30.0254s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_9, [-inf,inf]=>[-0.04822599752348105,0.8891534595265829] (9,-1; 9,-1), time: 30.0246s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_71, [-inf,inf]=>[-0.7333693031315349,0.44071882895506825] (9,-1; 9,-1), time: 30.0084s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_47, [-inf,inf]=>[-0.26420989380749577,0.71129358716363] (9,-1; 9,-1), time: 30.0440s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_21, [-inf,inf]=>[-1.145818462412756,0.24019043869489298] (9,-1; 9,-1), time: 30.0118s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_74, [-inf,inf]=>[-0.5270115677256167,0.9626282996322285] (9,-1; 9,-1), time: 30.0726s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_36, [-inf,inf]=>[-0.5304517054749124,0.7134276370085944] (9,-1; 9,-1), time: 30.0354s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_82, [-inf,inf]=>[-0.7450511793858116,0.1027686755709112] (9,-1; 9,-1), time: 30.0351s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_73, [-inf,inf]=>[-0.5059905615987176,0.46294627057074156] (9,-1; 9,-1), time: 30.0313s, #vars: 1775, #constrs: 1185, improved: True
Solving MIP for lay12_44, [-inf,inf]=>[-0.8141606353946038,0.46697442523928884] (9,-1; 9,-1), time: 30.0284s, #vars: 1775, #constrs: 1185, improved: True
PGD done for relu layer 6
Run alpha-CROWN after refining layer 10 and relu idx 4
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 4 has unstable to stable neurons: [(37, -1), (23, -1), (22, -1), (91, -1), (51, -1), (5, -1), (99, -1), (13, -1), (19, -1), (11, -1), (93, -1), (44, -1), (26, -1), (2, 1), (27, 1), (77, 1), (12, -1), (50, 1), (86, 1), (81, -1), (54, -1), (56, -1), (98, 1), (10, 1), (25, 1), (75, 1), (9, -1), (24, -1), (18, 1), (66, 1), (31, 1), (69, 1), (78, -1), (20, -1), (49, -1), (4, 1), (45, -1), (90, -1), (16, 1), (87, 1), (58, 1), (7, 1), (83, -1), (32, -1)]
best_l after optimization: -86.52901458740234 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 11.825385332107544
alpha-CROWN with intermediate bounds by MIP: tensor([[ -7.76400566,  -8.46320343, -11.40055656, -11.96715450,  -6.82009602,
          -8.75086021,  -9.55356312, -10.12696934, -11.68260956]],
       device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 316.0204162597656, ub improved 398.9031982421875, time 150.9573
maximum relu layer improved by MIP so far 5
Linear(in_features=100, out_features=100, bias=True) 6 14 torch.Size([100])
sorted candidates ['lay14_87', 'lay14_41', 'lay14_92', 'lay14_23', 'lay14_20', 'lay14_5', 'lay14_18', 'lay14_51', 'lay14_39', 'lay14_90', 'lay14_85', 'lay14_75', 'lay14_19', 'lay14_59', 'lay14_78', 'lay14_58', 'lay14_63', 'lay14_54', 'lay14_35', 'lay14_84', 'lay14_33', 'lay14_77', 'lay14_53', 'lay14_96', 'lay14_62', 'lay14_67', 'lay14_57', 'lay14_76', 'lay14_94', 'lay14_0', 'lay14_70', 'lay14_74', 'lay14_31', 'lay14_29', 'lay14_72', 'lay14_11', 'lay14_45', 'lay14_10', 'lay14_32', 'lay14_55', 'lay14_40', 'lay14_79', 'lay14_42', 'lay14_66', 'lay14_12', 'lay14_56', 'lay14_97', 'lay14_9', 'lay14_8', 'lay14_6', 'lay14_24', 'lay14_99', 'lay14_65', 'lay14_2', 'lay14_93', 'lay14_64', 'lay14_69', 'lay14_95', 'lay14_30', 'lay14_16', 'lay14_48', 'lay14_88', 'lay14_89', 'lay14_82', 'lay14_15', 'lay14_27', 'lay14_83', 'lay14_4', 'lay14_21', 'lay14_26', 'lay14_28', 'lay14_68', 'lay14_14', 'lay14_38', 'lay14_52', 'lay14_98', 'lay14_80', 'lay14_60', 'lay14_46', 'lay14_50', 'lay14_22', 'lay14_47', 'lay14_36', 'lay14_73', 'lay14_71', 'lay14_44', 'lay14_3', 'lay14_1', 'lay14_7', 'lay14_86', 'lay14_37', 'lay14_25', 'lay14_49', 'lay14_34', 'lay14_43', 'lay14_61', 'lay14_81', 'lay14_13', 'lay14_91', 'lay14_17'] filter: 1.0
Solving MIP for lay14_39, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 1.9660s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_63, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 10.2453s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_92, [-inf,inf]=>[-0.43240701196356573,0.4626071948956472] (9,-1; 9,-1), time: 30.0136s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_5, [-inf,inf]=>[-1.1029330408295346,0.9144044634785948] (9,-1; 9,-1), time: 30.0109s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_75, [-inf,inf]=>[-0.0660299955837115,1.005360559547595] (9,-1; 9,-1), time: 30.0119s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_18, [-inf,inf]=>[-0.5620427274207883,0.41005764200499517] (9,-1; 9,-1), time: 30.0132s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_23, [-inf,inf]=>[-0.92909414054872,0.32063186878143596] (9,-1; 9,-1), time: 30.0223s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_90, [-inf,inf]=>[-0.595570992813865,0.41874961220826906] (9,-1; 9,-1), time: 30.0110s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_19, [-inf,inf]=>[-0.6067154038485121,0.2738419028767277] (9,-1; 9,-1), time: 30.0137s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_78, [-inf,inf]=>[-1.2346310546041155,0.16234713623580796] (9,-1; 9,-1), time: 30.0149s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_51, [-inf,inf]=>[-1.0346540646091624,0.2482485448719526] (9,-1; 9,-1), time: 30.0182s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_58, [-inf,inf]=>[-0.5078299540132264,0.5165762408239627] (9,-1; 9,-1), time: 30.0173s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_59, [-inf,inf]=>[-0.7198710684263362,0.44411038000719516] (9,-1; 9,-1), time: 30.0187s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_87, [-inf,inf]=>[-0.710968933562807,0.6900366261470878] (9,-1; 9,-1), time: 30.0393s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_85, [-inf,inf]=>[-1.295245674808004,0.2875500079251942] (9,-1; 9,-1), time: 30.0467s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_20, [-inf,inf]=>[-1.0880210831930963,1.3310862842858078] (9,-1; 9,-1), time: 30.0813s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_41, [-inf,inf]=>[-1.0459736001283757,0.13396732267019934] (9,-1; 9,-1), time: 30.1392s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_54, [-inf,inf]=>[-1.1218744310891695,0.13481733443782382] (9,-1; 9,-1), time: 30.0566s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_62, [-inf,inf]=>[-inf,-1e-05] (-1,-1; 15,-1), time: 13.4216s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_72, [-inf,inf]=>[1e-05,2.1616685840796888] (15,-1; 9,-1), time: 15.4508s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_84, [-inf,inf]=>[-0.5406537652443384,0.4895140539239194] (9,-1; 9,-1), time: 30.0129s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_33, [-inf,inf]=>[-0.6782540153664919,0.40005562817641815] (9,-1; 9,-1), time: 30.0132s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_35, [-inf,inf]=>[-1.4755551515509282,0.3737588747599501] (9,-1; 9,-1), time: 30.0241s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_53, [-inf,inf]=>[-1.2598230046281989,0.008469925437486932] (9,-1; 9,-1), time: 30.0164s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_96, [-inf,inf]=>[-0.14097807091679843,1.8354264399673332] (9,-1; 9,-1), time: 30.0123s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_67, [-inf,inf]=>[-0.708150041752238,0.7744462798412686] (9,-1; 9,-1), time: 30.0110s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_57, [-inf,inf]=>[-0.8809012476014632,0.06031690863449042] (9,-1; 9,-1), time: 30.0165s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_77, [-inf,inf]=>[-0.9227747848906779,0.060125821705655676] (9,-1; 9,-1), time: 30.0406s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_76, [-inf,inf]=>[-0.4607338463868438,0.678969919745041] (9,-1; 9,-1), time: 30.0327s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_94, [-inf,inf]=>[-1.211183787226141,0.015697879929373198] (9,-1; 9,-1), time: 30.0153s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_0, [-inf,inf]=>[-0.6040812546657166,0.5577061671748692] (9,-1; 9,-1), time: 30.0154s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_70, [-inf,inf]=>[-0.1137921551100711,1.2779617568648531] (9,-1; 9,-1), time: 30.0430s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_31, [-inf,inf]=>[-1.0035801610059303,0.44806292929785807] (9,-1; 9,-1), time: 30.0115s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_74, [-inf,inf]=>[-1.3842776626162512,0.04970231546256246] (9,-1; 9,-1), time: 30.0872s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_29, [-inf,inf]=>[-0.8604698682570211,0.18875585728966734] (9,-1; 9,-1), time: 30.0156s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_11, [-inf,inf]=>[-0.44846710261120293,1.1747692886064476] (9,-1; 9,-1), time: 30.0113s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_79, [-inf,inf]=>[1e-05,1.6744849585887212] (15,-1; 9,-1), time: 29.9237s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_45, [-inf,inf]=>[-0.9230146944257043,0.6410554131419461] (9,-1; 9,-1), time: 30.0093s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_32, [-inf,inf]=>[-0.6000132258114044,0.2775213659488213] (9,-1; 9,-1), time: 30.0103s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_55, [-inf,inf]=>[-0.9883951854040485,1.089037333197628] (9,-1; 9,-1), time: 30.0114s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_10, [-inf,inf]=>[-1.0075819305218197,0.1056642585845709] (9,-1; 9,-1), time: 30.0280s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_40, [-inf,inf]=>[-1.2118018824836299,0.013224375975925181] (9,-1; 9,-1), time: 30.0332s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_42, [-inf,inf]=>[-0.406453740244685,0.6452492991327341] (9,-1; 9,-1), time: 30.0316s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_66, [-inf,inf]=>[-0.6144801818933973,0.40450653536609127] (9,-1; 9,-1), time: 30.0163s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_12, [-inf,inf]=>[-0.7822593124015389,0.4854418639806528] (9,-1; 9,-1), time: 30.0141s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_56, [-inf,inf]=>[-0.7468329253029131,0.5772475722595919] (9,-1; 9,-1), time: 30.0131s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_97, [-inf,inf]=>[-0.44631734135593065,0.6765357857164003] (9,-1; 9,-1), time: 30.0126s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_9, [-inf,inf]=>[-0.6094411853290389,0.7352148237589532] (9,-1; 9,-1), time: 30.0133s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_8, [-inf,inf]=>[-0.7527324415838998,0.5150032223329154] (9,-1; 9,-1), time: 30.0099s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_6, [-inf,inf]=>[-0.4180199236637128,0.6624942451473531] (9,-1; 9,-1), time: 30.0185s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_24, [-inf,inf]=>[-0.27488206905344176,0.6611267876330259] (9,-1; 9,-1), time: 30.0368s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_2, [-inf,inf]=>[1e-05,1.6398629936795783] (15,-1; 9,-1), time: 16.5406s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_65, [-inf,inf]=>[1e-05,2.2294332423311745] (15,-1; 9,-1), time: 26.4021s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_99, [-inf,inf]=>[-0.842906743246302,0.7795428741564997] (9,-1; 9,-1), time: 30.0117s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_93, [-inf,inf]=>[-0.8567397778951511,0.29142401764032116] (9,-1; 9,-1), time: 30.0124s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_64, [-inf,inf]=>[-0.5177091927375127,1.5857679256555317] (9,-1; 9,-1), time: 30.0120s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_69, [-inf,inf]=>[-0.2076103406199054,1.413880248769729] (9,-1; 9,-1), time: 30.0158s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_95, [-inf,inf]=>[-0.42543786427808616,0.8122676466913856] (9,-1; 9,-1), time: 30.0113s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_30, [-inf,inf]=>[-0.9584092634373417,0.7066310471109248] (9,-1; 9,-1), time: 30.0169s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_89, [-inf,inf]=>[-0.9608597533586657,0.17490857655955971] (9,-1; 9,-1), time: 30.0160s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_88, [-inf,inf]=>[-0.3881842449138531,0.9326215880166592] (9,-1; 9,-1), time: 30.0104s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_82, [-inf,inf]=>[-0.06429982278218362,1.3064102980098329] (9,-1; 9,-1), time: 30.0173s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_48, [-inf,inf]=>[-0.9856889943276543,0.0605635222385678] (9,-1; 9,-1), time: 30.0661s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_15, [-inf,inf]=>[-0.14106500621950807,1.0973154394081628] (9,-1; 9,-1), time: 30.0240s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_27, [-inf,inf]=>[-0.5467850264275973,0.5060176797563559] (9,-1; 9,-1), time: 30.0106s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_16, [-inf,inf]=>[-0.6437017645915192,0.4834956353939766] (9,-1; 9,-1), time: 30.0963s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_83, [-inf,inf]=>[-0.4206018478628675,0.837169438220852] (9,-1; 9,-1), time: 30.0168s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_47, [-inf,inf]=>[1e-05,1.73922179813754] (15,-1; 9,-1), time: 15.4750s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_38, [-inf,inf]=>[1e-05,1.7979142780462074] (15,-1; 9,-1), time: 16.5022s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_4, [-inf,inf]=>[-0.8099267037271024,0.5193637543697318] (9,-1; 9,-1), time: 30.0304s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_80, [-inf,inf]=>[1e-05,1.5657772976071467] (15,-1; 9,-1), time: 18.1358s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_14, [-inf,inf]=>[1e-05,1.604762853053931] (15,-1; 9,-1), time: 22.6651s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_28, [-inf,inf]=>[1e-05,2.139450433398089] (15,-1; 9,-1), time: 22.9209s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_21, [-inf,inf]=>[-1.015030556428782,0.17230022547321017] (9,-1; 9,-1), time: 30.0106s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_26, [-inf,inf]=>[-0.5190611678040591,1.0246342713925158] (9,-1; 9,-1), time: 30.0114s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_68, [-inf,inf]=>[-0.5450277801578871,0.833612486384014] (9,-1; 9,-1), time: 30.0103s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_52, [-inf,inf]=>[-0.7669167669438332,0.3833363962416694] (9,-1; 9,-1), time: 30.0118s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_60, [-inf,inf]=>[-0.9021818819205708,0.16764443319870367] (9,-1; 9,-1), time: 30.0149s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_46, [-inf,inf]=>[-0.12323724340068437,1.39778553601533] (9,-1; 9,-1), time: 30.0186s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_98, [-inf,inf]=>[-0.9348315640695434,0.8759631145009565] (9,-1; 9,-1), time: 30.0746s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_22, [-inf,inf]=>[-0.6653218445501776,0.9971828955034128] (9,-1; 9,-1), time: 30.0113s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_50, [-inf,inf]=>[-0.5082460442703431,1.0162432818781797] (9,-1; 9,-1), time: 30.0398s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_73, [-inf,inf]=>[1e-05,1.4585412540970468] (15,-1; 9,-1), time: 16.4444s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_3, [-inf,inf]=>[1e-05,1.771041960157518] (15,-1; 9,-1), time: 15.5376s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_36, [-inf,inf]=>[-0.06925157083647773,1.5754105702123926] (9,-1; 9,-1), time: 30.0187s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_71, [-inf,inf]=>[-0.5636899422590024,0.7838363189100206] (9,-1; 9,-1), time: 30.0099s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_44, [-inf,inf]=>[-0.3798700166373858,1.487940577273174] (9,-1; 9,-1), time: 30.0421s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_1, [-inf,inf]=>[-0.6206273642720764,1.0590875480833886] (9,-1; 9,-1), time: 30.0153s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_7, [-inf,inf]=>[-0.7042452261830208,0.6709252148803331] (9,-1; 9,-1), time: 30.0127s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_86, [-inf,inf]=>[-0.5963028790615222,0.6870336872950595] (9,-1; 9,-1), time: 30.0122s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_37, [-inf,inf]=>[-0.13669825856623308,0.8360643407459915] (9,-1; 9,-1), time: 30.0144s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_25, [-inf,inf]=>[-0.8822889959457073,0.0450725389972298] (9,-1; 9,-1), time: 30.0210s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_49, [-inf,inf]=>[-0.39368352785474353,0.8316871239295833] (9,-1; 9,-1), time: 30.0437s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_34, [-inf,inf]=>[-0.9603244660339829,0.08678801571134277] (9,-1; 9,-1), time: 30.0157s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_43, [-inf,inf]=>[-0.8603895850218618,0.3189200702241816] (9,-1; 9,-1), time: 30.0120s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_61, [-inf,inf]=>[-0.9150857337250778,0.0502394934818096] (9,-1; 9,-1), time: 30.0169s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_81, [-inf,inf]=>[-0.2964808825334751,0.9883634752827339] (9,-1; 9,-1), time: 30.0108s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_13, [-inf,inf]=>[-0.7220761526386584,0.2239381290143157] (9,-1; 9,-1), time: 30.0304s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_91, [-inf,inf]=>[-0.3411942742747278,1.5043654892916296] (9,-1; 9,-1), time: 30.0172s, #vars: 1999, #constrs: 1471, improved: True
Solving MIP for lay14_17, [-inf,inf]=>[-0.7943030102137945,0.13427111307484688] (9,-1; 9,-1), time: 30.0137s, #vars: 1999, #constrs: 1471, improved: True
PGD done for relu layer 7
Run alpha-CROWN after refining layer 12 and relu idx 5
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 5 has unstable to stable neurons: [(31, -1), (0, -1), (87, -1), (83, -1), (35, -1), (23, -1), (51, -1), (69, -1), (15, -1), (99, -1), (58, -1), (34, -1), (3, 1), (94, 1), (97, -1), (20, -1), (33, -1), (57, -1), (37, -1), (18, 1), (86, 1), (38, -1), (19, -1), (42, -1), (90, 1), (30, 1), (7, 1), (5, -1), (84, -1), (2, 1), (17, 1), (12, -1), (89, -1), (6, -1), (78, -1), (93, -1), (16, -1), (56, -1)]
best_l after optimization: -56.27204895019531 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 13.598201513290405
alpha-CROWN with intermediate bounds by MIP: tensor([[-4.55987263, -5.19129276, -7.49957943, -8.85935974, -3.97428393,
         -5.60180473, -5.16437101, -7.27899456, -8.14249039]], device='cuda:0') None
MIP improved 100 nodes out of 100 unstable nodes, lb improved 947.6436157226562, ub improved 875.4525756835938, time 184.5372
maximum relu layer improved by MIP so far 6
Linear(in_features=100, out_features=100, bias=True) 7 16 torch.Size([100])
sorted candidates ['lay16_15', 'lay16_57', 'lay16_71', 'lay16_84', 'lay16_23', 'lay16_32', 'lay16_77', 'lay16_76', 'lay16_74', 'lay16_45', 'lay16_31', 'lay16_5', 'lay16_96', 'lay16_12', 'lay16_80', 'lay16_66', 'lay16_20', 'lay16_10', 'lay16_9', 'lay16_14', 'lay16_30', 'lay16_94', 'lay16_70', 'lay16_98', 'lay16_28', 'lay16_92', 'lay16_93', 'lay16_65', 'lay16_24', 'lay16_22', 'lay16_36', 'lay16_4', 'lay16_42', 'lay16_73', 'lay16_34', 'lay16_81', 'lay16_48', 'lay16_25', 'lay16_49', 'lay16_33', 'lay16_27', 'lay16_83', 'lay16_89', 'lay16_43', 'lay16_68', 'lay16_35', 'lay16_1', 'lay16_37', 'lay16_29', 'lay16_6', 'lay16_17', 'lay16_55', 'lay16_82', 'lay16_90', 'lay16_69', 'lay16_46', 'lay16_47', 'lay16_61', 'lay16_40', 'lay16_62', 'lay16_99', 'lay16_3', 'lay16_54', 'lay16_67', 'lay16_39', 'lay16_97', 'lay16_7', 'lay16_88', 'lay16_50', 'lay16_78', 'lay16_44', 'lay16_18', 'lay16_75', 'lay16_21', 'lay16_72', 'lay16_58', 'lay16_52', 'lay16_64', 'lay16_60', 'lay16_11', 'lay16_0', 'lay16_13', 'lay16_85', 'lay16_91', 'lay16_56', 'lay16_86', 'lay16_19', 'lay16_51', 'lay16_2', 'lay16_53', 'lay16_59', 'lay16_79', 'lay16_41', 'lay16_16', 'lay16_26', 'lay16_87', 'lay16_95', 'lay16_63', 'lay16_8', 'lay16_38'] filter: 1.0
Solving MIP for lay16_15, [-inf,inf]=>[-1.8005213626252363,1.5352235904904024] (9,-1; 9,-1), time: 30.0169s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_96, [-inf,inf]=>[-1.486760633404472,0.33242015882591236] (9,-1; 9,-1), time: 30.0138s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_31, [-inf,inf]=>[-1.8775320293717221,0.9437773691938482] (9,-1; 9,-1), time: 30.0155s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_66, [-inf,inf]=>[-0.5134556212076626,1.4701910534043394] (9,-1; 9,-1), time: 30.0155s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_77, [-inf,inf]=>[-2.1915377392173516,0.4554811429608833] (9,-1; 9,-1), time: 30.0161s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_5, [-inf,inf]=>[-1.7527597896279066,0.23813456120622561] (9,-1; 9,-1), time: 30.0202s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_32, [-inf,inf]=>[-1.1759897836666335,0.41316365505802727] (9,-1; 9,-1), time: 30.0179s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_12, [-inf,inf]=>[-1.1925411868234066,0.7804411320011652] (9,-1; 9,-1), time: 30.0196s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_57, [-inf,inf]=>[-1.5704842208778673,0.5147749351956439] (9,-1; 9,-1), time: 30.0200s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_80, [-inf,inf]=>[-2.1603480827347736,0.41849629897926466] (9,-1; 9,-1), time: 30.0227s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_74, [-inf,inf]=>[-1.2147614047239637,0.7800839694072687] (9,-1; 9,-1), time: 30.0222s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_76, [-inf,inf]=>[-1.4782092142182837,0.5700922250355185] (9,-1; 9,-1), time: 30.0227s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_84, [-inf,inf]=>[-1.978525209576479,0.3025142298989785] (9,-1; 9,-1), time: 30.0228s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_71, [-inf,inf]=>[-2.4032849738986144,0.1193784540993224] (9,-1; 9,-1), time: 30.0229s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_45, [-inf,inf]=>[-0.7069621841923592,1.9419307845765672] (9,-1; 9,-1), time: 30.0242s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_23, [-inf,inf]=>[-1.0458867078792438,1.0315139633682586] (9,-1; 9,-1), time: 30.0247s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_20, [-inf,inf]=>[-0.9235999670268915,1.0520263214300325] (9,-1; 9,-1), time: 30.0111s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_10, [-inf,inf]=>[-1.092245054546847,0.6764743724055201] (9,-1; 9,-1), time: 30.0113s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_28, [-inf,inf]=>[-1.0832567453235733,0.6118243296623042] (9,-1; 9,-1), time: 30.0111s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_94, [-inf,inf]=>[-1.3144203977642448,0.3671326741659716] (9,-1; 9,-1), time: 30.0131s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_70, [-inf,inf]=>[-1.5101193615620683,0.3570610047972581] (9,-1; 9,-1), time: 30.0132s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_30, [-inf,inf]=>[-1.3112983355592265,0.7131923750264263] (9,-1; 9,-1), time: 30.0133s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_9, [-inf,inf]=>[-1.704296660386421,0.49540463411534613] (9,-1; 9,-1), time: 30.0135s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_98, [-inf,inf]=>[-2.021749255264989,0.35383138054971325] (9,-1; 9,-1), time: 30.0139s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_92, [-inf,inf]=>[-0.7916522133786237,1.507453855993574] (9,-1; 9,-1), time: 30.0118s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_14, [-inf,inf]=>[-0.7195754315903737,1.7436408516888535] (9,-1; 9,-1), time: 30.0177s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_93, [-inf,inf]=>[-1.398584190258649,0.6984351282469912] (9,-1; 9,-1), time: 30.0137s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_4, [-inf,inf]=>[-1.1304723096025229,1.5812922320167393] (9,-1; 9,-1), time: 30.0145s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_65, [-inf,inf]=>[-1.3079877424624422,0.885921161266877] (9,-1; 9,-1), time: 30.0201s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_36, [-inf,inf]=>[-0.9784344821720034,1.4066965754566738] (9,-1; 9,-1), time: 30.0152s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_24, [-inf,inf]=>[-1.3433925830567868,0.39367648218091816] (9,-1; 9,-1), time: 30.0178s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_22, [-inf,inf]=>[-1.3340827898851908,0.3188390472225834] (9,-1; 9,-1), time: 30.0182s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_42, [-inf,inf]=>[-1.4856302919638251,0.5124102553221466] (9,-1; 9,-1), time: 30.0144s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_73, [-inf,inf]=>[-0.7506938482155645,0.8132017146614239] (9,-1; 9,-1), time: 30.0161s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_81, [-inf,inf]=>[-1.5557103265441359,0.23993756497392735] (9,-1; 9,-1), time: 30.0136s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_25, [-inf,inf]=>[-1.228092424115117,0.6183953162201572] (9,-1; 9,-1), time: 30.0119s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_27, [-inf,inf]=>[-1.2011239540847891,0.9840542190204721] (9,-1; 9,-1), time: 30.0132s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_34, [-inf,inf]=>[-0.5729603733685286,1.6465549231277101] (9,-1; 9,-1), time: 30.0130s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_83, [-inf,inf]=>[-2.013365939576231,0.22071190999448215] (9,-1; 9,-1), time: 30.0126s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_43, [-inf,inf]=>[-0.906039007860444,1.8836458781504628] (9,-1; 9,-1), time: 30.0127s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_89, [-inf,inf]=>[-1.8693014681116893,0.5927643979901263] (9,-1; 9,-1), time: 30.0118s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_48, [-inf,inf]=>[-1.094636268044945,0.6920879047250826] (9,-1; 9,-1), time: 30.0127s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_33, [-inf,inf]=>[-1.3730327603889352,0.4757132906941154] (9,-1; 9,-1), time: 30.0139s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_35, [-inf,inf]=>[-2.4485863376378147,0.1424834746771704] (9,-1; 9,-1), time: 30.0158s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_49, [-inf,inf]=>[-1.214488814973069,1.278710337038411] (9,-1; 9,-1), time: 30.0171s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_1, [-inf,inf]=>[-1.4545869662823467,0.5051959133551592] (9,-1; 9,-1), time: 30.0114s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_68, [-inf,inf]=>[-1.6587531456946294,0.7654964420361112] (9,-1; 9,-1), time: 30.0180s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_37, [-inf,inf]=>[-1.6272529003059597,0.47932495666855196] (9,-1; 9,-1), time: 30.0130s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_29, [-inf,inf]=>[-0.7548515645250629,2.8296950732833306] (9,-1; 9,-1), time: 30.0126s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_6, [-inf,inf]=>[-1.063894801461853,0.6142488920591607] (9,-1; 9,-1), time: 30.0109s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_82, [-inf,inf]=>[-2.2163858085421646,0.36691051524026513] (9,-1; 9,-1), time: 30.0139s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_17, [-inf,inf]=>[-0.5662498899316931,1.4793921832576684] (9,-1; 9,-1), time: 30.0173s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_47, [-inf,inf]=>[-0.6972437866180825,1.8435921617831637] (9,-1; 9,-1), time: 30.0105s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_90, [-inf,inf]=>[-0.5772792383774886,1.4542323414952139] (9,-1; 9,-1), time: 30.0158s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_69, [-inf,inf]=>[-1.3135116440818346,0.6697992692993477] (9,-1; 9,-1), time: 30.0117s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_61, [-inf,inf]=>[-0.8613688985947334,1.4376506809892766] (9,-1; 9,-1), time: 30.0127s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_40, [-inf,inf]=>[-0.6626871713275316,1.581843534484548] (9,-1; 9,-1), time: 30.0119s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_46, [-inf,inf]=>[-2.0305928954693964,0.22965461522666739] (9,-1; 9,-1), time: 30.0127s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_99, [-inf,inf]=>[-1.3333421197447304,0.7867297607315717] (9,-1; 9,-1), time: 30.0111s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_54, [-inf,inf]=>[-1.078949842005675,1.279601269595275] (9,-1; 9,-1), time: 30.0104s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_62, [-inf,inf]=>[-1.05020122154265,0.7598635153285801] (9,-1; 9,-1), time: 30.0133s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_3, [-inf,inf]=>[-1.466528302819093,0.4288575171708676] (9,-1; 9,-1), time: 30.0124s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_55, [-inf,inf]=>[-1.813162778022843,0.29167089580904515] (9,-1; 9,-1), time: 30.0214s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_67, [-inf,inf]=>[-1.4339805828280099,0.8756995450703847] (9,-1; 9,-1), time: 30.0125s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_39, [-inf,inf]=>[-0.4846444984197941,1.5798163236082723] (9,-1; 9,-1), time: 30.0114s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_97, [-inf,inf]=>[-1.6607413337818402,0.1582408795906567] (9,-1; 9,-1), time: 30.0119s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_50, [-inf,inf]=>[-1.013031408809834,0.7932501291904478] (9,-1; 9,-1), time: 30.0126s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_88, [-inf,inf]=>[-0.9542842845060377,1.0940392661018647] (9,-1; 9,-1), time: 30.0154s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_18, [-inf,inf]=>[-1.5780949731662195,0.5056641929105511] (9,-1; 9,-1), time: 30.0115s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_58, [-inf,inf]=>[-0.7195813494871682,1.4590883529413894] (9,-1; 9,-1), time: 30.0100s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_44, [-inf,inf]=>[-0.6479373871504602,1.9591450037236402] (9,-1; 9,-1), time: 30.0109s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_7, [-inf,inf]=>[-2.1485971319479287,0.19442591647903398] (9,-1; 9,-1), time: 30.0204s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_75, [-inf,inf]=>[-0.681947866583239,0.8712460205341006] (9,-1; 9,-1), time: 30.0141s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_78, [-inf,inf]=>[-1.123818839097387,0.7002771773513078] (9,-1; 9,-1), time: 30.0164s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_72, [-inf,inf]=>[-1.334157811585998,1.0278106944813983] (9,-1; 9,-1), time: 30.0169s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_11, [-inf,inf]=>[-0.09593794250162516,2.3363079504093958] (9,-1; 9,-1), time: 30.0154s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_64, [-inf,inf]=>[-0.7244738111870036,1.3226916359770893] (9,-1; 9,-1), time: 30.0180s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_52, [-inf,inf]=>[-1.293110859017092,0.6616338613097305] (9,-1; 9,-1), time: 30.0182s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_60, [-inf,inf]=>[-0.8548604952847448,1.215725092400437] (9,-1; 9,-1), time: 30.0185s, #vars: 2271, #constrs: 1829, improved: True
Solving MIP for lay16_21, [-inf,inf]=>[-0.6948836267734869,1.5202658725864788] (9,-1; 9,-1), time: 30.0314s, #vars: 2271, #constrs: 1829, improved: True
Run alpha-CROWN after refining layer 14 and relu idx 6
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
relu layer: 6 has unstable to stable neurons: [(39, -1), (63, -1), (62, -1), (72, 1), (79, 1), (65, 1), (2, 1), (28, 1), (14, 1), (38, 1), (80, 1), (47, 1), (73, 1), (3, 1)]
best_l after optimization: -39.71031188964844 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.094555854797363
alpha-CROWN with intermediate bounds by MIP: tensor([[-2.45134997, -3.50580549, -5.38720894, -7.35529232, -2.40323901,
         -3.94188881, -2.65903521, -5.73233700, -6.27415419]], device='cuda:0') None
MIP improved 80 nodes out of 100 unstable nodes, lb improved 1778.55810546875, ub improved 1489.359375, time 150.9377
maximum relu layer improved by MIP so far 7
MIP finished with 741.9808995723724s
Run final alpha-CROWN after MIP solving on layer 16 and relu idx 7
0 /input torch.Size([1, 100])
1 /input.3 torch.Size([1, 100])
2 /input.7 torch.Size([1, 100])
3 /input.11 torch.Size([1, 100])
4 /input.15 torch.Size([1, 100])
5 /input.19 torch.Size([1, 100])
6 /input.23 torch.Size([1, 100])
7 /input.27 torch.Size([1, 100])
best_l after optimization: -33.46178436279297 with beta sum per layer: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
alpha/beta optimization time: 12.326383352279663
alpha-CROWN with intermediate bounds improved by MIP: tensor([[-1.79271936, -2.86353207, -4.56216097, -6.72519493, -1.79166317,
         -3.31559968, -1.74824238, -5.08051920, -5.58215141]], device='cuda:0') None
refined global lb: tensor([[-1.79271936],
        [-2.86353207],
        [-4.56216097],
        [-6.72519493],
        [-1.79166317],
        [-3.31559968],
        [-1.74824238],
        [-5.08051920],
        [-5.58215141]], device='cuda:0') min: tensor(-6.72519493, device='cuda:0')
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 131.21417832374573
##### [0] Spec matrix: [[[-1.  0.  0.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-1.79271936]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.56774282, -2.49215603, -2.09614205,  0.89472860,  1.83690405,
         0.54328597, -4.33675528,  1.86856866,  1.38485730,  7.56602335],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /28 start_node /43 with alignment adjustment
setting alpha for layer /30 start_node /43 with alignment adjustment
setting alpha for layer /32 start_node /43 with alignment adjustment
setting alpha for layer /34 start_node /43 with alignment adjustment
setting alpha for layer /36 start_node /43 with alignment adjustment
setting alpha for layer /38 start_node /43 with alignment adjustment
setting alpha for layer /40 start_node /43 with alignment adjustment
setting alpha for layer /42 start_node /43 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.79271936]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/43']
Keeping slopes for these layers: ['/43']
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 39
layer 2 size torch.Size([100]) unstable 32
layer 3 size torch.Size([100]) unstable 37
layer 4 size torch.Size([100]) unstable 56
layer 5 size torch.Size([100]) unstable 62
layer 6 size torch.Size([100]) unstable 86
layer 7 size torch.Size([100]) unstable 100
-----------------
# of unstable neurons: 443
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 15] 
split level 1: [7, 23] 
split level 2: [7, 68] 
split level 3: [7, 49] 
split level 4: [7, 37] 
split level 5: [7, 10] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 64 = 0.0
pruning-in-iteration extra time: 0.000148773193359375
Tensors transferred: pre=0.0977M lA=0.0488M alpha=0.0818M beta=0.0136M
This batch time : update_bounds func: 0.6100	 prepare: 0.0146	 bound: 0.5903	 transfer: 0.0016	 finalize: 0.0034
Accumulated time: update_bounds func: 0.6100	 prepare: 0.0146	 bound: 0.5903	 transfer: 0.0016	 finalize: 0.0034
batch bounding time:  0.6100301742553711
Current worst splitting domains lb-rhs (depth):
-1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), -1.79272 (6), 
length of domains: 64
Total time: 0.9285	 pickout: 0.0018	 decision: 0.2702	 get_bound: 0.6309	 add_domain: 0.0256
Accumulated time:	 pickout: 0.0018	 decision: 0.2702	 get_bound: 0.6309	 add_domain: 0.0256
Current (lb-rhs): -1.7927193641662598
0 domains visited
Cumulative time: 0.9513359069824219

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 100]) pre split depth:  1
batch:  torch.Size([64, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 14] [7, 14] [7, 14] [7, 14] [7, 14] [7, 14] [7, 14] [7, 14] [7, 14] [7, 14] 
regular batch size: 2*64, diving batch size 1*0
(128, 1, 28, 28) torch.Size([128, 1, 10]) torch.Size([128, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 128 = 0.0
pruning-in-iteration extra time: 0.00011205673217773438
Tensors transferred: pre=0.1953M lA=0.0977M alpha=0.1636M beta=0.0273M
This batch time : update_bounds func: 0.4159	 prepare: 0.0229	 bound: 0.3845	 transfer: 0.0018	 finalize: 0.0064
Accumulated time: update_bounds func: 1.0258	 prepare: 0.0375	 bound: 0.9748	 transfer: 0.0034	 finalize: 0.0097
batch bounding time:  0.4159204959869385
Current worst splitting domains lb-rhs (depth):
-1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), -1.79272 (7), 
length of domains: 128
Total time: 0.5076	 pickout: 0.0023	 decision: 0.0441	 get_bound: 0.4160	 add_domain: 0.0452
Accumulated time:	 pickout: 0.0041	 decision: 0.3143	 get_bound: 1.0469	 add_domain: 0.0708
Current (lb-rhs): -1.7927193641662598
0 domains visited
Cumulative time: 1.4600138664245605

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([128, 100]) pre split depth:  1
batch:  torch.Size([128, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 57] [7, 57] [7, 57] [7, 57] [7, 57] [7, 57] [7, 57] [7, 57] [7, 57] [7, 57] 
regular batch size: 2*128, diving batch size 1*0
(256, 1, 28, 28) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 256 = 0.0
pruning-in-iteration extra time: 0.00011372566223144531
Tensors transferred: pre=0.3906M lA=0.1953M alpha=0.3271M beta=0.0552M
This batch time : update_bounds func: 0.4461	 prepare: 0.0435	 bound: 0.3870	 transfer: 0.0024	 finalize: 0.0129
Accumulated time: update_bounds func: 1.4720	 prepare: 0.0810	 bound: 1.3618	 transfer: 0.0058	 finalize: 0.0226
batch bounding time:  0.4461956024169922
Current worst splitting domains lb-rhs (depth):
-1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), -1.79272 (8), 
length of domains: 256
Total time: 0.5913	 pickout: 0.0024	 decision: 0.0551	 get_bound: 0.4462	 add_domain: 0.0875
Accumulated time:	 pickout: 0.0066	 decision: 0.3694	 get_bound: 1.4931	 add_domain: 0.1583
Current (lb-rhs): -1.7927193641662598
0 domains visited
Cumulative time: 2.052978515625

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([256, 100]) pre split depth:  1
batch:  torch.Size([256, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 35] [6, 35] [7, 82] [6, 35] [7, 82] [6, 31] [7, 82] [7, 82] [6, 35] [6, 35] 
regular batch size: 2*256, diving batch size 1*0
(512, 1, 28, 28) torch.Size([512, 1, 10]) torch.Size([512, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 512 = 0.0
pruning-in-iteration extra time: 0.00014519691467285156
Tensors transferred: pre=0.7812M lA=0.3906M alpha=0.6543M beta=0.1108M
This batch time : update_bounds func: 0.5015	 prepare: 0.0841	 bound: 0.3875	 transfer: 0.0033	 finalize: 0.0258
Accumulated time: update_bounds func: 1.9735	 prepare: 0.1650	 bound: 1.7493	 transfer: 0.0091	 finalize: 0.0484
batch bounding time:  0.5015809535980225
Current worst splitting domains lb-rhs (depth):
-1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.79272 (9), -1.78381 (9), 
length of domains: 512
Total time: 0.7496	 pickout: 0.0037	 decision: 0.0768	 get_bound: 0.5016	 add_domain: 0.1674
Accumulated time:	 pickout: 0.0103	 decision: 0.4462	 get_bound: 1.9948	 add_domain: 0.3257
Current (lb-rhs): -1.7927193641662598
0 domains visited
Cumulative time: 2.8051962852478027

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([512, 100]) pre split depth:  1
batch:  torch.Size([512, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 82] [6, 31] [6, 35] [6, 31] [6, 35] [6, 35] [6, 35] [6, 35] [3, 59] [6, 31] 
regular batch size: 2*512, diving batch size 1*0
(1024, 1, 28, 28) torch.Size([1024, 1, 10]) torch.Size([1024, 1])
pruning_in_iteration open status: False
ratio of positive domain = 113 / 1024 = 0.1103515625
pruning-in-iteration extra time: 0.00012087821960449219
Tensors transferred: pre=1.5625M lA=0.7812M alpha=1.3086M beta=0.2246M
This batch time : update_bounds func: 0.6264	 prepare: 0.1715	 bound: 0.3888	 transfer: 0.0109	 finalize: 0.0536
Accumulated time: update_bounds func: 2.5999	 prepare: 0.3366	 bound: 2.1382	 transfer: 0.0200	 finalize: 0.1021
batch bounding time:  0.6264512538909912
Current worst splitting domains lb-rhs (depth):
-1.52251 (10), -1.46369 (10), -1.45303 (10), -1.43619 (10), -1.43089 (10), -1.42763 (10), -1.41335 (10), -1.41139 (10), -1.40612 (10), -1.39919 (10), -1.39056 (10), -1.38309 (10), -1.38031 (10), -1.37831 (10), -1.37390 (10), -1.36723 (10), -1.36317 (10), -1.35647 (10), -1.35547 (10), -1.35272 (10), 
length of domains: 911
Total time: 1.1012	 pickout: 0.0049	 decision: 0.1731	 get_bound: 0.6265	 add_domain: 0.2967
Accumulated time:	 pickout: 0.0152	 decision: 0.6193	 get_bound: 2.6213	 add_domain: 0.6224
Current (lb-rhs): -1.5225123167037964
113 domains visited
Cumulative time: 3.911513566970825

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([911, 100]) pre split depth:  1
batch:  torch.Size([911, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [0, 60] [3, 59] [0, 60] [3, 59] [0, 60] [7, 76] [6, 31] [7, 76] [0, 60] 
regular batch size: 2*911, diving batch size 1*0
(1822, 1, 28, 28) torch.Size([1822, 1, 10]) torch.Size([1822, 1])
pruning_in_iteration open status: True
ratio of positive domain = 993 / 1822 = 0.5450054884742042
pruning-in-iteration extra time: 0.013655900955200195
Tensors transferred: pre=2.7802M lA=0.6516M alpha=2.3284M beta=0.4049M
This batch time : update_bounds func: 0.9061	 prepare: 0.3135	 bound: 0.4693	 transfer: 0.0176	 finalize: 0.1023
Accumulated time: update_bounds func: 3.5060	 prepare: 0.6501	 bound: 2.6074	 transfer: 0.0375	 finalize: 0.2044
batch bounding time:  0.9063410758972168
Current worst splitting domains lb-rhs (depth):
-1.05770 (11), -1.03873 (11), -1.03626 (11), -1.03403 (11), -1.02929 (11), -1.02779 (11), -1.00914 (11), -1.00037 (11), -0.97400 (11), -0.97004 (11), -0.96257 (11), -0.96128 (11), -0.95772 (11), -0.95118 (11), -0.94314 (11), -0.94229 (11), -0.93159 (11), -0.93048 (11), -0.92347 (11), -0.92171 (11), 
length of domains: 829
Total time: 1.4234	 pickout: 0.0067	 decision: 0.2359	 get_bound: 0.9065	 add_domain: 0.2743
Accumulated time:	 pickout: 0.0219	 decision: 0.8553	 get_bound: 3.5277	 add_domain: 0.8967
Current (lb-rhs): -1.057704210281372
1106 domains visited
Cumulative time: 5.345062971115112

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([829, 100]) pre split depth:  1
batch:  torch.Size([829, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 59] [0, 60] [0, 60] [5, 98] [0, 60] [0, 60] [0, 60] [0, 60] [3, 59] [0, 60] 
regular batch size: 2*829, diving batch size 1*0
(1658, 1, 28, 28) torch.Size([1658, 1, 10]) torch.Size([1658, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1241 / 1658 = 0.7484921592279855
pruning-in-iteration extra time: 0.015961647033691406
Tensors transferred: pre=2.5299M lA=0.3288M alpha=2.1188M beta=0.3732M
This batch time : update_bounds func: 0.8572	 prepare: 0.2820	 bound: 0.4762	 transfer: 0.0071	 finalize: 0.0891
Accumulated time: update_bounds func: 4.3632	 prepare: 0.9321	 bound: 3.0836	 transfer: 0.0447	 finalize: 0.2935
batch bounding time:  0.8573071956634521
Current worst splitting domains lb-rhs (depth):
-0.66149 (12), -0.64270 (12), -0.63728 (12), -0.61315 (12), -0.60970 (12), -0.60599 (12), -0.59010 (12), -0.58384 (12), -0.57801 (12), -0.56057 (12), -0.55620 (12), -0.54695 (12), -0.54275 (12), -0.53969 (12), -0.53782 (12), -0.53647 (12), -0.53525 (12), -0.52647 (12), -0.52618 (12), -0.52019 (12), 
length of domains: 417
Total time: 1.2473	 pickout: 0.0068	 decision: 0.2399	 get_bound: 0.8574	 add_domain: 0.1432
Accumulated time:	 pickout: 0.0287	 decision: 1.0952	 get_bound: 4.3851	 add_domain: 1.0399
Current (lb-rhs): -0.6614868640899658
2347 domains visited
Cumulative time: 6.603097915649414

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([417, 100]) pre split depth:  1
batch:  torch.Size([417, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 31] [6, 31] [5, 98] [5, 98] [0, 60] [5, 98] [6, 31] [5, 98] [5, 98] [5, 98] 
regular batch size: 2*417, diving batch size 1*0
(834, 1, 28, 28) torch.Size([834, 1, 10]) torch.Size([834, 1])
pruning_in_iteration open status: True
ratio of positive domain = 605 / 834 = 0.7254196642685851
pruning-in-iteration extra time: 0.016674280166625977
Tensors transferred: pre=1.2726M lA=0.1762M alpha=1.0658M beta=0.1869M
This batch time : update_bounds func: 0.6727	 prepare: 0.1448	 bound: 0.4777	 transfer: 0.0046	 finalize: 0.0445
Accumulated time: update_bounds func: 5.0359	 prepare: 1.0768	 bound: 3.5613	 transfer: 0.0492	 finalize: 0.3380
batch bounding time:  0.6728320121765137
Current worst splitting domains lb-rhs (depth):
-0.41416 (13), -0.41313 (13), -0.38965 (13), -0.38806 (13), -0.38793 (13), -0.38276 (13), -0.35132 (13), -0.34993 (13), -0.33937 (13), -0.33411 (13), -0.32044 (13), -0.31845 (13), -0.31760 (13), -0.30783 (13), -0.30433 (13), -0.29773 (13), -0.29347 (13), -0.29244 (13), -0.28919 (13), -0.28709 (13), 
length of domains: 229
Total time: 0.8603	 pickout: 0.0050	 decision: 0.1001	 get_bound: 0.6729	 add_domain: 0.0823
Accumulated time:	 pickout: 0.0337	 decision: 1.1953	 get_bound: 5.0580	 add_domain: 1.1222
Current (lb-rhs): -0.4141561985015869
2952 domains visited
Cumulative time: 7.469979763031006

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([229, 100]) pre split depth:  1
batch:  torch.Size([229, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [0, 87] [0, 60] [0, 87] [0, 87] [5, 80] [0, 87] [0, 87] [0, 87] [0, 87] 
regular batch size: 2*229, diving batch size 1*0
(458, 1, 28, 28) torch.Size([458, 1, 10]) torch.Size([458, 1])
pruning_in_iteration open status: True
ratio of positive domain = 339 / 458 = 0.740174672489083
pruning-in-iteration extra time: 0.016565561294555664
Tensors transferred: pre=0.6989M lA=0.0954M alpha=0.5853M beta=0.1035M
This batch time : update_bounds func: 0.6427	 prepare: 0.0819	 bound: 0.4764	 transfer: 0.0067	 finalize: 0.0267
Accumulated time: update_bounds func: 5.6786	 prepare: 1.1588	 bound: 4.0377	 transfer: 0.0559	 finalize: 0.3646
batch bounding time:  0.6428983211517334
Current worst splitting domains lb-rhs (depth):
-0.28458 (14), -0.28244 (14), -0.28071 (14), -0.25746 (14), -0.25073 (14), -0.24977 (14), -0.23691 (14), -0.23192 (14), -0.22535 (14), -0.22419 (14), -0.22398 (14), -0.21888 (14), -0.20899 (14), -0.20637 (14), -0.20052 (14), -0.19207 (14), -0.18679 (14), -0.17362 (14), -0.17186 (14), -0.16849 (14), 
length of domains: 119
Total time: 0.7649	 pickout: 0.0038	 decision: 0.0717	 get_bound: 0.6430	 add_domain: 0.0464
Accumulated time:	 pickout: 0.0375	 decision: 1.2670	 get_bound: 5.7010	 add_domain: 1.1686
Current (lb-rhs): -0.2845799922943115
3291 domains visited
Cumulative time: 8.238756656646729

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([119, 100]) pre split depth:  1
batch:  torch.Size([119, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 75] [0, 87] [5, 98] [5, 11] [0, 87] [0, 75] [5, 80] [0, 87] [5, 98] [0, 87] 
regular batch size: 2*119, diving batch size 1*0
(238, 1, 28, 28) torch.Size([238, 1, 10]) torch.Size([238, 1])
pruning_in_iteration open status: True
ratio of positive domain = 189 / 238 = 0.7941176470588236
pruning-in-iteration extra time: 0.016460418701171875
Tensors transferred: pre=0.3632M lA=0.0389M alpha=0.3041M beta=0.0540M
This batch time : update_bounds func: 0.5343	 prepare: 0.0435	 bound: 0.4739	 transfer: 0.0032	 finalize: 0.0133
Accumulated time: update_bounds func: 6.2129	 prepare: 1.2023	 bound: 4.5116	 transfer: 0.0591	 finalize: 0.3779
batch bounding time:  0.534379243850708
Current worst splitting domains lb-rhs (depth):
-0.16943 (15), -0.16703 (15), -0.15831 (15), -0.14148 (15), -0.13884 (15), -0.13542 (15), -0.12910 (15), -0.11957 (15), -0.10819 (15), -0.09780 (15), -0.09400 (15), -0.08124 (15), -0.07535 (15), -0.07384 (15), -0.07341 (15), -0.07222 (15), -0.07212 (15), -0.07121 (15), -0.06701 (15), -0.06525 (15), 
length of domains: 49
Total time: 0.6116	 pickout: 0.0024	 decision: 0.0546	 get_bound: 0.5344	 add_domain: 0.0202
Accumulated time:	 pickout: 0.0399	 decision: 1.3216	 get_bound: 6.2354	 add_domain: 1.1888
Current (lb-rhs): -0.1694319248199463
3480 domains visited
Cumulative time: 8.852422714233398

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([49, 100]) pre split depth:  1
batch:  torch.Size([49, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 75] [0, 87] [0, 87] [0, 75] [0, 87] [6, 31] [0, 87] [0, 75] [6, 31] [5, 11] 
regular batch size: 2*49, diving batch size 1*0
(98, 1, 28, 28) torch.Size([98, 1, 10]) torch.Size([98, 1])
pruning_in_iteration open status: True
ratio of positive domain = 84 / 98 = 0.8571428571428572
pruning-in-iteration extra time: 0.016230106353759766
Tensors transferred: pre=0.1495M lA=0.0107M alpha=0.1252M beta=0.0222M
This batch time : update_bounds func: 0.4980	 prepare: 0.0202	 bound: 0.4699	 transfer: 0.0023	 finalize: 0.0055
Accumulated time: update_bounds func: 6.7109	 prepare: 1.2225	 bound: 4.9815	 transfer: 0.0614	 finalize: 0.3834
batch bounding time:  0.49807214736938477
Current worst splitting domains lb-rhs (depth):
-0.06333 (16), -0.04004 (16), -0.03435 (16), -0.02817 (16), -0.02069 (16), -0.01963 (16), -0.01858 (16), -0.00804 (16), -0.00511 (16), -0.00394 (16), -0.00379 (16), -0.00228 (16), -0.00052 (16), -0.00028 (16), 
length of domains: 14
Total time: 0.5513	 pickout: 0.0021	 decision: 0.0433	 get_bound: 0.4981	 add_domain: 0.0078
Accumulated time:	 pickout: 0.0420	 decision: 1.3649	 get_bound: 6.7335	 add_domain: 1.1966
Current (lb-rhs): -0.06333112716674805
3564 domains visited
Cumulative time: 9.40491271018982

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([14, 100]) pre split depth:  2
batch:  torch.Size([14, 100]) post split depth:  2
splitting decisions: 
split level 0: [6, 31] [5, 80] [0, 87] [5, 80] [6, 31] [0, 75] [6, 5] [6, 31] [6, 67] [5, 80] 
split level 1: [6, 23] [6, 23] [6, 23] [6, 23] [6, 23] [6, 5] [0, 75] [6, 23] [0, 75] [6, 23] 
regular batch size: 2*28, diving batch size 1*0
(56, 1, 28, 28) torch.Size([56, 1, 10]) torch.Size([56, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.00010466575622558594
Tensors transferred: pre=0.0854M lA=0.0427M alpha=0.0716M beta=0.0127M
This batch time : update_bounds func: 0.0300	 prepare: 0.0129	 bound: 0.0125	 transfer: 0.0016	 finalize: 0.0030
Accumulated time: update_bounds func: 6.7410	 prepare: 1.2353	 bound: 4.9940	 transfer: 0.0630	 finalize: 0.3863
batch bounding time:  0.030088424682617188
length of domains: 0
Total time: 0.0832	 pickout: 0.0020	 decision: 0.0387	 get_bound: 0.0405	 add_domain: 0.0020
Accumulated time:	 pickout: 0.0440	 decision: 1.4035	 get_bound: 6.7741	 add_domain: 1.1986
No domains left, verification finished!
3620 domains visited
Cumulative time: 9.489135026931763


Properties batch 1, size 1
Remaining timeout: 121.5783622264862
##### [0] Spec matrix: [[[ 0. -1.  0.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-2.86353207]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.56774282, -2.49215603, -2.09614205,  0.89472860,  1.83690405,
         0.54328597, -4.33675528,  1.86856866,  1.38485730,  7.56602335],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /28 start_node /43 with alignment adjustment
setting alpha for layer /30 start_node /43 with alignment adjustment
setting alpha for layer /32 start_node /43 with alignment adjustment
setting alpha for layer /34 start_node /43 with alignment adjustment
setting alpha for layer /36 start_node /43 with alignment adjustment
setting alpha for layer /38 start_node /43 with alignment adjustment
setting alpha for layer /40 start_node /43 with alignment adjustment
setting alpha for layer /42 start_node /43 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-2.86353207]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/43']
Keeping slopes for these layers: ['/43']
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 39
layer 2 size torch.Size([100]) unstable 32
layer 3 size torch.Size([100]) unstable 37
layer 4 size torch.Size([100]) unstable 56
layer 5 size torch.Size([100]) unstable 62
layer 6 size torch.Size([100]) unstable 86
layer 7 size torch.Size([100]) unstable 100
-----------------
# of unstable neurons: 443
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 15] 
split level 1: [7, 31] 
split level 2: [7, 4] 
split level 3: [7, 20] 
split level 4: [7, 84] 
split level 5: [7, 76] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 64 = 0.0
pruning-in-iteration extra time: 0.00011181831359863281
Tensors transferred: pre=0.0977M lA=0.0488M alpha=0.0818M beta=0.0136M
This batch time : update_bounds func: 0.4044	 prepare: 0.0146	 bound: 0.3846	 transfer: 0.0017	 finalize: 0.0034
Accumulated time: update_bounds func: 7.1454	 prepare: 1.2499	 bound: 5.3786	 transfer: 0.0647	 finalize: 0.3897
batch bounding time:  0.4044525623321533
Current worst splitting domains lb-rhs (depth):
-2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), -2.86353 (6), 
length of domains: 64
Total time: 0.5162	 pickout: 0.0017	 decision: 0.0637	 get_bound: 0.4255	 add_domain: 0.0253
Accumulated time:	 pickout: 0.0017	 decision: 0.0637	 get_bound: 0.4255	 add_domain: 0.0253
Current (lb-rhs): -2.863532066345215
0 domains visited
Cumulative time: 0.525634765625

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 100]) pre split depth:  1
batch:  torch.Size([64, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 20] [7, 92] [6, 20] [7, 92] [7, 92] [7, 92] [7, 92] [7, 92] [7, 92] [7, 92] 
regular batch size: 2*64, diving batch size 1*0
(128, 1, 28, 28) torch.Size([128, 1, 10]) torch.Size([128, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 128 = 0.0
pruning-in-iteration extra time: 0.00014328956604003906
Tensors transferred: pre=0.1953M lA=0.0977M alpha=0.1636M beta=0.0275M
This batch time : update_bounds func: 0.4181	 prepare: 0.0236	 bound: 0.3858	 transfer: 0.0019	 finalize: 0.0066
Accumulated time: update_bounds func: 7.5634	 prepare: 1.2735	 bound: 5.7645	 transfer: 0.0665	 finalize: 0.3963
batch bounding time:  0.41811299324035645
Current worst splitting domains lb-rhs (depth):
-2.86353 (7), -2.86353 (7), -2.86353 (7), -2.86353 (7), -2.86353 (7), -2.86353 (7), -2.86353 (7), -2.86353 (7), -2.84967 (7), -2.82354 (7), -2.80018 (7), -2.79022 (7), -2.78789 (7), -2.78709 (7), -2.78402 (7), -2.76548 (7), -2.75932 (7), -2.73732 (7), -2.71764 (7), -2.68055 (7), 
length of domains: 128
Total time: 0.5098	 pickout: 0.0023	 decision: 0.0440	 get_bound: 0.4182	 add_domain: 0.0453
Accumulated time:	 pickout: 0.0040	 decision: 0.1077	 get_bound: 0.8436	 add_domain: 0.0706
Current (lb-rhs): -2.863532066345215
0 domains visited
Cumulative time: 1.0364265441894531

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([128, 100]) pre split depth:  1
batch:  torch.Size([128, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 92] [7, 74] [7, 92] [7, 74] [7, 74] [7, 74] [7, 74] [7, 74] [7, 30] [7, 74] 
regular batch size: 2*128, diving batch size 1*0
(256, 1, 28, 28) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 256 = 0.0
pruning-in-iteration extra time: 0.0001475811004638672
Tensors transferred: pre=0.3906M lA=0.1953M alpha=0.3271M beta=0.0552M
This batch time : update_bounds func: 0.4455	 prepare: 0.0435	 bound: 0.3862	 transfer: 0.0024	 finalize: 0.0129
Accumulated time: update_bounds func: 8.0089	 prepare: 1.3170	 bound: 6.1507	 transfer: 0.0689	 finalize: 0.4092
batch bounding time:  0.4455685615539551
Current worst splitting domains lb-rhs (depth):
-2.86353 (8), -2.86353 (8), -2.86353 (8), -2.86353 (8), -2.67055 (8), -2.65214 (8), -2.64140 (8), -2.63647 (8), -2.61298 (8), -2.59882 (8), -2.52737 (8), -2.51282 (8), -2.33142 (8), -2.32643 (8), -2.32328 (8), -2.31636 (8), -2.31359 (8), -2.30338 (8), -2.30294 (8), -2.29591 (8), 
length of domains: 256
Total time: 0.5901	 pickout: 0.0025	 decision: 0.0562	 get_bound: 0.4456	 add_domain: 0.0858
Accumulated time:	 pickout: 0.0064	 decision: 0.1639	 get_bound: 1.2893	 add_domain: 0.1564
Current (lb-rhs): -2.863532066345215
0 domains visited
Cumulative time: 1.62819242477417

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([256, 100]) pre split depth:  1
batch:  torch.Size([256, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 30] [7, 30] [7, 74] [6, 33] [7, 30] [7, 30] [7, 30] [7, 30] [6, 23] [7, 30] 
regular batch size: 2*256, diving batch size 1*0
(512, 1, 28, 28) torch.Size([512, 1, 10]) torch.Size([512, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 512 = 0.0
pruning-in-iteration extra time: 0.00011801719665527344
Tensors transferred: pre=0.7812M lA=0.3906M alpha=0.6543M beta=0.1108M
This batch time : update_bounds func: 0.5023	 prepare: 0.0847	 bound: 0.3870	 transfer: 0.0036	 finalize: 0.0262
Accumulated time: update_bounds func: 8.5113	 prepare: 1.4018	 bound: 6.5377	 transfer: 0.0725	 finalize: 0.4354
batch bounding time:  0.5023934841156006
Current worst splitting domains lb-rhs (depth):
-2.78401 (9), -2.70298 (9), -2.69965 (9), -2.69638 (9), -2.68327 (9), -2.67080 (9), -2.63636 (9), -2.61122 (9), -2.25729 (9), -2.20566 (9), -2.20024 (9), -2.18926 (9), -2.14889 (9), -2.11179 (9), -2.09280 (9), -2.06643 (9), -1.96084 (9), -1.94816 (9), -1.94441 (9), -1.92950 (9), 
length of domains: 512
Total time: 0.7504	 pickout: 0.0037	 decision: 0.0768	 get_bound: 0.5024	 add_domain: 0.1675
Accumulated time:	 pickout: 0.0101	 decision: 0.2407	 get_bound: 1.7917	 add_domain: 0.3239
Current (lb-rhs): -2.7840099334716797
0 domains visited
Cumulative time: 2.3814189434051514

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([512, 100]) pre split depth:  1
batch:  torch.Size([512, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 74] [6, 12] [7, 30] [7, 30] [6, 23] [6, 12] [7, 45] [6, 33] [7, 45] [6, 12] 
regular batch size: 2*512, diving batch size 1*0
(1024, 1, 28, 28) torch.Size([1024, 1, 10]) torch.Size([1024, 1])
pruning_in_iteration open status: False
ratio of positive domain = 116 / 1024 = 0.11328125
pruning-in-iteration extra time: 0.0001201629638671875
Tensors transferred: pre=1.5625M lA=0.7812M alpha=1.3086M beta=0.2236M
This batch time : update_bounds func: 0.6177	 prepare: 0.1691	 bound: 0.3882	 transfer: 0.0074	 finalize: 0.0513
Accumulated time: update_bounds func: 9.1289	 prepare: 1.5709	 bound: 6.9259	 transfer: 0.0799	 finalize: 0.4868
batch bounding time:  0.6177473068237305
Current worst splitting domains lb-rhs (depth):
-2.28139 (10), -2.25959 (10), -2.25268 (10), -2.24158 (10), -2.21018 (10), -2.20993 (10), -2.20698 (10), -2.18788 (10), -2.18128 (10), -2.16488 (10), -2.16329 (10), -2.10127 (10), -2.09627 (10), -2.08992 (10), -2.07901 (10), -2.05105 (10), -1.78321 (10), -1.78113 (10), -1.75849 (10), -1.74122 (10), 
length of domains: 908
Total time: 1.1030	 pickout: 0.0049	 decision: 0.1829	 get_bound: 0.6178	 add_domain: 0.2973
Accumulated time:	 pickout: 0.0151	 decision: 0.4236	 get_bound: 2.4095	 add_domain: 0.6213
Current (lb-rhs): -2.281393527984619
116 domains visited
Cumulative time: 3.4893267154693604

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([908, 100]) pre split depth:  1
batch:  torch.Size([908, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 23] [7, 19] [6, 33] [6, 12] [0, 60] [7, 19] [6, 33] [6, 12] [6, 12] [6, 33] 
regular batch size: 2*908, diving batch size 1*0
(1816, 1, 28, 28) torch.Size([1816, 1, 10]) torch.Size([1816, 1])
pruning_in_iteration open status: True
ratio of positive domain = 695 / 1816 = 0.3827092511013216
pruning-in-iteration extra time: 0.011125326156616211
Tensors transferred: pre=2.7710M lA=0.8781M alpha=2.3207M beta=0.4035M
This batch time : update_bounds func: 0.8824	 prepare: 0.3044	 bound: 0.4676	 transfer: 0.0110	 finalize: 0.0965
Accumulated time: update_bounds func: 10.0114	 prepare: 1.8753	 bound: 7.3935	 transfer: 0.0909	 finalize: 0.5832
batch bounding time:  0.8825817108154297
Current worst splitting domains lb-rhs (depth):
-1.86908 (11), -1.86427 (11), -1.85735 (11), -1.84389 (11), -1.84288 (11), -1.80512 (11), -1.78658 (11), -1.78449 (11), -1.78284 (11), -1.77966 (11), -1.76571 (11), -1.74457 (11), -1.73766 (11), -1.73617 (11), -1.70740 (11), -1.69950 (11), -1.65982 (11), -1.59761 (11), -1.58937 (11), -1.58756 (11), 
length of domains: 1121
Total time: 1.5221	 pickout: 0.0067	 decision: 0.2327	 get_bound: 0.8827	 add_domain: 0.4001
Accumulated time:	 pickout: 0.0218	 decision: 0.6563	 get_bound: 3.2922	 add_domain: 1.0214
Current (lb-rhs): -1.8690848350524902
811 domains visited
Cumulative time: 5.026453971862793

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [6, 12] [6, 33] [6, 33] [6, 12] [0, 60] [6, 67] [6, 33] [6, 33] [7, 41] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1011 / 2048 = 0.49365234375
pruning-in-iteration extra time: 0.0191497802734375
Tensors transferred: pre=3.1250M lA=0.8110M alpha=2.6172M beta=0.4609M
This batch time : update_bounds func: 0.9557	 prepare: 0.3482	 bound: 0.4775	 transfer: 0.0160	 finalize: 0.1107
Accumulated time: update_bounds func: 10.9670	 prepare: 2.2236	 bound: 7.8710	 transfer: 0.1069	 finalize: 0.6939
batch bounding time:  0.9558439254760742
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.67652 (12), -1.65982 (11), -1.65409 (12), -1.57143 (12), -1.55555 (12), -1.54821 (12), -1.54521 (12), -1.52294 (11), -1.51943 (12), -1.50535 (12), -1.50283 (12), -1.50212 (12), -1.47509 (12), -1.46731 (12), -1.44477 (12), -1.44464 (12), -1.43486 (12), -1.42877 (12), 
length of domains: 1134
Total time: 1.5583	 pickout: 0.0072	 decision: 0.2547	 get_bound: 0.9559	 add_domain: 0.3405
Accumulated time:	 pickout: 0.0289	 decision: 0.9110	 get_bound: 4.2481	 add_domain: 1.3619
Current (lb-rhs): -1.7657063007354736
1822 domains visited
Cumulative time: 6.596506595611572

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 67] [6, 67] [0, 60] [6, 67] [6, 41] [6, 67] [6, 33] [5, 4] [0, 60] [0, 60] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 855 / 2048 = 0.41748046875
pruning-in-iteration extra time: 0.016158103942871094
Tensors transferred: pre=3.1250M lA=0.9178M alpha=2.6172M beta=0.4668M
This batch time : update_bounds func: 0.9582	 prepare: 0.3524	 bound: 0.4781	 transfer: 0.0108	 finalize: 0.1137
Accumulated time: update_bounds func: 11.9252	 prepare: 2.5760	 bound: 8.3491	 transfer: 0.1177	 finalize: 0.8076
batch bounding time:  0.958343505859375
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.41093 (13), -1.38226 (13), -1.37635 (13), -1.37367 (13), -1.36952 (13), -1.36617 (13), -1.35838 (13), -1.35047 (13), -1.33110 (13), -1.33043 (13), -1.32026 (13), -1.31048 (13), -1.30446 (13), -1.28716 (11), 
length of domains: 1303
Total time: 1.6978	 pickout: 0.0070	 decision: 0.2639	 get_bound: 0.9584	 add_domain: 0.4684
Accumulated time:	 pickout: 0.0359	 decision: 1.1749	 get_bound: 5.2065	 add_domain: 1.8304
Current (lb-rhs): -1.7657063007354736
2677 domains visited
Cumulative time: 8.306511640548706

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 67] [4, 74] [5, 98] [6, 23] [5, 98] [7, 19] [5, 98] [6, 41] [6, 87] [6, 23] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 865 / 2048 = 0.42236328125
pruning-in-iteration extra time: 0.01932072639465332
Tensors transferred: pre=3.1250M lA=0.9132M alpha=2.6172M beta=0.4707M
This batch time : update_bounds func: 1.0465	 prepare: 0.3541	 bound: 0.4997	 transfer: 0.0106	 finalize: 0.1785
Accumulated time: update_bounds func: 12.9717	 prepare: 2.9301	 bound: 8.8488	 transfer: 0.1284	 finalize: 0.9861
batch bounding time:  1.046651840209961
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.25260 (14), -1.23576 (11), -1.21926 (13), -1.21823 (14), -1.21272 (13), -1.21073 (14), -1.20193 (14), 
length of domains: 1462
Total time: 1.6397	 pickout: 0.0085	 decision: 0.1906	 get_bound: 1.0467	 add_domain: 0.3939
Accumulated time:	 pickout: 0.0445	 decision: 1.3655	 get_bound: 6.2532	 add_domain: 2.2243
Current (lb-rhs): -1.7657063007354736
3542 domains visited
Cumulative time: 9.95920467376709

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 0] [6, 67] [3, 59] [0, 60] [6, 41] [0, 60] [3, 59] [0, 60] [5, 24] [6, 67] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 907 / 2048 = 0.44287109375
pruning-in-iteration extra time: 0.017879724502563477
Tensors transferred: pre=3.1250M lA=0.8766M alpha=2.6172M beta=0.4746M
This batch time : update_bounds func: 0.9540	 prepare: 0.3553	 bound: 0.4704	 transfer: 0.0102	 finalize: 0.1146
Accumulated time: update_bounds func: 13.9257	 prepare: 3.2854	 bound: 9.3192	 transfer: 0.1386	 finalize: 1.1007
batch bounding time:  0.9541561603546143
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1579
Total time: 1.6096	 pickout: 0.0086	 decision: 0.2597	 get_bound: 0.9542	 add_domain: 0.3871
Accumulated time:	 pickout: 0.0531	 decision: 1.6252	 get_bound: 7.2075	 add_domain: 2.6113
Current (lb-rhs): -1.7657063007354736
4449 domains visited
Cumulative time: 11.583283424377441

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 85] [6, 43] [7, 19] [3, 59] [4, 74] [0, 60] [4, 74] [3, 59] [6, 67] [3, 59] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 939 / 2048 = 0.45849609375
pruning-in-iteration extra time: 0.017006635665893555
Tensors transferred: pre=3.1250M lA=0.8522M alpha=2.6172M beta=0.4785M
This batch time : update_bounds func: 0.9411	 prepare: 0.3623	 bound: 0.4501	 transfer: 0.0106	 finalize: 0.1147
Accumulated time: update_bounds func: 14.8668	 prepare: 3.6477	 bound: 9.7693	 transfer: 0.1492	 finalize: 1.2154
batch bounding time:  0.9412369728088379
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1664
Total time: 1.6743	 pickout: 0.0085	 decision: 0.2632	 get_bound: 0.9413	 add_domain: 0.4613
Accumulated time:	 pickout: 0.0616	 decision: 1.8884	 get_bound: 8.1488	 add_domain: 3.0726
Current (lb-rhs): -1.7657063007354736
5388 domains visited
Cumulative time: 13.271658182144165

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [7, 19] [7, 19] [6, 56] [7, 41] [3, 59] [3, 59] [5, 11] [7, 80] [7, 19] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 888 / 2048 = 0.43359375
pruning-in-iteration extra time: 0.016907453536987305
Tensors transferred: pre=3.1250M lA=0.8926M alpha=2.6172M beta=0.4805M
This batch time : update_bounds func: 0.9431	 prepare: 0.3620	 bound: 0.4467	 transfer: 0.0106	 finalize: 0.1202
Accumulated time: update_bounds func: 15.8099	 prepare: 4.0097	 bound: 10.2160	 transfer: 0.1599	 finalize: 1.3356
batch bounding time:  0.9436702728271484
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1800
Total time: 1.6337	 pickout: 0.0087	 decision: 0.1939	 get_bound: 0.9438	 add_domain: 0.4873
Accumulated time:	 pickout: 0.0703	 decision: 2.0823	 get_bound: 9.0925	 add_domain: 3.5599
Current (lb-rhs): -1.7657063007354736
6276 domains visited
Cumulative time: 14.92000126838684

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 80] [7, 19] [7, 19] [3, 59] [4, 74] [4, 74] [0, 60] [4, 74] [6, 43] [4, 74] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 947 / 2048 = 0.46240234375
pruning-in-iteration extra time: 0.01759791374206543
Tensors transferred: pre=3.1250M lA=0.8453M alpha=2.6172M beta=0.4824M
This batch time : update_bounds func: 1.0238	 prepare: 0.3599	 bound: 0.4498	 transfer: 0.0113	 finalize: 0.1995
Accumulated time: update_bounds func: 16.8337	 prepare: 4.3697	 bound: 10.6658	 transfer: 0.1712	 finalize: 1.5352
batch bounding time:  1.0239911079406738
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1877
Total time: 1.6081	 pickout: 0.0089	 decision: 0.1922	 get_bound: 1.0241	 add_domain: 0.3828
Accumulated time:	 pickout: 0.0792	 decision: 2.2745	 get_bound: 10.1166	 add_domain: 3.9427
Current (lb-rhs): -1.7657063007354736
7223 domains visited
Cumulative time: 16.543142795562744

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 67] [5, 4] [0, 60] [7, 23] [6, 67] [6, 5] [7, 41] [0, 60] [6, 67] [6, 12] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1056 / 2048 = 0.515625
pruning-in-iteration extra time: 0.017531156539916992
Tensors transferred: pre=3.1250M lA=0.7622M alpha=2.6172M beta=0.4863M
This batch time : update_bounds func: 0.9404	 prepare: 0.3608	 bound: 0.4496	 transfer: 0.0099	 finalize: 0.1168
Accumulated time: update_bounds func: 17.7741	 prepare: 4.7305	 bound: 11.1154	 transfer: 0.1811	 finalize: 1.6520
batch bounding time:  0.9405844211578369
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1845
Total time: 1.5627	 pickout: 0.0087	 decision: 0.2647	 get_bound: 0.9407	 add_domain: 0.3486
Accumulated time:	 pickout: 0.0879	 decision: 2.5392	 get_bound: 11.0573	 add_domain: 4.2913
Current (lb-rhs): -1.7657063007354736
8279 domains visited
Cumulative time: 18.12175679206848

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 26] [4, 74] [6, 85] [4, 74] [6, 87] [7, 88] [6, 0] [7, 41] [6, 67] [7, 29] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1126 / 2048 = 0.5498046875
pruning-in-iteration extra time: 0.016926050186157227
Tensors transferred: pre=3.1250M lA=0.7088M alpha=2.6172M beta=0.4922M
This batch time : update_bounds func: 0.9484	 prepare: 0.3686	 bound: 0.4460	 transfer: 0.0107	 finalize: 0.1193
Accumulated time: update_bounds func: 18.7224	 prepare: 5.0991	 bound: 11.5614	 transfer: 0.1917	 finalize: 1.7712
batch bounding time:  0.9485280513763428
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1743
Total time: 1.5575	 pickout: 0.0089	 decision: 0.2725	 get_bound: 0.9486	 add_domain: 0.3275
Accumulated time:	 pickout: 0.0968	 decision: 2.8117	 get_bound: 12.0059	 add_domain: 4.6188
Current (lb-rhs): -1.7657063007354736
9405 domains visited
Cumulative time: 19.695144176483154

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 67] [0, 60] [4, 74] [6, 67] [7, 23] [6, 51] [7, 41] [6, 23] [6, 87] [6, 67] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1109 / 2048 = 0.54150390625
pruning-in-iteration extra time: 0.016916513442993164
Tensors transferred: pre=3.1250M lA=0.7210M alpha=2.6172M beta=0.4961M
This batch time : update_bounds func: 0.9509	 prepare: 0.3702	 bound: 0.4473	 transfer: 0.0092	 finalize: 0.1208
Accumulated time: update_bounds func: 19.6734	 prepare: 5.4693	 bound: 12.0087	 transfer: 0.2009	 finalize: 1.8920
batch bounding time:  0.9511067867279053
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1658
Total time: 1.6308	 pickout: 0.0758	 decision: 0.1924	 get_bound: 0.9512	 add_domain: 0.4115
Accumulated time:	 pickout: 0.1726	 decision: 3.0041	 get_bound: 12.9571	 add_domain: 5.0302
Current (lb-rhs): -1.7657063007354736
10514 domains visited
Cumulative time: 21.34201145172119

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 43] [0, 60] [3, 59] [6, 33] [6, 23] [7, 23] [6, 66] [6, 5] [6, 59] [6, 30] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1077 / 2048 = 0.52587890625
pruning-in-iteration extra time: 0.016922950744628906
Tensors transferred: pre=3.1250M lA=0.7469M alpha=2.6172M beta=0.4980M
This batch time : update_bounds func: 1.0202	 prepare: 0.3714	 bound: 0.4463	 transfer: 0.0090	 finalize: 0.1901
Accumulated time: update_bounds func: 20.6935	 prepare: 5.8407	 bound: 12.4551	 transfer: 0.2099	 finalize: 2.0821
batch bounding time:  1.0203449726104736
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1605
Total time: 1.5706	 pickout: 0.0089	 decision: 0.1943	 get_bound: 1.0204	 add_domain: 0.3470
Accumulated time:	 pickout: 0.1815	 decision: 3.1984	 get_bound: 13.9775	 add_domain: 5.3772
Current (lb-rhs): -1.7657063007354736
11591 domains visited
Cumulative time: 22.9284610748291

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 41] [0, 60] [0, 60] [4, 74] [3, 59] [6, 51] [6, 51] [0, 0] [4, 74] [7, 19] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1136 / 2048 = 0.5546875
pruning-in-iteration extra time: 0.0169069766998291
Tensors transferred: pre=3.1250M lA=0.7034M alpha=2.6172M beta=0.5039M
This batch time : update_bounds func: 0.9545	 prepare: 0.3754	 bound: 0.4452	 transfer: 0.0090	 finalize: 0.1213
Accumulated time: update_bounds func: 21.6480	 prepare: 6.2160	 bound: 12.9003	 transfer: 0.2189	 finalize: 2.2034
batch bounding time:  0.9545972347259521
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1493
Total time: 1.5550	 pickout: 0.0103	 decision: 0.2629	 get_bound: 0.9547	 add_domain: 0.3271
Accumulated time:	 pickout: 0.1918	 decision: 3.4613	 get_bound: 14.9321	 add_domain: 5.7043
Current (lb-rhs): -1.7657063007354736
12727 domains visited
Cumulative time: 24.499377012252808

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 59] [7, 19] [6, 41] [4, 74] [5, 11] [3, 59] [4, 74] [5, 4] [0, 60] [4, 74] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1116 / 2048 = 0.544921875
pruning-in-iteration extra time: 0.01693892478942871
Tensors transferred: pre=3.1250M lA=0.7164M alpha=2.6172M beta=0.5098M
This batch time : update_bounds func: 0.9578	 prepare: 0.3755	 bound: 0.4478	 transfer: 0.0089	 finalize: 0.1220
Accumulated time: update_bounds func: 22.6059	 prepare: 6.5915	 bound: 13.3481	 transfer: 0.2278	 finalize: 2.3253
batch bounding time:  0.9579975605010986
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.17207 (14), 
length of domains: 1401
Total time: 1.5615	 pickout: 0.0087	 decision: 0.2632	 get_bound: 0.9581	 add_domain: 0.3316
Accumulated time:	 pickout: 0.2005	 decision: 3.7245	 get_bound: 15.8902	 add_domain: 6.0359
Current (lb-rhs): -1.7657063007354736
13843 domains visited
Cumulative time: 26.076459884643555

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [0, 60] [6, 51] [6, 23] [5, 4] [7, 9] [6, 67] [3, 59] [4, 74] [3, 59] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1123 / 2048 = 0.54833984375
pruning-in-iteration extra time: 0.0169677734375
Tensors transferred: pre=3.1250M lA=0.7065M alpha=2.6172M beta=0.5137M
This batch time : update_bounds func: 0.9564	 prepare: 0.3734	 bound: 0.4466	 transfer: 0.0091	 finalize: 0.1234
Accumulated time: update_bounds func: 23.5623	 prepare: 6.9649	 bound: 13.7947	 transfer: 0.2369	 finalize: 2.4488
batch bounding time:  0.9565839767456055
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27805 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.14945 (14), 
length of domains: 1302
Total time: 1.6288	 pickout: 0.0103	 decision: 0.2578	 get_bound: 0.9567	 add_domain: 0.4040
Accumulated time:	 pickout: 0.2108	 decision: 3.9823	 get_bound: 16.8469	 add_domain: 6.4399
Current (lb-rhs): -1.7657063007354736
14966 domains visited
Cumulative time: 27.720844268798828

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 33] [4, 74] [7, 19] [7, 41] [0, 60] [7, 19] [3, 59] [6, 5] [6, 67] [3, 59] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1061 / 2048 = 0.51806640625
pruning-in-iteration extra time: 0.016888141632080078
Tensors transferred: pre=3.1250M lA=0.7599M alpha=2.6172M beta=0.5176M
This batch time : update_bounds func: 1.0241	 prepare: 0.3768	 bound: 0.4462	 transfer: 0.0092	 finalize: 0.1885
Accumulated time: update_bounds func: 24.5863	 prepare: 7.3417	 bound: 14.2409	 transfer: 0.2460	 finalize: 2.6372
batch bounding time:  1.024238109588623
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.48240 (13), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.13751 (15), -1.11363 (15), 
length of domains: 1265
Total time: 1.5917	 pickout: 0.0087	 decision: 0.1928	 get_bound: 1.0243	 add_domain: 0.3659
Accumulated time:	 pickout: 0.2194	 decision: 4.1751	 get_bound: 17.8712	 add_domain: 6.8058
Current (lb-rhs): -1.7657063007354736
16027 domains visited
Cumulative time: 29.332205772399902

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 12] [6, 67] [6, 67] [5, 98] [6, 23] [7, 19] [7, 41] [6, 23] [4, 74] [6, 78] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1065 / 2048 = 0.52001953125
pruning-in-iteration extra time: 0.01689434051513672
Tensors transferred: pre=3.1250M lA=0.7568M alpha=2.6172M beta=0.5234M
This batch time : update_bounds func: 0.9523	 prepare: 0.3728	 bound: 0.4458	 transfer: 0.0103	 finalize: 0.1199
Accumulated time: update_bounds func: 25.5387	 prepare: 7.7145	 bound: 14.6868	 transfer: 0.2564	 finalize: 2.7572
batch bounding time:  0.9524838924407959
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.43336 (13), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.33895 (14), -1.28716 (11), -1.28577 (13), -1.23576 (11), -1.22561 (14), -1.21926 (13), -1.21272 (13), -1.18378 (13), -1.17818 (13), -1.17462 (13), -1.09862 (11), 
length of domains: 1224
Total time: 1.5719	 pickout: 0.0089	 decision: 0.2597	 get_bound: 0.9525	 add_domain: 0.3507
Accumulated time:	 pickout: 0.2284	 decision: 4.4348	 get_bound: 18.8237	 add_domain: 7.1565
Current (lb-rhs): -1.7657063007354736
17092 domains visited
Cumulative time: 30.91876792907715

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 67] [6, 67] [0, 0] [3, 59] [7, 80] [0, 60] [6, 67] [6, 12] [6, 23] [6, 55] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1141 / 2048 = 0.55712890625
pruning-in-iteration extra time: 0.01694965362548828
Tensors transferred: pre=3.1250M lA=0.6943M alpha=2.6172M beta=0.5176M
This batch time : update_bounds func: 0.9505	 prepare: 0.3716	 bound: 0.4462	 transfer: 0.0090	 finalize: 0.1203
Accumulated time: update_bounds func: 26.4892	 prepare: 8.0861	 bound: 15.1329	 transfer: 0.2654	 finalize: 2.8774
batch bounding time:  0.9506776332855225
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.38226 (13), -1.37367 (13), -1.36617 (13), -1.35838 (13), -1.28716 (11), -1.28577 (13), -1.27731 (14), -1.23576 (11), -1.21926 (13), -1.21272 (13), -1.18690 (15), -1.18378 (13), -1.17962 (14), -1.17818 (13), -1.17462 (13), -1.15804 (15), 
length of domains: 1107
Total time: 1.5523	 pickout: 0.0096	 decision: 0.2706	 get_bound: 0.9507	 add_domain: 0.3214
Accumulated time:	 pickout: 0.2380	 decision: 4.7054	 get_bound: 19.7745	 add_domain: 7.4779
Current (lb-rhs): -1.7657063007354736
18233 domains visited
Cumulative time: 32.48624515533447

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 33] [6, 33] [6, 12] [6, 12] [6, 23] [6, 67] [6, 12] [6, 23] [6, 5] [6, 67] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1045 / 2048 = 0.51025390625
pruning-in-iteration extra time: 0.01739668846130371
Tensors transferred: pre=3.1250M lA=0.7736M alpha=2.6172M beta=0.5215M
This batch time : update_bounds func: 0.9516	 prepare: 0.3728	 bound: 0.4460	 transfer: 0.0092	 finalize: 0.1204
Accumulated time: update_bounds func: 27.4408	 prepare: 8.4589	 bound: 15.5789	 transfer: 0.2747	 finalize: 2.9978
batch bounding time:  0.9517123699188232
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.28716 (11), -1.26573 (14), -1.23576 (11), -1.22182 (14), -1.21378 (14), -1.20043 (14), -1.17465 (14), -1.15792 (16), -1.15080 (15), -1.14793 (14), -1.14550 (14), -1.13091 (16), -1.11425 (14), -1.09862 (11), -1.07300 (14), -1.07230 (15), 
length of domains: 1086
Total time: 1.6449	 pickout: 0.0084	 decision: 0.2556	 get_bound: 0.9518	 add_domain: 0.4292
Accumulated time:	 pickout: 0.2463	 decision: 4.9610	 get_bound: 20.7262	 add_domain: 7.9071
Current (lb-rhs): -1.7657063007354736
19278 domains visited
Cumulative time: 34.14566445350647

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 33] [7, 45] [0, 60] [6, 33] [6, 33] [0, 60] [0, 60] [0, 60] [6, 23] [7, 45] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1042 / 2048 = 0.5087890625
pruning-in-iteration extra time: 0.016851425170898438
Tensors transferred: pre=3.1250M lA=0.7713M alpha=2.6172M beta=0.5195M
This batch time : update_bounds func: 1.0219	 prepare: 0.3741	 bound: 0.4451	 transfer: 0.0092	 finalize: 0.1902
Accumulated time: update_bounds func: 28.4627	 prepare: 8.8330	 bound: 16.0239	 transfer: 0.2839	 finalize: 3.1880
batch bounding time:  1.0220165252685547
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.28716 (11), -1.23576 (11), -1.19712 (15), -1.13681 (16), -1.13358 (15), -1.11038 (15), -1.09862 (11), -1.09794 (15), -1.09250 (15), -1.07887 (15), -1.07061 (17), -1.06266 (15), -1.05132 (11), -1.04669 (17), -1.02596 (15), -1.01266 (15), 
length of domains: 1068
Total time: 1.5760	 pickout: 0.0084	 decision: 0.1916	 get_bound: 1.0221	 add_domain: 0.3540
Accumulated time:	 pickout: 0.2547	 decision: 5.1526	 get_bound: 21.7483	 add_domain: 8.2610
Current (lb-rhs): -1.7657063007354736
20320 domains visited
Cumulative time: 35.736286878585815

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 80] [7, 19] [6, 12] [7, 19] [6, 12] [7, 23] [0, 60] [6, 67] [6, 33] [6, 33] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1027 / 2048 = 0.50146484375
pruning-in-iteration extra time: 0.01685810089111328
Tensors transferred: pre=3.1250M lA=0.7828M alpha=2.6172M beta=0.5234M
This batch time : update_bounds func: 0.9481	 prepare: 0.3715	 bound: 0.4443	 transfer: 0.0091	 finalize: 0.1197
Accumulated time: update_bounds func: 29.4108	 prepare: 9.2045	 bound: 16.4682	 transfer: 0.2930	 finalize: 3.3077
batch bounding time:  0.9482755661010742
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.28716 (11), -1.23576 (11), -1.10607 (17), -1.09862 (11), -1.08932 (16), -1.07034 (16), -1.05132 (11), -1.03559 (16), -1.01825 (16), -1.01249 (16), -1.00290 (11), -0.99978 (17), -0.99561 (16), -0.99478 (16), -0.98355 (11), -0.98184 (18), 
length of domains: 1065
Total time: 1.5704	 pickout: 0.0098	 decision: 0.2535	 get_bound: 0.9483	 add_domain: 0.3588
Accumulated time:	 pickout: 0.2645	 decision: 5.4060	 get_bound: 22.6967	 add_domain: 8.6198
Current (lb-rhs): -1.7657063007354736
21347 domains visited
Cumulative time: 37.32095384597778

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 23] [0, 60] [6, 67] [6, 67] [6, 33] [6, 33] [6, 33] [6, 67] [0, 60] [5, 98] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1074 / 2048 = 0.5244140625
pruning-in-iteration extra time: 0.01686716079711914
Tensors transferred: pre=3.1250M lA=0.7500M alpha=2.6172M beta=0.5254M
This batch time : update_bounds func: 0.9487	 prepare: 0.3710	 bound: 0.4451	 transfer: 0.0090	 finalize: 0.1201
Accumulated time: update_bounds func: 30.3595	 prepare: 9.5756	 bound: 16.9132	 transfer: 0.3020	 finalize: 3.4279
batch bounding time:  0.9488353729248047
Current worst splitting domains lb-rhs (depth):
-1.76571 (11), -1.74457 (11), -1.65982 (11), -1.52294 (11), -1.28716 (11), -1.23576 (11), -1.09862 (11), -1.05132 (11), -0.99984 (17), -0.99204 (17), -0.98355 (11), -0.97859 (17), -0.96757 (18), -0.94786 (18), -0.93966 (18), -0.91284 (17), -0.90272 (17), -0.90238 (17), -0.90225 (11), -0.90221 (17), 
length of domains: 1015
Total time: 1.5554	 pickout: 0.0096	 decision: 0.2546	 get_bound: 0.9489	 add_domain: 0.3424
Accumulated time:	 pickout: 0.2740	 decision: 5.6606	 get_bound: 23.6456	 add_domain: 8.9622
Current (lb-rhs): -1.7657063007354736
22421 domains visited
Cumulative time: 38.8910551071167

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1015, 100]) pre split depth:  1
batch:  torch.Size([1015, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 12] [6, 33] [6, 87] [6, 41] [6, 41] [6, 33] [6, 12] [6, 33] [6, 23] [7, 45] 
regular batch size: 2*1015, diving batch size 1*0
(2030, 1, 28, 28) torch.Size([2030, 1, 10]) torch.Size([2030, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1049 / 2030 = 0.5167487684729064
pruning-in-iteration extra time: 0.016881704330444336
Tensors transferred: pre=3.0975M lA=0.7523M alpha=2.5942M beta=0.5208M
This batch time : update_bounds func: 0.9504	 prepare: 0.3727	 bound: 0.4459	 transfer: 0.0090	 finalize: 0.1196
Accumulated time: update_bounds func: 31.3099	 prepare: 9.9482	 bound: 17.3592	 transfer: 0.3110	 finalize: 3.5474
batch bounding time:  0.9506301879882812
Current worst splitting domains lb-rhs (depth):
-1.53502 (12), -1.39059 (12), -1.37547 (12), -1.35778 (12), -1.32777 (12), -1.26057 (12), -1.17910 (12), -1.12380 (12), -1.00197 (12), -0.96206 (12), -0.94272 (12), -0.90723 (18), -0.88876 (12), -0.88486 (18), -0.87743 (19), -0.86362 (18), -0.85685 (18), -0.85653 (18), -0.85246 (19), -0.84981 (20), 
length of domains: 981
Total time: 1.6254	 pickout: 0.0082	 decision: 0.2505	 get_bound: 0.9507	 add_domain: 0.4160
Accumulated time:	 pickout: 0.2822	 decision: 5.9111	 get_bound: 24.5963	 add_domain: 9.3781
Current (lb-rhs): -1.535021424293518
23470 domains visited
Cumulative time: 40.53071641921997

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([981, 100]) pre split depth:  1
batch:  torch.Size([981, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 33] [6, 41] [0, 60] [6, 67] [6, 23] [6, 67] [6, 67] [6, 41] [6, 41] [6, 12] 
regular batch size: 2*981, diving batch size 1*0
(1962, 1, 28, 28) torch.Size([1962, 1, 10]) torch.Size([1962, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1041 / 1962 = 0.5305810397553516
pruning-in-iteration extra time: 0.016827821731567383
Tensors transferred: pre=2.9938M lA=0.7095M alpha=2.5073M beta=0.5071M
This batch time : update_bounds func: 0.9931	 prepare: 0.3574	 bound: 0.4451	 transfer: 0.0088	 finalize: 0.1781
Accumulated time: update_bounds func: 32.3030	 prepare: 10.3057	 bound: 17.8042	 transfer: 0.3198	 finalize: 3.7256
batch bounding time:  0.9932458400726318
Current worst splitting domains lb-rhs (depth):
-1.34396 (13), -1.26860 (13), -1.19707 (13), -1.16374 (13), -1.14814 (13), -1.14548 (13), -1.12542 (13), -1.11273 (13), -1.09645 (13), -1.06964 (13), -1.04560 (13), -1.01559 (13), -1.00259 (13), -0.97279 (13), -0.90670 (13), -0.84371 (13), -0.84306 (20), -0.82274 (19), -0.82269 (21), -0.81012 (13), 
length of domains: 921
Total time: 1.5114	 pickout: 0.0091	 decision: 0.1849	 get_bound: 0.9933	 add_domain: 0.3240
Accumulated time:	 pickout: 0.2913	 decision: 6.0961	 get_bound: 25.5896	 add_domain: 9.7021
Current (lb-rhs): -1.3439562320709229
24511 domains visited
Cumulative time: 42.055988788604736

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([921, 100]) pre split depth:  1
batch:  torch.Size([921, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [0, 60] [3, 59] [6, 33] [0, 60] [6, 67] [6, 67] [6, 67] [0, 60] [7, 30] 
regular batch size: 2*921, diving batch size 1*0
(1842, 1, 28, 28) torch.Size([1842, 1, 10]) torch.Size([1842, 1])
pruning_in_iteration open status: True
ratio of positive domain = 994 / 1842 = 0.5396308360477742
pruning-in-iteration extra time: 0.016808271408081055
Tensors transferred: pre=2.8107M lA=0.6523M alpha=2.3539M beta=0.4655M
This batch time : update_bounds func: 0.9609	 prepare: 0.3381	 bound: 0.4458	 transfer: 0.0083	 finalize: 0.1658
Accumulated time: update_bounds func: 33.2638	 prepare: 10.6437	 bound: 18.2500	 transfer: 0.3281	 finalize: 3.8914
batch bounding time:  0.961014986038208
Current worst splitting domains lb-rhs (depth):
-1.19101 (14), -1.12328 (14), -1.11174 (14), -1.06109 (14), -1.02158 (14), -1.01247 (14), -1.01168 (14), -1.00415 (14), -1.00068 (14), -0.97312 (14), -0.95895 (14), -0.94724 (14), -0.94678 (14), -0.92914 (14), -0.91935 (14), -0.88269 (14), -0.87727 (14), -0.86446 (14), -0.86228 (14), -0.85440 (14), 
length of domains: 848
Total time: 1.4510	 pickout: 0.0089	 decision: 0.1761	 get_bound: 0.9611	 add_domain: 0.3049
Accumulated time:	 pickout: 0.3003	 decision: 6.2721	 get_bound: 26.5507	 add_domain: 10.0071
Current (lb-rhs): -1.1910104751586914
25505 domains visited
Cumulative time: 43.52017593383789

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([848, 100]) pre split depth:  1
batch:  torch.Size([848, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 67] [5, 98] [0, 60] [6, 23] [0, 60] [0, 60] [6, 67] [6, 23] [5, 98] [0, 0] 
regular batch size: 2*848, diving batch size 1*0
(1696, 1, 28, 28) torch.Size([1696, 1, 10]) torch.Size([1696, 1])
pruning_in_iteration open status: True
ratio of positive domain = 855 / 1696 = 0.5041273584905661
pruning-in-iteration extra time: 0.0169677734375
Tensors transferred: pre=2.5879M lA=0.6477M alpha=2.1674M beta=0.4302M
This batch time : update_bounds func: 0.9243	 prepare: 0.3070	 bound: 0.4506	 transfer: 0.0078	 finalize: 0.0988
Accumulated time: update_bounds func: 34.1881	 prepare: 10.9507	 bound: 18.7006	 transfer: 0.3359	 finalize: 3.9902
batch bounding time:  0.9244163036346436
Current worst splitting domains lb-rhs (depth):
-1.05741 (15), -1.00064 (15), -1.00010 (15), -0.94884 (15), -0.93370 (15), -0.92287 (15), -0.90944 (15), -0.90488 (15), -0.87852 (15), -0.87157 (15), -0.86833 (15), -0.86371 (15), -0.85139 (15), -0.83587 (15), -0.82863 (15), -0.80854 (15), -0.80685 (15), -0.80534 (15), -0.79516 (15), -0.78657 (15), 
length of domains: 841
Total time: 1.3975	 pickout: 0.0073	 decision: 0.1644	 get_bound: 0.9245	 add_domain: 0.3013
Accumulated time:	 pickout: 0.3076	 decision: 6.4366	 get_bound: 27.4751	 add_domain: 10.3083
Current (lb-rhs): -1.0574071407318115
26360 domains visited
Cumulative time: 44.92962193489075

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([841, 100]) pre split depth:  1
batch:  torch.Size([841, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 98] [6, 51] [6, 41] [6, 67] [0, 60] [0, 60] [0, 0] [5, 53] [6, 18] [6, 9] 
regular batch size: 2*841, diving batch size 1*0
(1682, 1, 28, 28) torch.Size([1682, 1, 10]) torch.Size([1682, 1])
pruning_in_iteration open status: True
ratio of positive domain = 906 / 1682 = 0.5386444708680143
pruning-in-iteration extra time: 0.01684284210205078
Tensors transferred: pre=2.5665M lA=0.5959M alpha=2.1495M beta=0.4283M
This batch time : update_bounds func: 0.8599	 prepare: 0.3069	 bound: 0.4449	 transfer: 0.0077	 finalize: 0.0976
Accumulated time: update_bounds func: 35.0480	 prepare: 11.2576	 bound: 19.1455	 transfer: 0.3436	 finalize: 4.0877
batch bounding time:  0.8600797653198242
Current worst splitting domains lb-rhs (depth):
-0.95710 (16), -0.89028 (16), -0.86309 (16), -0.84664 (16), -0.84571 (16), -0.84368 (16), -0.83414 (16), -0.83056 (16), -0.82665 (16), -0.81443 (16), -0.79624 (16), -0.78411 (16), -0.76343 (16), -0.75935 (16), -0.73709 (16), -0.73456 (16), -0.73454 (16), -0.72566 (16), -0.72546 (16), -0.71965 (16), 
length of domains: 776
Total time: 1.3702	 pickout: 0.0096	 decision: 0.2218	 get_bound: 0.8602	 add_domain: 0.2787
Accumulated time:	 pickout: 0.3172	 decision: 6.6583	 get_bound: 28.3353	 add_domain: 10.5870
Current (lb-rhs): -0.9571030139923096
27266 domains visited
Cumulative time: 46.31184363365173

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([776, 100]) pre split depth:  1
batch:  torch.Size([776, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 24] [3, 59] [3, 59] [6, 99] [0, 84] [6, 5] [0, 75] [6, 58] [5, 53] [0, 0] 
regular batch size: 2*776, diving batch size 1*0
(1552, 1, 28, 28) torch.Size([1552, 1, 10]) torch.Size([1552, 1])
pruning_in_iteration open status: True
ratio of positive domain = 789 / 1552 = 0.5083762886597938
pruning-in-iteration extra time: 0.016924142837524414
Tensors transferred: pre=2.3682M lA=0.5867M alpha=1.9833M beta=0.3967M
This batch time : update_bounds func: 0.8987	 prepare: 0.2862	 bound: 0.4450	 transfer: 0.0123	 finalize: 0.0920
Accumulated time: update_bounds func: 35.9467	 prepare: 11.5438	 bound: 19.5906	 transfer: 0.3560	 finalize: 4.1797
batch bounding time:  0.8988282680511475
Current worst splitting domains lb-rhs (depth):
-0.82695 (17), -0.81147 (17), -0.80359 (17), -0.77511 (17), -0.77496 (17), -0.76396 (17), -0.74434 (17), -0.73821 (17), -0.72382 (17), -0.72289 (17), -0.71406 (17), -0.71123 (17), -0.71112 (17), -0.69597 (17), -0.66951 (17), -0.66583 (17), -0.66380 (17), -0.66077 (17), -0.65413 (17), -0.65220 (17), 
length of domains: 763
Total time: 1.3411	 pickout: 0.0067	 decision: 0.1601	 get_bound: 0.8989	 add_domain: 0.2754
Accumulated time:	 pickout: 0.3239	 decision: 6.8184	 get_bound: 29.2342	 add_domain: 10.8624
Current (lb-rhs): -0.8269484043121338
28055 domains visited
Cumulative time: 47.665303230285645

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([763, 100]) pre split depth:  1
batch:  torch.Size([763, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 98] [5, 98] [4, 74] [6, 41] [2, 30] [2, 34] [0, 87] [0, 23] [7, 88] [6, 58] 
regular batch size: 2*763, diving batch size 1*0
(1526, 1, 28, 28) torch.Size([1526, 1, 10]) torch.Size([1526, 1])
pruning_in_iteration open status: True
ratio of positive domain = 814 / 1526 = 0.5334207077326343
pruning-in-iteration extra time: 0.01682567596435547
Tensors transferred: pre=2.3285M lA=0.5463M alpha=1.9501M beta=0.3915M
This batch time : update_bounds func: 0.8773	 prepare: 0.2782	 bound: 0.4449	 transfer: 0.0074	 finalize: 0.0872
Accumulated time: update_bounds func: 36.8240	 prepare: 11.8220	 bound: 20.0355	 transfer: 0.3634	 finalize: 4.2669
batch bounding time:  0.8773980140686035
Current worst splitting domains lb-rhs (depth):
-0.79731 (18), -0.71652 (18), -0.69637 (18), -0.68853 (18), -0.68633 (18), -0.68608 (18), -0.66345 (18), -0.66040 (18), -0.65928 (18), -0.65596 (18), -0.65532 (18), -0.64271 (18), -0.64017 (18), -0.63772 (18), -0.62770 (18), -0.61873 (18), -0.61162 (18), -0.60608 (18), -0.60467 (18), -0.58946 (18), 
length of domains: 712
Total time: 1.2985	 pickout: 0.0078	 decision: 0.1533	 get_bound: 0.8775	 add_domain: 0.2599
Accumulated time:	 pickout: 0.3317	 decision: 6.9717	 get_bound: 30.1117	 add_domain: 11.1223
Current (lb-rhs): -0.7973102331161499
28869 domains visited
Cumulative time: 48.97488307952881

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([712, 100]) pre split depth:  1
batch:  torch.Size([712, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 98] [0, 0] [0, 45] [0, 84] [1, 41] [0, 75] [1, 46] [1, 46] [6, 18] [6, 18] 
regular batch size: 2*712, diving batch size 1*0
(1424, 1, 28, 28) torch.Size([1424, 1, 10]) torch.Size([1424, 1])
pruning_in_iteration open status: True
ratio of positive domain = 801 / 1424 = 0.5625
pruning-in-iteration extra time: 0.016807079315185547
Tensors transferred: pre=2.1729M lA=0.4784M alpha=1.8198M beta=0.3694M
This batch time : update_bounds func: 0.8784	 prepare: 0.2659	 bound: 0.4467	 transfer: 0.0069	 finalize: 0.1566
Accumulated time: update_bounds func: 37.7024	 prepare: 12.0879	 bound: 20.4822	 transfer: 0.3702	 finalize: 4.4235
batch bounding time:  0.8786234855651855
Current worst splitting domains lb-rhs (depth):
-0.66204 (19), -0.64554 (19), -0.62067 (19), -0.60294 (19), -0.59776 (19), -0.59555 (19), -0.58227 (19), -0.57499 (19), -0.57144 (19), -0.56790 (19), -0.55652 (19), -0.54892 (19), -0.54733 (19), -0.53911 (19), -0.53643 (19), -0.53572 (19), -0.52954 (19), -0.52800 (19), -0.52423 (19), -0.52416 (19), 
length of domains: 623
Total time: 1.2564	 pickout: 0.0077	 decision: 0.1437	 get_bound: 0.8787	 add_domain: 0.2263
Accumulated time:	 pickout: 0.3395	 decision: 7.1154	 get_bound: 30.9904	 add_domain: 11.3486
Current (lb-rhs): -0.662039041519165
29670 domains visited
Cumulative time: 50.241663455963135

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([623, 100]) pre split depth:  1
batch:  torch.Size([623, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 11] [1, 64] [0, 75] [0, 60] [4, 74] [0, 60] [1, 46] [1, 41] [5, 98] [1, 64] 
regular batch size: 2*623, diving batch size 1*0
(1246, 1, 28, 28) torch.Size([1246, 1, 10]) torch.Size([1246, 1])
pruning_in_iteration open status: True
ratio of positive domain = 716 / 1246 = 0.5746388443017656
pruning-in-iteration extra time: 0.016681432723999023
Tensors transferred: pre=1.9012M lA=0.4051M alpha=1.5923M beta=0.3196M
This batch time : update_bounds func: 0.7522	 prepare: 0.2275	 bound: 0.4433	 transfer: 0.0062	 finalize: 0.0729
Accumulated time: update_bounds func: 38.4547	 prepare: 12.3154	 bound: 20.9255	 transfer: 0.3765	 finalize: 4.4964
batch bounding time:  0.7523667812347412
Current worst splitting domains lb-rhs (depth):
-0.59064 (20), -0.56894 (20), -0.55745 (20), -0.53941 (20), -0.52190 (20), -0.52144 (20), -0.51471 (20), -0.51438 (20), -0.49339 (20), -0.47241 (20), -0.46496 (20), -0.46227 (20), -0.46066 (20), -0.45178 (20), -0.44967 (20), -0.42697 (20), -0.41192 (20), -0.40112 (20), -0.40073 (20), -0.39865 (20), 
length of domains: 530
Total time: 1.0864	 pickout: 0.0060	 decision: 0.1320	 get_bound: 0.7524	 add_domain: 0.1960
Accumulated time:	 pickout: 0.3455	 decision: 7.2474	 get_bound: 31.7428	 add_domain: 11.5445
Current (lb-rhs): -0.5906388759613037
30386 domains visited
Cumulative time: 51.3374810218811

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([530, 100]) pre split depth:  1
batch:  torch.Size([530, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [0, 87] [6, 18] [1, 41] [1, 46] [6, 9] [0, 75] [1, 41] [0, 60] [7, 88] 
regular batch size: 2*530, diving batch size 1*0
(1060, 1, 28, 28) torch.Size([1060, 1, 10]) torch.Size([1060, 1])
pruning_in_iteration open status: True
ratio of positive domain = 649 / 1060 = 0.6122641509433961
pruning-in-iteration extra time: 0.01671910285949707
Tensors transferred: pre=1.6174M lA=0.3136M alpha=1.3546M beta=0.2729M
This batch time : update_bounds func: 0.7067	 prepare: 0.1938	 bound: 0.4427	 transfer: 0.0056	 finalize: 0.0630
Accumulated time: update_bounds func: 39.1614	 prepare: 12.5092	 bound: 21.3683	 transfer: 0.3820	 finalize: 4.5594
batch bounding time:  0.7068476676940918
Current worst splitting domains lb-rhs (depth):
-0.48235 (21), -0.43763 (21), -0.43530 (21), -0.42648 (21), -0.42242 (21), -0.41208 (21), -0.40520 (21), -0.40021 (21), -0.39921 (21), -0.39579 (21), -0.38922 (21), -0.38479 (21), -0.37203 (21), -0.37028 (21), -0.36610 (21), -0.36570 (21), -0.36105 (21), -0.35622 (21), -0.35359 (21), -0.34569 (21), 
length of domains: 411
Total time: 1.0382	 pickout: 0.0057	 decision: 0.1714	 get_bound: 0.7069	 add_domain: 0.1541
Accumulated time:	 pickout: 0.3512	 decision: 7.4189	 get_bound: 32.4497	 add_domain: 11.6987
Current (lb-rhs): -0.48235368728637695
31035 domains visited
Cumulative time: 52.38411211967468

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([411, 100]) pre split depth:  1
batch:  torch.Size([411, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 64] [1, 46] [6, 11] [6, 58] [7, 32] [7, 32] [7, 77] [7, 32] [5, 4] [5, 64] 
regular batch size: 2*411, diving batch size 1*0
(822, 1, 28, 28) torch.Size([822, 1, 10]) torch.Size([822, 1])
pruning_in_iteration open status: True
ratio of positive domain = 523 / 822 = 0.6362530413625305
pruning-in-iteration extra time: 0.016636133193969727
Tensors transferred: pre=1.2543M lA=0.2296M alpha=1.0505M beta=0.2093M
This batch time : update_bounds func: 0.6566	 prepare: 0.1599	 bound: 0.4421	 transfer: 0.0047	 finalize: 0.0485
Accumulated time: update_bounds func: 39.8179	 prepare: 12.6690	 bound: 21.8103	 transfer: 0.3868	 finalize: 4.6079
batch bounding time:  0.6566989421844482
Current worst splitting domains lb-rhs (depth):
-0.40965 (22), -0.36697 (22), -0.36292 (22), -0.34492 (22), -0.34288 (22), -0.32992 (22), -0.32142 (22), -0.31751 (22), -0.31604 (22), -0.31492 (22), -0.29833 (22), -0.29432 (22), -0.29226 (22), -0.29032 (22), -0.29024 (22), -0.28405 (22), -0.28104 (22), -0.27609 (22), -0.26969 (28), -0.26229 (22), 
length of domains: 299
Total time: 0.8773	 pickout: 0.0049	 decision: 0.1017	 get_bound: 0.6568	 add_domain: 0.1139
Accumulated time:	 pickout: 0.3560	 decision: 7.5206	 get_bound: 33.1065	 add_domain: 11.8126
Current (lb-rhs): -0.40964651107788086
31558 domains visited
Cumulative time: 53.267544984817505

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([299, 100]) pre split depth:  1
batch:  torch.Size([299, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 77] [0, 0] [6, 11] [7, 88] [6, 11] [0, 75] [6, 41] [2, 30] [7, 77] [0, 87] 
regular batch size: 2*299, diving batch size 1*0
(598, 1, 28, 28) torch.Size([598, 1, 10]) torch.Size([598, 1])
pruning_in_iteration open status: True
ratio of positive domain = 429 / 598 = 0.7173913043478262
pruning-in-iteration extra time: 0.016561269760131836
Tensors transferred: pre=0.9125M lA=0.1289M alpha=0.7642M beta=0.1528M
This batch time : update_bounds func: 0.5920	 prepare: 0.1115	 bound: 0.4414	 transfer: 0.0039	 finalize: 0.0340
Accumulated time: update_bounds func: 40.4099	 prepare: 12.7806	 bound: 22.2517	 transfer: 0.3907	 finalize: 4.6420
batch bounding time:  0.5920541286468506
Current worst splitting domains lb-rhs (depth):
-0.32901 (23), -0.30376 (23), -0.28573 (23), -0.27733 (23), -0.27242 (23), -0.27192 (23), -0.25984 (23), -0.25775 (23), -0.25612 (23), -0.23788 (23), -0.22022 (31), -0.21723 (23), -0.21263 (23), -0.21052 (23), -0.21013 (23), -0.20394 (31), -0.20280 (23), -0.19898 (29), -0.19886 (23), -0.18898 (23), 
length of domains: 169
Total time: 0.7975	 pickout: 0.0057	 decision: 0.1317	 get_bound: 0.5921	 add_domain: 0.0680
Accumulated time:	 pickout: 0.3617	 decision: 7.6523	 get_bound: 33.6986	 add_domain: 11.8806
Current (lb-rhs): -0.3290107250213623
31987 domains visited
Cumulative time: 54.06959676742554

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([169, 100]) pre split depth:  1
batch:  torch.Size([169, 100]) post split depth:  1
splitting decisions: 
split level 0: [2, 30] [0, 23] [4, 47] [6, 81] [1, 64] [6, 41] [7, 77] [7, 77] [4, 17] [0, 75] 
regular batch size: 2*169, diving batch size 1*0
(338, 1, 28, 28) torch.Size([338, 1, 10]) torch.Size([338, 1])
pruning_in_iteration open status: True
ratio of positive domain = 246 / 338 = 0.7278106508875739
pruning-in-iteration extra time: 0.016381263732910156
Tensors transferred: pre=0.5157M lA=0.0710M alpha=0.4319M beta=0.0867M
This batch time : update_bounds func: 0.5240	 prepare: 0.0625	 bound: 0.4384	 transfer: 0.0030	 finalize: 0.0195
Accumulated time: update_bounds func: 40.9339	 prepare: 12.8431	 bound: 22.6901	 transfer: 0.3937	 finalize: 4.6615
batch bounding time:  0.5240576267242432
Current worst splitting domains lb-rhs (depth):
-0.24971 (24), -0.24651 (24), -0.24367 (24), -0.22869 (24), -0.20872 (24), -0.18898 (24), -0.18857 (24), -0.18666 (24), -0.16911 (24), -0.16457 (24), -0.16418 (24), -0.16182 (30), -0.15911 (32), -0.15290 (32), -0.14368 (30), -0.13353 (24), -0.12857 (24), -0.12532 (30), -0.12324 (32), -0.12242 (32), 
length of domains: 92
Total time: 0.6295	 pickout: 0.0033	 decision: 0.0627	 get_bound: 0.5241	 add_domain: 0.0394
Accumulated time:	 pickout: 0.3651	 decision: 7.7149	 get_bound: 34.2227	 add_domain: 11.9200
Current (lb-rhs): -0.24971461296081543
32233 domains visited
Cumulative time: 54.70187258720398

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([92, 100]) pre split depth:  1
batch:  torch.Size([92, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 23] [1, 46] [0, 0] [7, 29] [6, 59] [2, 30] [0, 75] [7, 32] [0, 75] [6, 85] 
regular batch size: 2*92, diving batch size 1*0
(184, 1, 28, 28) torch.Size([184, 1, 10]) torch.Size([184, 1])
pruning_in_iteration open status: True
ratio of positive domain = 126 / 184 = 0.6847826086956521
pruning-in-iteration extra time: 0.016444683074951172
Tensors transferred: pre=0.2808M lA=0.0443M alpha=0.2351M beta=0.0465M
This batch time : update_bounds func: 0.4882	 prepare: 0.0361	 bound: 0.4380	 transfer: 0.0025	 finalize: 0.0113
Accumulated time: update_bounds func: 41.4221	 prepare: 12.8792	 bound: 23.1280	 transfer: 0.3963	 finalize: 4.6727
batch bounding time:  0.4883460998535156
Current worst splitting domains lb-rhs (depth):
-0.24651 (25), -0.23915 (25), -0.20726 (25), -0.17330 (25), -0.11973 (33), -0.11794 (31), -0.10763 (31), -0.10276 (25), -0.09281 (33), -0.09161 (25), -0.08860 (32), -0.08302 (31), -0.08163 (32), -0.08119 (25), -0.08011 (25), -0.07964 (25), -0.07675 (25), -0.07402 (33), -0.07280 (33), -0.07130 (25), 
length of domains: 58
Total time: 0.5683	 pickout: 0.0022	 decision: 0.0516	 get_bound: 0.4884	 add_domain: 0.0261
Accumulated time:	 pickout: 0.3673	 decision: 7.7665	 get_bound: 34.7111	 add_domain: 11.9461
Current (lb-rhs): -0.24650788307189941
32359 domains visited
Cumulative time: 55.27206039428711

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([58, 100]) pre split depth:  1
batch:  torch.Size([58, 100]) post split depth:  1
splitting decisions: 
split level 0: [1, 64] [4, 40] [0, 75] [1, 41] [6, 59] [7, 17] [6, 41] [1, 46] [6, 99] [4, 47] 
regular batch size: 2*58, diving batch size 1*0
(116, 1, 28, 28) torch.Size([116, 1, 10]) torch.Size([116, 1])
pruning_in_iteration open status: True
ratio of positive domain = 87 / 116 = 0.75
pruning-in-iteration extra time: 0.016341209411621094
Tensors transferred: pre=0.1770M lA=0.0229M alpha=0.1482M beta=0.0290M
This batch time : update_bounds func: 0.4700	 prepare: 0.0244	 bound: 0.4364	 transfer: 0.0022	 finalize: 0.0067
Accumulated time: update_bounds func: 41.8921	 prepare: 12.9036	 bound: 23.5644	 transfer: 0.3985	 finalize: 4.6795
batch bounding time:  0.4700932502746582
Current worst splitting domains lb-rhs (depth):
-0.16749 (26), -0.15975 (26), -0.15481 (26), -0.09913 (32), -0.07212 (32), -0.06790 (34), -0.05972 (32), -0.05397 (26), -0.05310 (33), -0.05239 (26), -0.04226 (34), -0.03797 (34), -0.03609 (26), -0.03102 (33), -0.02750 (34), -0.02531 (34), -0.02423 (26), -0.01985 (33), -0.01834 (32), -0.01777 (32), 
length of domains: 29
Total time: 0.5339	 pickout: 0.0021	 decision: 0.0446	 get_bound: 0.4701	 add_domain: 0.0170
Accumulated time:	 pickout: 0.3694	 decision: 7.8111	 get_bound: 35.1813	 add_domain: 11.9632
Current (lb-rhs): -0.16748738288879395
32446 domains visited
Cumulative time: 55.80728363990784

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([29, 100]) pre split depth:  1
batch:  torch.Size([29, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [0, 23] [3, 75] [0, 75] [6, 41] [2, 34] [1, 41] [6, 59] [1, 46] [6, 41] 
regular batch size: 2*29, diving batch size 1*0
(58, 1, 28, 28) torch.Size([58, 1, 10]) torch.Size([58, 1])
pruning_in_iteration open status: True
ratio of positive domain = 45 / 58 = 0.7758620689655172
pruning-in-iteration extra time: 0.016567468643188477
Tensors transferred: pre=0.0885M lA=0.0099M alpha=0.0741M beta=0.0145M
This batch time : update_bounds func: 0.4546	 prepare: 0.0143	 bound: 0.4347	 transfer: 0.0020	 finalize: 0.0034
Accumulated time: update_bounds func: 42.3467	 prepare: 12.9179	 bound: 23.9992	 transfer: 0.4005	 finalize: 4.6829
batch bounding time:  0.45468878746032715
Current worst splitting domains lb-rhs (depth):
-0.15475 (27), -0.07263 (27), -0.05075 (33), -0.01904 (34), -0.01844 (27), -0.01803 (35), -0.01509 (27), -0.01245 (34), -0.01018 (33), -0.00877 (35), -0.00875 (33), -0.00793 (34), -0.00356 (33), 
length of domains: 13
Total time: 0.5053	 pickout: 0.0021	 decision: 0.0404	 get_bound: 0.4547	 add_domain: 0.0081
Accumulated time:	 pickout: 0.3715	 decision: 7.8515	 get_bound: 35.6360	 add_domain: 11.9713
Current (lb-rhs): -0.15474796295166016
32491 domains visited
Cumulative time: 56.31393218040466

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([13, 100]) pre split depth:  2
batch:  torch.Size([13, 100]) post split depth:  2
splitting decisions: 
split level 0: [2, 30] [7, 70] [5, 88] [0, 23] [0, 75] [7, 70] [5, 88] [7, 70] [7, 36] [6, 85] 
split level 1: [1, 64] [7, 93] [6, 16] [0, 75] [1, 64] [6, 85] [6, 85] [7, 77] [7, 93] [6, 56] 
regular batch size: 2*26, diving batch size 1*0
(52, 1, 28, 28) torch.Size([52, 1, 10]) torch.Size([52, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 52 / 52 = 1.0
pruning-in-iteration extra time: 0.00010633468627929688
Tensors transferred: pre=0.0793M lA=0.0397M alpha=0.0665M beta=0.0131M
This batch time : update_bounds func: 0.0304	 prepare: 0.0127	 bound: 0.0129	 transfer: 0.0015	 finalize: 0.0031
Accumulated time: update_bounds func: 42.3771	 prepare: 12.9306	 bound: 24.0120	 transfer: 0.4020	 finalize: 4.6860
batch bounding time:  0.030414342880249023
length of domains: 0
Total time: 0.0827	 pickout: 0.0020	 decision: 0.0381	 get_bound: 0.0407	 add_domain: 0.0020
Accumulated time:	 pickout: 0.3735	 decision: 7.8896	 get_bound: 35.6766	 add_domain: 11.9733
No domains left, verification finished!
32543 domains visited
Cumulative time: 56.39760875701904


Properties batch 2, size 1
Remaining timeout: 65.03251886367798
##### [0] Spec matrix: [[[ 0.  0. -1.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-4.56216097]], device='cuda:0') need to verify.
Model prediction is: tensor([-3.56774282, -2.49215603, -2.09614205,  0.89472860,  1.83690405,
         0.54328597, -4.33675528,  1.86856866,  1.38485730,  7.56602335],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /28 start_node /43 with alignment adjustment
setting alpha for layer /30 start_node /43 with alignment adjustment
setting alpha for layer /32 start_node /43 with alignment adjustment
setting alpha for layer /34 start_node /43 with alignment adjustment
setting alpha for layer /36 start_node /43 with alignment adjustment
setting alpha for layer /38 start_node /43 with alignment adjustment
setting alpha for layer /40 start_node /43 with alignment adjustment
setting alpha for layer /42 start_node /43 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-4.56216097]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/43']
Keeping slopes for these layers: ['/43']
layer 0 size torch.Size([100]) unstable 31
layer 1 size torch.Size([100]) unstable 39
layer 2 size torch.Size([100]) unstable 32
layer 3 size torch.Size([100]) unstable 37
layer 4 size torch.Size([100]) unstable 56
layer 5 size torch.Size([100]) unstable 62
layer 6 size torch.Size([100]) unstable 86
layer 7 size torch.Size([100]) unstable 100
-----------------
# of unstable neurons: 443
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 100]) pre split depth:  6
batch:  torch.Size([1, 100]) post split depth:  6
splitting decisions: 
split level 0: [7, 15] 
split level 1: [7, 14] 
split level 2: [7, 57] 
split level 3: [7, 20] 
split level 4: [7, 23] 
split level 5: [7, 65] 
regular batch size: 2*32, diving batch size 1*0
(64, 1, 28, 28) torch.Size([64, 1, 10]) torch.Size([64, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 64 = 0.0
pruning-in-iteration extra time: 0.00013875961303710938
Tensors transferred: pre=0.0977M lA=0.0488M alpha=0.0818M beta=0.0136M
This batch time : update_bounds func: 0.3797	 prepare: 0.0145	 bound: 0.3602	 transfer: 0.0015	 finalize: 0.0033
Accumulated time: update_bounds func: 42.7568	 prepare: 12.9451	 bound: 24.3723	 transfer: 0.4036	 finalize: 4.6893
batch bounding time:  0.37975621223449707
Current worst splitting domains lb-rhs (depth):
-4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.56216 (6), -4.52172 (6), -4.38902 (6), -4.33149 (6), -4.32676 (6), -4.30814 (6), 
length of domains: 64
Total time: 0.4907	 pickout: 0.0016	 decision: 0.0635	 get_bound: 0.4007	 add_domain: 0.0249
Accumulated time:	 pickout: 0.0016	 decision: 0.0635	 get_bound: 0.4007	 add_domain: 0.0249
Current (lb-rhs): -4.562160968780518
0 domains visited
Cumulative time: 0.5000231266021729

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 100]) pre split depth:  1
batch:  torch.Size([64, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 20] [7, 80] [7, 53] [7, 80] [6, 20] [7, 12] [7, 53] [7, 80] [6, 5] [7, 80] 
regular batch size: 2*64, diving batch size 1*0
(128, 1, 28, 28) torch.Size([128, 1, 10]) torch.Size([128, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 128 = 0.0
pruning-in-iteration extra time: 0.00011324882507324219
Tensors transferred: pre=0.1953M lA=0.0977M alpha=0.1636M beta=0.0275M
This batch time : update_bounds func: 0.3924	 prepare: 0.0233	 bound: 0.3605	 transfer: 0.0018	 finalize: 0.0066
Accumulated time: update_bounds func: 43.1492	 prepare: 12.9684	 bound: 24.7328	 transfer: 0.4054	 finalize: 4.6959
batch bounding time:  0.3925001621246338
Current worst splitting domains lb-rhs (depth):
-4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.56216 (7), -4.42985 (7), -4.41968 (7), -4.41059 (7), -4.20012 (7), -4.19853 (7), -4.19344 (7), -4.18743 (7), -4.14964 (7), -4.12932 (7), -4.10708 (7), 
length of domains: 128
Total time: 0.4838	 pickout: 0.0023	 decision: 0.0439	 get_bound: 0.3925	 add_domain: 0.0451
Accumulated time:	 pickout: 0.0039	 decision: 0.1074	 get_bound: 0.7932	 add_domain: 0.0700
Current (lb-rhs): -4.562160968780518
0 domains visited
Cumulative time: 0.9848983287811279

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([128, 100]) pre split depth:  1
batch:  torch.Size([128, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 24] [7, 12] [7, 80] [7, 12] [5, 24] [7, 80] [7, 76] [7, 12] [7, 12] [7, 12] 
regular batch size: 2*128, diving batch size 1*0
(256, 1, 28, 28) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 256 = 0.0
pruning-in-iteration extra time: 0.0001068115234375
Tensors transferred: pre=0.3906M lA=0.1953M alpha=0.3271M beta=0.0557M
This batch time : update_bounds func: 0.4211	 prepare: 0.0440	 bound: 0.3612	 transfer: 0.0024	 finalize: 0.0131
Accumulated time: update_bounds func: 43.5703	 prepare: 13.0123	 bound: 25.0941	 transfer: 0.4078	 finalize: 4.7090
batch bounding time:  0.42110514640808105
Current worst splitting domains lb-rhs (depth):
-4.56216 (8), -4.56216 (8), -4.56216 (8), -4.56216 (8), -4.43906 (8), -4.24818 (8), -4.22303 (8), -4.16916 (8), -4.16622 (8), -4.15494 (8), -4.09179 (8), -4.06053 (8), -4.01825 (8), -3.99656 (8), -3.97213 (8), -3.96527 (8), -3.95321 (8), -3.90959 (8), -3.87446 (8), -3.83006 (8), 
length of domains: 256
Total time: 0.5640	 pickout: 0.0025	 decision: 0.0557	 get_bound: 0.4212	 add_domain: 0.0846
Accumulated time:	 pickout: 0.0064	 decision: 0.1631	 get_bound: 1.2144	 add_domain: 0.1546
Current (lb-rhs): -4.562160968780518
0 domains visited
Cumulative time: 1.5503504276275635

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([256, 100]) pre split depth:  1
batch:  torch.Size([256, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 5] [6, 31] [7, 12] [7, 27] [6, 5] [7, 27] [7, 12] [7, 27] [6, 35] [6, 31] 
regular batch size: 2*256, diving batch size 1*0
(512, 1, 28, 28) torch.Size([512, 1, 10]) torch.Size([512, 1])
pruning_in_iteration open status: False
ratio of positive domain = 0 / 512 = 0.0
pruning-in-iteration extra time: 0.00011444091796875
Tensors transferred: pre=0.7812M lA=0.3906M alpha=0.6543M beta=0.1118M
This batch time : update_bounds func: 0.4780	 prepare: 0.0844	 bound: 0.3632	 transfer: 0.0034	 finalize: 0.0262
Accumulated time: update_bounds func: 44.0483	 prepare: 13.0968	 bound: 25.4573	 transfer: 0.4111	 finalize: 4.7352
batch bounding time:  0.47806215286254883
Current worst splitting domains lb-rhs (depth):
-4.40178 (9), -4.38839 (9), -4.34952 (9), -4.28770 (9), -4.02027 (9), -3.87360 (9), -3.82920 (9), -3.79595 (9), -3.73575 (9), -3.72586 (9), -3.69791 (9), -3.65738 (9), -3.63939 (9), -3.63523 (9), -3.61729 (9), -3.61715 (9), -3.58700 (9), -3.58643 (9), -3.56291 (9), -3.55720 (9), 
length of domains: 512
Total time: 0.7295	 pickout: 0.0038	 decision: 0.0821	 get_bound: 0.4781	 add_domain: 0.1655
Accumulated time:	 pickout: 0.0102	 decision: 0.2451	 get_bound: 1.6925	 add_domain: 0.3201
Current (lb-rhs): -4.401782989501953
0 domains visited
Cumulative time: 2.2825369834899902

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([512, 100]) pre split depth:  1
batch:  torch.Size([512, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 59] [6, 35] [7, 76] [7, 77] [7, 80] [6, 5] [7, 80] [7, 76] [5, 24] [6, 35] 
regular batch size: 2*512, diving batch size 1*0
(1024, 1, 28, 28) torch.Size([1024, 1, 10]) torch.Size([1024, 1])
pruning_in_iteration open status: False
ratio of positive domain = 1 / 1024 = 0.0009765625
pruning-in-iteration extra time: 0.00012111663818359375
Tensors transferred: pre=1.5625M lA=0.7812M alpha=1.3086M beta=0.2275M
This batch time : update_bounds func: 0.6123	 prepare: 0.1728	 bound: 0.3780	 transfer: 0.0050	 finalize: 0.0549
Accumulated time: update_bounds func: 44.6605	 prepare: 13.2696	 bound: 25.8353	 transfer: 0.4162	 finalize: 4.7901
batch bounding time:  0.6123464107513428
Current worst splitting domains lb-rhs (depth):
-4.00224 (10), -3.96778 (10), -3.96028 (10), -3.94244 (10), -3.94081 (10), -3.90959 (10), -3.79659 (10), -3.66724 (10), -3.65940 (10), -3.44491 (10), -3.42366 (10), -3.40568 (10), -3.38371 (10), -3.34193 (10), -3.30608 (10), -3.28492 (10), -3.24251 (10), -3.22751 (10), -3.22529 (10), -3.20357 (10), 
length of domains: 1023
Total time: 1.1497	 pickout: 0.0049	 decision: 0.1984	 get_bound: 0.6124	 add_domain: 0.3340
Accumulated time:	 pickout: 0.0151	 decision: 0.4435	 get_bound: 2.3049	 add_domain: 0.6542
Current (lb-rhs): -4.0022430419921875
1 domains visited
Cumulative time: 3.437331199645996

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1023, 100]) pre split depth:  1
batch:  torch.Size([1023, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 35] [0, 60] [6, 23] [6, 31] [3, 59] [6, 35] [6, 23] [7, 77] [3, 59] [0, 60] 
regular batch size: 2*1023, diving batch size 1*0
(2046, 1, 28, 28) torch.Size([2046, 1, 10]) torch.Size([2046, 1])
pruning_in_iteration open status: False
ratio of positive domain = 354 / 2046 = 0.1730205278592375
pruning-in-iteration extra time: 0.00017595291137695312
Tensors transferred: pre=3.1219M lA=1.5610M alpha=2.6146M beta=0.4566M
This batch time : update_bounds func: 1.1891	 prepare: 0.5464	 bound: 0.4505	 transfer: 0.0108	 finalize: 0.1780
Accumulated time: update_bounds func: 45.8496	 prepare: 13.8160	 bound: 26.2858	 transfer: 0.4270	 finalize: 4.9681
batch bounding time:  1.189218521118164
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.48242 (11), -3.35826 (11), -3.28599 (11), -3.28015 (11), -3.26292 (11), -3.22324 (11), -3.10152 (11), -3.04655 (11), -3.04331 (11), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99430 (11), 
length of domains: 1692
Total time: 2.0657	 pickout: 0.0089	 decision: 0.3095	 get_bound: 1.1893	 add_domain: 0.5580
Accumulated time:	 pickout: 0.0239	 decision: 0.7529	 get_bound: 3.4942	 add_domain: 1.2122
Current (lb-rhs): -3.7148542404174805
355 domains visited
Cumulative time: 5.513217449188232

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 55] [7, 31] [7, 76] [6, 35] [6, 78] [6, 55] [6, 31] [7, 76] [7, 31] [6, 87] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 607 / 2048 = 0.29638671875
pruning-in-iteration extra time: 0.017717361450195312
Tensors transferred: pre=3.1250M lA=1.1055M alpha=2.6172M beta=0.4609M
This batch time : update_bounds func: 1.2491	 prepare: 0.5485	 bound: 0.5100	 transfer: 0.0098	 finalize: 0.1772
Accumulated time: update_bounds func: 47.0987	 prepare: 14.3645	 bound: 26.7958	 transfer: 0.4368	 finalize: 5.1453
batch bounding time:  1.249267816543579
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 2109
Total time: 2.1774	 pickout: 0.0104	 decision: 0.3103	 get_bound: 1.2494	 add_domain: 0.6073
Accumulated time:	 pickout: 0.0343	 decision: 1.0633	 get_bound: 4.7436	 add_domain: 1.8195
Current (lb-rhs): -3.7148542404174805
962 domains visited
Cumulative time: 7.701711893081665

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 80] [7, 19] [0, 60] [7, 76] [5, 98] [0, 60] [0, 60] [7, 19] [6, 23] [3, 59] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: False
ratio of positive domain = 290 / 2048 = 0.1416015625
pruning-in-iteration extra time: 0.0001220703125
Tensors transferred: pre=3.1250M lA=1.5625M alpha=2.6172M beta=0.4688M
This batch time : update_bounds func: 1.1834	 prepare: 0.5499	 bound: 0.4341	 transfer: 0.0104	 finalize: 0.1157
Accumulated time: update_bounds func: 48.2822	 prepare: 14.9144	 bound: 27.2299	 transfer: 0.4472	 finalize: 5.2609
batch bounding time:  1.183511734008789
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 2843
Total time: 2.0207	 pickout: 0.0099	 decision: 0.2514	 get_bound: 1.1836	 add_domain: 0.5758
Accumulated time:	 pickout: 0.0442	 decision: 1.3147	 get_bound: 5.9272	 add_domain: 2.3953
Current (lb-rhs): -3.7148542404174805
1252 domains visited
Cumulative time: 9.73321008682251

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [5, 98] [7, 76] [6, 35] [7, 27] [7, 76] [6, 64] [0, 60] [3, 59] [7, 76] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: False
ratio of positive domain = 368 / 2048 = 0.1796875
pruning-in-iteration extra time: 0.00012445449829101562
Tensors transferred: pre=3.1250M lA=1.5625M alpha=2.6172M beta=0.4766M
This batch time : update_bounds func: 0.8820	 prepare: 0.3561	 bound: 0.3965	 transfer: 0.0101	 finalize: 0.1157
Accumulated time: update_bounds func: 49.1642	 prepare: 15.2705	 bound: 27.6264	 transfer: 0.4572	 finalize: 5.3766
batch bounding time:  0.8821125030517578
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3499
Total time: 1.8174	 pickout: 0.0095	 decision: 0.2765	 get_bound: 0.8822	 add_domain: 0.6492
Accumulated time:	 pickout: 0.0537	 decision: 1.5913	 get_bound: 6.8094	 add_domain: 3.0444
Current (lb-rhs): -3.7148542404174805
1620 domains visited
Cumulative time: 11.563387632369995

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 34] [7, 19] [5, 1] [7, 19] [6, 5] [6, 64] [0, 60] [6, 35] [6, 33] [7, 19] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 542 / 2048 = 0.2646484375
pruning-in-iteration extra time: 0.00628352165222168
Tensors transferred: pre=3.1250M lA=1.1604M alpha=2.6172M beta=0.4805M
This batch time : update_bounds func: 0.9154	 prepare: 0.3568	 bound: 0.4275	 transfer: 0.0100	 finalize: 0.1176
Accumulated time: update_bounds func: 50.0795	 prepare: 15.6273	 bound: 28.0540	 transfer: 0.4672	 finalize: 5.4942
batch bounding time:  0.9156050682067871
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3981
Total time: 1.7520	 pickout: 0.0080	 decision: 0.1956	 get_bound: 0.9157	 add_domain: 0.6327
Accumulated time:	 pickout: 0.0617	 decision: 1.7869	 get_bound: 7.7251	 add_domain: 3.6771
Current (lb-rhs): -3.7148542404174805
2162 domains visited
Cumulative time: 13.337995052337646

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 19] [6, 51] [7, 31] [5, 1] [6, 23] [6, 31] [6, 31] [6, 64] [6, 33] [7, 77] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 873 / 2048 = 0.42626953125
pruning-in-iteration extra time: 0.016911029815673828
Tensors transferred: pre=3.1250M lA=0.9033M alpha=2.6172M beta=0.4824M
This batch time : update_bounds func: 1.1118	 prepare: 0.3720	 bound: 0.4823	 transfer: 0.0140	 finalize: 0.2399
Accumulated time: update_bounds func: 51.1913	 prepare: 15.9993	 bound: 28.5363	 transfer: 0.4813	 finalize: 5.7341
batch bounding time:  1.1119811534881592
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4132
Total time: 1.8567	 pickout: 0.0124	 decision: 0.1953	 get_bound: 1.1121	 add_domain: 0.5370
Accumulated time:	 pickout: 0.0740	 decision: 1.9821	 get_bound: 8.8371	 add_domain: 4.2141
Current (lb-rhs): -3.7148542404174805
3035 domains visited
Cumulative time: 15.210704326629639

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 27] [7, 31] [5, 1] [6, 31] [6, 87] [6, 64] [7, 74] [5, 26] [0, 60] [0, 0] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 982 / 2048 = 0.4794921875
pruning-in-iteration extra time: 0.01703500747680664
Tensors transferred: pre=3.1250M lA=0.8217M alpha=2.6172M beta=0.4844M
This batch time : update_bounds func: 1.0818	 prepare: 0.3647	 bound: 0.4847	 transfer: 0.0110	 finalize: 0.2180
Accumulated time: update_bounds func: 52.2731	 prepare: 16.3640	 bound: 29.0210	 transfer: 0.4923	 finalize: 5.9521
batch bounding time:  1.0819761753082275
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4174
Total time: 1.6526	 pickout: 0.0103	 decision: 0.1954	 get_bound: 1.0820	 add_domain: 0.3649
Accumulated time:	 pickout: 0.0844	 decision: 2.1775	 get_bound: 9.9192	 add_domain: 4.5790
Current (lb-rhs): -3.7148542404174805
4017 domains visited
Cumulative time: 16.87965679168701

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [4, 62] [7, 77] [6, 64] [7, 34] [6, 95] [6, 95] [7, 77] [5, 26] [7, 34] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 933 / 2048 = 0.45556640625
pruning-in-iteration extra time: 0.016806840896606445
Tensors transferred: pre=3.1250M lA=0.8553M alpha=2.6172M beta=0.4922M
This batch time : update_bounds func: 1.0800	 prepare: 0.3646	 bound: 0.4818	 transfer: 0.0116	 finalize: 0.1186
Accumulated time: update_bounds func: 53.3532	 prepare: 16.7287	 bound: 29.5028	 transfer: 0.5038	 finalize: 6.0707
batch bounding time:  1.0801916122436523
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4265
Total time: 1.6737	 pickout: 0.0107	 decision: 0.1938	 get_bound: 1.0803	 add_domain: 0.3890
Accumulated time:	 pickout: 0.0950	 decision: 2.3713	 get_bound: 10.9994	 add_domain: 4.9680
Current (lb-rhs): -3.7148542404174805
4950 domains visited
Cumulative time: 18.569565534591675

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 11] [6, 51] [6, 99] [6, 87] [6, 35] [0, 60] [5, 98] [5, 80] [6, 87] [6, 99] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 996 / 2048 = 0.486328125
pruning-in-iteration extra time: 0.016939163208007812
Tensors transferred: pre=3.1250M lA=0.8110M alpha=2.6172M beta=0.4941M
This batch time : update_bounds func: 0.9806	 prepare: 0.3657	 bound: 0.4844	 transfer: 0.0092	 finalize: 0.1174
Accumulated time: update_bounds func: 54.3338	 prepare: 17.0944	 bound: 29.9871	 transfer: 0.5131	 finalize: 6.1881
batch bounding time:  0.9807517528533936
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4293
Total time: 1.6558	 pickout: 0.0098	 decision: 0.2982	 get_bound: 0.9808	 add_domain: 0.3669
Accumulated time:	 pickout: 0.1049	 decision: 2.6695	 get_bound: 11.9802	 add_domain: 5.3349
Current (lb-rhs): -3.7148542404174805
5946 domains visited
Cumulative time: 20.24152708053589

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [0, 0] [7, 77] [6, 87] [6, 23] [0, 60] [6, 95] [7, 77] [0, 0] [6, 64] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 988 / 2048 = 0.482421875
pruning-in-iteration extra time: 0.017007827758789062
Tensors transferred: pre=3.1250M lA=0.8141M alpha=2.6172M beta=0.4961M
This batch time : update_bounds func: 0.9849	 prepare: 0.3680	 bound: 0.4827	 transfer: 0.0113	 finalize: 0.1193
Accumulated time: update_bounds func: 55.3186	 prepare: 17.4624	 bound: 30.4699	 transfer: 0.5243	 finalize: 6.3074
batch bounding time:  0.9850034713745117
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4329
Total time: 1.6674	 pickout: 0.0107	 decision: 0.2985	 get_bound: 0.9851	 add_domain: 0.3732
Accumulated time:	 pickout: 0.1156	 decision: 2.9679	 get_bound: 12.9653	 add_domain: 5.7081
Current (lb-rhs): -3.7148542404174805
6934 domains visited
Cumulative time: 21.92673420906067

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 85] [6, 31] [0, 39] [5, 11] [5, 11] [6, 68] [6, 55] [6, 51] [6, 23] [6, 55] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1065 / 2048 = 0.52001953125
pruning-in-iteration extra time: 0.01724386215209961
Tensors transferred: pre=3.1250M lA=0.7607M alpha=2.6172M beta=0.5000M
This batch time : update_bounds func: 0.9904	 prepare: 0.3708	 bound: 0.4854	 transfer: 0.0090	 finalize: 0.1217
Accumulated time: update_bounds func: 56.3091	 prepare: 17.8332	 bound: 30.9552	 transfer: 0.5334	 finalize: 6.4291
batch bounding time:  0.9905660152435303
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4288
Total time: 1.6531	 pickout: 0.0110	 decision: 0.3016	 get_bound: 0.9906	 add_domain: 0.3497
Accumulated time:	 pickout: 0.1266	 decision: 3.2696	 get_bound: 13.9560	 add_domain: 6.0578
Current (lb-rhs): -3.7148542404174805
7999 domains visited
Cumulative time: 23.596393585205078

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 68] [0, 60] [5, 98] [6, 0] [6, 51] [5, 11] [0, 60] [7, 77] [6, 68] [7, 77] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1089 / 2048 = 0.53173828125
pruning-in-iteration extra time: 0.017121315002441406
Tensors transferred: pre=3.1250M lA=0.7362M alpha=2.6172M beta=0.5059M
This batch time : update_bounds func: 0.9948	 prepare: 0.3750	 bound: 0.4844	 transfer: 0.0101	 finalize: 0.1215
Accumulated time: update_bounds func: 57.3038	 prepare: 18.2081	 bound: 31.4396	 transfer: 0.5435	 finalize: 6.5506
batch bounding time:  0.9949460029602051
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4223
Total time: 1.6535	 pickout: 0.0111	 decision: 0.3042	 get_bound: 0.9950	 add_domain: 0.3431
Accumulated time:	 pickout: 0.1377	 decision: 3.5737	 get_bound: 14.9510	 add_domain: 6.4009
Current (lb-rhs): -3.7148542404174805
9088 domains visited
Cumulative time: 25.266902685165405

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [3, 71] [4, 74] [0, 60] [6, 99] [3, 71] [0, 39] [6, 64] [6, 33] [4, 74] [0, 60] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1070 / 2048 = 0.5224609375
pruning-in-iteration extra time: 0.017586946487426758
Tensors transferred: pre=3.1250M lA=0.7492M alpha=2.6172M beta=0.5117M
This batch time : update_bounds func: 1.0156	 prepare: 0.3735	 bound: 0.4939	 transfer: 0.0160	 finalize: 0.1290
Accumulated time: update_bounds func: 58.3195	 prepare: 18.5816	 bound: 31.9335	 transfer: 0.5594	 finalize: 6.6796
batch bounding time:  1.015820026397705
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4177
Total time: 1.6816	 pickout: 0.0098	 decision: 0.2998	 get_bound: 1.0159	 add_domain: 0.3561
Accumulated time:	 pickout: 0.1476	 decision: 3.8735	 get_bound: 15.9669	 add_domain: 6.7570
Current (lb-rhs): -3.7148542404174805
10158 domains visited
Cumulative time: 26.966583013534546

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 0] [6, 23] [7, 19] [7, 77] [0, 0] [0, 60] [6, 51] [7, 12] [4, 74] [6, 87] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1022 / 2048 = 0.4990234375
pruning-in-iteration extra time: 0.01709294319152832
Tensors transferred: pre=3.1250M lA=0.7889M alpha=2.6172M beta=0.5137M
This batch time : update_bounds func: 0.9825	 prepare: 0.3719	 bound: 0.4754	 transfer: 0.0094	 finalize: 0.1219
Accumulated time: update_bounds func: 59.3020	 prepare: 18.9534	 bound: 32.4089	 transfer: 0.5689	 finalize: 6.8015
batch bounding time:  0.9827191829681396
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4179
Total time: 1.6725	 pickout: 0.0128	 decision: 0.3060	 get_bound: 0.9828	 add_domain: 0.3709
Accumulated time:	 pickout: 0.1603	 decision: 4.1795	 get_bound: 16.9497	 add_domain: 7.1279
Current (lb-rhs): -3.7148542404174805
11180 domains visited
Cumulative time: 28.65558934211731

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 23] [6, 23] [6, 55] [0, 60] [6, 31] [6, 31] [0, 60] [0, 0] [6, 87] [6, 31] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1034 / 2048 = 0.5048828125
pruning-in-iteration extra time: 0.017048358917236328
Tensors transferred: pre=3.1250M lA=0.7744M alpha=2.6172M beta=0.5117M
This batch time : update_bounds func: 0.9738	 prepare: 0.3691	 bound: 0.4669	 transfer: 0.0090	 finalize: 0.1247
Accumulated time: update_bounds func: 60.2758	 prepare: 19.3225	 bound: 32.8759	 transfer: 0.5779	 finalize: 6.9262
batch bounding time:  0.9739842414855957
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4169
Total time: 1.6511	 pickout: 0.0109	 decision: 0.2995	 get_bound: 0.9741	 add_domain: 0.3667
Accumulated time:	 pickout: 0.1712	 decision: 4.4790	 get_bound: 17.9238	 add_domain: 7.4946
Current (lb-rhs): -3.7148542404174805
12214 domains visited
Cumulative time: 30.32338285446167

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 87] [0, 60] [6, 30] [6, 35] [6, 64] [6, 30] [3, 59] [0, 0] [6, 87] [6, 35] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1024 / 2048 = 0.5
pruning-in-iteration extra time: 0.01703667640686035
Tensors transferred: pre=3.1250M lA=0.7874M alpha=2.6172M beta=0.5117M
This batch time : update_bounds func: 0.9741	 prepare: 0.3726	 bound: 0.4664	 transfer: 0.0090	 finalize: 0.1220
Accumulated time: update_bounds func: 61.2499	 prepare: 19.6951	 bound: 33.3423	 transfer: 0.5869	 finalize: 7.0482
batch bounding time:  0.974254846572876
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4169
Total time: 1.6568	 pickout: 0.0110	 decision: 0.2973	 get_bound: 0.9743	 add_domain: 0.3741
Accumulated time:	 pickout: 0.1823	 decision: 4.7763	 get_bound: 18.8981	 add_domain: 7.8687
Current (lb-rhs): -3.7148542404174805
13238 domains visited
Cumulative time: 31.996495008468628

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 99] [6, 85] [0, 60] [4, 47] [6, 51] [6, 6] [6, 85] [5, 98] [6, 0] [6, 67] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1242 / 2048 = 0.6064453125
pruning-in-iteration extra time: 0.016972780227661133
Tensors transferred: pre=3.1250M lA=0.6203M alpha=2.6172M beta=0.5137M
This batch time : update_bounds func: 0.9523	 prepare: 0.3685	 bound: 0.4480	 transfer: 0.0091	 finalize: 0.1228
Accumulated time: update_bounds func: 62.2023	 prepare: 20.0636	 bound: 33.7903	 transfer: 0.5960	 finalize: 7.1710
batch bounding time:  0.9525101184844971
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3951
Total time: 1.5535	 pickout: 0.0109	 decision: 0.2939	 get_bound: 0.9526	 add_domain: 0.2961
Accumulated time:	 pickout: 0.1932	 decision: 5.0702	 get_bound: 19.8507	 add_domain: 8.1648
Current (lb-rhs): -3.7148542404174805
14480 domains visited
Cumulative time: 33.56735420227051

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 85] [7, 77] [0, 39] [0, 0] [6, 95] [7, 76] [6, 30] [6, 55] [7, 77] [7, 77] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1209 / 2048 = 0.59033203125
pruning-in-iteration extra time: 0.016889095306396484
Tensors transferred: pre=3.1250M lA=0.6485M alpha=2.6172M beta=0.5176M
This batch time : update_bounds func: 0.9547	 prepare: 0.3710	 bound: 0.4482	 transfer: 0.0090	 finalize: 0.1224
Accumulated time: update_bounds func: 63.1569	 prepare: 20.4346	 bound: 34.2385	 transfer: 0.6050	 finalize: 7.2934
batch bounding time:  0.954845666885376
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3766
Total time: 1.5704	 pickout: 0.1168	 decision: 0.1950	 get_bound: 0.9549	 add_domain: 0.3036
Accumulated time:	 pickout: 0.3100	 decision: 5.2652	 get_bound: 20.8056	 add_domain: 8.4684
Current (lb-rhs): -3.7148542404174805
15689 domains visited
Cumulative time: 35.1560583114624

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [5, 1] [6, 23] [6, 87] [0, 60] [6, 30] [6, 30] [5, 1] [5, 98] [7, 76] [0, 60] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1132 / 2048 = 0.552734375
pruning-in-iteration extra time: 0.017023801803588867
Tensors transferred: pre=3.1250M lA=0.7065M alpha=2.6172M beta=0.5215M
This batch time : update_bounds func: 0.9621	 prepare: 0.3763	 bound: 0.4491	 transfer: 0.0094	 finalize: 0.1237
Accumulated time: update_bounds func: 64.1190	 prepare: 20.8109	 bound: 34.6876	 transfer: 0.6144	 finalize: 7.4171
batch bounding time:  0.9622199535369873
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3658
Total time: 1.6926	 pickout: 0.1061	 decision: 0.1954	 get_bound: 0.9623	 add_domain: 0.4287
Accumulated time:	 pickout: 0.4161	 decision: 5.4606	 get_bound: 21.7679	 add_domain: 8.8971
Current (lb-rhs): -3.7148542404174805
16821 domains visited
Cumulative time: 36.864952087402344

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 95] [6, 51] [5, 1] [6, 35] [6, 64] [6, 95] [6, 51] [6, 85] [6, 35] [6, 95] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1027 / 2048 = 0.50146484375
pruning-in-iteration extra time: 0.016961336135864258
Tensors transferred: pre=3.1250M lA=0.7843M alpha=2.6172M beta=0.5215M
This batch time : update_bounds func: 0.9481	 prepare: 0.3659	 bound: 0.4479	 transfer: 0.0090	 finalize: 0.1213
Accumulated time: update_bounds func: 65.0671	 prepare: 21.1769	 bound: 35.1354	 transfer: 0.6234	 finalize: 7.5385
batch bounding time:  0.948296070098877
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3655
Total time: 1.6160	 pickout: 0.0108	 decision: 0.1946	 get_bound: 0.9484	 add_domain: 0.4621
Accumulated time:	 pickout: 0.4269	 decision: 5.6552	 get_bound: 22.7163	 add_domain: 9.3592
Current (lb-rhs): -3.7148542404174805
17848 domains visited
Cumulative time: 38.49711012840271

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 27] [0, 60] [3, 59] [0, 60] [7, 80] [6, 5] [7, 77] [0, 60] [7, 77] [5, 1] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1018 / 2048 = 0.4970703125
pruning-in-iteration extra time: 0.016939163208007812
Tensors transferred: pre=3.1250M lA=0.7881M alpha=2.6172M beta=0.5215M
This batch time : update_bounds func: 0.9491	 prepare: 0.3655	 bound: 0.4481	 transfer: 0.0090	 finalize: 0.1227
Accumulated time: update_bounds func: 66.0163	 prepare: 21.5423	 bound: 35.5836	 transfer: 0.6324	 finalize: 7.6611
batch bounding time:  0.9492843151092529
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3661
Total time: 1.6180	 pickout: 0.0092	 decision: 0.1954	 get_bound: 0.9494	 add_domain: 0.4640
Accumulated time:	 pickout: 0.4361	 decision: 5.8506	 get_bound: 23.6657	 add_domain: 9.8232
Current (lb-rhs): -3.7148542404174805
18866 domains visited
Cumulative time: 40.13060641288757

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 77] [6, 31] [6, 43] [7, 74] [3, 59] [5, 26] [7, 77] [6, 31] [7, 77] [6, 31] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1027 / 2048 = 0.50146484375
pruning-in-iteration extra time: 0.017001628875732422
Tensors transferred: pre=3.1250M lA=0.7828M alpha=2.6172M beta=0.5098M
This batch time : update_bounds func: 0.9410	 prepare: 0.3621	 bound: 0.4489	 transfer: 0.0090	 finalize: 0.1175
Accumulated time: update_bounds func: 66.9573	 prepare: 21.9045	 bound: 36.0325	 transfer: 0.6414	 finalize: 7.7786
batch bounding time:  0.9411530494689941
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3658
Total time: 1.6076	 pickout: 0.0089	 decision: 0.1956	 get_bound: 0.9412	 add_domain: 0.4620
Accumulated time:	 pickout: 0.4450	 decision: 6.0462	 get_bound: 24.6069	 add_domain: 10.2852
Current (lb-rhs): -3.7148542404174805
19893 domains visited
Cumulative time: 41.75356435775757

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 60] [6, 87] [6, 30] [4, 62] [5, 1] [7, 34] [6, 99] [6, 30] [6, 31] [6, 20] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1068 / 2048 = 0.521484375
pruning-in-iteration extra time: 0.017102956771850586
Tensors transferred: pre=3.1250M lA=0.7538M alpha=2.6172M beta=0.5137M
This batch time : update_bounds func: 0.9524	 prepare: 0.3678	 bound: 0.4494	 transfer: 0.0090	 finalize: 0.1222
Accumulated time: update_bounds func: 67.9097	 prepare: 22.2722	 bound: 36.4819	 transfer: 0.6504	 finalize: 7.9008
batch bounding time:  0.9525682926177979
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3614
Total time: 1.6081	 pickout: 0.0108	 decision: 0.1961	 get_bound: 0.9527	 add_domain: 0.4485
Accumulated time:	 pickout: 0.4558	 decision: 6.2423	 get_bound: 25.5596	 add_domain: 10.7337
Current (lb-rhs): -3.7148542404174805
20961 domains visited
Cumulative time: 43.37725806236267

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 31] [6, 87] [7, 27] [6, 31] [6, 95] [7, 34] [7, 77] [0, 60] [7, 19] [6, 95] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1048 / 2048 = 0.51171875
pruning-in-iteration extra time: 0.017072200775146484
Tensors transferred: pre=3.1250M lA=0.7645M alpha=2.6172M beta=0.5137M
This batch time : update_bounds func: 0.9740	 prepare: 0.3717	 bound: 0.4556	 transfer: 0.0161	 finalize: 0.1272
Accumulated time: update_bounds func: 68.8837	 prepare: 22.6439	 bound: 36.9374	 transfer: 0.6665	 finalize: 8.0280
batch bounding time:  0.9741461277008057
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3590
Total time: 1.6458	 pickout: 0.0103	 decision: 0.1939	 get_bound: 0.9743	 add_domain: 0.4673
Accumulated time:	 pickout: 0.4661	 decision: 6.4362	 get_bound: 26.5338	 add_domain: 11.2010
Current (lb-rhs): -3.7148542404174805
22009 domains visited
Cumulative time: 45.03882622718811

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 85] [3, 59] [7, 77] [6, 33] [7, 19] [7, 31] [7, 31] [0, 60] [7, 19] [6, 35] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 978 / 2048 = 0.4775390625
pruning-in-iteration extra time: 0.016875028610229492
Tensors transferred: pre=3.1250M lA=0.8194M alpha=2.6172M beta=0.5137M
This batch time : update_bounds func: 0.9503	 prepare: 0.3687	 bound: 0.4474	 transfer: 0.0094	 finalize: 0.1213
Accumulated time: update_bounds func: 69.8340	 prepare: 23.0126	 bound: 37.3849	 transfer: 0.6759	 finalize: 8.1493
batch bounding time:  0.9504804611206055
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3636
Total time: 1.6362	 pickout: 0.0087	 decision: 0.1947	 get_bound: 0.9505	 add_domain: 0.4822
Accumulated time:	 pickout: 0.4748	 decision: 6.6309	 get_bound: 27.4844	 add_domain: 11.6832
Current (lb-rhs): -3.7148542404174805
22987 domains visited
Cumulative time: 46.69043159484863

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 31] [1, 64] [4, 97] [0, 0] [5, 4] [7, 30] [6, 31] [6, 43] [0, 60] [6, 99] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 900 / 2048 = 0.439453125
pruning-in-iteration extra time: 0.016903400421142578
Tensors transferred: pre=3.1250M lA=0.8820M alpha=2.6172M beta=0.5098M
This batch time : update_bounds func: 0.9604	 prepare: 0.3746	 bound: 0.4481	 transfer: 0.0092	 finalize: 0.1249
Accumulated time: update_bounds func: 70.7944	 prepare: 23.3872	 bound: 37.8330	 transfer: 0.6852	 finalize: 8.2742
batch bounding time:  0.9605462551116943
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3760
Total time: 1.6771	 pickout: 0.0086	 decision: 0.1950	 get_bound: 0.9606	 add_domain: 0.5129
Accumulated time:	 pickout: 0.4834	 decision: 6.8259	 get_bound: 28.4450	 add_domain: 12.1961
Current (lb-rhs): -3.7148542404174805
23887 domains visited
Cumulative time: 48.38269376754761

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 87] [0, 60] [6, 85] [6, 6] [5, 27] [5, 11] [6, 33] [5, 27] [0, 60] [5, 53] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 812 / 2048 = 0.396484375
pruning-in-iteration extra time: 0.016895771026611328
Tensors transferred: pre=3.1250M lA=0.9491M alpha=2.6172M beta=0.5117M
This batch time : update_bounds func: 1.0577	 prepare: 0.3737	 bound: 0.4476	 transfer: 0.0090	 finalize: 0.2238
Accumulated time: update_bounds func: 71.8521	 prepare: 23.7609	 bound: 38.2806	 transfer: 0.6942	 finalize: 8.4980
batch bounding time:  1.0578961372375488
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 3972
Total time: 1.7134	 pickout: 0.0101	 decision: 0.1936	 get_bound: 1.0580	 add_domain: 0.4518
Accumulated time:	 pickout: 0.4935	 decision: 7.0195	 get_bound: 29.5029	 add_domain: 12.6478
Current (lb-rhs): -3.7148542404174805
24699 domains visited
Cumulative time: 50.11122250556946

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 70] [4, 74] [6, 31] [6, 43] [0, 60] [6, 64] [6, 85] [5, 53] [6, 51] [6, 30] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 799 / 2048 = 0.39013671875
pruning-in-iteration extra time: 0.016948461532592773
Tensors transferred: pre=3.1250M lA=0.9552M alpha=2.6172M beta=0.5176M
This batch time : update_bounds func: 1.0772	 prepare: 0.3781	 bound: 0.4501	 transfer: 0.0094	 finalize: 0.2363
Accumulated time: update_bounds func: 72.9293	 prepare: 24.1390	 bound: 38.7307	 transfer: 0.7035	 finalize: 8.7343
batch bounding time:  1.0773992538452148
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4197
Total time: 1.7382	 pickout: 0.0093	 decision: 0.1947	 get_bound: 1.0775	 add_domain: 0.4568
Accumulated time:	 pickout: 0.5027	 decision: 7.2142	 get_bound: 30.5804	 add_domain: 13.1046
Current (lb-rhs): -3.7148542404174805
25498 domains visited
Cumulative time: 51.869064807891846

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 10] [5, 49] [6, 6] [4, 74] [4, 63] [6, 68] [6, 87] [6, 43] [7, 30] [6, 33] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 844 / 2048 = 0.412109375
pruning-in-iteration extra time: 0.017090320587158203
Tensors transferred: pre=3.1250M lA=0.9277M alpha=2.6172M beta=0.5215M
This batch time : update_bounds func: 0.9633	 prepare: 0.3752	 bound: 0.4502	 transfer: 0.0095	 finalize: 0.1248
Accumulated time: update_bounds func: 73.8927	 prepare: 24.5142	 bound: 39.1809	 transfer: 0.7131	 finalize: 8.8591
batch bounding time:  0.9634675979614258
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4377
Total time: 1.7190	 pickout: 0.0108	 decision: 0.2992	 get_bound: 0.9635	 add_domain: 0.4454
Accumulated time:	 pickout: 0.5136	 decision: 7.5134	 get_bound: 31.5440	 add_domain: 13.5500
Current (lb-rhs): -3.7148542404174805
26342 domains visited
Cumulative time: 53.60356092453003

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 58] [6, 43] [0, 60] [0, 60] [0, 60] [4, 74] [6, 56] [6, 0] [6, 6] [6, 78] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 764 / 2048 = 0.373046875
pruning-in-iteration extra time: 0.017020225524902344
Tensors transferred: pre=3.1250M lA=0.9834M alpha=2.6172M beta=0.5254M
This batch time : update_bounds func: 0.9614	 prepare: 0.3746	 bound: 0.4486	 transfer: 0.0099	 finalize: 0.1243
Accumulated time: update_bounds func: 74.8541	 prepare: 24.8888	 bound: 39.6295	 transfer: 0.7230	 finalize: 8.9834
batch bounding time:  0.9615788459777832
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4637
Total time: 1.7525	 pickout: 0.0097	 decision: 0.3051	 get_bound: 0.9617	 add_domain: 0.4761
Accumulated time:	 pickout: 0.5233	 decision: 7.8185	 get_bound: 32.5056	 add_domain: 14.0261
Current (lb-rhs): -3.7148542404174805
27106 domains visited
Cumulative time: 55.3716299533844

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 30] [0, 39] [7, 70] [6, 55] [6, 85] [0, 60] [6, 85] [6, 51] [6, 56] [6, 99] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 871 / 2048 = 0.42529296875
pruning-in-iteration extra time: 0.01707625389099121
Tensors transferred: pre=3.1250M lA=0.9048M alpha=2.6172M beta=0.5254M
This batch time : update_bounds func: 0.9681	 prepare: 0.3794	 bound: 0.4501	 transfer: 0.0100	 finalize: 0.1249
Accumulated time: update_bounds func: 75.8222	 prepare: 25.2682	 bound: 40.0796	 transfer: 0.7330	 finalize: 9.1082
batch bounding time:  0.9683091640472412
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4790
Total time: 1.7294	 pickout: 0.0110	 decision: 0.3086	 get_bound: 0.9684	 add_domain: 0.4415
Accumulated time:	 pickout: 0.5342	 decision: 8.1270	 get_bound: 33.4740	 add_domain: 14.4676
Current (lb-rhs): -3.7148542404174805
27977 domains visited
Cumulative time: 57.11706852912903

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 32] [0, 60] [5, 79] [5, 4] [6, 27] [0, 60] [6, 30] [5, 1] [6, 51] [0, 0] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 938 / 2048 = 0.4580078125
pruning-in-iteration extra time: 0.01698923110961914
Tensors transferred: pre=3.1250M lA=0.8507M alpha=2.6172M beta=0.5273M
This batch time : update_bounds func: 0.9628	 prepare: 0.3760	 bound: 0.4476	 transfer: 0.0106	 finalize: 0.1246/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/batch_branch_and_bound.py:420: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7), np.inf

Accumulated time: update_bounds func: 76.7850	 prepare: 25.6441	 bound: 40.5272	 transfer: 0.7436	 finalize: 9.2328
batch bounding time:  0.9630191326141357
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4876
Total time: 1.7078	 pickout: 0.0107	 decision: 0.3151	 get_bound: 0.9631	 add_domain: 0.4189
Accumulated time:	 pickout: 0.5449	 decision: 8.4421	 get_bound: 34.4371	 add_domain: 14.8864
Current (lb-rhs): -3.7148542404174805
28915 domains visited
Cumulative time: 58.841012954711914

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 32] [6, 51] [0, 60] [6, 99] [0, 60] [6, 51] [5, 1] [6, 56] [0, 75] [6, 67] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1003 / 2048 = 0.48974609375
pruning-in-iteration extra time: 0.017032146453857422
Tensors transferred: pre=3.1250M lA=0.8041M alpha=2.6172M beta=0.5254M
This batch time : update_bounds func: 0.9614	 prepare: 0.3748	 bound: 0.4485	 transfer: 0.0100	 finalize: 0.1247
Accumulated time: update_bounds func: 77.7464	 prepare: 26.0189	 bound: 40.9756	 transfer: 0.7536	 finalize: 9.3575
batch bounding time:  0.9615874290466309
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4897
Total time: 1.6752	 pickout: 0.0095	 decision: 0.3081	 get_bound: 0.9617	 add_domain: 0.3959
Accumulated time:	 pickout: 0.5544	 decision: 8.7502	 get_bound: 35.3988	 add_domain: 15.2824
Current (lb-rhs): -3.7148542404174805
29918 domains visited
Cumulative time: 60.53290796279907

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [0, 0] [6, 29] [1, 41] [6, 6] [0, 0] [4, 40] [6, 41] [6, 43] [7, 70] [6, 26] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1106 / 2048 = 0.5400390625
pruning-in-iteration extra time: 0.017066001892089844
Tensors transferred: pre=3.1250M lA=0.7240M alpha=2.6172M beta=0.5352M
This batch time : update_bounds func: 0.9689	 prepare: 0.3788	 bound: 0.4492	 transfer: 0.0100	 finalize: 0.1269
Accumulated time: update_bounds func: 78.7153	 prepare: 26.3978	 bound: 41.4249	 transfer: 0.7636	 finalize: 9.4844
batch bounding time:  0.9690542221069336
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4815
Total time: 1.6548	 pickout: 0.0109	 decision: 0.3103	 get_bound: 0.9691	 add_domain: 0.3645
Accumulated time:	 pickout: 0.5653	 decision: 9.0606	 get_bound: 36.3679	 add_domain: 15.6468
Current (lb-rhs): -3.7148542404174805
31024 domains visited
Cumulative time: 62.20481729507446

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [6, 32] [5, 79] [6, 99] [6, 30] [6, 32] [6, 32] [6, 19] [6, 0] [5, 26] [6, 58] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1142 / 2048 = 0.5576171875
pruning-in-iteration extra time: 0.01697826385498047
Tensors transferred: pre=3.1250M lA=0.6981M alpha=2.6172M beta=0.5391M
This batch time : update_bounds func: 0.9673	 prepare: 0.3801	 bound: 0.4483	 transfer: 0.0098	 finalize: 0.1251
Accumulated time: update_bounds func: 79.6826	 prepare: 26.7778	 bound: 41.8732	 transfer: 0.7734	 finalize: 9.6094
batch bounding time:  0.9674320220947266
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4697
Total time: 1.6312	 pickout: 0.1159	 decision: 0.1973	 get_bound: 0.9675	 add_domain: 0.3504
Accumulated time:	 pickout: 0.6812	 decision: 9.2578	 get_bound: 37.3354	 add_domain: 15.9973
Current (lb-rhs): -3.7148542404174805
32166 domains visited
Cumulative time: 63.85335659980774

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1024, 100]) pre split depth:  1
batch:  torch.Size([1024, 100]) post split depth:  1
splitting decisions: 
split level 0: [7, 66] [6, 31] [0, 60] [6, 68] [6, 56] [6, 99] [6, 32] [6, 43] [4, 74] [5, 11] 
regular batch size: 2*1024, diving batch size 1*0
(2048, 1, 28, 28) torch.Size([2048, 1, 10]) torch.Size([2048, 1])
pruning_in_iteration open status: True
ratio of positive domain = 1136 / 2048 = 0.5546875
pruning-in-iteration extra time: 0.01706862449645996
Tensors transferred: pre=3.1250M lA=0.7011M alpha=2.6172M beta=0.5430M
This batch time : update_bounds func: 0.9654	 prepare: 0.3773	 bound: 0.4488	 transfer: 0.0093	 finalize: 0.1265
Accumulated time: update_bounds func: 80.6480	 prepare: 27.1552	 bound: 42.3220	 transfer: 0.7826	 finalize: 9.7359
batch bounding time:  0.9656219482421875
Current worst splitting domains lb-rhs (depth):
-3.71485 (11), -3.69779 (11), -3.66810 (11), -3.64186 (11), -3.54693 (11), -3.51215 (11), -3.35826 (11), -3.33103 (12), -3.28015 (11), -3.22324 (11), -3.10152 (11), -3.05320 (12), -3.01544 (11), -3.01207 (11), -3.00128 (11), -3.00063 (11), -2.99055 (11), -2.95050 (11), -2.95015 (11), -2.94803 (11), 
length of domains: 4585
Total time: 1.6375	 pickout: 0.0097	 decision: 0.3088	 get_bound: 0.9657	 add_domain: 0.3533
Accumulated time:	 pickout: 0.6909	 decision: 9.5666	 get_bound: 38.3011	 add_domain: 16.3506
Current (lb-rhs): -3.7148542404174805
33302 domains visited
Time out!!!!!!!!
Result: unknown in 900.6514 seconds
############# Summary #############
Final verified acc: 0.0% [total 1 examples]
Total verification count: 1 , total verified safe: 0 , verified unsafe: 0 , timeout: 1
mean time (bab) [total:1]: 131.86534905433655
mean time [1] 900.6514375209808 max time 900.6514375209808
unknown (total 1): [0]
