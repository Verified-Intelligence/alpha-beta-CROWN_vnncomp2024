Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: null
  results_file: null
  root_path: ''
model:
  path: cifar_cnn_a_mix.model
  cache_onnx_conversion: false
  onnx_quirks: null
  name: cnn_4layer
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 7
  end: 8
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: 0.00784313725
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 4096
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 11:55:58 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
saving results to Verified_ret_[cnn_4layer]_start=7_end=8_iter=20_b=4096_timeout=200_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False_multiclass=allclass_domain.npy

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
model output: tensor([[-36.28493118, -37.40874481, -32.68411636, -32.73721313, -30.50329971,
         -33.81354523, -28.70816231, -34.64643860, -36.72904205, -37.17165756]],
       device='cuda:0')
pgd prediction: tensor([[[-35.77975845, -37.28468704, -32.45534897, -32.52340698, -29.84617996,
          -33.46652222, -29.20465660, -33.77893829, -36.37488556, -36.87686539],
         [-35.77975845, -37.28468704, -32.45534897, -32.52340698, -29.84617996,
          -33.46652222, -29.20465660, -33.77893829, -36.37488556, -36.87686539]]],
       device='cuda:0')
pgd attack margin tensor([[[6.57510185, 8.08003044, 3.25069237, 3.31875038, 0.64152336,
          4.26186562, 4.57428169, 7.17022896, 7.67220879]]], device='cuda:0')
number of violation:  0
Attack finished in 1.2861 seconds.
pgd attack failed
Model prediction is: tensor([[-36.28493118, -37.40874481, -32.68411636, -32.73721313, -30.50329971,
         -33.81354523, -28.70816231, -34.64643860, -36.72904205, -37.17165756]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 (torch.Size([1, 16, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 371 total_size 2048 output_shape (32, 8, 8)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [371]; unstable size 371; total size 2048 (torch.Size([1, 32, 8, 8]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /22 using sparse-features alpha with shape [50]; unstable size 50; total size 100 (torch.Size([1, 100]))
layer /22 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85858965,  3.40287113, -0.23342943,  0.88925052, -1.56433153,
          1.30171204,  1.02152085,  3.18243694,  2.59064794]], device='cuda:0') None
best_l after optimization: 15.7557373046875 with beta sum per layer: []
alpha/beta optimization time: 5.729117393493652
initial alpha-CROWN bounds: tensor([[ 3.11516333,  3.71506071,  0.02377272,  1.07765460, -1.35716152,
          1.56053066,  1.30445480,  3.45267510,  2.86358738]], device='cuda:0')
Worst class: (+ rhs) -1.357161521911621
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 16, 16]), torch.Size([1, 9, 32, 8, 8]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 189.15273594856262
##### [0] Spec matrix: [[[-1.  0.  0.  0.  0.  0.  1.  0.  0.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[3.11516333]], device='cuda:0').

Properties batch 1, size 1
Remaining timeout: 189.07873821258545
##### [0] Spec matrix: [[[ 0. -1.  0.  0.  0.  0.  1.  0.  0.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[3.71506071]], device='cuda:0').

Properties batch 2, size 1
Remaining timeout: 189.03766107559204
##### [0] Spec matrix: [[[ 0.  0. -1.  0.  0.  0.  1.  0.  0.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[0.02377272]], device='cuda:0').

Properties batch 3, size 1
Remaining timeout: 188.99680471420288
##### [0] Spec matrix: [[[ 0.  0.  0. -1.  0.  0.  1.  0.  0.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[1.07765460]], device='cuda:0').

Properties batch 4, size 1
Remaining timeout: 188.95463466644287
##### [0] Spec matrix: [[[ 0.  0.  0.  0. -1.  0.  1.  0.  0.  0.]]], thresh: [0] ######
Remaining spec index [0] with bounds tensor([[-1.35716152]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.28493118, -37.40874481, -32.68411636, -32.73721313, -30.50329971,
        -33.81354523, -28.70816231, -34.64643860, -36.72904205, -37.17165756],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.35716152]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
layer 0 size torch.Size([4096]) unstable 685
layer 1 size torch.Size([2048]) unstable 367
layer 2 size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1101
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 16, 16, 16]) pre split depth:  8
batch:  torch.Size([1, 16, 16, 16]) post split depth:  8
splitting decisions: 
split level 0: [2, 88] 
split level 1: [2, 38] 
split level 2: [2, 58] 
split level 3: [2, 8] 
split level 4: [2, 49] 
split level 5: [2, 40] 
split level 6: [2, 95] 
split level 7: [2, 62] 
regular batch size: 2*128, diving batch size 1*0
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 230 / 256 = 0.8984375
pruning-in-iteration extra time: 0.012926816940307617
Tensors transferred: pre=3.0488M lA=0.1548M alpha=0.5400M beta=0.0020M
This batch time : update_bounds func: 0.6808	 prepare: 0.0151	 bound: 0.6528	 transfer: 0.0078	 finalize: 0.0045
Accumulated time: update_bounds func: 0.6808	 prepare: 0.0151	 bound: 0.6528	 transfer: 0.0078	 finalize: 0.0045
batch bounding time:  0.680894136428833
Current worst splitting domains lb-rhs (depth):
-0.32081 (8), -0.32063 (8), -0.31189 (8), -0.30740 (8), -0.30502 (8), -0.30270 (8), -0.29806 (8), -0.28969 (8), -0.22167 (8), -0.21980 (8), -0.21097 (8), -0.20769 (8), -0.20683 (8), -0.20541 (8), -0.19880 (8), -0.19819 (8), -0.14924 (8), -0.14284 (8), -0.13366 (8), -0.13174 (8), 
length of domains: 26
Total time: 1.1651	 pickout: 0.0011	 decision: 0.4481	 get_bound: 0.7110	 add_domain: 0.0050
Accumulated time:	 pickout: 0.0011	 decision: 0.4481	 get_bound: 0.7110	 add_domain: 0.0050
Current (lb-rhs): -0.32080960273742676
230 domains visited
Cumulative time: 1.2130541801452637

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([26, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([26, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] 
split level 1: [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] 
split level 2: [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] 
regular batch size: 2*104, diving batch size 1*0
(208, 3, 32, 32) torch.Size([208, 1, 10]) torch.Size([208, 1])
pruning_in_iteration open status: True
ratio of positive domain = 144 / 208 = 0.6923076923076923
pruning-in-iteration extra time: 0.015548229217529297
Tensors transferred: pre=2.4772M lA=0.3811M alpha=0.4388M beta=0.0022M
This batch time : update_bounds func: 0.2685	 prepare: 0.0144	 bound: 0.2458	 transfer: 0.0043	 finalize: 0.0037
Accumulated time: update_bounds func: 0.9493	 prepare: 0.0294	 bound: 0.8986	 transfer: 0.0121	 finalize: 0.0082
batch bounding time:  0.2685225009918213
Current worst splitting domains lb-rhs (depth):
-0.21119 (11), -0.20671 (11), -0.20098 (11), -0.19630 (11), -0.19228 (11), -0.19217 (11), -0.18378 (11), -0.17512 (11), -0.16235 (11), -0.15364 (11), -0.15162 (11), -0.15028 (11), -0.14604 (11), -0.14465 (11), -0.14212 (11), -0.13994 (11), -0.11993 (11), -0.10716 (11), -0.10676 (11), -0.10603 (11), 
length of domains: 64
Total time: 0.3241	 pickout: 0.0013	 decision: 0.0277	 get_bound: 0.2874	 add_domain: 0.0077
Accumulated time:	 pickout: 0.0024	 decision: 0.4758	 get_bound: 0.9984	 add_domain: 0.0127
Current (lb-rhs): -0.21119356155395508
374 domains visited
Cumulative time: 1.5377748012542725

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([64, 16, 16, 16]) pre split depth:  2
batch:  torch.Size([64, 16, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] 
split level 1: [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] 
regular batch size: 2*128, diving batch size 1*0
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 183 / 256 = 0.71484375
pruning-in-iteration extra time: 0.011010169982910156
Tensors transferred: pre=3.0488M lA=0.4347M alpha=0.5400M beta=0.0034M
This batch time : update_bounds func: 0.2741	 prepare: 0.0181	 bound: 0.2449	 transfer: 0.0059	 finalize: 0.0048
Accumulated time: update_bounds func: 1.2234	 prepare: 0.0475	 bound: 1.1435	 transfer: 0.0180	 finalize: 0.0131
batch bounding time:  0.27414631843566895
Current worst splitting domains lb-rhs (depth):
-0.14950 (13), -0.14368 (13), -0.14291 (13), -0.14159 (13), -0.13880 (13), -0.13594 (13), -0.13371 (13), -0.13142 (13), -0.12866 (13), -0.12762 (13), -0.12706 (13), -0.12331 (13), -0.12142 (13), -0.11732 (13), -0.11205 (13), -0.10975 (13), -0.09985 (13), -0.09363 (13), -0.09160 (13), -0.09021 (13), 
length of domains: 73
Total time: 0.3326	 pickout: 0.0016	 decision: 0.0333	 get_bound: 0.2903	 add_domain: 0.0074
Accumulated time:	 pickout: 0.0039	 decision: 0.5091	 get_bound: 1.2887	 add_domain: 0.0200
Current (lb-rhs): -0.14949798583984375
557 domains visited
Cumulative time: 1.8712925910949707

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([73, 16, 16, 16]) pre split depth:  2
batch:  torch.Size([73, 16, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] 
split level 1: [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] 
regular batch size: 2*146, diving batch size 1*0
(292, 3, 32, 32) torch.Size([292, 1, 10]) torch.Size([292, 1])
pruning_in_iteration open status: True
ratio of positive domain = 236 / 292 = 0.8082191780821918
pruning-in-iteration extra time: 0.011190176010131836
Tensors transferred: pre=3.4776M lA=0.3335M alpha=0.6160M beta=0.0045M
This batch time : update_bounds func: 0.2735	 prepare: 0.0202	 bound: 0.2406	 transfer: 0.0068	 finalize: 0.0055
Accumulated time: update_bounds func: 1.4969	 prepare: 0.0677	 bound: 1.3840	 transfer: 0.0248	 finalize: 0.0185
batch bounding time:  0.27354979515075684
Current worst splitting domains lb-rhs (depth):
-0.10354 (15), -0.10316 (15), -0.10259 (15), -0.10064 (15), -0.09764 (15), -0.09585 (15)/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:584: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(preprocess_cifar(eps_temp, perturbation=True)).reshape(1,-1,1,1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/batch_branch_and_bound.py:420: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7), np.inf
, -0.09300 (15), -0.09169 (15), -0.08956 (15), -0.08933 (15), -0.08708 (15), -0.08680 (15), -0.08641 (15), -0.08575 (15), -0.08481 (15), -0.08424 (15), -0.08117 (15), -0.08073 (15), -0.07996 (15), -0.07911 (15), 
length of domains: 56
Total time: 0.3462	 pickout: 0.0016	 decision: 0.0361	 get_bound: 0.2921	 add_domain: 0.0164
Accumulated time:	 pickout: 0.0056	 decision: 0.5452	 get_bound: 1.5808	 add_domain: 0.0365
Current (lb-rhs): -0.10353827476501465
793 domains visited
Cumulative time: 2.218629837036133

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([56, 16, 16, 16]) pre split depth:  2
batch:  torch.Size([56, 16, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [1, 1701] [2, 15] [2, 60] [2, 60] [2, 60] [2, 15] [2, 60] [2, 15] [2, 60] [2, 15] 
split level 1: [2, 15] [2, 22] [2, 15] [2, 15] [2, 15] [2, 22] [2, 15] [2, 22] [2, 15] [2, 22] 
regular batch size: 2*112, diving batch size 1*0
(224, 3, 32, 32) torch.Size([224, 1, 10]) torch.Size([224, 1])
pruning_in_iteration open status: True
ratio of positive domain = 181 / 224 = 0.8080357142857143
pruning-in-iteration extra time: 0.011095523834228516
Tensors transferred: pre=2.6677M lA=0.2561M alpha=0.4725M beta=0.0041M
This batch time : update_bounds func: 0.2649	 prepare: 0.0164	 bound: 0.2372	 transfer: 0.0064	 finalize: 0.0046
Accumulated time: update_bounds func: 1.7617	 prepare: 0.0841	 bound: 1.6212	 transfer: 0.0311	 finalize: 0.0231
batch bounding time:  0.26494860649108887
Current worst splitting domains lb-rhs (depth):
-0.07224 (17), -0.07185 (17), -0.07128 (17), -0.06913 (17), -0.06084 (17), -0.05931 (17), -0.05822 (17), -0.05760 (17), -0.05584 (17), -0.05416 (17), -0.05412 (17), -0.05240 (17), -0.05123 (17), -0.05063 (17), -0.05060 (17), -0.05021 (17), -0.04947 (17), -0.04788 (17), -0.04631 (17), -0.04563 (17), 
length of domains: 43
Total time: 0.3201	 pickout: 0.0015	 decision: 0.0322	 get_bound: 0.2795	 add_domain: 0.0069
Accumulated time:	 pickout: 0.0071	 decision: 0.5774	 get_bound: 1.8604	 add_domain: 0.0433
Current (lb-rhs): -0.07224202156066895
974 domains visited
Cumulative time: 2.5397024154663086

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([43, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([43, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [1, 1701] 
split level 1: [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] 
split level 2: [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] 
regular batch size: 2*172, diving batch size 1*0
(344, 3, 32, 32) torch.Size([344, 1, 10]) torch.Size([344, 1])
pruning_in_iteration open status: True
ratio of positive domain = 312 / 344 = 0.9069767441860466
pruning-in-iteration extra time: 0.01098489761352539
Tensors transferred: pre=4.0969M lA=0.1906M alpha=0.7257M beta=0.0069M
This batch time : update_bounds func: 0.2685	 prepare: 0.0235	 bound: 0.2295	 transfer: 0.0085	 finalize: 0.0065
Accumulated time: update_bounds func: 2.0303	 prepare: 0.1076	 bound: 1.8507	 transfer: 0.0396	 finalize: 0.0296
batch bounding time:  0.26860737800598145
Current worst splitting domains lb-rhs (depth):
-0.03050 (20), -0.03042 (20), -0.02873 (20), -0.02856 (20), -0.02560 (20), -0.02522 (20), -0.02417 (20), -0.02307 (20), -0.02152 (20), -0.01981 (20), -0.01829 (20), -0.01789 (20), -0.01514 (20), -0.01409 (20), -0.01300 (20), -0.01168 (20), -0.01027 (20), -0.00860 (20), -0.00811 (20), -0.00758 (20), 
length of domains: 32
Total time: 0.3434	 pickout: 0.0015	 decision: 0.0329	 get_bound: 0.3027	 add_domain: 0.0064
Accumulated time:	 pickout: 0.0086	 decision: 0.6102	 get_bound: 2.1630	 add_domain: 0.0497
Current (lb-rhs): -0.030501604080200195
1286 domains visited
Cumulative time: 2.884201765060425

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([32, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([32, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 46] [1, 1109] [1, 1701] [1, 1109] [1, 1701] [2, 35] [1, 1701] [1, 1701] [2, 46] [1, 1109] 
split level 1: [2, 35] [1, 1130] [1, 1109] [1, 1130] [1, 1109] [2, 31] [2, 35] [2, 35] [2, 35] [1, 1130] 
split level 2: [2, 31] [2, 35] [2, 35] [2, 35] [2, 35] [1, 1492] [1, 1492] [1, 1492] [2, 31] [2, 35] 
regular batch size: 2*128, diving batch size 1*0
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.00010967254638671875
Tensors transferred: pre=3.0488M lA=1.5244M alpha=0.5400M beta=0.0059M
This batch time : update_bounds func: 0.0363	 prepare: 0.0184	 bound: 0.0071	 transfer: 0.0055	 finalize: 0.0048
Accumulated time: update_bounds func: 2.0666	 prepare: 0.1260	 bound: 1.8579	 transfer: 0.0451	 finalize: 0.0344
batch bounding time:  0.03631234169006348
length of domains: 0
Total time: 0.0946	 pickout: 0.0013	 decision: 0.0296	 get_bound: 0.0625	 add_domain: 0.0011
Accumulated time:	 pickout: 0.0099	 decision: 0.6398	 get_bound: 2.2255	 add_domain: 0.0509
No domains left, verification finished!
1542 domains visited
Cumulative time: 2.979689598083496


Properties batch 5, size 1
Remaining timeout: 185.86854648590088
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0. -1.  1.  0.  0.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[1.56053066]], device='cuda:0').

Properties batch 6, size 1
Remaining timeout: 185.8080599308014
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  1. -1.  0.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[1.30445480]], device='cuda:0').

Properties batch 7, size 1
Remaining timeout: 185.76546573638916
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  1.  0. -1.  0.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[3.45267510]], device='cuda:0').

Properties batch 8, size 1
Remaining timeout: 185.72223663330078
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  1.  0.  0. -1.]]], thresh: [0] ######
Init opt crown verified for spec index [0] with bound tensor([[2.86358738]], device='cuda:0').
Result: safe in 14.3198 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time (bab) [total:1]: 3.4715425968170166
mean time [1] 14.319811820983887 max time 14.319811820983887
safe (total 1): [0]
