Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cnn_4layer
  path: cifar_cnn_a_mix.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 7
  end: 8
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 4096
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 00:10:41 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to Verified_ret_[cnn_4layer]_start=7_end=8_iter=20_b=4096_timeout=200_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.28493118, -37.40874481, -32.68411636, -32.73721313, -30.50329971,
         -33.81354523, -28.70816231, -34.64643860, -36.72904205, -37.17165756]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.77975845, -37.28468704, -32.45534897, -32.52340698, -29.84617996,
          -33.46652222, -29.20465660, -33.77893829, -36.37488556, -36.87686539],
         [-35.77975845, -37.28468704, -32.45534897, -32.52340698, -29.84617996,
          -33.46652222, -29.20465660, -33.77893829, -36.37488556, -36.87686539]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[6.57510185, 8.08003044, 3.25069237, 3.31875038, 0.64152336,
          4.26186562, 4.57428169, 7.17022896, 7.67220879]]], device='cuda:0')
number of violation:  0
Attack finished in 1.2924 seconds.
PGD attack failed
Model prediction is: tensor([[-36.28493118, -37.40874481, -32.68411636, -32.73721313, -30.50329971,
         -33.81354523, -28.70816231, -34.64643860, -36.72904205, -37.17165756]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 (torch.Size([1, 16, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 371 total_size 2048 output_shape (32, 8, 8)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [371]; unstable size 371; total size 2048 (torch.Size([1, 32, 8, 8]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /22 using sparse-features alpha with shape [50]; unstable size 50; total size 100 (torch.Size([1, 100]))
layer /22 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85859036,  3.40287018, -0.23342943,  0.88925171, -1.56433105,
          1.30171275,  1.02152038,  3.18243742,  2.59064865]], device='cuda:0') None
best_l after optimization: 15.755739212036133 with beta sum per layer: []
alpha/beta optimization time: 5.599622488021851
initial alpha-CROWN bounds: tensor([[ 3.11516285,  3.71506214,  0.02377224,  1.07765412, -1.35716057,
          1.56053221,  1.30445480,  3.45267296,  2.86358881]], device='cuda:0')
Worst class: (+ rhs) -1.3571605682373047
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 16, 16]), torch.Size([1, 9, 32, 8, 8]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 189.3920226097107
##### Instance 0 first 10 spec matrices: [[[-1.  0.  0.  0.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 3.1151628494262695.

Properties batch 1, size 1
Remaining timeout: 189.32125854492188
##### Instance 0 first 10 spec matrices: [[[ 0. -1.  0.  0.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 3.715062141418457.

Properties batch 2, size 1
Remaining timeout: 189.2817530632019
##### Instance 0 first 10 spec matrices: [[[ 0.  0. -1.  0.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 0.023772239685058594.

Properties batch 3, size 1
Remaining timeout: 189.24226188659668
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0. -1.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.0776541233062744.

Properties batch 4, size 1
Remaining timeout: 189.20302987098694
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0. -1.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-1.35716057]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.28493118, -37.40874481, -32.68411636, -32.73721313, -30.50329971,
        -33.81354523, -28.70816231, -34.64643860, -36.72904205, -37.17165756],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.35716057]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
layer 0 name BoundConv(name="/input") size torch.Size([4096]) unstable 685
layer 1 name BoundConv(name="/input.8") size torch.Size([2048]) unstable 367
layer 2 name BoundLinear(name="/input.12") size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1101
-----------------

batch:  torch.Size([1, 16, 16, 16]) pre split depth:  8
batch:  torch.Size([1, 16, 16, 16]) post split depth:  8
splitting decisions: 
split level 0: [2, 88] 
split level 1: [2, 38] 
split level 2: [2, 58] 
split level 3: [2, 8] 
split level 4: [2, 49] 
split level 5: [2, 40] 
split level 6: [2, 95] 
split level 7: [2, 62] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 230 / 256 = 0.8984375
pruning-in-iteration extra time: 0.012364864349365234
Tensors transferred: pre=3.0488M lA=0.1548M alpha=0.5400M beta=0.0020M
This batch time : update_bounds func: 0.6796	 prepare: 0.0164	 bound: 0.6482	 transfer: 0.0096	 finalize: 0.0049
Accumulated time: update_bounds func: 0.6796	 prepare: 0.0164	 bound: 0.6482	 transfer: 0.0096	 finalize: 0.0049
batch bounding time:  0.6796145439147949
Current worst splitting domains lb-rhs (depth):
-0.32083 (8), -0.32063 (8), -0.31187 (8), -0.30738 (8), -0.30503 (8), -0.30271 (8), -0.29807 (8), -0.28970 (8), -0.22166 (8), -0.21976 (8), -0.21094 (8), -0.20765 (8), -0.20682 (8), -0.20538 (8), -0.19878 (8), -0.19818 (8), -0.14923 (8), -0.14283 (8), -0.13374 (8), -0.13175 (8), 
length of domains: 26
Total time: 1.1552	 pickout: 0.0009	 decision: 0.4476	 get_bound: 0.7037	 add_domain: 0.0030
Accumulated time:	 pickout: 0.0009	 decision: 0.4476	 get_bound: 0.7037	 add_domain: 0.0030
Current (lb-rhs): -0.3208327293395996
230 domains visited
Cumulative time: 1.2053930759429932

batch:  torch.Size([26, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([26, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] [2, 67] 
split level 1: [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] [2, 29] 
split level 2: [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] [2, 16] 
(208, 3, 32, 32) torch.Size([208, 1, 10]) torch.Size([208, 1])
pruning_in_iteration open status: True
ratio of positive domain = 144 / 208 = 0.6923076923076923
pruning-in-iteration extra time: 0.012494087219238281
Tensors transferred: pre=2.4772M lA=0.3811M alpha=0.4388M beta=0.0022M
This batch time : update_bounds func: 0.2655	 prepare: 0.0147	 bound: 0.2436	 transfer: 0.0029	 finalize: 0.0040
Accumulated time: update_bounds func: 0.9451	 prepare: 0.0311	 bound: 0.8918	 transfer: 0.0125	 finalize: 0.0088
batch bounding time:  0.26556396484375
Current worst splitting domains lb-rhs (depth):
-0.21118 (11), -0.20672 (11), -0.20098 (11), -0.19631 (11), -0.19229 (11), -0.19219 (11), -0.18380 (11), -0.17513 (11), -0.16235 (11), -0.15368 (11), -0.15167 (11), -0.15028 (11), -0.14606 (11), -0.14464 (11), -0.14206 (11), -0.13992 (11), -0.11993 (11), -0.10716 (11), -0.10675 (11), -0.10602 (11), 
length of domains: 64
Total time: 0.3123	 pickout: 0.0009	 decision: 0.0274	 get_bound: 0.2807	 add_domain: 0.0033
Accumulated time:	 pickout: 0.0018	 decision: 0.4751	 get_bound: 0.9844	 add_domain: 0.0063
Current (lb-rhs): -0.2111828327178955
374 domains visited
Cumulative time: 1.5181312561035156

batch:  torch.Size([64, 16, 16, 16]) pre split depth:  2
batch:  torch.Size([64, 16, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] [2, 82] 
split level 1: [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 183 / 256 = 0.71484375
pruning-in-iteration extra time: 0.011736631393432617
Tensors transferred: pre=3.0488M lA=0.4347M alpha=0.5400M beta=0.0034M
This batch time : update_bounds func: 0.2741	 prepare: 0.0189	 bound: 0.2463	 transfer: 0.0034	 finalize: 0.0051
Accumulated time: update_bounds func: 1.2192	 prepare: 0.0499	 bound: 1.1381	 transfer: 0.0159	 finalize: 0.0140
batch bounding time:  0.2741546630859375
Current worst splitting domains lb-rhs (depth):
-0.14947 (13), -0.14370 (13), -0.14296 (13), -0.14157 (13), -0.13880 (13), -0.13593 (13), -0.13375 (13), -0.13142 (13), -0.12867 (13), -0.12762 (13), -0.12705 (13), -0.12332 (13), -0.12142 (13), -0.11733 (13), -0.11204 (13), -0.10974 (13), -0.09977 (13), -0.09349 (13), -0.09163 (13), -0.09039 (13), 
length of domains: 73
Total time: 0.3246	 pickout: 0.0010	 decision: 0.0334	 get_bound: 0.2869	 add_domain: 0.0033
Accumulated time:	 pickout: 0.0028	 decision: 0.5084	 get_bound: 1.2713	 add_domain: 0.0096
Current (lb-rhs): -0.14947247505187988
557 domains visited
Cumulative time: 1.8431999683380127

batch:  torch.Size([73, 16, 16, 16]) pre split depth:  2
batch:  torch.Size([73, 16, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] [2, 94] 
split level 1: [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] [2, 60] 
(292, 3, 32, 32) torch.Size([292, 1, 10]) torch.Size([292, 1])
pruning_in_iteration open status: True
ratio of positive domain = 236 / 292 = 0.8082191780821918
pruning-in-iteration extra time: 0.011792659759521484
Tensors transferred: pre=3.4776M lA=0.3335M alpha=0.6160M beta=0.0045M
This batch time : update_bounds func: 0.2802	 prepare: 0.0213	 bound: 0.2471	 transfer: 0.0055	 finalize: 0.0058
Accumulated time: update_bounds func: 1.4994	 prepare: 0.0712	 bound: 1.3852	 transfer: 0.0214	 finalize: 0.0198
batch bounding time:  0.2802445888519287
Current worst splitting domains lb-rhs (depth):
-0.10350 (15), -0.10316 (15), -0.10257 (15), -0.10064 (15), -0.09770 (15)/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:528: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(preprocess_cifar(eps_temp, perturbation=True)).reshape(1,-1,1,1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/branching_domains.py:970: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7)
, -0.09594 (15), -0.09300 (15), -0.09170 (15), -0.08957 (15), -0.08932 (15), -0.08699 (15), -0.08681 (15), -0.08640 (15), -0.08575 (15), -0.08480 (15), -0.08420 (15), -0.08117 (15), -0.08073 (15), -0.07994 (15), -0.07912 (15), 
length of domains: 56
Total time: 0.3350	 pickout: 0.0010	 decision: 0.0358	 get_bound: 0.2948	 add_domain: 0.0034
Accumulated time:	 pickout: 0.0038	 decision: 0.5442	 get_bound: 1.5661	 add_domain: 0.0130
Current (lb-rhs): -0.1035006046295166
793 domains visited
Cumulative time: 2.179032564163208

batch:  torch.Size([56, 16, 16, 16]) pre split depth:  2
batch:  torch.Size([56, 16, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [1, 1701] [2, 15] [2, 60] [2, 60] [2, 60] [2, 15] [2, 60] [2, 15] [2, 60] [2, 15] 
split level 1: [2, 15] [2, 22] [2, 15] [2, 15] [2, 15] [2, 22] [2, 15] [2, 22] [2, 15] [2, 22] 
(224, 3, 32, 32) torch.Size([224, 1, 10]) torch.Size([224, 1])
pruning_in_iteration open status: True
ratio of positive domain = 181 / 224 = 0.8080357142857143
pruning-in-iteration extra time: 0.012373685836791992
Tensors transferred: pre=2.6677M lA=0.2561M alpha=0.4725M beta=0.0041M
This batch time : update_bounds func: 0.2924	 prepare: 0.0170	 bound: 0.2672	 transfer: 0.0030	 finalize: 0.0048
Accumulated time: update_bounds func: 1.7918	 prepare: 0.0882	 bound: 1.6524	 transfer: 0.0244	 finalize: 0.0246
batch bounding time:  0.2924931049346924
Current worst splitting domains lb-rhs (depth):
-0.07223 (17), -0.07185 (17), -0.07128 (17), -0.06910 (17), -0.06094 (17), -0.05934 (17), -0.05822 (17), -0.05762 (17), -0.05584 (17), -0.05416 (17), -0.05412 (17), -0.05239 (17), -0.05124 (17), -0.05063 (17), -0.05062 (17), -0.05021 (17), -0.04948 (17), -0.04787 (17), -0.04629 (17), -0.04562 (17), 
length of domains: 43
Total time: 0.3395	 pickout: 0.0010	 decision: 0.0319	 get_bound: 0.3037	 add_domain: 0.0030
Accumulated time:	 pickout: 0.0048	 decision: 0.5761	 get_bound: 1.8697	 add_domain: 0.0160
Current (lb-rhs): -0.07223391532897949
974 domains visited
Cumulative time: 2.5190603733062744

batch:  torch.Size([43, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([43, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] [2, 46] 
split level 1: [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] [2, 22] 
split level 2: [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] [1, 979] 
(344, 3, 32, 32) torch.Size([344, 1, 10]) torch.Size([344, 1])
pruning_in_iteration open status: True
ratio of positive domain = 312 / 344 = 0.9069767441860466
pruning-in-iteration extra time: 0.011908769607543945
Tensors transferred: pre=4.0969M lA=0.1906M alpha=0.7257M beta=0.0069M
This batch time : update_bounds func: 0.2977	 prepare: 0.0248	 bound: 0.2595	 transfer: 0.0058	 finalize: 0.0069
Accumulated time: update_bounds func: 2.0895	 prepare: 0.1130	 bound: 1.9120	 transfer: 0.0302	 finalize: 0.0315
batch bounding time:  0.29773712158203125
Current worst splitting domains lb-rhs (depth):
-0.03050 (20), -0.03043 (20), -0.02877 (20), -0.02856 (20), -0.02545 (20), -0.02503 (20), -0.02411 (20), -0.02314 (20), -0.02152 (20), -0.01981 (20), -0.01829 (20), -0.01790 (20), -0.01513 (20), -0.01413 (20), -0.01310 (20), -0.01169 (20), -0.01026 (20), -0.00867 (20), -0.00811 (20), -0.00758 (20), 
length of domains: 32
Total time: 0.3598	 pickout: 0.0009	 decision: 0.0332	 get_bound: 0.3224	 add_domain: 0.0033
Accumulated time:	 pickout: 0.0057	 decision: 0.6093	 get_bound: 2.1921	 add_domain: 0.0193
Current (lb-rhs): -0.03050065040588379
1286 domains visited
Cumulative time: 2.8797600269317627

batch:  torch.Size([32, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([32, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 46] [1, 1109] [1, 1701] [1, 1109] [1, 1701] [2, 35] [1, 1701] [1, 1701] [2, 46] [1, 1109] 
split level 1: [2, 35] [1, 1130] [1, 1109] [1, 1130] [1, 1109] [2, 31] [2, 35] [2, 35] [2, 35] [1, 1130] 
split level 2: [2, 31] [2, 35] [2, 35] [2, 35] [2, 35] [1, 1492] [1, 1492] [1, 1492] [2, 31] [2, 35] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.00010609626770019531
Tensors transferred: pre=3.0488M lA=1.5244M alpha=0.5400M beta=0.0059M
This batch time : update_bounds func: 0.0364	 prepare: 0.0200	 bound: 0.0072	 transfer: 0.0035	 finalize: 0.0052
Accumulated time: update_bounds func: 2.1259	 prepare: 0.1330	 bound: 1.9192	 transfer: 0.0337	 finalize: 0.0367
batch bounding time:  0.03645014762878418
length of domains: 0
Total time: 0.0876	 pickout: 0.0012	 decision: 0.0301	 get_bound: 0.0552	 add_domain: 0.0012
Accumulated time:	 pickout: 0.0069	 decision: 0.6393	 get_bound: 2.2473	 add_domain: 0.0204
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1542 domains visited
Cumulative time: 2.9683828353881836


Properties batch 5, size 1
Remaining timeout: 186.12998461723328
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0. -1.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.5605322122573853.

Properties batch 6, size 1
Remaining timeout: 186.07141733169556
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0.  0.  1. -1.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.3044548034667969.

Properties batch 7, size 1
Remaining timeout: 186.02791666984558
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0.  0.  1.  0. -1.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 3.4526729583740234.

Properties batch 8, size 1
Remaining timeout: 185.98480677604675
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0.  0.  1.  0.  0. -1.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.863588809967041.
Result: safe in 14.0598 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 14.059677194213164, max time: 14.059817790985107
mean time for verified SAFE instances (total 1): 14.059817790985107, max time: 14.059817790985107
safe (total 1), index: [0]
