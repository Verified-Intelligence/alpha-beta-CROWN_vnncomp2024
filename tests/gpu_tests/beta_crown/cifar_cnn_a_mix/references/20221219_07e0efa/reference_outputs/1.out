Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
model:
  name: cnn_4layer
  path: cifar_cnn_a_mix.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
data:
  start: 18
  end: 19
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 4096
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    _eran_cuts: null
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sort_domain_interval: -1
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 50
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  cex_path: ./test_cex.txt
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  lp_test: null

Experiments at Thu Dec 22 00:10:57 2022 on diablo.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten()
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to Verified_ret_[cnn_4layer]_start=18_end=19_iter=20_b=4096_timeout=200_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before_cplex_cuts=False_multiclass=allclass_domain.npy.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.12141800, -44.19668961, -34.08209610, -36.71352768, -34.07798386,
         -36.54197311, -31.82049751, -38.26198959, -42.62282562, -43.62261200]],
       device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.82672119, -44.15830994, -34.05252838, -36.58362579, -33.34435272,
          -36.39153290, -32.45046616, -37.67516708, -42.48369598, -43.50887299],
         [-39.82672119, -44.15830994, -34.05252838, -36.58362579, -33.34435272,
          -36.39153290, -32.45046616, -37.67516708, -42.48369598, -43.50887299]]],
       device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[ 7.37625504, 11.70784378,  1.60206223,  4.13315964,  0.89388657,
           3.94106674,  5.22470093, 10.03322983, 11.05840683]]],
       device='cuda:0')
number of violation:  0
Attack finished in 1.2581 seconds.
PGD attack failed
Model prediction is: tensor([[-40.12141800, -44.19668961, -34.08209610, -36.71352768, -34.07798386,
         -36.54197311, -31.82049751, -38.26198959, -42.62282562, -43.62261200]],
       device='cuda:0')
layer /input.4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 (torch.Size([1, 16, 16, 16]))
layer /input.4 start_node /input.8 using sparse-spec alpha with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input.4 start_node /input.12 using sparse-spec alpha with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 (torch.Size([1, 32, 8, 8]))
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /12 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
layer /22 using sparse-features alpha with shape [46]; unstable size 46; total size 100 (torch.Size([1, 100]))
layer /22 start_node /23 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.88499975,  7.10897160, -1.46649456,  1.92010188, -1.19054365,
          0.98264456,  1.80730081,  6.63542938,  6.82364416]], device='cuda:0') None
best_l after optimization: 28.40275001525879 with beta sum per layer: []
alpha/beta optimization time: 5.422281265258789
initial alpha-CROWN bounds: tensor([[ 4.13616371,  7.34356594, -1.23390865,  2.08685112, -1.01583290,
          1.18213439,  2.06693459,  6.82820129,  7.00863886]], device='cuda:0')
Worst class: (+ rhs) -1.2339086532592773
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 16, 16, 16]), torch.Size([1, 9, 32, 8, 8]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 189.69616961479187
##### Instance 0 first 10 spec matrices: [[[-1.  0.  0.  0.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 4.136163711547852.

Properties batch 1, size 1
Remaining timeout: 189.617023229599
##### Instance 0 first 10 spec matrices: [[[ 0. -1.  0.  0.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 7.343565940856934.

Properties batch 2, size 1
Remaining timeout: 189.57509636878967
##### Instance 0 first 10 spec matrices: [[[ 0.  0. -1.  0.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-1.23390865]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.12141800, -44.19668961, -34.08209610, -36.71352768, -34.07798386,
        -36.54197311, -31.82049751, -38.26198959, -42.62282562, -43.62261200],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.23390865]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
layer 0 name BoundConv(name="/input") size torch.Size([4096]) unstable 580
layer 1 name BoundConv(name="/input.8") size torch.Size([2048]) unstable 359
layer 2 name BoundLinear(name="/input.12") size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 984
-----------------

batch:  torch.Size([1, 16, 16, 16]) pre split depth:  8
batch:  torch.Size([1, 16, 16, 16]) post split depth:  8
splitting decisions: 
split level 0: [2, 66] 
split level 1: [2, 28] 
split level 2: [2, 61] 
split level 3: [2, 71] 
split level 4: [2, 8] 
split level 5: [2, 7] 
split level 6: [2, 83] 
split level 7: [2, 46] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 224 / 256 = 0.875
pruning-in-iteration extra time: 0.012850046157836914
Tensors transferred: pre=3.0488M lA=0.1906M alpha=0.4829M beta=0.0020M
This batch time : update_bounds func: 0.6507	 prepare: 0.0167	 bound: 0.6188	 transfer: 0.0097	 finalize: 0.0051
Accumulated time: update_bounds func: 0.6507	 prepare: 0.0167	 bound: 0.6188	 transfer: 0.0097	 finalize: 0.0051
batch bounding time:  0.6507887840270996
Current worst splitting domains lb-rhs (depth):
-0.22510 (8), -0.20720 (8), -0.19722 (8), -0.17410 (8), -0.17308 (8), -0.17063 (8), -0.15903 (8), -0.14528 (8), -0.13690 (8), -0.13284 (8), -0.13276 (8), -0.11279 (8), -0.10730 (8), -0.10727 (8), -0.09439 (8), -0.08950 (8), -0.06268 (8), -0.06170 (8), -0.06023 (8), -0.05856 (8), 
length of domains: 32
Total time: 1.1287	 pickout: 0.0010	 decision: 0.4489	 get_bound: 0.6755	 add_domain: 0.0032
Accumulated time:	 pickout: 0.0010	 decision: 0.4489	 get_bound: 0.6755	 add_domain: 0.0032
Current (lb-rhs): -0.2250986099243164
224 domains visited
Cumulative time: 1.1812779903411865

batch:  torch.Size([32, 16, 16, 16]) pre split depth:  3
batch:  torch.Size([32, 16, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [2, 14] [2, 16] [2, 14] [2, 16] [2, 14] [2, 16] [2, 16] [2, 14] [2, 14] [2, 14] 
split level 1: [2, 16] [2, 14] [2, 16] [2, 14] [2, 16] [2, 14] [2, 14] [2, 16] [2, 16] [2, 16] 
split level 2: [2, 40] [2, 40] [2, 40] [2, 40] [2, 40] [2, 40] [2, 40] [2, 40] [2, 40] [2, 40] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.011741161346435547
Tensors transferred: pre=3.0488M lA=0.0476M alpha=0.4829M beta=0.0027M
This batch time : update_bounds func: 0.2515	 prepare: 0.0187	 bound: 0.2230	 transfer: 0.0040	 finalize: 0.0050
Accumulated time: update_bounds func: 0.9022	 prepare: 0.0354	 bound: 0.8418	 transfer: 0.0137	 finalize: 0.0100
batch bounding time:  0.25150632858276367
Current worst splitting domains lb-rhs (depth):
-0.08911 (11), -0.07550 (11), -0.05867 (11), -0.04191 (11), -0.04034 (11), -0.03342 (11), -0.02874 (11), -0.00598 (11), 
length of domains: 8
Total time: 0.3024	 pickout: 0.0009	 decision: 0.0293	 get_bound: 0.2702	 add_domain: 0.0020
Accumulated time:	 pickout: 0.0019	 decision: 0.4782	 get_bound: 0.9457	 add_domain: 0.0052
Current (lb-rhs): -0.089111328125
472 domains visited
Cumulative time: 1.484154462814331

batch:  torch.Size([8, 16, 16, 16]) pre split depth:  5
batch:  torch.Size([8, 16, 16, 16]) post split depth:  5
splitting decisions: 
split level 0: [2, 95] [2, 95] [2, 95] [2, 95] [2, 95] [2, 95] [2, 95] [2, 95] 
split level 1: [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] [2, 19] 
split level 2: [2, 10] [2, 10] [2, 10] [2, 10] [2, 10] [2, 10] [2, 10] [2, 10] 
split level 3: [2, 30] [2, 30] [2, 30] [2, 30] [2, 30] [2, 30] [2, 30] [2, 30] 
split level 4: [2, 50] [2, 50] [2, 50] [2, 50] [2, 50] [2, 50] [2, 50] [2, 50] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.00011086463928222656
Tensors transferred: pre=3.0488M lA=1.5244M alpha=0.4829M beta=0.0039M
This batch time : update_bounds func: 0.0510	 prepare: 0.0258	 bound: 0.0112	 transfer: 0.0069	 finalize: 0.0066
Accumulated time: update_bounds func: 0.9532	 prepare: 0.0612	 bound: 0.8530	 transfer: 0.0206	 finalize: 0.0166
batch bounding time:  0.051013946533203125
length of domains: 0
Total time: 0.1102	 pickout: 0.0008	 decision: 0.0345	 get_bound: 0.0737	 add_domain: 0.0012
Accumulated time:	 pickout: 0.0027	 decision: 0.5127	 get_bound: 1.0194	 add_domain: 0.0064
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
728 domains visited
Cumulative time: 1.5953314304351807


Properties batch 3, size 1
Remaining timeout: 187.84411072731018
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0. -1.  0.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.086851119995117.

Properties batch 4, size 1
Remaining timeout: 187.79388976097107
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0. -1.  0.  1.  0.  0.  0.]]]
thresholds: [0] ######
Remaining spec index [0] with bounds tensor([[-1.01583290]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.12141800, -44.19668961, -34.08209610, -36.71352768, -34.07798386,
        -36.54197311, -31.82049751, -38.26198959, -42.62282562, -43.62261200],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /input.4 start_node /23 with alignment adjustment
setting alpha for layer /12 start_node /23 with alignment adjustment
setting alpha for layer /22 start_node /23 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-1.01583290]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/23']
Keeping slopes for these layers: ['/23']
layer 0 name BoundConv(name="/input") size torch.Size([4096]) unstable 580
layer 1 name BoundConv(name="/input.8") size torch.Size([2048]) unstable 359
layer 2 name BoundLinear(name="/input.12") size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 984
-----------------

batch:  torch.Size([1, 16, 16, 16]) pre split depth:  8
batch:  torch.Size([1, 16, 16, 16]) post split depth:  8
splitting decisions: /home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/utils.py:528: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  eps_temp = torch.tensor(preprocess_cifar(eps_temp, perturbation=True)).reshape(1,-1,1,1)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/branching_domains.py:970: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7)

split level 0: [2, 71] 
split level 1: [2, 61] 
split level 2: [2, 8] 
split level 3: [2, 95] 
split level 4: [2, 40] 
split level 5: [2, 78] 
split level 6: [2, 58] 
split level 7: [2, 67] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.011677742004394531
Tensors transferred: pre=3.0488M lA=0.0119M alpha=0.4829M beta=0.0020M
This batch time : update_bounds func: 0.2489	 prepare: 0.0168	 bound: 0.2237	 transfer: 0.0030	 finalize: 0.0050
Accumulated time: update_bounds func: 1.2021	 prepare: 0.0780	 bound: 1.0767	 transfer: 0.0237	 finalize: 0.0216
batch bounding time:  0.24898147583007812
Current worst splitting domains lb-rhs (depth):
-0.06942 (8), -0.04400 (8), 
length of domains: 2
Total time: 0.3234	 pickout: 0.0008	 decision: 0.0478	 get_bound: 0.2730	 add_domain: 0.0017
Accumulated time:	 pickout: 0.0008	 decision: 0.0478	 get_bound: 0.2730	 add_domain: 0.0017
Current (lb-rhs): -0.06942367553710938
254 domains visited
Cumulative time: 0.32991862297058105

batch:  torch.Size([2, 16, 16, 16]) pre split depth:  7
batch:  torch.Size([2, 16, 16, 16]) post split depth:  7
splitting decisions: 
split level 0: [2, 19] [2, 19] 
split level 1: [2, 16] [2, 16] 
split level 2: [2, 29] [2, 29] 
split level 3: [1, 1124] [1, 1124] 
split level 4: [2, 82] [2, 82] 
split level 5: [2, 46] [2, 46] 
split level 6: [2, 94] [2, 94] 
(256, 3, 32, 32) torch.Size([256, 1, 10]) torch.Size([256, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.00010657310485839844
Tensors transferred: pre=3.0488M lA=1.5244M alpha=0.4829M beta=0.0037M
This batch time : update_bounds func: 0.0349	 prepare: 0.0194	 bound: 0.0068	 transfer: 0.0034	 finalize: 0.0048
Accumulated time: update_bounds func: 1.2369	 prepare: 0.0974	 bound: 1.0835	 transfer: 0.0271	 finalize: 0.0264
batch bounding time:  0.034902334213256836
length of domains: 0
Total time: 0.1042	 pickout: 0.0008	 decision: 0.0435	 get_bound: 0.0586	 add_domain: 0.0012
Accumulated time:	 pickout: 0.0017	 decision: 0.0913	 get_bound: 0.3317	 add_domain: 0.0029
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
510 domains visited
Cumulative time: 0.434586763381958


Properties batch 5, size 1
Remaining timeout: 187.25456929206848
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0. -1.  1.  0.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 1.1821343898773193.

Properties batch 6, size 1
Remaining timeout: 187.2055835723877
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0.  0.  1. -1.  0.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 2.066934585571289.

Properties batch 7, size 1
Remaining timeout: 187.1643841266632
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0.  0.  1.  0. -1.  0.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 6.8282012939453125.

Properties batch 8, size 1
Remaining timeout: 187.12243103981018
##### Instance 0 first 10 spec matrices: [[[ 0.  0.  0.  0.  0.  0.  1.  0.  0. -1.]]]
thresholds: [0] ######
Initial alpha-CROWN verified for spec index [0] with bound 7.008638858795166.
Result: safe in 12.9184 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1): 12.91826943600376, max time: 12.91839861869812
mean time for verified SAFE instances (total 1): 12.91839861869812, max time: 12.91839861869812
safe (total 1), index: [0]
