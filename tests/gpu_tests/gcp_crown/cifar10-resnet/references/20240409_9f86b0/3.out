/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/convert/layer.py:29: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at ../torch/csrc/utils/tensor_numpy.cpp:206.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/utils.py:21: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  return value.ndim == 0 or value.shape == torch.Size([1])
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/site-packages/onnx2pytorch/operations/add.py:34: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  elif all(x == 1 for x in input[0].shape):
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: cifar10_resnet_instances.csv
  results_file: out.txt
  root_path: ../../vnncomp2021/benchmarks/cifar10_resnet
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/cifar10-resnet/master_outputs/3.pkl
  return_optimized_model: false
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 10
  end: 11
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 2000
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.01
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: true
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.9
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: true
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Thu Apr 11 10:50:05 2024 on valla.cs.ucla.edu
customized start/end sample from instance 10 to 11 in cifar10_resnet_instances.csv
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx onnx/resnet_2b.onnx
Using vnnlib vnnlib_properties_pgd_filtered/resnet2b_pgd_filtered/prop_10_eps_0.008.vnnlib
Precompiled vnnlib file found at ../../vnncomp2021/benchmarks/cifar10_resnet/vnnlib_properties_pgd_filtered/resnet2b_pgd_filtered/prop_10_eps_0.008.vnnlib.compiled
Loading onnx ../../vnncomp2021/benchmarks/cifar10_resnet/onnx/resnet_2b.onnx wih quirks {}
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[], perturbed=True)
  (/17): BoundParams(name=/17, inputs=[], perturbed=False)
  (/18): BoundParams(name=/18, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/27): BoundParams(name=/27, inputs=[], perturbed=False)
  (/28): BoundParams(name=/28, inputs=[], perturbed=False)
  (/29): BoundParams(name=/29, inputs=[], perturbed=False)
  (/30): BoundParams(name=/30, inputs=[], perturbed=False)
  (/31): BoundParams(name=/31, inputs=[], perturbed=False)
  (/32): BoundParams(name=/32, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input.1, /17, /18], perturbed=True)
  (/34): BoundRelu(name=/34, inputs=[/input], perturbed=True)
  (/input.4): BoundConv(name=/input.4, inputs=[/34, /19, /20], perturbed=True)
  (/36): BoundRelu(name=/36, inputs=[/input.4], perturbed=True)
  (/37): BoundConv(name=/37, inputs=[/36, /21, /22], perturbed=True)
  (/38): BoundConv(name=/38, inputs=[/34, /23, /24], perturbed=True)
  (/39): BoundAdd(name=/39, inputs=[/37, /38], perturbed=True)
  (/input.8): BoundRelu(name=/input.8, inputs=[/39], perturbed=True)
  (/input.12): BoundConv(name=/input.12, inputs=[/input.8, /25, /26], perturbed=True)
  (/42): BoundRelu(name=/42, inputs=[/input.12], perturbed=True)
  (/43): BoundConv(name=/43, inputs=[/42, /27, /28], perturbed=True)
  (/44): BoundAdd(name=/44, inputs=[/43, /input.8], perturbed=True)
  (/45): BoundRelu(name=/45, inputs=[/44], perturbed=True)
  (/46): BoundFlatten(name=/46, inputs=[/45], perturbed=True)
  (/input.16): BoundLinear(name=/input.16, inputs=[/46, /29, /30], perturbed=True)
  (/48): BoundRelu(name=/48, inputs=[/input.16], perturbed=True)
  (/49): BoundLinear(name=/49, inputs=[/48, /31, /32], perturbed=True)
)
Original output: tensor([[ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
         -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input, inputs=[/input.1, /17, /18], perturbed=True): [(BoundRelu(name=/34, inputs=[/input], perturbed=True), 0)]
  BoundConv(name=/input.4, inputs=[/34, /19, /20], perturbed=True): [(BoundRelu(name=/36, inputs=[/input.4], perturbed=True), 0)]
  BoundAdd(name=/39, inputs=[/37, /38], perturbed=True): [(BoundRelu(name=/input.8, inputs=[/39], perturbed=True), 0)]
  BoundConv(name=/input.12, inputs=[/input.8, /25, /26], perturbed=True): [(BoundRelu(name=/42, inputs=[/input.12], perturbed=True), 0)]
  BoundAdd(name=/44, inputs=[/43, /input.8], perturbed=True): [(BoundRelu(name=/45, inputs=[/44], perturbed=True), 0)]
  BoundLinear(name=/input.16, inputs=[/46, /29, /30], perturbed=True): [(BoundRelu(name=/48, inputs=[/input.16], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/34, inputs=[/input], perturbed=True)
   BoundRelu(name=/36, inputs=[/input.4], perturbed=True)
   BoundRelu(name=/input.8, inputs=[/39], perturbed=True)
   BoundRelu(name=/42, inputs=[/input.12], perturbed=True)
   BoundRelu(name=/45, inputs=[/44], perturbed=True)
   BoundRelu(name=/48, inputs=[/input.16], perturbed=True)
layer /34 using sparse-features alpha with shape [163]; unstable size 163; total size 2048 ([1, 8, 16, 16])
layer /34 start_node /input.4 using sparse-spec alpha [2, 187, 1, 163] with unstable size 186 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /39 using sparse-spec alpha [2, 173, 1, 163] with unstable size 172 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /input.12 using sparse-spec alpha [2, 127, 1, 163] with unstable size 126 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /44 using sparse-spec alpha [2, 263, 1, 163] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /34 start_node /input.16 using sparse-spec alpha [2, 41, 1, 163] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /34 start_node /49 using full alpha [2, 9, 1, 163] with unstable size None total_size 9 output_shape 9
layer /36 using sparse-features alpha with shape [186]; unstable size 186; total size 1024 ([1, 16, 8, 8])
layer /36 start_node /39 using sparse-spec alpha [2, 173, 1, 186] with unstable size 172 total_size 1024 output_shape (16, 8, 8)
layer /36 start_node /input.12 using sparse-spec alpha [2, 127, 1, 186] with unstable size 126 total_size 1024 output_shape (16, 8, 8)
layer /36 start_node /44 using sparse-spec alpha [2, 263, 1, 186] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /36 start_node /input.16 using sparse-spec alpha [2, 41, 1, 186] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /36 start_node /49 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /input.8 using sparse-features alpha with shape [172]; unstable size 172; total size 1024 ([1, 16, 8, 8])
layer /input.8 start_node /input.12 using sparse-spec alpha [2, 127, 1, 172] with unstable size 126 total_size 1024 output_shape (16, 8, 8)
layer /input.8 start_node /44 using sparse-spec alpha [2, 263, 1, 172] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /input.8 start_node /input.16 using sparse-spec alpha [2, 41, 1, 172] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input.8 start_node /49 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /42 using sparse-features alpha with shape [126]; unstable size 126; total size 1024 ([1, 16, 8, 8])
layer /42 start_node /44 using sparse-spec alpha [2, 263, 1, 126] with unstable size 262 total_size 1024 output_shape (16, 8, 8)
layer /42 start_node /input.16 using sparse-spec alpha [2, 41, 1, 126] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /42 start_node /49 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /45 using sparse-features alpha with shape [262]; unstable size 262; total size 1024 ([1, 16, 8, 8])
layer /45 start_node /input.16 using sparse-spec alpha [2, 41, 1, 262] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /45 start_node /49 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /48 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /48 start_node /49 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.46270132,  2.16998100,  1.78782654,  2.74898195,  2.43523264,
          1.04310226,  4.20399237, -0.92025661, -0.89263487]], device='cuda:0') None
best_l after optimization: 14.963001251220703
alpha/beta optimization time: 17.42626452445984
initial alpha-crown bounds: tensor([[-0.12641287,  2.53325081,  2.08688593,  3.02056122,  2.77331877,
          1.35149813,  4.50354862, -0.50396824, -0.67568076]], device='cuda:0')
Worst class: (+ rhs) -0.6756807565689087
preset mip_multi_proc as default setting: 40
Set parameter WLSAccessID
Set parameter WLSSecret
Set parameter LicenseID to value 2482314
Academic license 2482314 - for non-commercial use only - registered to z.___@g.ucla.edu
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 8, 16, 16]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 16, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 280.27095556259155
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.503548622131348.

Properties batch 1, size 1
Remaining timeout: 279.9336097240448
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0205612182617188.

Properties batch 2, size 1
Remaining timeout: 279.8043167591095
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7733187675476074.

Properties batch 3, size 1
Remaining timeout: 279.6786046028137
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5332508087158203.

Properties batch 4, size 1
Remaining timeout: 279.552951335907
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.086885929107666.

Properties batch 5, size 1
Remaining timeout: 279.4278657436371
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3514981269836426.

Properties batch 6, size 1
Remaining timeout: 279.27232789993286
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12641287]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
        -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /49 with alignment adjustment
setting alpha for layer /36 start_node /49 with alignment adjustment
setting alpha for layer /input.8 start_node /49 with alignment adjustment
setting alpha for layer /42 start_node /49 with alignment adjustment
setting alpha for layer /45 start_node /49 with alignment adjustment
setting alpha for layer /48 start_node /49 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12641287]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.4,/39,/input.12,/44,/input.16,/49
Keeping alphas for these layers: ['/49']
Keeping alphas for these layers: ['/49']
Node /34 input 0: size torch.Size([8, 16, 16]) unstable 163
Node /36 input 0: size torch.Size([16, 8, 8]) unstable 185
Node /input.8 input 0: size torch.Size([16, 8, 8]) unstable 163
Node /42 input 0: size torch.Size([16, 8, 8]) unstable 119
Node /45 input 0: size torch.Size([16, 8, 8]) unstable 248
Node /48 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 915
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010008811950683594
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.16, 76] 
split level 1: [/input.16, 98] 
split level 2: [/input.16, 26] 
split level 3: [/input.16, 21] 
split level 4: [/input.16, 67] 
split level 5: [/input.16, 90] 
split level 6: [/input.16, 88] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.0001418590545654297
Time: prepare 0.0138    bound 0.0299    transfer 0.0016    finalize 0.0191    func 0.0644    
Accumulated time: func 0.0644    prepare 0.0148    bound 0.0299    transfer 0.0016    finalize 0.0191    
Length of domains: 0
Time: pickout 0.0020    decision 0.4808    set_bounds 0.0251    solve 0.0645    add 0.0003    
Accumulated time: pickout 0.0020    decision 0.4808    set_bounds 0.0251    solve 0.0645    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6380312442779541


Properties batch 7, size 1
Remaining timeout: 278.39145708084106
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50396824]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
        -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /49 with alignment adjustment
setting alpha for layer /36 start_node /49 with alignment adjustment
setting alpha for layer /input.8 start_node /49 with alignment adjustment
setting alpha for layer /42 start_node /49 with alignment adjustment
setting alpha for layer /45 start_node /49 with alignment adjustment
setting alpha for layer /48 start_node /49 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50396824]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.4,/39,/input.12,/44,/input.16,/49
Keeping alphas for these layers: ['/49']
Keeping alphas for these layers: ['/49']
Node /34 input 0: size torch.Size([8, 16, 16]) unstable 163
Node /36 input 0: size torch.Size([16, 8, 8]) unstable 185
Node /input.8 input 0: size torch.Size([16, 8, 8]) unstable 163
Node /42 input 0: size torch.Size([16, 8, 8]) unstable 119
Node /45 input 0: size torch.Size([16, 8, 8]) unstable 248
Node /48 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 915
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0002739429473876953
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.16, 94] 
split level 1: [/input.16, 87] 
split level 2: [/input.16, 23] 
split level 3: [/input.16, 67] 
split level 4: [/input.16, 98] 
split level 5: [/input.16, 91] 
split level 6: [/input.16, 88] 
mip_multi_proc: 40, mip_threads: 1, total threads used: 40
mip solver model built in 3.1611 seconds.
lower bounds for all target labels: [-0.12641143798828125, 2.5332489013671875, 2.0868868827819824, 3.0205602645874023, 2.7733206748962402, 1.3514938354492188, 4.503547668457031, -0.5039658546447754, -0.6756832599639893]
Starting MIP solver for these labels: [0, 7, 8]
start creating model mps for candidates: ['lay/49_0', 'lay/49_7', 'lay/49_8']
parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=0_85782851.mps
parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.mps
parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=7_85782851.mps
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1120: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=0_85782851.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1120: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=7_85782851.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 29836 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1120: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 29839 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 29840 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 128 / 128 = 1.0
pruning-in-iteration extra time: 0.00011682510375976562
Time: prepare 0.0148    bound 0.0222    transfer 0.0009    finalize 0.0143    func 0.0524    
Accumulated time: func 0.0524    prepare 0.0158    bound 0.0222    transfer 0.0009    finalize 0.0143    
Length of domains: 0
Time: pickout 0.0017    decision 0.0875    set_bounds 0.0254    solve 0.0525    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0875    set_bounds 0.0254    solve 0.0525    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.17991876602172852


Properties batch 8, size 1
Remaining timeout: 278.0048871040344
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]],
       dtype=torch.float64)
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67568076]], device='cuda:0') need to verify.
Model prediction is: tensor([ 1.44404173,  4.14308023, -1.75357890, -0.90566707, -1.68149924,
        -2.02757931, -0.09987120, -3.51539850,  1.76632619,  2.63015556],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /34 start_node /49 with alignment adjustment
setting alpha for layer /36 start_node /49 with alignment adjustment
setting alpha for layer /input.8 start_node /49 with alignment adjustment
setting alpha for layer /42 start_node /49 with alignment adjustment
setting alpha for layer /45 start_node /49 with alignment adjustment
setting alpha for layer /48 start_node /49 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 16, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67568076]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.4,/39,/input.12,/44,/input.16,/49
Keeping alphas for these layers: ['/49']
Keeping alphas for these layers: ['/49']
Node /34 input 0: size torch.Size([8, 16, 16]) unstable 163
Node /36 input 0: size torch.Size([16, 8, 8]) unstable 185
Node /input.8 input 0: size torch.Size([16, 8, 8]) unstable 163
Node /42 input 0: size torch.Size([16, 8, 8]) unstable 119
Node /45 input 0: size torch.Size([16, 8, 8]) unstable 248
Node /48 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 915
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00023627281188964844
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.16, 68] 
split level 1: [/input.16, 88] 
split level 2: [/input.16, 23] 
split level 3: [/input.16, 98] 
split level 4: [/input.16, 76] 
split level 5: [/input.16, 33] 
split level 6: [/input.16, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 128 = 0.8359375
pruning-in-iteration extra time: 0.04770517349243164
Time: prepare 0.0136    bound 2.0482    transfer 0.0022    finalize 0.0166    func 2.0808    
Accumulated time: func 2.0808    prepare 0.0145    bound 2.0482    transfer 0.0022    finalize 0.0166    
Current worst splitting domains lb-rhs (depth):
-0.19836 (7), -0.17632 (7), -0.13260 (7), -0.13000 (7), -0.12130 (7), -0.10964 (7), -0.09527 (7), -0.09080 (7), -0.08678 (7), -0.08051 (7), -0.06569 (7), -0.05540 (7), -0.04831 (7), -0.04680 (7), -0.04670 (7), -0.04050 (7), -0.04030 (7), -0.02971 (7), -0.02967 (7), -0.01709 (7), 
Length of domains: 21
Time: pickout 0.0017    decision 0.0877    set_bounds 0.0248    solve 2.0809    add 0.0039    
Accumulated time: pickout 0.0017    decision 0.0877    set_bounds 0.0248    solve 2.0809    add 0.0039    
Current (lb-rhs): -0.19836461544036865
21 domains visited
Cumulative time: 2.2147247791290283

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 21
splitting decisions: 
split level 0: [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] [/input.16, 46] 
split level 1: [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] [/input.16, 31] 
split level 2: [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] [/input.16, 11] 
pruning_in_iteration open status: True
ratio of positive domain = 144 / 168 = 0.8571428571428572
pruning-in-iteration extra time: 0.04450821876525879
Time: prepare 0.0249    bound 1.1927    transfer 0.0014    finalize 0.0201    func 1.2392    
Accumulated time: func 3.3200    prepare 0.0399    bound 3.2409    transfer 0.0036    finalize 0.0368    
Current worst splitting domains lb-rhs (depth):
-0.10940 (10), -0.10807 (10), -0.10261 (10), -0.10135 (10), -0.08812 (10), -0.08562 (10), -0.07964 (10), -0.07699 (10), -0.03924 (10), -0.03518 (10), -0.03211 (10), -0.02856 (10), -0.02834 (10), -0.02537 (10), -0.02483 (10), -0.02317 (10), -0.02179 (10), -0.01931 (10), -0.01849 (10), -0.01530 (10), 
Length of domains: 24
Time: pickout 0.0024    decision 0.0499    set_bounds 0.0201    solve 1.2394    add 0.0030    
Accumulated time: pickout 0.0041    decision 0.1376    set_bounds 0.0449    solve 3.3203    add 0.0069    
Current (lb-rhs): -0.10940474271774292
45 domains visited
Cumulative time: 3.532822370529175

BaB round 3
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 24
splitting decisions: 
split level 0: [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] [/input.12, 1004] 
split level 1: [/input.12, 1005] [/44, 355] [/44, 356] [/44, 356] [/44, 355] [/44, 806] [/44, 35] [/44, 355] [/44, 356] [/44, 356] 
split level 2: [/input.12, 1003] [/input.12, 1005] [/44, 806] [/44, 813] [/44, 356] [/44, 355] [/input.12, 1011] [/input.12, 1011] [/44, 806] [/44, 813] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 192 = 0.9322916666666666
pruning-in-iteration extra time: 0.05069613456726074
Time: prepare 0.0654    bound 1.5362    transfer 0.0024    finalize 0.0501    func 1.6543    
Accumulated time: func 4.9743    prepare 0.1058    bound 4.7771    transfer 0.0060    finalize 0.0869    
Current worst splitting domains lb-rhs (depth):
-0.07063 (13), -0.06524 (13), -0.06073 (13), -0.05969 (13), -0.04869 (13), -0.04656 (13), -0.04405 (13), -0.04162 (13), -0.03357 (13), -0.02861 (13), -0.00902 (13), -0.00441 (13), -0.00347 (13), 
Length of domains: 13
Time: pickout 0.0018    decision 0.0497    set_bounds 0.0209    solve 1.6546    add 0.0039    
Accumulated time: pickout 0.0059    decision 0.1874    set_bounds 0.0658    solve 4.9749    add 0.0108    
Current (lb-rhs): -0.07063060998916626
58 domains visited
Cumulative time: 5.272528171539307

BaB round 4
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0032
batch: 13
splitting decisions: 
split level 0: [/44, 348] [/44, 348] [/44, 348] [/44, 348] [/44, 355] [/44, 348] [/44, 348] [/44, 348] [/44, 348] [/44, 348] 
split level 1: [/44, 356] [/44, 355] [/44, 355] [/44, 356] [/44, 813] [/44, 806] [/44, 356] [/44, 355] [/44, 806] [/44, 806] 
split level 2: [/44, 813] [/44, 35] [/44, 813] [/44, 813] [/input.12, 860] [/44, 35] [/44, 813] [/44, 35] [/44, 813] [/44, 35] 
pruning_in_iteration open status: True
ratio of positive domain = 90 / 104 = 0.8653846153846154
pruning-in-iteration extra time: 0.05422091484069824
Time: prepare 0.0405    bound 1.7007    transfer 0.0020    finalize 0.0191    func 1.7624    
Accumulated time: func 6.7366    prepare 0.1471    bound 6.4778    transfer 0.0080    finalize 0.1059    
Current worst splitting domains lb-rhs (depth):
-0.02678 (16), -0.02569 (16), -0.02166 (16), -0.02016 (16), -0.01840 (16), -0.01708 (16), -0.01704 (16), -0.01464 (16), -0.01273 (16), -0.01086 (16), -0.00934 (16), -0.00777 (16), -0.00383 (16), -0.00190 (16), 
Length of domains: 14
Time: pickout 0.0029    decision 0.0744    set_bounds 0.0150    solve 1.7625    add 0.0025    
Accumulated time: pickout 0.0088    decision 0.2618    set_bounds 0.0807    solve 6.7375    add 0.0133    
Current (lb-rhs): -0.026783347129821777
72 domains visited
Cumulative time: 7.134771347045898

BaB round 5
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 14
splitting decisions: 
split level 0: [/44, 28] [/39, 869] [/39, 869] [/44, 28] [/39, 869] [/39, 869] [/44, 28] [/39, 869] [/44, 546] [/39, 869] 
split level 1: [/input.12, 1005] [/input.12, 1011] [/input.12, 1011] [/input.12, 1005] [/input.12, 1011] [/input.12, 1011] [/input.12, 1005] [/input.12, 1011] [/44, 28] [/input.12, 1011] 
split level 2: [/input.16, 42] [/input.12, 860] [/input.12, 860] [/input.16, 42] [/input.12, 860] [/input.12, 860] [/input.16, 42] [/input.12, 860] [/input.16, 42] [/input.12, 860] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 112 / 112 = 1.0
pruning-in-iteration extra time: 0.0001704692840576172
Time: prepare 0.0487    bound 0.0227    transfer 0.0008    finalize 0.0206    func 0.0930    
Accumulated time: func 6.8296    prepare 0.1967    bound 6.5004    transfer 0.0088    finalize 0.1266    
Length of domains: 0
Time: pickout 0.0021    decision 0.0578    set_bounds 0.0184    solve 0.0931    add 0.0002    
Accumulated time: pickout 0.0109    decision 0.3196    set_bounds 0.0991    solve 6.8306    add 0.0135    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
72 domains visited
Cumulative time: 7.310236692428589

found process to kill: terminal indx = 0
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=0_85782851.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=0_85782851.log
found process to kill: terminal indx = 7
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=7_85782851.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=7_85782851.log
found process to kill: terminal indx = 8
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-49_starttime=1712857802_idx=0_spec=8_85782851.log
found process for pidx=0
kill process for pidx=0
found process for pidx=7
found process for pidx=8
Result: safe in 29.7548 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):29.75454330539702, max time: 29.754840850830078
mean time for verified SAFE instances(total 1): 29.754840850830078, max time: 29.754840850830078
safe (total 1), index: [0]
Result dict saved to /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/cifar10-resnet/master_outputs/3.pkl.
