/home/zhouxingshi/Verifier_Development/complete_verifier/abcrown.py:111: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  c = torch.tensor(specs[0][0]).unsqueeze(0).to(data)
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/oval_deep_cplex/master_outputs/1.pkl
  return_optimized_model: false
model:
  name: cifar_model_deep
  path: models/oval/cifar_deep.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 48
  end: 49
  select_instance: null
  num_outputs: 10
  mean: [0.485, 0.456, 0.406]
  std: [0.225, 0.225, 0.225]
  pkl_path: models/oval/deep_100.pkl
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: specify-target
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1024
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.03
    lr_decay: 0.96
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 3600
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: true
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.8
    iteration: 200
    bab_iteration: 50
    early_stop_patience: -1
    lr_beta: 0.01
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: true
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 10
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Thu Apr 11 12:40:18 2024 on valla.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(8, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): ReLU()
  (8): Flatten(start_dim=1, end_dim=-1)
  (9): Linear(in_features=512, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([8, 3, 4, 4])
  0.bias: shape torch.Size([8])
  2.weight: shape torch.Size([8, 8, 3, 3])
  2.bias: shape torch.Size([8])
  4.weight: shape torch.Size([8, 8, 3, 3])
  4.bias: shape torch.Size([8])
  6.weight: shape torch.Size([8, 8, 4, 4])
  6.bias: shape torch.Size([8])
  9.weight: shape torch.Size([100, 512])
  9.bias: shape torch.Size([100])
  11.weight: shape torch.Size([10, 100])
  11.bias: shape torch.Size([10])
Files already downloaded and verified
Overwrite epsilon that saved in .pkl file, they should be after normalized!
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2], perturbed=True)
  (/input.4): BoundRelu(name=/input.4, inputs=[/input], perturbed=True)
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4], perturbed=True)
  (/input.12): BoundRelu(name=/input.12, inputs=[/input.8], perturbed=True)
  (/input.16): BoundConv(name=/input.16, inputs=[/input.12, /5, /6], perturbed=True)
  (/input.20): BoundRelu(name=/input.20, inputs=[/input.16], perturbed=True)
  (/input.24): BoundConv(name=/input.24, inputs=[/input.20, /7, /8], perturbed=True)
  (/20): BoundRelu(name=/20, inputs=[/input.24], perturbed=True)
  (/21): BoundFlatten(name=/21, inputs=[/20], perturbed=True)
  (/input.28): BoundLinear(name=/input.28, inputs=[/21, /9, /10], perturbed=True)
  (/23): BoundRelu(name=/23, inputs=[/input.28], perturbed=True)
  (/24): BoundLinear(name=/24, inputs=[/23, /11, /12], perturbed=True)
)
Original output: tensor([[-0.29800582,  1.06569612, -0.11857644, -0.38721281, -0.21081826,
         -0.06120294,  0.29111648, -0.15965933, -0.61458546,  0.49325502]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input, inputs=[/input.1, /1, /2], perturbed=True): [(BoundRelu(name=/input.4, inputs=[/input], perturbed=True), 0)]
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4], perturbed=True): [(BoundRelu(name=/input.12, inputs=[/input.8], perturbed=True), 0)]
  BoundConv(name=/input.16, inputs=[/input.12, /5, /6], perturbed=True): [(BoundRelu(name=/input.20, inputs=[/input.16], perturbed=True), 0)]
  BoundConv(name=/input.24, inputs=[/input.20, /7, /8], perturbed=True): [(BoundRelu(name=/20, inputs=[/input.24], perturbed=True), 0)]
  BoundLinear(name=/input.28, inputs=[/21, /9, /10], perturbed=True): [(BoundRelu(name=/23, inputs=[/input.28], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/input.4, inputs=[/input], perturbed=True)
   BoundRelu(name=/input.12, inputs=[/input.8], perturbed=True)
   BoundRelu(name=/input.20, inputs=[/input.16], perturbed=True)
   BoundRelu(name=/20, inputs=[/input.24], perturbed=True)
   BoundRelu(name=/23, inputs=[/input.28], perturbed=True)
layer /input.4 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 8, 16, 16])
layer /input.4 start_node /input.8 using sparse-spec alpha [2, 209, 1, 97] with unstable size 208 total_size 2048 output_shape (8, 16, 16)
layer /input.4 start_node /input.16 using sparse-spec alpha [2, 158, 1, 97] with unstable size 157 total_size 2048 output_shape (8, 16, 16)
layer /input.4 start_node /input.24 using sparse-spec alpha [2, 57, 1, 97] with unstable size 56 total_size 512 output_shape (8, 8, 8)
layer /input.4 start_node /input.28 using sparse-spec alpha [2, 26, 1, 97] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /24 using full alpha [2, 1, 1, 97] with unstable size None total_size 1 output_shape 1
layer /input.12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 8, 16, 16])
layer /input.12 start_node /input.16 using sparse-spec alpha [2, 158, 1, 208] with unstable size 157 total_size 2048 output_shape (8, 16, 16)
layer /input.12 start_node /input.24 using sparse-spec alpha [2, 57, 1, 208] with unstable size 56 total_size 512 output_shape (8, 8, 8)
layer /input.12 start_node /input.28 using sparse-spec alpha [2, 26, 1, 208] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input.12 start_node /24 using full alpha [2, 1, 1, 208] with unstable size None total_size 1 output_shape 1
layer /input.20 using sparse-features alpha with shape [157]; unstable size 157; total size 2048 ([1, 8, 16, 16])
layer /input.20 start_node /input.24 using sparse-spec alpha [2, 57, 1, 157] with unstable size 56 total_size 512 output_shape (8, 8, 8)
layer /input.20 start_node /input.28 using sparse-spec alpha [2, 26, 1, 157] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input.20 start_node /24 using full alpha [2, 1, 1, 157] with unstable size None total_size 1 output_shape 1
layer /20 using sparse-features alpha with shape [56]; unstable size 56; total size 512 ([1, 8, 8, 8])
layer /20 start_node /input.28 using sparse-spec alpha [2, 26, 1, 56] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /20 start_node /24 using full alpha [2, 1, 1, 56] with unstable size None total_size 1 output_shape 1
layer /23 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /23 start_node /24 using full alpha [2, 1, 1, 25] with unstable size None total_size 1 output_shape 1
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.33779907]], device='cuda:0') None
best_l after optimization: -0.1832728385925293
alpha/beta optimization time: 13.080936193466187
initial alpha-crown bounds: tensor([[-0.18327284]], device='cuda:0')
Worst class: (+ rhs) -0.1832728385925293
preset mip_multi_proc as default setting: 40
Set parameter WLSAccessID
Set parameter WLSSecret
Set parameter LicenseID to value 2482314
Academic license 2482314 - for non-commercial use only - registered to z.___@g.ucla.edu
mip_multi_proc: 40, mip_threads: 1, total threads used: 40
mip solver model built in 1.6354 seconds.
lower bounds for all target labels: [-0.18329286575317383]
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/24_0']
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1
lA shape: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 8, 8]), torch.Size([1, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 3584.6734652519226
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Model prediction is: tensor([-0.29800582,  1.06569612, -0.11857644, -0.38721281, -0.21081826,
        -0.06120294,  0.29111648, -0.15965933, -0.61458546,  0.49325502],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input.4 start_node /24 with alignment adjustment
setting alpha for layer /input.12 start_node /24 with alignment adjustment
setting alpha for layer /input.20 start_node /24 with alignment adjustment
setting alpha for layer /20 start_node /24 with alignment adjustment
setting alpha for layer /23 start_node /24 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18327284]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.8,/input.16,/input.24,/input.28,/24
Keeping alphas for these layers: ['/24']
Keeping alphas for these layers: ['/24']
Node /input.4 input 0: size torch.Size([8, 16, 16]) unstable 97
Node /input.12 input 0: size torch.Size([8, 16, 16]) unstable 204
Node /input.20 input 0: size torch.Size([8, 16, 16]) unstable 153
Node /20 input 0: size torch.Size([8, 8, 8]) unstable 56
Node /23 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 534
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009026527404785156
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.28, 20] 
split level 1: [/input.28, 8] 
split level 2: [/input.28, 62] 
split level 3: [/input.28, 95] 
split level 4: [/input.28, 72] 
split level 5: [/input.24, 494] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 64 = 0.8125
pruning-in-iteration extra time: 0.017039775848388672
Time: prepare 0.0161    bound 0.6152    transfer 0.0019    finalize 0.0098    func 0.6432    
Accumulated time: func 0.6432    prepare 0.0174    bound 0.6152    transfer 0.0019    finalize 0.0098    
Current worst splitting domains lb-rhs (depth):
-0.04800 (6), -0.04500 (6), -0.03917 (6), -0.03764 (6), -0.03600 (6), -0.03506 (6), -0.03051 (6), -0.02966 (6), -0.02395 (6), -0.02235 (6), -0.01245 (6), -0.00974 (6), 
Length of domains: 12
Time: pickout 0.0018    decision 0.1707    set_bounds 0.0114    solve 0.6433    add 0.0024    
Accumulated time: pickout 0.0018    decision 0.1707    set_bounds 0.0114    solve 0.6433    add 0.0024    
Current (lb-rhs): -0.047997236251831055
12 domains visited
Cumulative time: 0.8922545909881592

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 12
splitting decisions: 
split level 0: [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] [/input.16, 1942] 
split level 1: [/input.24, 486] [/input.28, 51] [/input.28, 51] [/input.28, 51] [/input.24, 486] [/input.28, 51] [/input.24, 486] [/input.24, 486] [/input.24, 486] [/input.28, 51] 
split level 2: [/input.28, 51] [/input.28, 79] [/input.24, 486] [/input.28, 79] [/input.28, 51] [/input.28, 79] [/input.28, 51] [/input.28, 51] [/input.28, 51] [/input.24, 486] 
pruning_in_iteration open status: True
ratio of positive domain = 62 / 96 = 0.6458333333333333
pruning-in-iteration extra time: 0.015755176544189453
Time: prepare 0.0337    bound 0.4126    transfer 0.0010    finalize 0.0163    func 0.4637    
Accumulated time: func 1.1069    prepare 0.0523    bound 1.0278    transfer 0.0029    finalize 0.0261    
Current worst splitting domains lb-rhs (depth):
-0.03100 (9), -0.03058 (9), -0.02707 (9), -0.02667 (9), -0.02452 (9), -0.02411 (9), -0.02149 (9), -0.02111 (9), -0.01958 (9), -0.01923 (9), -0.01585 (9), -0.01584 (9), -0.01574 (9), -0.01551 (9), -0.01530 (9), -0.01522 (9), -0.01505 (9), -0.01473 (9), -0.01250 (9), -0.01179 (9), 
Length of domains: 34
Time: pickout 0.0016    decision 0.1038    set_bounds 0.0140    solve 0.4639    add 0.0030    
Accumulated time: pickout 0.0034    decision 0.2745    set_bounds 0.0254    solve 1.1071    add 0.0054    
Current (lb-rhs): -0.03100109100341797
46 domains visited
Cumulative time: 1.4797370433807373

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 34
splitting decisions: 
split level 0: [/input.24, 486] [/input.24, 405] [/input.24, 486] [/input.24, 405] [/input.24, 486] [/input.24, 405] [/input.24, 486] [/input.24, 405] [/input.28, 79] [/input.28, 79] 
pruning_in_iteration open status: True
ratio of positive domain = 35 / 68 = 0.5147058823529411
pruning-in-iteration extra time: 0.014895915985107422
Time: prepare 0.0241    bound 0.4200    transfer 0.0009    finalize 0.0094    func 0.4549    
Accumulated time: func 1.5618    prepare 0.0777    bound 1.4478    transfer 0.0038    finalize 0.0355    
Current worst splitting domains lb-rhs (depth):
-0.02603 (10), -0.02564 (10), -0.02193 (10), -0.02151 (10), -0.01985 (10), -0.01946 (10), -0.01929 (10), -0.01890 (10), -0.01651 (10), -0.01612 (10), -0.01360 (10), -0.01326 (10), -0.01082 (10), -0.01051 (10), -0.01017 (10), -0.01000 (10), -0.00994 (10), -0.00985 (10), -0.00984 (10), -0.00962 (10), 
Length of domains: 33
Time: pickout 0.0016    decision 0.1075    set_bounds 0.0053    solve 0.4550    add 0.0027    
Accumulated time: pickout 0.0050    decision 0.3820    set_bounds 0.0308    solve 1.5621    add 0.0081    
Current (lb-rhs): -0.02603006362915039
79 domains visited
Cumulative time: 2.052760601043701

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 33
splitting decisions: 
split level 0: [/input.24, 405] [/input.24, 405] [/input.24, 405] [/input.24, 405] [/input.24, 405] [/input.24, 486] [/input.24, 405] [/input.24, 405] [/input.24, 405] [/input.24, 405] 
pruning_in_iteration open status: True
ratio of positive domain = 18 / 66 = 0.2727272727272727
pruning-in-iteration extra time: 0.015718698501586914
Time: prepare 0.0229    bound 0.4108    transfer 0.0009    finalize 0.0094    func 0.4442    
Accumulated time: func 2.0061    prepare 0.1019    bound 1.8586    transfer 0.0047    finalize 0.0450    
Current worst splitting domains lb-rhs (depth):
-0.02148 (11), -0.02110 (11), -0.02068 (11), -0.02026 (11), -0.01742 (11), -0.01703 (11), -0.01664 (11), -0.01623 (11), -0.01517 (11), -0.01480 (11), -0.01479 (11), -0.01449 (11), -0.01441 (11), -0.01409 (11), -0.01405 (11), -0.01365 (11), -0.01063 (11), -0.01023 (11), -0.01023 (11), -0.00990 (11), 
Length of domains: 48
Time: pickout 0.0016    decision 0.1073    set_bounds 0.0051    solve 0.4443    add 0.0034    
Accumulated time: pickout 0.0066    decision 0.4893    set_bounds 0.0358    solve 2.0064    add 0.0115    
Current (lb-rhs): -0.021475553512573242
127 domains visited
Cumulative time: 2.615269184112549

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 48
splitting decisions: 
split level 0: [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.16, 203] [/input.16, 203] 
pruning_in_iteration open status: True
ratio of positive domain = 54 / 96 = 0.5625
pruning-in-iteration extra time: 0.015694618225097656
Time: prepare 0.0339    bound 0.3968    transfer 0.0010    finalize 0.0154    func 0.4472    
Accumulated time: func 2.4532    prepare 0.1370    bound 2.2554    parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.mps
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1120: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 35378 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
transfer 0.0057    finalize 0.0603    
Current worst splitting domains lb-rhs (depth):
-0.01732 (12), -0.01693 (12), -0.01654 (12), -0.01611 (12), -0.01306 (12), -0.01269 (12), -0.01228 (12), -0.01189 (12), -0.01105 (12), -0.01062 (12), -0.01037 (12), -0.01035 (12), -0.00999 (12), -0.00986 (12), -0.00972 (12), -0.00928 (12), -0.00698 (12), -0.00656 (12), -0.00616 (12), -0.00576 (12), 
Length of domains: 42
Time: pickout 0.0016    decision 0.1103    set_bounds 0.0068    solve 0.4474    add 0.0034    
Accumulated time: pickout 0.0082    decision 0.5996    set_bounds 0.0426    solve 2.4538    add 0.0148    
Current (lb-rhs): -0.017319679260253906
169 domains visited
Cumulative time: 3.185725450515747

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 42
splitting decisions: 
split level 0: [/input.16, 203] [/input.16, 203] [/input.16, 203] [/input.16, 203] [/input.16, 203] [/input.16, 203] [/input.24, 429] [/input.24, 429] [/input.24, 429] [/input.24, 429] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 84 = 0.5952380952380952
pruning-in-iteration extra time: 0.01569223403930664
Time: prepare 0.0290    bound 0.3982    transfer 0.0009    finalize 0.0112    func 0.4395    
Accumulated time: func 2.8928    prepare 0.1676    bound 2.6537    transfer 0.0066    finalize 0.0716    
Current worst splitting domains lb-rhs (depth):
-0.01331 (13), -0.01293 (13), -0.01253 (13), -0.01208 (13), -0.00914 (13), -0.00877 (13), -0.00840 (13), -0.00837 (13), -0.00801 (13), -0.00796 (13), -0.00763 (13), -0.00713 (13), -0.00708 (13), -0.00660 (13), -0.00638 (13), -0.00637 (13), -0.00595 (13), -0.00585 (13), -0.00568 (13), -0.00521 (13), 
Length of domains: 34
Time: pickout 0.0016    decision 0.1247    set_bounds 0.0063    solve 0.4396    add 0.0027    
Accumulated time: pickout 0.0099    decision 0.7243    set_bounds 0.0489    solve 2.8934    add 0.0175    
Current (lb-rhs): -0.013310670852661133
203 domains visited
Cumulative time: 3.761697292327881

BaB round 7
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 34
splitting decisions: 
split level 0: [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] [/input.24, 150] 
pruning_in_iteration open status: True
ratio of positive domain = 36 / 68 = 0.5294117647058824
pruning-in-iteration extra time: 0.015718460083007812
Time: prepare 0.0234    bound 0.3981    transfer 0.0009    finalize 0.0090    func 0.4318    
Accumulated time: func 3.3245    prepare 0.1922    bound 3.0518    transfer 0.0075    finalize 0.0806    
Current worst splitting domains lb-rhs (depth):
-0.00961 (14), -0.00918 (14), -0.00857 (14), -0.00807 (14), -0.00561 (14), -0.00545 (14), -0.00533 (14), -0.00520 (14), -0.00507 (14), -0.00503 (14), -0.00471 (14), -0.00444 (14), -0.00419 (14), -0.00396 (14), -0.00364 (14), -0.00336 (14), -0.00311 (14), -0.00281 (14), -0.00266 (14), -0.00238 (14), 
Length of domains: 32
Time: pickout 0.0016    decision 0.1052    set_bounds 0.0052    solve 0.4319    add 0.0027    
Accumulated time: pickout 0.0114    decision 0.8295    set_bounds 0.0541    solve 3.3253    add 0.0202    
Current (lb-rhs): -0.009612321853637695
235 domains visited
Cumulative time: 4.310873985290527

BaB round 8
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 32
splitting decisions: 
split level 0: [/input.24, 142] [/input.24, 435] [/input.8, 244] [/input.24, 435] [/input.24, 142] [/input.24, 435] [/input.24, 142] [/input.24, 435] [/input.8, 244] [/input.24, 435] 
pruning_in_iteration open status: True
ratio of positive domain = 47 / 64 = 0.734375
pruning-in-iteration extra time: 0.01611185073852539
Time: prepare 0.0240    bound 0.4292    transfer 0.0010    finalize 0.0095    func 0.4638    
Accumulated time: func 3.7883    prepare 0.2174    bound 3.4810    transfer 0.0085    finalize 0.0900    
Current worst splitting domains lb-rhs (depth):
-0.00591 (15), -0.00580 (15), -0.00490 (15), -0.00454 (15), -0.00449 (15), -0.00175 (15), -0.00171 (15), -0.00101 (15), -0.00091 (15), -0.00084 (15), -0.00074 (15), -0.00069 (15), -0.00053 (15), -0.00044 (15), -0.00044 (15), -0.00038 (15), -0.00022 (15), 
Length of domains: 17
Time: pickout 0.0016    decision 0.1061    set_bounds 0.0050    solve 0.4639    add 0.0024    
Accumulated time: pickout 0.0130    decision 0.9356    set_bounds 0.0591    solve 3.7891    add 0.0226    
Current (lb-rhs): -0.00591278076171875
252 domains visited
Cumulative time: 4.891866445541382

BaB round 9
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0013
batch: 17
splitting decisions: 
split level 0: [/input.24, 435] [/input.24, 435] [/input.24, 435] [/input.16, 1957] [/input.24, 142] [/input.24, 435] [/input.24, 142] [/input.24, 435] [/input.24, 142] [/input.24, 435] 
split level 1: [/input.24, 142] [/input.24, 142] [/input.24, 142] [/input.8, 244] [/input.8, 244] [/input.8, 244] [/input.24, 141] [/input.24, 142] [/input.8, 244] [/input.8, 244] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 68 / 68 = 1.0
pruning-in-iteration extra time: 0.00012636184692382812
Time: prepare 0.0308    bound 0.0143    transfer 0.0006    finalize 0.0109    func 0.0567    
Accumulated time: func 3.8450    prepare 0.2497    bound 3.4953    transfer 0.0091    finalize 0.1010    
Length of domains: 0
Time: pickout 0.0017    decision 0.1103    set_bounds 0.0080    solve 0.0568    add 0.0001    
Accumulated time: pickout 0.0147    decision 1.0459    set_bounds 0.0670    solve 3.8459    add 0.0228    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
252 domains visited
Cumulative time: 5.070830821990967

found process to kill: terminal indx = 0
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864415_idx=0_spec=0_86443935.log
found process for pidx=0
kill process for pidx=0
Result: safe in 20.8997 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):20.89946899717709, max time: 20.899677991867065
mean time for verified SAFE instances(total 1): 20.899677991867065, max time: 20.899677991867065
safe (total 1), index: [0]
Result dict saved to /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/oval_deep_cplex/master_outputs/1.pkl.
