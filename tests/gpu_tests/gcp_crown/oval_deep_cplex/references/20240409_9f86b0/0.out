/home/zhouxingshi/Verifier_Development/complete_verifier/abcrown.py:111: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  c = torch.tensor(specs[0][0]).unsqueeze(0).to(data)
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: out.txt
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: true
  output_file: /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/oval_deep_cplex/master_outputs/0.pkl
  return_optimized_model: false
model:
  name: cifar_model_deep
  path: models/oval/cifar_deep.pth
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 20
  end: 21
  select_instance: null
  num_outputs: 10
  mean: [0.485, 0.456, 0.406]
  std: [0.225, 0.225, 0.225]
  pkl_path: models/oval/deep_100.pkl
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: specify-target
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1024
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.03
    lr_decay: 0.96
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 3600
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: true
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.8
    iteration: 200
    bab_iteration: 50
    early_stop_patience: -1
    lr_beta: 0.01
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: true
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: kfsb
    candidates: 10
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      use_min: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: skip
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false

Experiments at Thu Apr 11 12:39:49 2024 on valla.cs.ucla.edu
Sequential(
  (0): Conv2d(3, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(8, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): ReLU()
  (8): Flatten(start_dim=1, end_dim=-1)
  (9): Linear(in_features=512, out_features=100, bias=True)
  (10): ReLU()
  (11): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([8, 3, 4, 4])
  0.bias: shape torch.Size([8])
  2.weight: shape torch.Size([8, 8, 3, 3])
  2.bias: shape torch.Size([8])
  4.weight: shape torch.Size([8, 8, 3, 3])
  4.bias: shape torch.Size([8])
  6.weight: shape torch.Size([8, 8, 4, 4])
  6.bias: shape torch.Size([8])
  9.weight: shape torch.Size([100, 512])
  9.bias: shape torch.Size([100])
  11.weight: shape torch.Size([10, 100])
  11.bias: shape torch.Size([10])
Files already downloaded and verified
Overwrite epsilon that saved in .pkl file, they should be after normalized!
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input.1): BoundInput(name=/input.1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/9): BoundParams(name=/9, inputs=[], perturbed=False)
  (/10): BoundParams(name=/10, inputs=[], perturbed=False)
  (/11): BoundParams(name=/11, inputs=[], perturbed=False)
  (/12): BoundParams(name=/12, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input.1, /1, /2], perturbed=True)
  (/input.4): BoundRelu(name=/input.4, inputs=[/input], perturbed=True)
  (/input.8): BoundConv(name=/input.8, inputs=[/input.4, /3, /4], perturbed=True)
  (/input.12): BoundRelu(name=/input.12, inputs=[/input.8], perturbed=True)
  (/input.16): BoundConv(name=/input.16, inputs=[/input.12, /5, /6], perturbed=True)
  (/input.20): BoundRelu(name=/input.20, inputs=[/input.16], perturbed=True)
  (/input.24): BoundConv(name=/input.24, inputs=[/input.20, /7, /8], perturbed=True)
  (/20): BoundRelu(name=/20, inputs=[/input.24], perturbed=True)
  (/21): BoundFlatten(name=/21, inputs=[/20], perturbed=True)
  (/input.28): BoundLinear(name=/input.28, inputs=[/21, /9, /10], perturbed=True)
  (/23): BoundRelu(name=/23, inputs=[/input.28], perturbed=True)
  (/24): BoundLinear(name=/24, inputs=[/23, /11, /12], perturbed=True)
)
Original output: tensor([[ 1.21560407, -0.26283705,  0.42838904, -0.99122924,  0.45992526,
         -1.35115933, -0.35104254, -1.05085170,  1.50520909,  0.39801991]],
       device='cuda:0')
Split layers:
  BoundConv(name=/input, inputs=[/input.1, /1, /2], perturbed=True): [(BoundRelu(name=/input.4, inputs=[/input], perturbed=True), 0)]
  BoundConv(name=/input.8, inputs=[/input.4, /3, /4], perturbed=True): [(BoundRelu(name=/input.12, inputs=[/input.8], perturbed=True), 0)]
  BoundConv(name=/input.16, inputs=[/input.12, /5, /6], perturbed=True): [(BoundRelu(name=/input.20, inputs=[/input.16], perturbed=True), 0)]
  BoundConv(name=/input.24, inputs=[/input.20, /7, /8], perturbed=True): [(BoundRelu(name=/20, inputs=[/input.24], perturbed=True), 0)]
  BoundLinear(name=/input.28, inputs=[/21, /9, /10], perturbed=True): [(BoundRelu(name=/23, inputs=[/input.28], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/input.4, inputs=[/input], perturbed=True)
   BoundRelu(name=/input.12, inputs=[/input.8], perturbed=True)
   BoundRelu(name=/input.20, inputs=[/input.16], perturbed=True)
   BoundRelu(name=/20, inputs=[/input.24], perturbed=True)
   BoundRelu(name=/23, inputs=[/input.28], perturbed=True)
layer /input.4 using sparse-features alpha with shape [160]; unstable size 160; total size 2048 ([1, 8, 16, 16])
layer /input.4 start_node /input.8 using sparse-spec alpha [2, 214, 1, 160] with unstable size 213 total_size 2048 output_shape (8, 16, 16)
layer /input.4 start_node /input.16 using sparse-spec alpha [2, 235, 1, 160] with unstable size 234 total_size 2048 output_shape (8, 16, 16)
layer /input.4 start_node /input.24 using sparse-spec alpha [2, 68, 1, 160] with unstable size 67 total_size 512 output_shape (8, 8, 8)
layer /input.4 start_node /input.28 using sparse-spec alpha [2, 33, 1, 160] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.4 start_node /24 using full alpha [2, 1, 1, 160] with unstable size None total_size 1 output_shape 1
layer /input.12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 8, 16, 16])
layer /input.12 start_node /input.16 using sparse-spec alpha [2, 235, 1, 213] with unstable size 234 total_size 2048 output_shape (8, 16, 16)
layer /input.12 start_node /input.24 using sparse-spec alpha [2, 68, 1, 213] with unstable size 67 total_size 512 output_shape (8, 8, 8)
layer /input.12 start_node /input.28 using sparse-spec alpha [2, 33, 1, 213] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.12 start_node /24 using full alpha [2, 1, 1, 213] with unstable size None total_size 1 output_shape 1
layer /input.20 using sparse-features alpha with shape [234]; unstable size 234; total size 2048 ([1, 8, 16, 16])
layer /input.20 start_node /input.24 using sparse-spec alpha [2, 68, 1, 234] with unstable size 67 total_size 512 output_shape (8, 8, 8)
layer /input.20 start_node /input.28 using sparse-spec alpha [2, 33, 1, 234] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input.20 start_node /24 using full alpha [2, 1, 1, 234] with unstable size None total_size 1 output_shape 1
layer /20 using sparse-features alpha with shape [67]; unstable size 67; total size 512 ([1, 8, 8, 8])
layer /20 start_node /input.28 using sparse-spec alpha [2, 33, 1, 67] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /20 start_node /24 using full alpha [2, 1, 1, 67] with unstable size None total_size 1 output_shape 1
layer /23 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /23 start_node /24 using full alpha [2, 1, 1, 32] with unstable size None total_size 1 output_shape 1
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.44273233]], device='cuda:0') None
best_l after optimization: -0.2899596691131592
alpha/beta optimization time: 12.81847858428955
initial alpha-crown bounds: tensor([[-0.28995967]], device='cuda:0')
Worst class: (+ rhs) -0.2899596691131592
preset mip_multi_proc as default setting: 40
Set parameter WLSAccessID
Set parameter WLSSecret
Set parameter LicenseID to value 2482314
Academic license 2482314 - for non-commercial use only - registered to z.___@g.ucla.edu
mip_multi_proc: 40, mip_threads: 1, total threads used: 40
mip solver model built in 1.5865 seconds.
lower bounds for all target labels: [-0.2899686098098755]
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/24_0']
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1
lA shape: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 8, 8]), torch.Size([1, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 3584.977653503418
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Model prediction is: tensor([ 1.21560407, -0.26283705,  0.42838904, -0.99122924,  0.45992526,
        -1.35115933, -0.35104254, -1.05085170,  1.50520909,  0.39801991],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input.4 start_node /24 with alignment adjustment
setting alpha for layer /input.12 start_node /24 with alignment adjustment
setting alpha for layer /input.20 start_node /24 with alignment adjustment
setting alpha for layer /20 start_node /24 with alignment adjustment
setting alpha for layer /23 start_node /24 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.28995967]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input.8,/input.16,/input.24,/input.28,/24
Keeping alphas for these layers: ['/24']
Keeping alphas for these layers: ['/24']
Node /input.4 input 0: size torch.Size([8, 16, 16]) unstable 160
Node /input.12 input 0: size torch.Size([8, 16, 16]) unstable 209
Node /input.20 input 0: size torch.Size([8, 16, 16]) unstable 232
Node /20 input 0: size torch.Size([8, 8, 8]) unstable 65
Node /23 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 697
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009369850158691406
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input.28, 10] 
split level 1: [/input.28, 49] 
split level 2: [/input.28, 51] 
split level 3: [/input.28, 83] 
split level 4: [/input.28, 59] 
split level 5: [/input.24, 93] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 64 = 0.78125
pruning-in-iteration extra time: 0.01471400260925293
Time: prepare 0.0130    bound 0.5772    transfer 0.0020    finalize 0.0102    func 0.6026    
Accumulated time: func 0.6026    prepare 0.0143    bound 0.5772    transfer 0.0020    finalize 0.0102    
Current worst splitting domains lb-rhs (depth):
-0.03425 (6), -0.03424 (6), -0.02862 (6), -0.02858 (6), -0.02105 (6), -0.02077 (6), -0.01898 (6), -0.01656 (6), -0.01542 (6), -0.01337 (6), -0.01061 (6), -0.00983 (6), -0.00133 (6), -0.00088 (6), 
Length of domains: 14
Time: pickout 0.0018    decision 0.1492    set_bounds 0.0117    solve 0.6027    add 0.0024    
Accumulated time: pickout 0.0018    decision 0.1492    set_bounds 0.0117    solve 0.6027    add 0.0024    
Current (lb-rhs): -0.03425264358520508
14 domains visited
Cumulative time: 0.8300669193267822

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 14
splitting decisions: 
split level 0: [/input.24, 92] [/input.24, 92] [/input.24, 92] [/input.24, 92] [/input.16, 309] [/input.24, 92] [/input.24, 92] [/input.24, 92] [/input.24, 92] [/input.16, 170] 
split level 1: [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.24, 92] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.16, 170] [/input.24, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 20 / 56 = 0.3571428571428571
pruning-in-iteration extra time: 0.014996767044067383
Time: prepare 0.0187    bound 0.3968    transfer 0.0008    finalize 0.0081    func 0.4246    
Accumulated time: func 1.0272    prepare 0.0342    bound 0.9740    transfer 0.0028    finalize 0.0184    
Current worst splitting domains lb-rhs (depth):
-0.02556 (8), -0.02552 (8), -0.02054 (8), -0.02053 (8), -0.01949 (8), -0.01949 (8), -0.01873 (8), -0.01861 (8), -0.01447 (8), -0.01443 (8), -0.01440 (8), -0.01426 (8), -0.01375 (8), -0.01352 (8), -0.01206 (8), -0.01122 (8), -0.01079 (8), -0.00935 (8), -0.00925 (8), -0.00814 (8), 
Length of domains: 36
Time: pickout 0.0015    decision 0.1015    set_bounds 0.0066    solve 0.4247    add 0.0030    
Accumulated time: pickout 0.0033    decision 0.2508    set_bounds 0.0182    solve 1.0274    add 0.0054    
Current (lb-rhs): -0.025560975074768066
50 domains visited
Cumulative time: 1.3681504726409912

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 36
splitting decisions: 
split level 0: [/input.16, 309] [/input.16, 1945] [/input.16, 1945] [/input.24, 101] [/input.16, 309] [/input.16, 1945] [/input.16, 309] [/input.16, 1945] [/input.16, 309] [/input.16, 309] 
pruning_in_iteration open status: True
ratio of positive domain = 43 / 72 = 0.5972222222222222
pruning-in-iteration extra time: 0.015082836151123047
Time: prepare 0.0246    bound 0.4098    transfer 0.0010    finalize 0.0122    func 0.4478    
Accumulated time: func 1.4750    prepare 0.0600    bound 1.3838    transfer 0.0038    finalize 0.0305    
Current worst splitting domains lb-rhs (depth):
-0.02226 (9), -0.02219 (9), -0.01722 (9), -0.01720 (9), -0.01618 (9), -0.01618 (9), -0.01512 (9), -0.01490 (9), -0.01128 (9), -0.01114 (9), -0.01096 (9), -0.01082 (9), -0.01007 (9), -0.00998 (9), -0.00794 (9), -0.00727 (9), -0.00690 (9), -0.00592 (9), -0.00584 (9), -0.00447 (9), 
Length of domains: 29
Time: pickout 0.0016    decision 0.1064    set_bounds 0.0056    solve 0.4478    add 0.0030    
Accumulated time: pickout 0.0049    decision 0.3572    set_bounds 0.0238    solve 1.4752    add 0.0084    
Current (lb-rhs): -0.022256016731262207
79 domains visited
Cumulative time: 1.9336261749267578

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 29
splitting decisions: 
split level 0: [/input.16, 309] [/input.24, 101] [/input.16, 309] [/input.16, 309] [/input.16, 309] [/input.16, 1945] [/input.16, 1945] [/input.24, 101] [/input.16, 1945] [/input.16, 309] 
pruning_in_iteration open status: True
ratio of positive domain = 26 / 58 = 0.4482758620689655
pruning-in-iteration extra time: 0.014909744262695312
Time: prepare 0.0203    bound 0.3962    transfer 0.0010    finalize 0.0085    func 0.4260    
Accumulated time: func 1.9010    prepare 0.0816    bound 1.7800    transfer 0.0048    finalize 0.0390    
Current worst splitting domains lb-rhs (depth):
-0.01914 (10), -0.01906 (10), -0.01412 (10), -0.01407 (10), -0.01379 (10), -0.01358 (10), -0.01301 (10), -0.01258 (10), -0.01196 (10), -0.01175 (10), -0.00877 (10), -0.00858 (10), -0.00806 (10), -0.00783 (10), -0.00753 (10), -0.00751 (10), -0.00726 (10), -0.00694 (10), -0.00685 (10), -0.00669 (10), 
Length of domains: 32
Time: pickout 0.0015    decision 0.1055    set_bounds 0.0047    solve 0.4261    add 0.0029    
Accumulated time: pickout 0.0064    decision 0.4626    set_bounds 0.0285    solve 1.9013    add 0.0112    
Current (lb-rhs): -0.019144177436828613
111 domains visited
Cumulative time: 2.4752442836761475

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 32
splitting decisions: 
split level 0: [/input.24, 101] [/input.16, 309] [/input.24, 101] [/input.24, 101] [/input.24, 101] [/input.16, 309] [/input.24, 101] [/input.16, 1945] [/input.24, 101] [/input.24, 101] 
pruning_in_iteration open status: True
ratio of positive domain = 39 / 64 = 0.609375
pruning-in-iteration extra time: 0.014699459075927734
Time: prepare 0.0219    bound 0.3918    transfer 0.0021    finalize 0.0127    func 0.4286    
Accumulated time: func 2.3296    prepare 0.1048    bound 2.1718    transfer 0.0070    finalize 0.0517    
Current worst splitting domains lb-rhs (depth):
-0.01611 (11), -0.01602 (11), -0.01107 (11), -0.01101 (11), -0.01074 (11), parallel save mip model to /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.mps
/home/zhouxingshi/Verifier_Development/complete_verifier/lp_mip_solver.py:1120: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/home/zhouxingshi/miniconda3/envs/torch2.2/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 34664 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
-0.01053 (11), -0.00942 (11), -0.00942 (11), -0.00891 (11), -0.00868 (11), -0.00564 (11), -0.00553 (11), -0.00443 (11), -0.00431 (11), -0.00418 (11), -0.00407 (11), -0.00401 (11), -0.00386 (11), -0.00369 (11), -0.00365 (11), 
Length of domains: 25
Time: pickout 0.0016    decision 0.1116    set_bounds 0.0054    solve 0.4287    add 0.0029    
Accumulated time: pickout 0.0080    decision 0.5742    set_bounds 0.0339    solve 2.3300    add 0.0141    
Current (lb-rhs): -0.01610851287841797
136 domains visited
Cumulative time: 3.0263640880584717

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 25
splitting decisions: 
split level 0: [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.8, 153] [/input.8, 153] [/input.16, 330] [/input.8, 153] [/input.8, 153] [/input.28, 41] 
split level 1: [/input.28, 41] [/input.28, 41] [/input.28, 41] [/input.28, 41] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 72] [/input.16, 291] 
pruning_in_iteration open status: True
ratio of positive domain = 69 / 100 = 0.69
pruning-in-iteration extra time: 0.014835596084594727
Time: prepare 0.0411    bound 0.3883    transfer 0.0010    finalize 0.0173    func 0.4478    
Accumulated time: func 2.7775    prepare 0.1471    bound 2.5601    transfer 0.0080    finalize 0.0690    
Current worst splitting domains lb-rhs (depth):
-0.00984 (13), -0.00981 (13), -0.00971 (13), -0.00967 (13), -0.00556 (13), -0.00552 (13), -0.00539 (13), -0.00535 (13), -0.00471 (13), -0.00465 (13), -0.00459 (13), -0.00455 (13), -0.00446 (13), -0.00443 (13), -0.00438 (13), -0.00425 (13), -0.00422 (13), -0.00413 (13), -0.00334 (13), -0.00329 (13), 
Length of domains: 31
Time: pickout 0.0016    decision 0.1076    set_bounds 0.0122    solve 0.4479    add 0.0028    
Accumulated time: pickout 0.0096    decision 0.6819    set_bounds 0.0461    solve 2.7780    add 0.0170    
Current (lb-rhs): -0.00984203815460205
167 domains visited
Cumulative time: 3.600238800048828

BaB round 7
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0028
batch: 31
splitting decisions: 
split level 0: [/input.24, 467] [/input.28, 41] [/input.24, 467] [/input.28, 41] [/input.24, 467] [/input.28, 41] [/input.24, 467] [/input.28, 41] [/input.24, 467] [/input.28, 41] 
pruning_in_iteration open status: True
ratio of positive domain = 38 / 62 = 0.6129032258064516
pruning-in-iteration extra time: 0.014863967895507812
Time: prepare 0.0273    bound 0.3918    transfer 0.0013    finalize 0.0109    func 0.4313    
Accumulated time: func 3.2088    prepare 0.1756    bound 2.9519    transfer 0.0093    finalize 0.0799    
Current worst splitting domains lb-rhs (depth):
-0.00786 (14), -0.00770 (14), -0.00768 (14), -0.00760 (14), -0.00509 (14), -0.00342 (14), -0.00338 (14), -0.00288 (14), -0.00286 (14), -0.00265 (14), -0.00257 (14), -0.00252 (14), -0.00247 (14), -0.00225 (14), -0.00223 (14), -0.00219 (14), -0.00218 (14), -0.00210 (14), -0.00209 (14), -0.00130 (14), 
Length of domains: 24
Time: pickout 0.0016    decision 0.1066    set_bounds 0.0050    solve 0.4314    add 0.0026    
Accumulated time: pickout 0.0112    decision 0.7885    set_bounds 0.0511    solve 3.2093    add 0.0196    
Current (lb-rhs): -0.007864832878112793
191 domains visited
Cumulative time: 4.1510560512542725

BaB round 8
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 24
splitting decisions: 
split level 0: [/input.24, 494] [/input.24, 494] [/input.24, 494] [/input.24, 494] [/input.28, 41] [/input.24, 494] [/input.28, 41] [/input.24, 494] [/input.24, 467] [/input.24, 494] 
split level 1: [/input.28, 41] [/input.16, 330] [/input.28, 41] [/input.16, 330] [/input.28, 17] [/input.16, 330] [/input.28, 17] [/input.16, 330] [/input.24, 494] [/input.16, 330] 
pruning_in_iteration open status: True
ratio of positive domain = 89 / 96 = 0.9270833333333334
pruning-in-iteration extra time: 0.01470184326171875
Time: prepare 0.0416    bound 0.3892    transfer 0.0010    finalize 0.0162    func 0.4481    
Accumulated time: func 3.6569    prepare 0.2185    bound 3.3411    transfer 0.0103    finalize 0.0961    
Current worst splitting domains lb-rhs (depth):
-0.00387 (16), -0.00382 (16), -0.00373 (16), -0.00351 (16), -0.00132 (16), -0.00109 (16), -0.00071 (16), 
Length of domains: 7
Time: pickout 0.0016    decision 0.1051    set_bounds 0.0110    solve 0.4483    add 0.0018    
Accumulated time: pickout 0.0128    decision 0.8936    set_bounds 0.0621    solve 3.6576    add 0.0214    
Current (lb-rhs): -0.003865480422973633
198 domains visited
Cumulative time: 4.721153259277344

BaB round 9
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0014
batch: 7
splitting decisions: 
split level 0: [/input.24, 467] [/input.24, 467] [/input.24, 467] [/input.24, 467] [/input.24, 467] [/input.24, 494] [/input.24, 467] 
split level 1: [/input.28, 17] [/input.24, 494] [/input.24, 494] [/input.28, 17] [/input.16, 330] [/input.16, 39] [/input.24, 494] 
split level 2: [/input.16, 39] [/input.16, 39] [/input.16, 39] [/input.16, 39] [/input.16, 39] [/input.16, 291] [/input.16, 39] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 56 / 56 = 1.0
pruning-in-iteration extra time: 0.000110626220703125
Time: prepare 0.0247    bound 0.0125    transfer 0.0005    finalize 0.0089    func 0.0467    
Accumulated time: func 3.7035    prepare 0.2444    bound 3.3535    transfer 0.0108    finalize 0.1050    
Length of domains: 0
Time: pickout 0.0015    decision 0.0993    set_bounds 0.0096    solve 0.0467    add 0.0001    
Accumulated time: pickout 0.0143    decision 0.9929    set_bounds 0.0717    solve 3.7043    add 0.0215    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
198 domains visited
Cumulative time: 4.88025975227356

found process to kill: terminal indx = 0
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.mps
removing /home/zhouxingshi/Verifier_Development/complete_verifier/cuts/CPLEX_cuts/cplexmip_lay-24_starttime=1712864386_idx=0_spec=0_86440950.log
found process for pidx=0
kill process for pidx=0
Result: safe in 20.4009 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):20.40071924491326, max time: 20.400923252105713
mean time for verified SAFE instances(total 1): 20.400923252105713, max time: 20.400923252105713
safe (total 1), index: [0]
Result dict saved to /home/zhouxingshi/Verifier_Development/tests/gpu_tests/gcp_crown/oval_deep_cplex/master_outputs/0.pkl.
