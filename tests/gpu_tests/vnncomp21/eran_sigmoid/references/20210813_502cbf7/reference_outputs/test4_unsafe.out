/home/zhouxingshi/conda/miniconda3/lib/python3.9/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /pytorch/torch/csrc/utils/tensor_numpy.cpp:143.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
Experiments at Thu Nov  4 13:05:28 2021 on ubuntu
Namespace(solve_slope=True, load='../../vnncomp2021/benchmarks/eran', device='cuda', seed=100, norm=inf, batch_size=64, refinement_batch_size=-1, no_warm=False, no_beta=False, max_subproblems_list=200000, decision_thresh=0, timeout=360, start=54, end=55, branching_method='kfsb', branching_candidates=3, branching_reduceop='min', lr_init_alpha=0.1, init_iteration=100, lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, optimizer='adam', iteration=50, beta_warmup=True, opt_coeffs=False, opt_bias=False, opt_intermediate_beta=False, lr_intermediate_beta=0.05, intermediate_refinement_layers=[-1], max_refinement_domains=1000, conv_mode='patches', deterministic=False, double_fp=False, share_slopes=False, loss_reduction_func='min', mip_multi_proc=None, mip_threads=1, mip_refine_timeout=0.8, mip_perneuron_refine_timeout=15, record_lb=False, no_joint_opt=False, csv_name='eran_instances.csv', onnx_path=None, vnnlib_path=None, results_file=None, data='MNIST', model='cresnet5_16_avg_bn', increase_TO=False, pgd_order='before', complete_verifier='skip', incomplete=True)
saving results to vnn-comp_[eran_instances]_start=54_end=55_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 54 to 55

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
args.loss_reduction_func change: min -> min
args.init_iteration change: 100 -> 1000
args.lr_decay change: 0.98 -> 0.999
args.pgd_order change: before -> before
args.complete_verifier change: skip -> skip
##### PGD attack: True label: 8, Tested against: [0, 1, 2, 3, 4, 5, 6, 7, 9] ######
pgd early stop.
pgd prediction: tensor([-15.4869,  -9.0082,  -6.9352,  -1.0972, -12.5637,  -7.2925, -17.7080,
         -6.3891,  -1.2123,  -4.7986], device='cuda:0',
       grad_fn=<SqueezeBackward1>)
attack margin tensor([14.2745,  7.7958,  5.7229, -0.1151, 11.3514,  6.0802, 16.4957,  5.1768,
            inf,  3.5863], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd succeed, label 8, against label 3
Result: unsafe-pgd in 3.9258 seconds


[]
############# Summary #############
Final verified acc: 0.0% [total 1 examples]
Total verification count: 1 , total verified safe: 0 , verified unsafe: 1 , timeout: 0
max time 3.9258060455322266
unsafe-pgd (total 1): [0]
