/home/zhouxingshi/conda/miniconda3/lib/python3.9/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /pytorch/torch/csrc/utils/tensor_numpy.cpp:143.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
/home/zhouxingshi/conda/miniconda3/lib/python3.9/site-packages/torch/nn/functional.py:2113: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  if size_prods == 1:
/home/zhouxingshi/conda/miniconda3/lib/python3.9/site-packages/torch/onnx/symbolic_helper.py:677: UserWarning: ONNX export mode is set to inference mode, but operator batch_norm is set to training  mode. The model will be exported in inference, as specified by the export mode.
  warnings.warn("ONNX export mode is set to " + training_mode +
Experiments at Wed Nov  3 20:57:44 2021 on ubuntu
saving results to vnn-comp_[eran_instances]_start=37_end=38_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 37 to 38

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
arguments.Config["general"]["loss_reduction_func"] change: sum -> min
arguments.Config["solver"]["alpha-crown"]["iteration"] change: 100 -> 1000
arguments.Config["solver"]["beta-crown"]["lr_decay"] change: 0.98 -> 0.999
arguments.Config["attack"]["pgd_order"] change: before -> before
arguments.Config["general"]["complete_verifier"] change: bab -> skip
##### PGD attack: True label: 2, Tested against: [0, 1, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-14.5424, -14.5346,  -1.9080, -13.9116,  -9.6219, -17.1709, -12.8209,
        -13.1639, -11.7412, -18.0343], device='cuda:0',
       grad_fn=<SqueezeBackward1>)
attack margin tensor([12.6344, 12.6266,     inf, 12.0036,  7.7139, 15.2629, 10.9129, 11.2559,
         9.8332, 16.1263], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-15.0008, -14.9112,  -1.9648, -13.9544, -10.2188, -17.4290, -13.2684,
         -13.5826, -11.8174, -18.4451]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ -97.0618,  -60.1170,  -54.0722, -112.5476,  -69.9321, -127.8313,
          -57.1402,  -45.8227,  -94.6231]], device='cuda:0') None

all verified at 7th iter
best_l after optimization: -1.5129774808883667 with beta sum per layer: []
optimal alpha/beta time: 1.1797864437103271
initial alpha-CROWN bounds: tensor([[5.1600, 4.2452, 5.2710, 1.5130, 8.2426, 3.7487, 3.9912, 4.4233, 9.3659]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
verified with init bound!
Result: safe-incomplete in 5.5967 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 5.596717596054077
safe-incomplete (total 1): [0]
