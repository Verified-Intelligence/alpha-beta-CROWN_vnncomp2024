Experiments at Fri Nov  5 03:00:41 2021 on huan-Super-Server
saving results to vnn-comp_[mnistfc_instances]_start=21_end=22_iter=20_b=500_int-beta=False_timeout=360_branching=kfsb-max-5_lra-init=0.1_lra=0.01_lrb=0.03_PGD=before.npz
customized start/end sample from 21 to 22

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Unexpected input shape in onnx: (784, 1), given (1, 28, 28)
arguments.Config["general"]["complete_verifier"] change: mip -> mip
##### PGD attack: True label: 3, Tested against: [0, 1, 2, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-0.0014,  0.0054,  0.0203,  0.8198, -0.0051,  0.1082, -0.0087,  0.0061,
         0.0079,  0.0165], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([0.8212, 0.8145, 0.7995,    inf, 0.8249, 0.7116, 0.8285, 0.8137, 0.8119,
        0.8033], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-8.1294e-03, -7.0775e-03, -2.3129e-03,  9.9961e-01, -2.4243e-02,
          1.4982e-02, -4.9137e-03, -1.3894e-02, -3.8517e-03,  9.2401e-04]],
       device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-0.0304, -0.0876, -0.3666, -0.0283, -0.4998, -0.0747, -0.3775, -0.5202,
         -0.0520]], device='cuda:0') None
best_l after optimization: -0.815895676612854 with beta sum per layer: []
optimal alpha/beta time: 2.062329053878784
initial alpha-CROWN bounds: tensor([[ 0.2191,  0.2073,  0.0057,  0.2082, -0.1956,  0.2176,  0.0680, -0.1083,
          0.1940]], device='cuda:0', grad_fn=<AsStridedBackward>) None
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1, total threads used: 16
build_mip_time: 2.622537612915039
finished building Gurobi MIP model, calling optimize function
lower bounds for all target labels: tensor([ 0.2191,  0.2073,  0.0057,  0.0000,  0.2082, -0.1956,  0.2176,  0.0680,
        -0.1083,  0.1940], device='cuda:0')
Starting MIP solver for these labels: (5, 8)
/home/shiqi/miniconda3/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/miniconda3/lib/python3.8/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1616554793803/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
solving MIP for lay6_8, status:15, [-0.10832232236862183]=>[0.0058587969155159715], time: 0.3410990238189697s
solving MIP for lay6_5, status:15, [-0.19557145237922668]=>[0.17191519245418185], time: 0.9461023807525635s
MIP solved global bound=tensor([[0.2191, 0.2073, 0.0057, 0.0000, 0.2082, 0.1719, 0.2176, 0.0680, 0.0059,
         0.1940]], device='cuda:0')
verified safe-mip with init mip!
time threshold left for bab: 116.01319551467896
Result: safe-mip in 9.2821 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 9.282062530517578
safe-mip (total 1): [0]
