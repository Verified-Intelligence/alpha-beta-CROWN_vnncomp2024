/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Fri Nov  5 03:08:06 2021 on huan-Super-Server
Namespace(batch_size=64, beta_warmup=True, branching_candidates=5, branching_method='kfsb', branching_reduceop='max', complete_verifier='mip', conv_mode='patches', csv_name='mnistfc_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=22, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../vnncomp2021/benchmarks/mnistfc', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.003, lr_decay=0.98, lr_init_alpha=0.1, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', results_file=None, seed=100, share_slopes=False, solve_slope=True, start=21, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[mnistfc_instances]_start=21_end=22_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-max-5_lra-init=0.1_lra=0.01_lrb=0.003_PGD=before.npz
customized start/end sample from 21 to 22

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272168290/work/torch/csrc/utils/tensor_numpy.cpp:189.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
Unexpected input shape in onnx: (784, 1), given (1, 28, 28)
args.complete_verifier change: mip -> mip
##### PGD attack: True label: 3, Tested against: [0, 1, 2, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-0.0014,  0.0053,  0.0203,  0.8198, -0.0051,  0.1083, -0.0087,  0.0061,
         0.0079,  0.0165], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([0.8212, 0.8145, 0.7995,    inf, 0.8249, 0.7116, 0.8285, 0.8137, 0.8119,
        0.8033], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-8.1294e-03, -7.0775e-03, -2.3129e-03,  9.9961e-01, -2.4243e-02,
          1.4982e-02, -4.9137e-03, -1.3894e-02, -3.8517e-03,  9.2401e-04]],
       device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: -0.8158957958221436 with beta sum per layer: []
optimal alpha/beta time: 1.8104259967803955
initial alpha-CROWN bounds: tensor([[ 0.2191,  0.2073,  0.0057,  0.2082, -0.1956,  0.2176,  0.0680, -0.1083,
          0.1940]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1, total threads used: 16
build_mip_time: 2.845507860183716
finished building Gurobi MIP model, calling optimize function
tensor([ 0.2191,  0.2073,  0.0057,  0.0000,  0.2082, -0.1956,  0.2176,  0.0680,
        -0.1083,  0.1940], device='cuda:0')
solving MIP for lay6_8, [-0.10832232236862183]=>[1e-05], time: 0.4112722873687744s
solving MIP for lay6_5, [-0.19557157158851624]=>[1e-05], time: 0.9153645038604736s
MIP solved global bound=tensor([[2.1908e-01, 2.0729e-01, 5.7043e-03, 0.0000e+00, 2.0816e-01, 1.0000e-05,
         2.1756e-01, 6.8032e-02, 1.0000e-05, 1.9398e-01]], device='cuda:0')
verified safe with init mip!
Result: safe-mip in 16.2503 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 16.250304222106934
safe-mip (total 1): [0]
