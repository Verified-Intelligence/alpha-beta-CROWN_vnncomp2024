/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Fri Nov  5 03:42:56 2021 on huan-Super-Server
Namespace(batch_size=64, beta_warmup=True, branching_candidates=5, branching_method='kfsb', branching_reduceop='max', complete_verifier='mip', conv_mode='patches', csv_name='mnistfc_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=8, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../vnncomp2021/benchmarks/mnistfc', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.003, lr_decay=0.98, lr_init_alpha=0.1, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='skip', results_file=None, seed=100, share_slopes=False, solve_slope=True, start=7, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[mnistfc_instances]_start=7_end=8_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-max-5_lra-init=0.1_lra=0.01_lrb=0.003_PGD=skip.npz
customized start/end sample from 7 to 8

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272168290/work/torch/csrc/utils/tensor_numpy.cpp:189.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
Unexpected input shape in onnx: (784, 1), given (1, 28, 28)
args.complete_verifier change: mip -> mip
Model prediction is: tensor([[-2.7316e-03,  3.2250e-04, -2.7414e-04, -2.0001e-03, -2.2914e-03,
          7.2663e-03,  1.8848e-04,  2.0193e-03,  3.6198e-03,  1.0018e+00]],
       device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 5.679326057434082 with beta sum per layer: []
optimal alpha/beta time: 3.2182278633117676
initial alpha-CROWN bounds: tensor([[-0.4678, -0.5468, -0.5274, -0.4997, -0.5245, -0.5509, -0.4610, -0.6063,
         -1.4950]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1, total threads used: 16
build_mip_time: 2.6999566555023193
finished building Gurobi MIP model, calling optimize function
tensor([-0.4678, -0.5468, -0.5274, -0.4997, -0.5245, -0.5509, -0.4610, -0.6063,
        -1.4950,  0.0000], device='cuda:0')
solving MIP for lay6_6, [-0.460969477891922]=>[1e-05], time: 1.6804416179656982s
solving MIP for lay6_8, [-1.49501371383667]=>[-0.43737470517765875], time: 2.184664249420166s
solving MIP for lay6_2, [-0.5273920893669128]=>[1e-05], time: 2.2644195556640625s
solving MIP for lay6_4, [-0.524499237537384]=>[1e-05], time: 2.2642011642456055s
solving MIP for lay6_0, [-0.4677814543247223]=>[1e-05], time: 2.278285264968872s
solving MIP for lay6_7, [-0.6063287854194641]=>[1e-05], time: 2.418523073196411s
solving MIP for lay6_3, [-0.4996508061885834]=>[1e-05], time: 2.4668920040130615s
solving MIP for lay6_5, [-0.5508894920349121]=>[1e-05], time: 2.595414876937866s
solving MIP for lay6_1, [-0.5468012094497681]=>[1e-05], time: 2.7219960689544678s
MIP solved global bound=tensor([[ 1.0000e-05,  1.0000e-05,  1.0000e-05,  1.0000e-05,  1.0000e-05,
          1.0000e-05,  1.0000e-05,  1.0000e-05, -4.3737e-01,  0.0000e+00]],
       device='cuda:0')
verified unsafe with init mip!
Result: unsafe-mip in 16.4917 seconds


[]
############# Summary #############
Final verified acc: 0.0% [total 1 examples]
Total verification count: 1 , total verified safe: 0 , verified unsafe: 1 , timeout: 0
max time 16.49173069000244
unsafe-mip (total 1): [0]
