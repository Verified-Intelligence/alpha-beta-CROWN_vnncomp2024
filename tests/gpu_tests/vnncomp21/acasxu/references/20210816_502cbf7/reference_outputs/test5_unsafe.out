/home/kx46@drexel.edu/anaconda3/envs/pyt18/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/kx46@drexel.edu/anaconda3/envs/pyt18/lib/python3.7/site-packages/onnx2pytorch/convert/operations.py:110: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  weight = torch.from_numpy(numpy_helper.to_array(params[0]))
bab_verification_input_split.py:252: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  ret = np.array(ret)
bab_verification_input_split.py:274: ResourceWarning: unclosed file <_io.TextIOWrapper name='../../../../vnncomp2021/benchmarks/acasxu/acasxu_instances.csv' mode='r' encoding='UTF-8'>
  main(args)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
Experiments at Sat Nov  6 00:11:07 2021 on CCI-2CPKMH3
Namespace(batch_size=500, branching_candidates=3, branching_method='sb', conv_mode='patches', csv_name='acasxu_instances.csv', data='ACASXU', deterministic=False, device='cuda', double_fp=False, end=97, increase_TO=False, iteration=10, load='../../../../vnncomp2021/benchmarks/acasxu', lr_alpha=0.01, lr_init_alpha=0.1, max_subproblems_list=200000, model='cresnet5_16_avg_bn', norm=inf, onnx_path=None, results_file=None, seed=100, share_slopes=True, single_prop=False, solve_slope=False, start=96, timeout=360, vnnlib_path=None)

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
##### [96] True label: [0 0 0 0], Tested against: [1 2 3 4], onnx_path: ACASXU_run2a_1_7_batch_2000.onnx, vnnlib_path: prop_3.vnnlib ######
calculate grad on input: False
initial CROWN bounds: tensor([[-0.0017, -0.0016, -0.0031, -0.0031]], device='cuda:0') tensor([[-0.0012, -0.0011, -0.0018, -0.0018]], device='cuda:0')
tensor([[-0.0017, -0.0016, -0.0031, -0.0031]], device='cuda:0')
decision time: 0.08077669143676758
insert to domain / total batch time: 0.000200/0.096862
length of domains: 2
Current lb:-0.0015372831840068102
2 neurons visited

adversarial example found! [-0.02031158 -0.01886275 -0.01898559 -0.01794692 -0.01792061]
Image 96 against [1 2 3 4] verify end, Time cost: 0.5593507289886475
[[96 -0.0015372831840068102 2 0.5593507289886475 array([1, 2, 3, 4])]]
[['97' 'SAT']]
time mean: 0.5593507289886475, branches mean: 2.0, number of timeout: 1
final verified acc: 18500.0%[1]
Total verification count: 1 total verified: 185
mean time [total:1]: 0.5593507289886475
mean time [cnt:1]: 0.5593507289886475
Namespace(batch_size=500, branching_candidates=3, branching_method='sb', conv_mode='patches', csv_name='acasxu_instances.csv', data='ACASXU', deterministic=False, device='cuda', double_fp=False, end=97, increase_TO=False, iteration=10, load='../../../../vnncomp2021/benchmarks/acasxu', lr_alpha=0.01, lr_init_alpha=0.1, max_subproblems_list=200000, model='cresnet5_16_avg_bn', norm=inf, onnx_path=None, results_file=None, seed=100, share_slopes=True, single_prop=False, solve_slope=False, start=96, timeout=115.44064927101135, vnnlib_path=None)
