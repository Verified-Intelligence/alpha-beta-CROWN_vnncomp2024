Building native CUDA modules...
/home/zhouxingshi/conda/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
/home/zhouxingshi/conda/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/onnx2pytorch/convert/operations.py:110: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  weight = torch.from_numpy(numpy_helper.to_array(params[0]))
/mnt/data1/zhouxing/gputest/CROWN-GENERAL/tests/gpu_tests/vnncomp/acasxu/../../../../complete_verifier/bab_verification_input_split.py:208: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  ret = np.array(ret)
/mnt/data1/zhouxing/gputest/CROWN-GENERAL/tests/gpu_tests/vnncomp/acasxu/../../../../complete_verifier/bab_verification_input_split.py:225: ResourceWarning: unclosed file <_io.TextIOWrapper name='../../../../../vnncomp2021/benchmarks/acasxu/acasxu_instances.csv' mode='r' encoding='UTF-8'>
  main()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  csv_name: acasxu_instances.csv
  onnx_path: null
  vnnlib_path: null
  results_file: null
  root_path: ../../../../../vnncomp2021/benchmarks/acasxu
model:
  path: null
data:
  start: 143
  end: 144
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: ACASXU
  data_filter_path: null
specification:
  type: lp
  norm: .inf
  epsilon: null
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: true
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 1000
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 10
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 360
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: sb
    candidates: 3
    reduceop: min
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
  solve_slope: false
attack:
  pgd_order: before

Experiments at Mon May  2 22:14:39 2022 on ubuntu

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
##### [143] True label: [0 0 0 0], Tested against: [1 2 3 4], onnx_path: ACASXU_run2a_1_9_batch_2000.onnx, vnnlib_path: prop_4.vnnlib ######
calculate grad on input: False
initial CROWN bounds: tensor([[-0.0023, -0.0023, -0.0033, -0.0032]], device='cuda:0') tensor([[-0.0013, -0.0012, -0.0021, -0.0020]], device='cuda:0')
tensor([[-0.0023, -0.0023, -0.0033, -0.0032]], device='cuda:0')
decision time: 0.6067218780517578
insert to domain / total batch time: 0.000357/0.629096
length of domains: 2
Current lb:-0.002110718283802271
2 neurons visited

adversarial example found! [-0.01994929 -0.01819284 -0.01814509 -0.01728212 -0.01725575]
Image 143 against [1 2 3 4] verify end, Time cost: 1.7775914669036865
[[143 -0.002110718283802271 2 1.7775914669036865 array([1, 2, 3, 4])]]
[['144' 'SAT']]
time mean: 1.7775914669036865, branches mean: 2.0
final verified acc: 18500.0%[1]
Total verification count: 1 total verified: 185
mean time [total:1]: 1.7775914669036865
mean time [cnt:1]: 1.7775914669036865
