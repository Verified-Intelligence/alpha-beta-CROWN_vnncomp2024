Building native CUDA modules...
/home/zhouxingshi/conda/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: bab-refine
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: eran_instances.csv
  onnx_path: null
  vnnlib_path: null
  results_file: null
  root_path: ../../../../../vnncomp2021/benchmarks/eran
model:
  path: null
  name: mnist_9_200
data:
  start: 24
  end: 25
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: MNIST
  data_filter_path: null
specification:
  type: lp
  norm: .inf
  epsilon: null
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 500
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: 16
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 360
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 22:19:27 2022 on ubuntu
saving results to vnn-comp_[eran_instances]_start=24_end=25_iter=20_b=500_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 24 to 25

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
##### PGD attack: True label: 1, Tested against: [0, 2, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-2.9098,  7.6321, -1.8308, -2.2878, -1.7660, -0.7275, -1.2835,  0.9114,
        -0.4213, -1.2204], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([10.5419,     inf,  9.4629,  9.9198,  9.3980,  8.3595,  8.9156,  6.7207,
         8.0533,  8.8525], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-3.2749,  8.6015, -2.0694, -2.5680, -2.0008, -0.8726, -1.4305,  1.0257,
         -0.5334, -1.4153]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ -743.8039, -1126.8256, -1047.5470, -1119.4009, -1107.7098, -1044.3668,
          -964.2955, -1150.8038, -1236.0493]], device='cuda:0') None
best_l after optimization: 5674.12890625 with beta sum per layer: []
alpha/beta optimization time: 15.04563283920288
initial alpha-CROWN bounds: tensor([[-444.3280, -680.6718, -631.4633, -667.9215, -677.9575, -632.5531,
         -537.2488, -675.9596, -726.0259]], device='cuda:0',
       grad_fn=<AsStridedBackward>)
worst class: tensor(-726.0259, device='cuda:0', grad_fn=<MinBackward1>)
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-10-30
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_87', 'lay4_84', 'lay4_9', 'lay4_121', 'lay4_92', 'lay4_74', 'lay4_161', 'lay4_136', 'lay4_76', 'lay4_198', 'lay4_95', 'lay4_88', 'lay4_77', 'lay4_142', 'lay4_13', 'lay4_53', 'lay4_178', 'lay4_1', 'lay4_27', 'lay4_139', 'lay4_37', 'lay4_14', 'lay4_194', 'lay4_110', 'lay4_11', 'lay4_175', 'lay4_19', 'lay4_47', 'lay4_33', 'lay4_73', 'lay4_134', 'lay4_50', 'lay4_128', 'lay4_152', 'lay4_176', 'lay4_108', 'lay4_64', 'lay4_8', 'lay4_55', 'lay4_132', 'lay4_115', 'lay4_133', 'lay4_150', 'lay4_138', 'lay4_151', 'lay4_117', 'lay4_145', 'lay4_154', 'lay4_3', 'lay4_129', 'lay4_69', 'lay4_167', 'lay4_168', 'lay4_127', 'lay4_137', 'lay4_172', 'lay4_59', 'lay4_51', 'lay4_107', 'lay4_52', 'lay4_196', 'lay4_98', 'lay4_183', 'lay4_191', 'lay4_123', 'lay4_12', 'lay4_6', 'lay4_162', 'lay4_174', 'lay4_171', 'lay4_193', 'lay4_165', 'lay4_7', 'lay4_31', 'lay4_26', 'lay4_114', 'lay4_35', 'lay4_103', 'lay4_18', 'lay4_70', 'lay4_20', 'lay4_41', 'lay4_34', 'lay4_182', 'lay4_28', 'lay4_30', 'lay4_166', 'lay4_43', 'lay4_24', 'lay4_71', 'lay4_197', 'lay4_153'] filter: 1.0
/home/zhouxingshi/conda/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
Solving MIP for lay4_142, [-0.9945892095565796,0.13096073269844055]=>[-0.9945892095565796,-1e-05] (-1,-1; 15,-1), time: 1.3837s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_87, [-0.8227159976959229,0.46488967537879944]=>[-0.5800194312726125,0.25610273771640113] (2,-1; 2,-1), time: 4.6738s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_88, [-0.37901216745376587,0.6738684177398682]=>[-0.23717709066214474,0.4394983038480396] (2,-1; 2,-1), time: 5.2340s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_77, [-0.6830222606658936,0.24533423781394958]=>[-0.5076501419211418,0.029354042454609396] (2,-1; 2,-1), time: 6.9947s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_53, [-0.4681783616542816,0.7430847883224487]=>[-0.1440460766938124,0.5235057328892401] (2,-1; 2,-1), time: 7.0411s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_76, [-0.6439640522003174,0.4640656113624573]=>[-0.38217563720830006,0.253715355940701] (2,-1; 2,-1), time: 7.8837s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_136, [-0.392959326505661,0.7452504634857178]=>[-0.14563318729591537,0.5304858298546511] (2,-1; 2,-1), time: 7.9549s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_95, [-0.301351934671402,0.8148792386054993]=>[-0.020878691957526212,0.6870117137823679] (2,-1; 2,-1), time: 7.9555s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_84, [-0.6039924621582031,0.5753711462020874]=>[-0.3467730713658988,0.36374650037919704] (2,-1; 2,-1), time: 8.5352s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_9, [-0.7582206726074219,0.2856900095939636]=>[-0.5443653079372499,0.09552015016834878] (2,-1; 2,-1), time: 9.0423s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_198, [-0.8150815963745117,0.3931712806224823]=>[-0.5777239922179721,0.11528144334963317] (2,-1; 2,-1), time: 9.0499s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_194, [-1.085821509361267,0.12080973386764526]=>[-1.085821509361267,-1e-05] (-1,-1; 15,-1), time: 1.3536s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_178, [-0.9593331813812256,0.25938117504119873]=>[-0.6780236453277845,0.04213019577542107] (2,-1; 2,-1), time: 7.9526s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_11, [-1.0318970680236816,0.09240683913230896]=>[-1.0318970680236816,-1e-05] (-1,-1; 15,-1), time: 0.9826s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_13, [-0.6986517310142517,0.38461387157440186]=>[-0.4007216265278208,0.21094669436697583] (2,-1; 2,-1), time: 10.2922s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_73, [-1.117133378982544,0.056983232498168945]=>[-1.117133378982544,-1e-05] (-1,-1; 15,-1), time: 0.8354s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_139, [-0.39154064655303955,0.5600348711013794]=>[-0.18053855920788794,0.42573472532790513] (2,-1; 2,-1), time: 3.4347s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_121, [-0.9355599284172058,0.28792309761047363]=>[-0.6264151002735349,0.03739669470289936] (2,-1; 2,-1), time: 10.5709s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_175, [-0.1909230351448059,1.0093555450439453]=>[1e-05,1.0093555450439453] (15,-1; -1,-1), time: 1.6499s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_74, [-0.5861638784408569,0.5030631422996521]=>[-0.2858519324392287,0.30280356881322784] (2,-1; 2,-1), time: 11.1662s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_128, [-0.9599279165267944,0.08632317185401917]=>[-0.9599279165267944,-1e-05] (-1,-1; 15,-1), time: 1.0875s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_161, [-0.6374799609184265,0.3747095763683319]=>[-0.3810811568793766,0.18095017774988606] (2,-1; 2,-1), time: 11.8609s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_176, [-0.8407050371170044,0.13145044445991516]=>[-0.8407050371170044,-1e-05] (-1,-1; 15,-1), time: 1.2563s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_108, [-1.007300615310669,0.09247815608978271]=>[-1.007300615310669,-1e-05] (-1,-1; 15,-1), time: 0.9640s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_134, [-0.9549360275268555,0.20688748359680176]=>[-0.9549360275268555,-1e-05] (-1,-1; 15,-1), time: 2.0013s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_92, [-0.399070143699646,0.8049236536026001]=>[-0.24439156350003519,0.4552396081527807] (2,-1; 2,-1), time: 12.5126s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_55, [-0.8935630321502686,0.15435504913330078]=>[-0.8935630321502686,-1e-05] (-1,-1; 15,-1), time: 1.4076s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_1, [-0.6760386228561401,0.37518492341041565]=>[-0.4427928344845148,0.1339140206518495] (2,-1; 2,-1), time: 8.8580s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_47, [-0.6228351593017578,0.44686728715896606]=>[-0.3991240983132628,0.25084632684644287] (2,-1; 2,-1), time: 4.7655s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_150, [-0.8206443786621094,0.05595622956752777]=>[-0.8206443786621094,-1e-05] (-1,-1; 15,-1), time: 0.9745s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_33, [-0.6781483888626099,0.6551964282989502]=>[-0.5145597620512682,0.34908072474667684] (2,-1; 2,-1), time: 5.3954s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_117, [-1.0263786315917969,0.1100071519613266]=>[-1.0263786315917969,-1e-05] (-1,-1; 15,-1), time: 1.3343s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_145, [-0.9305375814437866,0.12097865343093872]=>[-0.9305375814437866,-1e-05] (-1,-1; 15,-1), time: 1.2040s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_14, [-0.7491542100906372,0.18908776342868805]=>[-0.5339053687159453,0.01797574774645378] (2,-1; 2,-1), time: 8.4173s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_152, [-0.42525410652160645,0.7856667041778564]=>[-0.2132237262548017,0.5252872820863967] (2,-1; 2,-1), time: 6.6346s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_129, [-0.8139475584030151,0.13518662750720978]=>[-0.8139475584030151,-1e-05] (-1,-1; 15,-1), time: 1.1943s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_37, [-0.5571377873420715,0.5724774599075317]=>[-0.2892626580785592,0.3053138184752423] (2,-1; 2,-1), time: 11.0329s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_69, [-0.8208522796630859,0.14695334434509277]=>[-0.8208522796630859,-1e-05] (-1,-1; 15,-1), time: 1.2537s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_167, [-0.8897379636764526,0.07338562607765198]=>[-0.8897379636764526,-1e-05] (-1,-1; 15,-1), time: 1.0731s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_137, [-0.9636624455451965,0.06930050253868103]=>[-0.9636624455451965,-1e-05] (-1,-1; 15,-1), time: 0.8159s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_8, [-0.6111477613449097,0.47202181816101074]=>[-0.38804666204376703,0.20987415485677172] (2,-1; 2,-1), time: 7.6896s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_64, [-0.7629865407943726,0.34213656187057495]=>[-0.47690095724203124,0.186479117694672] (2,-1; 2,-1), time: 7.9936s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_50, [-0.7499903440475464,0.42420902848243713]=>[-0.47591607320897666,0.18165038068318481] (2,-1; 2,-1), time: 9.2926s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_138, [-0.7127562761306763,0.15136298537254333]=>[-0.48021271285736145,0.04740091321156771] (2,-1; 2,-1), time: 7.0054s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_107, [-0.9511802792549133,0.04809120297431946]=>[-0.9511802792549133,-1e-05] (-1,-1; 15,-1), time: 0.9248s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_51, [-1.3213105201721191,0.016784310340881348]=>[-1.3213105201721191,-1e-05] (-1,-1; 15,-1), time: 1.0061s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_59, [-0.1065107136964798,0.9941630363464355]=>[1e-05,0.9941630363464355] (15,-1; -1,-1), time: 1.0597s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_27, [-0.8083298802375793,0.26218166947364807]=>[-0.5289302830460176,0.10567952161340374] (9,-1; 2,-1), time: 16.5667s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_133, [-0.36142075061798096,0.5048481822013855]=>[-0.11082410616908034,0.37931758326663834] (2,-1; 2,-1), time: 9.5439s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_154, [-0.8964295983314514,0.12965430319309235]=>[-0.6575495399736008,0.00084905075376901] (2,-1; 2,-1), time: 6.8355s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_123, [-0.9516576528549194,0.010210186243057251]=>[-0.9516576528549194,-1e-05] (-1,-1; 15,-1), time: 0.9365s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_115, [-0.57796311378479,0.382819801568985]=>[-0.32329660525699416,0.1946890361474352] (2,-1; 2,-1), time: 10.8512s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_12, [-0.9582766890525818,0.038599222898483276]=>[-0.9582766890525818,-1e-05] (-1,-1; 15,-1), time: 0.8882s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_98, [-1.0219390392303467,0.19870108366012573]=>[-1.0219390392303467,-1e-05] (-1,-1; 15,-1), time: 3.0503s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_6, [-0.9305959939956665,0.015751913189888]=>[-0.9305959939956665,-1e-05] (-1,-1; 15,-1), time: 0.8171s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_191, [-0.19360138475894928,0.9679175615310669]=>[1e-05,0.9679175615310669] (15,-1; -1,-1), time: 2.1446s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_52, [-0.8158795237541199,0.2005869448184967]=>[-0.8158795237541199,-1e-05] (-1,-1; 15,-1), time: 3.9835s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_165, [-1.0303096771240234,0.030692249536514282]=>[-1.0303096771240234,-1e-05] (-1,-1; 15,-1), time: 0.9152s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_19, [-0.6888915300369263,0.41305047273635864]=>[-0.36270345285742794,0.30706293119381584] (9,-1; 2,-1), time: 16.3105s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_196, [-0.8179396390914917,0.21830815076828003]=>[-0.8179396390914917,-1e-05] (-1,-1; 15,-1), time: 4.8810s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_168, [-0.6058057546615601,0.34910497069358826]=>[-0.406224256802262,0.1382499580803672] (2,-1; 2,-1), time: 8.0554s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_110, [-0.6314817667007446,0.3824288249015808]=>[-0.4038654267344837,0.1864542131712783] (9,-1; 2,-1), time: 18.7881s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_26, [-0.13713973760604858,0.9202249050140381]=>[1e-05,0.9202249050140381] (15,-1; -1,-1), time: 1.3721s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_151, [-0.3153963088989258,0.7762151956558228]=>[-0.07371282950480695,0.4882202236716309] (2,-1; 2,-1), time: 13.0996s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_18, [-0.1559164822101593,0.8418300151824951]=>[1e-05,0.8418300151824951] (15,-1; -1,-1), time: 1.7613s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_132, [-0.7888989448547363,0.26220738887786865]=>[-0.4797374577037686,0.11904302298642133] (9,-1; 2,-1), time: 16.6961s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_183, [-0.44840702414512634,0.5308486223220825]=>[-0.2897847345116117,0.25496972503419363] (2,-1; 2,-1), time: 8.3797s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_172, [-0.6443425416946411,0.32740840315818787]=>[-0.38984777288905836,0.13290831636770345] (2,-1; 2,-1), time: 10.2469s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_162, [-0.36848944425582886,0.7274288535118103]=>[-0.16065954422611492,0.5166115290111833] (2,-1; 2,-1), time: 7.4270s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_174, [-0.6937411427497864,0.37845003604888916]=>[-0.48889353704280275,0.11307900473838066] (2,-1; 2,-1), time: 8.1694s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_28, [-0.977189302444458,0.058960169553756714]=>[-0.977189302444458,-1e-05] (-1,-1; 15,-1), time: 1.0010s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_20, [-0.7776670455932617,0.17819055914878845]=>[-0.7776670455932617,-1e-05] (-1,-1; 15,-1), time: 3.0933s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_30, [-1.2637279033660889,0.00882035493850708]=>[-1.2637279033660889,-1e-05] (-1,-1; 15,-1), time: 1.0156s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_171, [-0.35413652658462524,0.6589972376823425]=>[-0.04165296942511,0.5218800898011287] (2,-1; 2,-1), time: 9.8841s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_24, [-0.812294602394104,0.041732728481292725]=>[-0.812294602394104,-1e-05] (-1,-1; 15,-1), time: 1.0112s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_114, [-0.24439643323421478,0.6166916489601135]=>[-0.07834155455639216,0.4323672139321054] (2,-1; 2,-1), time: 8.6119s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_3, [-0.6396582722663879,0.44923514127731323]=>[-0.30551735675603187,0.26965389799472184] (9,-1; 2,-1), time: 18.2255s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_71, [-0.9705387353897095,0.0382847785949707]=>[-0.9705387353897095,-1e-05] (-1,-1; 15,-1), time: 0.9679s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_127, [-0.945396363735199,0.18190276622772217]=>[-0.5547052587129524,0.1049292203757883] (9,-1; 2,-1), time: 16.0853s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_153, [-0.1168900728225708,1.2314118146896362]=>[1e-05,1.2314118146896362] (15,-1; -1,-1), time: 1.0542s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_7, [-0.8786377906799316,0.16078516840934753]=>[-0.5261316771424919,0.022296363522371354] (2,-1; 2,-1), time: 10.7210s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_193, [-0.9303601980209351,0.21376144886016846]=>[-0.553847000708441,0.1123346546294347] (2,-1; 2,-1), time: 12.1151s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_70, [-0.616887092590332,0.6710951328277588]=>[-0.40392966133687497,0.3366860737409487] (2,-1; 2,-1), time: 8.9250s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_182, [-0.4944831132888794,0.6867545247077942]=>[-0.2049804687300055,0.4874725913187078] (2,-1; 2,-1), time: 6.7368s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_31, [-0.4685465097427368,0.4857938289642334]=>[-0.21590555589041377,0.2965761648671948] (2,-1; 2,-1), time: 11.7718s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_103, [-0.5717156529426575,0.45954352617263794]=>[-0.26180088753810754,0.30009845022299475] (2,-1; 2,-1), time: 11.0618s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_41, [-0.32934415340423584,0.7851905226707458]=>[-0.0634346740414642,0.548890355135509] (2,-1; 2,-1), time: 9.1558s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_166, [-0.2728975713253021,0.7517865896224976]=>[1e-05,0.7517865896224976] (15,-1; -1,-1), time: 6.3640s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_34, [-0.7657552361488342,0.3456472158432007]=>[-0.4776354930093154,0.1998982162243842] (2,-1; 2,-1), time: 10.0689s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_35, [-0.8713939189910889,0.16103136539459229]=>[-0.5353029127322503,0.02871151873385249] (2,-1; 2,-1), time: 14.0227s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_43, [-0.5083036422729492,0.4904603660106659]=>[-0.211349718543409,0.33622012994289135] (2,-1; 2,-1), time: 10.9768s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_197, [-0.7015014886856079,0.39035430550575256]=>[-0.41704656625540526,0.17764287913208515] (2,-1; 2,-1), time: 10.0251s, #vars: 1287, #constrs: 553, improved: True
MIP improved 92 nodes out of 92 unstable nodes, lb improved 15.32078742980957, ub improved 13.796756744384766, time 44.4732
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_190', 'lay6_10', 'lay6_8', 'lay6_61', 'lay6_160', 'lay6_62', 'lay6_159', 'lay6_172', 'lay6_18', 'lay6_167', 'lay6_124', 'lay6_111', 'lay6_179', 'lay6_35', 'lay6_139', 'lay6_101', 'lay6_154', 'lay6_21', 'lay6_88', 'lay6_90', 'lay6_192', 'lay6_3', 'lay6_31', 'lay6_78', 'lay6_65', 'lay6_145', 'lay6_13', 'lay6_49', 'lay6_55', 'lay6_123', 'lay6_106', 'lay6_144', 'lay6_115', 'lay6_110', 'lay6_44', 'lay6_63', 'lay6_130', 'lay6_118', 'lay6_24', 'lay6_105', 'lay6_17', 'lay6_76', 'lay6_98', 'lay6_116', 'lay6_135', 'lay6_9', 'lay6_83', 'lay6_20', 'lay6_74', 'lay6_43', 'lay6_108', 'lay6_156', 'lay6_109', 'lay6_168', 'lay6_42', 'lay6_41', 'lay6_69', 'lay6_103', 'lay6_12', 'lay6_16', 'lay6_4', 'lay6_27', 'lay6_122', 'lay6_153', 'lay6_136', 'lay6_29', 'lay6_121', 'lay6_165', 'lay6_158', 'lay6_52', 'lay6_94', 'lay6_169', 'lay6_119', 'lay6_199', 'lay6_47', 'lay6_163', 'lay6_162', 'lay6_54', 'lay6_175', 'lay6_180', 'lay6_46', 'lay6_53', 'lay6_28', 'lay6_81', 'lay6_146', 'lay6_40', 'lay6_5', 'lay6_138', 'lay6_15', 'lay6_188', 'lay6_73', 'lay6_198', 'lay6_82'] filter: 1.0
Solving MIP for lay6_35, [-1.6462693214416504,0.2576904594898224]=>[-1.6462693214416504,-1e-05] (-1,-1; 15,-1), time: 0.4717s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_179, [-1.2217738628387451,0.3033706545829773]=>[-1.2217738628387451,-1e-05] (-1,-1; 15,-1), time: 0.8208s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_160, [-1.5570127964019775,0.3377619981765747]=>[-1.5570127964019775,-1e-05] (-1,-1; 15,-1), time: 0.8718s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_190, [-1.368378758430481,0.4821636378765106]=>[-1.368378758430481,-1e-05] (-1,-1; 15,-1), time: 1.1501s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_139, [-1.6154119968414307,0.502242922782898]=>[-1.6154119968414307,-1e-05] (-1,-1; 15,-1), time: 1.1819s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_101, [-1.1284205913543701,0.34626299142837524]=>[-1.1284205913543701,-1e-05] (-1,-1; 15,-1), time: 1.5202s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_90, [-1.3877723217010498,0.17072385549545288]=>[-1.3877723217010498,-1e-05] (-1,-1; 15,-1), time: 0.4007s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_21, [-1.085793137550354,0.315613329410553]=>[-1.085793137550354,-1e-05] (-1,-1; 15,-1), time: 0.7459s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_88, [-1.440341591835022,0.27781301736831665]=>[-1.440341591835022,-1e-05] (-1,-1; 15,-1), time: 0.8349s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_159, [-1.4704818725585938,0.47809308767318726]=>[-1.4704818725585938,-1e-05] (-1,-1; 15,-1), time: 1.8469s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_154, [-1.2799370288848877,0.3830936849117279]=>[-1.2799370288848877,-1e-05] (-1,-1; 15,-1), time: 13.0483s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_145, [-1.03800368309021,0.40786582231521606]=>[-1.03800368309021,-1e-05] (-1,-1; 15,-1), time: 12.2097s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_49, [-1.2505418062210083,0.27144497632980347]=>[-1.2505418062210083,-1e-05] (-1,-1; 15,-1), time: 0.3732s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_13, [-1.2057725191116333,0.3120816648006439]=>[-1.2057725191116333,-1e-05] (-1,-1; 15,-1), time: 3.5023s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_123, [-1.729414463043213,0.08792734146118164]=>[-1.729414463043213,-1e-05] (-1,-1; 15,-1), time: 0.3412s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_106, [-1.0958881378173828,0.36423397064208984]=>[-1.0958881378173828,-1e-05] (-1,-1; 15,-1), time: 5.9435s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_144, [-1.2542933225631714,0.3686169683933258]=>[-1.2542933225631714,-1e-05] (-1,-1; 15,-1), time: 1.1699s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_115, [-1.408257007598877,0.1548391580581665]=>[-1.408257007598877,-1e-05] (-1,-1; 15,-1), time: 0.3703s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_124, [-0.7034700512886047,0.8509662747383118]=>[-0.28730114853862415,0.36714635951884256] (9,-1; 9,-1), time: 30.0149s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_172, [-1.0004172325134277,0.6076014041900635]=>[-0.5500727040559296,0.08765045226482586] (9,-1; 9,-1), time: 30.0126s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_18, [-1.2499526739120483,0.4395383596420288]=>[-0.7188170666721759,0.028477826019904617] (9,-1; 9,-1), time: 30.0168s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_111, [-1.0593323707580566,0.7148675918579102]=>[-0.5847306738157011,0.14803599624450547] (9,-1; 9,-1), time: 30.0129s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_61, [-1.1383463144302368,0.4736613929271698]=>[-0.6192703253054522,0.07160461886960343] (9,-1; 9,-1), time: 30.0186s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_10, [-1.3042619228363037,0.8770173192024231]=>[-0.7459832838445235,0.17198388719913232] (9,-1; 9,-1), time: 30.0251s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_167, [-1.0645960569381714,0.7184121608734131]=>[-0.5210831970064129,0.2507237665377478] (9,-1; 9,-1), time: 30.0456s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_8, [-1.3122963905334473,0.5734972953796387]=>[-0.8178450843745315,0.022689248898201626] (9,-1; 9,-1), time: 30.0592s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_62, [-1.3007194995880127,0.6694134473800659]=>[-0.8126631320187281,0.05211365891894076] (9,-1; 9,-1), time: 30.0812s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_44, [-1.7490763664245605,0.1552196890115738]=>[-1.7490763664245605,-1e-05] (-1,-1; 15,-1), time: 0.3649s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_130, [-1.5310261249542236,0.11885999888181686]=>[-1.5310261249542236,-1e-05] (-1,-1; 15,-1), time: 0.3676s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_63, [-1.421838641166687,0.1083686351776123]=>[-1.421838641166687,-1e-05] (-1,-1; 15,-1), time: 0.3722s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_24, [-1.4851596355438232,0.12453824281692505]=>[-1.4851596355438232,-1e-05] (-1,-1; 15,-1), time: 0.3658s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_17, [-1.2271966934204102,0.24409222602844238]=>[-1.2271966934204102,-1e-05] (-1,-1; 15,-1), time: 0.3575s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_98, [-1.3468505144119263,0.13783717155456543]=>[-1.3468505144119263,-1e-05] (-1,-1; 15,-1), time: 0.3638s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_116, [-1.5387701988220215,0.10841161012649536]=>[-1.5387701988220215,-1e-05] (-1,-1; 15,-1), time: 0.3603s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_74, [-1.522874355316162,0.12984400987625122]=>[-1.522874355316162,-1e-05] (-1,-1; 15,-1), time: 0.3535s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_76, [-1.2556302547454834,0.27203941345214844]=>[-1.2556302547454834,-1e-05] (-1,-1; 15,-1), time: 0.7396s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_105, [-1.47062087059021,0.2970501184463501]=>[-1.47062087059021,-1e-05] (-1,-1; 15,-1), time: 0.8213s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_43, [-1.2559831142425537,0.20296049118041992]=>[-1.2559831142425537,-1e-05] (-1,-1; 15,-1), time: 0.3658s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_108, [-1.4975383281707764,0.012977974489331245]=>[-1.4975383281707764,-1e-05] (-1,-1; 15,-1), time: 0.3462s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_83, [-1.3413082361221313,0.255362331867218]=>[-1.3413082361221313,-1e-05] (-1,-1; 15,-1), time: 0.7680s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_192, [-0.7736720442771912,0.9112868309020996]=>[-0.24668518496964958,0.46250767137648247] (9,-1; 9,-1), time: 30.0303s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_168, [-1.1532421112060547,0.21039050817489624]=>[-1.1532421112060547,-1e-05] (-1,-1; 15,-1), time: 0.3669s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_42, [-1.3076016902923584,0.2242080569267273]=>[-1.3076016902923584,-1e-05] (-1,-1; 15,-1), time: 0.3488s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_41, [-1.5668361186981201,0.020583391189575195]=>[-1.5668361186981201,-1e-05] (-1,-1; 15,-1), time: 0.3689s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_3, [-0.7844030261039734,0.8861688375473022]=>[-0.3287057338800179,0.3607550987618501] (9,-1; 9,-1), time: 30.0291s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_31, [-0.752532958984375,0.7433314323425293]=>[-0.2504176249562589,0.3704344716096279] (9,-1; 9,-1), time: 30.0130s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_78, [-0.5928811430931091,0.7807866334915161]=>[-0.16275007410797832,0.3776066332326666] (9,-1; 9,-1), time: 30.0052s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_65, [-0.46619001030921936,0.8342837691307068]=>[-0.09987552413263841,0.4357541554764585] (9,-1; 9,-1), time: 30.0116s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_12, [-1.3323454856872559,0.19481436908245087]=>[-1.3323454856872559,-1e-05] (-1,-1; 15,-1), time: 0.3436s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_16, [-1.7072393894195557,0.09413427114486694]=>[-1.7072393894195557,-1e-05] (-1,-1; 15,-1), time: 0.3625s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_122, [-1.2984265089035034,0.12865984439849854]=>[-1.2984265089035034,-1e-05] (-1,-1; 15,-1), time: 0.3489s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_136, [-1.5142590999603271,0.07551735639572144]=>[-1.5142590999603271,-1e-05] (-1,-1; 15,-1), time: 0.3794s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_29, [-1.7046937942504883,0.08564281463623047]=>[-1.7046937942504883,-1e-05] (-1,-1; 15,-1), time: 0.3548s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_121, [-0.00473394151777029,1.450724482536316]=>[1e-05,1.450724482536316] (15,-1; -1,-1), time: 0.3494s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_4, [-1.4594604969024658,0.40501493215560913]=>[-1.4594604969024658,-1e-05] (-1,-1; 15,-1), time: 0.8912s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_165, [-1.3704110383987427,0.10423970222473145]=>[-1.3704110383987427,-1e-05] (-1,-1; 15,-1), time: 0.3541s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_158, [-0.23083776235580444,1.1485517024993896]=>[1e-05,1.1485517024993896] (15,-1; -1,-1), time: 0.3599s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_52, [-1.284558653831482,0.0767698660492897]=>[-1.284558653831482,-1e-05] (-1,-1; 15,-1), time: 0.3641s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_94, [-0.2361915111541748,1.4053411483764648]=>[1e-05,1.4053411483764648] (15,-1; -1,-1), time: 0.3495s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_119, [-0.24032580852508545,1.337559700012207]=>[1e-05,1.337559700012207] (15,-1; -1,-1), time: 0.3688s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_47, [-1.3189531564712524,0.3558404743671417]=>[-1.3189531564712524,-1e-05] (-1,-1; 15,-1), time: 1.3044s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_162, [-1.4860188961029053,0.22928845882415771]=>[-1.4860188961029053,-1e-05] (-1,-1; 15,-1), time: 0.3464s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_54, [-1.6014719009399414,0.02304580807685852]=>[-1.6014719009399414,-1e-05] (-1,-1; 15,-1), time: 0.3609s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_175, [-1.4278900623321533,0.15832455456256866]=>[-1.4278900623321533,-1e-05] (-1,-1; 15,-1), time: 0.6769s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_27, [-0.4665706157684326,1.545738935470581]=>[1e-05,1.545738935470581] (15,-1; -1,-1), time: 9.5249s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_46, [-0.35587990283966064,1.2483141422271729]=>[1e-05,1.2483141422271729] (15,-1; -1,-1), time: 0.3920s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_53, [-0.10385453701019287,1.8053998947143555]=>[1e-05,1.8053998947143555] (15,-1; -1,-1), time: 0.3749s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_9, [-1.0816006660461426,0.3259052038192749]=>[-1.0816006660461426,-1e-05] (-1,-1; 15,-1), time: 11.8684s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_81, [-0.23386983573436737,1.163901925086975]=>[1e-05,1.163901925086975] (15,-1; -1,-1), time: 0.3743s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_146, [-1.1496398448944092,0.3564527630805969]=>[-1.1496398448944092,-1e-05] (-1,-1; 15,-1), time: 0.8811s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_40, [-1.637477159500122,0.11247694492340088]=>[-1.637477159500122,-1e-05] (-1,-1; 15,-1), time: 0.3670s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_55, [-0.7129338383674622,0.7586348652839661]=>[-0.2232253654020034,0.37424011839919136] (9,-1; 9,-1), time: 30.0247s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_118, [-1.0818042755126953,0.49973681569099426]=>[-1.0818042755126953,-1e-05] (-1,-1; 15,-1), time: 14.7845s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_110, [-1.290709137916565,0.44383054971694946]=>[-0.714297751145055,0.043624886490471644] (9,-1; 9,-1), time: 30.0123s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_135, [-0.9073160886764526,0.5880686044692993]=>[-0.38587479299011124,0.2002807892796931] (9,-1; 9,-1), time: 30.0235s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_20, [-0.8791964054107666,0.6803370714187622]=>[-0.37420596727634764,0.29568516160361835] (9,-1; 9,-1), time: 30.0070s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_73, [-0.13759274780750275,1.3651729822158813]=>[1e-05,1.3651729822158813] (15,-1; -1,-1), time: 0.3633s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_198, [-1.4350252151489258,0.16077890992164612]=>[-1.4350252151489258,-1e-05] (-1,-1; 15,-1), time: 0.3916s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_156, [-0.98568195104599,0.5847926139831543]=>[-0.4596148273437476,0.19287259005515558] (9,-1; 9,-1), time: 30.0671s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_109, [-0.7642151117324829,0.9385167360305786]=>[-0.1805796434260481,0.5897951029136603] (9,-1; 9,-1), time: 30.0404s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_82, [-0.03697049617767334,1.7422726154327393]=>[1e-05,1.7422726154327393] (15,-1; -1,-1), time: 0.3889s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_69, [-0.5952478051185608,1.002531886100769]=>[-0.05668272410637558,0.6306208368609388] (9,-1; 9,-1), time: 30.0049s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_103, [-1.0297318696975708,0.5595611333847046]=>[-0.44415339276656157,0.19157345237848608] (9,-1; 9,-1), time: 30.0220s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_153, [-1.4155142307281494,0.46166402101516724]=>[-0.7696927530048325,0.07644692573302855] (9,-1; 9,-1), time: 30.0070s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_169, [-0.6265940070152283,0.8253803849220276]=>[-0.16960871723025536,0.4251947893244653] (9,-1; 9,-1), time: 30.0281s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_199, [-1.0741455554962158,0.41309797763824463]=>[-0.5818623752537975,0.030870022767262573] (9,-1; 9,-1), time: 30.0083s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_163, [-0.8320561647415161,0.9358543753623962]=>[-0.3540736568015454,0.40029815162468274] (9,-1; 9,-1), time: 30.0076s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_180, [-0.9935446381568909,0.7635881304740906]=>[-0.3551408557725186,0.39787870458108365] (9,-1; 9,-1), time: 30.0060s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_28, [-0.5830639004707336,0.9791156053543091]=>[-0.13751968279451426,0.5042619473966539] (9,-1; 9,-1), time: 30.0207s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_5, [-0.6879875659942627,0.8967911005020142]=>[-0.18872412624778434,0.49441585923089243] (9,-1; 9,-1), time: 30.0294s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_138, [-1.0142011642456055,0.6016661524772644]=>[-0.464820670051563,0.19466509679403102] (9,-1; 9,-1), time: 30.0095s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_15, [-0.8091238141059875,0.9103255271911621]=>[-0.18776465282166843,0.5144442164116181] (9,-1; 9,-1), time: 30.0183s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_188, [-0.7089428305625916,0.7060227394104004]=>[-0.2281071646040344,0.3688088097065598] (9,-1; 9,-1), time: 30.0109s, #vars: 1597, #constrs: 918, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
best_l after optimization: 38.620357513427734 with beta sum per layer: []
alpha/beta optimization time: 15.753440380096436
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.5545, -3.2640, -2.7518, -4.7169, -5.3572, -4.5179, -4.0984, -4.4982,
         -5.8614]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 93 nodes out of 93 unstable nodes, lb improved 18.438051223754883, ub improved 25.828893661499023, time 85.8131
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_76', 'lay8_100', 'lay8_37', 'lay8_162', 'lay8_186', 'lay8_184', 'lay8_91', 'lay8_160', 'lay8_181', 'lay8_28', 'lay8_176', 'lay8_131', 'lay8_22', 'lay8_193', 'lay8_171', 'lay8_150', 'lay8_121', 'lay8_40', 'lay8_71', 'lay8_130', 'lay8_149', 'lay8_60', 'lay8_137', 'lay8_29', 'lay8_159', 'lay8_39', 'lay8_101', 'lay8_11', 'lay8_185', 'lay8_90', 'lay8_167', 'lay8_1', 'lay8_20', 'lay8_103', 'lay8_102', 'lay8_170', 'lay8_21', 'lay8_119', 'lay8_133', 'lay8_99', 'lay8_51', 'lay8_154', 'lay8_192', 'lay8_87', 'lay8_145', 'lay8_4', 'lay8_140', 'lay8_79', 'lay8_153', 'lay8_35', 'lay8_151', 'lay8_49', 'lay8_163', 'lay8_70', 'lay8_129', 'lay8_15', 'lay8_98', 'lay8_123', 'lay8_81', 'lay8_198', 'lay8_64', 'lay8_68', 'lay8_128', 'lay8_155', 'lay8_111', 'lay8_97', 'lay8_168', 'lay8_47', 'lay8_124', 'lay8_117', 'lay8_27', 'lay8_59', 'lay8_33', 'lay8_7', 'lay8_142', 'lay8_134', 'lay8_17', 'lay8_16', 'lay8_178', 'lay8_92', 'lay8_157', 'lay8_25', 'lay8_75', 'lay8_46', 'lay8_53', 'lay8_13', 'lay8_115', 'lay8_96', 'lay8_30', 'lay8_63', 'lay8_36', 'lay8_156', 'lay8_126', 'lay8_174', 'lay8_78', 'lay8_187', 'lay8_114', 'lay8_194', 'lay8_113', 'lay8_55', 'lay8_14', 'lay8_173', 'lay8_112', 'lay8_120', 'lay8_82', 'lay8_58', 'lay8_125', 'lay8_95', 'lay8_85', 'lay8_54', 'lay8_107', 'lay8_165', 'lay8_190', 'lay8_177', 'lay8_164', 'lay8_83', 'lay8_180', 'lay8_110', 'lay8_144', 'lay8_158', 'lay8_169', 'lay8_135', 'lay8_26', 'lay8_43', 'lay8_122', 'lay8_84', 'lay8_196', 'lay8_57', 'lay8_32', 'lay8_86', 'lay8_118', 'lay8_172', 'lay8_2', 'lay8_105'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -52.90973663330078 with beta sum per layer: []
alpha/beta optimization time: 0.11553764343261719
alpha-CROWN with intermediate bounds by MIP: tensor([[6.8332, 6.4584, 6.8443, 6.3193, 5.2714, 5.8442, 4.3754, 5.2390, 5.7245]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
min of alpha-CROWN bounds 4.375443935394287>=0, verified!
MIP finished with 135.64504623413086s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -52.90973663330078 with beta sum per layer: []
alpha/beta optimization time: 0.0819554328918457
alpha-CROWN with intermediate bounds improved by MIP: tensor([[6.8332, 6.4584, 6.8443, 6.3193, 5.2714, 5.8442, 4.3754, 5.2390, 5.7245]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[6.8332, 0.0000, 6.4584, 6.8443, 6.3193, 5.2714, 5.8442, 4.3754, 5.2390,
         5.7245]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
time threshold left for bab: 164.22075819969177
Result: safe-incomplete-refine in 155.4281 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 155.42813658714294
safe-incomplete-refine (total 1): [0]
