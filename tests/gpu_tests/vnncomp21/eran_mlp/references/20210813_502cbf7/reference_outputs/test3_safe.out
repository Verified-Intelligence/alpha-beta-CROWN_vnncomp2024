/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Fri Nov  5 12:30:55 2021 on huan-Super-Server
Namespace(batch_size=64, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', csv_name='eran_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=25, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../vnncomp2021/benchmarks/eran', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', results_file=None, seed=100, share_slopes=False, solve_slope=True, start=24, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[eran_instances]_start=24_end=25_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 24 to 25

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272168290/work/torch/csrc/utils/tensor_numpy.cpp:189.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
##### PGD attack: True label: 1, Tested against: [0, 2, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-2.9098,  7.6321, -1.8309, -2.2877, -1.7661, -0.7274, -1.2836,  0.9114,
        -0.4212, -1.2205], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([10.5418,     inf,  9.4630,  9.9198,  9.3982,  8.3594,  8.9157,  6.7207,
         8.0533,  8.8525], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-3.2749,  8.6015, -2.0694, -2.5680, -2.0008, -0.8726, -1.4305,  1.0257,
         -0.5334, -1.4153]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 5674.1259765625 with beta sum per layer: []
optimal alpha/beta time: 12.058466911315918
initial alpha-CROWN bounds: tensor([[-444.3286, -680.6732, -631.4628, -667.9210, -677.9568, -632.5532,
         -537.2462, -675.9587, -726.0256]], device='cuda:0',
       grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 288.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_153', 'lay4_197', 'lay4_71', 'lay4_24', 'lay4_43', 'lay4_166', 'lay4_30', 'lay4_28', 'lay4_182', 'lay4_34', 'lay4_41', 'lay4_20', 'lay4_70', 'lay4_18', 'lay4_103', 'lay4_35', 'lay4_114', 'lay4_26', 'lay4_31', 'lay4_7', 'lay4_165', 'lay4_193', 'lay4_171', 'lay4_174', 'lay4_162', 'lay4_6', 'lay4_12', 'lay4_123', 'lay4_191', 'lay4_183', 'lay4_98', 'lay4_196', 'lay4_52', 'lay4_107', 'lay4_51', 'lay4_59', 'lay4_172', 'lay4_137', 'lay4_127', 'lay4_168', 'lay4_167', 'lay4_69', 'lay4_129', 'lay4_3', 'lay4_154', 'lay4_145', 'lay4_117', 'lay4_151', 'lay4_138', 'lay4_150', 'lay4_133', 'lay4_115', 'lay4_132', 'lay4_55', 'lay4_8', 'lay4_64', 'lay4_108', 'lay4_176', 'lay4_152', 'lay4_128', 'lay4_50', 'lay4_134', 'lay4_73', 'lay4_33', 'lay4_47', 'lay4_19', 'lay4_175', 'lay4_11', 'lay4_110', 'lay4_194', 'lay4_14', 'lay4_37', 'lay4_139', 'lay4_27', 'lay4_1', 'lay4_178', 'lay4_53', 'lay4_13', 'lay4_142', 'lay4_77', 'lay4_88', 'lay4_95', 'lay4_198', 'lay4_76', 'lay4_136', 'lay4_161', 'lay4_74', 'lay4_92', 'lay4_121', 'lay4_9', 'lay4_84', 'lay4_87'] filter: 1.0
Solving MIP for lay4_28, [-0.9771895408630371,0.058960527181625366]=>[-0.9771895408630371,-1e-05] (-1,-1; 15,-1), time: 0.7673s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_71, [-0.9705390930175781,0.03828483819961548]=>[-0.9705390930175781,-1e-05] (-1,-1; 15,-1), time: 0.8187s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_30, [-1.263728141784668,0.008820325136184692]=>[-1.263728141784668,-1e-05] (-1,-1; 15,-1), time: 0.8388s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_24, [-0.8122946619987488,0.041732847690582275]=>[-0.8122946619987488,-1e-05] (-1,-1; 15,-1), time: 0.8589s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_153, [-0.11689028143882751,1.2314119338989258]=>[1e-05,1.2314119338989258] (15,-1; -1,-1), time: 0.9563s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_165, [-1.0303096771240234,0.03069251775741577]=>[-1.0303096771240234,-1e-05] (-1,-1; 15,-1), time: 0.6002s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_18, [-0.1559164822101593,0.8418304920196533]=>[1e-05,0.8418304920196533] (15,-1; -1,-1), time: 1.5856s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_26, [-0.13713987171649933,0.9202250242233276]=>[1e-05,0.9202250242233276] (15,-1; -1,-1), time: 1.1072s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_20, [-0.7776671051979065,0.17819058895111084]=>[-0.7776671051979065,-1e-05] (-1,-1; 15,-1), time: 3.0390s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_166, [-0.2728976011276245,0.751787006855011]=>[1e-05,0.751787006855011] (15,-1; -1,-1), time: 5.6282s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_34, [-0.7657552361488342,0.3456472158432007]=>[-0.478538804096113,0.19923507510751126] (2,-1; 2,-1), time: 5.8775s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_6, [-0.930596113204956,0.015751928091049194]=>[-0.930596113204956,-1e-05] (-1,-1; 15,-1), time: 0.5552s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_12, [-0.958276629447937,0.038599222898483276]=>[-0.958276629447937,-1e-05] (-1,-1; 15,-1), time: 0.6052s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_123, [-0.9516576528549194,0.010210484266281128]=>[-0.9516576528549194,-1e-05] (-1,-1; 15,-1), time: 0.6069s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_182, [-0.4944831430912018,0.6867547035217285]=>[-0.20330281575561324,0.48900659580885] (2,-1; 2,-1), time: 7.2822s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_114, [-0.24439647793769836,0.6166918277740479]=>[-0.07753599331012104,0.4311407552498238] (2,-1; 2,-1), time: 6.5452s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_162, [-0.36848971247673035,0.7274293899536133]=>[-0.16027822194280403,0.5166864864193523] (2,-1; 2,-1), time: 4.2779s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_70, [-0.6168872117996216,0.6710952520370483]=>[-0.40074617463539575,0.33679469577197746] (2,-1; 2,-1), time: 7.4677s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_41, [-0.3293442726135254,0.7851905822753906]=>[-0.06335082296197024,0.5492110277292589] (2,-1; 2,-1), time: 7.9247s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_107, [-0.9511802792549133,0.04809132218360901]=>[-0.9511802792549133,-1e-05] (-1,-1; 15,-1), time: 0.5625s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_191, [-0.19360142946243286,0.9679176211357117]=>[1e-05,0.9679176211357117] (15,-1; -1,-1), time: 1.6787s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_51, [-1.3213107585906982,0.01678454875946045]=>[-1.3213107585906982,-1e-05] (-1,-1; 15,-1), time: 0.6826s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_59, [-0.10651075094938278,0.9941630363464355]=>[1e-05,0.9941630363464355] (15,-1; -1,-1), time: 0.7110s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_31, [-0.4685465693473816,0.4857943654060364]=>[-0.21767913490092228,0.297159960908714] (2,-1; 2,-1), time: 8.1064s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_98, [-1.0219391584396362,0.19870111346244812]=>[-1.0219391584396362,-1e-05] (-1,-1; 15,-1), time: 1.6743s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_137, [-0.9636625051498413,0.06930080056190491]=>[-0.9636625051498413,-1e-05] (-1,-1; 15,-1), time: 0.5450s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_197, [-0.701501727104187,0.39035463333129883]=>[-0.41658374837813184,0.1825425023551215] (2,-1; 2,-1), time: 9.1983s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_174, [-0.6937412619590759,0.37845003604888916]=>[-0.48724002717475456,0.11479420890696472] (2,-1; 2,-1), time: 7.3963s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_167, [-0.8897384405136108,0.07338565587997437]=>[-0.8897384405136108,-1e-05] (-1,-1; 15,-1), time: 0.6049s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_129, [-0.8139476776123047,0.13518665730953217]=>[-0.8139476776123047,-1e-05] (-1,-1; 15,-1), time: 0.8849s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_69, [-0.8208523988723755,0.14695346355438232]=>[-0.8208523988723755,-1e-05] (-1,-1; 15,-1), time: 0.9305s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_52, [-0.8158796429634094,0.2005871683359146]=>[-0.8158796429634094,-1e-05] (-1,-1; 15,-1), time: 2.8265s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_43, [-0.5083038210868835,0.4904606342315674]=>[-0.211251202820197,0.33662555538171984] (2,-1; 2,-1), time: 10.7808s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_145, [-0.9305374622344971,0.12097886204719543]=>[-0.9305374622344971,-1e-05] (-1,-1; 15,-1), time: 0.8043s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_117, [-1.0263786315917969,0.1100071519613266]=>[-1.0263786315917969,-1e-05] (-1,-1; 15,-1), time: 1.0224s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_7, [-0.8786377906799316,0.1607852727174759]=>[-0.5260317043599161,0.023622621378931147] (2,-1; 2,-1), time: 10.5030s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_103, [-0.5717160701751709,0.4595436155796051]=>[-0.26207234972099086,0.3050538671138103] (2,-1; 2,-1), time: 11.4189s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_35, [-0.8713940382003784,0.1610316038131714]=>[-0.5346351239815255,0.029693641973106536] (2,-1; 2,-1), time: 11.4523s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_196, [-0.8179396986961365,0.21830829977989197]=>[-0.8179396986961365,-1e-05] (-1,-1; 15,-1), time: 4.2001s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_150, [-0.8206443786621094,0.055956363677978516]=>[-0.8206443786621094,-1e-05] (-1,-1; 15,-1), time: 0.6431s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_55, [-0.8935630321502686,0.15435528755187988]=>[-0.8935630321502686,-1e-05] (-1,-1; 15,-1), time: 0.8831s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_171, [-0.35413673520088196,0.6589972972869873]=>[-0.041716595832397736,0.5196626506637315] (2,-1; 2,-1), time: 11.1788s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_193, [-0.9303602576255798,0.21376153826713562]=>[-0.5537279741349178,0.11231816403413197] (2,-1; 2,-1), time: 11.2703s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_108, [-1.0073009729385376,0.09247836470603943]=>[-1.0073009729385376,-1e-05] (-1,-1; 15,-1), time: 0.5980s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_128, [-0.9599279761314392,0.08632341027259827]=>[-0.9599279761314392,-1e-05] (-1,-1; 15,-1), time: 0.7059s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_176, [-0.840705156326294,0.13145044445991516]=>[-0.840705156326294,-1e-05] (-1,-1; 15,-1), time: 0.9708s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_183, [-0.4484071135520935,0.5308486819267273]=>[-0.289784734713547,0.2553971720751185] (2,-1; 2,-1), time: 7.0958s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_154, [-0.8964296579360962,0.1296546459197998]=>[-0.6560796616688537,0.0008631421750129112] (2,-1; 2,-1), time: 4.4391s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_73, [-1.117133378982544,0.05698317289352417]=>[-1.117133378982544,-1e-05] (-1,-1; 15,-1), time: 0.6048s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_134, [-0.954936146736145,0.2068876028060913]=>[-0.954936146736145,-1e-05] (-1,-1; 15,-1), time: 1.4595s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_138, [-0.712756335735321,0.15136313438415527]=>[-0.4782193380624236,0.046082449572676924] (2,-1; 2,-1), time: 5.4086s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_168, [-0.6058056354522705,0.34910500049591064]=>[-0.40262289748684993,0.13841106756544527] (2,-1; 2,-1), time: 7.3506s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_11, [-1.0318974256515503,0.09240692853927612]=>[-1.0318974256515503,-1e-05] (-1,-1; 15,-1), time: 0.6745s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_172, [-0.6443428993225098,0.3274085521697998]=>[-0.39480387397169975,0.13451591077393552] (2,-1; 2,-1), time: 9.1097s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_175, [-0.19092309474945068,1.0093555450439453]=>[1e-05,1.0093555450439453] (15,-1; -1,-1), time: 1.1164s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_8, [-0.6111477613449097,0.47202184796333313]=>[-0.3895796196264999,0.21191939856791694] (2,-1; 2,-1), time: 6.3373s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_133, [-0.36142081022262573,0.5048483610153198]=>[-0.1111071430498183,0.38037075942921356] (2,-1; 2,-1), time: 6.7758s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_152, [-0.42525458335876465,0.785666823387146]=>[-0.21169748816809975,0.5259027975980389] (2,-1; 2,-1), time: 5.2459s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_33, [-0.6781495809555054,0.6551966071128845]=>[-0.5133907922753429,0.34972642395896864] (2,-1; 2,-1), time: 4.2405s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_194, [-1.085821509361267,0.12080979347229004]=>[-1.085821509361267,-1e-05] (-1,-1; 15,-1), time: 0.9840s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_47, [-0.6228351593017578,0.4468674063682556]=>[-0.39779928154600946,0.2510382749771648] (2,-1; 2,-1), time: 4.1762s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_64, [-0.7629866600036621,0.34213680028915405]=>[-0.4768478606836773,0.1864405327868732] (2,-1; 2,-1), time: 7.4922s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_115, [-0.5779631733894348,0.3828200697898865]=>[-0.32115814702545736,0.19451440916039675] (2,-1; 2,-1), time: 8.3783s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_139, [-0.39154064655303955,0.5600348711013794]=>[-0.1811735476151944,0.42573472572633486] (2,-1; 2,-1), time: 2.7919s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_142, [-0.9945893883705139,0.1309608817100525]=>[-0.9945893883705139,-1e-05] (-1,-1; 15,-1), time: 0.9905s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_50, [-0.7499904632568359,0.4242095947265625]=>[-0.4761663607774234,0.18222408964348177] (2,-1; 2,-1), time: 7.3077s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_151, [-0.315396249294281,0.7762151956558228]=>[-0.07206840261286376,0.488656338634694] (2,-1; 2,-1), time: 10.9324s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_127, [-0.945396363735199,0.18190354108810425]=>[-0.548742206004202,0.1049292205412423] (2,-1; 2,-1), time: 12.4296s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_14, [-0.7491543292999268,0.18908780813217163]=>[-0.5334413987011373,0.01720673216510319] (2,-1; 2,-1), time: 6.9157s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_88, [-0.37901216745376587,0.6738684177398682]=>[-0.23707053061529113,0.43833282347911867] (2,-1; 2,-1), time: 4.0188s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_95, [-0.30135223269462585,0.8148792386054993]=>[-0.02171972955310418,0.6876471367042732] (2,-1; 2,-1), time: 4.5391s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_178, [-0.9593334197998047,0.2593817710876465]=>[-0.6774800458808922,0.041627527592281784] (2,-1; 2,-1), time: 7.5292s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_1, [-0.6760386228561401,0.3751853406429291]=>[-0.44266811629427183,0.1314671366852682] (2,-1; 2,-1), time: 7.6193s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_3, [-0.6396583318710327,0.449235200881958]=>[-0.3016488150608099,0.27023967445344504] (9,-1; 2,-1), time: 17.2902s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_53, [-0.4681783616542816,0.7430847883224487]=>[-0.1458388896791985,0.5261308560747545] (2,-1; 2,-1), time: 7.9808s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_77, [-0.6830223798751831,0.24533432722091675]=>[-0.5078422920794996,0.028374372939698352] (2,-1; 2,-1), time: 6.0348s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_76, [-0.6439641714096069,0.46406567096710205]=>[-0.38153807941910545,0.2536602961329403] (2,-1; 2,-1), time: 6.1124s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_13, [-0.6986517906188965,0.3846144676208496]=>[-0.401355748253721,0.21081097629869033] (2,-1; 2,-1), time: 8.3999s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_132, [-0.7888990044593811,0.26220783591270447]=>[-0.46725572960714357,0.11748464484032672] (9,-1; 2,-1), time: 16.1156s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_37, [-0.5571379065513611,0.5724775195121765]=>[-0.28984411346118905,0.30698526929290165] (2,-1; 2,-1), time: 9.7105s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_198, [-0.8150817155838013,0.3931713402271271]=>[-0.573714869898309,0.11489262765198488] (2,-1; 2,-1), time: 6.6929s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_136, [-0.39295944571495056,0.7452507019042969]=>[-0.14202061306459923,0.5304302564166441] (2,-1; 2,-1), time: 5.2774s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_19, [-0.6888917088508606,0.4130505919456482]=>[-0.3264628449710715,0.3091290658013644] (2,-1; 2,-1), time: 14.7794s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_87, [-0.8227161765098572,0.4648897349834442]=>[-0.5814043286668552,0.2573553711873691] (2,-1; 2,-1), time: 4.2112s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_9, [-0.7582209706306458,0.28569018840789795]=>[-0.5450243224707261,0.09539278232098902] (2,-1; 2,-1), time: 5.3477s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_84, [-0.6039925217628479,0.5753710269927979]=>[-0.3443278842889923,0.3642720922693975] (2,-1; 2,-1), time: 5.4980s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_161, [-0.6374801397323608,0.37470996379852295]=>[-0.3818252473935941,0.18034457647829827] (2,-1; 2,-1), time: 9.0507s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_121, [-0.9355599880218506,0.28792309761047363]=>[-0.6260978454233366,0.038389225184252994] (2,-1; 2,-1), time: 8.2535s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_92, [-0.399070143699646,0.8049237728118896]=>[-0.24256239211294497,0.45542491488254944] (2,-1; 2,-1), time: 8.5012s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_27, [-0.8083299398422241,0.26218152046203613]=>[-0.49941429387528113,0.1062541372529549] (9,-1; 2,-1), time: 16.4115s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_74, [-0.5861639976501465,0.5030632019042969]=>[-0.28613643322338456,0.29975479658788073] (2,-1; 2,-1), time: 9.3974s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_110, [-0.6314818263053894,0.3824288547039032]=>[-0.3404470242440664,0.18572457933432565] (9,-1; 2,-1), time: 18.2193s, #vars: 1287, #constrs: 553, improved: True
MIP improved 92 nodes out of 92 unstable nodes, lb improved 15.492744445800781, ub improved 13.77920150756836, time 35.7384
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_82', 'lay6_198', 'lay6_73', 'lay6_188', 'lay6_15', 'lay6_138', 'lay6_5', 'lay6_40', 'lay6_146', 'lay6_81', 'lay6_28', 'lay6_53', 'lay6_46', 'lay6_180', 'lay6_175', 'lay6_54', 'lay6_162', 'lay6_163', 'lay6_47', 'lay6_199', 'lay6_119', 'lay6_169', 'lay6_94', 'lay6_52', 'lay6_158', 'lay6_165', 'lay6_121', 'lay6_29', 'lay6_136', 'lay6_153', 'lay6_122', 'lay6_27', 'lay6_4', 'lay6_16', 'lay6_12', 'lay6_103', 'lay6_69', 'lay6_41', 'lay6_42', 'lay6_168', 'lay6_109', 'lay6_156', 'lay6_108', 'lay6_43', 'lay6_74', 'lay6_20', 'lay6_83', 'lay6_9', 'lay6_135', 'lay6_116', 'lay6_98', 'lay6_76', 'lay6_17', 'lay6_105', 'lay6_24', 'lay6_118', 'lay6_130', 'lay6_63', 'lay6_44', 'lay6_110', 'lay6_115', 'lay6_144', 'lay6_106', 'lay6_123', 'lay6_55', 'lay6_49', 'lay6_13', 'lay6_145', 'lay6_65', 'lay6_78', 'lay6_31', 'lay6_3', 'lay6_192', 'lay6_90', 'lay6_88', 'lay6_21', 'lay6_154', 'lay6_101', 'lay6_139', 'lay6_35', 'lay6_179', 'lay6_111', 'lay6_124', 'lay6_167', 'lay6_18', 'lay6_172', 'lay6_159', 'lay6_62', 'lay6_160', 'lay6_61', 'lay6_8', 'lay6_10', 'lay6_190'] filter: 1.0
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
Solving MIP for lay6_40, [-1.6374773979187012,0.11247938871383667]=>[-1.6374773979187012,-1e-05] (-1,-1; 15,-1), time: 0.4112s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_53, [-0.10386359691619873,1.805400013923645]=>[1e-05,1.805400013923645] (15,-1; -1,-1), time: 0.4120s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_81, [-0.2338697910308838,1.1639058589935303]=>[1e-05,1.1639058589935303] (15,-1; -1,-1), time: 0.4127s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_54, [-1.6014717817306519,0.023065149784088135]=>[-1.6014717817306519,-1e-05] (-1,-1; 15,-1), time: 0.4132s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_46, [-0.35588592290878296,1.2483142614364624]=>[1e-05,1.2483142614364624] (15,-1; -1,-1), time: 0.4183s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_198, [-1.4350250959396362,0.1607794165611267]=>[-1.4350250959396362,-1e-05] (-1,-1; 15,-1), time: 0.4179s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_73, [-0.13759273290634155,1.3651728630065918]=>[1e-05,1.3651728630065918] (15,-1; -1,-1), time: 0.4241s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_82, [-0.036972641944885254,1.7422752380371094]=>[1e-05,1.7422752380371094] (15,-1; -1,-1), time: 0.4241s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_94, [-0.23619133234024048,1.405341386795044]=>[1e-05,1.405341386795044] (15,-1; -1,-1), time: 0.2851s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_175, [-1.4278901815414429,0.15832462906837463]=>[-1.4278901815414429,-1e-05] (-1,-1; 15,-1), time: 0.7126s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_52, [-1.2845587730407715,0.07676976919174194]=>[-1.2845587730407715,-1e-05] (-1,-1; 15,-1), time: 0.3309s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_119, [-0.24033033847808838,1.3375643491744995]=>[1e-05,1.3375643491744995] (15,-1; -1,-1), time: 0.3441s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_162, [-1.4860303401947021,0.22929048538208008]=>[-1.4860303401947021,-1e-05] (-1,-1; 15,-1), time: 0.3745s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_146, [-1.1496398448944092,0.35645580291748047]=>[-1.1496398448944092,-1e-05] (-1,-1; 15,-1), time: 0.8905s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_158, [-0.230837881565094,1.1485559940338135]=>[1e-05,1.1485559940338135] (15,-1; -1,-1), time: 0.3451s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_165, [-1.3704109191894531,0.10424131155014038]=>[-1.3704109191894531,-1e-05] (-1,-1; 15,-1), time: 0.3481s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_121, [-0.004733920097351074,1.450724482536316]=>[1e-05,1.450724482536316] (15,-1; -1,-1), time: 0.3282s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_29, [-1.704694151878357,0.08565318584442139]=>[-1.704694151878357,-1e-05] (-1,-1; 15,-1), time: 0.3287s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_136, [-1.5142590999603271,0.07552146911621094]=>[-1.5142590999603271,-1e-05] (-1,-1; 15,-1), time: 0.3840s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_122, [-1.2984265089035034,0.12866252660751343]=>[-1.2984265089035034,-1e-05] (-1,-1; 15,-1), time: 0.3215s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_16, [-1.7072393894195557,0.09413421154022217]=>[-1.7072393894195557,-1e-05] (-1,-1; 15,-1), time: 0.3270s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_12, [-1.3323454856872559,0.19481438398361206]=>[-1.3323454856872559,-1e-05] (-1,-1; 15,-1), time: 0.3774s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_47, [-1.318953037261963,0.3558405041694641]=>[-1.318953037261963,-1e-05] (-1,-1; 15,-1), time: 1.1836s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_42, [-1.307607650756836,0.22421151399612427]=>[-1.307607650756836,-1e-05] (-1,-1; 15,-1), time: 0.2733s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_4, [-1.4594626426696777,0.4050220847129822]=>[-1.4594626426696777,-1e-05] (-1,-1; 15,-1), time: 0.8215s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_41, [-1.5668413639068604,0.02058398723602295]=>[-1.5668413639068604,-1e-05] (-1,-1; 15,-1), time: 0.3739s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_168, [-1.1532423496246338,0.21040070056915283]=>[-1.1532423496246338,-1e-05] (-1,-1; 15,-1), time: 0.2848s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_108, [-1.4975383281707764,0.012978017330169678]=>[-1.4975383281707764,-1e-05] (-1,-1; 15,-1), time: 0.2877s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_43, [-1.2559833526611328,0.20296049118041992]=>[-1.2559833526611328,-1e-05] (-1,-1; 15,-1), time: 0.2906s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_74, [-1.522874355316162,0.1298443078994751]=>[-1.522874355316162,-1e-05] (-1,-1; 15,-1), time: 0.2986s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_27, [-0.46657291054725647,1.5457391738891602]=>[1e-05,1.5457391738891602] (15,-1; -1,-1), time: 7.0583s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_83, [-1.3413081169128418,0.25536441802978516]=>[-1.3413081169128418,-1e-05] (-1,-1; 15,-1), time: 0.6288s, #vars: 1597, #constrs: 918, improved: True
best_l after optimization: 35.20269775390625 with beta sum per layer: []
optimal alpha/beta time: 14.379596948623657
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.2520, -2.8741, -2.3706, -4.3152, -4.9516, -4.1452, -3.7779, -4.0834,
         -5.4326]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay6_9, [-1.0816006660461426,0.32590582966804504]=>[-1.0816006660461426,-1e-05] (-1,-1; 15,-1), time: 11.4691s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_138, [-1.0142011642456055,0.6016660928726196]=>[-0.4698096458283027,0.19553305854511258] (9,-1; 9,-1), time: 30.0108s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_15, [-0.8091245889663696,0.9103263020515442]=>[-0.19139351587043757,0.5133386878895281] (9,-1; 9,-1), time: 30.0116s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_188, [-0.7089427709579468,0.7060255408287048]=>[-0.21494937814431897,0.37514566344621286] (9,-1; 9,-1), time: 30.0116s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_180, [-0.9935458898544312,0.7635923624038696]=>[-0.343468790042663,0.39288102131386116] (9,-1; 9,-1), time: 30.0133s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_5, [-0.6879881620407104,0.8967913389205933]=>[-0.1934499232587787,0.4949905793720624] (9,-1; 9,-1), time: 30.0626s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_28, [-0.5830639600753784,0.9791192412376404]=>[-0.1326494370623108,0.49275576209078725] (9,-1; 9,-1), time: 30.0689s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_98, [-1.3468502759933472,0.1378384828567505]=>[-1.3468502759933472,-1e-05] (-1,-1; 15,-1), time: 0.2947s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_116, [-1.5387743711471558,0.10841232538223267]=>[-1.5387743711471558,-1e-05] (-1,-1; 15,-1), time: 0.2975s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_17, [-1.227198839187622,0.24409466981887817]=>[-1.227198839187622,-1e-05] (-1,-1; 15,-1), time: 0.2920s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_24, [-1.4851607084274292,0.12456005811691284]=>[-1.4851607084274292,-1e-05] (-1,-1; 15,-1), time: 0.2992s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_163, [-0.8320571780204773,0.9358752369880676]=>[-0.32089748528427325,0.38954303367820925] (9,-1; 9,-1), time: 30.0059s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_199, [-1.0741455554962158,0.4131022095680237]=>[-0.5763906802756932,0.030775625952924983] (9,-1; 9,-1), time: 30.0054s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_169, [-0.6265943646430969,0.8253804445266724]=>[-0.16738291423474325,0.4036396970418633] (9,-1; 9,-1), time: 30.0193s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_76, [-1.255631446838379,0.2720438241958618]=>[-1.255631446838379,-1e-05] (-1,-1; 15,-1), time: 0.5838s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_63, [-1.4218385219573975,0.10836941003799438]=>[-1.4218385219573975,-1e-05] (-1,-1; 15,-1), time: 0.2904s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_130, [-1.5310256481170654,0.11885994672775269]=>[-1.5310256481170654,-1e-05] (-1,-1; 15,-1), time: 0.2938s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_44, [-1.749076247215271,0.15521979331970215]=>[-1.749076247215271,-1e-05] (-1,-1; 15,-1), time: 0.2873s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_105, [-1.4706206321716309,0.2970500588417053]=>[-1.4706206321716309,-1e-05] (-1,-1; 15,-1), time: 0.6483s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_115, [-1.408257007598877,0.1548391580581665]=>[-1.408257007598877,-1e-05] (-1,-1; 15,-1), time: 0.2920s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_123, [-1.7294154167175293,0.0879281759262085]=>[-1.7294154167175293,-1e-05] (-1,-1; 15,-1), time: 0.2900s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_153, [-1.415515661239624,0.46167540550231934]=>[-0.7631498475058006,0.06050857795399357] (9,-1; 9,-1), time: 30.0124s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_49, [-1.2505427598953247,0.27144771814346313]=>[-1.2505427598953247,-1e-05] (-1,-1; 15,-1), time: 0.2941s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_144, [-1.2542932033538818,0.36861711740493774]=>[-1.2542932033538818,-1e-05] (-1,-1; 15,-1), time: 0.9036s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_103, [-1.0297319889068604,0.5595698356628418]=>[-0.43799578630246505,0.1826783614030022] (9,-1; 9,-1), time: 30.0249s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_69, [-0.595247745513916,1.0025317668914795]=>[-0.05623891342774167,0.595439350602504] (9,-1; 9,-1), time: 30.0193s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_90, [-1.387772560119629,0.1707240343093872]=>[-1.387772560119629,-1e-05] (-1,-1; 15,-1), time: 0.2864s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_109, [-0.7642152309417725,0.9385195970535278]=>[-0.18370131025319197,0.5704396269347224] (9,-1; 9,-1), time: 30.0193s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_156, [-0.9856812357902527,0.5848005414009094]=>[-0.45518251042197344,0.19541737718612961] (9,-1; 9,-1), time: 30.0160s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_88, [-1.4403417110443115,0.2778133749961853]=>[-1.4403417110443115,-1e-05] (-1,-1; 15,-1), time: 0.5756s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_21, [-1.0858073234558105,0.3156155049800873]=>[-1.0858073234558105,-1e-05] (-1,-1; 15,-1), time: 0.6003s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_13, [-1.2057726383209229,0.31208181381225586]=>[-1.2057726383209229,-1e-05] (-1,-1; 15,-1), time: 2.2773s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_20, [-0.8791963458061218,0.680337131023407]=>[-0.34757936059309746,0.2805302613333791] (9,-1; 9,-1), time: 30.0052s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_35, [-1.6462695598602295,0.2576904296875]=>[-1.6462695598602295,-1e-05] (-1,-1; 15,-1), time: 0.2912s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_101, [-1.1284205913543701,0.3462640047073364]=>[-1.1284205913543701,-1e-05] (-1,-1; 15,-1), time: 1.0668s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_139, [-1.6154146194458008,0.5022430419921875]=>[-1.6154146194458008,-1e-05] (-1,-1; 15,-1), time: 0.9155s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_179, [-1.2217744588851929,0.3033719062805176]=>[-1.2217744588851929,-1e-05] (-1,-1; 15,-1), time: 0.6404s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_106, [-1.0958881378173828,0.3642358183860779]=>[-1.0958881378173828,-1e-05] (-1,-1; 15,-1), time: 5.5947s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_145, [-1.038003921508789,0.4078702926635742]=>[-1.038003921508789,-1e-05] (-1,-1; 15,-1), time: 9.1742s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_159, [-1.4705134630203247,0.4780985116958618]=>[-1.4705134630203247,-1e-05] (-1,-1; 15,-1), time: 1.3413s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_154, [-1.2799410820007324,0.3830958306789398]=>[-1.2799410820007324,-1e-05] (-1,-1; 15,-1), time: 11.4877s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_160, [-1.5570135116577148,0.3377620577812195]=>[-1.5570135116577148,-1e-05] (-1,-1; 15,-1), time: 0.2982s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_135, [-0.9073160886764526,0.5880692005157471]=>[-0.3844404477724257,0.18468507779880858] (9,-1; 9,-1), time: 30.0752s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_118, [-1.0818042755126953,0.4997369050979614]=>[-0.6479585780480976,0.008782955312595635] (9,-1; 9,-1), time: 30.0648s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_110, [-1.290709137916565,0.44383785128593445]=>[-0.7039851403284053,0.04783026119007724] (9,-1; 9,-1), time: 30.0057s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_55, [-0.7129334807395935,0.7586349248886108]=>[-0.22149630665830738,0.370141783305102] (9,-1; 9,-1), time: 30.0218s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_78, [-0.5928810834884644,0.7807878255844116]=>[-0.14920666121204923,0.36042264880995906] (9,-1; 9,-1), time: 30.0040s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_65, [-0.4661945104598999,0.8342897891998291]=>[-0.10327333751505093,0.44315818857292977] (9,-1; 9,-1), time: 30.0157s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_31, [-0.7525337934494019,0.743332028388977]=>[-0.24698483689368023,0.3537135766662408] (9,-1; 9,-1), time: 30.0251s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_190, [-1.36837899684906,0.4821634292602539]=>[-1.36837899684906,-1e-05] (-1,-1; 15,-1), time: 0.7074s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_3, [-0.7844030857086182,0.8861688375473022]=>[-0.31471169789018766,0.35555823547446985] (9,-1; 9,-1), time: 30.0149s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_192, [-0.7736719250679016,0.9112869501113892]=>[-0.23841220460525656,0.4639969267811379] (9,-1; 9,-1), time: 30.0269s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_111, [-1.0593377351760864,0.7148714065551758]=>[-0.5814113920838614,0.1395822631793545] (9,-1; 9,-1), time: 30.0048s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_124, [-0.70346999168396,0.8509678840637207]=>[-0.2798678100048075,0.3605390549058591] (9,-1; 9,-1), time: 30.0220s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_167, [-1.0645959377288818,0.7184123396873474]=>[-0.5300571680579454,0.2468502238935107] (9,-1; 9,-1), time: 30.0240s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_18, [-1.2499525547027588,0.4395383894443512]=>[-0.6981998420707249,0.02233903153531801] (9,-1; 9,-1), time: 30.0046s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_172, [-1.0004254579544067,0.607601523399353]=>[-0.5517126900641127,0.09729281513448658] (9,-1; 9,-1), time: 30.0315s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_62, [-1.300720453262329,0.6694136261940002]=>[-0.8167392644988388,0.0438480611806846] (9,-1; 9,-1), time: 30.0179s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_61, [-1.1383460760116577,0.4736613631248474]=>[-0.6041951815805903,0.06020754543117299] (9,-1; 9,-1), time: 30.0088s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_8, [-1.3122996091842651,0.5734972953796387]=>[-0.8117401565027228,0.004652727754469712] (9,-1; 9,-1), time: 30.0127s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_10, [-1.3042619228363037,0.8770174980163574]=>[-0.7329909532880448,0.16606114543949752] (9,-1; 9,-1), time: 30.0180s, #vars: 1597, #constrs: 918, improved: True
MIP improved 93 nodes out of 93 unstable nodes, lb improved 19.070438385009766, ub improved 26.059276580810547, time 90.8963
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_105', 'lay8_2', 'lay8_172', 'lay8_118', 'lay8_86', 'lay8_32', 'lay8_57', 'lay8_196', 'lay8_84', 'lay8_122', 'lay8_43', 'lay8_26', 'lay8_135', 'lay8_169', 'lay8_158', 'lay8_144', 'lay8_110', 'lay8_180', 'lay8_83', 'lay8_164', 'lay8_177', 'lay8_190', 'lay8_165', 'lay8_107', 'lay8_54', 'lay8_85', 'lay8_95', 'lay8_125', 'lay8_58', 'lay8_82', 'lay8_120', 'lay8_112', 'lay8_173', 'lay8_14', 'lay8_55', 'lay8_113', 'lay8_194', 'lay8_114', 'lay8_187', 'lay8_78', 'lay8_174', 'lay8_126', 'lay8_156', 'lay8_36', 'lay8_63', 'lay8_30', 'lay8_96', 'lay8_115', 'lay8_13', 'lay8_53', 'lay8_46', 'lay8_75', 'lay8_25', 'lay8_157', 'lay8_92', 'lay8_178', 'lay8_16', 'lay8_17', 'lay8_134', 'lay8_142', 'lay8_7', 'lay8_33', 'lay8_59', 'lay8_27', 'lay8_117', 'lay8_124', 'lay8_47', 'lay8_168', 'lay8_97', 'lay8_111', 'lay8_155', 'lay8_128', 'lay8_68', 'lay8_64', 'lay8_198', 'lay8_81', 'lay8_123', 'lay8_98', 'lay8_15', 'lay8_129', 'lay8_70', 'lay8_163', 'lay8_49', 'lay8_151', 'lay8_35', 'lay8_153', 'lay8_79', 'lay8_140', 'lay8_4', 'lay8_145', 'lay8_87', 'lay8_192', 'lay8_154', 'lay8_51', 'lay8_99', 'lay8_133', 'lay8_119', 'lay8_21', 'lay8_170', 'lay8_102', 'lay8_103', 'lay8_20', 'lay8_1', 'lay8_167', 'lay8_90', 'lay8_185', 'lay8_11', 'lay8_101', 'lay8_39', 'lay8_159', 'lay8_29', 'lay8_137', 'lay8_60', 'lay8_149', 'lay8_130', 'lay8_71', 'lay8_40', 'lay8_121', 'lay8_150', 'lay8_171', 'lay8_193', 'lay8_22', 'lay8_131', 'lay8_176', 'lay8_28', 'lay8_181', 'lay8_160', 'lay8_91', 'lay8_184', 'lay8_186', 'lay8_162', 'lay8_37', 'lay8_100', 'lay8_76'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.71058654785156 with beta sum per layer: []
optimal alpha/beta time: 0.09120321273803711
alpha-CROWN with intermediate bounds by MIP: tensor([[6.9293, 6.5307, 6.9310, 6.4066, 5.3917, 5.9229, 4.4520, 5.3287, 5.8176]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
min of alpha-CROWN bounds 4.4519500732421875>=0, verified!
MIP finished with 130.28178524971008s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.71058654785156 with beta sum per layer: []
optimal alpha/beta time: 0.0669102668762207
alpha-CROWN with intermediate bounds improved by MIP: tensor([[6.9293, 6.5307, 6.9310, 6.4066, 5.3917, 5.9229, 4.4520, 5.3287, 5.8176]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[6.9293, 0.0000, 6.5307, 6.9310, 6.4066, 5.3917, 5.9229, 4.4520, 5.3287,
         5.8176]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 146.3475 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 146.3474793434143
safe-incomplete-refine (total 1): [0]
