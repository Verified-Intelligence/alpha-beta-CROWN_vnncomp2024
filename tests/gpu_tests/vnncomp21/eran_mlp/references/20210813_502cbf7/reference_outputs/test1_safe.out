/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Fri Nov  5 02:08:45 2021 on huan-Super-Server
Namespace(batch_size=64, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='bab-refine', conv_mode='patches', csv_name='eran_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=2, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../vnncomp2021/benchmarks/eran', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', results_file=None, seed=100, share_slopes=False, solve_slope=True, start=1, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[eran_instances]_start=1_end=2_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 1 to 2

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272168290/work/torch/csrc/utils/tensor_numpy.cpp:189.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
##### PGD attack: True label: 9, Tested against: [0, 1, 2, 3, 4, 5, 6, 7, 8] ######
pgd prediction: tensor([-5.3901, -2.6781, -2.1905,  0.5082,  3.2935, -0.6897, -4.1349,  2.1183,
         0.3938,  8.8412], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([14.2314, 11.5193, 11.0317,  8.3330,  5.5477,  9.5310, 12.9761,  6.7229,
         8.4474,     inf], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-5.9429, -2.9649, -2.4281,  0.6550,  3.5017, -0.8045, -4.5906,  2.4643,
          0.3444,  9.7554]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 4990.0458984375 with beta sum per layer: []
optimal alpha/beta time: 11.903349161148071
initial alpha-CROWN bounds: tensor([[-416.3831, -584.9424, -718.1423, -700.2354, -528.8560, -573.4406,
         -673.0519, -323.9541, -471.0401]], device='cuda:0',
       grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 288.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_47', 'lay4_65', 'lay4_52', 'lay4_104', 'lay4_32', 'lay4_82', 'lay4_11', 'lay4_163', 'lay4_175', 'lay4_90', 'lay4_80', 'lay4_24', 'lay4_53', 'lay4_48', 'lay4_138', 'lay4_155', 'lay4_1', 'lay4_26', 'lay4_151', 'lay4_145', 'lay4_99', 'lay4_140', 'lay4_3', 'lay4_196', 'lay4_153', 'lay4_176', 'lay4_77', 'lay4_6', 'lay4_152', 'lay4_143', 'lay4_114', 'lay4_28', 'lay4_131', 'lay4_137', 'lay4_112', 'lay4_199', 'lay4_43', 'lay4_171', 'lay4_95', 'lay4_44', 'lay4_101', 'lay4_195', 'lay4_123', 'lay4_168', 'lay4_129', 'lay4_198', 'lay4_139', 'lay4_91', 'lay4_31', 'lay4_178', 'lay4_88', 'lay4_81', 'lay4_116', 'lay4_187', 'lay4_37', 'lay4_161', 'lay4_12', 'lay4_86', 'lay4_169', 'lay4_189', 'lay4_173', 'lay4_45', 'lay4_55', 'lay4_102', 'lay4_57', 'lay4_144', 'lay4_17', 'lay4_115', 'lay4_148', 'lay4_29', 'lay4_92', 'lay4_14', 'lay4_162', 'lay4_157', 'lay4_183', 'lay4_16', 'lay4_54', 'lay4_182', 'lay4_76', 'lay4_109', 'lay4_160', 'lay4_70', 'lay4_167', 'lay4_97'] filter: 1.0
Solving MIP for lay4_82, [-1.1208574771881104,0.033185094594955444]=>[-1.1208574771881104,-1e-05] (-1,-1; 15,-1), time: 0.4381s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_163, [-0.8243817090988159,0.08394493162631989]=>[-0.8243817090988159,-1e-05] (-1,-1; 15,-1), time: 0.4528s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_32, [-0.9362197518348694,0.05202455818653107]=>[-0.9362197518348694,-1e-05] (-1,-1; 15,-1), time: 0.4580s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_175, [-0.026392608880996704,1.2403877973556519]=>[1e-05,1.2403877973556519] (15,-1; -1,-1), time: 0.4743s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_104, [-0.08839739859104156,0.7237086296081543]=>[1e-05,0.7237086296081543] (15,-1; -1,-1), time: 0.8091s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_1, [-0.9477561712265015,0.014542996883392334]=>[-0.9477561712265015,-1e-05] (-1,-1; 15,-1), time: 0.4119s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_52, [-0.6887927055358887,0.1286504566669464]=>[-0.6887927055358887,-1e-05] (-1,-1; 15,-1), time: 0.9780s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_47, [-1.165364146232605,0.1619807779788971]=>[-1.165364146232605,-1e-05] (-1,-1; 15,-1), time: 1.0055s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_26, [-1.0150595903396606,0.0060999393463134766]=>[-1.0150595903396606,-1e-05] (-1,-1; 15,-1), time: 0.5761s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_24, [-0.7401169538497925,0.17798343300819397]=>[-0.7401169538497925,-1e-05] (-1,-1; 15,-1), time: 1.3280s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_3, [-1.054961919784546,0.0313887894153595]=>[-1.054961919784546,-1e-05] (-1,-1; 15,-1), time: 0.4493s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_145, [-0.0936121940612793,0.7675045728683472]=>[1e-05,0.7675045728683472] (15,-1; -1,-1), time: 0.9737s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_153, [-1.1953401565551758,0.024470269680023193]=>[-1.1953401565551758,-1e-05] (-1,-1; 15,-1), time: 0.5191s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_151, [-0.7776359915733337,0.19479717314243317]=>[-0.7776359915733337,-1e-05] (-1,-1; 15,-1), time: 1.3773s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_6, [-0.9725021123886108,0.026717007160186768]=>[-0.9725021123886108,-1e-05] (-1,-1; 15,-1), time: 0.5942s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_114, [-0.8439303636550903,0.06270384788513184]=>[-0.8439303636550903,-1e-05] (-1,-1; 15,-1), time: 0.5140s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_28, [-0.063780277967453,0.804689884185791]=>[1e-05,0.804689884185791] (15,-1; -1,-1), time: 0.5785s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_90, [-0.8485934734344482,0.23735056817531586]=>[-0.8485934734344482,-1e-05] (-1,-1; 15,-1), time: 4.5853s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_11, [-0.8655416369438171,0.2253803014755249]=>[-0.6162111332238189,0.008353099166699796] (2,-1; 2,-1), time: 5.4219s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_137, [-0.9259516000747681,0.16142487525939941]=>[-0.9259516000747681,-1e-05] (-1,-1; 15,-1), time: 0.8422s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_53, [-0.6384295225143433,0.46580836176872253]=>[-0.4853579141018108,0.15234885653975402] (2,-1; 2,-1), time: 5.7852s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_176, [-0.39560645818710327,0.45700082182884216]=>[-0.22284007623530988,0.263387604262287] (2,-1; 2,-1), time: 5.3890s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_138, [-0.5091696977615356,0.3542987108230591]=>[-0.3170762420448433,0.17404683459155876] (2,-1; 2,-1), time: 6.8994s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_99, [-0.24549847841262817,0.7984106540679932]=>[-0.03196477266685708,0.5864698607231199] (2,-1; 2,-1), time: 6.1311s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_152, [-0.4440489411354065,0.5900180339813232]=>[-0.21953627170294426,0.3844644024299804] (2,-1; 2,-1), time: 5.8928s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_95, [-0.9441729784011841,0.15046367049217224]=>[-0.9441729784011841,-1e-05] (-1,-1; 15,-1), time: 0.8709s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_44, [-0.8992598652839661,0.12221768498420715]=>[-0.8992598652839661,-1e-05] (-1,-1; 15,-1), time: 0.8691s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_140, [-0.4489886164665222,0.5120502710342407]=>[-0.2626617778745607,0.3003786849420607] (2,-1; 2,-1), time: 7.0416s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_77, [-0.3509533405303955,0.5967562198638916]=>[-0.12514274371493458,0.41653057057713844] (2,-1; 2,-1), time: 6.7093s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_196, [-0.6209139227867126,0.3536319434642792]=>[-0.34277445920103194,0.17438844660525699] (2,-1; 2,-1), time: 7.8888s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_129, [-0.20570972561836243,0.8053199052810669]=>[1e-05,0.8053199052810669] (15,-1; -1,-1), time: 1.2675s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_143, [-0.8769856691360474,0.16551899909973145]=>[-0.5633227330978118,0.018129426873532264] (2,-1; 2,-1), time: 8.0278s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_139, [-0.7868673205375671,0.024743884801864624]=>[-0.7868673205375671,-1e-05] (-1,-1; 15,-1), time: 0.4784s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_48, [-0.6361653804779053,0.31300148367881775]=>[-0.4047687930738057,0.08479042968552802] (2,-1; 2,-1), time: 10.0174s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_31, [-0.8866738080978394,0.023373395204544067]=>[-0.8866738080978394,-1e-05] (-1,-1; 15,-1), time: 0.4434s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_155, [-0.6492661237716675,0.2694917619228363]=>[-0.38375478871366797,0.10976171759977194] (2,-1; 2,-1), time: 10.7929s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_81, [-0.8107643723487854,0.0739269107580185]=>[-0.8107643723487854,-1e-05] (-1,-1; 15,-1), time: 0.5062s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_65, [-0.6176139116287231,0.23279324173927307]=>[-0.3192108692552822,0.11950533812860174] (2,-1; 2,-1), time: 11.6832s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_199, [-0.2831127345561981,0.9170793890953064]=>[1e-05,0.9170793890953064] (15,-1; -1,-1), time: 6.3445s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_112, [-0.7380321621894836,0.2607336640357971]=>[-0.48932270927177535,0.07252550230439832] (2,-1; 2,-1), time: 6.5150s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_161, [-0.9573103189468384,0.0745445191860199]=>[-0.9573103189468384,-1e-05] (-1,-1; 15,-1), time: 0.3919s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_171, [-0.2159128040075302,0.6260787844657898]=>[-0.0598935115794958,0.4140667577870821] (2,-1; 2,-1), time: 5.6498s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_187, [-0.8694717884063721,0.12013041973114014]=>[-0.8694717884063721,-1e-05] (-1,-1; 15,-1), time: 0.7614s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_80, [-0.9763472080230713,0.10661044716835022]=>[-0.5954347229794209,0.017561990617999863] (2,-1; 2,-1), time: 12.8390s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_131, [-0.34405189752578735,0.5772261619567871]=>[-0.0688602196220801,0.41459602474655877] (2,-1; 2,-1), time: 9.7904s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_12, [-0.8114807605743408,0.06623658537864685]=>[-0.8114807605743408,-1e-05] (-1,-1; 15,-1), time: 0.6233s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_189, [-0.9604041576385498,0.058103859424591064]=>[-0.9604041576385498,-1e-05] (-1,-1; 15,-1), time: 0.4445s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_173, [-0.025165528059005737,0.9365764260292053]=>[1e-05,0.9365764260292053] (15,-1; -1,-1), time: 0.3890s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_43, [-0.4938078820705414,0.5453650951385498]=>[-0.25891472463756826,0.3070608936135864] (2,-1; 2,-1), time: 7.8922s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_55, [-0.9611242413520813,0.02120642364025116]=>[-0.9611242413520813,-1e-05] (-1,-1; 15,-1), time: 0.4084s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_198, [-0.6178508400917053,0.6651570796966553]=>[-0.3299603172216833,0.40951020285180617] (2,-1; 2,-1), time: 5.4714s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_178, [-0.7326118350028992,0.32899829745292664]=>[-0.45534798356369177,0.14860255730711383] (2,-1; 2,-1), time: 5.1720s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_91, [-0.40255963802337646,0.52634197473526]=>[-0.18118992427163094,0.34268176737333667] (2,-1; 2,-1), time: 5.5995s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_195, [-0.5942404866218567,0.2540351450443268]=>[-0.38266333762974736,0.0739788412437985] (2,-1; 2,-1), time: 7.7621s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_144, [-0.20099183917045593,0.7690149545669556]=>[1e-05,0.7690149545669556] (15,-1; -1,-1), time: 2.6180s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_169, [-0.44094517827033997,0.6434230208396912]=>[-0.23900931007425974,0.4185573013981858] (2,-1; 2,-1), time: 3.9678s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_92, [-1.0262882709503174,0.22670814394950867]=>[-1.0262882709503174,-1e-05] (-1,-1; 15,-1), time: 0.9769s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_86, [-0.706392228603363,0.24352328479290009]=>[-0.5386728049284727,0.007462852303512756] (2,-1; 2,-1), time: 5.2753s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_157, [-1.0738046169281006,0.08262163400650024]=>[-1.0738046169281006,-1e-05] (-1,-1; 15,-1), time: 0.5568s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_101, [-0.36688366532325745,0.5790942311286926]=>[-0.07666017957833877,0.3988047778996154] (2,-1; 2,-1), time: 10.7956s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_123, [-0.3538048267364502,0.48434698581695557]=>[-0.09486960907118461,0.38930306555470756] (2,-1; 2,-1), time: 10.6441s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_168, [-0.29397112131118774,0.6819288730621338]=>[1e-05,0.6819288730621338] (15,-1; -1,-1), time: 10.6046s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_17, [-0.631127655506134,0.34643620252609253]=>[-0.4441265311740826,0.11658451047196071] (2,-1; 2,-1), time: 4.2909s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_116, [-0.5532026290893555,0.371986985206604]=>[-0.3699787208865341,0.12789681821106388] (2,-1; 2,-1), time: 7.9099s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_88, [-0.49482378363609314,0.42556309700012207]=>[-0.2660103408037316,0.24449809136548528] (2,-1; 2,-1), time: 9.0179s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_115, [-0.4665040969848633,0.49158722162246704]=>[-0.29093646168496,0.28451271387629945] (2,-1; 2,-1), time: 4.3316s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_160, [-0.9909652471542358,0.25842127203941345]=>[-0.9909652471542358,-1e-05] (-1,-1; 15,-1), time: 1.4745s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_182, [-0.5417741537094116,0.5026332139968872]=>[-0.3416515423074905,0.3099726431496691] (2,-1; 2,-1), time: 3.2753s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_37, [-0.3240796625614166,0.6335968375205994]=>[-0.028381093967779738,0.4854043375251443] (2,-1; 2,-1), time: 10.7407s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_14, [-0.4026016891002655,0.48446354269981384]=>[-0.19361962573608218,0.3077051729589579] (2,-1; 2,-1), time: 6.4327s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_29, [-0.7142031192779541,0.26489120721817017]=>[-0.4928461201529157,5.731387653857466e-05] (2,-1; 2,-1), time: 7.9356s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_16, [-0.7650541067123413,0.20203974843025208]=>[-0.570264619179476,0.017089398446926213] (2,-1; 2,-1), time: 5.3381s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_76, [-0.8437349200248718,0.3377211093902588]=>[-0.5878246165008261,0.11145155145958913] (2,-1; 2,-1), time: 5.1394s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_70, [-0.414630264043808,0.7797529697418213]=>[-0.13189084245956925,0.6039276505207104] (2,-1; 2,-1), time: 4.3798s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_45, [-0.6471273303031921,0.47127223014831543]=>[-0.3482210251852473,0.26580465893416855] (2,-1; 2,-1), time: 11.3242s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_183, [-0.5324627757072449,0.4650658667087555]=>[-0.310232452235194,0.2420634022404357] (2,-1; 2,-1), time: 6.1134s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_109, [-0.5325799584388733,0.5849294662475586]=>[-0.3302663010163993,0.3421075926556964] (2,-1; 2,-1), time: 5.3792s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_102, [-0.4858846664428711,0.5379648208618164]=>[-0.2658527928538094,0.24218087875730604] (2,-1; 2,-1), time: 11.5064s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_148, [-0.4516507685184479,0.5244526267051697]=>[-0.19491544121809726,0.3135932800490527] (2,-1; 2,-1), time: 9.9567s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_54, [-0.7203539609909058,0.23611846566200256]=>[-0.38753505706355934,0.11310217009422316] (2,-1; 2,-1), time: 8.5197s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_97, [-0.8045157790184021,0.8531960844993591]=>[-0.5487529105440048,0.44551683194683944] (2,-1; 2,-1), time: 6.8540s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_57, [-0.6311933994293213,0.279974102973938]=>[-0.3725607959368924,0.16209760333772028] (9,-1; 2,-1), time: 15.7882s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_167, [-0.7645517587661743,0.34112152457237244]=>[-0.5459646456065131,0.033570871001540575] (2,-1; 2,-1), time: 10.7720s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_162, [-0.7180944681167603,0.2439563125371933]=>[-0.39111400216114917,0.08957105102967017] (2,-1; 2,-1), time: 14.9797s, #vars: 1287, #constrs: 553, improved: True
MIP improved 84 nodes out of 84 unstable nodes, lb improved 12.525628089904785, ub improved 12.188084602355957, time 32.7742
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_147', 'lay6_139', 'lay6_92', 'lay6_107', 'lay6_53', 'lay6_127', 'lay6_61', 'lay6_42', 'lay6_110', 'lay6_116', 'lay6_39', 'lay6_189', 'lay6_69', 'lay6_170', 'lay6_83', 'lay6_102', 'lay6_195', 'lay6_186', 'lay6_136', 'lay6_75', 'lay6_137', 'lay6_156', 'lay6_47', 'lay6_122', 'lay6_117', 'lay6_160', 'lay6_64', 'lay6_48', 'lay6_20', 'lay6_41', 'lay6_40', 'lay6_106', 'lay6_29', 'lay6_131', 'lay6_70', 'lay6_135', 'lay6_50', 'lay6_165', 'lay6_7', 'lay6_10', 'lay6_21', 'lay6_57', 'lay6_71', 'lay6_55', 'lay6_58', 'lay6_79', 'lay6_77', 'lay6_16', 'lay6_27', 'lay6_154', 'lay6_65', 'lay6_146', 'lay6_38', 'lay6_125', 'lay6_132', 'lay6_120', 'lay6_44', 'lay6_60', 'lay6_73', 'lay6_8', 'lay6_167', 'lay6_115', 'lay6_161', 'lay6_197', 'lay6_97', 'lay6_198', 'lay6_171', 'lay6_124', 'lay6_67', 'lay6_179', 'lay6_100', 'lay6_144', 'lay6_96', 'lay6_63', 'lay6_121', 'lay6_3', 'lay6_34', 'lay6_62'] filter: 1.0
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
Solving MIP for lay6_92, [-1.5943175554275513,0.01537865400314331]=>[-1.5943175554275513,-1e-05] (-1,-1; 15,-1), time: 0.3174s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-1.3827650547027588,0.16271203756332397]=>[-1.3827650547027588,-1e-05] (-1,-1; 15,-1), time: 0.3206s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_189, [-1.264394760131836,0.17058265209197998]=>[-1.264394760131836,-1e-05] (-1,-1; 15,-1), time: 0.3202s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_116, [-0.11846470832824707,1.464500904083252]=>[1e-05,1.464500904083252] (15,-1; -1,-1), time: 0.3227s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-1.1836738586425781,0.1635698676109314]=>[-1.1836738586425781,-1e-05] (-1,-1; 15,-1), time: 0.3836s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_147, [-1.346734642982483,0.007115840911865234]=>[-1.346734642982483,-1e-05] (-1,-1; 15,-1), time: 0.3896s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-1.3606188297271729,0.16411465406417847]=>[-1.3606188297271729,-1e-05] (-1,-1; 15,-1), time: 0.3002s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_137, [-1.3765815496444702,0.026478350162506104]=>[-1.3765815496444702,-1e-05] (-1,-1; 15,-1), time: 0.2849s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-1.360790491104126,0.00616455078125]=>[-1.360790491104126,-1e-05] (-1,-1; 15,-1), time: 0.2865s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-0.4332517981529236,1.4878332614898682]=>[1e-05,1.4878332614898682] (15,-1; -1,-1), time: 0.7465s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_69, [-1.1645053625106812,0.3392397165298462]=>[-1.1645053625106812,-1e-05] (-1,-1; 15,-1), time: 0.8360s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-1.8465776443481445,0.5568050742149353]=>[-1.8465776443481445,-1e-05] (-1,-1; 15,-1), time: 0.8813s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_47, [-1.067445158958435,0.32198482751846313]=>[-1.067445158958435,-1e-05] (-1,-1; 15,-1), time: 0.2908s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-1.0941152572631836,0.08837348222732544]=>[-1.0941152572631836,-1e-05] (-1,-1; 15,-1), time: 0.2873s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-1.1933445930480957,0.1937476396560669]=>[-1.1933445930480957,-1e-05] (-1,-1; 15,-1), time: 0.7394s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_64, [-1.3984968662261963,0.27443552017211914]=>[-1.3984968662261963,-1e-05] (-1,-1; 15,-1), time: 0.2929s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_40, [-1.6286556720733643,0.05457150936126709]=>[-1.6286556720733643,-1e-05] (-1,-1; 15,-1), time: 0.2787s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_122, [-0.9857174158096313,0.3642731308937073]=>[-0.9857174158096313,-1e-05] (-1,-1; 15,-1), time: 0.7077s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-1.4045541286468506,0.01831728219985962]=>[-1.4045541286468506,-1e-05] (-1,-1; 15,-1), time: 0.2718s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-1.0747864246368408,0.3187727928161621]=>[-1.0747864246368408,-1e-05] (-1,-1; 15,-1), time: 1.2464s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-1.564706563949585,0.07943814992904663]=>[-1.564706563949585,-1e-05] (-1,-1; 15,-1), time: 0.2844s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_131, [-1.9111504554748535,0.10852444171905518]=>[-1.9111504554748535,-1e-05] (-1,-1; 15,-1), time: 0.2942s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_70, [-1.2898955345153809,0.2313997745513916]=>[-1.2898955345153809,-1e-05] (-1,-1; 15,-1), time: 0.2917s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-1.2422605752944946,0.21993684768676758]=>[-1.2422605752944946,-1e-05] (-1,-1; 15,-1), time: 0.2761s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-1.095458745956421,0.29948675632476807]=>[-1.095458745956421,-1e-05] (-1,-1; 15,-1), time: 1.9441s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-1.3528075218200684,0.049139201641082764]=>[-1.3528075218200684,-1e-05] (-1,-1; 15,-1), time: 0.2696s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_57, [-1.2128486633300781,0.09627318382263184]=>[-1.2128486633300781,-1e-05] (-1,-1; 15,-1), time: 0.2770s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_71, [-0.9209442138671875,0.29683107137680054]=>[-0.9209442138671875,-1e-05] (-1,-1; 15,-1), time: 0.7098s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_20, [-0.4412994980812073,0.8680835962295532]=>[1e-05,0.8680835962295532] (15,-1; -1,-1), time: 2.1922s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_55, [-0.9356456398963928,0.20381808280944824]=>[-0.9356456398963928,-1e-05] (-1,-1; 15,-1), time: 0.2760s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_79, [-1.225557565689087,0.09640508890151978]=>[-1.225557565689087,-1e-05] (-1,-1; 15,-1), time: 0.2466s, #vars: 1581, #constrs: 894, improved: True
best_l after optimization: 72.45387268066406 with beta sum per layer: []
optimal alpha/beta time: 12.670301914215088
alpha-CROWN with intermediate bounds by MIP: tensor([[-5.8306, -7.7982, -9.8527, -9.8788, -9.0289, -8.6547, -8.5467, -4.5241,
         -8.3392]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Solving MIP for lay6_102, [-0.763382613658905,0.4704558849334717]=>[-0.3311261081629575,0.12263090600553928] (2,-1; 9,-1), time: 26.8668s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-1.1101047992706299,0.494337260723114]=>[-0.556729729694595,0.040248635971109684] (9,-1; 2,-1), time: 23.9713s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_16, [-1.492525577545166,0.0897672176361084]=>[-1.492525577545166,-1e-05] (-1,-1; 15,-1), time: 0.2528s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_27, [-1.5822210311889648,0.0787155032157898]=>[-1.5822210311889648,-1e-05] (-1,-1; 15,-1), time: 0.2505s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-0.8931971192359924,0.2747051417827606]=>[-0.8931971192359924,-1e-05] (-1,-1; 15,-1), time: 1.1740s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-0.8807806968688965,0.5368961691856384]=>[-0.44322007395867186,0.07210657949311376] (9,-1; 2,-1), time: 27.5488s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_38, [-1.3814947605133057,0.05866950750350952]=>[-1.3814947605133057,-1e-05] (-1,-1; 15,-1), time: 0.2525s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_107, [-0.554387629032135,0.6448459625244141]=>[-0.1130352949296233,0.3067449413745426] (9,-1; 9,-1), time: 30.0041s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-0.9566299915313721,0.4284001886844635]=>[-0.5504680118802768,0.004996438769277991] (9,-1; 9,-1), time: 30.0052s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-0.6199045777320862,0.45244893431663513]=>[-0.21389247052300406,0.17790192373166766] (9,-1; 9,-1), time: 30.0055s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-0.4730944335460663,0.9246646761894226]=>[-0.06787136370774642,0.47385706402824596] (9,-1; 9,-1), time: 30.0099s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_39, [-0.6398919224739075,1.13041090965271]=>[-0.12452497140495615,0.5653477800140437] (9,-1; 9,-1), time: 30.0138s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_60, [-1.5550649166107178,0.09710752964019775]=>[-1.5550649166107178,-1e-05] (-1,-1; 15,-1), time: 0.2489s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-1.3066940307617188,0.16180264949798584]=>[-1.3066940307617188,-1e-05] (-1,-1; 15,-1), time: 0.2535s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-0.3326592445373535,1.0341707468032837]=>[1e-05,1.0341707468032837] (15,-1; -1,-1), time: 0.2663s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_195, [-1.0127012729644775,0.48934316635131836]=>[-0.539603342268228,0.09862620128989014] (9,-1; 9,-1), time: 30.0124s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_125, [-1.1686995029449463,0.27341675758361816]=>[-1.1686995029449463,-1e-05] (-1,-1; 15,-1), time: 0.8253s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-1.5925922393798828,0.1557013988494873]=>[-1.5925922393798828,-1e-05] (-1,-1; 15,-1), time: 0.2497s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_197, [-1.079355239868164,0.2473049759864807]=>[-1.079355239868164,-1e-05] (-1,-1; 15,-1), time: 0.2536s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_160, [-0.7584726810455322,0.5067281723022461]=>[-0.4378418205504597,0.03388194969944329] (9,-1; 9,-1), time: 30.0110s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_97, [-1.1806875467300415,0.26248645782470703]=>[-1.1806875467300415,-1e-05] (-1,-1; 15,-1), time: 0.2429s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_48, [-0.8502649068832397,0.8490723967552185]=>[-0.4005152925619782,0.22759547845918748] (9,-1; 9,-1), time: 30.0187s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-0.7033820152282715,0.5706284046173096]=>[-0.23480867606558967,0.20970993750369502] (9,-1; 9,-1), time: 30.0227s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_50, [-0.9270516037940979,0.4850063920021057]=>[-0.44751940012631014,0.14379705158058104] (9,-1; 9,-1), time: 30.0107s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_7, [-0.5280804634094238,0.6068251729011536]=>[-0.12114464616740625,0.28958257678503185] (9,-1; 9,-1), time: 30.0166s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-0.7773921489715576,0.5285561084747314]=>[-0.42275855427995523,0.09345697917409544] (9,-1; 9,-1), time: 30.0111s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_144, [-1.1314677000045776,0.30651426315307617]=>[-1.1314677000045776,-1e-05] (-1,-1; 15,-1), time: 0.2591s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_179, [-1.0889641046524048,0.34506702423095703]=>[-1.0889641046524048,-1e-05] (-1,-1; 15,-1), time: 1.3131s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_100, [-1.2016221284866333,0.29979485273361206]=>[-1.2016221284866333,-1e-05] (-1,-1; 15,-1), time: 0.9403s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_77, [-0.6642631888389587,0.648776113986969]=>[-0.130625287862639,0.37339584399565623] (9,-1; 9,-1), time: 30.0142s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-1.3033727407455444,0.5074346661567688]=>[-1.3033727407455444,-1e-05] (-1,-1; 15,-1), time: 1.1046s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_62, [-1.6229218244552612,0.3213624954223633]=>[-1.6229218244552612,-1e-05] (-1,-1; 15,-1), time: 0.2501s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_34, [-1.584199070930481,0.3465527296066284]=>[-1.584199070930481,-1e-05] (-1,-1; 15,-1), time: 0.5185s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_63, [-1.0326638221740723,0.2618734538555145]=>[-1.0326638221740723,-1e-05] (-1,-1; 15,-1), time: 4.9842s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_198, [-1.1624085903167725,0.4621371626853943]=>[-1.1624085903167725,-1e-05] (-1,-1; 15,-1), time: 9.1251s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_67, [-0.9470288753509521,0.31045079231262207]=>[-0.47882409773015816,0.008894348111941956] (9,-1; 2,-1), time: 20.1468s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_44, [-0.9294315576553345,0.4861978590488434]=>[-0.33085368515701674,0.19870280613031438] (9,-1; 2,-1), time: 23.0398s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-1.1197905540466309,0.6700871586799622]=>[-0.645657508086562,0.07679569217526444] (2,-1; 9,-1), time: 24.6081s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_146, [-0.6829912662506104,0.772803544998169]=>[-0.2142396597432086,0.33764178221223634] (2,-1; 9,-1), time: 27.0606s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_154, [-0.9249717593193054,1.077878713607788]=>[-0.3575110522888861,0.4560642111153118] (9,-1; 9,-1), time: 30.0101s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_120, [-0.9426937103271484,0.6974302530288696]=>[-0.43515018896778507,0.22333035146833946] (2,-1; 9,-1), time: 29.4140s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_115, [-0.7287303805351257,0.5813355445861816]=>[-0.277709494260585,0.2285697753616178] (9,-1; 9,-1), time: 30.0390s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-0.644339382648468,0.5598536133766174]=>[-0.2146697396236832,0.21105481691961925] (9,-1; 9,-1), time: 30.0188s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_171, [-0.9803271889686584,0.36736175417900085]=>[-0.5083868253439582,0.022691036368943176] (9,-1; 9,-1), time: 30.0033s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-0.928498387336731,0.45918047428131104]=>[-0.4943041156853104,0.026362165773308882] (9,-1; 9,-1), time: 30.0074s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-1.21418297290802,0.5320675373077393]=>[-0.723777576894409,0.021557037104018947] (9,-1; 9,-1), time: 30.0162s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_121, [-0.7875961065292358,0.634762167930603]=>[-0.3904242352184489,0.1408907130363155] (9,-1; 9,-1), time: 30.0322s, #vars: 1581, #constrs: 894, improved: True
MIP improved 78 nodes out of 78 unstable nodes, lb improved 14.168889999389648, ub improved 21.209135055541992, time 62.7591
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_9', 'lay8_80', 'lay8_192', 'lay8_54', 'lay8_133', 'lay8_170', 'lay8_139', 'lay8_77', 'lay8_103', 'lay8_143', 'lay8_146', 'lay8_178', 'lay8_181', 'lay8_88', 'lay8_153', 'lay8_65', 'lay8_59', 'lay8_20', 'lay8_7', 'lay8_66', 'lay8_30', 'lay8_78', 'lay8_89', 'lay8_17', 'lay8_121', 'lay8_148', 'lay8_72', 'lay8_63', 'lay8_124', 'lay8_74', 'lay8_95', 'lay8_127', 'lay8_1', 'lay8_159', 'lay8_141', 'lay8_86', 'lay8_161', 'lay8_0', 'lay8_91', 'lay8_50', 'lay8_98', 'lay8_19', 'lay8_81', 'lay8_197', 'lay8_41', 'lay8_96', 'lay8_75', 'lay8_6', 'lay8_82', 'lay8_3', 'lay8_180', 'lay8_5', 'lay8_27', 'lay8_84', 'lay8_112', 'lay8_58', 'lay8_101', 'lay8_163', 'lay8_106', 'lay8_57', 'lay8_173', 'lay8_193', 'lay8_147', 'lay8_68', 'lay8_71', 'lay8_187', 'lay8_130', 'lay8_48', 'lay8_166', 'lay8_185', 'lay8_51', 'lay8_107', 'lay8_117', 'lay8_116', 'lay8_184', 'lay8_56', 'lay8_43', 'lay8_100', 'lay8_156', 'lay8_40', 'lay8_144', 'lay8_189', 'lay8_195', 'lay8_69', 'lay8_129', 'lay8_134', 'lay8_109', 'lay8_151', 'lay8_102', 'lay8_154', 'lay8_122', 'lay8_171', 'lay8_99', 'lay8_28', 'lay8_85', 'lay8_39', 'lay8_44', 'lay8_94', 'lay8_34', 'lay8_10', 'lay8_70', 'lay8_190', 'lay8_24', 'lay8_194', 'lay8_137', 'lay8_172', 'lay8_31', 'lay8_60', 'lay8_128', 'lay8_168', 'lay8_8', 'lay8_123', 'lay8_150', 'lay8_36', 'lay8_149', 'lay8_165', 'lay8_11', 'lay8_21', 'lay8_37', 'lay8_191', 'lay8_169', 'lay8_33', 'lay8_14', 'lay8_126', 'lay8_76', 'lay8_177', 'lay8_53', 'lay8_23', 'lay8_164', 'lay8_119', 'lay8_158', 'lay8_183', 'lay8_61', 'lay8_176', 'lay8_179', 'lay8_115', 'lay8_118', 'lay8_79', 'lay8_12', 'lay8_35', 'lay8_157', 'lay8_93', 'lay8_92', 'lay8_49', 'lay8_162', 'lay8_160'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.75094223022461 with beta sum per layer: []
optimal alpha/beta time: 0.08798742294311523
alpha-CROWN with intermediate bounds by MIP: tensor([[8.3114, 7.5116, 7.0039, 5.2456, 2.4337, 5.9383, 8.3023, 4.4016, 4.6026]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
min of alpha-CROWN bounds 2.4336557388305664>=0, verified!
MIP finished with 98.96535968780518s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.75094223022461 with beta sum per layer: []
optimal alpha/beta time: 0.06755304336547852
alpha-CROWN with intermediate bounds improved by MIP: tensor([[8.3114, 7.5116, 7.0039, 5.2456, 2.4337, 5.9383, 8.3023, 4.4016, 4.6026]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[8.3114, 7.5116, 7.0039, 5.2456, 2.4337, 5.9383, 8.3023, 4.4016, 4.6026,
         0.0000]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 121.7674 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 121.7674491405487
safe-incomplete-refine (total 1): [0]
