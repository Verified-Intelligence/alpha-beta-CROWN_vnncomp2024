Experiments at Fri Nov  5 00:38:45 2021 on huan-Super-Server
saving results to vnn-comp_[eran_instances]_start=1_end=2_iter=20_b=500_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 1 to 2

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
##### PGD attack: True label: 9, Tested against: [0, 1, 2, 3, 4, 5, 6, 7, 8] ######
pgd prediction: tensor([-5.3901, -2.6781, -2.1905,  0.5082,  3.2935, -0.6897, -4.1349,  2.1183,
         0.3938,  8.8412], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([14.2314, 11.5193, 11.0317,  8.3330,  5.5477,  9.5310, 12.9761,  6.7229,
         8.4474,     inf], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-5.9429, -2.9649, -2.4281,  0.6550,  3.5017, -0.8045, -4.5906,  2.4643,
          0.3444,  9.7554]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ -716.1159, -1041.3638, -1249.6168, -1241.5022,  -922.2480,  -998.1392,
         -1176.5411,  -579.0404,  -824.4254]], device='cuda:0') None
best_l after optimization: 4990.044921875 with beta sum per layer: []
optimal alpha/beta time: 19.38082242012024
initial alpha-CROWN bounds: tensor([[-416.3831, -584.9426, -718.1420, -700.2354, -528.8560, -573.4402,
         -673.0519, -323.9539, -471.0399]], device='cuda:0',
       grad_fn=<AsStridedBackward>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_97', 'lay4_167', 'lay4_70', 'lay4_160', 'lay4_109', 'lay4_76', 'lay4_182', 'lay4_54', 'lay4_16', 'lay4_183', 'lay4_157', 'lay4_162', 'lay4_14', 'lay4_92', 'lay4_29', 'lay4_148', 'lay4_115', 'lay4_17', 'lay4_144', 'lay4_57', 'lay4_102', 'lay4_55', 'lay4_45', 'lay4_173', 'lay4_189', 'lay4_169', 'lay4_86', 'lay4_12', 'lay4_161', 'lay4_37', 'lay4_187', 'lay4_116', 'lay4_81', 'lay4_88', 'lay4_178', 'lay4_31', 'lay4_91', 'lay4_139', 'lay4_198', 'lay4_129', 'lay4_168', 'lay4_123', 'lay4_195', 'lay4_101', 'lay4_44', 'lay4_95', 'lay4_171', 'lay4_43', 'lay4_199', 'lay4_112', 'lay4_137', 'lay4_131', 'lay4_28', 'lay4_114', 'lay4_143', 'lay4_152', 'lay4_6', 'lay4_77', 'lay4_176', 'lay4_153', 'lay4_196', 'lay4_3', 'lay4_140', 'lay4_99', 'lay4_145', 'lay4_151', 'lay4_26', 'lay4_1', 'lay4_155', 'lay4_138', 'lay4_48', 'lay4_53', 'lay4_24', 'lay4_80', 'lay4_90', 'lay4_175', 'lay4_163', 'lay4_11', 'lay4_82', 'lay4_32', 'lay4_104', 'lay4_52', 'lay4_65', 'lay4_47'] filter: 1.0
/home/shiqi/miniconda3/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/miniconda3/lib/python3.8/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1616554793803/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
Solving MIP for lay4_157, [-1.0738041400909424,0.08262163400650024]=>[-1.0738041400909424,-1e-05] (-1,-1; 15,-1), time: 0.6537s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_92, [-1.0262877941131592,0.22670745849609375]=>[-1.0262877941131592,-1e-05] (-1,-1; 15,-1), time: 1.3373s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_160, [-0.9909653067588806,0.2584211528301239]=>[-0.9909653067588806,-1e-05] (-1,-1; 15,-1), time: 1.7162s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_144, [-0.20099174976348877,0.7690141201019287]=>[1e-05,0.7690141201019287] (15,-1; -1,-1), time: 3.0744s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_182, [-0.5417739152908325,0.5026331543922424]=>[-0.33843919594876376,0.3094971423032948] (2,-1; 2,-1), time: 4.8679s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_70, [-0.41463008522987366,0.7797528505325317]=>[-0.1310206575573036,0.6039276505207104] (2,-1; 2,-1), time: 4.9643s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_55, [-0.9611241817474365,0.021206125617027283]=>[-0.9611241817474365,-1e-05] (-1,-1; 15,-1), time: 0.4575s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_115, [-0.46650394797325134,0.49158722162246704]=>[-0.29093646168496,0.28451271387629945] (2,-1; 2,-1), time: 4.9907s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_109, [-0.532579779624939,0.5849289894104004]=>[-0.3298301537352855,0.34035444024900186] (2,-1; 2,-1), time: 5.9215s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_16, [-0.7650539875030518,0.20203951001167297]=>[-0.570264619179476,0.017089398446926213] (2,-1; 2,-1), time: 5.9980s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_173, [-0.0251653790473938,0.9365764260292053]=>[1e-05,0.9365764260292053] (15,-1; -1,-1), time: 0.4354s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_76, [-0.843734860420227,0.3377209007740021]=>[-0.588263173813529,0.10724766911855085] (2,-1; 2,-1), time: 6.3402s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_17, [-0.631127655506134,0.34643620252609253]=>[-0.4441265311740826,0.11658451047196071] (2,-1; 2,-1), time: 5.0413s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_189, [-0.960404098033905,0.05810365080833435]=>[-0.960404098033905,-1e-05] (-1,-1; 15,-1), time: 0.5687s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_161, [-0.9573103189468384,0.07454408705234528]=>[-0.9573103189468384,-1e-05] (-1,-1; 15,-1), time: 0.4862s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_183, [-0.5324627757072449,0.46506577730178833]=>[-0.310232452235194,0.24255263667788232] (2,-1; 2,-1), time: 6.9200s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_12, [-0.8114807605743408,0.0662364810705185]=>[-0.8114807605743408,-1e-05] (-1,-1; 15,-1), time: 0.6983s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_81, [-0.8107641339302063,0.0739268809556961]=>[-0.8107641339302063,-1e-05] (-1,-1; 15,-1), time: 0.5731s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_187, [-0.869471549987793,0.12013041973114014]=>[-0.869471549987793,-1e-05] (-1,-1; 15,-1), time: 0.8723s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_14, [-0.40260159969329834,0.4844634532928467]=>[-0.19562377371461284,0.3065168976759715] (2,-1; 2,-1), time: 8.6254s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_31, [-0.8866736888885498,0.02337336540222168]=>[-0.8866736888885498,-1e-05] (-1,-1; 15,-1), time: 0.5215s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_29, [-0.7142030000686646,0.26489096879959106]=>[-0.4880520589560385,5.731387653857466e-05] (2,-1; 2,-1), time: 9.2601s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_97, [-0.8045153617858887,0.8531957268714905]=>[-0.5487529105440048,0.44504367972025205] (2,-1; 2,-1), time: 9.4429s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_139, [-0.7868672609329224,0.02474379539489746]=>[-0.7868672609329224,-1e-05] (-1,-1; 15,-1), time: 0.5289s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_169, [-0.44094496965408325,0.6434228420257568]=>[-0.23998403674799734,0.4185573013981857] (2,-1; 2,-1), time: 4.2166s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_54, [-0.7203539609909058,0.2361181676387787]=>[-0.38753505706355934,0.10943686484538329] (2,-1; 2,-1), time: 10.8230s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_129, [-0.20570975542068481,0.8053193688392639]=>[1e-05,0.8053193688392639] (15,-1; -1,-1), time: 1.5708s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_148, [-0.4516507387161255,0.5244523286819458]=>[-0.1942959301122037,0.3135932800490527] (2,-1; 2,-1), time: 11.8906s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_86, [-0.7063918709754944,0.24352328479290009]=>[-0.5361117196070984,0.007362975540891103] (2,-1; 2,-1), time: 6.4622s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_167, [-0.7645517587661743,0.3411214351654053]=>[-0.5459646456065131,0.033570871001540575] (2,-1; 2,-1), time: 13.1335s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_44, [-0.8992595076560974,0.12221768498420715]=>[-0.8992595076560974,-1e-05] (-1,-1; 15,-1), time: 0.9697s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_178, [-0.732611358165741,0.3289980888366699]=>[-0.4530325882865534,0.14914859875096342] (2,-1; 2,-1), time: 6.0031s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_95, [-0.9441729784011841,0.15046334266662598]=>[-0.9441729784011841,-1e-05] (-1,-1; 15,-1), time: 0.9854s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_116, [-0.553202211856842,0.371986985206604]=>[-0.3730299443872648,0.12789681821106388] (2,-1; 2,-1), time: 8.3039s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_198, [-0.6178507804870605,0.6651567220687866]=>[-0.3320576383030507,0.40951020285180617] (2,-1; 2,-1), time: 6.3572s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_91, [-0.4025595784187317,0.5263417363166809]=>[-0.180918214484077,0.34205159564858983] (2,-1; 2,-1), time: 6.7800s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_137, [-0.9259517192840576,0.16142472624778748]=>[-0.9259517192840576,-1e-05] (-1,-1; 15,-1), time: 0.9540s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_28, [-0.06377997994422913,0.8046897649765015]=>[1e-05,0.8046897649765015] (15,-1; -1,-1), time: 0.5822s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_162, [-0.7180944681167603,0.24395622313022614]=>[-0.411632095872486,0.08957105102967017] (9,-1; 2,-1), time: 17.7281s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_114, [-0.843930184841156,0.06270384788513184]=>[-0.843930184841156,-1e-05] (-1,-1; 15,-1), time: 0.5317s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_88, [-0.4948235750198364,0.4255625903606415]=>[-0.2660103408037316,0.24283556578766938] (2,-1; 2,-1), time: 10.4267s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_45, [-0.6471271514892578,0.47127145528793335]=>[-0.3490516002378935,0.2609067824006711] (2,-1; 2,-1), time: 12.6704s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_37, [-0.32407936453819275,0.6335967779159546]=>[-0.028381093967779738,0.4854043375251443] (2,-1; 2,-1), time: 12.1211s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_6, [-0.9725019931793213,0.026716947555541992]=>[-0.9725019931793213,-1e-05] (-1,-1; 15,-1), time: 0.6140s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_102, [-0.48588407039642334,0.5379642844200134]=>[-0.26690821704317524,0.24218087875730604] (2,-1; 2,-1), time: 14.1520s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_153, [-1.1953401565551758,0.024470150470733643]=>[-1.1953401565551758,-1e-05] (-1,-1; 15,-1), time: 0.6678s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_3, [-1.054961919784546,0.031388550996780396]=>[-1.054961919784546,-1e-05] (-1,-1; 15,-1), time: 0.5483s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_195, [-0.5942404866218567,0.2540351152420044]=>[-0.38266333762974736,0.07367760607673583] (2,-1; 2,-1), time: 8.7013s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_171, [-0.2159128040075302,0.6260785460472107]=>[-0.0598935115794958,0.41903853234406785] (2,-1; 2,-1), time: 6.5420s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_145, [-0.09361205995082855,0.7675042152404785]=>[1e-05,0.7675042152404785] (15,-1; -1,-1), time: 0.9913s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_199, [-0.2831127345561981,0.9170790910720825]=>[1e-05,0.9170790910720825] (15,-1; -1,-1), time: 7.1130s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_123, [-0.35380449891090393,0.48434680700302124]=>[-0.09545820492278069,0.38930306555470756] (2,-1; 2,-1), time: 10.6244s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_57, [-0.6311933398246765,0.2799738943576813]=>[-0.41690158703341956,0.15378260611866854] (9,-1; 2,-1), time: 16.8378s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_26, [-1.015059232711792,0.006099790334701538]=>[-1.015059232711792,-1e-05] (-1,-1; 15,-1), time: 0.6386s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_1, [-0.9477561712265015,0.01454252004623413]=>[-0.9477561712265015,-1e-05] (-1,-1; 15,-1), time: 0.5019s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_168, [-0.29397109150886536,0.6819287538528442]=>[1e-05,0.6819287538528442] (15,-1; -1,-1), time: 11.9230s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_151, [-0.7776356935501099,0.19479720294475555]=>[-0.7776356935501099,-1e-05] (-1,-1; 15,-1), time: 1.4327s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_43, [-0.493807852268219,0.5453649759292603]=>[-0.2608398162415868,0.3081665633820547] (2,-1; 2,-1), time: 9.2385s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_112, [-0.7380319833755493,0.260733038187027]=>[-0.4890621895404513,0.07445655663681852] (2,-1; 2,-1), time: 8.3082s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_24, [-0.7401167154312134,0.17798283696174622]=>[-0.7401167154312134,-1e-05] (-1,-1; 15,-1), time: 1.3360s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_101, [-0.36688369512557983,0.5790942311286926]=>[-0.07666017957833877,0.3988047778996154] (2,-1; 2,-1), time: 12.1806s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_175, [-0.02639251947402954,1.240386724472046]=>[1e-05,1.240386724472046] (15,-1; -1,-1), time: 0.4635s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_152, [-0.4440484046936035,0.5900173783302307]=>[-0.21953627170294426,0.3844644024299804] (2,-1; 2,-1), time: 6.4554s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_163, [-0.8243815898895264,0.08394503593444824]=>[-0.8243815898895264,-1e-05] (-1,-1; 15,-1), time: 0.4318s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_176, [-0.39560645818710327,0.45700061321258545]=>[-0.22284007623530988,0.263387604262287] (2,-1; 2,-1), time: 6.0043s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_82, [-1.1208574771881104,0.03318512439727783]=>[-1.1208574771881104,-1e-05] (-1,-1; 15,-1), time: 0.4253s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_32, [-0.9362196326255798,0.052024200558662415]=>[-0.9362196326255798,-1e-05] (-1,-1; 15,-1), time: 0.4283s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_104, [-0.08839733898639679,0.7237086296081543]=>[1e-05,0.7237086296081543] (15,-1; -1,-1), time: 0.7203s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_99, [-0.24549823999404907,0.7984106540679932]=>[-0.025163930399637942,0.5895659746832344] (2,-1; 2,-1), time: 5.4853s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_52, [-0.6887927651405334,0.12865011394023895]=>[-0.6887927651405334,-1e-05] (-1,-1; 15,-1), time: 1.1805s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_77, [-0.3509523868560791,0.5967562198638916]=>[-0.12379892698350986,0.4161648707645807] (2,-1; 2,-1), time: 8.1320s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_47, [-1.1653640270233154,0.1619795560836792]=>[-1.1653640270233154,-1e-05] (-1,-1; 15,-1), time: 0.9255s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_143, [-0.8769854307174683,0.16551899909973145]=>[-0.5638842366022999,0.018129426873532264] (2,-1; 2,-1), time: 8.6252s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_131, [-0.34405189752578735,0.5772261619567871]=>[-0.06899259990215524,0.41459602474655877] (2,-1; 2,-1), time: 11.2225s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_140, [-0.4489884376525879,0.5120501518249512]=>[-0.2626617778745607,0.3003786849420607] (2,-1; 2,-1), time: 7.3328s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_196, [-0.6209139227867126,0.353631854057312]=>[-0.34277445920103194,0.17396854979434656] (2,-1; 2,-1), time: 8.8531s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_90, [-0.8485934734344482,0.23735041916370392]=>[-0.8485934734344482,-1e-05] (-1,-1; 15,-1), time: 4.3403s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_53, [-0.6384294033050537,0.46580836176872253]=>[-0.484593794579909,0.15234885653975402] (2,-1; 2,-1), time: 6.3858s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_138, [-0.5091691017150879,0.3542987108230591]=>[-0.3164388099173383,0.17404683459155876] (2,-1; 2,-1), time: 7.0022s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_11, [-0.8655415177345276,0.22537952661514282]=>[-0.6162111332238189,0.008353099166699796] (2,-1; 2,-1), time: 5.1642s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_48, [-0.6361653804779053,0.3130013346672058]=>[-0.4047687930738057,0.08479042968552802] (2,-1; 2,-1), time: 9.7848s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_155, [-0.6492660641670227,0.26949140429496765]=>[-0.38375478871366797,0.11087082464382708] (2,-1; 2,-1), time: 10.6719s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_80, [-0.9763472080230713,0.10661046206951141]=>[-0.5954347229794209,0.017561990617999863] (2,-1; 2,-1), time: 12.0444s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_65, [-0.6176135540008545,0.23279324173927307]=>[-0.3193195144379043,0.11950533812860174] (2,-1; 2,-1), time: 12.1904s, #vars: 1287, #constrs: 553, improved: True
MIP improved 84 nodes out of 84 unstable nodes, lb improved 12.471880912780762, ub improved 12.203271865844727, time 37.4954
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_62', 'lay6_34', 'lay6_3', 'lay6_121', 'lay6_63', 'lay6_96', 'lay6_144', 'lay6_100', 'lay6_179', 'lay6_67', 'lay6_124', 'lay6_171', 'lay6_198', 'lay6_97', 'lay6_197', 'lay6_161', 'lay6_115', 'lay6_167', 'lay6_8', 'lay6_73', 'lay6_60', 'lay6_44', 'lay6_120', 'lay6_132', 'lay6_125', 'lay6_38', 'lay6_146', 'lay6_65', 'lay6_154', 'lay6_27', 'lay6_16', 'lay6_77', 'lay6_79', 'lay6_58', 'lay6_55', 'lay6_71', 'lay6_57', 'lay6_21', 'lay6_10', 'lay6_7', 'lay6_165', 'lay6_50', 'lay6_135', 'lay6_70', 'lay6_131', 'lay6_29', 'lay6_106', 'lay6_40', 'lay6_41', 'lay6_20', 'lay6_48', 'lay6_64', 'lay6_160', 'lay6_117', 'lay6_122', 'lay6_47', 'lay6_156', 'lay6_137', 'lay6_75', 'lay6_136', 'lay6_186', 'lay6_195', 'lay6_102', 'lay6_83', 'lay6_170', 'lay6_69', 'lay6_189', 'lay6_39', 'lay6_116', 'lay6_110', 'lay6_42', 'lay6_61', 'lay6_127', 'lay6_53', 'lay6_107', 'lay6_92', 'lay6_139', 'lay6_147'] filter: 1.0
Solving MIP for lay6_62, [-1.622916340827942,0.32136237621307373]=>[-1.622916340827942,-1e-05] (-1,-1; 15,-1), time: 0.3081s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_144, [-1.131464958190918,0.3065142035484314]=>[-1.131464958190918,-1e-05] (-1,-1; 15,-1), time: 0.3251s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_97, [-1.1806840896606445,0.2624216377735138]=>[-1.1806840896606445,-1e-05] (-1,-1; 15,-1), time: 0.3393s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_197, [-1.0793538093566895,0.24730420112609863]=>[-1.0793538093566895,-1e-05] (-1,-1; 15,-1), time: 0.3393s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_8, [-1.5925920009613037,0.1557013988494873]=>[-1.5925920009613037,-1e-05] (-1,-1; 15,-1), time: 0.2918s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_73, [-1.3066914081573486,0.16178679466247559]=>[-1.3066914081573486,-1e-05] (-1,-1; 15,-1), time: 0.3078s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_34, [-1.5841989517211914,0.34655261039733887]=>[-1.5841989517211914,-1e-05] (-1,-1; 15,-1), time: 0.7111s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_60, [-1.5550649166107178,0.09710770845413208]=>[-1.5550649166107178,-1e-05] (-1,-1; 15,-1), time: 0.3013s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_100, [-1.2016221284866333,0.29979369044303894]=>[-1.2016221284866333,-1e-05] (-1,-1; 15,-1), time: 1.1537s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_132, [-0.3326590061187744,1.0341706275939941]=>[1e-05,1.0341706275939941] (15,-1; -1,-1), time: 0.3112s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_179, [-1.0889594554901123,0.34506702423095703]=>[-1.0889594554901123,-1e-05] (-1,-1; 15,-1), time: 1.2974s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_3, [-1.303360939025879,0.5074326992034912]=>[-1.303360939025879,-1e-05] (-1,-1; 15,-1), time: 1.3719s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_38, [-1.3814947605133057,0.058668434619903564]=>[-1.3814947605133057,-1e-05] (-1,-1; 15,-1), time: 0.3078s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_125, [-1.1686995029449463,0.27341675758361816]=>[-1.1686995029449463,-1e-05] (-1,-1; 15,-1), time: 1.0071s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_27, [-1.5822207927703857,0.07871562242507935]=>[-1.5822207927703857,-1e-05] (-1,-1; 15,-1), time: 0.3067s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_16, [-1.492525339126587,0.08976626396179199]=>[-1.492525339126587,-1e-05] (-1,-1; 15,-1), time: 0.2990s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_65, [-0.8931953310966492,0.27469784021377563]=>[-0.8931953310966492,-1e-05] (-1,-1; 15,-1), time: 1.5692s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_79, [-1.225557565689087,0.09640491008758545]=>[-1.225557565689087,-1e-05] (-1,-1; 15,-1), time: 0.2968s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_63, [-1.0326613187789917,0.2618735134601593]=>[-1.0326613187789917,-1e-05] (-1,-1; 15,-1), time: 7.2710s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_55, [-0.9356380701065063,0.20381703972816467]=>[-0.9356380701065063,-1e-05] (-1,-1; 15,-1), time: 0.3189s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_71, [-0.920944333076477,0.2968311309814453]=>[-0.920944333076477,-1e-05] (-1,-1; 15,-1), time: 0.7824s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_57, [-1.21284818649292,0.09627246856689453]=>[-1.21284818649292,-1e-05] (-1,-1; 15,-1), time: 0.3257s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_198, [-1.1624085903167725,0.46213579177856445]=>[-1.1624085903167725,-1e-05] (-1,-1; 15,-1), time: 9.8206s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_67, [-0.9470274448394775,0.31045007705688477]=>[-0.5026190554508742,0.008584659940425352] (9,-1; 2,-1), time: 20.8819s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_44, [-0.9294314980506897,0.48619788885116577]=>[-0.3311822745078584,0.19909852675554718] (9,-1; 2,-1), time: 25.0981s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_165, [-1.3528075218200684,0.049127399921417236]=>[-1.3528075218200684,-1e-05] (-1,-1; 15,-1), time: 0.2946s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_167, [-1.1197906732559204,0.6700869798660278]=>[-0.64585331693286,0.08617686227182388] (2,-1; 9,-1), time: 26.1140s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_135, [-1.2422606945037842,0.21993601322174072]=>[-1.2422606945037842,-1e-05] (-1,-1; 15,-1), time: 0.2947s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_58, [-1.1101047992706299,0.4943313002586365]=>[-0.5566864366325184,0.0403255159167453] (9,-1; 2,-1), time: 23.7006s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_70, [-1.2898954153060913,0.23139917850494385]=>[-1.2898954153060913,-1e-05] (-1,-1; 15,-1), time: 0.2983s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_131, [-1.9111499786376953,0.10852336883544922]=>[-1.9111499786376953,-1e-05] (-1,-1; 15,-1), time: 0.3074s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_29, [-1.564706563949585,0.07943779230117798]=>[-1.564706563949585,-1e-05] (-1,-1; 15,-1), time: 0.2912s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_106, [-1.4045541286468506,0.018312156200408936]=>[-1.4045541286468506,-1e-05] (-1,-1; 15,-1), time: 0.2949s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_40, [-1.6286554336547852,0.05457150936126709]=>[-1.6286554336547852,-1e-05] (-1,-1; 15,-1), time: 0.3011s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_20, [-0.4412972331047058,0.868083655834198]=>[1e-05,0.868083655834198] (15,-1; -1,-1), time: 1.7066s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_171, [-0.9803272485733032,0.3673616051673889]=>[-0.5195807294394056,0.02743827472521328] (9,-1; 9,-1), time: 30.0049s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_124, [-0.9284983277320862,0.4591807723045349]=>[-0.5081556536721482,0.021797495431666935] (9,-1; 9,-1), time: 30.0088s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_121, [-0.7875936031341553,0.6347622275352478]=>[-0.3944245479010621,0.12137936221123762] (9,-1; 9,-1), time: 30.0135s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_96, [-1.2141828536987305,0.5320674180984497]=>[-0.7305455608151761,0.032345753771305455] (9,-1; 9,-1), time: 30.0188s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_161, [-0.6443361043930054,0.5598493814468384]=>[-0.2232250511946191,0.21228891857120658] (9,-1; 9,-1), time: 30.0178s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_64, [-1.3984968662261963,0.2744356393814087]=>[-1.3984968662261963,-1e-05] (-1,-1; 15,-1), time: 0.3051s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_117, [-1.0941150188446045,0.08836835622787476]=>[-1.0941150188446045,-1e-05] (-1,-1; 15,-1), time: 0.3074s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_47, [-1.0674405097961426,0.3219848871231079]=>[-1.0674405097961426,-1e-05] (-1,-1; 15,-1), time: 0.3071s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_115, [-0.7287278175354004,0.5813301801681519]=>[-0.27621047413988703,0.23602228099302927] (9,-1; 9,-1), time: 30.0356s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_156, [-1.360790491104126,0.00615924596786499]=>[-1.360790491104126,-1e-05] (-1,-1; 15,-1), time: 0.2973s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_75, [-1.3606187105178833,0.16411089897155762]=>[-1.3606187105178833,-1e-05] (-1,-1; 15,-1), time: 0.2998s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_137, [-1.3765814304351807,0.026473641395568848]=>[-1.3765814304351807,-1e-05] (-1,-1; 15,-1), time: 0.3091s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_120, [-0.942693829536438,0.6974303126335144]=>[-0.4384933776758649,0.22624164437507888] (9,-1; 9,-1), time: 30.0301s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_122, [-0.9857172966003418,0.3642709255218506]=>[-0.9857172966003418,-1e-05] (-1,-1; 15,-1), time: 0.7713s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_83, [-1.1836727857589722,0.16356539726257324]=>[-1.1836727857589722,-1e-05] (-1,-1; 15,-1), time: 0.3032s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_136, [-1.1933444738388062,0.1937391757965088]=>[-1.1933444738388062,-1e-05] (-1,-1; 15,-1), time: 0.7456s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_146, [-0.6829912066459656,0.7728075385093689]=>[-0.21445279712886278,0.352856501399125] (9,-1; 9,-1), time: 30.0098s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_189, [-1.2643946409225464,0.17058277130126953]=>[-1.2643946409225464,-1e-05] (-1,-1; 15,-1), time: 0.2974s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_154, [-0.9249709844589233,1.0778768062591553]=>[-0.3336338445357162,0.4678106409965246] (9,-1; 9,-1), time: 30.0071s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_116, [-0.11845928430557251,1.4645006656646729]=>[1e-05,1.4645006656646729] (15,-1; -1,-1), time: 0.2954s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_69, [-1.164505124092102,0.33923256397247314]=>[-1.164505124092102,-1e-05] (-1,-1; 15,-1), time: 0.7662s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_186, [-1.0747864246368408,0.3187670111656189]=>[-1.0747864246368408,-1e-05] (-1,-1; 15,-1), time: 1.2453s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_110, [-1.3827567100524902,0.16270726919174194]=>[-1.3827567100524902,-1e-05] (-1,-1; 15,-1), time: 0.2875s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_53, [-0.43325144052505493,1.4878311157226562]=>[1e-05,1.4878311157226562] (15,-1; -1,-1), time: 0.6795s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_77, [-0.6642632484436035,0.6487761735916138]=>[-0.14114776583748814,0.3837721039800645] (9,-1; 9,-1), time: 30.0073s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_92, [-1.5943176746368408,0.015377998352050781]=>[-1.5943176746368408,-1e-05] (-1,-1; 15,-1), time: 0.2835s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_42, [-1.0954513549804688,0.29948553442955017]=>[-1.0954513549804688,-1e-05] (-1,-1; 15,-1), time: 1.8499s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_147, [-1.3467345237731934,0.007115721702575684]=>[-1.3467345237731934,-1e-05] (-1,-1; 15,-1), time: 0.2969s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_139, [-1.84656822681427,0.5568047761917114]=>[-1.84656822681427,-1e-05] (-1,-1; 15,-1), time: 0.8288s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_21, [-0.7773920297622681,0.5285537242889404]=>[-0.4230134708980651,0.09033645529126473] (9,-1; 9,-1), time: 30.0076s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_10, [-0.8807797431945801,0.5368961095809937]=>[-0.4415812426235515,0.07204265649972462] (9,-1; 2,-1), time: 29.9152s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_7, [-0.5280796885490417,0.6068251132965088]=>[-0.12739047012447102,0.2798292323882062] (9,-1; 9,-1), time: 30.0054s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_50, [-0.9270471930503845,0.4849800765514374]=>[-0.4433832806844358,0.14146434258564117] (9,-1; 9,-1), time: 30.0058s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_102, [-0.763382077217102,0.4704558253288269]=>[-0.33091540493966076,0.12083436928813163] (2,-1; 9,-1), time: 25.9036s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_41, [-0.7033799886703491,0.5706229209899902]=>[-0.2586077402568079,0.20925392326362544] (9,-1; 9,-1), time: 30.0080s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_48, [-0.8502650260925293,0.8490685224533081]=>[-0.40180085130271753,0.24666948965110835] (9,-1; 9,-1), time: 30.0150s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_160, [-0.7584716081619263,0.5067282915115356]=>[-0.424492372913593,0.03141142633749786] (9,-1; 9,-1), time: 30.0415s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_195, [-1.012701153755188,0.48933565616607666]=>[-0.5391986596945079,0.08683818705874646] (9,-1; 9,-1), time: 30.0049s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_170, [-0.6199043393135071,0.452438086271286]=>[-0.20297212957433217,0.17367676103879973] (9,-1; 9,-1), time: 30.0053s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_39, [-0.6398919820785522,1.1304080486297607]=>[-0.12436570092491814,0.5686861254832306] (9,-1; 9,-1), time: 30.0076s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_61, [-0.9566299319267273,0.42839881777763367]=>[-0.5500429815733623,0.028258094025954424] (9,-1; 9,-1), time: 30.0092s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_127, [-0.47309455275535583,0.9246618747711182]=>[-0.07681692184913429,0.4881707696018745] (9,-1; 9,-1), time: 30.0050s, #vars: 1581, #constrs: 894, improved: True
Solving MIP for lay6_107, [-0.5543862581253052,0.6448349952697754]=>[-0.11456821326314555,0.3167482066296791] (9,-1; 9,-1), time: 30.0198s, #vars: 1581, #constrs: 894, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
best_l after optimization: 72.94081115722656 with beta sum per layer: []
optimal alpha/beta time: 14.863075733184814
alpha-CROWN with intermediate bounds by MIP: tensor([[-5.8794, -7.8590, -9.9203, -9.9396, -9.0751, -8.7125, -8.6139, -4.5567,
         -8.3842]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 78 nodes out of 78 unstable nodes, lb improved 14.100691795349121, ub improved 21.124950408935547, time 62.9208
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_160', 'lay8_162', 'lay8_49', 'lay8_92', 'lay8_93', 'lay8_157', 'lay8_35', 'lay8_12', 'lay8_79', 'lay8_118', 'lay8_115', 'lay8_179', 'lay8_176', 'lay8_61', 'lay8_183', 'lay8_158', 'lay8_119', 'lay8_164', 'lay8_23', 'lay8_53', 'lay8_177', 'lay8_76', 'lay8_126', 'lay8_14', 'lay8_33', 'lay8_169', 'lay8_191', 'lay8_37', 'lay8_21', 'lay8_11', 'lay8_165', 'lay8_149', 'lay8_36', 'lay8_150', 'lay8_123', 'lay8_8', 'lay8_168', 'lay8_128', 'lay8_60', 'lay8_31', 'lay8_172', 'lay8_137', 'lay8_194', 'lay8_24', 'lay8_190', 'lay8_70', 'lay8_10', 'lay8_34', 'lay8_94', 'lay8_44', 'lay8_39', 'lay8_85', 'lay8_28', 'lay8_99', 'lay8_171', 'lay8_122', 'lay8_154', 'lay8_102', 'lay8_151', 'lay8_109', 'lay8_134', 'lay8_129', 'lay8_69', 'lay8_195', 'lay8_189', 'lay8_144', 'lay8_40', 'lay8_156', 'lay8_100', 'lay8_43', 'lay8_56', 'lay8_184', 'lay8_116', 'lay8_117', 'lay8_107', 'lay8_51', 'lay8_185', 'lay8_166', 'lay8_48', 'lay8_130', 'lay8_187', 'lay8_71', 'lay8_68', 'lay8_147', 'lay8_193', 'lay8_173', 'lay8_57', 'lay8_106', 'lay8_163', 'lay8_101', 'lay8_58', 'lay8_112', 'lay8_84', 'lay8_27', 'lay8_5', 'lay8_180', 'lay8_3', 'lay8_82', 'lay8_6', 'lay8_75', 'lay8_96', 'lay8_41', 'lay8_197', 'lay8_81', 'lay8_19', 'lay8_98', 'lay8_50', 'lay8_91', 'lay8_0', 'lay8_161', 'lay8_86', 'lay8_141', 'lay8_159', 'lay8_1', 'lay8_127', 'lay8_95', 'lay8_74', 'lay8_124', 'lay8_63', 'lay8_72', 'lay8_148', 'lay8_121', 'lay8_17', 'lay8_89', 'lay8_78', 'lay8_30', 'lay8_66', 'lay8_7', 'lay8_20', 'lay8_59', 'lay8_65', 'lay8_153', 'lay8_88', 'lay8_181', 'lay8_178', 'lay8_146', 'lay8_143', 'lay8_103', 'lay8_77', 'lay8_139', 'lay8_170', 'lay8_133', 'lay8_54', 'lay8_192', 'lay8_80', 'lay8_9'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.39973831176758 with beta sum per layer: []
optimal alpha/beta time: 0.08297538757324219
alpha-CROWN with intermediate bounds by MIP: tensor([[8.2726, 7.4744, 6.9579, 5.2053, 2.4043, 5.8856, 8.2588, 4.3806, 4.5602]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
min of alpha-CROWN bounds 2.404322385787964>=0, verified!
MIP finished with 103.73516535758972s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.39973831176758 with beta sum per layer: []
optimal alpha/beta time: 0.06453800201416016
alpha-CROWN with intermediate bounds improved by MIP: tensor([[8.2726, 7.4744, 6.9579, 5.2053, 2.4043, 5.8856, 8.2588, 4.3806, 4.5602]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[8.2726, 7.4744, 6.9579, 5.2053, 2.4043, 5.8856, 8.2588, 4.3806, 4.5602,
         0.0000]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 127.0345 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 127.03453660011292
safe-incomplete-refine (total 1): [0]
