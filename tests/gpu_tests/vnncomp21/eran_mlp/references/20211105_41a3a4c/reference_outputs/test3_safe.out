The program tries to detect if we are inside a docker. Hiding ourselves!!
Experiments at Fri Nov  5 12:23:46 2021 on huan-Super-Server
saving results to vnn-comp_[eran_instances]_start=24_end=25_iter=20_b=500_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=before.npz
customized start/end sample from 24 to 25

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
##### PGD attack: True label: 1, Tested against: [0, 2, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-2.9098,  7.6321, -1.8308, -2.2878, -1.7660, -0.7275, -1.2835,  0.9114,
        -0.4213, -1.2204], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([10.5419,     inf,  9.4629,  9.9198,  9.3980,  8.3595,  8.9156,  6.7207,
         8.0533,  8.8525], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[-3.2749,  8.6015, -2.0694, -2.5680, -2.0008, -0.8726, -1.4305,  1.0257,
         -0.5334, -1.4153]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ -743.8039, -1126.8256, -1047.5470, -1119.4009, -1107.7098, -1044.3668,
          -964.2955, -1150.8038, -1236.0493]], device='cuda:0') None
best_l after optimization: 5674.1220703125 with beta sum per layer: []
optimal alpha/beta time: 14.361145973205566
initial alpha-CROWN bounds: tensor([[-444.3284, -680.6711, -631.4625, -667.9207, -677.9566, -632.5526,
         -537.2459, -675.9586, -726.0252]], device='cuda:0',
       grad_fn=<AsStridedBackward>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=200, bias=True) 0 2 torch.Size([200])
Linear(in_features=200, out_features=200, bias=True) 1 4 torch.Size([200])
sorted candidates ['lay4_87', 'lay4_84', 'lay4_9', 'lay4_121', 'lay4_92', 'lay4_74', 'lay4_161', 'lay4_136', 'lay4_76', 'lay4_198', 'lay4_95', 'lay4_88', 'lay4_77', 'lay4_142', 'lay4_13', 'lay4_53', 'lay4_178', 'lay4_1', 'lay4_27', 'lay4_139', 'lay4_37', 'lay4_14', 'lay4_194', 'lay4_110', 'lay4_11', 'lay4_175', 'lay4_19', 'lay4_47', 'lay4_33', 'lay4_73', 'lay4_134', 'lay4_50', 'lay4_128', 'lay4_152', 'lay4_176', 'lay4_108', 'lay4_64', 'lay4_8', 'lay4_55', 'lay4_132', 'lay4_115', 'lay4_133', 'lay4_150', 'lay4_138', 'lay4_151', 'lay4_117', 'lay4_145', 'lay4_154', 'lay4_3', 'lay4_129', 'lay4_69', 'lay4_167', 'lay4_168', 'lay4_127', 'lay4_137', 'lay4_172', 'lay4_59', 'lay4_51', 'lay4_107', 'lay4_52', 'lay4_196', 'lay4_98', 'lay4_183', 'lay4_191', 'lay4_123', 'lay4_12', 'lay4_6', 'lay4_162', 'lay4_174', 'lay4_171', 'lay4_193', 'lay4_165', 'lay4_7', 'lay4_31', 'lay4_26', 'lay4_114', 'lay4_35', 'lay4_103', 'lay4_18', 'lay4_70', 'lay4_20', 'lay4_41', 'lay4_34', 'lay4_182', 'lay4_28', 'lay4_30', 'lay4_166', 'lay4_43', 'lay4_24', 'lay4_71', 'lay4_197', 'lay4_153'] filter: 1.0
/home/shiqi/miniconda3/lib/python3.8/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/miniconda3/lib/python3.8/site-packages/onnx2pytorch/convert/operations.py:70: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1616554793803/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  op = value_wrapper(torch.from_numpy(extract_attributes(node)["constant"]))
Solving MIP for lay4_142, [-0.9945893287658691,0.13096067309379578]=>[-0.9945893287658691,-1e-05] (-1,-1; 15,-1), time: 1.2301s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_87, [-0.8227161169052124,0.4648897349834442]=>[-0.5821151080293293,0.2573553711873691] (2,-1; 2,-1), time: 4.4003s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_88, [-0.37901216745376587,0.6738684177398682]=>[-0.23707053061529113,0.43833282347911867] (2,-1; 2,-1), time: 4.6917s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_95, [-0.30135196447372437,0.8148791790008545]=>[-0.02171972955310418,0.6876471367042732] (2,-1; 2,-1), time: 5.1517s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_9, [-0.7582207322120667,0.2856900990009308]=>[-0.5450243224707261,0.09539278232098902] (2,-1; 2,-1), time: 5.8797s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_84, [-0.6039924621582031,0.5753711462020874]=>[-0.3465995992483359,0.3642720922693975] (2,-1; 2,-1), time: 6.0923s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_77, [-0.6830222606658936,0.24533432722091675]=>[-0.5074714673019978,0.028374372939698352] (2,-1; 2,-1), time: 6.4942s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_76, [-0.6439640522003174,0.4640655815601349]=>[-0.38153807941910545,0.2536602961329403] (2,-1; 2,-1), time: 6.7834s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_136, [-0.3929594159126282,0.7452505230903625]=>[-0.14509816853401108,0.530620340184192] (2,-1; 2,-1), time: 7.1009s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_53, [-0.4681783616542816,0.7430846691131592]=>[-0.1458388896791985,0.5269842272837557] (2,-1; 2,-1), time: 7.4753s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_194, [-1.085821509361267,0.12080970406532288]=>[-1.085821509361267,-1e-05] (-1,-1; 15,-1), time: 1.0350s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_198, [-0.8150815963745117,0.3931713104248047]=>[-0.5780352484786857,0.11404896760416594] (2,-1; 2,-1), time: 7.5640s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_11, [-1.0318970680236816,0.09240677952766418]=>[-1.0318970680236816,-1e-05] (-1,-1; 15,-1), time: 0.6937s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_139, [-0.3915405869483948,0.5600348711013794]=>[-0.1811735476151944,0.42573472572633486] (2,-1; 2,-1), time: 2.8957s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_121, [-0.9355599880218506,0.2879231572151184]=>[-0.6260978454233366,0.038389225184252994] (2,-1; 2,-1), time: 8.5216s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_175, [-0.19092312455177307,1.0093555450439453]=>[1e-05,1.0093555450439453] (15,-1; -1,-1), time: 1.1235s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_73, [-1.117133378982544,0.05698317289352417]=>[-1.117133378982544,-1e-05] (-1,-1; 15,-1), time: 0.5848s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_178, [-0.959333062171936,0.25938117504119873]=>[-0.6782025409184356,0.04231880439697204] (2,-1; 2,-1), time: 7.9867s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_128, [-0.9599279165267944,0.08632320165634155]=>[-0.9599279165267944,-1e-05] (-1,-1; 15,-1), time: 0.7123s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_161, [-0.6374799013137817,0.3747096657752991]=>[-0.3818252473935942,0.18075699313526228] (2,-1; 2,-1), time: 9.3636s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_13, [-0.6986516714096069,0.38461387157440186]=>[-0.4009990562380417,0.21081097629869033] (2,-1; 2,-1), time: 9.5844s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_134, [-0.9549360275268555,0.20688751339912415]=>[-0.9549360275268555,-1e-05] (-1,-1; 15,-1), time: 1.4468s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_108, [-1.0073007345199585,0.09247824549674988]=>[-1.0073007345199585,-1e-05] (-1,-1; 15,-1), time: 0.6155s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_92, [-0.3990700840950012,0.8049235939979553]=>[-0.24256239211294497,0.45540230189614866] (2,-1; 2,-1), time: 10.1779s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_176, [-0.8407050371170044,0.13145041465759277]=>[-0.8407050371170044,-1e-05] (-1,-1; 15,-1), time: 0.9633s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_74, [-0.5861638784408569,0.5030631422996521]=>[-0.28613643322338456,0.3024515813359559] (2,-1; 2,-1), time: 10.7169s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_55, [-0.893562912940979,0.15435504913330078]=>[-0.893562912940979,-1e-05] (-1,-1; 15,-1), time: 0.9819s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_1, [-0.6760386228561401,0.3751848638057709]=>[-0.44311056899070494,0.1370701935501251] (2,-1; 2,-1), time: 7.0253s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_150, [-0.8206443786621094,0.05595625936985016]=>[-0.8206443786621094,-1e-05] (-1,-1; 15,-1), time: 0.6495s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_47, [-0.6228351593017578,0.4468672573566437]=>[-0.39779928154600946,0.2510382749771648] (2,-1; 2,-1), time: 4.2948s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_117, [-1.0263786315917969,0.11000716686248779]=>[-1.0263786315917969,-1e-05] (-1,-1; 15,-1), time: 1.0075s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_14, [-0.7491542100906372,0.18908771872520447]=>[-0.5334413987011373,0.01720673216510319] (2,-1; 2,-1), time: 6.8436s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_33, [-0.6781483888626099,0.6551964282989502]=>[-0.5145961752793619,0.349724288830366] (2,-1; 2,-1), time: 5.1519s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_145, [-0.9305375218391418,0.12097880244255066]=>[-0.9305375218391418,-1e-05] (-1,-1; 15,-1), time: 0.8251s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_152, [-0.42525404691696167,0.7856667041778564]=>[-0.21669199424932398,0.5250419239002866] (2,-1; 2,-1), time: 5.0215s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_129, [-0.8139475584030151,0.13518661260604858]=>[-0.8139475584030151,-1e-05] (-1,-1; 15,-1), time: 0.9354s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_69, [-0.8208522796630859,0.14695331454277039]=>[-0.8208522796630859,-1e-05] (-1,-1; 15,-1), time: 0.9104s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_37, [-0.5571377277374268,0.572477400302887]=>[-0.29116260889292805,0.30698526929290165] (2,-1; 2,-1), time: 9.3235s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_167, [-0.8897379636764526,0.07338562607765198]=>[-0.8897379636764526,-1e-05] (-1,-1; 15,-1), time: 0.6172s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_137, [-0.9636623859405518,0.0693005621433258]=>[-0.9636623859405518,-1e-05] (-1,-1; 15,-1), time: 0.5456s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_50, [-0.7499903440475464,0.42420902848243713]=>[-0.4761663607774234,0.18222408964348177] (2,-1; 2,-1), time: 7.2808s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_138, [-0.7127562761306763,0.15136300027370453]=>[-0.4801422993949455,0.046082449572676924] (2,-1; 2,-1), time: 4.7719s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_8, [-0.6111477613449097,0.47202184796333313]=>[-0.3895796196264999,0.21191939856791694] (2,-1; 2,-1), time: 6.3622s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_59, [-0.10651067644357681,0.9941629767417908]=>[1e-05,0.9941629767417908] (15,-1; -1,-1), time: 0.7225s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_51, [-1.3213106393814087,0.016784310340881348]=>[-1.3213106393814087,-1e-05] (-1,-1; 15,-1), time: 0.6352s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_107, [-0.9511802196502686,0.04809105396270752]=>[-0.9511802196502686,-1e-05] (-1,-1; 15,-1), time: 0.5984s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_64, [-0.7629865407943726,0.3421366214752197]=>[-0.4768478606836773,0.1864405327868732] (2,-1; 2,-1), time: 7.5394s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_154, [-0.8964295387268066,0.12965434789657593]=>[-0.6559431800333845,0.0008631421750129112] (2,-1; 2,-1), time: 4.5246s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_133, [-0.36142075061798096,0.5048481822013855]=>[-0.11042838983460677,0.38037075942921356] (2,-1; 2,-1), time: 6.8244s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_123, [-0.9516576528549194,0.010210096836090088]=>[-0.9516576528549194,-1e-05] (-1,-1; 15,-1), time: 0.6247s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_98, [-1.0219389200210571,0.19870108366012573]=>[-1.0219389200210571,-1e-05] (-1,-1; 15,-1), time: 1.7127s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_115, [-0.5779630541801453,0.3828198313713074]=>[-0.32478813072613555,0.19553511660627151] (2,-1; 2,-1), time: 8.4438s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_12, [-0.958276629447937,0.03859919309616089]=>[-0.958276629447937,-1e-05] (-1,-1; 15,-1), time: 0.6311s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_191, [-0.19360142946243286,0.9679175615310669]=>[1e-05,0.9679175615310669] (15,-1; -1,-1), time: 1.7275s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_6, [-0.930596113204956,0.015751883387565613]=>[-0.930596113204956,-1e-05] (-1,-1; 15,-1), time: 0.5471s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_52, [-0.8158795237541199,0.2005869597196579]=>[-0.8158795237541199,-1e-05] (-1,-1; 15,-1), time: 2.8419s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_165, [-1.0303095579147339,0.03069227933883667]=>[-1.0303095579147339,-1e-05] (-1,-1; 15,-1), time: 0.6169s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_196, [-0.8179396390914917,0.21830815076828003]=>[-0.8179396390914917,-1e-05] (-1,-1; 15,-1), time: 4.2808s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_27, [-0.8083299398422241,0.2621816396713257]=>[-0.5043327411151992,0.1062541372529549] (9,-1; 2,-1), time: 16.4496s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_26, [-0.13713978230953217,0.9202248454093933]=>[1e-05,0.9202248454093933] (15,-1; -1,-1), time: 1.0060s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_19, [-0.6888915300369263,0.41305050253868103]=>[-0.3264628449710715,0.3091290658013644] (2,-1; 2,-1), time: 14.6854s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_168, [-0.6058057546615601,0.34910494089126587]=>[-0.40262289748684993,0.13841106756544527] (2,-1; 2,-1), time: 7.3661s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_151, [-0.31539636850357056,0.776215136051178]=>[-0.07206840261286376,0.4883175025689525] (2,-1; 2,-1), time: 11.9828s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_162, [-0.3684895634651184,0.7274288535118103]=>[-0.16027822194280403,0.5160313630297201] (2,-1; 2,-1), time: 5.4871s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_172, [-0.6443425416946411,0.32740840315818787]=>[-0.39480387397169975,0.13440064163924698] (2,-1; 2,-1), time: 8.5834s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_183, [-0.4484070837497711,0.5308486819267273]=>[-0.289784734713547,0.2553971720751185] (2,-1; 2,-1), time: 7.4189s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_18, [-0.1559164822101593,0.8418300151824951]=>[1e-05,0.8418300151824951] (15,-1; -1,-1), time: 1.3715s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_110, [-0.6314818263053894,0.3824288249015808]=>[-0.34988958907361417,0.18572457933432565] (9,-1; 2,-1), time: 18.2648s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_174, [-0.6937413215637207,0.37845003604888916]=>[-0.48834168697681457,0.11479420890696472] (2,-1; 2,-1), time: 6.6679s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_28, [-0.9771893620491028,0.05896015465259552]=>[-0.9771893620491028,-1e-05] (-1,-1; 15,-1), time: 0.6555s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_132, [-0.7888989448547363,0.2622074782848358]=>[-0.4681717552477549,0.11748464484032672] (9,-1; 2,-1), time: 16.1640s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_30, [-1.2637279033660889,0.00882035493850708]=>[-1.2637279033660889,-1e-05] (-1,-1; 15,-1), time: 0.6758s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_20, [-0.7776670455932617,0.17819057404994965]=>[-0.7776670455932617,-1e-05] (-1,-1; 15,-1), time: 2.4353s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_127, [-0.945396363735199,0.18190288543701172]=>[-0.5492065054177572,0.1049292205412423] (2,-1; 2,-1), time: 12.0252s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_24, [-0.812294602394104,0.04173275828361511]=>[-0.812294602394104,-1e-05] (-1,-1; 15,-1), time: 0.6922s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_114, [-0.24439646303653717,0.6166917085647583]=>[-0.07753599331012104,0.4324033181855758] (2,-1; 2,-1), time: 5.6191s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_71, [-0.9705387353897095,0.03828480839729309]=>[-0.9705387353897095,-1e-05] (-1,-1; 15,-1), time: 0.6856s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_153, [-0.11689013242721558,1.2314119338989258]=>[1e-05,1.2314119338989258] (15,-1; -1,-1), time: 0.7315s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_171, [-0.35413652658462524,0.6589972972869873]=>[-0.041716595832397736,0.5196626506637315] (2,-1; 2,-1), time: 10.9739s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_3, [-0.6396583318710327,0.44923511147499084]=>[-0.30236785151338125,0.2698672971144902] (9,-1; 2,-1), time: 17.4368s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_193, [-0.9303602576255798,0.21376144886016846]=>[-0.5537279741349178,0.11233465511899797] (2,-1; 2,-1), time: 11.3045s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_7, [-0.8786377906799316,0.16078512370586395]=>[-0.5260317043599161,0.023622621378931147] (2,-1; 2,-1), time: 10.5252s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_34, [-0.765755295753479,0.34564727544784546]=>[-0.478538804096113,0.19923507510751126] (2,-1; 2,-1), time: 5.6482s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_70, [-0.616887092590332,0.6710951328277588]=>[-0.40074617463539575,0.33679469577197746] (2,-1; 2,-1), time: 6.8241s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_166, [-0.2728976011276245,0.7517865896224976]=>[1e-05,0.7517865896224976] (15,-1; -1,-1), time: 4.8451s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_31, [-0.4685465097427368,0.4857940077781677]=>[-0.21750362294271214,0.297159960908714] (2,-1; 2,-1), time: 10.2954s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_182, [-0.4944830536842346,0.6867545247077942]=>[-0.20428844418799086,0.48900659580885] (2,-1; 2,-1), time: 6.7468s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_103, [-0.5717155933380127,0.4595435559749603]=>[-0.26236598793489196,0.3050538671138103] (2,-1; 2,-1), time: 9.3909s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_41, [-0.32934415340423584,0.7851905226707458]=>[-0.06326590152601934,0.5492110277292589] (2,-1; 2,-1), time: 7.6815s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_35, [-0.8713939189910889,0.16103141009807587]=>[-0.5346351239815255,0.029693641973106536] (2,-1; 2,-1), time: 10.7721s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_197, [-0.7015016078948975,0.3903542757034302]=>[-0.41709117026626746,0.18147299269356157] (2,-1; 2,-1), time: 8.9135s, #vars: 1287, #constrs: 553, improved: True
Solving MIP for lay4_43, [-0.5083036422729492,0.49046048521995544]=>[-0.20995239992306858,0.33662555538171984] (2,-1; 2,-1), time: 10.3934s, #vars: 1287, #constrs: 553, improved: True
MIP improved 92 nodes out of 92 unstable nodes, lb improved 15.451873779296875, ub improved 13.770721435546875, time 37.7096
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=200, out_features=200, bias=True) 2 6 torch.Size([200])
sorted candidates ['lay6_190', 'lay6_10', 'lay6_8', 'lay6_61', 'lay6_160', 'lay6_62', 'lay6_159', 'lay6_172', 'lay6_18', 'lay6_167', 'lay6_124', 'lay6_111', 'lay6_179', 'lay6_35', 'lay6_139', 'lay6_101', 'lay6_154', 'lay6_21', 'lay6_88', 'lay6_90', 'lay6_192', 'lay6_3', 'lay6_31', 'lay6_78', 'lay6_65', 'lay6_145', 'lay6_13', 'lay6_49', 'lay6_55', 'lay6_123', 'lay6_106', 'lay6_144', 'lay6_115', 'lay6_110', 'lay6_44', 'lay6_63', 'lay6_130', 'lay6_118', 'lay6_24', 'lay6_105', 'lay6_17', 'lay6_76', 'lay6_98', 'lay6_116', 'lay6_135', 'lay6_9', 'lay6_83', 'lay6_20', 'lay6_74', 'lay6_43', 'lay6_108', 'lay6_156', 'lay6_109', 'lay6_168', 'lay6_42', 'lay6_41', 'lay6_69', 'lay6_103', 'lay6_12', 'lay6_16', 'lay6_4', 'lay6_27', 'lay6_122', 'lay6_153', 'lay6_136', 'lay6_29', 'lay6_121', 'lay6_165', 'lay6_158', 'lay6_52', 'lay6_94', 'lay6_169', 'lay6_119', 'lay6_199', 'lay6_47', 'lay6_163', 'lay6_162', 'lay6_54', 'lay6_175', 'lay6_180', 'lay6_46', 'lay6_53', 'lay6_28', 'lay6_81', 'lay6_146', 'lay6_40', 'lay6_5', 'lay6_138', 'lay6_15', 'lay6_188', 'lay6_73', 'lay6_198', 'lay6_82'] filter: 1.0
Solving MIP for lay6_160, [-1.557012915611267,0.3377618193626404]=>[-1.557012915611267,-1e-05] (-1,-1; 15,-1), time: 0.3675s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_35, [-1.6462693214416504,0.2576904296875]=>[-1.6462693214416504,-1e-05] (-1,-1; 15,-1), time: 0.4087s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_179, [-1.2217741012573242,0.3033706545829773]=>[-1.2217741012573242,-1e-05] (-1,-1; 15,-1), time: 0.8067s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_190, [-1.3683788776397705,0.482163667678833]=>[-1.3683788776397705,-1e-05] (-1,-1; 15,-1), time: 0.9111s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_21, [-1.0857932567596436,0.3156132400035858]=>[-1.0857932567596436,-1e-05] (-1,-1; 15,-1), time: 0.6522s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_139, [-1.6154119968414307,0.5022428631782532]=>[-1.6154119968414307,-1e-05] (-1,-1; 15,-1), time: 1.1447s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_101, [-1.1284208297729492,0.34626302123069763]=>[-1.1284208297729492,-1e-05] (-1,-1; 15,-1), time: 1.2623s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_90, [-1.387772560119629,0.17072397470474243]=>[-1.387772560119629,-1e-05] (-1,-1; 15,-1), time: 0.3818s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_88, [-1.4403417110443115,0.2778124213218689]=>[-1.4403417110443115,-1e-05] (-1,-1; 15,-1), time: 0.6942s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_159, [-1.4704819917678833,0.47809314727783203]=>[-1.4704819917678833,-1e-05] (-1,-1; 15,-1), time: 1.5997s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_145, [-1.03800368309021,0.40786564350128174]=>[-1.03800368309021,-1e-05] (-1,-1; 15,-1), time: 9.7360s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_154, [-1.2799367904663086,0.3830937147140503]=>[-1.2799367904663086,-1e-05] (-1,-1; 15,-1), time: 11.8105s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_49, [-1.2505415678024292,0.27144503593444824]=>[-1.2505415678024292,-1e-05] (-1,-1; 15,-1), time: 0.3019s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_13, [-1.2057723999023438,0.3120816946029663]=>[-1.2057723999023438,-1e-05] (-1,-1; 15,-1), time: 2.9455s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_123, [-1.7294150590896606,0.08792757987976074]=>[-1.7294150590896606,-1e-05] (-1,-1; 15,-1), time: 0.3036s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_106, [-1.0958881378173828,0.36423414945602417]=>[-1.0958881378173828,-1e-05] (-1,-1; 15,-1), time: 4.9283s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_144, [-1.2542932033538818,0.3686169981956482]=>[-1.2542932033538818,-1e-05] (-1,-1; 15,-1), time: 0.9628s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_115, [-1.408257007598877,0.15483921766281128]=>[-1.408257007598877,-1e-05] (-1,-1; 15,-1), time: 0.3011s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_111, [-1.0593332052230835,0.7148675918579102]=>[-0.5814059629705561,0.14299001039435127] (2,-1; 9,-1), time: 29.3062s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_44, [-1.7490763664245605,0.1552198827266693]=>[-1.7490763664245605,-1e-05] (-1,-1; 15,-1), time: 0.3055s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_63, [-1.421838641166687,0.1083686351776123]=>[-1.421838641166687,-1e-05] (-1,-1; 15,-1), time: 0.2906s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_18, [-1.2499525547027588,0.43953844904899597]=>[-0.6906341036837922,0.022397450803133736] (9,-1; 9,-1), time: 30.0041s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_167, [-1.0645960569381714,0.7184119820594788]=>[-0.5305120830314275,0.24668787448967475] (9,-1; 9,-1), time: 30.0096s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_124, [-0.7034700512886047,0.850966215133667]=>[-0.27809180812384354,0.3619944710015066] (9,-1; 9,-1), time: 30.0108s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_172, [-1.0004174709320068,0.6076014041900635]=>[-0.5580674915365693,0.08371030718450236] (9,-1; 9,-1), time: 30.0125s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_62, [-1.3007194995880127,0.6694134473800659]=>[-0.8111346916129168,0.043847295474838545] (9,-1; 9,-1), time: 30.0184s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_61, [-1.1383461952209473,0.4736614525318146]=>[-0.6068171570481441,0.06157682232664055] (9,-1; 9,-1), time: 30.0286s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_10, [-1.3042619228363037,0.8770175576210022]=>[-0.7466721850341189,0.16167797806760703] (9,-1; 9,-1), time: 30.0293s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_8, [-1.3122962713241577,0.5734973549842834]=>[-0.820401062896256,0.006115112355784672] (9,-1; 9,-1), time: 30.0626s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_130, [-1.5310256481170654,0.11885988712310791]=>[-1.5310256481170654,-1e-05] (-1,-1; 15,-1), time: 0.2947s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_17, [-1.2271971702575684,0.24409204721450806]=>[-1.2271971702575684,-1e-05] (-1,-1; 15,-1), time: 0.2920s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_24, [-1.4851597547531128,0.1245400607585907]=>[-1.4851597547531128,-1e-05] (-1,-1; 15,-1), time: 0.3109s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_116, [-1.5387701988220215,0.10841166973114014]=>[-1.5387701988220215,-1e-05] (-1,-1; 15,-1), time: 0.2950s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_98, [-1.3468503952026367,0.13783925771713257]=>[-1.3468503952026367,-1e-05] (-1,-1; 15,-1), time: 0.3104s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_76, [-1.255630373954773,0.2720392942428589]=>[-1.255630373954773,-1e-05] (-1,-1; 15,-1), time: 0.5996s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_74, [-1.5228747129440308,0.12984389066696167]=>[-1.5228747129440308,-1e-05] (-1,-1; 15,-1), time: 0.2966s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_43, [-1.2559829950332642,0.20296049118041992]=>[-1.2559829950332642,-1e-05] (-1,-1; 15,-1), time: 0.2966s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_105, [-1.4706207513809204,0.2970501780509949]=>[-1.4706207513809204,-1e-05] (-1,-1; 15,-1), time: 0.6786s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_108, [-1.4975383281707764,0.012978076934814453]=>[-1.4975383281707764,-1e-05] (-1,-1; 15,-1), time: 0.3006s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_83, [-1.341308355331421,0.2553623914718628]=>[-1.341308355331421,-1e-05] (-1,-1; 15,-1), time: 0.6241s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_168, [-1.1532423496246338,0.2103901505470276]=>[-1.1532423496246338,-1e-05] (-1,-1; 15,-1), time: 0.3023s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_192, [-0.7736720442771912,0.9112868905067444]=>[-0.22442959172728202,0.4668988384845936] (9,-1; 9,-1), time: 30.0279s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_3, [-0.7844030261039734,0.886168897151947]=>[-0.3185310003847955,0.3564983626915035] (9,-1; 9,-1), time: 30.0057s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_42, [-1.307600736618042,0.22420793771743774]=>[-1.307600736618042,-1e-05] (-1,-1; 15,-1), time: 0.2885s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_41, [-1.5668363571166992,0.020583271980285645]=>[-1.5668363571166992,-1e-05] (-1,-1; 15,-1), time: 0.3064s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_31, [-0.7525330781936646,0.7433320879936218]=>[-0.24775479759613972,0.34907798979028476] (9,-1; 9,-1), time: 30.0153s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_78, [-0.5928810834884644,0.7807866930961609]=>[-0.14861875121988688,0.3777635401998751] (9,-1; 9,-1), time: 30.0088s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_12, [-1.3323454856872559,0.19481444358825684]=>[-1.3323454856872559,-1e-05] (-1,-1; 15,-1), time: 0.2934s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_65, [-0.4661908447742462,0.834283709526062]=>[-0.11154851339332987,0.4447341356516243] (9,-1; 9,-1), time: 30.0051s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_16, [-1.7072393894195557,0.09413433074951172]=>[-1.7072393894195557,-1e-05] (-1,-1; 15,-1), time: 0.2968s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_122, [-1.2984263896942139,0.1286604404449463]=>[-1.2984263896942139,-1e-05] (-1,-1; 15,-1), time: 0.3075s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_29, [-1.7046939134597778,0.0856427550315857]=>[-1.7046939134597778,-1e-05] (-1,-1; 15,-1), time: 0.2854s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_136, [-1.5142592191696167,0.07551693916320801]=>[-1.5142592191696167,-1e-05] (-1,-1; 15,-1), time: 0.2874s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_121, [-0.004733920097351074,1.4507246017456055]=>[1e-05,1.4507246017456055] (15,-1; -1,-1), time: 0.2778s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_4, [-1.4594616889953613,0.40501493215560913]=>[-1.4594616889953613,-1e-05] (-1,-1; 15,-1), time: 0.7317s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_165, [-1.3704110383987427,0.10423968732357025]=>[-1.3704110383987427,-1e-05] (-1,-1; 15,-1), time: 0.2909s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_158, [-0.23083782196044922,1.1485518217086792]=>[1e-05,1.1485518217086792] (15,-1; -1,-1), time: 0.2941s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_52, [-1.2845585346221924,0.07676982879638672]=>[-1.2845585346221924,-1e-05] (-1,-1; 15,-1), time: 0.2903s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_94, [-0.23619145154953003,1.4053411483764648]=>[1e-05,1.4053411483764648] (15,-1; -1,-1), time: 0.2922s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_119, [-0.24032586812973022,1.337559461593628]=>[1e-05,1.337559461593628] (15,-1; -1,-1), time: 0.2989s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_47, [-1.318953037261963,0.3558403253555298]=>[-1.318953037261963,-1e-05] (-1,-1; 15,-1), time: 1.0588s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_162, [-1.4860180616378784,0.22928857803344727]=>[-1.4860180616378784,-1e-05] (-1,-1; 15,-1), time: 0.2967s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_54, [-1.6014721393585205,0.02304580807685852]=>[-1.6014721393585205,-1e-05] (-1,-1; 15,-1), time: 0.2916s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_175, [-1.4278899431228638,0.15832450985908508]=>[-1.4278899431228638,-1e-05] (-1,-1; 15,-1), time: 0.5390s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_27, [-0.4665706753730774,1.545738935470581]=>[1e-05,1.545738935470581] (15,-1; -1,-1), time: 7.4721s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_46, [-0.3558802604675293,1.2483141422271729]=>[1e-05,1.2483141422271729] (15,-1; -1,-1), time: 0.3765s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_53, [-0.10385251045227051,1.8053998947143555]=>[1e-05,1.8053998947143555] (15,-1; -1,-1), time: 0.3580s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_9, [-1.081600546836853,0.3259052038192749]=>[-1.081600546836853,-1e-05] (-1,-1; 15,-1), time: 10.7481s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_81, [-0.23386991024017334,1.163901925086975]=>[1e-05,1.163901925086975] (15,-1; -1,-1), time: 0.3263s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_146, [-1.1496398448944092,0.3564525246620178]=>[-1.1496398448944092,-1e-05] (-1,-1; 15,-1), time: 0.8114s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_40, [-1.637477159500122,0.11247676610946655]=>[-1.637477159500122,-1e-05] (-1,-1; 15,-1), time: 0.3357s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_55, [-0.7129333019256592,0.7586348652839661]=>[-0.22261542496415615,0.37624483672117515] (9,-1; 9,-1), time: 30.0061s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_118, [-1.0818042755126953,0.4997366666793823]=>[-1.0818042755126953,-1e-05] (-1,-1; 15,-1), time: 13.3520s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_110, [-1.290709376335144,0.44383054971694946]=>[-0.7117511557349051,0.047755603184671466] (9,-1; 9,-1), time: 30.0570s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_135, [-0.9073161482810974,0.5880684852600098]=>[-0.38486796718157773,0.20955058566420773] (9,-1; 9,-1), time: 30.0180s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_20, [-0.8791964054107666,0.6803370714187622]=>[-0.35793621498211126,0.2859693503643112] (9,-1; 9,-1), time: 30.0107s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_73, [-0.13759291172027588,1.3651729822158813]=>[1e-05,1.3651729822158813] (15,-1; -1,-1), time: 0.3492s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_156, [-0.9856811761856079,0.5847930908203125]=>[-0.4498764333314023,0.2086341435237998] (9,-1; 9,-1), time: 30.0108s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_109, [-0.7642152309417725,0.9385168552398682]=>[-0.17751831372472948,0.5820179351752501] (9,-1; 9,-1), time: 30.0199s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_198, [-1.4350249767303467,0.16077905893325806]=>[-1.4350249767303467,-1e-05] (-1,-1; 15,-1), time: 0.3491s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_82, [-0.03697025775909424,1.7422724962234497]=>[1e-05,1.7422724962234497] (15,-1; -1,-1), time: 0.3544s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_69, [-0.595247745513916,1.002531886100769]=>[-0.04556232633283667,0.6098604426626926] (9,-1; 9,-1), time: 30.0079s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_103, [-1.0297318696975708,0.5595611333847046]=>[-0.43814920447344763,0.18384651826071807] (9,-1; 9,-1), time: 30.0058s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_153, [-1.4155148267745972,0.46166396141052246]=>[-0.7665721910113871,0.0788949523667509] (9,-1; 9,-1), time: 30.0574s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_169, [-0.6265941262245178,0.825380265712738]=>[-0.16697644909376008,0.4222905991425502] (9,-1; 9,-1), time: 30.0433s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_199, [-1.0741455554962158,0.4130980372428894]=>[-0.5819306151832669,0.03602102315356836] (9,-1; 9,-1), time: 30.0047s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_163, [-0.832055926322937,0.9358545541763306]=>[-0.33234668624673747,0.4007012017086282] (9,-1; 9,-1), time: 30.0148s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_180, [-0.9935447573661804,0.7635881900787354]=>[-0.36756868799268116,0.39147008444678594] (9,-1; 9,-1), time: 30.0140s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_28, [-0.5830639004707336,0.9791157245635986]=>[-0.13425623196234934,0.49506179787651494] (9,-1; 9,-1), time: 30.0917s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_5, [-0.6879874467849731,0.8967911005020142]=>[-0.19026382004530976,0.4923745414560773] (9,-1; 9,-1), time: 30.0208s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_138, [-1.014201283454895,0.6016661524772644]=>[-0.4613809710224707,0.18783184388057506] (9,-1; 9,-1), time: 30.0260s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_15, [-0.809124231338501,0.9103255867958069]=>[-0.18712433287544267,0.5153838842385775] (9,-1; 9,-1), time: 30.0193s, #vars: 1597, #constrs: 918, improved: True
Solving MIP for lay6_188, [-0.708942711353302,0.7060226798057556]=>[-0.21482488506350847,0.3686588971557287] (9,-1; 9,-1), time: 30.0042s, #vars: 1597, #constrs: 918, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
best_l after optimization: 36.61541748046875 with beta sum per layer: []
optimal alpha/beta time: 15.835336446762085
alpha-CROWN with intermediate bounds by MIP: tensor([[-3.3796, -3.0348, -2.5293, -4.4815, -5.1192, -4.2999, -3.9087, -4.2534,
         -5.6089]], device='cuda:0', grad_fn=<AsStridedBackward>) None
MIP improved 93 nodes out of 93 unstable nodes, lb improved 18.59406089782715, ub improved 25.94381332397461, time 81.3590
maximum relu layer improved by MIP so far 2
Linear(in_features=200, out_features=200, bias=True) 3 8 torch.Size([200])
sorted candidates ['lay8_76', 'lay8_100', 'lay8_37', 'lay8_162', 'lay8_186', 'lay8_184', 'lay8_91', 'lay8_160', 'lay8_181', 'lay8_28', 'lay8_176', 'lay8_131', 'lay8_22', 'lay8_193', 'lay8_171', 'lay8_150', 'lay8_121', 'lay8_40', 'lay8_71', 'lay8_130', 'lay8_149', 'lay8_60', 'lay8_137', 'lay8_29', 'lay8_159', 'lay8_39', 'lay8_101', 'lay8_11', 'lay8_185', 'lay8_90', 'lay8_167', 'lay8_1', 'lay8_20', 'lay8_103', 'lay8_102', 'lay8_170', 'lay8_21', 'lay8_119', 'lay8_133', 'lay8_99', 'lay8_51', 'lay8_154', 'lay8_192', 'lay8_87', 'lay8_145', 'lay8_4', 'lay8_140', 'lay8_79', 'lay8_153', 'lay8_35', 'lay8_151', 'lay8_49', 'lay8_163', 'lay8_70', 'lay8_129', 'lay8_15', 'lay8_98', 'lay8_123', 'lay8_81', 'lay8_198', 'lay8_64', 'lay8_68', 'lay8_128', 'lay8_155', 'lay8_111', 'lay8_97', 'lay8_168', 'lay8_47', 'lay8_124', 'lay8_117', 'lay8_27', 'lay8_59', 'lay8_33', 'lay8_7', 'lay8_142', 'lay8_134', 'lay8_17', 'lay8_16', 'lay8_178', 'lay8_92', 'lay8_157', 'lay8_25', 'lay8_75', 'lay8_46', 'lay8_53', 'lay8_13', 'lay8_115', 'lay8_96', 'lay8_30', 'lay8_63', 'lay8_36', 'lay8_156', 'lay8_126', 'lay8_174', 'lay8_78', 'lay8_187', 'lay8_114', 'lay8_194', 'lay8_113', 'lay8_55', 'lay8_14', 'lay8_173', 'lay8_112', 'lay8_120', 'lay8_82', 'lay8_58', 'lay8_125', 'lay8_95', 'lay8_85', 'lay8_54', 'lay8_107', 'lay8_165', 'lay8_190', 'lay8_177', 'lay8_164', 'lay8_83', 'lay8_180', 'lay8_110', 'lay8_144', 'lay8_158', 'lay8_169', 'lay8_135', 'lay8_26', 'lay8_43', 'lay8_122', 'lay8_84', 'lay8_196', 'lay8_57', 'lay8_32', 'lay8_86', 'lay8_118', 'lay8_172', 'lay8_2', 'lay8_105'] filter: 1.0
Run alpha-CROWN after refining layer 6 and relu idx 2
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.48283386230469 with beta sum per layer: []
optimal alpha/beta time: 0.09053587913513184
alpha-CROWN with intermediate bounds by MIP: tensor([[6.8994, 6.5090, 6.9038, 6.3784, 5.3684, 5.8986, 4.4286, 5.3075, 5.7891]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
min of alpha-CROWN bounds 4.428634166717529>=0, verified!
MIP finished with 122.81991362571716s
Run final alpha-CROWN after MIP solving on layer 7 and relu idx 3
0 /20 torch.Size([1, 200])
1 /22 torch.Size([1, 200])
2 /24 torch.Size([1, 200])

all verified at 0th iter
best_l after optimization: -53.48283386230469 with beta sum per layer: []
optimal alpha/beta time: 0.06842708587646484
alpha-CROWN with intermediate bounds improved by MIP: tensor([[6.8994, 6.5090, 6.9038, 6.3784, 5.3684, 5.8986, 4.4286, 5.3075, 5.7891]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
refined global lb: tensor([[6.8994, 0.0000, 6.5090, 6.9038, 6.3784, 5.3684, 5.8986, 4.4286, 5.3075,
         5.7891]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
time threshold left for bab: 177.0420572757721
Result: safe-incomplete-refine in 145.2088 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 145.20876121520996
safe-incomplete-refine (total 1): [0]
