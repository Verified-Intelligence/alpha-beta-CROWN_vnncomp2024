/home/huan/miniconda3/envs/py37dup/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
Experiments at Fri Nov  5 01:08:25 2021 on huan-Naples-server
Namespace(batch_size=200, beta_warmup=True, branching_candidates=10, branching_method='kfsb', branching_reduceop='max', complete_verifier='bab', conv_mode='patches', csv_name='cifar2020_instances.csv', data='CIFAR', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=6, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../../vnncomp2021/benchmarks/cifar2020', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.01, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='after', record_lb=False, refinement_batch_size=-1, results_file=None, seed=100, share_slopes=False, solve_slope=True, start=5, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[cifar2020_instances]_start=5_end=6_iter=50_b=200_int-beta=False_timeout=360_branching=kfsb-max-10_lra-init=0.1_lra=0.01_lrb=0.01_PGD=after.npz
customized start/end sample from 5 to 6

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model prediction is: tensor([[-0.8646, -2.2779,  1.5458,  2.1946,  1.6868,  1.4290,  4.4209,  0.2495,
         -2.9811, -1.9518]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.

all verified at 4th iter
best_l after optimization: -13.952371597290039 with beta sum per layer: []
optimal alpha/beta time: 3.596107006072998
initial alpha-CROWN bounds: tensor([[1.8815, 2.7044, 0.6554, 0.0077, 0.5161, 0.5809, 0.6819, 4.0130, 2.9115]],
       device='cuda:0', grad_fn=<AsStridedBackward>) None
verified with init bound!
Result: safe-incomplete in 7.0753 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 7.075331449508667
safe-incomplete (total 1): [0]
