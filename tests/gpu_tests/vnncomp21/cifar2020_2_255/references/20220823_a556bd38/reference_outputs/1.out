Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: cifar2020_instances.csv
  results_file: null
  root_path: ../../vnncomp2021/benchmarks/cifar2020
model:
  path: null
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_9_200
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 44
  end: 45
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: null
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 200
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.01
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 10
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 12:09:13 2022 on diablo.cs.ucla.edu
saving results to a-b-crown_[cifar2020_instances]_start=44_end=45_iter=50_b=200_timeout=360_branching=kfsb-max-10_lra-init=0.1_lra=0.01_lrb=0.01_PGD=before_cplex_cuts=False_initial_max_domains=1.npz
customized start/end sample from 44 to 45

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx nets/cifar10_2_255_simplified.onnx
Using vnnlib specs/cifar10/cifar10_spec_idx_50_eps_0.00784_n1.vnnlib
Precompiled vnnlib file found at ../../vnncomp2021/benchmarks/cifar2020/specs/cifar10/cifar10_spec_idx_50_eps_0.00784_n1.vnnlib.compiled
Loading onnx ../../vnncomp2021/benchmarks/cifar2020/nets/cifar10_2_255_simplified.onnx wih quirks {}
ConvertModel(
  (Conv_11): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (Relu_12): ReLU(inplace=True)
  (Conv_13): Conv2d(32, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (Relu_14): ReLU(inplace=True)
  (Conv_15): Conv2d(32, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (Relu_16): ReLU(inplace=True)
  (Flatten_17): Flatten()
  (Gemm_18): Linear(in_features=8192, out_features=250, bias=True)
  (Relu_19): ReLU(inplace=True)
  (Gemm_20): Linear(in_features=250, out_features=10, bias=True)
)
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.0098334401845932, initialization=uniform, GAMA=False
model output: tensor([[ 4.92940760e+00,  3.54281187e-01,  2.69697642e+00, -1.00646305e+00,
         -2.62816310e+00, -2.09809160e+00, -8.11948776e-01,  2.31551361e+00,
         -5.09226322e-03,  6.18634796e+00]], device='cuda:0')
pgd prediction: tensor([[[ 5.49045944,  0.26369607,  2.75428057, -1.02343345, -2.47399330,
          -2.16443658, -0.86885715,  2.34531093,  0.14412168,  5.81869984],
         [ 5.49045944,  0.26369607,  2.75428057, -1.02343345, -2.47399330,
          -2.16443658, -0.86885715,  2.34531093,  0.14412168,  5.81869984]]],
       device='cuda:0')
pgd attack margin tensor([[[0.32824039, 5.55500364, 3.06441927, 6.84213352, 8.29269314,
          7.98313618, 6.68755722, 3.47338891, 5.67457819]]], device='cuda:0')
number of violation:  0
Attack finished in 2.2544 seconds.
pgd attack failed
Model prediction is: tensor([[ 4.92940760e+00,  3.54281187e-01,  2.69697642e+00, -1.00646305e+00,
         -2.62816310e+00, -2.09809160e+00, -8.11948776e-01,  2.31551361e+00,
         -5.09226322e-03,  6.18634796e+00]], device='cuda:0')
layer /12 using sparse-features alpha with shape [1269]; unstable size 1269; total size 32768 (torch.Size([1, 32, 32, 32]))
layer /12 start_node /input.4 using full alpha with unstable size 32 total_size 32 output_shape 32
layer /12 start_node /input.8 using sparse-spec alpha with unstable size 501 total_size 8192 output_shape (128, 8, 8)
layer /12 start_node /input.12 using sparse-spec alpha with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /12 start_node /20 using full alpha with unstable size None total_size 9 output_shape 9
layer /14 using sparse-features alpha with shape [639]; unstable size 639; total size 8192 (torch.Size([1, 32, 16, 16]))
layer /14 start_node /input.8 using sparse-spec alpha with unstable size 501 total_size 8192 output_shape (128, 8, 8)
layer /14 start_node /input.12 using sparse-spec alpha with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /14 start_node /20 using full alpha with unstable size None total_size 9 output_shape 9
layer /16 using sparse-features alpha with shape [501]; unstable size 501; total size 8192 (torch.Size([1, 128, 8, 8]))
layer /16 start_node /input.12 using sparse-spec alpha with unstable size 36 total_size 250 output_shape torch.Size([250])
layer /16 start_node /20 using full alpha with unstable size None total_size 9 output_shape 9
layer /19 using sparse-features alpha with shape [36]; unstable size 36; total size 250 (torch.Size([1, 250]))
layer /19 start_node /20 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.37368274,  4.09452295,  1.36431110,  5.32944536,  6.44588375,
          6.39589596,  5.10150909,  1.88856626,  4.13766718]], device='cuda:0') None
best_l after optimization: 35.78291320800781 with beta sum per layer: []
alpha/beta optimization time: 12.387928485870361
initial alpha-CROWN bounds: tensor([[-0.24523973,  4.21309566,  1.53900218,  5.49561596,  6.63596725,
          6.55885077,  5.25345421,  2.02685404,  4.30531216]], device='cuda:0')
Worst class: (+ rhs) -0.2452397346496582
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 32, 32, 32]), torch.Size([1, 9, 32, 16, 16]), torch.Size([1, 9, 128, 8, 8]), torch.Size([1, 9, 250])]

Properties batch 0, size 1
Remaining timeout: 281.396692276001
##### [0] Spec matrix: [[[-1.  0.  0.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0.] ######
Remaining spec index [0] with bounds tensor([[-0.24523973]], device='cuda:0') need to verify.
Model prediction is: tensor([ 4.92940760e+00,  3.54281187e-01,  2.69697642e+00, -1.00646305e+00,
        -2.62816310e+00, -2.09809160e+00, -8.11948776e-01,  2.31551361e+00,
        -5.09226322e-03,  6.18634796e+00], device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /12 start_node /20 with alignment adjustment
setting alpha for layer /14 start_node /20 with alignment adjustment
setting alpha for layer /16 start_node /20 with alignment adjustment
setting alpha for layer /19 start_node /20 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 32, 32, 32]), torch.Size([1, 1, 32, 16, 16]), torch.Size([1, 1, 128, 8, 8]), torch.Size([1, 1, 250])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.24523973]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/20']
Keeping slopes for these layers: ['/20']
layer 0 size torch.Size([32768]) unstable 1269
layer 1 size torch.Size([8192]) unstable 630
layer 2 size torch.Size([8192]) unstable 487
layer 3 size torch.Size([250]) unstable 34
-----------------
# of unstable neurons: 2420
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 32, 32, 32]) pre split depth:  4
batch:  torch.Size([1, 32, 32, 32]) post split depth:  4
splitting decisions: 
split level 0: [3, 78] 
split level 1: [3, 184] 
split level 2: [3, 112] 
split level 3: [3, 24] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 13 / 16 = 0.8125
pruning-in-iteration extra time: 0.04465055465698242
Tensors transferred: pre=1.5076M lA=0.1413M alpha=0.0746M beta=0.0001M
This batch time : update_bounds func: 1.2268	 prepare: 0.0044	 bound: 1.2180	 transfer: 0.0035	 finalize: 0.0008
Accumulated time: update_bounds func: 1.2268	 prepare: 0.0044	 bound: 1.2180	 transfer: 0.0035	 finalize: 0.0008
batch bounding time:  1.2268867492675781
Current worst splitting domains lb-rhs (depth):
-0.19035 (4), -0.09887 (4), -0.00108 (4), 
length of domains: 3
Total time: 1.7376	 pickout: 0.0016	 decision: 0.4988	 get_bound: 1.2302	 add_domain: 0.0070
Accumulated time:	 pickout: 0.0016	 decision: 0.4988	 get_bound: 1.2302	 add_domain: 0.0070
Current (lb-rhs): -0.19035077095031738
13 domains visited
Cumulative time: 2.032231569290161

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([3, 32, 32, 32]) pre split depth:  2
batch:  torch.Size([3, 32, 32, 32]) post split depth:  2
splitting decisions: 
split level 0: [3, 81] [3, 81] [3, 81] 
split level 1: [3, 17] [3, 17] [3, 17] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 10 / 12 = 0.8333333333333334
pruning-in-iteration extra time: 0.042369842529296875
Tensors transferred: pre=1.1307M lA=0.0942M alpha=0.0560M beta=0.0001M
This batch time : update_bounds func: 0.7803	 prepare: 0.0041	 bound: 0.7727	 transfer: 0.0028	 finalize: 0.0006
Accumulated time: update_bounds func: 2.0071	 prepare: 0.0085	 bound: 1.9907	 transfer: 0.0063	 finalize: 0.0014
batch bounding time:  0.7803671360015869
Current worst splitting domains lb-rhs (depth):
-0.14273 (6), -0.03234 (6), 
length of domains: 2
Total time: 0.8753	 pickout: 0.0018	 decision: 0.0873	 get_bound: 0.7822	 add_domain: 0.0039
Accumulated time:	 pickout: 0.0034	 decision: 0.5861	 get_bound: 2.0124	 add_domain: 0.0109
Current (lb-rhs): -0.14272606372833252
23 domains visited
Cumulative time: 2.907984495162964

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([2, 32, 32, 32]) pre split depth:  3
batch:  torch.Size([2, 32, 32, 32]) post split depth:  3
splitting decisions: 
split level 0: [3, 97] [3, 97] 
split level 1: [3, 115] [3, 115] 
split level 2: [2, 5994] [2, 5994] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 12 / 16 = 0.75
pruning-in-iteration extra time: 0.04302358627319336
Tensors transferred: pre=1.5076M lA=0.1885M alpha=0.0746M beta=0.0001M
This batch time : update_bounds func: 0.8148	 prepare: 0.0047	 bound: 0.7987	 transfer: 0.0105	 finalize: 0.0008
Accumulated time: update_bounds func: 2.8218	 prepare: 0.0132	 bound: 2.7894	 transfer: 0.0168	 finalize: 0.0023
batch bounding time:  0.8148622512817383
Current worst splitting domains lb-rhs (depth):
-0.08593 (9), -0.05314 (9), -0.04594 (9), -0.01361 (9), 
length of domains: 4
Total time: 0.9097	 pickout: 0.0018	 decision: 0.0844	 get_bound: 0.8179	 add_domain: 0.0056
Accumulated time:	 pickout: 0.0051	 decision: 0.6705	 get_bound: 2.8304	 add_domain: 0.0165
Current (lb-rhs): -0.08592891693115234
35 domains visited
Cumulative time: 3.8182411193847656

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([4, 32, 32, 32]) pre split depth:  2
batch:  torch.Size([4, 32, 32, 32]) post split depth:  2
splitting decisions: 
split level 0: [2, 7462] [2, 5993] [2, 7462] [3, 15] 
split level 1: [2, 5993] [3, 15] [2, 5993] [2, 5993] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 10 / 16 = 0.625
pruning-in-iteration extra time: 0.04185914993286133
Tensors transferred: pre=1.5076M lA=0.2827M alpha=0.0746M beta=0.0002M
This batch time : update_bounds func: 0.8124	 prepare: 0.0050	 bound: 0.8026	 transfer: 0.0040	 finalize: 0.0008
Accumulated time: update_bounds func: 3.6343	 prepare: 0.0182	 bound: 3.5919	 transfer: 0.0207	 finalize: 0.0031
batch bounding time:  0.8125138282775879
Current worst splitting domains lb-rhs (depth):
-0.05551 (11), -0.05487 (11), -0.03933 (11), -0.03155 (11), -0.03069 (11), -0.01727 (11), 
length of domains: 6
Total time: 0.9100	 pickout: 0.0021	 decision: 0.0875	 get_bound: 0.8149	 add_domain: 0.0056
Accumulated time:	 pickout: 0.0072	 decision: 0.7580	 get_bound: 3.6452	 add_domain: 0.0220
Current (lb-rhs): -0.05551004409790039
45 domains visited
Cumulative time: 4.72873592376709

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 32, 32, 32]) pre split depth:  1
batch:  torch.Size([6, 32, 32, 32]) post split depth:  1
splitting decisions: 
split level 0: [3, 15] [2, 787] [2, 787] [3, 15] [2, 787] [2, 787] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 4 / 12 = 0.33333333333333337
pruning-in-iteration extra time: 0.03663444519042969
Tensors transferred: pre=1.1307M lA=0.3769M alpha=0.0560M beta=0.0001M
This batch time : update_bounds func: 0.7879	 prepare: 0.0044	 bound: 0.7797	 transfer: 0.0031	 finalize: 0.0006
Accumulated time: update_bounds func: 4.4222	 prepare: 0.0226	 bound: 4.3717	 transfer: 0.0239	 finalize: 0.0037
batch bounding time:  0.7881286144256592
Current worst splitting domains lb-rhs (depth):
-0.05392 (12), -0.05310 (12), -0.02643 (12), -0.02542 (12), -0.01643 (12), -0.01468 (12), -0.00902 (12), -0.00787 (12), 
length of domains: 8
Total time: 0.8821	 pickout: 0.0019	 decision: 0.0863	 get_bound: 0.7882	 add_domain: 0.0057
Accumulated time:	 pickout: 0.0091	 decision: 0.8443	 get_bound: 4.4334	 add_domain: 0.0277
Current (lb-rhs): -0.053917646408081055
49 domains visited
Cumulative time: 5.61132025718689

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 32, 32, 32]) pre split depth:  1
batch:  torch.Size([8, 32, 32, 32]) post split depth:  1
splitting decisions: 
split level 0: [3, 52] [3, 52] [3, 52] [2, 7462] [2, 7462] [3, 52] [3, 52] [2, 7462] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 9 / 16 = 0.5625
pruning-in-iteration extra time: 0.04282331466674805
Tensors transferred: pre=1.5076M lA=0.3298M alpha=0.0746M beta=0.0002M
This batch time : update_bounds func: 0.8166	 prepare: 0.0050	 bound: 0.8070	 transfer: 0.0037	 finalize: 0.0008
Accumulated time: update_bounds func: 5.2388	 prepare: 0.0276	 bound: 5.1787	 transfer: 0.0275	 finalize: 0.0046
batch bounding time:  0.8166725635528564
Current worst splitting domains lb-rhs (depth):
-0.05218 (13), -0.03456 (13), -0.02889 (13), -0.02437 (13), -0.01331 (13), -0.00611 (13), -0.00234 (13), 
length of domains: 7
Total time: 0.9129	 pickout: 0.0019	 decision: 0.0885	 get_bound: 0.8167	 add_domain: 0.0057
Accumulated time:	 pickout: 0.0110	 decision: 0.9328	 get_bound: 5.2501	 add_domain: 0.0335
Current (lb-rhs): -0.052182674407958984
58 domains visited
Cumulative time: 6.5246922969818115

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([7, 32, 32, 32]) pre split depth:  1
batch:  torch.Size([7, 32, 32, 32]) post split depth:  1
splitting decisions: 
split level 0: [2, 7461] [2, 7461] [2, 7461] [2, 7461] [2, 7461] [2, 7461] [2, 7461] 
regular batch size: 2*7, diving batch size 1*0
(14, 3, 32, 32) torch.Size([14, 1, 10]) torch.Size([14, 1])
pruning_in_iteration open status: True
ratio of positive domain = 5 / 14 = 0.3571428571428571
pruning-in-iteration extra time: 0.042249202728271484
Tensors transferred: pre=1.3192M lA=0.4240M alpha=0.0653M beta=0.0002M
This batch time : update_bounds func: 0.8001	 prepare: 0.0045	 bound: 0.7914	 transfer: 0.0034	 finalize: 0.0007
Accumulated time: update_bounds func: 6.0389	 prepare: 0.0321	 bound: 5.9700	 transfer: 0.0310	 finalize: 0.0053
batch bounding time:  0.8001363277435303
Current worst splitting domains lb-rhs (depth):
-0.04729 (14), -0.03001 (14), -0.02478 (14), -0.02423 (14), -0.01918 (14), -0.00678 (14), -0.00164 (14), -0.00133 (14), -0.00089 (14), 
length of domains: 9
Total time: 0.8954	 pickout: 0.0019	 decision: 0.0872	 get_bound: 0.8002	 add_domain: 0.0062
Accumulated time:	 pickout: 0.0128	 decision: 1.0199	 get_bound: 6.0503	 add_domain: 0.0396
Current (lb-rhs): -0.04729032516479492
63 domains visited
Cumulative time: 7.420610427856445

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([9, 32, 32, 32]) pre split depth:  1
batch:  torch.Size([9, 32, 32, 32]) post split depth:  1
splitting decisions: 
split level 0: [3, 134] [3, 52] [3, 134] [3, 134] [3, 52] [3, 52] [3, 134] [2, 7462] [3, 52] 
regular batch size: 2*9, diving batch size 1*0
(18, 3, 32, 32) torch.Size([18, 1, 10]) torch.Size([18, 1])
pruning_in_iteration open status: True
ratio of positive domain = 12 / 18 = 0.6666666666666667
pruning-in-iteration extra time: 0.044232845306396484
Tensors transferred: pre=1.6961M lA=0.2827M alpha=0.0839M beta=0.0003M
This batch time : update_bounds func: 0.8381	 prepare: 0.0053	 bound: 0.8276	 transfer: 0.0041	 finalize: 0.0009
Accumulated time: update_bounds func: 6.8769	 prepare: 0.0374	 bound: 6.7977	 transfer: 0.0350	 finalize: 0.0062
batch bounding time:  0.8381519317626953
Current worst splitting domains lb-rhs (depth):
-0.02828 (15), -0.02407 (15), -0.02359 (15), -0.01767 (15), -0.00439 (15), -0.00113 (15), 
length of domains: 6
Total time: 0.9341	 pickout: 0.0018	 decision: 0.0876	 get_bound: 0.8382	 add_domain: 0.0064
Accumulated time:	 pickout: 0.0146	 decision: 1.1076	 get_bound: 6.8885	 add_domain: 0.0460
Current (lb-rhs): -0.028283119201660156
75 domains visited
Cumulative time: 8.35524320602417

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 32, 32, 32]) pre split depth:  1
batch:  torch.Size([6, 32, 32, 32]) post split depth:  1
splitting decisions: 
split level 0: [3, 134] [3, 134] [3, 134] [2, 369] [3, 134] [2, 369] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 7 / 12 = 0.5833333333333333
pruning-in-iteration extra time: 0.04281497001647949
Tensors transferred: pre=1.1307M lA=0.2356M alpha=0.0560M beta=0.0002M
This batch time : update_bounds func: 0.8075	 prepare: 0.0045	 bound: 0.7992	 transfer: 0.0031	 finalize: 0.0007
Accumulated time: update_bounds func: 7.6844	 prepare: 0.0419	 bound: 7.5968	 transfer: 0.0381	 finalize: 0.0069
batch bounding time:  0.8075356483459473
Current worst splitting domains lb-rhs (depth):
-0.02190 (16), -0.01929 (16), -0.01747 (16), -0.01317 (16), -0.00006 (16), 
length of domains: 5
Total time: 0.9050	 pickout: 0.0018	 decision: 0.0900	 get_bound: 0.8076	 add_domain: 0.0056
Accumulated time:	 pickout: 0.0165	 decision: 1.1976	 get_bound: 7.6961	 add_domain: 0.0516
Current (lb-rhs): -0.021902084350585938
82 domains visited
Cumulative time: 9.260743618011475

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([5, 32, 32, 32]) pre split depth:  2
batch:  torch.Size([5, 32, 32, 32]) post split depth:  2
splitting decisions: 
split level 0: [2, 7462] [2, 369] [2, 7462] [2, 369] [2, 7462] 
split level 1: [2, 5389] [2, 5355] [2, 5355] [2, 5355] [2, 5355] 
regular batch size: 2*10, diving batch size 1*0
(20, 3, 32, 32) torch.Size([20, 1, 10]) torch.Size([20, 1])
pruning_in_iteration open status: True
ratio of positive domain = 16 / 20 = 0.8
pruning-in-iteration extra time: 0.04377293586730957
Tensors transferred: pre=1.8845M lA=0.1885M alpha=0.0933M beta=0.0003M
This batch time : update_bounds func: 0.8094	 prepare: 0.0053	 bound: 0.7992	 transfer: 0.0039	 finalize: 0.0009
Accumulated time: update_bounds func: 8.4937	 prepare: 0.0472	 bound: 8.3960	 transfer: 0.0420	 finalize: 0.0078
batch bounding time:  0.8094332218170166
Current worst splitting domains lb-rhs (depth):
-0.01644 (18), -0.01642 (18), -0.01165 (18), -0.01017 (18), 
length of domains: 4
Total time: 0.9075	 pickout: 0.0019	 decision: 0.0890	 get_bound: 0.8122	 add_domain: 0.0043
Accumulated time:	 pickout: 0.0183	 decision: 1.2866	 get_bound: 8.5084	 add_domain: 0.0559
Current (lb-rhs): -0.016437768936157227
98 domains visited
Cumulative time: 10.168749332427979

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([4, 32, 32, 32]) pre split depth:  2
batch:  torch.Size([4, 32, 32, 32]) post split depth:  2
splitting decisions: 
split level 0: [2, 5389] [2, 5389] [2, 5389] [2, 5389] 
split level 1: [2, 3594] [2, 3594] [2, 3594] [2, 3594] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 10 / 16 = 0.625
pruning-in-iteration extra time: 0.043320417404174805
Tensors transferred: pre=1.5076M lA=0.2827M alpha=0.0746M beta=0.0003M
This batch time : update_bounds func: 0.8006	 prepare: 0.0047	 bound: 0.7914	 transfer: 0.0036	 finalize: 0.0008
Accumulated time: update_bounds func: 9.2943	 prepare: 0.0519	 bound: 9.1874	 transfer: 0.0456	 finalize: 0.0086
batch bounding time:  0.8006410598754883
Current worst splitting domains lb-rhs (depth):
-0.00813 (20), -0.00785 (20), -0.00492 (20), -0.00477 (20), -0.00255 (20), -0.00131 (20), 
length of domains: 6
Total time: 0.8962	 pickout: 0.0018	 decision: 0.0860	 get_bound: 0.8030	 add_domain: 0.0054
Accumulated time:	 pickout: 0.0201	 decision: 1.3726	 get_bound: 9.3114	 add_domain: 0.0613/home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/layer.py:30: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_numpy.cpp:178.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/model.py:154: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  "Using experimental implementation that allows 'batch_size > 1'."
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/batch_branch_and_bound.py:420: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7), np.inf

Current (lb-rhs): -0.008134007453918457
108 domains visited
Cumulative time: 11.065592288970947

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 32, 32, 32]) pre split depth:  1
batch:  torch.Size([6, 32, 32, 32]) post split depth:  1
splitting decisions: 
split level 0: [2, 5986] [2, 5986] [2, 5986] [2, 5986] [2, 5986] [2, 5986] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 8 / 12 = 0.6666666666666667
pruning-in-iteration extra time: 0.044545650482177734
Tensors transferred: pre=1.1307M lA=0.1885M alpha=0.0560M beta=0.0002M
This batch time : update_bounds func: 0.8000	 prepare: 0.0042	 bound: 0.7920	 transfer: 0.0030	 finalize: 0.0006
Accumulated time: update_bounds func: 10.0943	 prepare: 0.0562	 bound: 9.9794	 transfer: 0.0486	 finalize: 0.0093
batch bounding time:  0.8000996112823486
Current worst splitting domains lb-rhs (depth):
-0.00374 (21), -0.00346 (21), -0.00071 (21), -0.00052 (21), 
length of domains: 4
Total time: 0.8938	 pickout: 0.0018	 decision: 0.0875	 get_bound: 0.8002	 add_domain: 0.0044
Accumulated time:	 pickout: 0.0219	 decision: 1.4601	 get_bound: 10.1115	 add_domain: 0.0657
Current (lb-rhs): -0.0037381649017333984
116 domains visited
Cumulative time: 11.9599027633667

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([4, 32, 32, 32]) pre split depth:  2
batch:  torch.Size([4, 32, 32, 32]) post split depth:  2
splitting decisions: 
split level 0: [2, 5932] [2, 5932] [2, 5932] [2, 5932] 
split level 1: [2, 2793] [2, 2793] [2, 7331] [2, 7331] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.00012993812561035156
Tensors transferred: pre=1.5076M lA=0.7538M alpha=0.0746M beta=0.0004M
This batch time : update_bounds func: 0.0191	 prepare: 0.0048	 bound: 0.0098	 transfer: 0.0037	 finalize: 0.0009
Accumulated time: update_bounds func: 10.1134	 prepare: 0.0609	 bound: 9.9892	 transfer: 0.0523	 finalize: 0.0101
batch bounding time:  0.019139766693115234
length of domains: 0
Total time: 0.1108	 pickout: 0.0018	 decision: 0.0855	 get_bound: 0.0216	 add_domain: 0.0019
Accumulated time:	 pickout: 0.0236	 decision: 1.5456	 get_bound: 10.1331	 add_domain: 0.0677
No domains left, verification finished!
132 domains visited
Cumulative time: 12.071601629257202


Properties batch 1, size 1
Remaining timeout: 269.10354685783386
##### [0] Spec matrix: [[[ 0. -1.  0.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[4.21309566]], device='cuda:0').

Properties batch 2, size 1
Remaining timeout: 269.00448083877563
##### [0] Spec matrix: [[[ 0.  0. -1.  0.  0.  0.  0.  0.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[1.53900218]], device='cuda:0').

Properties batch 3, size 1
Remaining timeout: 268.9586536884308
##### [0] Spec matrix: [[[ 0.  0.  0. -1.  0.  0.  0.  0.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[5.49561596]], device='cuda:0').

Properties batch 4, size 1
Remaining timeout: 268.91286516189575
##### [0] Spec matrix: [[[ 0.  0.  0.  0. -1.  0.  0.  0.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[6.63596725]], device='cuda:0').

Properties batch 5, size 1
Remaining timeout: 268.8677661418915
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0. -1.  0.  0.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[6.55885077]], device='cuda:0').

Properties batch 6, size 1
Remaining timeout: 268.82355856895447
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0. -1.  0.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[5.25345421]], device='cuda:0').

Properties batch 7, size 1
Remaining timeout: 268.7801659107208
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  0. -1.  0.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[2.02685404]], device='cuda:0').

Properties batch 8, size 1
Remaining timeout: 268.7348961830139
##### [0] Spec matrix: [[[ 0.  0.  0.  0.  0.  0.  0.  0. -1.  1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[4.30531216]], device='cuda:0').
Result: safe in 31.3099 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time (bab) [total:1]: 12.705387592315674
mean time [1] 31.30990958213806 max time 31.30990958213806
safe (total 1): [0]
