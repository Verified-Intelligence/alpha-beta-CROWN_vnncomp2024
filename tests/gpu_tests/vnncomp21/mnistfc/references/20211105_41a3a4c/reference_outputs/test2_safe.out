Experiments at Fri Nov  5 03:30:50 2021 on huan-Super-Server
saving results to vnn-comp_[mnistfc_instances]_start=53_end=54_iter=20_b=500_int-beta=False_timeout=360_branching=kfsb-max-5_lra-init=0.1_lra=0.01_lrb=0.03_PGD=before.npz
customized start/end sample from 53 to 54

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Unexpected input shape in onnx: (784, 1), given (1, 28, 28)
##### PGD attack: True label: 6, Tested against: [0, 1, 2, 3, 4, 5, 7, 8, 9] ######
pgd prediction: tensor([ 5.9939e-03, -3.0818e-04,  1.9414e-02, -4.2465e-03,  7.3286e-04,
        -6.2914e-04,  9.9141e-01, -1.2056e-02, -2.7888e-03, -1.7631e-03],
       device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([0.9854, 0.9917, 0.9720, 0.9957, 0.9907, 0.9920,    inf, 1.0035, 0.9942,
        0.9932], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[ 6.8975e-03,  1.4419e-03,  5.2976e-03, -2.9857e-03,  6.8500e-03,
         -1.5423e-03,  9.9308e-01, -9.8325e-04,  6.8031e-04, -8.6869e-03]],
       device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[-58.0213, -64.8832, -58.5153, -50.5214, -61.7348, -55.4311, -67.0269,
         -55.5061, -67.9173]], device='cuda:0') None
best_l after optimization: 70.29792785644531 with beta sum per layer: []
optimal alpha/beta time: 3.954434871673584
initial alpha-CROWN bounds: tensor([[-7.4495, -8.1261, -7.4278, -7.2565, -8.3613, -7.6019, -8.0220, -7.6437,
         -8.4091]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
The program tries to detect if we are inside a docker. Hiding ourselves!!
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 240.0]

Linear(in_features=784, out_features=256, bias=True) 0 2 torch.Size([256])
Linear(in_features=256, out_features=256, bias=True) 1 4 torch.Size([256])
sorted candidates ['lay4_112', 'lay4_162', 'lay4_18', 'lay4_201', 'lay4_203', 'lay4_206', 'lay4_83', 'lay4_103', 'lay4_89', 'lay4_98', 'lay4_114', 'lay4_231', 'lay4_34', 'lay4_194', 'lay4_55', 'lay4_167', 'lay4_154', 'lay4_38', 'lay4_88', 'lay4_71', 'lay4_120', 'lay4_217', 'lay4_159', 'lay4_188', 'lay4_252', 'lay4_234', 'lay4_157', 'lay4_117', 'lay4_153', 'lay4_127', 'lay4_193', 'lay4_69', 'lay4_97', 'lay4_73', 'lay4_151', 'lay4_81', 'lay4_70', 'lay4_107', 'lay4_42', 'lay4_214', 'lay4_224', 'lay4_210', 'lay4_2', 'lay4_246', 'lay4_178', 'lay4_215', 'lay4_92', 'lay4_62', 'lay4_179', 'lay4_49', 'lay4_241', 'lay4_225', 'lay4_36', 'lay4_174', 'lay4_190', 'lay4_189', 'lay4_207', 'lay4_94', 'lay4_7', 'lay4_79', 'lay4_185', 'lay4_45', 'lay4_219', 'lay4_243', 'lay4_5', 'lay4_230', 'lay4_140', 'lay4_40', 'lay4_46', 'lay4_172', 'lay4_30', 'lay4_248', 'lay4_58', 'lay4_27', 'lay4_111', 'lay4_95', 'lay4_199', 'lay4_134', 'lay4_61', 'lay4_43', 'lay4_222', 'lay4_91', 'lay4_33', 'lay4_166', 'lay4_3', 'lay4_132', 'lay4_130', 'lay4_171', 'lay4_197', 'lay4_226', 'lay4_50', 'lay4_86', 'lay4_78', 'lay4_106', 'lay4_233', 'lay4_183', 'lay4_142', 'lay4_19', 'lay4_59', 'lay4_150', 'lay4_238', 'lay4_96', 'lay4_223', 'lay4_213', 'lay4_160', 'lay4_240', 'lay4_143', 'lay4_72', 'lay4_41', 'lay4_145', 'lay4_126', 'lay4_108', 'lay4_146', 'lay4_115', 'lay4_244', 'lay4_228', 'lay4_52', 'lay4_187', 'lay4_21', 'lay4_17', 'lay4_57', 'lay4_31', 'lay4_68', 'lay4_122', 'lay4_90', 'lay4_100', 'lay4_209', 'lay4_216', 'lay4_35', 'lay4_131', 'lay4_66', 'lay4_212', 'lay4_37', 'lay4_204', 'lay4_137', 'lay4_118', 'lay4_20', 'lay4_245', 'lay4_138', 'lay4_67', 'lay4_22', 'lay4_250', 'lay4_163', 'lay4_23', 'lay4_242', 'lay4_99', 'lay4_124'] filter: 1.0
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272168290/work/torch/csrc/utils/tensor_numpy.cpp:189.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
Solving MIP for lay4_34, [-0.5538711547851562,14.389265060424805]=>[1e-05,14.389265060424805] (15,-1; -1,-1), time: 0.6514s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_194, [-7.612790107727051,0.569313645362854]=>[-7.612790107727051,-1e-05] (-1,-1; 15,-1), time: 0.6664s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_114, [-2.0844316482543945,12.697736740112305]=>[1e-05,12.697736740112305] (15,-1; -1,-1), time: 1.1602s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_112, [-3.6209425926208496,8.653356552124023]=>[-1.1534305361145436,6.09516443213326] (2,-1; 2,-1), time: 7.2792s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_89, [-6.051017761230469,1.7838129997253418]=>[-6.051017761230469,-1e-05] (-1,-1; 15,-1), time: 7.4841s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_71, [-15.485420227050781,0.06889128684997559]=>[-15.485420227050781,-1e-05] (-1,-1; 15,-1), time: 0.4994s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_98, [-5.668403625488281,8.27550983428955]=>[-1.9213129165382812,5.594971949804754] (2,-1; 2,-1), time: 8.1043s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_167, [-13.576897621154785,1.8998851776123047]=>[-8.918638248365001,0.08194474877759055] (2,-1; 2,-1), time: 8.8373s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_231, [-3.3826348781585693,6.555187702178955]=>[-1.377259310148562,3.9929501526079085] (2,-1; 2,-1), time: 9.6943s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_159, [-11.141271591186523,2.1315724849700928]=>[-11.141271591186523,-1e-05] (-1,-1; 15,-1), time: 1.6554s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_103, [-7.464783191680908,4.110724449157715]=>[-5.237647540741201,1.114457470300931] (2,-1; 2,-1), time: 9.9104s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_154, [-12.826088905334473,3.720460891723633]=>[-7.6531221979921344,1.9473404587213885] (2,-1; 2,-1), time: 9.5813s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_157, [-15.810934066772461,0.20415854454040527]=>[-15.810934066772461,-1e-05] (-1,-1; 15,-1), time: 0.4575s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_117, [-9.285381317138672,0.1978905200958252]=>[-9.285381317138672,-1e-05] (-1,-1; 15,-1), time: 0.5183s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_83, [-9.295439720153809,2.327880620956421]=>[-5.424296182324261,0.6345060373090929] (2,-1; 2,-1), time: 11.0090s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_55, [-5.777080535888672,5.150344371795654]=>[-2.637737155315236,2.8687741001373244] (2,-1; 2,-1), time: 11.0563s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_193, [-0.9515957832336426,16.795259475708008]=>[1e-05,16.795259475708008] (15,-1; -1,-1), time: 0.5768s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_217, [-2.3540456295013428,9.083466529846191]=>[1e-05,9.083466529846191] (15,-1; -1,-1), time: 3.9538s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_97, [-11.310943603515625,0.8892908096313477]=>[-11.310943603515625,-1e-05] (-1,-1; 15,-1), time: 0.5436s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_162, [-10.204310417175293,2.466606855392456]=>[-6.142920032466478,0.5626697498968901] (2,-1; 2,-1), time: 12.3163s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_73, [-13.137704849243164,1.4403443336486816]=>[-13.137704849243164,-1e-05] (-1,-1; 15,-1), time: 0.8666s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_81, [-15.091546058654785,0.4831845760345459]=>[-15.091546058654785,-1e-05] (-1,-1; 15,-1), time: 0.4569s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_201, [-8.186894416809082,2.997650146484375]=>[-4.005652658384083,2.041428108756387] (2,-1; 2,-1), time: 12.9520s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_203, [-6.746100902557373,5.763404846191406]=>[-3.1599967757964316,3.518185949195694] (2,-1; 2,-1), time: 13.0241s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_70, [-16.905975341796875,1.0019142627716064]=>[-16.905975341796875,-1e-05] (-1,-1; 15,-1), time: 0.5166s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_107, [-9.47718334197998,0.3569190502166748]=>[-9.47718334197998,-1e-05] (-1,-1; 15,-1), time: 0.5160s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_214, [-0.8281872272491455,14.721600532531738]=>[1e-05,14.721600532531738] (15,-1; -1,-1), time: 0.5076s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_42, [-10.624279022216797,1.1634306907653809]=>[-10.624279022216797,-1e-05] (-1,-1; 15,-1), time: 0.9340s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_38, [-6.610418319702148,4.447889804840088]=>[-3.421618232558436,2.449265821131833] (2,-1; 2,-1), time: 13.4242s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_206, [-8.05921745300293,3.436175584793091]=>[-4.266839573797315,1.4780526167153343] (2,-1; 2,-1), time: 15.2244s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_88, [-11.247931480407715,3.963531970977783]=>[-6.455005306978929,1.7121559040657] (2,-1; 2,-1), time: 14.1666s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_215, [-13.159149169921875,0.3822169303894043]=>[-13.159149169921875,-1e-05] (-1,-1; 15,-1), time: 0.3938s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_92, [-12.21551513671875,1.0239336490631104]=>[-12.21551513671875,-1e-05] (-1,-1; 15,-1), time: 0.5395s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_188, [-2.6381001472473145,9.508970260620117]=>[-0.38560648912168716,7.015343433083903] (2,-1; 2,-1), time: 7.2521s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_62, [-12.767084121704102,0.18892264366149902]=>[-12.767084121704102,-1e-05] (-1,-1; 15,-1), time: 0.5526s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_246, [-9.15185546875,2.6835780143737793]=>[-9.15185546875,-1e-05] (-1,-1; 15,-1), time: 3.2712s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_234, [-2.118215560913086,6.043642997741699]=>[-0.2496838949283253,4.227008242055269] (2,-1; 2,-1), time: 7.5519s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_18, [-7.94230842590332,2.198265314102173]=>[-4.677666878866497,1.1577151288093592] (9,-1; 2,-1), time: 17.5432s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_120, [-5.987513542175293,4.141265392303467]=>[-2.767284669579745,1.917652744008647] (2,-1; 2,-1), time: 12.0558s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_190, [-11.756559371948242,1.0801515579223633]=>[-11.756559371948242,-1e-05] (-1,-1; 15,-1), time: 0.6457s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_224, [-2.7730374336242676,8.150091171264648]=>[-0.26068278102638703,6.140776575837129] (2,-1; 2,-1), time: 7.9373s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_153, [-6.691811561584473,7.963700771331787]=>[-2.467689206032962,5.259350825056637] (2,-1; 2,-1), time: 10.7001s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_252, [-8.145214080810547,4.14991569519043]=>[-4.426929711258599,1.502370667395075] (2,-1; 2,-1), time: 11.5840s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_179, [-5.702123165130615,7.3817548751831055]=>[-3.6845631668763064,4.678945171396912] (2,-1; 2,-1), time: 5.4645s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_69, [-4.880632400512695,7.598856449127197]=>[-1.310404454132275,5.648963054681188] (2,-1; 2,-1), time: 10.2820s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_94, [-9.4148530960083,0.3061915636062622]=>[-9.4148530960083,-1e-05] (-1,-1; 15,-1), time: 0.4678s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_49, [-3.7393884658813477,11.315845489501953]=>[-0.4904446681772856,7.856212038475062] (2,-1; 2,-1), time: 6.2295s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_127, [-9.349323272705078,2.194211006164551]=>[-5.731478253462225,0.24816160917129446] (2,-1; 2,-1), time: 11.7769s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_151, [-7.429235458374023,3.1319241523742676]=>[-4.33084316731543,1.364273188748374] (2,-1; 2,-1), time: 10.4606s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_2, [-7.327230453491211,6.232841491699219]=>[-3.9429295445972183,3.0805085811806645] (2,-1; 2,-1), time: 9.1134s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_219, [-11.37882137298584,1.7179579734802246]=>[-11.37882137298584,-1e-05] (-1,-1; 15,-1), time: 0.7909s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_207, [-2.023594617843628,8.35162353515625]=>[1e-05,8.35162353515625] (15,-1; -1,-1), time: 2.0596s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_230, [-0.3143343925476074,18.676239013671875]=>[1e-05,18.676239013671875] (15,-1; -1,-1), time: 0.5492s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_241, [-7.975667476654053,4.933993816375732]=>[-5.052027757282111,2.3664905676397723] (2,-1; 2,-1), time: 7.0843s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_178, [-4.923519134521484,6.563549995422363]=>[-1.5203412954475428,4.704884128539371] (2,-1; 2,-1), time: 9.7124s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_36, [-3.0401854515075684,9.407979011535645]=>[-1.573701326501138,6.178690365850443] (2,-1; 2,-1), time: 7.0115s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_210, [-3.6593422889709473,8.104949951171875]=>[-0.8142765273752262,5.529582998100477] (2,-1; 2,-1), time: 11.0999s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_185, [-14.599943161010742,3.2982993125915527]=>[-11.469231065565193,0.18336246917017954] (2,-1; 2,-1), time: 4.4274s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_243, [-3.4148154258728027,12.93692684173584]=>[-0.8822849930941948,10.285341850336486] (2,-1; 2,-1), time: 3.9321s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_45, [-4.202700614929199,8.126694679260254]=>[-2.419251680656002,5.529037650199481] (2,-1; 2,-1), time: 5.5314s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_225, [-5.422937393188477,6.95525598526001]=>[-2.0141749092849577,4.434782780765804] (2,-1; 2,-1), time: 10.4480s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_248, [-2.418226718902588,8.15538215637207]=>[1e-05,8.15538215637207] (15,-1; -1,-1), time: 5.1676s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_7, [-10.080730438232422,4.547163009643555]=>[-6.0322083284270915,2.310587943689792] (2,-1; 2,-1), time: 8.5967s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_174, [-5.116765022277832,5.961852073669434]=>[-1.767587146227701,3.8376832910976635] (2,-1; 2,-1), time: 12.7959s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_30, [-6.361064910888672,4.252685546875]=>[-3.6300173280821877,2.3881546806318954] (2,-1; 2,-1), time: 6.6118s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_61, [-1.183535099029541,11.960639953613281]=>[1e-05,11.960639953613281] (15,-1; -1,-1), time: 0.7223s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_172, [-2.817318916320801,8.973076820373535]=>[-0.07149250074123287,6.617642781357232] (2,-1; 2,-1), time: 7.4042s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_40, [-7.533762454986572,5.554318428039551]=>[-4.143250380072921,3.206559513590379] (2,-1; 2,-1), time: 9.0543s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_5, [-10.492767333984375,3.830008029937744]=>[-7.10714770523522,0.44788795387645547] (2,-1; 2,-1), time: 9.8051s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_58, [-9.792013168334961,2.5897021293640137]=>[-9.792013168334961,-1e-05] (-1,-1; 15,-1), time: 8.1053s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_140, [-5.551362037658691,7.839910507202148]=>[-3.9538693252298223,3.8700152900557687] (2,-1; 2,-1), time: 9.4292s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_46, [-5.621306896209717,4.665031433105469]=>[-3.1667031561639485,2.057304242420278] (2,-1; 2,-1), time: 9.6150s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_3, [-11.052749633789062,0.633591890335083]=>[-11.052749633789062,-1e-05] (-1,-1; 15,-1), time: 0.5880s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_197, [-10.367106437683105,0.05686616897583008]=>[-10.367106437683105,-1e-05] (-1,-1; 15,-1), time: 0.4584s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_171, [-0.030508995056152344,11.716666221618652]=>[1e-05,11.716666221618652] (15,-1; -1,-1), time: 0.6964s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_50, [-0.9962551593780518,8.318134307861328]=>[1e-05,8.318134307861328] (15,-1; -1,-1), time: 1.1720s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_27, [-8.134359359741211,4.349740028381348]=>[-4.082312587429634,2.7137119167664934] (2,-1; 2,-1), time: 9.1425s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_86, [-10.322893142700195,0.5452401638031006]=>[-10.322893142700195,-1e-05] (-1,-1; 15,-1), time: 0.5989s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_106, [-11.222684860229492,0.75370192527771]=>[-11.222684860229492,-1e-05] (-1,-1; 15,-1), time: 0.4698s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_199, [-9.733144760131836,5.052328109741211]=>[-6.294773841215617,2.3365933699172503] (2,-1; 2,-1), time: 8.1570s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_111, [-12.062353134155273,1.979719638824463]=>[-7.929986257045687,0.06978692851149981] (2,-1; 2,-1), time: 9.7122s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_43, [-8.863037109375,4.472648620605469]=>[-5.7689607029852095,2.418733302656892] (2,-1; 2,-1), time: 6.3288s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_95, [-3.2002694606781006,6.838405609130859]=>[1e-05,6.838405609130859] (15,-1; -1,-1), time: 9.9164s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_142, [-11.451604843139648,1.4028849601745605]=>[-11.451604843139648,-1e-05] (-1,-1; 15,-1), time: 1.1988s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_130, [-3.369936943054199,8.776208877563477]=>[-1.340936340365178,6.211696456637324] (2,-1; 2,-1), time: 5.0642s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_134, [-8.771344184875488,3.81972599029541]=>[-5.6815716559705844,1.1418303146020747] (2,-1; 2,-1), time: 8.1897s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_226, [-9.869710922241211,2.7493035793304443]=>[-9.869710922241211,-1e-05] (-1,-1; 15,-1), time: 4.6964s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_59, [-13.751346588134766,1.746537208557129]=>[-13.751346588134766,-0.009943024418449617] (-1,-1; 2,-1), time: 1.8789s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_189, [-5.872281551361084,6.314674377441406]=>[-2.8588420804723302,3.047254856077041] (2,-1; 2,-1), time: 18.8905s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_79, [-8.328856468200684,3.2956655025482178]=>[-4.169390273671524,1.1983199679663261] (2,-1; 2,-1), time: 17.7702s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_150, [-9.085223197937012,1.7145168781280518]=>[-9.085223197937012,-1e-05] (-1,-1; 15,-1), time: 2.0990s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_91, [-8.49267578125,4.829410076141357]=>[-4.959583829687722,2.02037951586804] (2,-1; 2,-1), time: 9.0812s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_160, [-8.375214576721191,1.2397270202636719]=>[-8.375214576721191,-1e-05] (-1,-1; 15,-1), time: 1.1927s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_41, [-11.246060371398926,0.6469523906707764]=>[-11.246060371398926,-1e-05] (-1,-1; 15,-1), time: 0.6181s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_132, [-9.709274291992188,1.6474363803863525]=>[-5.802297119316131,0.16338478451630745] (2,-1; 2,-1), time: 8.5227s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_145, [-10.215904235839844,0.5334081649780273]=>[-10.215904235839844,-1e-05] (-1,-1; 15,-1), time: 0.5583s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_78, [-5.453084945678711,6.558936595916748]=>[-3.1273331151718833,3.644109746336323] (2,-1; 2,-1), time: 6.5898s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_126, [-12.225081443786621,0.6658420562744141]=>[-12.225081443786621,-1e-05] (-1,-1; 15,-1), time: 0.5117s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_19, [-12.135869979858398,4.428821086883545]=>[-8.940003564738662,1.144524193124476] (2,-1; 2,-1), time: 5.1938s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_115, [-11.532791137695312,2.0020225048065186]=>[-11.532791137695312,-1e-05] (-1,-1; 15,-1), time: 1.4303s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_33, [-9.134428024291992,2.253117084503174]=>[-5.443936570383232,0.3675710640056547] (2,-1; 2,-1), time: 12.9665s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_238, [-3.189141273498535,7.563887119293213]=>[-0.8023189289048269,5.50244445492138] (2,-1; 2,-1), time: 6.1863s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_108, [-2.785433769226074,11.280779838562012]=>[1e-05,11.280779838562012] (15,-1; -1,-1), time: 3.1220s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_187, [-11.235920906066895,1.3705315589904785]=>[-11.235920906066895,-1e-05] (-1,-1; 15,-1), time: 0.8053s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_244, [-8.82989501953125,1.5202924013137817]=>[-8.82989501953125,-1e-05] (-1,-1; 15,-1), time: 2.8479s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_222, [-9.425616264343262,1.6896586418151855]=>[-5.644288502311528,0.3298760557826796] (2,-1; 2,-1), time: 14.6757s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_21, [-18.670307159423828,0.6395273208618164]=>[-18.670307159423828,-1e-05] (-1,-1; 15,-1), time: 0.5252s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_17, [-10.102080345153809,1.304283857345581]=>[-10.102080345153809,-1e-05] (-1,-1; 15,-1), time: 0.8971s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_122, [-11.197488784790039,0.3701326847076416]=>[-11.197488784790039,-1e-05] (-1,-1; 15,-1), time: 0.5978s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_240, [-10.990081787109375,2.454737424850464]=>[-7.452512495732594,0.5345860725211066] (2,-1; 2,-1), time: 7.1320s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_100, [-12.009721755981445,0.49129700660705566]=>[-12.009721755981445,-1e-05] (-1,-1; 15,-1), time: 0.4482s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_166, [-10.976123809814453,1.1188699007034302]=>[-6.563631233030761,0.07359097179497193] (2,-1; 2,-1), time: 14.7588s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_96, [-3.571974515914917,8.424818992614746]=>[1e-05,8.424818992614746] (15,-1; -1,-1), time: 9.6404s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_216, [-11.164726257324219,0.47229695320129395]=>[-11.164726257324219,-1e-05] (-1,-1; 15,-1), time: 0.5589s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_233, [-8.84793758392334,6.112940788269043]=>[-5.028762083233713,2.186876983836256] (2,-1; 2,-1), time: 12.2253s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_143, [-3.0917675495147705,8.459842681884766]=>[-0.16963035961914616,6.037657825840063] (2,-1; 2,-1), time: 8.6653s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_131, [-12.871936798095703,1.275054931640625]=>[-12.871936798095703,-1e-05] (-1,-1; 15,-1), time: 0.6806s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_223, [-7.435276985168457,4.235616207122803]=>[-3.7482719138801244,2.4356070399938305] (2,-1; 2,-1), time: 10.4260s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_37, [-15.295900344848633,0.4876394271850586]=>[-15.295900344848633,-1e-05] (-1,-1; 15,-1), time: 0.5551s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_212, [-2.2172365188598633,14.897785186767578]=>[1e-05,14.897785186767578] (15,-1; -1,-1), time: 0.9215s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_204, [-12.947906494140625,0.5973310470581055]=>[-12.947906494140625,-1e-05] (-1,-1; 15,-1), time: 0.4956s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_52, [-12.606330871582031,3.1532392501831055]=>[-9.771827532682135,0.34038002267307277] (2,-1; 2,-1), time: 5.5836s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_137, [-9.133646011352539,0.9402848482131958]=>[-9.133646011352539,-1e-05] (-1,-1; 15,-1), time: 0.7144s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_118, [-12.446249008178711,0.1927335262298584]=>[-12.446249008178711,-1e-05] (-1,-1; 15,-1), time: 0.5279s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_72, [-12.260238647460938,2.175368309020996]=>[-7.6306324725590535,0.35208026269947734] (2,-1; 2,-1), time: 9.9473s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_245, [-9.595222473144531,0.45652318000793457]=>[-9.595222473144531,-1e-05] (-1,-1; 15,-1), time: 0.5648s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_228, [-3.368155002593994,7.413991451263428]=>[-0.16602835224504514,5.923136580309104] (2,-1; 2,-1), time: 6.8901s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_138, [-10.241582870483398,0.24689996242523193]=>[-10.241582870483398,-1e-05] (-1,-1; 15,-1), time: 0.4666s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_22, [-9.421592712402344,0.8760106563568115]=>[-9.421592712402344,-1e-05] (-1,-1; 15,-1), time: 0.4813s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_23, [-17.80664825439453,0.2369704246520996]=>[-17.80664825439453,-1e-05] (-1,-1; 15,-1), time: 0.4814s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_67, [-14.722766876220703,1.9389190673828125]=>[-14.722766876220703,-1e-05] (-1,-1; 15,-1), time: 1.0213s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_209, [-12.731395721435547,5.552187442779541]=>[-9.760388626752647,2.0586087518777356] (2,-1; 2,-1), time: 3.9587s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_163, [-10.707113265991211,1.05228590965271]=>[-10.707113265991211,-1e-05] (-1,-1; 15,-1), time: 0.7933s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_146, [-9.607828140258789,2.1713995933532715]=>[-6.008464886810096,0.22192154941724263] (2,-1; 2,-1), time: 9.3872s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_99, [-12.534871101379395,0.01796114444732666]=>[-12.534871101379395,-1e-05] (-1,-1; 15,-1), time: 0.4900s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_242, [-11.403179168701172,0.9216675758361816]=>[-11.403179168701172,-1e-05] (-1,-1; 15,-1), time: 0.8142s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_124, [-11.258062362670898,0.874882698059082]=>[-11.258062362670898,-1e-05] (-1,-1; 15,-1), time: 0.5155s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_90, [-7.789785861968994,10.885266304016113]=>[-5.3453661674082,6.926858655887983] (2,-1; 2,-1), time: 5.6354s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_183, [-4.116680145263672,6.275614261627197]=>[-0.025140837782835438,5.376504051591794] (9,-1; 2,-1), time: 16.1602s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_68, [-9.676774978637695,2.2647476196289062]=>[-7.142698327296395,0.003121490016456236] (2,-1; 2,-1), time: 7.0356s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_66, [-5.285577774047852,6.212653160095215]=>[-2.731818678576807,3.7772603481078426] (2,-1; 2,-1), time: 6.6047s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_57, [-9.288742065429688,3.7490620613098145]=>[-6.4575298307021365,0.07367050597642114] (2,-1; 2,-1), time: 10.2466s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_213, [-8.690104484558105,3.651432752609253]=>[-4.898378590715076,1.9472992596660648] (9,-1; 2,-1), time: 16.8240s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_31, [-8.929866790771484,2.7376391887664795]=>[-5.187468820054678,0.8277500234379487] (2,-1; 2,-1), time: 11.3651s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_20, [-13.568635940551758,2.3362526893615723]=>[-9.104126519599404,0.07361583211039376] (2,-1; 2,-1), time: 8.6936s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_35, [-10.262238502502441,3.117703676223755]=>[-6.743284536395818,0.8789978041351155] (2,-1; 2,-1), time: 10.7330s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_250, [-7.573339462280273,1.7249717712402344]=>[-4.126228961587295,0.6074969454976471] (9,-1; 2,-1), time: 16.6944s, #vars: 1399, #constrs: 665, improved: True
MIP improved 147 nodes out of 147 unstable nodes, lb improved 280.4635009765625, ub improved 232.71066284179688, time 67.0165
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=256, out_features=256, bias=True) 2 6 torch.Size([256])
sorted candidates ['lay6_211', 'lay6_107', 'lay6_200', 'lay6_27', 'lay6_129', 'lay6_205', 'lay6_229', 'lay6_43', 'lay6_11', 'lay6_39', 'lay6_135', 'lay6_228', 'lay6_146', 'lay6_38', 'lay6_74', 'lay6_168', 'lay6_8', 'lay6_161', 'lay6_182', 'lay6_153', 'lay6_233', 'lay6_149', 'lay6_61', 'lay6_173', 'lay6_25', 'lay6_234', 'lay6_160', 'lay6_33', 'lay6_187', 'lay6_192', 'lay6_143', 'lay6_84', 'lay6_216', 'lay6_140', 'lay6_81', 'lay6_92', 'lay6_86', 'lay6_128', 'lay6_9', 'lay6_151', 'lay6_133', 'lay6_255', 'lay6_40', 'lay6_76', 'lay6_162', 'lay6_88', 'lay6_221', 'lay6_247', 'lay6_230', 'lay6_238', 'lay6_22', 'lay6_101', 'lay6_18', 'lay6_77'] filter: 1.0
Solving MIP for lay6_146, [-54.78866958618164,1.6388740539550781]=>[-54.78866958618164,-1e-05] (-1,-1; 15,-1), time: 0.3628s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_129, [-41.716156005859375,0.32841920852661133]=>[-41.716156005859375,-1e-05] (-1,-1; 15,-1), time: 0.3677s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_27, [-67.66056823730469,6.007291793823242]=>[-67.66056823730469,-1e-05] (-1,-1; 15,-1), time: 0.3734s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_205, [-65.3424072265625,1.862508773803711]=>[-65.3424072265625,-1e-05] (-1,-1; 15,-1), time: 0.3745s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_229, [-32.325077056884766,1.2729449272155762]=>[-32.325077056884766,-1e-05] (-1,-1; 15,-1), time: 0.3808s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_43, [-54.02751922607422,0.9689931869506836]=>[-54.02751922607422,-1e-05] (-1,-1; 15,-1), time: 0.4184s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_135, [-20.527610778808594,1.0214297771453857]=>[-20.527610778808594,-1e-05] (-1,-1; 15,-1), time: 0.4217s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_39, [-41.6685905456543,0.6417713165283203]=>[-41.6685905456543,-1e-05] (-1,-1; 15,-1), time: 0.4257s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_228, [-28.021713256835938,0.21715879440307617]=>[-28.021713256835938,-1e-05] (-1,-1; 15,-1), time: 0.4260s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_211, [-78.87239074707031,3.6760101318359375]=>[-78.87239074707031,-1e-05] (-1,-1; 15,-1), time: 0.4339s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_107, [-56.265899658203125,3.238882064819336]=>[-56.265899658203125,-1e-05] (-1,-1; 15,-1), time: 0.4456s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_168, [-27.34752082824707,1.081376075744629]=>[-27.34752082824707,-1e-05] (-1,-1; 15,-1), time: 0.4451s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_38, [-22.02653694152832,0.30429744720458984]=>[-22.02653694152832,-1e-05] (-1,-1; 15,-1), time: 0.4540s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_74, [-19.384986877441406,42.56240463256836]=>[1e-05,42.56240463256836] (15,-1; -1,-1), time: 0.4727s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_200, [-66.42333984375,6.345195770263672]=>[-66.42333984375,-1e-05] (-1,-1; 15,-1), time: 0.4792s, #vars: 1811, #constrs: 1155, improved: True
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /12 torch.Size([1, 256])
1 /14 torch.Size([1, 256])

all verified at 11th iter
best_l after optimization: -1.313999891281128 with beta sum per layer: []
optimal alpha/beta time: 0.6121783256530762
alpha-CROWN with intermediate bounds by MIP: tensor([[0.1697, 0.1569, 0.1622, 0.1760, 0.0373, 0.1403, 0.2243, 0.0784, 0.1689]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
min of alpha-CROWN bounds 0.037319064140319824>=0, verified!
MIP finished with 71.79625797271729s
Run final alpha-CROWN after MIP solving on layer 5 and relu idx 2
0 /12 torch.Size([1, 256])
1 /14 torch.Size([1, 256])

all verified at 0th iter
best_l after optimization: -1.313999891281128 with beta sum per layer: []
optimal alpha/beta time: 0.02398848533630371
alpha-CROWN with intermediate bounds improved by MIP: tensor([[0.1697, 0.1569, 0.1622, 0.1760, 0.0373, 0.1403, 0.2243, 0.0784, 0.1689]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[0.1697, 0.1569, 0.1622, 0.1760, 0.0373, 0.1403, 0.0000, 0.2243, 0.0784,
         0.1689]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
time threshold left for bab: 228.12804245948792
Result: safe-incomplete-refine in 79.5194 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 79.51944899559021
safe-incomplete-refine (total 1): [0]
