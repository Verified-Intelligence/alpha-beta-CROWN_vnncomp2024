/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
Experiments at Fri Nov  5 03:53:46 2021 on huan-Super-Server
Namespace(batch_size=64, beta_warmup=True, branching_candidates=5, branching_method='kfsb', branching_reduceop='max', complete_verifier='bab-refine', conv_mode='patches', csv_name='mnistfc_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=54, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../vnncomp2021/benchmarks/mnistfc', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.003, lr_decay=0.98, lr_init_alpha=0.1, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='before', results_file=None, seed=100, share_slopes=False, solve_slope=True, start=53, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[mnistfc_instances]_start=53_end=54_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-max-5_lra-init=0.1_lra=0.01_lrb=0.003_PGD=before.npz
customized start/end sample from 53 to 54

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/home/shiqi/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272168290/work/torch/csrc/utils/tensor_numpy.cpp:189.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
Unexpected input shape in onnx: (784, 1), given (1, 28, 28)
##### PGD attack: True label: 6, Tested against: [0, 1, 2, 3, 4, 5, 7, 8, 9] ######
pgd prediction: tensor([ 5.9937e-03, -3.0864e-04,  1.9417e-02, -4.2468e-03,  7.3133e-04,
        -6.2892e-04,  9.9141e-01, -1.2059e-02, -2.7896e-03, -1.7614e-03],
       device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([0.9854, 0.9917, 0.9720, 0.9957, 0.9907, 0.9920,    inf, 1.0035, 0.9942,
        0.9932], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
Model prediction is: tensor([[ 6.8975e-03,  1.4419e-03,  5.2976e-03, -2.9857e-03,  6.8500e-03,
         -1.5423e-03,  9.9308e-01, -9.8325e-04,  6.8031e-04, -8.6869e-03]],
       device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: 70.2987289428711 with beta sum per layer: []
optimal alpha/beta time: 3.6315395832061768
initial alpha-CROWN bounds: tensor([[-7.4495, -8.1261, -7.4282, -7.2566, -8.3613, -7.6019, -8.0220, -7.6438,
         -8.4091]], device='cuda:0', grad_fn=<AsStridedBackward0>) None
Start solving intermediate bounds with MIP...
alpha-CROWN optimizable variables initialized.
The program tries to detect if we are inside a docker. Hiding ourselves!!
Academic license - for non-commercial use only - expires 2022-07-16
Using license file /home/shiqi/gurobi.lic
mip_multi_proc: 16, mip_threads: 1,total threads used: 16, mip_perneuron_refine_timeout: 15
[total time budget for MIP: 288.0]

Linear(in_features=784, out_features=256, bias=True) 0 2 torch.Size([256])
Linear(in_features=256, out_features=256, bias=True) 1 4 torch.Size([256])
sorted candidates ['lay4_99', 'lay4_137', 'lay4_124', 'lay4_242', 'lay4_23', 'lay4_22', 'lay4_250', 'lay4_163', 'lay4_138', 'lay4_245', 'lay4_67', 'lay4_20', 'lay4_118', 'lay4_37', 'lay4_204', 'lay4_212', 'lay4_66', 'lay4_131', 'lay4_35', 'lay4_216', 'lay4_209', 'lay4_100', 'lay4_90', 'lay4_122', 'lay4_31', 'lay4_68', 'lay4_57', 'lay4_17', 'lay4_21', 'lay4_187', 'lay4_52', 'lay4_228', 'lay4_238', 'lay4_244', 'lay4_115', 'lay4_108', 'lay4_126', 'lay4_145', 'lay4_146', 'lay4_41', 'lay4_72', 'lay4_143', 'lay4_160', 'lay4_213', 'lay4_96', 'lay4_240', 'lay4_223', 'lay4_150', 'lay4_59', 'lay4_86', 'lay4_19', 'lay4_142', 'lay4_183', 'lay4_233', 'lay4_106', 'lay4_78', 'lay4_166', 'lay4_197', 'lay4_50', 'lay4_226', 'lay4_171', 'lay4_134', 'lay4_3', 'lay4_132', 'lay4_130', 'lay4_33', 'lay4_91', 'lay4_222', 'lay4_61', 'lay4_43', 'lay4_27', 'lay4_199', 'lay4_95', 'lay4_111', 'lay4_58', 'lay4_248', 'lay4_30', 'lay4_172', 'lay4_230', 'lay4_46', 'lay4_40', 'lay4_79', 'lay4_140', 'lay4_5', 'lay4_243', 'lay4_219', 'lay4_45', 'lay4_185', 'lay4_7', 'lay4_94', 'lay4_207', 'lay4_189', 'lay4_190', 'lay4_174', 'lay4_36', 'lay4_225', 'lay4_49', 'lay4_241', 'lay4_179', 'lay4_92', 'lay4_215', 'lay4_62', 'lay4_178', 'lay4_246', 'lay4_2', 'lay4_224', 'lay4_210', 'lay4_214', 'lay4_42', 'lay4_107', 'lay4_151', 'lay4_70', 'lay4_81', 'lay4_73', 'lay4_97', 'lay4_69', 'lay4_127', 'lay4_193', 'lay4_153', 'lay4_117', 'lay4_157', 'lay4_252', 'lay4_234', 'lay4_188', 'lay4_159', 'lay4_217', 'lay4_120', 'lay4_71', 'lay4_154', 'lay4_88', 'lay4_38', 'lay4_167', 'lay4_55', 'lay4_194', 'lay4_34', 'lay4_231', 'lay4_114', 'lay4_98', 'lay4_103', 'lay4_89', 'lay4_83', 'lay4_206', 'lay4_203', 'lay4_201', 'lay4_18', 'lay4_162', 'lay4_112'] filter: 1.0
Solving MIP for lay4_23, [-17.80664825439453,0.2369823455810547]=>[-17.80664825439453,-1e-05] (-1,-1; 15,-1), time: 0.6155s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_99, [-12.535646438598633,0.017949342727661133]=>[-12.535646438598633,-1e-05] (-1,-1; 15,-1), time: 0.6206s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_138, [-10.241582870483398,0.2469005584716797]=>[-10.241582870483398,-1e-05] (-1,-1; 15,-1), time: 0.6214s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_22, [-9.421592712402344,0.8760128021240234]=>[-9.421592712402344,-1e-05] (-1,-1; 15,-1), time: 0.6368s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_118, [-12.446249008178711,0.1927328109741211]=>[-12.446249008178711,-1e-05] (-1,-1; 15,-1), time: 0.6381s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_204, [-12.947905540466309,0.5972955226898193]=>[-12.947905540466309,-1e-05] (-1,-1; 15,-1), time: 0.6693s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_124, [-11.258062362670898,0.8748860359191895]=>[-11.258062362670898,-1e-05] (-1,-1; 15,-1), time: 0.6851s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_245, [-9.595223426818848,0.4565253257751465]=>[-9.595223426818848,-1e-05] (-1,-1; 15,-1), time: 0.7110s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_37, [-15.295906066894531,0.4876413345336914]=>[-15.295906066894531,-1e-05] (-1,-1; 15,-1), time: 0.7121s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_137, [-9.133646965026855,0.9402848482131958]=>[-9.133646965026855,-1e-05] (-1,-1; 15,-1), time: 0.9581s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_163, [-10.707122802734375,1.0522855520248413]=>[-10.707122802734375,-1e-05] (-1,-1; 15,-1), time: 0.9663s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_242, [-11.403181076049805,0.9216697216033936]=>[-11.403181076049805,-1e-05] (-1,-1; 15,-1), time: 0.9827s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_212, [-2.217337131500244,14.897795677185059]=>[1e-05,14.897795677185059] (15,-1; -1,-1), time: 1.1345s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_100, [-12.009721755981445,0.4912881851196289]=>[-12.009721755981445,-1e-05] (-1,-1; 15,-1), time: 0.5343s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_67, [-14.722766876220703,1.938918113708496]=>[-14.722766876220703,-1e-05] (-1,-1; 15,-1), time: 1.2890s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_216, [-11.164722442626953,0.47229695320129395]=>[-11.164722442626953,-1e-05] (-1,-1; 15,-1), time: 0.6680s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_122, [-11.197490692138672,0.3701322078704834]=>[-11.197490692138672,-1e-05] (-1,-1; 15,-1), time: 0.7197s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_131, [-12.871938705444336,1.2750556468963623]=>[-12.871938705444336,-1e-05] (-1,-1; 15,-1), time: 0.8525s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_21, [-18.670307159423828,0.639531135559082]=>[-18.670307159423828,-1e-05] (-1,-1; 15,-1), time: 0.5908s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_17, [-10.102083206176758,1.3042829036712646]=>[-10.102083206176758,-1e-05] (-1,-1; 15,-1), time: 1.0732s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_187, [-11.235920906066895,1.3705384731292725]=>[-11.235920906066895,-1e-05] (-1,-1; 15,-1), time: 0.9595s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_126, [-12.225081443786621,0.6658432483673096]=>[-12.225081443786621,-1e-05] (-1,-1; 15,-1), time: 0.6235s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_115, [-11.532791137695312,2.0020229816436768]=>[-11.532791137695312,-1e-05] (-1,-1; 15,-1), time: 1.7070s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_145, [-10.215904235839844,0.5333926677703857]=>[-10.215904235839844,-1e-05] (-1,-1; 15,-1), time: 0.6516s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_41, [-11.246060371398926,0.6469588279724121]=>[-11.246060371398926,-1e-05] (-1,-1; 15,-1), time: 0.7394s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_244, [-8.829896926879883,1.5202919244766235]=>[-8.829896926879883,-1e-05] (-1,-1; 15,-1), time: 3.4377s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_209, [-12.731395721435547,5.552189826965332]=>[-9.760388626752647,2.0586087518777356] (2,-1; 2,-1), time: 4.7618s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_108, [-2.7854344844818115,11.280782699584961]=>[1e-05,11.280782699584961] (15,-1; -1,-1), time: 4.0220s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_160, [-8.375215530395508,1.2397291660308838]=>[-8.375215530395508,-1e-05] (-1,-1; 15,-1), time: 1.3535s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_90, [-7.789790630340576,10.88526725769043]=>[-5.3453661674082,6.967877256739714] (2,-1; 2,-1), time: 7.1041s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_52, [-12.606330871582031,3.153243064880371]=>[-9.771827532682135,0.349858234894312] (2,-1; 2,-1), time: 6.8031s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_238, [-3.1891472339630127,7.563907623291016]=>[-0.8023189289048269,5.50244445492138] (2,-1; 2,-1), time: 7.2815s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_66, [-5.285579681396484,6.2126569747924805]=>[-2.731818678576807,3.7772603481078426] (2,-1; 2,-1), time: 8.1783s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_68, [-9.676773071289062,2.2647740840911865]=>[-7.142698327296395,0.0017252290529939365] (2,-1; 2,-1), time: 8.1664s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_228, [-3.3681561946868896,7.413992881774902]=>[-0.16602835224504514,5.922018825981363] (2,-1; 2,-1), time: 8.4529s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_86, [-10.322893142700195,0.5452437400817871]=>[-10.322893142700195,-1e-05] (-1,-1; 15,-1), time: 0.7060s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_20, [-13.568635940551758,2.3362600803375244]=>[-9.104126519599404,0.07361583211039376] (2,-1; 2,-1), time: 10.9038s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_59, [-13.751347541809082,1.746537685394287]=>[-13.751347541809082,-0.009943024418449617] (-1,-1; 2,-1), time: 2.1984s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_150, [-9.08522891998291,1.71451735496521]=>[-9.08522891998291,-1e-05] (-1,-1; 15,-1), time: 2.4913s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_142, [-11.451604843139648,1.4028849601745605]=>[-11.451604843139648,-1e-05] (-1,-1; 15,-1), time: 1.4044s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_106, [-11.222686767578125,0.7537026405334473]=>[-11.222686767578125,-1e-05] (-1,-1; 15,-1), time: 0.5444s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_35, [-10.262239456176758,3.117706298828125]=>[-6.743284536395818,0.8789978041351155] (2,-1; 2,-1), time: 12.9038s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_57, [-9.288745880126953,3.7490651607513428]=>[-6.4575298307021365,0.07367050597642114] (2,-1; 2,-1), time: 12.5901s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_197, [-10.367106437683105,0.056867003440856934]=>[-10.367106437683105,-1e-05] (-1,-1; 15,-1), time: 0.5394s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_31, [-8.929866790771484,2.7376410961151123]=>[-5.188624706482844,0.830600766016336] (2,-1; 2,-1), time: 13.8649s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_146, [-9.607829093933105,2.1713998317718506]=>[-6.004596560113127,0.22192154941724263] (2,-1; 2,-1), time: 11.4566s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_50, [-0.9962553977966309,8.318134307861328]=>[1e-05,8.318134307861328] (15,-1; -1,-1), time: 1.3753s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_143, [-3.091768503189087,8.459844589233398]=>[-0.16465141546522552,6.085805774059076] (2,-1; 2,-1), time: 10.4231s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_171, [-0.030510425567626953,11.716670989990234]=>[1e-05,11.716670989990234] (15,-1; -1,-1), time: 0.7732s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_3, [-11.052749633789062,0.6335921287536621]=>[-11.052749633789062,-1e-05] (-1,-1; 15,-1), time: 0.6970s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_19, [-12.135869979858398,4.42884635925293]=>[-8.940003564738662,1.144524193124476] (2,-1; 2,-1), time: 6.1342s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_240, [-10.990081787109375,2.454737663269043]=>[-7.471091175120269,0.5345860725211066] (2,-1; 2,-1), time: 8.1252s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_72, [-12.26024055480957,2.175368309020996]=>[-7.6306324725590535,0.35208026269947734] (2,-1; 2,-1), time: 11.7820s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_61, [-1.1835389137268066,11.960641860961914]=>[1e-05,11.960641860961914] (15,-1; -1,-1), time: 0.8545s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_250, [-7.57334041595459,1.7249724864959717]=>[-4.642756218572349,0.6074969454976471] (9,-1; 2,-1), time: 17.0871s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_96, [-3.571974515914917,8.424819946289062]=>[1e-05,8.424819946289062] (15,-1; -1,-1), time: 11.5034s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_78, [-5.453084945678711,6.558937072753906]=>[-3.1273331151718833,3.656613763005457] (2,-1; 2,-1), time: 7.8314s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_226, [-9.869711875915527,2.7493035793304443]=>[-9.869711875915527,-1e-05] (-1,-1; 15,-1), time: 5.6282s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_223, [-7.435276031494141,4.235616207122803]=>[-3.7482719138801244,2.4356070399938305] (2,-1; 2,-1), time: 12.3105s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_130, [-3.3699371814727783,8.776209831237793]=>[-1.342560922244835,6.211696456637324] (2,-1; 2,-1), time: 5.5905s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_213, [-8.690104484558105,3.651431083679199]=>[-5.163739127192909,1.9472992596660648] (9,-1; 2,-1), time: 17.1609s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_43, [-8.863039016723633,4.472649574279785]=>[-5.772166203705009,2.418733302656892] (2,-1; 2,-1), time: 7.0912s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_134, [-8.771345138549805,3.8197267055511475]=>[-5.6815716559705844,1.1418303146020747] (2,-1; 2,-1), time: 9.4677s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_233, [-8.84793758392334,6.112943649291992]=>[-5.028762083233713,2.186876983836256] (2,-1; 2,-1), time: 13.6668s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_230, [-0.3143343925476074,18.676240921020508]=>[1e-05,18.676240921020508] (15,-1; -1,-1), time: 0.6143s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_132, [-9.70927619934082,1.6474363803863525]=>[-5.799075048274435,0.16338478451630745] (2,-1; 2,-1), time: 9.8108s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_91, [-8.49267578125,4.829407691955566]=>[-4.959583829687722,2.02037951586804] (2,-1; 2,-1), time: 10.2844s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_248, [-2.4182305335998535,8.15538215637207]=>[1e-05,8.15538215637207] (15,-1; -1,-1), time: 5.8761s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_183, [-4.116680145263672,6.2756147384643555]=>[-0.25511213956973644,5.376504051591794] (9,-1; 2,-1), time: 16.1879s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_199, [-9.733148574829102,5.052330017089844]=>[-6.294773841215617,2.3365933699172503] (2,-1; 2,-1), time: 9.0595s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_166, [-10.97612476348877,1.118867039680481]=>[-6.795683257598012,0.07359097179497193] (9,-1; 2,-1), time: 16.2389s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_219, [-11.378822326660156,1.717965841293335]=>[-11.378822326660156,-1e-05] (-1,-1; 15,-1), time: 0.9112s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_27, [-8.134363174438477,4.349740505218506]=>[-4.084587253279272,2.7137119167664934] (2,-1; 2,-1), time: 11.5087s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_58, [-9.792012214660645,2.5897059440612793]=>[-9.792012214660645,-1e-05] (-1,-1; 15,-1), time: 9.0991s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_95, [-3.2002696990966797,6.838406562805176]=>[1e-05,6.838406562805176] (15,-1; -1,-1), time: 10.6725s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_94, [-9.414861679077148,0.30619215965270996]=>[-9.414861679077148,-1e-05] (-1,-1; 15,-1), time: 0.5202s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_33, [-9.134439468383789,2.2531180381774902]=>[-5.443936570383232,0.3675710640056547] (2,-1; 2,-1), time: 14.8159s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_111, [-12.062356948852539,1.9797167778015137]=>[-7.929986257045687,0.06978692851149981] (2,-1; 2,-1), time: 11.0021s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_30, [-6.3610734939575195,4.252686023712158]=>[-3.6300173280821877,2.3881546806318954] (2,-1; 2,-1), time: 7.5264s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_243, [-3.4148221015930176,12.936933517456055]=>[-0.8822849930941948,10.285341850336486] (2,-1; 2,-1), time: 3.9038s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_190, [-11.756559371948242,1.0801515579223633]=>[-11.756559371948242,-1e-05] (-1,-1; 15,-1), time: 0.6813s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_207, [-2.0235955715179443,8.351624488830566]=>[1e-05,8.351624488830566] (15,-1; -1,-1), time: 1.8301s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_222, [-9.425616264343262,1.6896584033966064]=>[-5.644288502311528,0.3298760557826796] (2,-1; 2,-1), time: 15.7842s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_172, [-2.817318916320801,8.973076820373535]=>[-0.07149250074123287,6.617642781357232] (2,-1; 2,-1), time: 8.3712s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_92, [-12.215518951416016,1.0239341259002686]=>[-12.215518951416016,-1e-05] (-1,-1; 15,-1), time: 0.5803s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_215, [-13.159149169921875,0.382218599319458]=>[-13.159149169921875,-1e-05] (-1,-1; 15,-1), time: 0.4713s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_45, [-4.202703475952148,8.12669563293457]=>[-2.419251680656002,5.521593244653833] (2,-1; 2,-1), time: 5.5343s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_62, [-12.767086029052734,0.18892264366149902]=>[-12.767086029052734,-1e-05] (-1,-1; 15,-1), time: 0.5916s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_46, [-5.621307849884033,4.665031433105469]=>[-3.1830342297195267,2.057304242420278] (2,-1; 2,-1), time: 9.3346s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_185, [-14.599943161010742,3.2982993125915527]=>[-11.438678046127723,0.18336246917017954] (2,-1; 2,-1), time: 5.8490s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_40, [-7.533766746520996,5.554319381713867]=>[-4.143250380072921,3.206559513590379] (2,-1; 2,-1), time: 9.1513s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_179, [-5.70212984085083,7.3817572593688965]=>[-3.6845631668763064,4.675919024434543] (2,-1; 2,-1), time: 4.4948s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_5, [-10.492773056030273,3.8300087451934814]=>[-7.10714770523522,0.4469916124075122] (2,-1; 2,-1), time: 9.7778s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_214, [-0.8281867504119873,14.72160530090332]=>[1e-05,14.72160530090332] (15,-1; -1,-1), time: 0.4982s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_140, [-5.551362037658691,7.839911460876465]=>[-3.9538693252298223,3.866339216458756] (2,-1; 2,-1), time: 10.7111s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_107, [-9.47718334197998,0.3569355010986328]=>[-9.47718334197998,-1e-05] (-1,-1; 15,-1), time: 0.4864s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_246, [-9.151864051818848,2.6835756301879883]=>[-9.151864051818848,-1e-05] (-1,-1; 15,-1), time: 3.5990s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_42, [-10.62427806854248,1.1634306907653809]=>[-10.62427806854248,-1e-05] (-1,-1; 15,-1), time: 1.0639s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_7, [-10.080730438232422,4.547163009643555]=>[-6.0322083284270915,2.310587943689792] (2,-1; 2,-1), time: 9.0874s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_70, [-16.905986785888672,1.0019302368164062]=>[-16.905986785888672,-1e-05] (-1,-1; 15,-1), time: 0.4897s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_81, [-15.091547012329102,0.48318803310394287]=>[-15.091547012329102,-1e-05] (-1,-1; 15,-1), time: 0.5277s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_36, [-3.0401883125305176,9.407981872558594]=>[-1.573701326501138,6.184759215074582] (2,-1; 2,-1), time: 7.3898s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_97, [-11.310943603515625,0.8892908096313477]=>[-11.310943603515625,-1e-05] (-1,-1; 15,-1), time: 0.6407s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_49, [-3.7393910884857178,11.315848350524902]=>[-0.4904446681772856,7.869942497196364] (2,-1; 2,-1), time: 7.1965s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_73, [-13.13770580291748,1.4403460025787354]=>[-13.13770580291748,-1e-05] (-1,-1; 15,-1), time: 0.9743s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_241, [-7.976046562194824,4.933993816375732]=>[-5.052027757282111,2.3664905676397723] (2,-1; 2,-1), time: 7.1132s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_193, [-0.9515941143035889,16.79526138305664]=>[1e-05,16.79526138305664] (15,-1; -1,-1), time: 0.6573s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_117, [-9.285385131835938,0.19789385795593262]=>[-9.285385131835938,-1e-05] (-1,-1; 15,-1), time: 0.5753s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_157, [-15.810934066772461,0.20416045188903809]=>[-15.810934066772461,-1e-05] (-1,-1; 15,-1), time: 0.5360s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_225, [-5.422938346862793,6.955257415771484]=>[-2.0141749092849577,4.434782780765804] (2,-1; 2,-1), time: 10.0705s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_159, [-11.14150619506836,2.1315724849700928]=>[-11.14150619506836,-1e-05] (-1,-1; 15,-1), time: 1.8868s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_224, [-2.7730374336242676,8.150093078613281]=>[-0.2617081471080407,6.140776575837129] (2,-1; 2,-1), time: 7.5831s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_71, [-15.485673904418945,0.0688931941986084]=>[-15.485673904418945,-1e-05] (-1,-1; 15,-1), time: 0.5528s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_2, [-7.327230453491211,6.232841491699219]=>[-3.9429295445972183,3.0805085811806645] (2,-1; 2,-1), time: 8.8982s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_79, [-8.328857421875,3.2956666946411133]=>[-4.5571086694667695,1.1983199679663261] (9,-1; 2,-1), time: 18.3075s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_178, [-4.923519134521484,6.563549041748047]=>[-1.5310990510713003,4.704884128539371] (2,-1; 2,-1), time: 9.9546s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_217, [-2.35404634475708,9.083467483520508]=>[1e-05,9.083467483520508] (15,-1; -1,-1), time: 3.1784s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_174, [-5.116764068603516,5.96185302734375]=>[-1.767587146227701,3.8002658593875545] (2,-1; 2,-1), time: 14.0807s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_194, [-7.612790107727051,0.5693155527114868]=>[-7.612790107727051,-1e-05] (-1,-1; 15,-1), time: 0.5412s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_210, [-3.6593422889709473,8.104949951171875]=>[-0.8142765273752262,5.529582998100477] (2,-1; 2,-1), time: 11.6744s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_34, [-0.5538744926452637,14.38926887512207]=>[1e-05,14.38926887512207] (15,-1; -1,-1), time: 0.5285s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_114, [-2.0844316482543945,12.697744369506836]=>[1e-05,12.697744369506836] (15,-1; -1,-1), time: 0.9909s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_234, [-2.118218421936035,6.043641090393066]=>[-0.2496838949283253,4.225112182928452] (2,-1; 2,-1), time: 8.0839s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_188, [-2.6380972862243652,9.508977890014648]=>[-0.38560648912168716,7.015343433083903] (2,-1; 2,-1), time: 7.9964s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_69, [-4.880632400512695,7.598856449127197]=>[-1.310404454132275,5.648963054681188] (2,-1; 2,-1), time: 10.0539s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_151, [-7.429235458374023,3.1319239139556885]=>[-4.33084316731543,1.364273188748374] (2,-1; 2,-1), time: 11.4485s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_189, [-5.872291564941406,6.3146748542785645]=>[-3.160989449176241,3.047254856077041] (9,-1; 2,-1), time: 19.3601s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_153, [-6.691811561584473,7.963699817657471]=>[-2.467689206032962,5.259350825056637] (2,-1; 2,-1), time: 11.3567s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_252, [-8.145214080810547,4.149918079376221]=>[-4.426929711258599,1.502370667395075] (2,-1; 2,-1), time: 11.2737s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_127, [-9.349324226379395,2.1942138671875]=>[-5.731478253462225,0.24816160917129446] (2,-1; 2,-1), time: 12.7296s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_154, [-12.826089859008789,3.7204627990722656]=>[-7.678952969860682,1.9473404587213885] (2,-1; 2,-1), time: 9.3197s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_167, [-13.576897621154785,1.8998942375183105]=>[-8.918638248365001,0.08194474877759055] (2,-1; 2,-1), time: 8.6861s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_120, [-5.987516403198242,4.141264915466309]=>[-2.767284669579745,1.917652744008647] (2,-1; 2,-1), time: 12.3552s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_89, [-6.051013469696045,1.7838099002838135]=>[-6.051013469696045,-1e-05] (-1,-1; 15,-1), time: 6.8350s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_55, [-5.777080535888672,5.150346755981445]=>[-2.637737155315236,2.8687741001373244] (2,-1; 2,-1), time: 10.4969s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_98, [-5.668403625488281,8.27550983428955]=>[-1.9213129165382812,5.594971949804754] (2,-1; 2,-1), time: 8.1416s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_231, [-3.3826370239257812,6.555188179016113]=>[-1.377259310148562,3.9929501526079085] (2,-1; 2,-1), time: 9.2855s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_88, [-11.247933387756348,3.9635329246520996]=>[-6.445329306565628,1.7121559040657] (2,-1; 2,-1), time: 12.5815s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_38, [-6.610424518585205,4.447890758514404]=>[-3.421618232558436,2.470143437742835] (2,-1; 2,-1), time: 12.5448s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_103, [-7.4648027420043945,4.110724449157715]=>[-5.237647540741201,1.114457470300931] (2,-1; 2,-1), time: 9.6497s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_83, [-9.295439720153809,2.3278703689575195]=>[-5.424296182324261,0.6345060373090929] (2,-1; 2,-1), time: 10.5058s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_112, [-3.6209425926208496,8.65335750579834]=>[-1.1534305361145436,6.09516443213326] (2,-1; 2,-1), time: 6.7406s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_162, [-10.20431900024414,2.4666080474853516]=>[-6.142920032466478,0.5626697498968901] (2,-1; 2,-1), time: 11.2891s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_203, [-6.746100425720215,5.763406753540039]=>[-3.1605645585324535,3.518185949195694] (2,-1; 2,-1), time: 12.7412s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_201, [-8.186908721923828,2.9976577758789062]=>[-4.005652658384083,2.041428108756387] (2,-1; 2,-1), time: 12.4800s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_206, [-8.059219360351562,3.4361753463745117]=>[-4.268085895027244,1.4780526167153343] (2,-1; 2,-1), time: 13.8547s, #vars: 1399, #constrs: 665, improved: True
Solving MIP for lay4_18, [-7.942355155944824,2.198269844055176]=>[-4.366483270126167,1.1593795102920734] (9,-1; 2,-1), time: 16.7813s, #vars: 1399, #constrs: 665, improved: True
MIP improved 147 nodes out of 147 unstable nodes, lb improved 278.8111877441406, ub improved 232.61135864257812, time 67.3205
maximum relu layer improved by MIP so far 1 last_relu_layer_refined: True
Linear(in_features=256, out_features=256, bias=True) 2 6 torch.Size([256])
sorted candidates ['lay6_77', 'lay6_18', 'lay6_101', 'lay6_22', 'lay6_238', 'lay6_230', 'lay6_247', 'lay6_221', 'lay6_88', 'lay6_162', 'lay6_76', 'lay6_40', 'lay6_255', 'lay6_133', 'lay6_151', 'lay6_9', 'lay6_128', 'lay6_86', 'lay6_92', 'lay6_81', 'lay6_140', 'lay6_216', 'lay6_84', 'lay6_143', 'lay6_192', 'lay6_187', 'lay6_33', 'lay6_160', 'lay6_234', 'lay6_25', 'lay6_173', 'lay6_61', 'lay6_149', 'lay6_233', 'lay6_153', 'lay6_182', 'lay6_161', 'lay6_8', 'lay6_168', 'lay6_74', 'lay6_38', 'lay6_146', 'lay6_228', 'lay6_135', 'lay6_39', 'lay6_11', 'lay6_43', 'lay6_229', 'lay6_205', 'lay6_129', 'lay6_27', 'lay6_200', 'lay6_107', 'lay6_211'] filter: 1.0
Run alpha-CROWN after refining layer 4 and relu idx 1
0 /12 torch.Size([1, 256])
1 /14 torch.Size([1, 256])
Solving MIP for lay6_221, [-35.182708740234375,0.41010046005249023]=>[-35.182708740234375,-1e-05] (-1,-1; 15,-1), time: 0.3816s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_238, [-22.4719295501709,0.7908186912536621]=>[-22.4719295501709,-1e-05] (-1,-1; 15,-1), time: 0.3829s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_255, [-26.7844181060791,0.38870906829833984]=>[-26.7844181060791,-1e-05] (-1,-1; 15,-1), time: 0.3817s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_76, [-18.805282592773438,0.10411357879638672]=>[-18.805282592773438,-1e-05] (-1,-1; 15,-1), time: 0.3851s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_22, [-24.890350341796875,0.01756000518798828]=>[-24.890350341796875,-1e-05] (-1,-1; 15,-1), time: 0.4029s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_40, [-26.949825286865234,1.0946145057678223]=>[-26.949825286865234,-1e-05] (-1,-1; 15,-1), time: 0.4093s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_88, [-26.05669403076172,1.0573368072509766]=>[-26.05669403076172,-1e-05] (-1,-1; 15,-1), time: 0.4108s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_230, [-23.234838485717773,0.19309043884277344]=>[-23.234838485717773,-1e-05] (-1,-1; 15,-1), time: 0.4205s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_162, [-24.379547119140625,0.21331214904785156]=>[-24.379547119140625,-1e-05] (-1,-1; 15,-1), time: 0.4273s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_247, [-26.623699188232422,0.4048585891723633]=>[-26.623699188232422,-1e-05] (-1,-1; 15,-1), time: 0.4316s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_18, [-18.76861572265625,0.7873764038085938]=>[-18.76861572265625,-1e-05] (-1,-1; 15,-1), time: 0.4385s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_9, [-23.86130142211914,0.5850467681884766]=>[-23.86130142211914,-1e-05] (-1,-1; 15,-1), time: 0.4398s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_151, [-20.95471954345703,0.4805464744567871]=>[-20.95471954345703,-1e-05] (-1,-1; 15,-1), time: 0.4405s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_133, [-23.165157318115234,1.1449508666992188]=>[-23.165157318115234,-1e-05] (-1,-1; 15,-1), time: 0.4418s, #vars: 1811, #constrs: 1155, improved: True
Solving MIP for lay6_101, [-26.956436157226562,0.3831338882446289]=>[-26.956436157226562,-1e-05] (-1,-1; 15,-1), time: 0.4674s, #vars: 1811, #constrs: 1155, improved: True

all verified at 11th iter
best_l after optimization: -1.3980777263641357 with beta sum per layer: []
optimal alpha/beta time: 0.49800848960876465
alpha-CROWN with intermediate bounds by MIP: tensor([[0.1778, 0.1682, 0.1734, 0.1887, 0.0498, 0.1489, 0.2351, 0.0836, 0.1725]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
min of alpha-CROWN bounds 0.04984331130981445>=0, verified!
MIP finished with 72.04550409317017s
Run final alpha-CROWN after MIP solving on layer 5 and relu idx 2
0 /12 torch.Size([1, 256])
1 /14 torch.Size([1, 256])

all verified at 0th iter
best_l after optimization: -1.3980777263641357 with beta sum per layer: []
optimal alpha/beta time: 1.0289344787597656
alpha-CROWN with intermediate bounds improved by MIP: tensor([[0.1778, 0.1682, 0.1734, 0.1887, 0.0498, 0.1489, 0.2351, 0.0836, 0.1725]],
       device='cuda:0', grad_fn=<AsStridedBackward0>) None
refined global lb: tensor([[0.1778, 0.1682, 0.1734, 0.1887, 0.0498, 0.1489, 0.0000, 0.2351, 0.0836,
         0.1725]], device='cuda:0') min: tensor(0., device='cuda:0')
Verified safe using alpha-CROWN with MIP improved bounds!
Result: safe-incomplete-refine in 81.5617 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 81.56168675422668
safe-incomplete-refine (total 1): [0]
