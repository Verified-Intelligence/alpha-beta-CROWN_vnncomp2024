Building native CUDA modules...
/home/zhouxingshi/conda/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/torch/utils/cpp_extension.py:3: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
CUDA modules have been built.
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  mode: verified-acc
  complete_verifier: mip
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: verivital_instances.csv
  onnx_path: null
  vnnlib_path: null
  results_file: null
  root_path: ../../../../../vnncomp2021/benchmarks/verivital
model:
  path: null
  name: mnist_9_200
data:
  start: 27
  end: 28
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: MNIST
  data_filter_path: null
specification:
  type: lp
  norm: .inf
  epsilon: null
solver:
  no_float64_last_iter: false
  no_amp: false
  early_stop_patience: 10
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
  beta-crown:
    batch_size: 64
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
bab:
  max_domains: 200000
  decision_thresh: 0
  timeout: 360
  get_upper_bound: false
  dfs_percent: 0.0
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1
    iteration: 500
    lr_beta: 0.01
    number_cuts: 50
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    skip_bab: false
    max_num: 1000000000
    incomplete: false
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    input_split:
      enable: false
      use_alpha_patience: 20
      attack_patience: 80
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  enable_mip_attack: false
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
debug:
  lp_test: null

Experiments at Mon May  2 21:22:08 2022 on ubuntu
saving results to vnn-comp_[verivital_instances]_start=27_end=28_iter=50_b=64_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npz
customized start/end sample from 27 to 28

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
arguments.Config["general"]["complete_verifier"] change: mip -> mip
Model prediction is: tensor([[-7.9759,  6.4574, -4.8231, -6.0221, -1.2712, -4.0112, -7.2130,  2.4738,
         -0.9327, -1.3273]], device='cuda:0')
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.8208,  5.6823,  5.8497,  1.5275,  4.5080,  7.1301, -0.4770, -0.5120,
          1.3094]], device='cuda:0') None
best_l after optimization: -33.21139907836914 with beta sum per layer: []
alpha/beta optimization time: 1.5714986324310303
initial alpha-CROWN bounds: tensor([[ 7.8740,  5.7272,  5.8790,  1.5897,  4.5619,  7.1645, -0.4440, -0.4865,
          1.3454]], device='cuda:0', grad_fn=<AsStridedBackward>)
worst class: tensor(-0.4865, device='cuda:0', grad_fn=<MinBackward1>)
##### PGD attack: True label: 1, Tested against: [0, 2, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-7.8367,  2.8822, -5.0402, -5.5786, -0.5336, -4.7618, -7.2312,  2.3239,
         1.0084, -0.7147], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([10.7188,     inf,  7.9224,  8.4608,  3.4158,  7.6440, 10.1134,  0.5583,
         1.8738,  3.5969], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
preset mip_multi_proc as default setting: 48
Academic license - for non-commercial use only - expires 2022-10-30
Using license file /home/zhouxingshi/gurobi.lic
mip_multi_proc: 48, mip_threads: 1, total threads used: 48
build_mip_time: 2.7377378940582275
finished building Gurobi MIP model, calling optimize function
lower bounds for all target labels: tensor([ 7.8740,  0.0000,  5.7272,  5.8790,  1.5897,  4.5619,  7.1645, -0.4440,
        -0.4865,  1.3454], device='cuda:0')
Starting MIP solver for these labels: [7, 8]
/home/zhouxingshi/conda/miniconda3/envs/alpha-beta-crown/lib/python3.7/site-packages/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
solving MIP for lay6_8, status:15, [-0.4864673614501953, inf]=>[0.31638588636591064, 0.9225811813109468], time: 10.714355945587158s
solving MIP for lay6_7, status:15, [-0.4440174102783203, inf]=>[0.3593703962598972, inf], time: 11.078552961349487s
MIP solved lower bound: tensor([[7.8740, 0.0000, 5.7272, 5.8790, 1.5897, 4.5619, 7.1645, 0.3594, 0.3164,
         1.3454]], device='cuda:0')
MIP solved upper bound: tensor([[   inf, 0.0000,    inf,    inf,    inf,    inf,    inf,    inf, 0.9226,
            inf]], device='cuda:0')
verified safe-mip with init mip!
time threshold left for bab: 284.12373328208923
Result: safe-mip in 21.8624 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 21.862350940704346
safe-mip (total 1): [0]
