Experiments at Fri Nov  5 23:03:22 2021 on zeratul
saving results to vnn-comp_[verivital_instances]_start=27_end=28_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npz
customized start/end sample from 27 to 28

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
arguments.Config["general"]["complete_verifier"] change: mip -> mip
Model prediction is: tensor([[-7.9759,  6.4574, -4.8231, -6.0221, -1.2712, -4.0112, -7.2130,  2.4738,
         -0.9327, -1.3273]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.8208,  5.6823,  5.8497,  1.5275,  4.5080,  7.1301, -0.4770, -0.5120,
          1.3094]], device='cuda:0') None
best_l after optimization: -33.211395263671875 with beta sum per layer: []
optimal alpha/beta time: 1.5980548858642578
initial alpha-CROWN bounds: tensor([[ 7.8740,  5.7272,  5.8790,  1.5897,  4.5619,  7.1645, -0.4440, -0.4865,
          1.3454]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 1, Tested against: [0, 2, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-7.8437,  2.9015, -5.0187, -5.5687, -0.5782, -4.6976, -7.1853,  2.3379,
         1.0372, -0.7771], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([10.7452,     inf,  7.9202,  8.4702,  3.4797,  7.5991, 10.0868,  0.5636,
         1.8644,  3.6786], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
preset mip_multi_proc as default setting: 72
Academic license - for non-commercial use only - expires 2022-06-19
Using license file /home/yihan/gurobi.lic
mip_multi_proc: 72, mip_threads: 1, total threads used: 72
build_mip_time: 1.4135518074035645
finished building Gurobi MIP model, calling optimize function
lower bounds for all target labels: tensor([ 7.8740,  0.0000,  5.7272,  5.8790,  1.5897,  4.5619,  7.1645, -0.4440,
        -0.4865,  1.3454], device='cuda:0')
Starting MIP solver for these labels: (8, 7)
/home/yihan/anaconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/yihan/anaconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch-0.3.0-py3.7.egg/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336320488/work/torch/csrc/utils/tensor_numpy.cpp:143.)
solving MIP for lay6_8, status:15, [-0.4864673614501953]=>[0.31638588636591064], time: 6.949235916137695s
solving MIP for lay6_7, status:15, [-0.4440176486968994]=>[0.3574781956300499], time: 7.231664419174194s
MIP solved global bound=tensor([[7.8740, 0.0000, 5.7272, 5.8790, 1.5897, 4.5619, 7.1645, 0.3575, 0.3164,
         1.3454]], device='cuda:0')
verified safe-mip with init mip!
time threshold left for bab: 287.6241645812988
Result: safe-mip in 18.4317 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 18.43165349960327
safe-mip (total 1): [0]
