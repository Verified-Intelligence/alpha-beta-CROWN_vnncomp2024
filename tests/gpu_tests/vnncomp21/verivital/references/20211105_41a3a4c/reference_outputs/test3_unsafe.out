Experiments at Fri Nov  5 23:04:00 2021 on zeratul
saving results to vnn-comp_[verivital_instances]_start=4_end=5_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npz
customized start/end sample from 4 to 5

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
arguments.Config["general"]["complete_verifier"] change: mip -> mip
Model prediction is: tensor([[ -4.5353, -17.9707,   4.7454, -11.0320,  -3.5371, -12.3130,  -6.4043,
         -11.3507,   2.1671,  -4.7323]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.6311, 19.3818, 12.6396,  4.9075, 13.7651,  8.1255, 13.0765, -0.3753,
          6.0657]], device='cuda:0') None
best_l after optimization: -84.71163940429688 with beta sum per layer: []
optimal alpha/beta time: 1.6831779479980469
initial alpha-CROWN bounds: tensor([[ 6.6770, 19.4514, 12.7102,  4.9608, 13.8296,  8.1687, 13.1177, -0.3349,
          6.1312]], device='cuda:0', grad_fn=<AsStridedBackward>) None
preset mip_multi_proc as default setting: 72
Academic license - for non-commercial use only - expires 2022-06-19
Using license file /home/yihan/gurobi.lic
mip_multi_proc: 72, mip_threads: 1, total threads used: 72
build_mip_time: 1.2975246906280518
finished building Gurobi MIP model, calling optimize function
lower bounds for all target labels: tensor([ 6.6770, 19.4514,  0.0000, 12.7102,  4.9608, 13.8296,  8.1687, 13.1177,
        -0.3349,  6.1312], device='cuda:0')
Starting MIP solver for these labels: (8,)
/home/yihan/anaconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/yihan/anaconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch-0.3.0-py3.7.egg/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336320488/work/torch/csrc/utils/tensor_numpy.cpp:143.)
solving MIP for lay6_8, status:15, [-0.33493947982788086]=>[-0.05497193278971807], time: 1.3189153671264648s
MIP solved global bound=tensor([[ 6.6770, 19.4514,  0.0000, 12.7102,  4.9608, 13.8296,  8.1687, 13.1177,
         -0.0550,  6.1312]], device='cuda:0')
verified unsafe-mip with init mip!
time threshold left for bab: 294.0731825828552
Result: unsafe-mip in 11.4176 seconds


[]
############# Summary #############
Final verified acc: 0.0% [total 1 examples]
Total verification count: 1 , total verified safe: 0 , verified unsafe: 1 , timeout: 0
max time 11.417617559432983
unsafe-mip (total 1): [0]
