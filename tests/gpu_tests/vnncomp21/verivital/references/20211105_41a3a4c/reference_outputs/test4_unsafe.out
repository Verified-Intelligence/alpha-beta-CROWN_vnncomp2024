Experiments at Fri Nov  5 23:04:13 2021 on zeratul
saving results to vnn-comp_[verivital_instances]_start=54_end=55_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npz
customized start/end sample from 54 to 55

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
arguments.Config["general"]["complete_verifier"] change: mip -> mip
Model prediction is: tensor([[ -4.0215, -10.2104,  -0.1935,   0.1956,  -8.2807,   0.4244,   4.2183,
         -11.7921,   5.5678,  -7.2703]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.5706, 13.1183,  3.7108,  3.6199, 11.5482,  3.3192, -0.8182, 15.0123,
         11.0454]], device='cuda:0') None
best_l after optimization: -68.48048400878906 with beta sum per layer: []
optimal alpha/beta time: 2.0156641006469727
initial alpha-CROWN bounds: tensor([[ 7.6051, 13.1523,  3.7604,  3.6402, 11.5967,  3.3552, -0.7607, 15.0536,
         11.0778]], device='cuda:0', grad_fn=<AsStridedBackward>) None
preset mip_multi_proc as default setting: 72
Academic license - for non-commercial use only - expires 2022-06-19
Using license file /home/yihan/gurobi.lic
mip_multi_proc: 72, mip_threads: 1, total threads used: 72
build_mip_time: 1.54813814163208
finished building Gurobi MIP model, calling optimize function
lower bounds for all target labels: tensor([ 7.6051, 13.1523,  3.7604,  3.6402, 11.5967,  3.3552, -0.7607, 15.0536,
         0.0000, 11.0778], device='cuda:0')
Starting MIP solver for these labels: (6,)
/home/yihan/anaconda3/envs/py37/lib/python3.7/site-packages/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/yihan/anaconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch-0.3.0-py3.7.egg/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336320488/work/torch/csrc/utils/tensor_numpy.cpp:143.)
solving MIP for lay5_6, status:15, [-0.7606582641601562]=>[-0.5342017624610162], time: 1.8284592628479004s
MIP solved global bound=tensor([[ 7.6051, 13.1523,  3.7604,  3.6402, 11.5967,  3.3552, -0.5342, 15.0536,
          0.0000, 11.0778]], device='cuda:0')
verified unsafe-mip with init mip!
time threshold left for bab: 413.2632865905762
Result: unsafe-mip in 12.5789 seconds


[]
############# Summary #############
Final verified acc: 0.0% [total 1 examples]
Total verification count: 1 , total verified safe: 0 , verified unsafe: 1 , timeout: 0
max time 12.578937530517578
unsafe-mip (total 1): [0]
