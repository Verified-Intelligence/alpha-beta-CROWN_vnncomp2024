Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: mip
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: verivital_instances.csv
  results_file: null
  root_path: ../../vnncomp2021/benchmarks/verivital
model:
  path: null
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_9_200
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 32
  end: 33
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: MNIST
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: null
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 64
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 3
    reduceop: min
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: after
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 12:57:11 2022 on diablo.cs.ucla.edu
saving results to a-b-crown_[verivital_instances]_start=32_end=33_iter=50_b=64_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after_cplex_cuts=False_initial_max_domains=1.npz
customized start/end sample from 32 to 33

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx Convnet_avgpool.onnx
Using vnnlib ./specs/avgpool_specs/prop_12_0.04.vnnlib
Precompiled vnnlib file found at ../../vnncomp2021/benchmarks/verivital/./specs/avgpool_specs/prop_12_0.04.vnnlib.compiled
Loading onnx ../../vnncomp2021/benchmarks/verivital/Convnet_avgpool.onnx wih quirks {}
ConvertModel(
  (Conv_5): Conv2d(1, 32, kernel_size=(2, 2), stride=(1, 1))
  (Relu_6): ReLU(inplace=True)
  (Pad_7): Pad(mode=constant, padding=[0, 0, 0, 0])
  (AveragePool_8): AvgPool2d(kernel_size=(4, 4), stride=(4, 4), padding=(0, 0))
  (Flatten_9): Flatten()
  (Gemm_output): Linear(in_features=1152, out_features=10, bias=True)
)
Model prediction is: tensor([[ -9.44233036, -23.29099464, -12.77144241,  -7.00811052, -11.35821819,
           9.32887650,  -0.62738669, -13.79782486,   0.59879577,   4.22845078]],
       device='cuda:0')
layer /6 using sparse-features alpha with shape [4489]; unstable size 4489; total size 23328 (torch.Size([1, 32, 27, 27]))
layer /6 start_node /36 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[12.48205757, 23.67043114, 15.41994858, 10.63845730, 12.87606239,
          3.93878031, 16.41649246,  2.34779882, -0.63473499]], device='cuda:0') None
best_l after optimization: 98.96043395996094 with beta sum per layer: []
alpha/beta optimization time: 1.1417558193206787
initial alpha-CROWN bounds: tensor([[12.65887260, 24.00834846, 15.62703991, 10.76636600, 13.08720589,
          4.15212631, 16.59237480,  2.53740501, -0.46929789]], device='cuda:0')
Worst class: (+ rhs) -0.4692978858947754
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.01000000536441803, initialization=uniform, GAMA=False
model output: tensor([[ -9.44233036, -23.29099464, -12.77144241,  -7.00811052, -11.35821819,
           9.32887650,  -0.62738669, -13.79782486,   0.59879577,   4.22845078]],
       device='cuda:0')
pgd prediction: tensor([[[ -9.52570915, -24.11534309, -12.77273178,  -6.87423658, -11.09737968,
            7.42389488,  -1.86238909, -13.95311546,   1.45803344,   6.87868834],
         [ -9.52570915, -24.11534309, -12.77273178,  -6.87423658, -11.09737968,
            7.42389488,  -1.86238909, -13.95311546,   1.45803344,   6.87868834]]],
       device='cuda:0')
pgd attack margin tensor([[[16.94960403, 31.53923798, 20.19662666, 14.29813194, 18.52127457,
           9.28628349, 21.37701035,  5.96586132,  0.54520655]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.7710 seconds.
pgd attack failed
preset mip_multi_proc as default setting: 40
Set parameter Username
Academic license - for non-commercial use only - expires 2023-08-09
mip_multi_proc: 40, mip_threads: 1, total threads used: 40
mip solver model built in 3.4206 seconds.
lower bounds for all target labels: [12.658802032470703, 24.00834846496582, 15.627028465270996, 10.766366004943848, 13.08720588684082, 4.152105331420898, 16.592256546020508, 2.5373826026916504, -0.4693467617034912]
Starting MIP solver for these labels: [8]
PGD done for relu layer final
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/layer.py:30: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_numpy.cpp:178.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/model.py:154: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  "Using experimental implementation that allows 'batch_size > 1'."
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
solving MIP for lay/36_8, status:15, [-0.4693467617034912, inf]=>[0.07393085423531975, 0.6057280326054394], time: 4.671387434005737s
MIP solved lower bound: tensor([[12.65880203],
        [24.00834846],
        [15.62702847],
        [10.76636600],
        [13.08720589],
        [ 4.15210533],
        [16.59225655],
        [ 2.53738260],
        [ 0.07393085]])
MIP solved upper bound: tensor([[       inf],
        [       inf],
        [       inf],
        [       inf],
        [       inf],
        [       inf],
        [       inf],
        [       inf],
        [0.60572803]])
verified safe-mip with init mip!
Result: safe-mip in 15.3468 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time [1] 15.346823930740356 max time 15.346823930740356
safe-mip (total 1): [0]
