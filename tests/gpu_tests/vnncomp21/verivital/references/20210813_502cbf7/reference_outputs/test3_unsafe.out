Experiments at Fri Nov  5 18:05:30 2021 on kerrigan
Namespace(batch_size=64, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='mip', conv_mode='patches', csv_name='verivital_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=5, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../../vnncomp2021/benchmarks/verivital', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='skip', record_lb=False, refinement_batch_size=-1, results_file=None, seed=100, share_slopes=False, solve_slope=True, start=4, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[verivital_instances]_start=4_end=5_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=skip.npz
customized start/end sample from 4 to 5

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
args.complete_verifier change: mip -> mip
Model prediction is: tensor([[ -4.5357, -17.9710,   4.7457, -11.0303,  -3.5382, -12.3160,  -6.4014,
         -11.3497,   2.1678,  -4.7333]], device='cuda:0',
       grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: -84.71321868896484 with beta sum per layer: []
optimal alpha/beta time: 0.9851601123809814
initial alpha-CROWN bounds: tensor([[ 6.6786, 19.4485, 12.7028,  4.9655, 13.8332,  8.1685, 13.1178, -0.3335,
          6.1317]], device='cuda:0', grad_fn=<AsStridedBackward>) None
preset mip_multi_proc as default setting: 64
Academic license - for non-commercial use only - expires 2022-10-31
Using license file /home/yihan/gurobi.lic
mip_multi_proc: 64, mip_threads: 1, total threads used: 64
build_mip_time: 8.305863857269287
finished building Gurobi MIP model, calling optimize function
tensor([ 6.6786, 19.4485,  0.0000, 12.7028,  4.9655, 13.8332,  8.1685, 13.1178,
        -0.3335,  6.1317], device='cuda:0')
/home/yihan/miniconda3/envs/py37/lib/python3.7/site-packages/onnx-1.10.2-py3.7-linux-x86_64.egg/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/yihan/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch-0.3.0-py3.7.egg/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
solving MIP for lay6_8, [-0.3335404396057129]=>[-0.10793221241793091], time: 8.230238676071167s
MIP solved global bound=tensor([[ 6.6786, 19.4485,  0.0000, 12.7028,  4.9655, 13.8332,  8.1685, 13.1178,
         -0.1079,  6.1317]], device='cuda:0')
verified unsafe with init mip!
Result: unsafe-mip in 23.1680 seconds


[]
############# Summary #############
Final verified acc: 0.0% [total 1 examples]
Total verification count: 1 , total verified safe: 0 , verified unsafe: 1 , timeout: 0
max time 23.16801929473877
unsafe-mip (total 1): [0]
