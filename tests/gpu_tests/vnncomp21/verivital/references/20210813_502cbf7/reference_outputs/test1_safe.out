Experiments at Fri Nov  5 18:04:40 2021 on kerrigan
Namespace(batch_size=64, beta_warmup=True, branching_candidates=3, branching_method='kfsb', branching_reduceop='min', complete_verifier='mip', conv_mode='patches', csv_name='verivital_instances.csv', data='MNIST', decision_thresh=0, deterministic=False, device='cuda', double_fp=False, end=28, incomplete=True, increase_TO=False, init_iteration=100, intermediate_refinement_layers=[-1], iteration=50, load='../../../vnncomp2021/benchmarks/verivital', loss_reduction_func='sum', lr_alpha=0.01, lr_beta=0.05, lr_decay=0.98, lr_init_alpha=0.1, lr_intermediate_beta=0.05, max_refinement_domains=1000, max_subproblems_list=200000, mip_multi_proc=None, mip_perneuron_refine_timeout=15, mip_refine_timeout=0.8, mip_threads=1, model='cresnet5_16_avg_bn', no_beta=False, no_joint_opt=False, no_warm=False, norm=inf, onnx_path=None, opt_bias=False, opt_coeffs=False, opt_intermediate_beta=False, optimizer='adam', pgd_order='after', record_lb=False, refinement_batch_size=-1, results_file=None, seed=100, share_slopes=False, solve_slope=True, start=27, timeout=360, vnnlib_path=None)
saving results to vnn-comp_[verivital_instances]_start=27_end=28_iter=50_b=64_int-beta=False_timeout=360_branching=kfsb-min-3_lra-init=0.1_lra=0.01_lrb=0.05_PGD=after.npz
customized start/end sample from 27 to 28

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
args.complete_verifier change: mip -> mip
Model prediction is: tensor([[-7.9756,  6.4577, -4.8233, -6.0215, -1.2704, -4.0120, -7.2101,  2.4716,
         -0.9321, -1.3278]], device='cuda:0', grad_fn=<AddBackward0>)
alpha-CROWN optimizable variables initialized.
best_l after optimization: -33.1880989074707 with beta sum per layer: []
optimal alpha/beta time: 1.2297768592834473
initial alpha-CROWN bounds: tensor([[ 7.8716,  5.7256,  5.8760,  1.5873,  4.5600,  7.1607, -0.4454, -0.4900,
          1.3422]], device='cuda:0', grad_fn=<AsStridedBackward>) None
##### PGD attack: True label: 1, Tested against: [0, 2, 3, 4, 5, 6, 7, 8, 9] ######
pgd prediction: tensor([-7.9083,  2.8086, -5.0499, -5.5179, -0.5697, -4.6754, -7.1927,  2.2529,
         1.0577, -0.7312], device='cuda:0', grad_fn=<SqueezeBackward1>)
attack margin tensor([10.7169,     inf,  7.8585,  8.3265,  3.3783,  7.4840, 10.0013,  0.5557,
         1.7509,  3.5398], device='cuda:0', grad_fn=<RsubBackward1>)
untargeted pgd failed
preset mip_multi_proc as default setting: 64
Academic license - for non-commercial use only - expires 2022-10-31
Using license file /home/yihan/gurobi.lic
mip_multi_proc: 64, mip_threads: 1, total threads used: 64
build_mip_time: 8.606342077255249
finished building Gurobi MIP model, calling optimize function
tensor([ 7.8716,  0.0000,  5.7256,  5.8760,  1.5873,  4.5600,  7.1607, -0.4454,
        -0.4900,  1.3422], device='cuda:0')
/home/yihan/miniconda3/envs/py37/lib/python3.7/site-packages/onnx-1.10.2-py3.7-linux-x86_64.egg/onnx/mapping.py:27: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  int(TensorProto.STRING): np.dtype(np.object)
/home/yihan/miniconda3/envs/py37/lib/python3.7/site-packages/onnx2pytorch-0.3.0-py3.7.egg/onnx2pytorch/convert/layer.py:25: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1627336316785/work/torch/csrc/utils/tensor_numpy.cpp:143.)
solving MIP for lay6_8, [-0.4900360107421875]=>[1e-05], time: 6.690097332000732s
solving MIP for lay6_7, [-0.4453636407852173]=>[1e-05], time: 7.412740707397461s
MIP solved global bound=tensor([[7.8716e+00, 0.0000e+00, 5.7256e+00, 5.8760e+00, 1.5873e+00, 4.5600e+00,
         7.1607e+00, 1.0000e-05, 1.0000e-05, 1.3422e+00]], device='cuda:0')
verified safe with init mip!
Result: safe-mip in 24.8115 seconds


[]
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
max time 24.81151294708252
safe-mip (total 1): [0]
