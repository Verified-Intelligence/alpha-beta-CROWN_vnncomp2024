Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  record_bounds: false
  sparse_alpha: true
  save_adv_example: false
  precompile_jit: false
  mode: verified-acc
  complete_verifier: bab
  enable_incomplete_verification: true
  get_crown_verified_acc: false
  csv_name: oval21_instances.csv
  results_file: null
  root_path: ../../vnncomp2021/benchmarks/oval21
model:
  path: null
  cache_onnx_conversion: false
  onnx_quirks: null
  name: mnist_9_200
  onnx_path: null
  onnx_path_prefix: ''
  onnx_optimization_flags: none
data:
  start: 23
  end: 24
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  norm: .inf
  epsilon: null
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 200
  no_float64_last_iter: true
  no_amp: false
  early_stop_patience: 10
  start_save_best: 2
  bound_prop_method: alpha-crown
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_slopes: false
    no_joint_opt: false
    lr_decay: 0.98
    full_conv_alpha: true
  beta-crown:
    min_batch_size_ratio: 0.1
    lr_alpha: 0.01
    lr_beta: 0.01
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
    solver_pkg: gurobi
  multi_class:
    multi_class_method: allclass_domain
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
bab:
  initial_max_domains: 1
  max_domains: 200000
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_intermediate_layers: ''
  interm_transfer: true
  cut:
    enabled: false
    bab_cut: false
    lp_cut: false
    method: null
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 100
    batch_size_primal: 100
    add_implied_cuts: false
    add_input_cuts: false
    _tmp_cuts: null
    _eran_cuts: null
    max_num: 1000000000
    fixed_cuts: false
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    lr: 0.01
  branching:
    method: kfsb
    candidates: 10
    reduceop: max
    sb_coeff_thresh: 0.001
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      sort_domain_interval: -1
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_timeout: 30.0
    mip_start_iteration: 5
    max_dive_domains: -1
    num_dive_constraints: 50
    dive_rate: 0.2
    adv_dive: false
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 30
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  attack_mode: PGD
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 5000000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
  enable_mip_attack: false
  cex_path: ./test_cex.txt
debug:
  lp_test: null

Experiments at Tue Aug 23 12:56:12 2022 on diablo.cs.ucla.edu
saving results to a-b-crown_[oval21_instances]_start=23_end=24_iter=50_b=200_timeout=360_branching=kfsb-max-10_lra-init=0.1_lra=0.01_lrb=0.01_PGD=before_cplex_cuts=False_initial_max_domains=1.npz
customized start/end sample from 23 to 24

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx nets/cifar_deep_kw.onnx
Using vnnlib vnnlib/cifar_deep_kw-img5533-eps0.014379084967320262.vnnlib
Precompiled vnnlib file found at ../../vnncomp2021/benchmarks/oval21/vnnlib/cifar_deep_kw-img5533-eps0.014379084967320262.vnnlib.compiled
Loading onnx ../../vnncomp2021/benchmarks/oval21/nets/cifar_deep_kw.onnx wih quirks {}
ConvertModel(
  (Conv_13): Conv2d(3, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (Relu_14): ReLU(inplace=True)
  (Conv_15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (Relu_16): ReLU(inplace=True)
  (Conv_17): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (Relu_18): ReLU(inplace=True)
  (Conv_19): Conv2d(8, 8, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (Relu_20): ReLU(inplace=True)
  (Flatten_21): Flatten()
  (Gemm_22): Linear(in_features=512, out_features=100, bias=True)
  (Relu_23): ReLU(inplace=True)
  (Gemm_24): Linear(in_features=100, out_features=10, bias=True)
)
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.015976786613464355, initialization=uniform, GAMA=False
model output: tensor([[ 2.12422562, -2.56402445,  2.55647516,  0.29432347,  0.60963291,
          0.24455130, -1.61683762,  0.23884803, -0.38029256, -1.50684524]],
       device='cuda:0')
pgd prediction: tensor([[[ 2.44637823, -2.33055973,  2.47875834,  0.08585001,  0.55532175,
          -0.05822080, -1.75403726,  0.18074134, -0.24800716, -1.35616887],
         [ 2.44637823, -2.33055973,  2.47875834,  0.08585001,  0.55532175,
          -0.05822080, -1.75403726,  0.18074134, -0.24800716, -1.35616887]]],
       device='cuda:0')
pgd attack margin tensor([[[0.03238010, 4.80931807, 2.39290833, 1.92343664, 2.53697920,
          4.23279572, 2.29801702, 2.72676539, 3.83492708]]], device='cuda:0')
number of violation:  0
Attack finished in 1.2621 seconds.
pgd attack failed
Model prediction is: tensor([[ 2.12422562, -2.56402445,  2.55647516,  0.29432347,  0.60963291,
          0.24455130, -1.61683762,  0.23884803, -0.38029256, -1.50684524]],
       device='cuda:0')
layer /14 using sparse-features alpha with shape [90]; unstable size 90; total size 2048 (torch.Size([1, 8, 16, 16]))
layer /14 start_node /input.4 using sparse-spec alpha with unstable size 126 total_size 2048 output_shape (8, 16, 16)
layer /14 start_node /input.8 using sparse-spec alpha with unstable size 187 total_size 2048 output_shape (8, 16, 16)
layer /14 start_node /input.12 using sparse-spec alpha with unstable size 32 total_size 512 output_shape (8, 8, 8)
layer /14 start_node /input.16 using sparse-spec alpha with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /14 start_node /24 using full alpha with unstable size None total_size 9 output_shape 9
layer /16 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 (torch.Size([1, 8, 16, 16]))
layer /16 start_node /input.8 using sparse-spec alpha with unstable size 187 total_size 2048 output_shape (8, 16, 16)
layer /16 start_node /input.12 using sparse-spec alpha with unstable size 32 total_size 512 output_shape (8, 8, 8)
layer /16 start_node /input.16 using sparse-spec alpha with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /16 start_node /24 using full alpha with unstable size None total_size 9 output_shape 9
layer /18 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 (torch.Size([1, 8, 16, 16]))
layer /18 start_node /input.12 using sparse-spec alpha with unstable size 32 total_size 512 output_shape (8, 8, 8)
layer /18 start_node /input.16 using sparse-spec alpha with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /18 start_node /24 using full alpha with unstable size None total_size 9 output_shape 9
layer /20 using sparse-features alpha with shape [32]; unstable size 32; total size 512 (torch.Size([1, 8, 8, 8]))
layer /20 start_node /input.16 using sparse-spec alpha with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /20 start_node /24 using full alpha with unstable size None total_size 9 output_shape 9
layer /23 using sparse-features alpha with shape [23]; unstable size 23; total size 100 (torch.Size([1, 100]))
layer /23 start_node /24 using full alpha with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10587645,  3.94706154,  1.63545620,  1.46117163,  1.59619904,
          3.46744132,  1.39417720,  1.90770543,  3.07346869]], device='cuda:0') None
best_l after optimization: 18.662851333618164 with beta sum per layer: []
alpha/beta optimization time: 10.161821365356445
initial alpha-CROWN bounds: tensor([[-0.08839178,  4.00974131,  1.65500844,  1.47720850,  1.62312138,
          3.49446249,  1.42921269,  1.94592333,  3.11656523]], device='cuda:0')
Worst class: (+ rhs) -0.08839178085327148
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([1, 9, 8, 16, 16]), torch.Size([1, 9, 8, 16, 16]), torch.Size([1, 9, 8, 16, 16]), torch.Size([1, 9, 8, 8, 8]), torch.Size([1, 9, 100])]

Properties batch 0, size 1
Remaining timeout: 704.5921766757965
##### [0] Spec matrix: [[[-1.  0.  1.  0.  0.  0.  0.  0.  0.  0.]]], thresh: [0.] ######
Remaining spec index [0] with bounds tensor([[-0.08839178]], device='cuda:0') need to verify.
Model prediction is: tensor([ 2.12422562, -2.56402445,  2.55647516,  0.29432347,  0.60963291,
         0.24455130, -1.61683762,  0.23884803, -0.38029256, -1.50684524],
       device='cuda:0')
build_the_model_with_refined_bounds batch [0/1]
setting alpha for layer /14 start_node /24 with alignment adjustment
setting alpha for layer /16 start_node /24 with alignment adjustment
setting alpha for layer /18 start_node /24 with alignment adjustment
setting alpha for layer /20 start_node /24 with alignment adjustment
setting alpha for layer /23 start_node /24 with alignment adjustment
all slope initialized
directly get lb and ub from refined bounds
lA shapes: [torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 16, 16]), torch.Size([1, 1, 8, 8, 8]), torch.Size([1, 1, 100])]
c shape: torch.Size([1, 1, 10])
alpha-CROWN with fixed intermediate bounds: tensor([[-0.08839178]], device='cuda:0') tensor([[inf]], device='cuda:0')
Keeping slopes for these layers: ['/24']
Keeping slopes for these layers: ['/24']
layer 0 size torch.Size([2048]) unstable 90
layer 1 size torch.Size([2048]) unstable 126
layer 2 size torch.Size([2048]) unstable 186
layer 3 size torch.Size([512]) unstable 30
layer 4 size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 454
-----------------

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([1, 8, 16, 16]) pre split depth:  4
batch:  torch.Size([1, 8, 16, 16]) post split depth:  4
splitting decisions: 
split level 0: [4, 4] 
split level 1: [4, 58] 
split level 2: [4, 0] 
split level 3: [4, 44] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 14 / 16 = 0.875
pruning-in-iteration extra time: 0.038408517837524414
Tensors transferred: pre=0.2062M lA=0.0129M alpha=0.0140M beta=0.0001M
This batch time : update_bounds func: 1.2896	 prepare: 0.0062	 bound: 1.2812	 transfer: 0.0016	 finalize: 0.0006
Accumulated time: update_bounds func: 1.2896	 prepare: 0.0062	 bound: 1.2812	 transfer: 0.0016	 finalize: 0.0006
batch bounding time:  1.2897098064422607
Current worst splitting domains lb-rhs (depth):
-0.03987 (4), -0.02186 (4), 
length of domains: 2
Total time: 1.8388	 pickout: 0.0014	 decision: 0.5018	 get_bound: 1.2924	 add_domain: 0.0432
Accumulated time:	 pickout: 0.0014	 decision: 0.5018	 get_bound: 1.2924	 add_domain: 0.0432
Current (lb-rhs): -0.039870500564575195
14 domains visited
Cumulative time: 1.895514726638794

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([2, 8, 16, 16]) pre split depth:  3
batch:  torch.Size([2, 8, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [3, 497] [3, 497] 
split level 1: [4, 34] [4, 34] 
split level 2: [4, 99] [4, 99] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 13 / 16 = 0.8125
pruning-in-iteration extra time: 0.03697776794433594
Tensors transferred: pre=0.2062M lA=0.0193M alpha=0.0140M beta=0.0001M
This batch time : update_bounds func: 0.9189	 prepare: 0.0061	 bound: 0.9106	 transfer: 0.0016	 finalize: 0.0006
Accumulated time: update_bounds func: 2.2085	 prepare: 0.0122	 bound: 2.1917	 transfer: 0.0032	 finalize: 0.0012
batch bounding time:  0.9189913272857666
Current worst splitting domains lb-rhs (depth):
-0.02653 (7), -0.00780 (7), -0.00106 (7), 
length of domains: 3
Total time: 1.0566	 pickout: 0.0017	 decision: 0.0863	 get_bound: 0.9214	 add_domain: 0.0473
Accumulated time:	 pickout: 0.0030	 decision: 0.5881	 get_bound: 2.2138	 add_domain: 0.0905
Current (lb-rhs): -0.026529788970947266
27 domains visited
Cumulative time: 2.9566469192504883

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([3, 8, 16, 16]) pre split depth:  2
batch:  torch.Size([3, 8, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [4, 81] [4, 81] [4, 81] 
split level 1: [4, 33] [4, 33] [4, 33] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 10 / 12 = 0.8333333333333334
pruning-in-iteration extra time: 0.0366206169128418
Tensors transferred: pre=0.1546M lA=0.0129M alpha=0.0105M beta=0.0001M
This batch time : update_bounds func: 0.8876	 prepare: 0.0075	 bound: 0.8780	 transfer: 0.0015	 finalize: 0.0005
Accumulated time: update_bounds func: 3.0962	 prepare: 0.0198	 bound: 3.0697	 transfer: 0.0047	 finalize: 0.0017
batch bounding time:  0.8876936435699463
Current worst splitting domains lb-rhs (depth):
-0.02241 (9), -0.00298 (9), 
length of domains: 2
Total time: 1.0199	 pickout: 0.0017	 decision: 0.0855	 get_bound: 0.8911	 add_domain: 0.0416
Accumulated time:	 pickout: 0.0047	 decision: 0.6736	 get_bound: 3.1049	 add_domain: 0.1321
Current (lb-rhs): -0.022413969039916992
37 domains visited
Cumulative time: 3.981118679046631

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([2, 8, 16, 16]) pre split depth:  3
batch:  torch.Size([2, 8, 16, 16]) post split depth:  3
splitting decisions: 
split level 0: [0, 1622] [0, 1622] 
split level 1: [2, 69] [2, 69] 
split level 2: [3, 187] [3, 187] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 10 / 16 = 0.625
pruning-in-iteration extra time: 0.036757707595825195
Tensors transferred: pre=0.2062M lA=0.0387M alpha=0.0140M beta=0.0002M
This batch time : update_bounds func: 0.9261	 prepare: 0.0061	 bound: 0.9175	 transfer: 0.0017	 finalize: 0.0006
Accumulated time: update_bounds func: 4.0222	 prepare: 0.0259	 bound: 3.9872	 transfer: 0.0064	 finalize: 0.0023
batch bounding time:  0.9261326789855957
Current worst splitting domains lb-rhs (depth):
-0.01851 (12), -0.01427 (12), -0.00877 (12), -0.00454 (12), -0.00432 (12), -0.00008 (12), 
length of domains: 6
Total time: 1.0904	 pickout: 0.0017	 decision: 0.0863	 get_bound: 0.9287	 add_domain: 0.0737
Accumulated time:	 pickout: 0.0064	 decision: 0.7599	 get_bound: 4.0336	 add_domain: 0.2057
Current (lb-rhs): -0.0185091495513916
47 domains visited
Cumulative time: 5.075031995773315

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([6, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [4, 8] [4, 8] [4, 8] [4, 8] [4, 8] [4, 8] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 5 / 12 = 0.41666666666666663
pruning-in-iteration extra time: 0.035707712173461914
Tensors transferred: pre=0.1546M lA=0.0451M alpha=0.0105M beta=0.0001M
This batch time : update_bounds func: 0.8952	 prepare: 0.0037	 bound: 0.8894	 transfer: 0.0016	 finalize: 0.0005
Accumulated time: update_bounds func: 4.9175	 prepare: 0.0296	 bound: 4.8766	 transfer: 0.0080	 finalize: 0.0028
batch bounding time:  0.8953249454498291
Current worst splitting domains lb-rhs (depth):
-0.01419 (13), -0.01245 (13), -0.00977 (13), -0.00756 (13), -0.00446 (13), -0.00264 (13), -0.00005 (13), 
length of domains: 7
Total time: 1.0006	 pickout: 0.0017	 decision: 0.0899	 get_bound: 0.8954	 add_domain: 0.0136
Accumulated time:	 pickout: 0.0081	 decision: 0.8498	 get_bound: 4.9289	 add_domain: 0.2193
Current (lb-rhs): -0.01418757438659668
52 domains visited
Cumulative time: 6.076123476028442

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([7, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([7, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [3, 438] [3, 438] [3, 438] [3, 438] [3, 438] [3, 438] [3, 438] 
regular batch size: 2*7, diving batch size 1*0
(14, 3, 32, 32) torch.Size([14, 1, 10]) torch.Size([14, 1])
pruning_in_iteration open status: True
ratio of positive domain = 8 / 14 = 0.5714285714285714
pruning-in-iteration extra time: 0.03598523139953613
Tensors transferred: pre=0.1804M lA=0.0387M alpha=0.0122M beta=0.0002M
This batch time : update_bounds func: 0.8968	 prepare: 0.0060	 bound: 0.8886	 transfer: 0.0016	 finalize: 0.0006
Accumulated time: update_bounds func: 5.8142	 prepare: 0.0356	 bound: 5.7652	 transfer: 0.0096	 finalize: 0.0034
batch bounding time:  0.8968658447265625
Current worst splitting domains lb-rhs (depth):
-0.01326 (14), -0.01141 (14), -0.00884 (14), -0.00650 (14), -0.00353 (14), -0.00159 (14), 
length of domains: 6
Total time: 0.9920	 pickout: 0.0017	 decision: 0.0881	 get_bound: 0.8969	 add_domain: 0.0053
Accumulated time:	 pickout: 0.0098	 decision: 0.9379	 get_bound: 5.8259	 add_domain: 0.2247
Current (lb-rhs): -0.013256549835205078
60 domains visited
Cumulative time: 7.068546772003174

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([6, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [3, 481] [3, 481] [3, 481] [3, 481] [3, 481] [3, 481] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 4 / 12 = 0.33333333333333337
pruning-in-iteration extra time: 0.03173208236694336
Tensors transferred: pre=0.1546M lA=0.0515M alpha=0.0105M beta=0.0002M
This batch time : update_bounds func: 0.8805	 prepare: 0.0037	 bound: 0.8747	 transfer: 0.0016	 finalize: 0.0005
Accumulated time: update_bounds func: 6.6948	 prepare: 0.0393	 bound: 6.6399	 transfer: 0.0111	 finalize: 0.0039
batch bounding time:  0.8806021213531494
Current worst splitting domains lb-rhs (depth):
-0.01240 (15), -0.01049 (15), -0.00799 (15), -0.00557 (15), -0.00333 (15), -0.00268 (15), -0.00142 (15), -0.00067 (15), 
length of domains: 8
Total time: 0.9733	 pickout: 0.0016	 decision: 0.0867	 get_bound: 0.8806	 add_domain: 0.0043
Accumulated time:	 pickout: 0.0114	 decision: 1.0246	 get_bound: 6.7065	 add_domain: 0.2290
Current (lb-rhs): -0.012399673461914062
64 domains visited
Cumulative time: 8.042309999465942

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([8, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [3, 110] [3, 110] [3, 110] [3, 110] [3, 110] [3, 498] [3, 110] [3, 110] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 8 / 16 = 0.5
pruning-in-iteration extra time: 0.03527951240539551
Tensors transferred: pre=0.2062M lA=0.0515M alpha=0.0140M beta=0.0002M
This batch time : update_bounds func: 0.8808	 prepare: 0.0044	 bound: 0.8741	 transfer: 0.0017	 finalize: 0.0006
Accumulated time: update_bounds func: 7.5755	 prepare: 0.0436	 bound: 7.5140	 transfer: 0.0128	 finalize: 0.0045
batch bounding time:  0.8808577060699463
Current worst splitting domains lb-rhs (depth):
-0.01167 (16), -0.00976 (16), -0.00505 (16), -0.00495 (16), -0.00485 (16), -0.00195 (16), -0.00094 (16), -0.00019 (16), 
length of domains: 8
Total time: 0.9746	 pickout: 0.0017	 decision: 0.0880	 get_bound: 0.8809	 add_domain: 0.0040
Accumulated time:	 pickout: 0.0131	 decision: 1.1126	 get_bound: 7.5874	 add_domain: 0.2330
Current (lb-rhs): -0.011674165725708008
72 domains visited
Cumulative time: 9.01733112335205

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([8, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [3, 498] [3, 498] [3, 498] [3, 110] [3, 498] [3, 498] [3, 110] [4, 2] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 8 / 16 = 0.5
pruning-in-iteration extra time: 0.03575325012207031
Tensors transferred: pre=0.2062M lA=0.0515M alpha=0.0140M beta=0.0003M
This batch time : update_bounds func: 0.9131	 prepare: 0.0053	 bound: 0.9054	 transfer: 0.0017	 finalize: 0.0006
Accumulated time: update_bounds func: 8.4887	 prepare: 0.0490	 bound: 8.4194	 transfer: 0.0145	 finalize: 0.0051
batch bounding time:  0.9132189750671387
Current worst splitting domains lb-rhs (depth):
-0.00874 (17), -0.00859 (17), -0.00697 (17), -0.00672 (17), -0.00433 (17), -0.00422 (17), -0.00214 (17), -0.00181 (17), 
length of domains: 8
Total time: 1.0048	 pickout: 0.0016	 decision: 0.0858	 get_bound: 0.9133	 add_domain: 0.0041
Accumulated time:	 pickout: 0.0147	 decision: 1.1983	 get_bound: 8.5007	 add_domain: 0.2372
Current (lb-rhs): -0.008738040924072266
80 domains visited
Cumulative time: 10.02256965637207

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([8, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [3, 274] [3, 274] [3, 274] [4, 2] [3, 274] [3, 274] [3, 274] [4, 2] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 8 / 16 = 0.5
pruning-in-iteration extra time: 0.03609204292297363
Tensors transferred: pre=0.2062M lA=0.0515M alpha=0.0140M beta=0.0003M
This batch time : update_bounds func: 0.9107	 prepare: 0.0062	 bound: 0.9016	 transfer: 0.0021	 finalize: 0.0006
Accumulated time: update_bounds func: 9.3993	 prepare: 0.0552	 bound: 9.3210	 transfer: 0.0166	 finalize: 0.0058
batch bounding time:  0.9107577800750732
Current worst splitting domains lb-rhs (depth):
-0.00796 (18), -0.00782 (18), -0.00626 (18), -0.00602 (18), -0.00366 (18), -0.00357 (18), -0.00143 (18), -0.00112 (18), 
length of domains: 8
Total time: 1.0051	 pickout: 0.0016	 decision: 0.0889	 get_bound: 0.9108	 add_domain: 0.0038
Accumulated time:	 pickout: 0.0164	 decision: 1.2872	 get_bound: 9.4115	 add_domain: 0.2410
Current (lb-rhs): -0.007955312728881836
88 domains visited
Cumulative time: 11.028183698654175

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([8, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([8, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1493] [4, 2] [4, 2] [3, 274] [4, 2] [1, 662] [4, 2] [3, 274] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])
pruning_in_iteration open status: True
ratio of positive domain = 9 / 16 = 0.5625
pruning-in-iteration extra time: 0.03554558753967285
Tensors transferred: pre=0.2062M lA=0.0451M alpha=0.0140M beta=0.0003M
This batch time : update_bounds func: 0.9191	 prepare: 0.0067	 bound: 0.9096	 transfer: 0.0019	 finalize: 0.0007
Accumulated time: update_bounds func: 10.3184	 prepare: 0.0619	 bound: 10.2307	 transfer: 0.0185	 finalize: 0.0065
batch bounding time:  0.9191792011260986
Current worst splitting domains lb-rhs (depth):
-0.00729 (19), -0.00716 (19), -0.00547 (19), -0.00524 (19), -0.00289 (19), -0.00280 (19), -0.00098 (19), 
length of domains: 7
Total time: 1.0296	 pickout: 0.0019	 decision: 0.1040	 get_bound: 0.9192	 add_domain: 0.0045
Accumulated time:	 pickout: 0.0182	 decision: 1.3912	 get_bound: 10.3307	 add_domain: 0.2455
Current (lb-rhs): -0.0072917938232421875
97 domains visited
Cumulative time: 12.058297634124756

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([7, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([7, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [1, 662] [1, 662] [1, 662] [1, 662] [4, 2] [1, 662] [1, 662] 
regular batch size: 2*7, diving batch size 1*0
(14, 3, 32, 32) torch.Size([14, 1, 10]) torch.Size([14, 1])
pruning_in_iteration open status: True
ratio of positive domain = 3 / 14 = 0.2142857142857143
pruning-in-iteration extra time: 0.030939817428588867
Tensors transferred: pre=0.1804M lA=0.0709M alpha=0.0122M beta=0.0003M
This batch time : update_bounds func: 0.8908	 prepare: 0.0073	 bound: 0.8812	 transfer: 0.0017	 finalize: 0.0005
Accumulated time: update_bounds func: 11.2092	 prepare: 0.0693	 bound: 11.1118	 transfer: 0.0202	 finalize: 0.0070
batch bounding time:  0.89084792137146
Current worst splitting domains lb-rhs (depth):
-0.00684 (20), -0.00671 (20), -0.00502 (20), -0.00478 (20), -0.00399 (20), -0.00388 (20), -0.00257 (20), -0.00245 (20), -0.00243 (20), -0.00235 (20), -0.00019 (20), 
length of domains: 11
Total time: 1.0769	 pickout: 0.0017	 decision: 0.0869	 get_bound: 0.8909	 add_domain: 0.0974
Accumulated time:	 pickout: 0.0199	 decision: 1.4781	 get_bound: 11.2216	 add_domain: 0.3429
Current (lb-rhs): -0.006838083267211914
100 domains visited
Cumulative time: 13.139489650726318

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([11, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([11, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [3, 386] [3, 386] [2, 1492] [2, 1492] [2, 1492] [2, 1492] [3, 386] [2, 1492] [2, 1493] [2, 1492] 
regular batch size: 2*11, diving batch size 1*0
(22, 3, 32, 32) torch.Size([22, 1, 10]) torch.Size([22, 1])
pruning_in_iteration open status: True
ratio of positive domain = 7 / 22 = 0.31818181818181823
pruning-in-iteration extra time: 0.034526824951171875
Tensors transferred: pre=0.2835M lA=0.0966M alpha=0.0192M beta=0.0005M
This batch time : update_bounds func: 0.9359	 prepare: 0.0067	 bound: 0.9255	 transfer: 0.0029	 finalize: 0.0008
Accumulated time: update_bounds func: 12.1451	 prepare: 0.0759	 bound: 12.0373	 transfer: 0.0230	 finalize: 0.0078
batch bounding time:  0.9360084533691406
Current worst splitting domains lb-rhs (depth):
-0.00598 (21), -0.00559 (21), -0.00415 (21), -0.00384 (21), -0.00375 (21), -0.00302 (21), -0.00261 (21), -0.00227 (21), -0.00213 (21), -0.00131 (21), -0.00125 (21), -0.00121 (21), -0.00116 (21), -0.00114 (21), -0.00114 (21), 
length of domains: 15
Total time: 1.0766	 pickout: 0.0017	 decision: 0.0893	 get_bound: 0.9361	 add_domain: 0.0496
Accumulated time:	 pickout: 0.0216	 decision: 1.5674	 get_bound: 12.1577	 add_domain: 0.3925
Current (lb-rhs): -0.005978107452392578
107 domains visited
Cumulative time: 14.216648578643799

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([15, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([15, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1492] [2, 177] [3, 386] [3, 386] [2, 177] [3, 386] [3, 386] [3, 386] [3, 386] [3, 386] 
regular batch size: 2*15, diving batch size 1*0
(30, 3, 32, 32) torch.Size([30, 1, 10]) torch.Size([30, 1])
pruning_in_iteration open status: True
ratio of positive domain = 14 / 30 = 0.4666666666666667
pruning-in-iteration extra time: 0.03763985633850098
Tensors transferred: pre=0.3866M lA=0.1031M alpha=0.0262M beta=0.0007M
This batch time : update_bounds func: 0.9575	 prepare: 0.0059	 bound: 0.9481	 transfer: 0.0024	 finalize: 0.0011
Accumulated time: update_bounds func: 13.1026	 prepare: 0.0819	 bound: 12.9854	 transfer: 0.0254	 finalize: 0.0089
batch bounding time:  0.9576098918914795
Current worst splitting domains lb-rhs (depth):
-0.00515 (22), -0.00485 (22), -0.00339 (22), -0.00314 (22), -0.00285 (22), -0.00276 (22), -0.00203 (22), -0.00172 (22), -0.00130 (22), -0.00112 (22), -0.00031 (22), -0.00027 (22), -0.00012 (22), -0.00006 (22), -0.00002 (22), -0.00002 (22), 
length of domains: 16
Total time: 1.0564	 pickout: 0.0018	 decision: 0.0914	 get_bound: 0.9577	 add_domain: 0.0055
Accumulated time:	 pickout: 0.0234	 decision: 1.6589	 get_bound: 13.1153	 add_domain: 0.3980
Current (lb-rhs): -0.005146980285644531
121 domains visited
Cumulative time: 15.273618698120117

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([16, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([16, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1980] [2, 177] [2, 1980] [2, 1980] [2, 177] [2, 177] [2, 1493] [2, 177] [2, 1493] [3, 385] 
regular batch size: 2*16, diving batch size 1*0
(32, 3, 32, 32) torch.Size([32, 1, 10]) torch.Size([32, 1])
pruning_in_iteration open status: True
ratio of positive domain = 19 / 32 = 0.59375
pruning-in-iteration extra time: 0.037095069885253906
Tensors transferred: pre=0.4124M lA=0.0838M alpha=0.0280M beta=0.0007M
This batch time : update_bounds func: 0.9619	 prepare: 0.0060	 bound: 0.9524	 transfer: 0.0023	 finalize: 0.0011
Accumulated time: update_bounds func: 14.0646	 prepare: 0.0879	 bound: 13.9378	 transfer: 0.0277	 finalize: 0.0100
batch bounding time:  0.9620323181152344
Current worst splitting domains lb-rhs (depth):
-0.00403 (23), -0.00348 (23), -0.00300 (23), -0.00251 (23), -0.00208 (23), -0.00201 (23), -0.00191 (23), -0.00149 (23), -0.00101 (23), -0.00082 (23), -0.00046 (23), -0.00043 (23), -0.00028 (23), 
length of domains: 13
Total time: 1.0588	 pickout: 0.0019	 decision: 0.0895	 get_bound: 0.9621	 add_domain: 0.0053
Accumulated time:	 pickout: 0.0253	 decision: 1.7484	 get_bound: 14.0774	 add_domain: 0.4033
Current (lb-rhs): -0.004029750823974609
140 domains visited
Cumulative time: 16.332972049713135

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([13, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([13, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1492] [2, 1515] [2, 1980] [2, 1980] [2, 1980] [2, 1980] [2, 1515] [2, 1492] [2, 1980] [2, 1980] 
regular batch size: 2*13, diving batch size 1*0
(26, 3, 32, 32) torch.Size([26, 1, 10]) torch.Size([26, 1])
pruning_in_iteration open status: True
ratio of positive domain = 13 / 26 = 0.5
pruning-in-iteration extra time: 0.03637886047363281
Tensors transferred: pre=0.3350M lA=0.0838M alpha=0.0227M beta=0.0006M
This batch time : update_bounds func: 0.9814	 prepare: 0.0053	 bound: 0.9732	 transfer: 0.0020	 finalize: 0.0009
Accumulated time: update_bounds func: 15.0460	 prepare: 0.0931	 bound: 14.9110	 transfer: 0.0296	 finalize: 0.0109
batch bounding time:  0.9814968109130859
Current worst splitting domains lb-rhs (depth):
-0.00259 (24), -0.00236 (24), -0.00188 (24), -0.00174 (24), -0.00116 (24), -0.00085 (24), -0.00068 (24), -0.00061 (24), -0.00055 (24), -0.00048 (24), -0.00037 (24), -0.00022 (24), -0.00012 (24), 
length of domains: 13
Total time: 1.0784	 pickout: 0.0017	 decision: 0.0900	 get_bound: 0.9815	 add_domain: 0.0052
Accumulated time:	 pickout: 0.0269	 decision: 1.8383	 get_bound: 15.0590	 add_domain: 0.4085
Current (lb-rhs): -0.002585172653198242
153 domains visited
Cumulative time: 17.411892414093018

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([13, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([13, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1514] [2, 1515] /home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/layer.py:30: UserWarning: The given NumPy array is not writable, and PyTorch does not support non-writable tensors. This means writing to this tensor will result in undefined behavior. You may want to copy the array to protect its data or make it writable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_numpy.cpp:178.)
  layer.weight.data = torch.from_numpy(numpy_helper.to_array(weight))
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/model.py:154: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  "Using experimental implementation that allows 'batch_size > 1'."
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/abcrown.py:95: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1646755953518/work/torch/csrc/utils/tensor_new.cpp:210.)
  arguments.Config["bab"]["decision_thresh"] = torch.tensor([item[1] for item in vnnlib[1]]).to(data)
/home/zhouxingshi/gputest/CROWN-GENERAL/complete_verifier/batch_branch_and_bound.py:420: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(arguments.Config["bab"]["decision_thresh"] + 1e-7), np.inf
[2, 1515] [2, 1514] [2, 1515] [2, 1515] [2, 177] [2, 1515] [2, 1514] [2, 1492] 
regular batch size: 2*13, diving batch size 1*0
(26, 3, 32, 32) torch.Size([26, 1, 10]) torch.Size([26, 1])
pruning_in_iteration open status: True
ratio of positive domain = 20 / 26 = 0.7692307692307692
pruning-in-iteration extra time: 0.037024497985839844
Tensors transferred: pre=0.3350M lA=0.0387M alpha=0.0227M beta=0.0006M
This batch time : update_bounds func: 0.9474	 prepare: 0.0066	 bound: 0.9378	 transfer: 0.0019	 finalize: 0.0009
Accumulated time: update_bounds func: 15.9933	 prepare: 0.0998	 bound: 15.8488	 transfer: 0.0316	 finalize: 0.0118
batch bounding time:  0.947453498840332
Current worst splitting domains lb-rhs (depth):
-0.00175 (25), -0.00147 (25), -0.00098 (25), -0.00085 (25), -0.00023 (25), -0.00004 (25), 
length of domains: 6
Total time: 1.0417	 pickout: 0.0017	 decision: 0.0884	 get_bound: 0.9475	 add_domain: 0.0041
Accumulated time:	 pickout: 0.0286	 decision: 1.9268	 get_bound: 16.0065	 add_domain: 0.4126
Current (lb-rhs): -0.00174713134765625
173 domains visited
Cumulative time: 18.454457759857178

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([6, 8, 16, 16]) pre split depth:  1
batch:  torch.Size([6, 8, 16, 16]) post split depth:  1
splitting decisions: 
split level 0: [2, 1435] [2, 1435] [2, 1435] [2, 1435] [2, 1435] [2, 1435] 
regular batch size: 2*6, diving batch size 1*0
(12, 3, 32, 32) torch.Size([12, 1, 10]) torch.Size([12, 1])
pruning_in_iteration open status: True
ratio of positive domain = 8 / 12 = 0.6666666666666667
pruning-in-iteration extra time: 0.03653407096862793
Tensors transferred: pre=0.1546M lA=0.0258M alpha=0.0105M beta=0.0003M
This batch time : update_bounds func: 0.9314	 prepare: 0.0038	 bound: 0.9255	 transfer: 0.0015	 finalize: 0.0005
Accumulated time: update_bounds func: 16.9247	 prepare: 0.1036	 bound: 16.7743	 transfer: 0.0331	 finalize: 0.0123
batch bounding time:  0.9314775466918945
Current worst splitting domains lb-rhs (depth):
-0.00127 (26), -0.00099 (26), -0.00052 (26), -0.00039 (26), 
length of domains: 4
Total time: 1.0227	 pickout: 0.0016	 decision: 0.0865	 get_bound: 0.9315	 add_domain: 0.0031
Accumulated time:	 pickout: 0.0302	 decision: 2.0133	 get_bound: 16.9380	 add_domain: 0.4157
Current (lb-rhs): -0.0012676715850830078
181 domains visited
Cumulative time: 19.477609872817993

remaining dive domains: 0/-1, dive_rate:0.0
batch:  torch.Size([4, 8, 16, 16]) pre split depth:  2
batch:  torch.Size([4, 8, 16, 16]) post split depth:  2
splitting decisions: 
split level 0: [2, 1492] [2, 1514] [2, 1514] [2, 1514] 
split level 1: [3, 104] [3, 104] [3, 104] [2, 1979] 
regular batch size: 2*8, diving batch size 1*0
(16, 3, 32, 32) torch.Size([16, 1, 10]) torch.Size([16, 1])

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 16 / 16 = 1.0
pruning-in-iteration extra time: 0.00011277198791503906
Tensors transferred: pre=0.2062M lA=0.1031M alpha=0.0140M beta=0.0004M
This batch time : update_bounds func: 0.0166	 prepare: 0.0043	 bound: 0.0101	 transfer: 0.0015	 finalize: 0.0006
Accumulated time: update_bounds func: 16.9414	 prepare: 0.1079	 bound: 16.7844	 transfer: 0.0346	 finalize: 0.0130
batch bounding time:  0.016674041748046875
length of domains: 0
Total time: 0.1061	 pickout: 0.0016	 decision: 0.0843	 get_bound: 0.0187	 add_domain: 0.0015
Accumulated time:	 pickout: 0.0318	 decision: 2.0975	 get_bound: 16.9567	 add_domain: 0.4172
No domains left, verification finished!
197 domains visited
Cumulative time: 19.58477234840393


Properties batch 1, size 1
Remaining timeout: 684.7651991844177
##### [0] Spec matrix: [[[ 0. -1.  1.  0.  0.  0.  0.  0.  0.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[4.00974131]], device='cuda:0').

Properties batch 2, size 1
Remaining timeout: 684.6879858970642
##### [0] Spec matrix: [[[ 0.  0.  1. -1.  0.  0.  0.  0.  0.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[1.65500844]], device='cuda:0').

Properties batch 3, size 1
Remaining timeout: 684.6368682384491
##### [0] Spec matrix: [[[ 0.  0.  1.  0. -1.  0.  0.  0.  0.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[1.47720850]], device='cuda:0').

Properties batch 4, size 1
Remaining timeout: 684.5843386650085
##### [0] Spec matrix: [[[ 0.  0.  1.  0.  0. -1.  0.  0.  0.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[1.62312138]], device='cuda:0').

Properties batch 5, size 1
Remaining timeout: 684.5327310562134
##### [0] Spec matrix: [[[ 0.  0.  1.  0.  0.  0. -1.  0.  0.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[3.49446249]], device='cuda:0').

Properties batch 6, size 1
Remaining timeout: 684.4811794757843
##### [0] Spec matrix: [[[ 0.  0.  1.  0.  0.  0.  0. -1.  0.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[1.42921269]], device='cuda:0').

Properties batch 7, size 1
Remaining timeout: 684.428581237793
##### [0] Spec matrix: [[[ 0.  0.  1.  0.  0.  0.  0.  0. -1.  0.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[1.94592333]], device='cuda:0').

Properties batch 8, size 1
Remaining timeout: 684.3775708675385
##### [0] Spec matrix: [[[ 0.  0.  1.  0.  0.  0.  0.  0.  0. -1.]]], thresh: [0.] ######
Init opt crown verified for spec index [0] with bound tensor([[3.11656523]], device='cuda:0').
Result: safe in 35.6744 seconds
############# Summary #############
Final verified acc: 100.0% [total 1 examples]
Total verification count: 1 , total verified safe: 1 , verified unsafe: 0 , timeout: 0
mean time (bab) [total:1]: 20.26555347442627
mean time [1] 35.67442750930786 max time 35.67442750930786
safe (total 1): [0]
