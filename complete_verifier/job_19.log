/home/zhouxingshi/miniconda3/envs/torch2.0/lib/python3.10/site-packages/torchvision/transforms/_functional_pil.py:242: DeprecationWarning: BILINEAR is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BILINEAR instead.
  interpolation: int = Image.BILINEAR,
/home/zhouxingshi/miniconda3/envs/torch2.0/lib/python3.10/site-packages/torchvision/transforms/_functional_pil.py:286: DeprecationWarning: NEAREST is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.NEAREST or Dither.NONE instead.
  interpolation: int = Image.NEAREST,
/home/zhouxingshi/miniconda3/envs/torch2.0/lib/python3.10/site-packages/torchvision/transforms/_functional_pil.py:319: DeprecationWarning: BICUBIC is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BICUBIC instead.
  interpolation: int = Image.BICUBIC,
Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: matrix
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: false
  sparse_interm: false
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: instances.csv
  results_file: /home/zhouxingshi/nfs/experiments/vnncomp/0708/ml4acopf/master/job_0019_0020.pkl
  root_path: ../../vnncomp2023_benchmarks/benchmarks/ml4acopf
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  no_batchdim_buffers: true
model:
  name: null
  path: null
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: [remove_matmul_inplace]
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
data:
  start: 19
  end: 20
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: null
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
solver:
  batch_size: 512
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.0
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.5
    iteration: 40
    share_alphas: false
    lr_decay: 0.99
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    include_output_constraint: false
    disable_optimization: [sin, cos]
  beta-crown:
    lr_alpha: 0.5
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 10
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
    alpha_masks: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: false
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
  branching:
    method: nonlinear
    candidates: 3
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    sort_domain_interval: 1
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sb_coeff_thresh: 0.001
    nonlinear_split:
      method: shortcut
      branching_point_method: middle
      num_branches: 2
      branching_point_refinement: false
      filter: true
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      faster: true
      loose_tanh_threshold: null
      batch_size: 51200
      shortlist_size: 500
    new_input_split:
      enable: false
      batch_size: 2
      rounds: 1
      init_alpha_batch_size: 8192
      full_alpha: false
    input_split:
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_primary_spec: null
      sb_primary_spec_iter: 1
      sb_sum: false
      ibp_enhancement: false
      alpha_enhancement: null
      alpha_enhancement_batch: 2048
      qp_enhancement: null
      catch_assertion: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 100
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0001
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
debug:
  rhs_offset: null
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0

Experiments at Sat Jul  8 12:02:25 2023 on nova.cs.ucla.edu
customized start/end sample from instance 19 to 20 in instances.csv
Internal results will be saved to /home/zhouxingshi/nfs/experiments/vnncomp/0708/ml4acopf/master/job_0019_0020.pkl.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx onnx/300_ieee_ml4acopf.onnx
Using vnnlib vnnlib/300_ieee_prop3.vnnlib
Precompiled vnnlib file found at ../../vnncomp2023_benchmarks/benchmarks/ml4acopf/vnnlib/300_ieee_prop3.vnnlib.compiled
Loading onnx ../../vnncomp2023_benchmarks/benchmarks/ml4acopf/onnx/300_ieee_ml4acopf.onnx wih quirks {}
Onnx optimization with flag: ['remove_matmul_inplace']
Found existed optimized onnx model at ../../vnncomp2023_benchmarks/benchmarks/ml4acopf/onnx/300_ieee_ml4acopf.onnx.optimized
Automatic inference of operator: cos
Automatic inference of operator: sin
Automatic inference of operator: neg
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/convert/model.py:151: UserWarning: Using experimental implementation that allows 'batch_size > 1'.Batchnorm layers could potentially produce false outputs.
  warnings.warn(

**************************
Model might not be converted correctly. Please check onnx conversion carefully.
Output by pytorch: [[0.0000000e+00 0.0000000e+00 0.0000000e+00 ... 3.9785169e-05
  3.2541342e-05 2.9853079e-05]]
Output by onnx: [[0.0000000e+00 0.0000000e+00 0.0000000e+00 ... 3.9785169e-05
  3.2608397e-05 2.9853079e-05]]
Max error: tensor(0.00488281)
**************************

Attack parameters: initialization=uniform, steps=100, restarts=100, alpha=0.12741684913635254, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013039,
         -0.00027345, -0.00087259]], device='cuda:0')
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:05<00:00,  5.68s/it]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:05<00:00,  5.68s/it]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00021657,
          -0.00099579, -0.00165720],
         [ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00021657,
          -0.00099579, -0.00165720]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
          9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
          9.99999997e-07, 9.99999997e-07]]], device='cuda:0')
number of violation:  0
Attack finished in 6.5368 seconds.
PGD attack failed
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/slice.py:73: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  assert (steps == 1 or steps == -1) and axes == int(axes) and start == int(start) and end == int(end)
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/slice.py:73: TracerWarning: Converting a tensor to a Python integer might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  assert (steps == 1 or steps == -1) and axes == int(axes) and start == int(start) and end == int(end)
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/utils.py:21: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  return value.ndim == 0 or value.shape == torch.Size([1])
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/add.py:34: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  elif all(x == 1 for x in input[0].shape):
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/gather.py:14: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  if indices.numel() == 1 and indices == -1:
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/constantofshape.py:16: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  return self.constant.expand(*shape).to(shape.device)
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/constantofshape.py:16: TracerWarning: Using len to get tensor shape might cause the trace to be incorrect. Recommended usage would be tensor.shape[0]. Passing a tensor of different shape might lead to errors or silently give incorrect results.
  return self.constant.expand(*shape).to(shape.device)
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/expand.py:7: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!
  if isinstance(shape, torch.Tensor) and (shape == 1).all():
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/expand.py:9: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).
  torch.Size(shape), dtype=input.dtype, device=input.device)
/home/zhouxingshi/onnx2pytorch/onnx2pytorch/operations/expand.py:9: TracerWarning: Using len to get tensor shape might cause the trace to be incorrect. Recommended usage would be tensor.shape[0]. Passing a tensor of different shape might lead to errors or silently give incorrect results.
  torch.Size(shape), dtype=input.dtype, device=input.device)
/home/zhouxingshi/Verifier_Development/complete_verifier/auto_LiRPA/parse_graph.py:154: FutureWarning: 'torch.onnx.symbolic_helper._set_opset_version' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly.
  _set_opset_version(12)
torch allclose failed: norm 0.03362087905406952
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=True)
  (/9): BoundBuffers(name=/9, inputs=[], perturbed=False)
  (/10): BoundBuffers(name=/10, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/21): BoundParams(name=/21, inputs=[], perturbed=False)
  (/22): BoundParams(name=/22, inputs=[], perturbed=False)
  (/23): BoundParams(name=/23, inputs=[], perturbed=False)
  (/24): BoundParams(name=/24, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/59): BoundBuffers(name=/59, inputs=[], perturbed=False)
  (/60): BoundBuffers(name=/60, inputs=[], perturbed=False)
  (/61): BoundBuffers(name=/61, inputs=[], perturbed=False)
  (/62): BoundBuffers(name=/62, inputs=[], perturbed=False)
  (/63): BoundBuffers(name=/63, inputs=[], perturbed=False)
  (/64): BoundBuffers(name=/64, inputs=[], perturbed=False)
  (/65): BoundBuffers(name=/65, inputs=[], perturbed=False)
  (/66): BoundBuffers(name=/66, inputs=[], perturbed=False)
  (/67): BoundBuffers(name=/67, inputs=[], perturbed=False)
  (/68): BoundBuffers(name=/68, inputs=[], perturbed=False)
  (/69): BoundBuffers(name=/69, inputs=[], perturbed=False)
  (/70): BoundBuffers(name=/70, inputs=[], perturbed=False)
  (/71): BoundBuffers(name=/71, inputs=[], perturbed=False)
  (/72): BoundBuffers(name=/72, inputs=[], perturbed=False)
  (/73): BoundBuffers(name=/73, inputs=[], perturbed=False)
  (/74): BoundBuffers(name=/74, inputs=[], perturbed=False)
  (/shape.1): BoundBuffers(name=/shape.1, inputs=[], perturbed=False)
  (/76): BoundBuffers(name=/76, inputs=[], perturbed=False)
  (/77): BoundBuffers(name=/77, inputs=[], perturbed=False)
  (/78): BoundBuffers(name=/78, inputs=[], perturbed=False)
  (/shape.5): BoundBuffers(name=/shape.5, inputs=[], perturbed=False)
  (/80): BoundBuffers(name=/80, inputs=[], perturbed=False)
  (/81): BoundBuffers(name=/81, inputs=[], perturbed=False)
  (/82): BoundBuffers(name=/82, inputs=[], perturbed=False)
  (/83): BoundBuffers(name=/83, inputs=[], perturbed=False)
  (/84): BoundBuffers(name=/84, inputs=[], perturbed=False)
  (/85): BoundBuffers(name=/85, inputs=[], perturbed=False)
  (/86): BoundParams(name=/86, inputs=[], perturbed=False)
  (/87): BoundParams(name=/87, inputs=[], perturbed=False)
  (/88): BoundParams(name=/88, inputs=[], perturbed=False)
  (/89): BoundParams(name=/89, inputs=[], perturbed=False)
  (/90): BoundParams(name=/90, inputs=[], perturbed=False)
  (/91): BoundParams(name=/91, inputs=[], perturbed=False)
  (/92): BoundParams(name=/92, inputs=[], perturbed=False)
  (/93): BoundParams(name=/93, inputs=[], perturbed=False)
  (/94): BoundBuffers(name=/94, inputs=[], perturbed=False)
  (/95): BoundBuffers(name=/95, inputs=[], perturbed=False)
  (/96): BoundBuffers(name=/96, inputs=[], perturbed=False)
  (/input): BoundLinear(name=/input, inputs=[/0, /19, /20], perturbed=True)
  (/98): BoundRelu(name=/98, inputs=[/input], perturbed=True)
  (/input.3): BoundLinear(name=/input.3, inputs=[/98, /21, /22], perturbed=True)
  (/100): BoundRelu(name=/100, inputs=[/input.3], perturbed=True)
  (/input.7): BoundLinear(name=/input.7, inputs=[/100, /23, /24], perturbed=True)
  (/102): BoundRelu(name=/102, inputs=[/input.7], perturbed=True)
  (/103): BoundLinear(name=/103, inputs=[/102, /25, /26], perturbed=True)
  (/104): BoundConstant(name=/104, value=1)
  (/105): BoundConstant(name=/105, value=0)
  (/106): BoundConstant(name=/106, value=438)
  (/107): BoundConstant(name=/107, value=0)
  (/108): BoundConstant(name=/108, value=438)
  (/109): BoundAdd(name=/109, inputs=[/107, /108], perturbed=False)
  (/110): BoundUnsqueeze(name=/110, inputs=[/105], perturbed=False)
  (/111): BoundUnsqueeze(name=/111, inputs=[/109], perturbed=False)
  (/112): BoundUnsqueeze(name=/112, inputs=[/104], perturbed=False)
  (/113): BoundSlice(name=/113, inputs=[/103, /110, /111, /112], perturbed=True)
  (/114): BoundSigmoid(name=/114, inputs=[/113], perturbed=True)
  (/115): BoundMul(name=/115, inputs=[/114, /9], perturbed=True)
  (/116): BoundAdd(name=/116, inputs=[/115, /10], perturbed=True)
  (/117): BoundConstant(name=/117, value=438)
  (/118): BoundConstant(name=/118, value=300)
  (/119): BoundAdd(name=/119, inputs=[/117, /118], perturbed=False)
  (/120): BoundUnsqueeze(name=/120, inputs=[/106], perturbed=False)
  (/121): BoundUnsqueeze(name=/121, inputs=[/119], perturbed=False)
  (/122): BoundUnsqueeze(name=/122, inputs=[/104], perturbed=False)
  (/123): BoundSlice(name=/123, inputs=[/103, /120, /121, /122], perturbed=True)
  (/124): BoundConcat(name=/124, inputs=[/116, /123], perturbed=True)
  (/125): BoundConstant(name=/125, value=201)
  (/126): BoundConstant(name=/126, value=0)
  (/127): BoundConstant(name=/127, value=201)
  (/128): BoundAdd(name=/128, inputs=[/126, /127], perturbed=False)
  (/129): BoundUnsqueeze(name=/129, inputs=[/105], perturbed=False)
  (/130): BoundUnsqueeze(name=/130, inputs=[/128], perturbed=False)
  (/131): BoundUnsqueeze(name=/131, inputs=[/104], perturbed=False)
  (/132): BoundSlice(name=/132, inputs=[/0, /129, /130, /131], perturbed=True)
  (/133): BoundConstant(name=/133, value=201)
  (/134): BoundAdd(name=/134, inputs=[/133, /133], perturbed=False)
  (/135): BoundUnsqueeze(name=/135, inputs=[/125], perturbed=False)
  (/136): BoundUnsqueeze(name=/136, inputs=[/134], perturbed=False)
  (/137): BoundUnsqueeze(name=/137, inputs=[/104], perturbed=False)
  (/138): BoundSlice(name=/138, inputs=[/0, /135, /136, /137], perturbed=True)
  (/139): BoundConstant(name=/139, value=69)
  (/140): BoundConstant(name=/140, value=0)
  (/141): BoundConstant(name=/141, value=69)
  (/142): BoundAdd(name=/142, inputs=[/140, /141], perturbed=False)
  (/143): BoundUnsqueeze(name=/143, inputs=[/105], perturbed=False)
  (/144): BoundUnsqueeze(name=/144, inputs=[/142], perturbed=False)
  (/145): BoundUnsqueeze(name=/145, inputs=[/104], perturbed=False)
  (/146): BoundSlice(name=/146, inputs=[/124, /143, /144, /145], perturbed=True)
  (/147): BoundConstant(name=/147, value=69)
  (/148): BoundAdd(name=/148, inputs=[/147, /147], perturbed=False)
  (/149): BoundUnsqueeze(name=/149, inputs=[/139], perturbed=False)
  (/150): BoundUnsqueeze(name=/150, inputs=[/148], perturbed=False)
  (/151): BoundUnsqueeze(name=/151, inputs=[/104], perturbed=False)
  (/152): BoundSlice(name=/152, inputs=[/124, /149, /150, /151], perturbed=True)
  (/153): BoundConstant(name=/153, value=138)
  (/154): BoundConstant(name=/154, value=138)
  (/155): BoundConstant(name=/155, value=300)
  (/156): BoundAdd(name=/156, inputs=[/154, /155], perturbed=False)
  (/157): BoundUnsqueeze(name=/157, inputs=[/153], perturbed=False)
  (/158): BoundUnsqueeze(name=/158, inputs=[/156], perturbed=False)
  (/159): BoundUnsqueeze(name=/159, inputs=[/104], perturbed=False)
  (/160): BoundSlice(name=/160, inputs=[/124, /157, /158, /159], perturbed=True)
  (/161): BoundConstant(name=/161, value=438)
  (/162): BoundConstant(name=/162, value=300)
  (/163): BoundAdd(name=/163, inputs=[/161, /162], perturbed=False)
  (/164): BoundUnsqueeze(name=/164, inputs=[/106], perturbed=False)
  (/165): BoundUnsqueeze(name=/165, inputs=[/163], perturbed=False)
  (/166): BoundUnsqueeze(name=/166, inputs=[/104], perturbed=False)
  (/167): BoundSlice(name=/167, inputs=[/124, /164, /165, /166], perturbed=True)
  (/168): BoundCast(name=/168, inputs=[/59], perturbed=False)
  (/169): BoundGather(name=/169, inputs=[/167, /168], perturbed=True)
  (/170): BoundCast(name=/170, inputs=[/60], perturbed=False)
  (/171): BoundGather(name=/171, inputs=[/167, /170], perturbed=True)
  (/172): BoundSub(name=/172, inputs=[/169, /171], perturbed=True)
  (/173): BoundCast(name=/173, inputs=[/168], perturbed=False)
  (/174): BoundGather(name=/174, inputs=[/160, /173], perturbed=True)
  (/175): BoundCast(name=/175, inputs=[/170], perturbed=False)
  (/176): BoundGather(name=/176, inputs=[/160, /175], perturbed=True)
  (/179): BoundCos(name=/179, inputs=[/172], perturbed=True)
  (/180): BoundSin(name=/180, inputs=[/172], perturbed=True)
  (/181): BoundMul(name=/181, inputs=[/174, /176], perturbed=True)
  (/182): BoundMul(name=/182, inputs=[/181, /179], perturbed=True)
  (/183): BoundMul(name=/183, inputs=[/181, /180], perturbed=True)
  (/184): BoundNeg(name=/184, inputs=[/183], perturbed=True)
  (/185): BoundMul(name=/185, inputs=[/63, /177/sqr], perturbed=True)
  (/186): BoundMul(name=/186, inputs=[/64, /182], perturbed=True)
  (/187): BoundAdd(name=/187, inputs=[/185, /186], perturbed=True)
  (/188): BoundMul(name=/188, inputs=[/65, /183], perturbed=True)
  (/189): BoundAdd(name=/189, inputs=[/187, /188], perturbed=True)
  (/190): BoundMul(name=/190, inputs=[/66, /177/sqr], perturbed=True)
  (/191): BoundMul(name=/191, inputs=[/67, /182], perturbed=True)
  (/192): BoundSub(name=/192, inputs=[/190, /191], perturbed=True)
  (/193): BoundMul(name=/193, inputs=[/68, /183], perturbed=True)
  (/194): BoundAdd(name=/194, inputs=[/192, /193], perturbed=True)
  (/195): BoundMul(name=/195, inputs=[/69, /178/sqr], perturbed=True)
  (/196): BoundAdd(name=/196, inputs=[/195, /186], perturbed=True)
  (/197): BoundMul(name=/197, inputs=[/70, /184], perturbed=True)
  (/198): BoundAdd(name=/198, inputs=[/196, /197], perturbed=True)
  (/199): BoundMul(name=/199, inputs=[/71, /178/sqr], perturbed=True)
  (/200): BoundSub(name=/200, inputs=[/199, /191], perturbed=True)
  (/201): BoundMul(name=/201, inputs=[/72, /184], perturbed=True)
  (/202): BoundAdd(name=/202, inputs=[/200, /201], perturbed=True)
  (/203): BoundSplit(name=/203, inputs=[/shape.1], perturbed=False)
  (/204): BoundSqueeze(name=/204, inputs=[/203], perturbed=False)
  (/205): BoundUnsqueeze(name=/205, inputs=[/204], perturbed=False)
  (/206): BoundConcat(name=/206, inputs=[/205], perturbed=False)
  (/207): BoundConstant(name=/207, value=tensor([-1], device='cuda:0'))
  (/208): BoundReshape(name=/208, inputs=[/206, /207], perturbed=False)
  (/209): BoundShape(name=/209, inputs=[/208], perturbed=False)
  (/210): BoundConstantOfShape(name=/210, inputs=[/209], perturbed=False)
  (/211): BoundConstant(name=/211, value=-1)
  (/212): BoundMul(name=/212, inputs=[/210, /211], perturbed=False)
  (/213): BoundEqual(name=/213, inputs=[/208, /212], perturbed=False)
  (/214): BoundWhere(name=/214, inputs=[/213, /210, /208], perturbed=False)
  (/215): BoundExpand(name=/215, inputs=[/76, /214], perturbed=False)
  (/216): BoundCast(name=/216, inputs=[/215], perturbed=False)
  (/217): BoundMul(name=/217, inputs=[/216, /77], perturbed=False)
  (/218): BoundEqual(name=/218, inputs=[/74, /217], perturbed=False)
  (/219): BoundCast(name=/219, inputs=[/216], perturbed=False)
  (/220): BoundCast(name=/220, inputs=[/74], perturbed=False)
  (/shape): BoundWhere(name=/shape, inputs=[/218, /219, /220], perturbed=False)
  (/222): BoundSplit(name=/222, inputs=[/shape], perturbed=False)
  (/223): BoundSplit(name=/223, inputs=[/shape], perturbed=False)
  (/224): BoundSqueeze(name=/224, inputs=[/222], perturbed=False)
  (/225): BoundSqueeze(name=/225, inputs=[/223], perturbed=False)
  (/226): BoundUnsqueeze(name=/226, inputs=[/224], perturbed=False)
  (/227): BoundUnsqueeze(name=/227, inputs=[/225], perturbed=False)
  (/228): BoundConcat(name=/228, inputs=[/226, /227], perturbed=False)
  (/229): BoundConstantOfShape(name=/229, inputs=[/228], perturbed=False)
  (/230): BoundMul(name=/230, inputs=[/73, /229], perturbed=False)
  (/231): BoundSplit(name=/231, inputs=[/shape.5], perturbed=False)
  (/232): BoundSqueeze(name=/232, inputs=[/231], perturbed=False)
  (/233): BoundUnsqueeze(name=/233, inputs=[/232], perturbed=False)
  (/234): BoundConcat(name=/234, inputs=[/233], perturbed=False)
  (/235): BoundConstant(name=/235, value=tensor([-1], device='cuda:0'))
  (/236): BoundReshape(name=/236, inputs=[/234, /235], perturbed=False)
  (/237): BoundShape(name=/237, inputs=[/236], perturbed=False)
  (/238): BoundConstantOfShape(name=/238, inputs=[/237], perturbed=False)
  (/239): BoundConstant(name=/239, value=-1)
  (/240): BoundMul(name=/240, inputs=[/238, /239], perturbed=False)
  (/241): BoundEqual(name=/241, inputs=[/236, /240], perturbed=False)
  (/242): BoundWhere(name=/242, inputs=[/241, /238, /236], perturbed=False)
  (/243): BoundExpand(name=/243, inputs=[/80, /242], perturbed=False)
  (/244): BoundCast(name=/244, inputs=[/243], perturbed=False)
  (/245): BoundMul(name=/245, inputs=[/244, /81], perturbed=False)
  (/246): BoundEqual(name=/246, inputs=[/78, /245], perturbed=False)
  (/247): BoundCast(name=/247, inputs=[/244], perturbed=False)
  (/248): BoundCast(name=/248, inputs=[/78], perturbed=False)
  (/shape.4): BoundWhere(name=/shape.4, inputs=[/246, /247, /248], perturbed=False)
  (/250): BoundSplit(name=/250, inputs=[/shape.4], perturbed=False)
  (/251): BoundSplit(name=/251, inputs=[/shape.4], perturbed=False)
  (/252): BoundSqueeze(name=/252, inputs=[/250], perturbed=False)
  (/253): BoundSqueeze(name=/253, inputs=[/251], perturbed=False)
  (/254): BoundUnsqueeze(name=/254, inputs=[/252], perturbed=False)
  (/255): BoundUnsqueeze(name=/255, inputs=[/253], perturbed=False)
  (/256): BoundConcat(name=/256, inputs=[/254, /255], perturbed=False)
  (/257): BoundConstantOfShape(name=/257, inputs=[/256], perturbed=False)
  (/258): BoundMul(name=/258, inputs=[/73, /257], perturbed=False)
  (/261): BoundAdd(name=/261, inputs=[/259/sqr, /260/sqr], perturbed=True)
  (/262): BoundSub(name=/262, inputs=[/261, /230], perturbed=True)
  (/265): BoundAdd(name=/265, inputs=[/263/sqr, /264/sqr], perturbed=True)
  (/266): BoundSub(name=/266, inputs=[/265, /258], perturbed=True)
  (/267): BoundTranspose(name=/267, inputs=[/86], perturbed=False)
  (/268): BoundMatMul(name=/268, inputs=[/132, /267], perturbed=True)
  (/269): BoundTranspose(name=/269, inputs=[/87], perturbed=False)
  (/270): BoundMatMul(name=/270, inputs=[/138, /269], perturbed=True)
  (/271): BoundTranspose(name=/271, inputs=[/88], perturbed=False)
  (/272): BoundMatMul(name=/272, inputs=[/146, /271], perturbed=True)
  (/273): BoundTranspose(name=/273, inputs=[/89], perturbed=False)
  (/274): BoundMatMul(name=/274, inputs=[/152, /273], perturbed=True)
  (/275): BoundTranspose(name=/275, inputs=[/90], perturbed=False)
  (/276): BoundMatMul(name=/276, inputs=[/189, /275], perturbed=True)
  (/277): BoundTranspose(name=/277, inputs=[/91], perturbed=False)
  (/278): BoundMatMul(name=/278, inputs=[/198, /277], perturbed=True)
  (/279): BoundTranspose(name=/279, inputs=[/92], perturbed=False)
  (/280): BoundMatMul(name=/280, inputs=[/194, /279], perturbed=True)
  (/281): BoundTranspose(name=/281, inputs=[/93], perturbed=False)
  (/282): BoundMatMul(name=/282, inputs=[/202, /281], perturbed=True)
  (/284): BoundSub(name=/284, inputs=[/272, /268], perturbed=True)
  (/285): BoundSub(name=/285, inputs=[/284, /278], perturbed=True)
  (/286): BoundSub(name=/286, inputs=[/285, /276], perturbed=True)
  (/287): BoundMul(name=/287, inputs=[/95, /283/sqr], perturbed=True)
  (/288): BoundSub(name=/288, inputs=[/286, /287], perturbed=True)
  (/289): BoundSub(name=/289, inputs=[/274, /270], perturbed=True)
  (/290): BoundSub(name=/290, inputs=[/289, /282], perturbed=True)
  (/291): BoundSub(name=/291, inputs=[/290, /280], perturbed=True)
  (/292): BoundMul(name=/292, inputs=[/96, /283/sqr], perturbed=True)
  (/293): BoundAdd(name=/293, inputs=[/291, /292], perturbed=True)
  (/294): BoundConcat(name=/294, inputs=[/124, /189, /198, /194, /202, /262, /266, /288, /293], perturbed=True)
  (/177/sqr): BoundSqr(name=/177/sqr, inputs=[/174], perturbed=True)
  (/178/sqr): BoundSqr(name=/178/sqr, inputs=[/176], perturbed=True)
  (/259/sqr): BoundSqr(name=/259/sqr, inputs=[/189], perturbed=True)
  (/260/sqr): BoundSqr(name=/260/sqr, inputs=[/194], perturbed=True)
  (/263/sqr): BoundSqr(name=/263/sqr, inputs=[/198], perturbed=True)
  (/264/sqr): BoundSqr(name=/264/sqr, inputs=[/202], perturbed=True)
  (/283/sqr): BoundSqr(name=/283/sqr, inputs=[/160], perturbed=True)
)
Original output: tensor([[ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
         -0.00027345, -0.00087259]], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/0, /19, /20], perturbed=True): [(BoundRelu(name=/98, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/98, /21, /22], perturbed=True): [(BoundRelu(name=/100, inputs=[/input.3], perturbed=True), 0)]
  BoundLinear(name=/input.7, inputs=[/100, /23, /24], perturbed=True): [(BoundRelu(name=/102, inputs=[/input.7], perturbed=True), 0)]
  BoundSlice(name=/113, inputs=[/103, /110, /111, /112], perturbed=True): [(BoundSigmoid(name=/114, inputs=[/113], perturbed=True), 0)]
  BoundSub(name=/172, inputs=[/169, /171], perturbed=True): [(BoundCos(name=/179, inputs=[/172], perturbed=True), 0), (BoundSin(name=/180, inputs=[/172], perturbed=True), 0)]
  BoundGather(name=/174, inputs=[/160, /173], perturbed=True): [(BoundMul(name=/181, inputs=[/174, /176], perturbed=True), 0), (BoundSqr(name=/177/sqr, inputs=[/174], perturbed=True), 0)]
  BoundGather(name=/176, inputs=[/160, /175], perturbed=True): [(BoundMul(name=/181, inputs=[/174, /176], perturbed=True), 1), (BoundSqr(name=/178/sqr, inputs=[/176], perturbed=True), 0)]
  BoundMul(name=/181, inputs=[/174, /176], perturbed=True): [(BoundMul(name=/182, inputs=[/181, /179], perturbed=True), 0), (BoundMul(name=/183, inputs=[/181, /180], perturbed=True), 0)]
  BoundCos(name=/179, inputs=[/172], perturbed=True): [(BoundMul(name=/182, inputs=[/181, /179], perturbed=True), 1)]
  BoundSin(name=/180, inputs=[/172], perturbed=True): [(BoundMul(name=/183, inputs=[/181, /180], perturbed=True), 1)]
  BoundAdd(name=/189, inputs=[/187, /188], perturbed=True): [(BoundSqr(name=/259/sqr, inputs=[/189], perturbed=True), 0)]
  BoundAdd(name=/194, inputs=[/192, /193], perturbed=True): [(BoundSqr(name=/260/sqr, inputs=[/194], perturbed=True), 0)]
  BoundAdd(name=/198, inputs=[/196, /197], perturbed=True): [(BoundSqr(name=/263/sqr, inputs=[/198], perturbed=True), 0)]
  BoundAdd(name=/202, inputs=[/200, /201], perturbed=True): [(BoundSqr(name=/264/sqr, inputs=[/202], perturbed=True), 0)]
  BoundSlice(name=/160, inputs=[/124, /157, /158, /159], perturbed=True): [(BoundSqr(name=/283/sqr, inputs=[/160], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/98, inputs=[/input], perturbed=True)
   BoundRelu(name=/100, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/102, inputs=[/input.7], perturbed=True)
   BoundSigmoid(name=/114, inputs=[/113], perturbed=True)
   BoundCos(name=/179, inputs=[/172], perturbed=True)
   BoundSin(name=/180, inputs=[/172], perturbed=True)
   BoundMul(name=/181, inputs=[/174, /176], perturbed=True)
   BoundMul(name=/182, inputs=[/181, /179], perturbed=True)
   BoundMul(name=/183, inputs=[/181, /180], perturbed=True)
   BoundSqr(name=/177/sqr, inputs=[/174], perturbed=True)
   BoundSqr(name=/178/sqr, inputs=[/176], perturbed=True)
   BoundSqr(name=/259/sqr, inputs=[/189], perturbed=True)
   BoundSqr(name=/260/sqr, inputs=[/194], perturbed=True)
   BoundSqr(name=/263/sqr, inputs=[/198], perturbed=True)
   BoundSqr(name=/264/sqr, inputs=[/202], perturbed=True)
   BoundSqr(name=/283/sqr, inputs=[/160], perturbed=True)
layer /98 start_node /input.3 using full alpha [2, 256, 1, 256] with unstable size None total_size 256 output_shape torch.Size([256])
layer /98 start_node /input.7 using full alpha [2, 512, 1, 256] with unstable size None total_size 512 output_shape torch.Size([512])
layer /98 start_node /113 using full alpha [2, 438, 1, 256] with unstable size None total_size 438 output_shape torch.Size([438])
layer /98 start_node /174 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /176 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /172 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /181 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /189 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /194 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /198 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /202 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /98 start_node /160 using full alpha [2, 300, 1, 256] with unstable size None total_size 300 output_shape torch.Size([300])
layer /98 start_node /294 using full alpha [2, 276, 1, 256] with unstable size None total_size 276 output_shape 276
layer /100 start_node /input.7 using full alpha [2, 512, 1, 256] with unstable size None total_size 512 output_shape torch.Size([512])
layer /100 start_node /113 using full alpha [2, 438, 1, 256] with unstable size None total_size 438 output_shape torch.Size([438])
layer /100 start_node /174 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /176 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /172 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /181 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /189 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /194 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /198 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /202 using full alpha [2, 411, 1, 256] with unstable size None total_size 411 output_shape torch.Size([411])
layer /100 start_node /160 using full alpha [2, 300, 1, 256] with unstable size None total_size 300 output_shape torch.Size([300])
layer /100 start_node /294 using full alpha [2, 276, 1, 256] with unstable size None total_size 276 output_shape 276
layer /102 start_node /113 using full alpha [2, 438, 1, 512] with unstable size None total_size 438 output_shape torch.Size([438])
layer /102 start_node /174 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /176 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /172 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /181 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /189 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /194 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /198 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /202 using full alpha [2, 411, 1, 512] with unstable size None total_size 411 output_shape torch.Size([411])
layer /102 start_node /160 using full alpha [2, 300, 1, 512] with unstable size None total_size 300 output_shape torch.Size([300])
layer /102 start_node /294 using full alpha [2, 276, 1, 512] with unstable size None total_size 276 output_shape 276
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
          0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
          0.00000000e+00,  0.00000000e+00, -1.06158314e+01,  4.99265671e+00,
         -2.90438461e+00, -1.84348631e+00, -5.25262737e+00, -4.32880974e+00,
         -9.30025697e-01,  9.27465439e-01, -8.30335236e+00, -1.99145794e-01,
         -3.85657234e+01,  1.19645405e+00, -1.17040367e+01, -6.32777214e-01,
          0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
         -1.62875404e+01, -1.73381329e-01, -1.76828461e+01, -2.72855139e+00,
         -9.10019159e-01,  9.07290876e-01, -3.14423227e+00, -1.21980190e+01,
         -3.77801394e+00, -3.66643906e+00, -7.55824471e+00, -1.28465805e+01,
         -2.42001891e+00,  2.41658020e+00,  0.00000000e+00,  0.00000000e+00,
         -9.72743797e+00, -1.11088729e+00,  0.00000000e+00,  0.00000000e+00,
         -3.41293240e+00, -4.22829628e+00, -1.25002038e+00,  1.24715447e+00,
         -2.50001788e+00,  2.49658298e+00, -8.64116592e+01, -3.92852402e+00,
         -4.19634132e+01, -6.07815742e+00, -7.39718342e+00, -6.75227165e+00,
         -1.96735630e+01,  9.40946198e+00, -4.30001926e+00,  4.29565859e+00,
         -3.82458782e+00, -4.52473640e+00, -4.60001421e+00,  4.59589100e+00,
         -5.54001665e+00,  5.53533697e+00, -5.97532558e+00, -1.38844929e+01,
         -4.36001873e+00,  4.35583591e+00, -1.00905886e+01, -2.45837402e+00,
         -3.41001987e+00,  3.40615869e+00, -8.81002426e+00,  8.79744148e+00,
         -7.09655428e+00, -9.78496552e-01, -1.16146374e+01, -4.54309368e+00,
         -4.55891418e+01, -1.80018997e+00, -3.25674587e-03, -2.12070699e-05,
         -1.79929180e+01,  1.30882263e-02, -9.16091156e+00, -5.60152626e+00,
         -1.43156652e+01, -3.20019245e+00, -3.33619499e+01, -5.88659477e+00,
         -1.42114506e+01, -2.96483803e+00, -1.39784012e+01, -2.50563240e+00,
         -7.52700043e+00, -2.99809074e+00, -4.01590206e-03, -2.47986263e-05,
         -8.12968254e+00, -3.38268375e+00, -6.38509512e+00, -1.93206940e+01,
         -2.11363602e+00, -8.18244696e-01, -2.15029602e+01, -3.18955421e-01,
         -2.01305032e+00, -6.28863424e-02, -4.15344334e+00, -5.42867374e+00,
         -1.15398369e+01, -2.95169258e+00, -8.54427624e+00,  1.09162807e-01,
         -2.03001904e+00,  2.02661085e+00, -2.02001343e+01, -1.46609383e+01,
         -2.42548141e+01, -3.75692291e+01, -9.30549240e+00, -7.51058769e+00,
          0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
          0.00000000e+00,  0.00000000e+00, -2.50366998e+00, -1.12740993e-01,
         -4.05796409e-01, -8.53762865e-01, -1.00025155e-01,  9.82242599e-02,
         -2.00023070e-01,  1.97837010e-01, -2.00024322e-01,  1.97808132e-01,
         -2.50023246e-01,  2.47730613e-01, -3.50022197e-01,  3.48126739e-01,
         -1.80077839e+01, -9.01750207e-01, -1.03583109e+00, -2.10343456e+00,
         -1.83798862e+00, -2.09527946e+00, -4.69197929e-01, -4.31742281e-01,
         -1.10723662e+00, -4.64785397e-01, -4.91114426e+01, -6.72211552e+00,
         -1.05086975e+01, -4.06071424e-01, -1.66732426e+01,  3.20920765e-01,
         -8.08644104e+00, -2.70476151e+00, -1.69549251e+00, -1.04658318e+00,
         -3.97701550e+00, -8.61472547e-01, -9.02033806e-01, -3.17320496e-01,
         -6.40712261e-01, -1.77569580e+00, -9.25882816e-01, -6.40635252e-01,
         -2.19950962e+00, -5.19705915e+00, -1.34760666e+00, -2.59007454e+00,
         -4.34235066e-01, -2.64138907e-01, -9.00019646e-01,  8.97179723e-01,
         -1.50002098e+00,  1.49675274e+00, -1.26839566e+00, -9.92687643e-01,
         -6.76972389e-01, -4.22933787e-01, -1.78832746e+00, -8.98954868e-01,
         -5.79185867e+00, -2.09592247e+00, -5.89075994e+00, -2.04335213e+00,
         -4.07683611e+00, -9.10673046e+00, -8.24862671e+00, -3.83286476e-01,
         -4.49047804e+00, -1.48924184e+00, -2.32904959e+00, -8.23011756e-01,
         -3.17646408e+00, -8.34954381e-01, -2.76999998e+00,  6.29214287e-01,
         -3.83143997e+00, -1.20246720e+00, -2.24206123e+01, -1.94562268e+00,
         -3.86070395e+00, -3.38490057e+00, -1.15148840e+01, -1.85489106e+00,
         -2.12403908e+01, -3.63491440e+00, -1.34003007e+00,  1.33493698e+00,
         -9.71830654e+00, -2.31208491e+00, -3.48263597e+00, -6.05964136e+00,
         -1.64662445e+00,  2.07943738e-01, -8.68980706e-01,  3.15872014e-01,
         -2.92471647e+00, -3.27865934e+00, -2.63487983e+00, -4.93602467e+00,
         -4.20001316e+00,  4.19507599e+00, -1.00001669e+00,  9.96498108e-01,
         -6.99433136e+00, -4.58810902e+00, -2.45020366e+00,  2.33260822e+00,
         -1.08128715e+00, -4.78223896e+00, -3.26234126e+00, -3.63182378e+00,
         -2.63717270e+00, -3.45681715e+00, -4.20021057e-01,  4.17911619e-01,
         -1.00021385e-01,  9.84789655e-02, -2.50023901e-01,  2.48119250e-01,
         -9.00022149e-01,  8.96879554e-01, -1.73267002e+01, -9.08119678e-01,
         -1.50001812e+00,  1.49683321e+00, -8.70026946e-01,  8.67493808e-01,
         -5.49462509e+00, -5.92177963e+00, -8.80957794e+00, -3.24781442e+00,
         -3.37248039e+00, -3.46514726e+00, -2.00267881e-02,  1.88801736e-02,
         -1.73523545e-01,  1.71685755e-01, -1.28341004e-01,  1.25331745e-01,
         -3.80019188e-01,  3.77577662e-01, -6.00226037e-02,  5.84264360e-02]],
       device='cuda:0') None
****** iter [0] loss: 1197.0794677734375, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 814.6356811523438, lr: 0.495 pruning_in_iteration open status: None
****** iter [2] loss: 618.3262939453125, lr: 0.49005 pruning_in_iteration open status: None
****** iter [3] loss: 533.5234985351562, lr: 0.48514949999999996 pruning_in_iteration open status: None
****** iter [4] loss: 483.7461853027344, lr: 0.480298005 pruning_in_iteration open status: None
****** iter [5] loss: 455.154052734375, lr: 0.47549502494999996 pruning_in_iteration open status: None
****** iter [6] loss: 438.17987060546875, lr: 0.47074007470049994 pruning_in_iteration open status: None
****** iter [7] loss: 427.763427734375, lr: 0.46603267395349496 pruning_in_iteration open status: None
****** iter [8] loss: 420.9013977050781, lr: 0.46137234721396 pruning_in_iteration open status: None
****** iter [9] loss: 415.9734191894531, lr: 0.45675862374182036 pruning_in_iteration open status: None
****** iter [10] loss: 412.20953369140625, lr: 0.45219103750440215 pruning_in_iteration open status: None
****** iter [11] loss: 409.4322509765625, lr: 0.44766912712935814 pruning_in_iteration open status: None
****** iter [12] loss: 407.1529541015625, lr: 0.44319243585806456 pruning_in_iteration open status: None
****** iter [13] loss: 405.28045654296875, lr: 0.4387605114994839 pruning_in_iteration open status: None
****** iter [14] loss: 403.69195556640625, lr: 0.43437290638448905 pruning_in_iteration open status: None
****** iter [15] loss: 402.458984375, lr: 0.43002917732064416 pruning_in_iteration open status: None
****** iter [16] loss: 401.45928955078125, lr: 0.4257288855474377 pruning_in_iteration open status: None
****** iter [17] loss: 400.66033935546875, lr: 0.4214715966919633 pruning_in_iteration open status: None
****** iter [18] loss: 399.84796142578125, lr: 0.4172568807250437 pruning_in_iteration open status: None
****** iter [19] loss: 399.0810852050781, lr: 0.41308431191779327 pruning_in_iteration open status: None
****** iter [20] loss: 398.5625305175781, lr: 0.4089534687986153 pruning_in_iteration open status: None
****** iter [21] loss: 398.0919189453125, lr: 0.40486393411062915 pruning_in_iteration open status: None
****** iter [22] loss: 397.7430725097656, lr: 0.4008152947695229 pruning_in_iteration open status: None
****** iter [23] loss: 397.4285888671875, lr: 0.39680714182182764 pruning_in_iteration open status: None
****** iter [24] loss: 397.1189270019531, lr: 0.3928390704036094 pruning_in_iteration open status: None
****** iter [25] loss: 396.7813415527344, lr: 0.38891067969957327 pruning_in_iteration open status: None
****** iter [26] loss: 396.46099853515625, lr: 0.38502157290257755 pruning_in_iteration open status: None
****** iter [27] loss: 396.2291564941406, lr: 0.3811713571735518 pruning_in_iteration open status: None
****** iter [28] loss: 395.98846435546875, lr: 0.37735964360181623 pruning_in_iteration open status: None
****** iter [29] loss: 395.7148132324219, lr: 0.3735860471657981 pruning_in_iteration open status: None
****** iter [30] loss: 395.32275390625, lr: 0.3698501866941401 pruning_in_iteration open status: None
****** iter [31] loss: 395.063720703125, lr: 0.3661516848271987 pruning_in_iteration open status: None
****** iter [32] loss: 394.8946533203125, lr: 0.3624901679789267 pruning_in_iteration open status: None
****** iter [33] loss: 394.7791442871094, lr: 0.3588652662991374 pruning_in_iteration open status: None
****** iter [34] loss: 394.63702392578125, lr: 0.35527661363614604 pruning_in_iteration open status: None
****** iter [35] loss: 394.5136413574219, lr: 0.3517238474997846 pruning_in_iteration open status: None
****** iter [36] loss: 394.39361572265625, lr: 0.34820660902478673 pruning_in_iteration open status: None
****** iter [37] loss: 394.29345703125, lr: 0.34472454293453886 pruning_in_iteration open status: None
****** iter [38] loss: 394.2105712890625, lr: 0.3412772975051935 pruning_in_iteration open status: None
****** iter [39] loss: 394.08648681640625, lr: 0.33786452453014154 pruning_in_iteration open status: None
best_l after optimization: -394.07269287109375
alpha/beta optimization time: 21.609735250473022

initial alpha-crown bounds: tensor([[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
          0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
          0.00000000e+00,  0.00000000e+00, -9.40599251e+00,  6.30047750e+00,
         -1.85230649e+00, -4.82984446e-03, -3.60024047e+00, -1.19353719e-02,
         -9.29999650e-01,  9.28572595e-01, -1.98692286e+00,  1.08028650e-01,
         -2.02841797e+01,  6.20122957e+00, -3.23399305e+00,  1.22359917e-02,
          0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
         -3.00495911e+00,  1.57326698e-01, -8.02344227e+00, -2.41831411e-03,
         -9.09999847e-01,  9.08548057e-01, -2.58187366e+00, -2.16392651e-02,
         -2.77155042e+00, -8.68734345e-03, -6.06201792e+00, -3.64369899e-02,
         -2.42000008e+00,  2.41819668e+00,  0.00000000e+00,  0.00000000e+00,
         -3.31939077e+00, -2.76084244e-03,  0.00000000e+00,  0.00000000e+00,
         -2.77732325e+00, -9.38357972e-03, -1.24999988e+00,  1.24842024e+00,
         -2.50000000e+00,  2.49812937e+00, -2.48070812e+01,  4.14785743e-02,
         -1.63105011e+01, -1.36715341e-02, -5.15455675e+00, -1.84026025e-02,
         -1.68480549e+01,  1.18924341e+01, -4.30000019e+00,  4.29764891e+00,
         -2.88115692e+00, -1.19177774e-02, -4.59999990e+00,  4.59780836e+00,
         -5.53999996e+00,  5.53752947e+00, -5.21997833e+00, -3.55073959e-02,
         -4.36000013e+00,  4.35773563e+00, -4.59602928e+00, -6.02123514e-03,
         -3.41000009e+00,  3.40796113e+00, -8.81000042e+00,  8.80599594e+00,
         -2.68292999e+00, -7.21445307e-04, -6.22545576e+00, -1.26152411e-02,
         -1.13694181e+01,  5.64179420e-01, -1.82489562e-03,  1.59411570e-07,
         -3.45128942e+00,  5.54445624e-01, -5.68896055e+00, -1.47516839e-02,
         -6.71946859e+00, -3.54098342e-03, -1.40617199e+01, -1.31706037e-02,
         -6.69973946e+00,  1.50315277e-03, -6.27887249e+00, -3.24000977e-03,
         -4.90119505e+00, -1.01249851e-03, -2.02132016e-03,  1.90833319e-07,
         -5.43108082e+00, -1.02842785e-03, -5.62168741e+00, -4.88272235e-02,
         -1.32090843e+00, -9.06183384e-04, -7.20045853e+00,  6.79698110e-01,
         -1.51655841e+00,  2.08790720e-01, -3.31411958e+00, -1.32965799e-02,
         -8.99035835e+00,  1.95205498e+00, -5.58459473e+00,  9.48244095e-01,
         -2.02999973e+00,  2.02818656e+00, -1.71555157e+01,  9.20259021e-03,
         -2.01912079e+01, -9.51155424e-02, -6.24757147e+00, -1.97019987e-02,
          0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
          0.00000000e+00,  0.00000000e+00, -8.43848586e-01,  9.39098224e-02,
         -3.49568307e-01, -1.82528561e-03, -9.99995843e-02,  9.90377143e-02,
         -1.99999705e-01,  1.98832080e-01, -1.99999616e-01,  1.98842928e-01,
         -2.49999672e-01,  2.48761952e-01, -3.49999666e-01,  3.48990321e-01,
         -2.39998436e+00,  1.24233174e+00, -9.24700022e-01, -1.13733128e-01,
         -1.30771184e+00, -1.27604866e+00, -3.75823319e-01, -2.12894201e-01,
         -7.59136498e-01, -2.12225556e-01, -1.02999916e+01, -4.87946510e+00,
         -1.20000005e+00,  9.62616563e-01, -2.00000000e+00,  1.95366788e+00,
         -3.50736284e+00, -1.19938123e+00, -7.51195312e-01, -4.99265015e-01,
         -2.75847435e+00, -2.48622775e-01, -3.51039976e-01, -1.49791688e-01,
         -3.22943509e-01, -4.83844012e-01, -5.00050128e-01, -2.49825954e-01,
         -1.74942040e+00, -5.11471272e-01, -8.96817207e-01, -5.05455434e-01,
         -1.50877714e-01, -1.00431912e-01, -8.99999857e-01,  8.98493052e-01,
         -1.49999976e+00,  1.49820399e+00, -8.78824770e-01, -4.25740778e-01,
         -3.50246996e-01, -1.50182873e-01, -8.00234914e-01, -4.76260573e-01,
         -3.94930649e+00, -6.31513596e-01, -3.95399904e+00, -4.92380142e-01,
         -2.57644796e+00, -2.59384131e+00, -5.79813480e+00,  1.98669147e+00,
         -2.07791710e+00, -3.97570372e-01, -1.23188257e+00, -4.18978214e-01,
         -6.06813550e-01, -5.94345212e-01, -2.76999998e+00,  2.72536516e+00,
         -2.13090658e+00, -1.98449373e-01, -2.18000007e+00,  1.79363608e+00,
         -2.23477650e+00, -2.19190693e+00, -1.73065853e+00, -1.28117943e+00,
         -3.04700565e+00, -2.52719307e+00, -1.34000003e+00,  1.33732712e+00,
         -3.09335399e+00, -1.27236962e+00, -1.61230040e+00, -3.88372993e+00,
         -1.00115228e+00,  4.00171906e-01, -7.70852387e-01,  4.23273981e-01,
         -2.01188564e+00, -1.87703812e+00, -2.14310050e+00, -2.50426221e+00,
         -4.19999981e+00,  4.19737530e+00, -1.00000000e+00,  9.98183727e-01,
         -2.25189614e+00, -2.24452090e+00, -2.45000005e+00,  2.42234564e+00,
         -9.40271914e-01, -8.97744205e-03, -2.15202260e+00, -2.05917549e+00,
         -1.84046364e+00, -1.89936459e+00, -4.19999689e-01,  4.18846160e-01,
         -9.99995992e-02,  9.92062017e-02, -2.49999627e-01,  2.48991072e-01,
         -8.99999619e-01,  8.98280382e-01, -1.50000000e+00,  8.91141176e-01,
         -1.49999976e+00,  1.49827778e+00, -8.69999588e-01,  8.68555009e-01,
         -4.82310677e+00, -9.05633688e-01, -3.26466036e+00, -1.25248790e+00,
         -2.38772726e+00, -1.81455278e+00, -1.99992284e-02,  1.93713494e-02,
         -1.73499644e-01,  1.72466367e-01, -1.28299251e-01,  1.26840755e-01,
         -3.79999757e-01,  3.78731012e-01, -5.99996038e-02,  5.91600724e-02]],
       device='cuda:0')
Worst class: (+ rhs) -24.80708122253418
Missing A for BoundCos(name=/179, inputs=[/172], perturbed=True). Making an additional CROWN call.
Missing A for BoundSin(name=/180, inputs=[/172], perturbed=True). Making an additional CROWN call.
Total VNNLIB file length: 276, max property batch size: 1, total number of batches: 276
lA shape: [torch.Size([276, 1, 256]), torch.Size([276, 1, 256]), torch.Size([276, 1, 512]), torch.Size([276, 1, 438]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 411]), torch.Size([276, 1, 300])]

Properties batch 0, size 1
Remaining timeout: 568.0781819820404
##### Instance 0 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  ...,  0.,  0.,  0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 1, size 1
Remaining timeout: 567.8633277416229
##### Instance 0 first 10 spec matrices: 
tensor([[[1., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 2, size 1
Remaining timeout: 567.76531457901
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  ...,  0.,  0.,  0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 3, size 1
Remaining timeout: 567.6677324771881
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 1., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 4, size 1
Remaining timeout: 567.5693123340607
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  ...,  0.,  0.,  0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 5, size 1
Remaining timeout: 567.4703719615936
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 1.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 6, size 1
Remaining timeout: 567.3725490570068
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 7, size 1
Remaining timeout: 567.275228023529
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 8, size 1
Remaining timeout: 567.177597284317
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 9, size 1
Remaining timeout: 567.0792713165283
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 10, size 1
Remaining timeout: 566.9802057743073
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-14.48000145], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -9.40599250793457.

Properties batch 11, size 1
Remaining timeout: 566.8814313411713
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.300477504730225.

Properties batch 12, size 1
Remaining timeout: 566.7828965187073
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.85000098], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.85230649]], device='cuda:0') need to verify.
torch allclose failed: norm 0.15739598870277405
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.85207975]], device='cuda:0') tensor([[1.45067215]], device='cuda:0')
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.49it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04942584037780762
Previous best: tensor(-0.00207877, device='cuda:0')
Previous worst: tensor(-0.00207877, device='cuda:0')
New worst: tensor(-0.00183892, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 3.7026054859161377, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 3.7015538215637207, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.7007768154144287, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.7004005908966064, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.700218677520752, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 3.7001328468322754, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.8500843048095703, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.8500608205795288, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.8500447273254395, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.8500339984893799, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.9915    transfer 0.0005    finalize 0.0012    func 0.9942    
Accumulated time: func 0.9942    prepare 0.0011    bound 0.9915    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00003 (1), 
length of domains: 1
Time: pickout 0.0023    decision 0.1619    set_bounds 0.0015    solve 0.9942    add 0.0116    
Accumulated time: pickout 0.0023    decision 0.1619    set_bounds 0.0015    solve 0.9942    add 0.0116    
Sorting batched domains takes 0.0010814666748046875 seconds.
Current (lb-rhs): -3.3020973205566406e-05
1 domains visited
Cumulative time: 1.671820878982544

BaB round 2
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.25it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04991340637207031
Previous best: tensor(-3.30209732e-05, device='cuda:0')
Previous worst: tensor(-3.30209732e-05, device='cuda:0')
New worst: tensor(-2.57492065e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 83] 
****** iter [0] loss: 3.700044631958008, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 3.7001123428344727, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.700021266937256, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.8500022888183594, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0015    bound 0.3501    transfer 0.0005    finalize 0.0012    func 0.3532    
Accumulated time: func 1.3474    prepare 0.0027    bound 1.3416    transfer 0.0009    finalize 0.0024    
length of domains: 0
Time: pickout 0.0021    decision 0.1631    set_bounds 0.0015    solve 0.3532    add 0.0001    
Accumulated time: pickout 0.0044    decision 0.3250    set_bounds 0.0030    solve 1.3475    add 0.0118    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 2.192176580429077


Properties batch 13, size 1
Remaining timeout: 564.0015082359314
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00482984]], device='cuda:0') need to verify.
torch allclose failed: norm 0.02153056673705578
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00434743]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.64894843]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.62it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04926347732543945
Previous best: tensor(-0.00434643, device='cuda:0')
Previous worst: tensor(-0.00434643, device='cuda:0')
New worst: tensor(-0.00418021, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 0.00833021942526102, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.004980188328772783, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0029906779527664185, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.001895696739666164, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0012589499820023775, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00086994469165802, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0006225574179552495, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0004603785928338766, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0003508993540890515, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0002750291023403406, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7213    transfer 0.0005    finalize 0.0011    func 0.7240    
Accumulated time: func 0.7240    prepare 0.0011    bound 0.7213    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00014 (1), -0.00014 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1599    set_bounds 0.0015    solve 0.7241    add 0.0019    
Accumulated time: pickout 0.0019    decision 0.1599    set_bounds 0.0015    solve 0.7241    add 0.0019    
Sorting batched domains takes 0.0011763572692871094 seconds.
Current (lb-rhs): -0.0001367784134345129
2 domains visited
Cumulative time: 0.9773330688476562

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.27it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.050191402435302734
Previous best: tensor(-0.00013625, device='cuda:0')
Previous worst: tensor(-0.00013678, device='cuda:0')
New worst: tensor(-0.00013176, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] [/input.7, 149] 
****** iter [0] loss: 0.0004945671535097063, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00030338086071424186, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00018034290405921638, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0001105571718653664, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 7.124722469598055e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 4.84118536405731e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 3.4322838473599404e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.5181607270496897e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.9100758436252363e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.4914225175743923e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0017    bound 0.6926    transfer 0.0005    finalize 0.0014    func 0.6962    
Accumulated time: func 1.4202    prepare 0.0029    bound 1.4140    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.6339    set_bounds 0.0017    solve 0.6962    add 0.0023    
Accumulated time: pickout 0.0041    decision 0.7938    set_bounds 0.0032    solve 1.4203    add 0.0042    
Sorting batched domains takes 0.0011818408966064453 seconds.
Current (lb-rhs): -3.1467111512029078e-06
6 domains visited
Cumulative time: 2.3152730464935303

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.07it/s]
kfsb choice: tensor([2, 0, 2, 0], device='cuda:0')
Filtering time: 0.05074787139892578
Previous best: tensor(-2.34456866e-06, device='cuda:0')
Previous worst: tensor(-3.14671115e-06, device='cuda:0')
New worst: tensor(-3.06818265e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 238] [/input.3, 46] [/input, 139] 
****** iter [0] loss: 2.8571485017891973e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.684430753812194e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 9.871901056612842e-06, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0027    bound 0.2841    transfer 0.0005    finalize 0.0021    func 0.2895    
Accumulated time: func 1.7098    prepare 0.0058    bound 1.6981    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0024    decision 0.1704    set_bounds 0.0022    solve 0.2896    add 0.0002    
Accumulated time: pickout 0.0065    decision 0.9642    set_bounds 0.0054    solve 1.7099    add 0.0044    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.780237913131714


Properties batch 14, size 1
Remaining timeout: 560.6279480457306
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.60000110], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.60024047]], device='cuda:0') need to verify.
torch allclose failed: norm 0.03954078629612923
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.60012460]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.72332478]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.96it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.050734519958496094
Previous best: tensor(-0.00012350, device='cuda:0')
Previous worst: tensor(-0.00012350, device='cuda:0')
New worst: tensor(0.00033021, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 435] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0011    bound 0.0597    transfer 0.0004    finalize 0.0011    func 0.0623    
Accumulated time: func 0.0623    prepare 0.0012    bound 0.0597    transfer 0.0004    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1615    set_bounds 0.0017    solve 0.0624    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1615    set_bounds 0.0017    solve 0.0624    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.3147287368774414


Properties batch 15, size 1
Remaining timeout: 559.7005085945129
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01193537]], device='cuda:0') need to verify.
torch allclose failed: norm 0.029212022200226784
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01071760]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[4.95237494]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.73it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.05123639106750488
Previous best: tensor(-0.01071660, device='cuda:0')
Previous worst: tensor(-0.01071660, device='cuda:0')
New worst: tensor(-0.01040607, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 0.020772088319063187, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.012276319786906242, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.007543935440480709, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.004842459224164486, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.003210968803614378, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0022066552191972733, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.001576848328113556, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0011671304237097502, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0008925945730879903, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0007020444609224796, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7024    transfer 0.0005    finalize 0.0012    func 0.7051    
Accumulated time: func 0.7051    prepare 0.0011    bound 0.7024    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00035 (1), -0.00035 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1665    set_bounds 0.0015    solve 0.7051    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1665    set_bounds 0.0015    solve 0.7051    add 0.0020    
Sorting batched domains takes 0.0010876655578613281 seconds.
Current (lb-rhs): -0.0003505134955048561
2 domains visited
Cumulative time: 0.9652340412139893

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.82it/s]
kfsb choice: tensor([1, 2], device='cuda:0')
Filtering time: 0.048833608627319336
Previous best: tensor(-0.00034953, device='cuda:0')
Previous worst: tensor(-0.00035051, device='cuda:0')
New worst: tensor(-0.00034076, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 146] [/input.3, 52] 
****** iter [0] loss: 0.0013171484461054206, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0007827166700735688, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00047292333329096437, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00030002009589225054, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0001985885319299996, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00013705267338082194, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 9.82048295554705e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 7.282145816134289e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.565773244597949e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.3714000639738515e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7045    transfer 0.0005    finalize 0.0014    func 0.7081    
Accumulated time: func 1.4131    prepare 0.0028    bound 1.4069    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1610    set_bounds 0.0017    solve 0.7081    add 0.0028    
Accumulated time: pickout 0.0041    decision 0.3276    set_bounds 0.0033    solve 1.4132    add 0.0048    
Sorting batched domains takes 0.0011429786682128906 seconds.
Current (lb-rhs): -1.0439936886541545e-05
6 domains visited
Cumulative time: 1.8426742553710938

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.34it/s]
kfsb choice: tensor([2, 2, 1, 1], device='cuda:0')
Filtering time: 0.05009818077087402
Previous best: tensor(-8.96898564e-06, device='cuda:0')
Previous worst: tensor(-1.04399369e-05, device='cuda:0')
New worst: tensor(-1.00456600e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] [/input.3, 46] [/input.3, 146] [/input.3, 52] 
****** iter [0] loss: 8.173382957465947e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.730824366561137e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.899357241403777e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.835573129937984e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.1996755347354338e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 5.387252713262569e-06, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0023    bound 0.5125    transfer 0.0005    finalize 0.0019    func 0.5172    
Accumulated time: func 1.9304    prepare 0.0053    bound 1.9195    transfer 0.0014    finalize 0.0045    
length of domains: 0
Time: pickout 0.0022    decision 0.1646    set_bounds 0.0022    solve 0.5173    add 0.0001    
Accumulated time: pickout 0.0063    decision 0.4922    set_bounds 0.0054    solve 1.9305    add 0.0049    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.529355764389038


Properties batch 16, size 1
Remaining timeout: 556.5755076408386
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.93000102], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.9299996495246887.

Properties batch 17, size 1
Remaining timeout: 556.4730839729309
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9285725951194763.

Properties batch 18, size 1
Remaining timeout: 556.3737499713898
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.97000098], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.98692286]], device='cuda:0') need to verify.
torch allclose failed: norm 0.06438841670751572
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.98517561]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.11856842]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04887270927429199
Previous best: tensor(-0.01517463, device='cuda:0')
Previous worst: tensor(-0.01517463, device='cuda:0')
New worst: tensor(-0.01420927, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 114] 
****** iter [0] loss: 3.9677443504333496, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 3.9567160606384277, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.9502387046813965, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.9465315341949463, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.944356679916382, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 3.9430227279663086, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 3.9421768188476562, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 3.941620349884033, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 3.9412450790405273, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 3.940974712371826, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6996    transfer 0.0005    finalize 0.0011    func 0.7023    
Accumulated time: func 0.7023    prepare 0.0011    bound 0.6996    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00050 (1), -0.00047 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1594    set_bounds 0.0015    solve 0.7023    add 0.0079    
Accumulated time: pickout 0.0019    decision 0.1594    set_bounds 0.0015    solve 0.7023    add 0.0079    
Sorting batched domains takes 0.0011141300201416016 seconds.
Current (lb-rhs): -0.0005004405975341797
2 domains visited
Cumulative time: 0.9613728523254395

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.02it/s]
kfsb choice: tensor([0, 2], device='cuda:0')
Filtering time: 0.050525665283203125
Previous best: tensor(-0.00047243, device='cuda:0')
Previous worst: tensor(-0.00050044, device='cuda:0')
New worst: tensor(-0.00049436, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 227] [/input, 65] 
****** iter [0] loss: 7.88192081451416, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 7.881147384643555, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 7.880702972412109, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 7.8804521560668945, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 7.880308151245117, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 7.880209922790527, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 7.880138397216797, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 7.88011360168457, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 7.880090713500977, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 7.880066871643066, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0021    bound 0.7080    transfer 0.0005    finalize 0.0015    func 0.7121    
Accumulated time: func 1.4144    prepare 0.0033    bound 1.4076    transfer 0.0010    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00002 (2), -0.00002 (2), -0.00002 (2), 
length of domains: 4
Time: pickout 0.0021    decision 0.1664    set_bounds 0.0017    solve 0.7122    add 0.0050    
Accumulated time: pickout 0.0040    decision 0.3259    set_bounds 0.0032    solve 1.4145    add 0.0129    
Sorting batched domains takes 0.0012252330780029297 seconds.
Current (lb-rhs): -1.633167266845703e-05
6 domains visited
Cumulative time: 1.8505141735076904

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.56it/s]
kfsb choice: tensor([0, 1, 2, 2], device='cuda:0')
Filtering time: 0.05179548263549805
Previous best: tensor(-1.50203705e-05, device='cuda:0')
Previous worst: tensor(-1.63316727e-05, device='cuda:0')
New worst: tensor(-1.54972076e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input, 108] [/input.3, 253] [/input.3, 253] 
****** iter [0] loss: 15.760126113891602, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 15.760083198547363, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 15.760040283203125, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 15.760039329528809, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0037    bound 0.3466    transfer 0.0005    finalize 0.0022    func 0.3530    
Accumulated time: func 1.7673    prepare 0.0072    bound 1.7541    transfer 0.0015    finalize 0.0048    
length of domains: 0
Time: pickout 0.0022    decision 0.1687    set_bounds 0.0022    solve 0.3530    add 0.0001    
Accumulated time: pickout 0.0062    decision 0.4946    set_bounds 0.0054    solve 1.7675    add 0.0130    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.377084493637085


Properties batch 19, size 1
Remaining timeout: 553.4131212234497
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10802865028381348.

Properties batch 20, size 1
Remaining timeout: 553.3044888973236
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-20.41000175], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -20.2841796875.

Properties batch 21, size 1
Remaining timeout: 553.2016217708588
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.201229572296143.

Properties batch 22, size 1
Remaining timeout: 553.0991880893707
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.21000099], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.23399305]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0047937729395926
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.23159385]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.50391102]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.59it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.05156445503234863
Previous best: tensor(-0.02159286, device='cuda:0')
Previous worst: tensor(-0.02159286, device='cuda:0')
New worst: tensor(-0.02030158, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 267] 
****** iter [0] loss: 6.460122585296631, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.444438934326172, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.43482780456543, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.429533004760742, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.426367282867432, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.424412727355957, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 6.423188209533691, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.422372817993164, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.421814441680908, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.421426296234131, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7021    transfer 0.0005    finalize 0.0012    func 0.7048    
Accumulated time: func 0.7048    prepare 0.0011    bound 0.7021    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00072 (1), -0.00070 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1678    set_bounds 0.0015    solve 0.7049    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1678    set_bounds 0.0015    solve 0.7049    add 0.0020    
Sorting batched domains takes 0.0010960102081298828 seconds.
Current (lb-rhs): -0.0007221698760986328
2 domains visited
Cumulative time: 0.9683938026428223

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.32it/s]
kfsb choice: tensor([1, 2], device='cuda:0')
Filtering time: 0.052298784255981445
Previous best: tensor(-0.00070214, device='cuda:0')
Previous worst: tensor(-0.00072217, device='cuda:0')
New worst: tensor(-0.00070119, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 369] [/input.7, 131] 
****** iter [0] loss: 12.842757225036621, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 12.8416748046875, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 12.841002464294434, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 12.8406400680542, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.840438842773438, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 12.840288162231445, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 12.840238571166992, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 12.840142250061035, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 12.840141296386719, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 12.840093612670898, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6929    transfer 0.0005    finalize 0.0014    func 0.6964    
Accumulated time: func 1.4013    prepare 0.0029    bound 1.3950    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00002 (2), -0.00002 (2), -0.00002 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1679    set_bounds 0.0017    solve 0.6965    add 0.0023    
Accumulated time: pickout 0.0041    decision 0.3357    set_bounds 0.0033    solve 1.4014    add 0.0042    
Sorting batched domains takes 0.0012254714965820312 seconds.
Current (lb-rhs): -2.288818359375e-05
6 domains visited
Cumulative time: 1.8406143188476562

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.49it/s]
kfsb choice: tensor([1, 1, 0, 0], device='cuda:0')
Filtering time: 0.05202913284301758
Previous best: tensor(-2.16960907e-05, device='cuda:0')
Previous worst: tensor(-2.28881836e-05, device='cuda:0')
New worst: tensor(-2.24113464e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 369] [/input.3, 242] [/input.7, 369] 
****** iter [0] loss: 25.680179595947266, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 25.680089950561523, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 25.68008804321289, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 25.680084228515625, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0025    bound 0.3426    transfer 0.0005    finalize 0.0020    func 0.3476    
Accumulated time: func 1.7489    prepare 0.0056    bound 1.7376    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0022    decision 0.1660    set_bounds 0.0022    solve 0.3477    add 0.0001    
Accumulated time: pickout 0.0063    decision 0.5016    set_bounds 0.0054    solve 1.7490    add 0.0043    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.359135627746582


Properties batch 23, size 1
Remaining timeout: 550.1445677280426
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.012235991656780243.

Properties batch 24, size 1
Remaining timeout: 550.0407733917236
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 25, size 1
Remaining timeout: 549.9397122859955
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 26, size 1
Remaining timeout: 549.8386054039001
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 27, size 1
Remaining timeout: 549.7392206192017
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 28, size 1
Remaining timeout: 549.6399064064026
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.97000098], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.00495911]], device='cuda:0') need to verify.
torch allclose failed: norm 0.09654122591018677
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.00132060]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.01329565]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.17it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.05040144920349121
Previous best: tensor(-0.03131962, device='cuda:0')
Previous worst: tensor(-0.03131962, device='cuda:0')
New worst: tensor(-0.03066468, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 369] 
****** iter [0] loss: 6.001040458679199, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.97685432434082, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 5.962713241577148, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 5.954560279846191, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 5.949712753295898, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 5.94673490524292, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 5.944853782653809, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 5.943615913391113, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.94277286529541, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.942194938659668, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6745    transfer 0.0005    finalize 0.0012    func 0.6771    
Accumulated time: func 0.6771    prepare 0.0011    bound 0.6745    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00110 (1), -0.00109 (1), 
length of domains: 2
Time: pickout 0.0026    decision 0.1669    set_bounds 0.0015    solve 0.6772    add 0.0023    
Accumulated time: pickout 0.0026    decision 0.1669    set_bounds 0.0015    solve 0.6772    add 0.0023    
Sorting batched domains takes 0.0011415481567382812 seconds.
Current (lb-rhs): -0.0011036396026611328
2 domains visited
Cumulative time: 0.9409604072570801

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.43it/s]
kfsb choice: tensor([1, 2], device='cuda:0')
Filtering time: 0.051930904388427734
Previous best: tensor(-0.00108910, device='cuda:0')
Previous worst: tensor(-0.00110364, device='cuda:0')
New worst: tensor(-0.00109386, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 193] [/input, 108] 
****** iter [0] loss: 11.884307861328125, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 11.882570266723633, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 11.88158893585205, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 11.881012916564941, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 11.880668640136719, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 11.880470275878906, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 11.880325317382812, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 11.880241394042969, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 11.880183219909668, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 11.880136489868164, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0021    bound 0.6676    transfer 0.0005    finalize 0.0015    func 0.6717    
Accumulated time: func 1.3489    prepare 0.0034    bound 1.3421    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00003 (2), -0.00003 (2), -0.00003 (2), -0.00003 (2), 
length of domains: 4
Time: pickout 0.0021    decision 0.1654    set_bounds 0.0017    solve 0.6718    add 0.0026    
Accumulated time: pickout 0.0047    decision 0.3324    set_bounds 0.0032    solve 1.3490    add 0.0049    
Sorting batched domains takes 0.001168966293334961 seconds.
Current (lb-rhs): -3.3855438232421875e-05
6 domains visited
Cumulative time: 1.7862563133239746

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.21it/s]
kfsb choice: tensor([2, 2, 2, 2], device='cuda:0')
Filtering time: 0.05047178268432617
Previous best: tensor(-3.21865082e-05, device='cuda:0')
Previous worst: tensor(-3.38554382e-05, device='cuda:0')
New worst: tensor(-3.21865082e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 255] [/input.7, 255] [/input.7, 255] [/input.7, 255] 
****** iter [0] loss: 23.760257720947266, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 23.760169982910156, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 23.760082244873047, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 23.760082244873047, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 23.760082244873047, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0030    bound 0.3993    transfer 0.0005    finalize 0.0021    func 0.4049    
Accumulated time: func 1.7538    prepare 0.0066    bound 1.7413    transfer 0.0015    finalize 0.0047    
length of domains: 0
Time: pickout 0.0023    decision 0.1651    set_bounds 0.0022    solve 0.4050    add 0.0001    
Accumulated time: pickout 0.0070    decision 0.4975    set_bounds 0.0054    solve 1.7539    add 0.0050    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.3611533641815186


Properties batch 29, size 1
Remaining timeout: 546.6901710033417
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15732669830322266.

Properties batch 30, size 1
Remaining timeout: 546.5867948532104
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-8.00000095], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-8.02344227]], device='cuda:0') need to verify.
torch allclose failed: norm 0.12072402238845825
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-8.02106094]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.94708729]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.84it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.0513453483581543
Previous best: tensor(-0.02105999, device='cuda:0')
Previous worst: tensor(-0.02105999, device='cuda:0')
New worst: tensor(-0.01960659, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 267] 
****** iter [0] loss: 16.03738021850586, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 16.02582550048828, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 16.01297950744629, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 16.008258819580078, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 16.00531768798828, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 16.00356674194336, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 16.002479553222656, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 16.001806259155273, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 16.001354217529297, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 16.001052856445312, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6510    transfer 0.0005    finalize 0.0012    func 0.6537    
Accumulated time: func 0.6537    prepare 0.0011    bound 0.6510    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00056 (1), -0.00050 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1648    set_bounds 0.0015    solve 0.6537    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1648    set_bounds 0.0015    solve 0.6537    add 0.0022    
Sorting batched domains takes 0.001062154769897461 seconds.
Current (lb-rhs): -0.0005550384521484375
2 domains visited
Cumulative time: 0.9128091335296631

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.93it/s]
kfsb choice: tensor([2, 0], device='cuda:0')
Filtering time: 0.05080866813659668
Previous best: tensor(-0.00049591, device='cuda:0')
Previous worst: tensor(-0.00055504, device='cuda:0')
New worst: tensor(-0.00051403, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 337] [/input.7, 251] 
****** iter [0] loss: 32.00171661376953, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 32.001243591308594, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 32.00065231323242, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 32.000396728515625, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 32.00022888183594, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 32.000144958496094, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 32.000091552734375, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 32.000064849853516, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 32.00004577636719, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 32.000030517578125, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0018    bound 0.6781    transfer 0.0005    finalize 0.0014    func 0.6819    
Accumulated time: func 1.3355    prepare 0.0031    bound 1.3291    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1629    set_bounds 0.0018    solve 0.6819    add 0.0023    
Accumulated time: pickout 0.0039    decision 0.3278    set_bounds 0.0033    solve 1.3356    add 0.0045    
Sorting batched domains takes 0.0010995864868164062 seconds.
Current (lb-rhs): -1.1444091796875e-05
6 domains visited
Cumulative time: 1.7651817798614502

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.25it/s]
kfsb choice: tensor([0, 2, 0, 0], device='cuda:0')
Filtering time: 0.050225257873535156
Previous best: tensor(-2.86102295e-06, device='cuda:0')
Previous worst: tensor(-1.14440918e-05, device='cuda:0')
New worst: tensor(-1.04904175e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] [/input.7, 251] [/input.3, 125] [/input.3, 161] 
****** iter [0] loss: 56.00004577636719, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 56.00004959106445, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 48.00000762939453, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 40.00000762939453, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 16.000003814697266, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0027    bound 0.4503    transfer 0.0005    finalize 0.0020    func 0.4556    
Accumulated time: func 1.7912    prepare 0.0059    bound 1.7794    transfer 0.0015    finalize 0.0047    
length of domains: 0
Time: pickout 0.0020    decision 0.1633    set_bounds 0.0022    solve 0.4557    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4911    set_bounds 0.0055    solve 1.7913    add 0.0046    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.388868570327759


Properties batch 31, size 1
Remaining timeout: 543.6190569400787
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00241831]], device='cuda:0') need to verify.
torch allclose failed: norm 0.007427435368299484
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00202837]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[15.88612938]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.29it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.05005216598510742
Previous best: tensor(-0.00202737, device='cuda:0')
Previous worst: tensor(-0.00202737, device='cuda:0')
New worst: tensor(1.92390216e-05, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 99] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0010    bound 0.0574    transfer 0.0004    finalize 0.0011    func 0.0599    
Accumulated time: func 0.0599    prepare 0.0011    bound 0.0574    transfer 0.0004    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1641    set_bounds 0.0015    solve 0.0600    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1641    set_bounds 0.0015    solve 0.0600    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.3155019283294678


Properties batch 32, size 1
Remaining timeout: 542.6947305202484
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.91000098], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.9099998474121094.

Properties batch 33, size 1
Remaining timeout: 542.590008020401
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9085480570793152.

Properties batch 34, size 1
Remaining timeout: 542.4899179935455
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.581873655319214.

Properties batch 35, size 1
Remaining timeout: 542.3897631168365
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02163927]], device='cuda:0') need to verify.
torch allclose failed: norm 0.23366761207580566
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01924384]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.70472431]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.52it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04950451850891113
Previous best: tensor(-0.01924284, device='cuda:0')
Previous worst: tensor(-0.01924284, device='cuda:0')
New worst: tensor(-0.01888157, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 340] 
****** iter [0] loss: 0.03731990605592728, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.02163979411125183, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.013027582317590714, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00810154527425766, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0052958084270358086, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0036235207226127386, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.002578658750280738, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0018984779017046094, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0014417999191209674, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.001125310081988573, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7606    transfer 0.0005    finalize 0.0011    func 0.7632    
Accumulated time: func 0.7632    prepare 0.0011    bound 0.7606    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00057 (1), -0.00055 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1625    set_bounds 0.0015    solve 0.7633    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1625    set_bounds 0.0015    solve 0.7633    add 0.0021    
Sorting batched domains takes 0.0009748935699462891 seconds.
Current (lb-rhs): -0.0005739314947277308
2 domains visited
Cumulative time: 1.0200176239013672

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.14it/s]
kfsb choice: tensor([2, 0], device='cuda:0')
Filtering time: 0.050267696380615234
Previous best: tensor(-0.00054938, device='cuda:0')
Previous worst: tensor(-0.00057393, device='cuda:0')
New worst: tensor(-0.00056641, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 251] [/input.7, 149] 
****** iter [0] loss: 0.0022046216763556004, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.001283677527680993, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0007386233191937208, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00045256459270603955, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.00029322446789592505, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00019922119099646807, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0001403891947120428, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00010230150655843318, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 7.687166362302378e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.937966489000246e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7640    transfer 0.0005    finalize 0.0014    func 0.7676    
Accumulated time: func 1.5309    prepare 0.0029    bound 1.5246    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1632    set_bounds 0.0017    solve 0.7677    add 0.0025    
Accumulated time: pickout 0.0038    decision 0.3257    set_bounds 0.0032    solve 1.5310    add 0.0046    
Sorting batched domains takes 0.0010426044464111328 seconds.
Current (lb-rhs): -1.4494922652374953e-05
6 domains visited
Cumulative time: 1.958561658859253

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.22it/s]
kfsb choice: tensor([0, 0, 2, 2], device='cuda:0')
Filtering time: 0.050354957580566406
Previous best: tensor(-1.34752445e-05, device='cuda:0')
Previous worst: tensor(-1.44949227e-05, device='cuda:0')
New worst: tensor(-1.42480203e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] [/input.7, 149] [/input.7, 251] [/input.3, 201] 
****** iter [0] loss: 0.00011463781993370503, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.336836668197066e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.578446194296703e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.095620038744528e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.2954357771377545e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.466904324042844e-06, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0025    bound 0.4595    transfer 0.0005    finalize 0.0020    func 0.4645    
Accumulated time: func 1.9954    prepare 0.0055    bound 1.9842    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1642    set_bounds 0.0022    solve 0.4646    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4899    set_bounds 0.0054    solve 1.9956    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.591919183731079


Properties batch 36, size 1
Remaining timeout: 539.2097084522247
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.77000093], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.77155042]], device='cuda:0') need to verify.
torch allclose failed: norm 0.1632559448480606
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.77138114]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.75228357]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.75it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.051249027252197266
Previous best: tensor(-0.00138021, device='cuda:0')
Previous worst: tensor(-0.00138021, device='cuda:0')
New worst: tensor(-0.00096583, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 5.5413923263549805, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.540668487548828, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 5.540174961090088, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.7700705528259277, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.770021677017212, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0010    bound 0.4463    transfer 0.0005    finalize 0.0012    func 0.4489    
Accumulated time: func 0.4489    prepare 0.0011    bound 0.4463    transfer 0.0005    finalize 0.0012    
length of domains: 0
Time: pickout 0.0021    decision 0.1640    set_bounds 0.0015    solve 0.4489    add 0.0001    
Accumulated time: pickout 0.0021    decision 0.1640    set_bounds 0.0015    solve 0.4489    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.703338623046875


Properties batch 37, size 1
Remaining timeout: 537.9107632637024
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00868734]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0059721264988183975
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00779970]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.46113873]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.00it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.050537824630737305
Previous best: tensor(-0.00779870, device='cuda:0')
Previous worst: tensor(-0.00779870, device='cuda:0')
New worst: tensor(-0.00764379, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 3] 
****** iter [0] loss: 0.015211942605674267, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.009652645327150822, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.005527474917471409, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0034107372630387545, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0022153896279633045, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0015084048500284553, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0010750272776931524, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0007941418443806469, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0006040458101779222, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0004720210563391447, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6701    transfer 0.0005    finalize 0.0012    func 0.6728    
Accumulated time: func 0.6728    prepare 0.0011    bound 0.6701    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00024 (1), -0.00023 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1624    set_bounds 0.0015    solve 0.6728    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1624    set_bounds 0.0015    solve 0.6728    add 0.0021    
Sorting batched domains takes 0.000993490219116211 seconds.
Current (lb-rhs): -0.00023694524134043604
2 domains visited
Cumulative time: 0.929617166519165

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.64it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.0491940975189209
Previous best: tensor(-0.00023308, device='cuda:0')
Previous worst: tensor(-0.00023695, device='cuda:0')
New worst: tensor(-0.00022833, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] [/input.7, 21] 
****** iter [0] loss: 0.0008669899543747306, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0005297469906508923, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0002988346968777478, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00018093493417836726, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.00011708988313330337, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 7.880602788645774e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 5.512639836524613e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 3.9912098145578057e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.9909435397712514e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 2.310801573912613e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7070    transfer 0.0005    finalize 0.0014    func 0.7105    
Accumulated time: func 1.3833    prepare 0.0029    bound 1.3770    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1621    set_bounds 0.0017    solve 0.7106    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3245    set_bounds 0.0032    solve 1.3834    add 0.0043    
Sorting batched domains takes 0.001033782958984375 seconds.
Current (lb-rhs): -4.885189355263719e-06
6 domains visited
Cumulative time: 1.8096356391906738

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.29it/s]
kfsb choice: tensor([1, 1, 0, 0], device='cuda:0')
Filtering time: 0.05011940002441406
Previous best: tensor(-4.52910399e-06, device='cuda:0')
Previous worst: tensor(-4.88518936e-06, device='cuda:0')
New worst: tensor(-4.76818468e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 116] [/input.7, 121] [/input, 133] [/input.7, 121] 
****** iter [0] loss: 4.371718023321591e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.7218244213145226e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 1.399336542817764e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.381891125784023e-06, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0025    bound 0.3272    transfer 0.0005    finalize 0.0020    func 0.3322    
Accumulated time: func 1.7155    prepare 0.0056    bound 1.7042    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0020    decision 0.1640    set_bounds 0.0022    solve 0.3323    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4885    set_bounds 0.0054    solve 1.7157    add 0.0044    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.3105010986328125


Properties batch 38, size 1
Remaining timeout: 535.0021522045135
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.06000090], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.06201792]], device='cuda:0') need to verify.
torch allclose failed: norm 0.024555331096053123
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.06170082]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[10.62628555]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.90it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.050753116607666016
Previous best: tensor(-0.00169992, device='cuda:0')
Previous worst: tensor(-0.00169992, device='cuda:0')
New worst: tensor(-0.00130606, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 480] 
****** iter [0] loss: 12.122421264648438, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 12.120367050170898, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.0602030754089355, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.060074806213379, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0010    bound 0.3605    transfer 0.0005    finalize 0.0012    func 0.3631    
Accumulated time: func 0.3631    prepare 0.0011    bound 0.3605    transfer 0.0005    finalize 0.0012    
length of domains: 0
Time: pickout 0.0020    decision 0.1634    set_bounds 0.0015    solve 0.3631    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.1634    set_bounds 0.0015    solve 0.3631    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6183567047119141


Properties batch 39, size 1
Remaining timeout: 533.7941310405731
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03643699]], device='cuda:0') need to verify.
torch allclose failed: norm 0.009115666151046753
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03268720]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[7.13009548]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 19.54it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.05440878868103027
Previous best: tensor(-0.03268620, device='cuda:0')
Previous worst: tensor(-0.03268620, device='cuda:0')
New worst: tensor(-0.03115813, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] 
****** iter [0] loss: 0.06123858690261841, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.036161333322525024, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.02221115678548813, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.014205686748027802, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.009482430294156075, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.006578383501619101, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00473932595923543, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00353342411108315, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0027129545342177153, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.002139445161446929, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0011    bound 0.6665    transfer 0.0005    finalize 0.0012    func 0.6693    
Accumulated time: func 0.6693    prepare 0.0012    bound 0.6665    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00110 (1), -0.00104 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1665    set_bounds 0.0016    solve 0.6693    add 0.0024    
Accumulated time: pickout 0.0019    decision 0.1665    set_bounds 0.0016    solve 0.6693    add 0.0024    
Sorting batched domains takes 0.0010898113250732422 seconds.
Current (lb-rhs): -0.001101010013371706
2 domains visited
Cumulative time: 0.9314870834350586

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.81it/s]
kfsb choice: tensor([2, 0], device='cuda:0')
Filtering time: 0.05130171775817871
Previous best: tensor(-0.00103644, device='cuda:0')
Previous worst: tensor(-0.00110101, device='cuda:0')
New worst: tensor(-0.00106479, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 353] [/input.7, 193] 
****** iter [0] loss: 0.003423509653657675, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.002081832615658641, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0012420827988535166, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0007857752498239279, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0005250769900158048, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00036523854942061007, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0002632698160596192, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0001957725762622431, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00014983760775066912, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0001177851008833386, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0021    bound 0.6569    transfer 0.0005    finalize 0.0015    func 0.6609    
Accumulated time: func 1.3302    prepare 0.0034    bound 1.3234    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00004 (2), -0.00003 (2), -0.00003 (2), -0.00002 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1650    set_bounds 0.0017    solve 0.6610    add 0.0024    
Accumulated time: pickout 0.0041    decision 0.3316    set_bounds 0.0033    solve 1.3303    add 0.0048    
Sorting batched domains takes 0.001134634017944336 seconds.
Current (lb-rhs): -3.6450270272325724e-05
6 domains visited
Cumulative time: 1.765364170074463

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.08it/s]
kfsb choice: tensor([0, 0, 0, 0], device='cuda:0')
Filtering time: 0.05064821243286133
Previous best: tensor(-1.66124373e-05, device='cuda:0')
Previous worst: tensor(-3.64502703e-05, device='cuda:0')
New worst: tensor(-3.59522892e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] [/input.7, 193] [/input, 65] [/input, 65] 
****** iter [0] loss: 0.000218229804886505, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0001285555918002501, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 7.797530270181596e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.858392640016973e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.2035954063758254e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.2177700884640217e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.5235811588354409e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.0576736713119317e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 7.1796393967815675e-06, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.729152351501398e-06, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0034    bound 0.6655    transfer 0.0005    finalize 0.0021    func 0.6716    
Accumulated time: func 2.0018    prepare 0.0070    bound 1.9889    transfer 0.0015    finalize 0.0047    
Current worst splitting domains lb-rhs (depth):
-0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), 
length of domains: 4
Time: pickout 0.0022    decision 0.1643    set_bounds 0.0021    solve 0.6717    add 0.0024    
Accumulated time: pickout 0.0063    decision 0.4959    set_bounds 0.0054    solve 2.0020    add 0.0072    
Sorting batched domains takes 0.0011374950408935547 seconds.
Current (lb-rhs): -2.6914665340882493e-07
10 domains visited
Cumulative time: 2.609746217727661

BaB round 4
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.20it/s]
kfsb choice: tensor([0, 0, 0, 0], device='cuda:0')
Filtering time: 0.05019211769104004
Previous best: tensor(-9.59570343e-08, device='cuda:0')
Previous worst: tensor(-2.69146653e-07, device='cuda:0')
New worst: tensor(-2.50322842e-07, device='cuda:0')
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input, 80] [/input, 184] [/input, 184] [/input, 184] 
****** iter [0] loss: 9.176397725241259e-06, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0037    bound 0.1242    transfer 0.0005    finalize 0.0021    func 0.1305    
Accumulated time: func 2.1323    prepare 0.0108    bound 2.1131    transfer 0.0020    finalize 0.0068    
length of domains: 0
Time: pickout 0.0023    decision 0.1625    set_bounds 0.0022    solve 0.1306    add 0.0001    
Accumulated time: pickout 0.0086    decision 0.6585    set_bounds 0.0076    solve 2.1325    add 0.0073    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 2.907764434814453


Properties batch 40, size 1
Remaining timeout: 530.2986435890198
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.42000103], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.4200000762939453.

Properties batch 41, size 1
Remaining timeout: 530.1942319869995
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.418196678161621.

Properties batch 42, size 1
Remaining timeout: 530.0936095714569
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 43, size 1
Remaining timeout: 529.9933149814606
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 44, size 1
Remaining timeout: 529.8932437896729
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.30000091], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.31939077]], device='cuda:0') need to verify.
torch allclose failed: norm 0.05593542754650116
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.31745529]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.82627821]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.13it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.05048346519470215
Previous best: tensor(-0.01745439, device='cuda:0')
Previous worst: tensor(-0.01745439, device='cuda:0')
New worst: tensor(-0.01719403, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 201] 
****** iter [0] loss: 6.633913040161133, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.620632171630859, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.612697601318359, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.6081719398498535, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.605449676513672, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.603786945343018, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 6.602712154388428, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.602028846740723, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.60155725479126, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.601238250732422, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6550    transfer 0.0005    finalize 0.0012    func 0.6576    
Accumulated time: func 0.6576    prepare 0.0011    bound 0.6550    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00062 (1), -0.00061 (1), 
length of domains: 2
Time: pickout 0.0021    decision 0.1629    set_bounds 0.0015    solve 0.6577    add 0.0022    
Accumulated time: pickout 0.0021    decision 0.1629    set_bounds 0.0015    solve 0.6577    add 0.0022    
Sorting batched domains takes 0.001079559326171875 seconds.
Current (lb-rhs): -0.0006234645843505859
2 domains visited
Cumulative time: 0.9137701988220215

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.68it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.0491335391998291
Previous best: tensor(-0.00061321, device='cuda:0')
Previous worst: tensor(-0.00062346, device='cuda:0')
New worst: tensor(-0.00061154, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 83] [/input.3, 83] 
****** iter [0] loss: 13.202413558959961, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 13.201452255249023, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 13.200902938842773, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 13.20054817199707, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 13.200407028198242, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 13.200268745422363, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 13.200201034545898, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 13.200132369995117, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 13.200132369995117, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 13.200065612792969, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0018    bound 0.6584    transfer 0.0005    finalize 0.0014    func 0.6621    
Accumulated time: func 1.3197    prepare 0.0030    bound 1.3133    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00002 (2), -0.00002 (2), -0.00002 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1614    set_bounds 0.0020    solve 0.6621    add 0.0024    
Accumulated time: pickout 0.0043    decision 0.3243    set_bounds 0.0034    solve 1.3198    add 0.0046    
Sorting batched domains takes 0.001142263412475586 seconds.
Current (lb-rhs): -1.5974044799804688e-05
6 domains visited
Cumulative time: 1.7453649044036865

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.19it/s]
kfsb choice: tensor([1, 0, 0, 2], device='cuda:0')
Filtering time: 0.050399065017700195
Previous best: tensor(-1.50203705e-05, device='cuda:0')
Previous worst: tensor(-1.59740448e-05, device='cuda:0')
New worst: tensor(-1.54972076e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 133] [/input.7, 212] [/input.7, 212] [/input.3, 242] 
****** iter [0] loss: 26.400123596191406, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 26.400123596191406, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0029    bound 0.1928    transfer 0.0006    finalize 0.0020    func 0.1984    
Accumulated time: func 1.5181    prepare 0.0061    bound 1.5061    transfer 0.0016    finalize 0.0046    
length of domains: 0
Time: pickout 0.0023    decision 0.1634    set_bounds 0.0022    solve 0.1985    add 0.0001    
Accumulated time: pickout 0.0065    decision 0.4877    set_bounds 0.0056    solve 1.5182    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.1121673583984375


Properties batch 45, size 1
Remaining timeout: 527.2014935016632
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00276084]], device='cuda:0') need to verify.
torch allclose failed: norm 0.017292669042944908
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00247506]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[8.48862839]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.35it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04975295066833496
Previous best: tensor(-0.00247406, device='cuda:0')
Previous worst: tensor(-0.00247406, device='cuda:0')
New worst: tensor(-0.00223950, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 0.0044728973880410194, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0027723084203898907, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0015460880240425467, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0009568093810230494, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0006273885956034064, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00042935097008012235, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00030501888250000775, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0002241446782136336, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00016977488121483475, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0001321714516961947, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6596    transfer 0.0005    finalize 0.0012    func 0.6623    
Accumulated time: func 0.6623    prepare 0.0011    bound 0.6596    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00007 (1), -0.00006 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1603    set_bounds 0.0015    solve 0.6623    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1603    set_bounds 0.0015    solve 0.6623    add 0.0022    
Sorting batched domains takes 0.0012056827545166016 seconds.
Current (lb-rhs): -6.537137232953683e-05
2 domains visited
Cumulative time: 0.915565013885498

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.65it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.04916834831237793
Previous best: tensor(-6.48000787e-05, device='cuda:0')
Previous worst: tensor(-6.53713723e-05, device='cuda:0')
New worst: tensor(-6.22048174e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 238] [/input.7, 238] 
****** iter [0] loss: 0.0002492038765922189, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00014659969019703567, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 8.173300011549145e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.853412974625826e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.0775219784118235e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.067621608148329e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.4457043107540812e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.047067780746147e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 7.82329425419448e-06, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.007872798363678e-06, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6593    transfer 0.0005    finalize 0.0014    func 0.6628    
Accumulated time: func 1.3251    prepare 0.0029    bound 1.3189    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1610    set_bounds 0.0017    solve 0.6629    add 0.0024    
Accumulated time: pickout 0.0041    decision 0.3213    set_bounds 0.0032    solve 1.3252    add 0.0046    
Sorting batched domains takes 0.0011439323425292969 seconds.
Current (lb-rhs): -5.395826292442507e-07
6 domains visited
Cumulative time: 1.7473785877227783

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.31it/s]
kfsb choice: tensor([2, 1, 2, 2], device='cuda:0')
Filtering time: 0.0523838996887207
Previous best: tensor(-4.68622943e-07, device='cuda:0')
Previous worst: tensor(-5.39582629e-07, device='cuda:0')
New worst: tensor(-4.24625227e-07, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 16] [/input.3, 16] [/input.7, 256] [/input.3, 16] 
****** iter [0] loss: 9.168094948108774e-06, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0029    bound 0.1355    transfer 0.0005    finalize 0.0020    func 0.1409    
Accumulated time: func 1.4660    prepare 0.0059    bound 1.4544    transfer 0.0014    finalize 0.0046    
length of domains: 0
Time: pickout 0.0022    decision 0.1653    set_bounds 0.0021    solve 0.1410    add 0.0001    
Accumulated time: pickout 0.0063    decision 0.4866    set_bounds 0.0053    solve 1.4661    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.058356761932373


Properties batch 46, size 1
Remaining timeout: 524.5589351654053
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 47, size 1
Remaining timeout: 524.4552397727966
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 48, size 1
Remaining timeout: 524.3551819324493
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.78000093], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.7773232460021973.

Properties batch 49, size 1
Remaining timeout: 524.2552647590637
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00938358]], device='cuda:0') need to verify.
torch allclose failed: norm 0.048839960247278214
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00840489]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.17747498]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.52it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04943728446960449
Previous best: tensor(-0.00840389, device='cuda:0')
Previous worst: tensor(-0.00840389, device='cuda:0')
New worst: tensor(-0.00818149, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 130] 
****** iter [0] loss: 0.016194378957152367, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.009436038322746754, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.005565312225371599, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.003463359083980322, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.002261101733893156, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0015370107721537352, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0010844995267689228, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0007923489902168512, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0005969663616269827, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0004632860654965043, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7358    transfer 0.0005    finalize 0.0012    func 0.7385    
Accumulated time: func 0.7385    prepare 0.0011    bound 0.7358    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00023 (1), -0.00023 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1604    set_bounds 0.0015    solve 0.7385    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1604    set_bounds 0.0015    solve 0.7385    add 0.0023    
Sorting batched domains takes 0.001104116439819336 seconds.
Current (lb-rhs): -0.00023426175175700337
2 domains visited
Cumulative time: 0.9922287464141846

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.70it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.04904913902282715
Previous best: tensor(-0.00022702, device='cuda:0')
Previous worst: tensor(-0.00023426, device='cuda:0')
New worst: tensor(-0.00019411, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 353] [/input.7, 353] 
****** iter [0] loss: 0.0006571993581019342, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0003741900436580181, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.000195400818483904, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00011311034904792905, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 7.017016469035298e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 4.531030572252348e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 3.0325056286528707e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.0885749108856544e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.4771721907891333e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.0724121239036322e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6622    transfer 0.0005    finalize 0.0014    func 0.6658    
Accumulated time: func 1.4043    prepare 0.0029    bound 1.3980    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1612    set_bounds 0.0017    solve 0.6659    add 0.0021    
Accumulated time: pickout 0.0041    decision 0.3216    set_bounds 0.0032    solve 1.4044    add 0.0044    
Sorting batched domains takes 0.0011570453643798828 seconds.
Current (lb-rhs): -2.8590734473254997e-06
6 domains visited
Cumulative time: 1.8268837928771973

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.20it/s]
kfsb choice: tensor([1, 1, 1, 1], device='cuda:0')
Filtering time: 0.05042600631713867
Previous best: tensor(-2.68610506e-07, device='cuda:0')
Previous worst: tensor(-2.85907345e-06, device='cuda:0')
New worst: tensor(-2.14720831e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 375] [/input.7, 375] [/input.3, 253] [/input.3, 253] 
****** iter [0] loss: 1.3725591998081654e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.385341526358388e-06, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0027    bound 0.1913    transfer 0.0005    finalize 0.0020    func 0.1966    
Accumulated time: func 1.6009    prepare 0.0057    bound 1.5893    transfer 0.0015    finalize 0.0047    
length of domains: 0
Time: pickout 0.0023    decision 0.1635    set_bounds 0.0021    solve 0.1967    add 0.0001    
Accumulated time: pickout 0.0063    decision 0.4852    set_bounds 0.0054    solve 1.6010    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.1918747425079346


Properties batch 50, size 1
Remaining timeout: 521.4826278686523
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.25000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.2499998807907104.

Properties batch 51, size 1
Remaining timeout: 521.3791131973267
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.248420238494873.

Properties batch 52, size 1
Remaining timeout: 521.2774503231049
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.50000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.5.

Properties batch 53, size 1
Remaining timeout: 521.176589012146
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.498129367828369.

Properties batch 54, size 1
Remaining timeout: 521.0763652324677
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-24.65000153], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-24.80708122]], device='cuda:0') need to verify.
torch allclose failed: norm 0.03317177668213844
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-24.79108047]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.54379654]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.66it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04897594451904297
Previous best: tensor(-0.14107895, device='cuda:0')
Previous worst: tensor(-0.14107895, device='cuda:0')
New worst: tensor(-0.13721657, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 49.57069396972656, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 49.46349334716797, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 49.40009689331055, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 49.362728118896484, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 49.341407775878906, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 49.32867431640625, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 49.320526123046875, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 49.315216064453125, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 49.31159973144531, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 49.30902862548828, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7044    transfer 0.0005    finalize 0.0012    func 0.7071    
Accumulated time: func 0.7071    prepare 0.0011    bound 0.7044    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00453 (1), -0.00449 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.7071    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.7071    add 0.0023    
Sorting batched domains takes 0.001107931137084961 seconds.
Current (lb-rhs): -0.0045318603515625
2 domains visited
Cumulative time: 0.9593970775604248

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.66it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.04900336265563965
Previous best: tensor(-0.00449371, device='cuda:0')
Previous worst: tensor(-0.00453186, device='cuda:0')
New worst: tensor(-0.00435638, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 3] [/input.7, 3] 
****** iter [0] loss: 98.61717987060547, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 98.61132049560547, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 98.60638427734375, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 98.6039047241211, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 98.60258483886719, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 98.60177612304688, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 98.6013412475586, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 98.60094451904297, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 98.60073852539062, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 98.60054779052734, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6784    transfer 0.0005    finalize 0.0015    func 0.6820    
Accumulated time: func 1.3891    prepare 0.0029    bound 1.3828    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00014 (2), -0.00014 (2), -0.00013 (2), -0.00013 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1609    set_bounds 0.0017    solve 0.6821    add 0.0025    
Accumulated time: pickout 0.0041    decision 0.3200    set_bounds 0.0032    solve 1.3893    add 0.0048    
Sorting batched domains takes 0.0011663436889648438 seconds.
Current (lb-rhs): -0.0001392364501953125
6 domains visited
Cumulative time: 1.8104591369628906

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.15it/s]
kfsb choice: tensor([1, 0, 1, 1], device='cuda:0')
Filtering time: 0.05046510696411133
Previous best: tensor(-0.00013351, device='cuda:0')
Previous worst: tensor(-0.00013924, device='cuda:0')
New worst: tensor(-0.00013161, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 130] [/input.7, 99] [/input.7, 130] [/input.7, 130] 
****** iter [0] loss: 197.2010498046875, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 197.20069885253906, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 197.2003173828125, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 197.2003173828125, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 197.2003173828125, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0023    bound 0.4494    transfer 0.0005    finalize 0.0020    func 0.4542    
Accumulated time: func 1.8434    prepare 0.0053    bound 1.8322    transfer 0.0016    finalize 0.0046    
length of domains: 0
Time: pickout 0.0023    decision 0.1633    set_bounds 0.0021    solve 0.4543    add 0.0001    
Accumulated time: pickout 0.0064    decision 0.4832    set_bounds 0.0054    solve 1.8435    add 0.0049    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.4329638481140137


Properties batch 55, size 1
Remaining timeout: 518.0578653812408
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.04147857427597046.

Properties batch 56, size 1
Remaining timeout: 517.9387013912201
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-16.24000168], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-16.31050110]], device='cuda:0') need to verify.
torch allclose failed: norm 0.26682350039482117
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-16.30345535]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[4.44304657]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.91it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.05083870887756348
Previous best: tensor(-0.06345367, device='cuda:0')
Previous worst: tensor(-0.06345367, device='cuda:0')
New worst: tensor(-0.05904198, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 32.59620666503906, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 32.55256652832031, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 32.523651123046875, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 32.5074577331543, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 32.49817657470703, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 32.492530822753906, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 32.4890251159668, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 32.48664855957031, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 32.48505783081055, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 32.484031677246094, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6555    transfer 0.0005    finalize 0.0012    func 0.6582    
Accumulated time: func 0.6582    prepare 0.0012    bound 0.6555    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00204 (1), -0.00199 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1625    set_bounds 0.0015    solve 0.6582    add 0.0028    
Accumulated time: pickout 0.0019    decision 0.1625    set_bounds 0.0015    solve 0.6582    add 0.0028    
Sorting batched domains takes 0.0022699832916259766 seconds.
Current (lb-rhs): -0.0020351409912109375
2 domains visited
Cumulative time: 0.9155588150024414

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.57it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.049307823181152344
Previous best: tensor(-0.00199318, device='cuda:0')
Previous worst: tensor(-0.00203514, device='cuda:0')
New worst: tensor(-0.00181961, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 3] [/input.7, 3] 
****** iter [0] loss: 64.96717834472656, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 64.96492767333984, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 64.96267700195312, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 64.96162414550781, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 64.96112060546875, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 64.96070861816406, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 64.96056365966797, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 64.96041870117188, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 64.96026611328125, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 64.96026611328125, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6608    transfer 0.0005    finalize 0.0014    func 0.6644    
Accumulated time: func 1.3226    prepare 0.0029    bound 1.3163    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00007 (2), -0.00007 (2), -0.00006 (2), -0.00006 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1614    set_bounds 0.0017    solve 0.6645    add 0.0025    
Accumulated time: pickout 0.0041    decision 0.3239    set_bounds 0.0033    solve 1.3227    add 0.0053    
Sorting batched domains takes 0.001157522201538086 seconds.
Current (lb-rhs): -6.67572021484375e-05
6 domains visited
Cumulative time: 1.74945068359375

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.31it/s]
kfsb choice: tensor([2, 1, 1, 2], device='cuda:0')
Filtering time: 0.05023360252380371
Previous best: tensor(-6.10351562e-05, device='cuda:0')
Previous worst: tensor(-6.67572021e-05, device='cuda:0')
New worst: tensor(-6.67572021e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 116] [/input.7, 61] [/input.7, 61] [/input.7, 61] 
****** iter [0] loss: 129.92050170898438, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 129.9202880859375, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 129.92025756835938, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 32.48006057739258, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0023    bound 0.3712    transfer 0.0005    finalize 0.0019    func 0.3759    
Accumulated time: func 1.6985    prepare 0.0053    bound 1.6875    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0023    decision 0.1633    set_bounds 0.0022    solve 0.3760    add 0.0001    
Accumulated time: pickout 0.0063    decision 0.4872    set_bounds 0.0054    solve 1.6987    add 0.0054    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.293576955795288


Properties batch 57, size 1
Remaining timeout: 515.0680539608002
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01367153]], device='cuda:0') need to verify.
torch allclose failed: norm 0.019535860046744347
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01230879]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[35.34814453]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.70it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.049012184143066406
Previous best: tensor(-0.01230779, device='cuda:0')
Previous worst: tensor(-0.01230779, device='cuda:0')
New worst: tensor(-0.01115186, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 0.0182693712413311, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.010565439239144325, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0055182501673698425, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00316656194627285, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0019276784732937813, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0012501957826316357, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.000843781977891922, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0005827473942190409, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00041365576907992363, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.00030064815655350685, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6577    transfer 0.0005    finalize 0.0012    func 0.6603    
Accumulated time: func 0.6603    prepare 0.0011    bound 0.6577    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00022 (1), -0.00007 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1595    set_bounds 0.0015    solve 0.6604    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1595    set_bounds 0.0015    solve 0.6604    add 0.0023    
Sorting batched domains takes 0.0010755062103271484 seconds.
Current (lb-rhs): -0.00022453001292888075
2 domains visited
Cumulative time: 0.9127609729766846

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.46it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04965949058532715
Previous best: tensor(-7.41181502e-05, device='cuda:0')
Previous worst: tensor(-0.00022453, device='cuda:0')
New worst: tensor(-0.00017190, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 121] [/input.3, 27] 
****** iter [0] loss: 0.00036824075505137444, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00039479671977460384, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0001291283406317234, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.7434172807261348e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.770546754822135e-06, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0019    bound 0.4488    transfer 0.0005    finalize 0.0014    func 0.4526    
Accumulated time: func 1.1129    prepare 0.0031    bound 1.1065    transfer 0.0009    finalize 0.0026    
length of domains: 0
Time: pickout 0.0022    decision 0.1628    set_bounds 0.0018    solve 0.4527    add 0.0001    
Accumulated time: pickout 0.0041    decision 0.3222    set_bounds 0.0032    solve 1.1130    add 0.0024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.5325627326965332


Properties batch 58, size 1
Remaining timeout: 512.95268034935
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.15000105], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.15455675]], device='cuda:0') need to verify.
torch allclose failed: norm 2.530081033706665
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.15410233]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[5.35127640]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.01it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.050815582275390625
Previous best: tensor(-0.00410128, device='cuda:0')
Previous worst: tensor(-0.00410128, device='cuda:0')
New worst: tensor(-0.00387049, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] 
****** iter [0] loss: 10.307121276855469, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 10.30475902557373, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 10.302437782287598, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 10.30147933959961, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 10.300813674926758, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 10.300488471984863, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 10.300342559814453, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 10.30024528503418, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 10.300178527832031, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 10.300130844116211, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6546    transfer 0.0005    finalize 0.0012    func 0.6573    
Accumulated time: func 0.6573    prepare 0.0012    bound 0.6546    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00009 (1), -0.00004 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1627    set_bounds 0.0015    solve 0.6574    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1627    set_bounds 0.0015    solve 0.6574    add 0.0023    
Sorting batched domains takes 0.0011019706726074219 seconds.
Current (lb-rhs): -8.821487426757812e-05
2 domains visited
Cumulative time: 0.9129180908203125

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.67it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04917621612548828
Previous best: tensor(-4.05311584e-05, device='cuda:0')
Previous worst: tensor(-8.82148743e-05, device='cuda:0')
New worst: tensor(-6.58035278e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 131] 
****** iter [0] loss: 15.450138092041016, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 15.450250625610352, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 10.30005168914795, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 5.150003433227539, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0020    bound 0.3689    transfer 0.0005    finalize 0.0015    func 0.3728    
Accumulated time: func 1.0302    prepare 0.0033    bound 1.0235    transfer 0.0009    finalize 0.0026    
length of domains: 0
Time: pickout 0.0022    decision 0.1614    set_bounds 0.0016    solve 0.3729    add 0.0001    
Accumulated time: pickout 0.0041    decision 0.3241    set_bounds 0.0031    solve 1.0303    add 0.0024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.4513938426971436


Properties batch 59, size 1
Remaining timeout: 510.91189885139465
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01840260]], device='cuda:0') need to verify.
torch allclose failed: norm 0.04630252718925476
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01655069]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[6.89378500]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.85it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.05111432075500488
Previous best: tensor(-0.01654969, device='cuda:0')
Previous worst: tensor(-0.01654969, device='cuda:0')
New worst: tensor(-0.01623907, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] 
****** iter [0] loss: 0.03162907063961029, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.019106030464172363, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.011473995633423328, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.007302548736333847, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.004877249710261822, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.003387538716197014, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0024354790803045034, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0018098496366292238, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0013859155587852001, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0010901837376877666, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6698    transfer 0.0005    finalize 0.0012    func 0.6724    
Accumulated time: func 0.6724    prepare 0.0012    bound 0.6698    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00056 (1), -0.00053 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1632    set_bounds 0.0015    solve 0.6725    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1632    set_bounds 0.0015    solve 0.6725    add 0.0022    
Sorting batched domains takes 0.0011034011840820312 seconds.
Current (lb-rhs): -0.0005589055363088846
2 domains visited
Cumulative time: 0.9281973838806152

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.75it/s]
kfsb choice: tensor([0, 2], device='cuda:0')
Filtering time: 0.048886775970458984
Previous best: tensor(-0.00052928, device='cuda:0')
Previous worst: tensor(-0.00055891, device='cuda:0')
New worst: tensor(-0.00054696, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 46] [/input.3, 46] 
****** iter [0] loss: 0.0020978006068617105, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0012589582474902272, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0007617877563461661, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0004801719915121794, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.00031642706017009914, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0002183219912694767, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00015666875697206706, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00011635101691354066, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 8.909260941436514e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 7.007272506598383e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6860    transfer 0.0005    finalize 0.0014    func 0.6895    
Accumulated time: func 1.3619    prepare 0.0029    bound 1.3557    transfer 0.0010    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00002 (2), -0.00002 (2), -0.00002 (2), 
length of domains: 4
Time: pickout 0.0022    decision 0.1609    set_bounds 0.0017    solve 0.6896    add 0.0026    
Accumulated time: pickout 0.0041    decision 0.3241    set_bounds 0.0032    solve 1.3620    add 0.0048    
Sorting batched domains takes 0.0010292530059814453 seconds.
Current (lb-rhs): -1.745083136484027e-05
6 domains visited
Cumulative time: 1.7866284847259521

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.39it/s]
kfsb choice: tensor([2, 1, 2, 0], device='cuda:0')
Filtering time: 0.04991912841796875
Previous best: tensor(-1.57334252e-05, device='cuda:0')
Previous worst: tensor(-1.74508314e-05, device='cuda:0')
New worst: tensor(-1.72401342e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 13] [/input.3, 146] [/input.3, 146] [/input.3, 242] 
****** iter [0] loss: 0.00013591528113465756, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 8.033338963286951e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.889173578703776e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.066576027777046e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.0219980797264725e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.39202948048478e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 9.953062544809654e-06, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.0096067601116374e-06, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0, lr: 0.4253815112908927 pruning_in_iteration open status: None

all verified at 8th iter

Time: prepare 0.0023    bound 0.6515    transfer 0.0005    finalize 0.0019    func 0.6562    
Accumulated time: func 2.0182    prepare 0.0053    bound 2.0072    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0021    decision 0.1625    set_bounds 0.0022    solve 0.6563    add 0.0001    
Accumulated time: pickout 0.0062    decision 0.4866    set_bounds 0.0054    solve 2.0183    add 0.0049    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.6100966930389404


Properties batch 60, size 1
Remaining timeout: 507.72050762176514
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-21.40000153], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -16.848054885864258.

Properties batch 61, size 1
Remaining timeout: 507.61713552474976
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 11.892434120178223.

Properties batch 62, size 1
Remaining timeout: 507.51815271377563
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.30000114], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -4.300000190734863.

Properties batch 63, size 1
Remaining timeout: 507.41902446746826
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.297648906707764.

Properties batch 64, size 1
Remaining timeout: 507.31997442245483
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.88000107], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.88115692]], device='cuda:0') need to verify.
torch allclose failed: norm 0.015506747178733349
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.88100529]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.57173252]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.61it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04924154281616211
Previous best: tensor(-0.00100422, device='cuda:0')
Previous worst: tensor(-0.00100422, device='cuda:0')
New worst: tensor(-0.00055122, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 370] 
****** iter [0] loss: 5.760991096496582, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.76093053817749, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 5.760062217712402, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0010    bound 0.2773    transfer 0.0005    finalize 0.0012    func 0.2799    
Accumulated time: func 0.2799    prepare 0.0011    bound 0.2773    transfer 0.0005    finalize 0.0012    
length of domains: 0
Time: pickout 0.0020    decision 0.1601    set_bounds 0.0015    solve 0.2800    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.1601    set_bounds 0.0015    solve 0.2800    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.5297818183898926


Properties batch 65, size 1
Remaining timeout: 506.21481943130493
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01191778]], device='cuda:0') need to verify.
torch allclose failed: norm 0.16642393171787262
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01071404]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.52930427]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.70it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04902958869934082
Previous best: tensor(-0.01071304, device='cuda:0')
Previous worst: tensor(-0.01071304, device='cuda:0')
New worst: tensor(-0.01051066, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] 
****** iter [0] loss: 0.020475581288337708, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.012325662188231945, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0074530490674078465, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.004741601645946503, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0031375002581626177, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0021606716327369213, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0015499158762395382, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.001151197124272585, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0008818106725811958, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0006938729202374816, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6478    transfer 0.0005    finalize 0.0011    func 0.6504    
Accumulated time: func 0.6504    prepare 0.0011    bound 0.6478    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00036 (1), -0.00034 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1592    set_bounds 0.0015    solve 0.6505    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1592    set_bounds 0.0015    solve 0.6505    add 0.0021    
Sorting batched domains takes 0.0010371208190917969 seconds.
Current (lb-rhs): -0.0003567265812307596
2 domains visited
Cumulative time: 0.9022727012634277

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.79it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.048891305923461914
Previous best: tensor(-0.00033515, device='cuda:0')
Previous worst: tensor(-0.00035673, device='cuda:0')
New worst: tensor(-0.00034885, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 46] [/input.3, 46] 
****** iter [0] loss: 0.0013334420509636402, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0008347178809344769, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0004828541132155806, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00030251278076320887, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0001994742196984589, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00013742154987994581, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 9.831972420215607e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 7.282797014340758e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.563627928495407e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.368611553218216e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6845    transfer 0.0005    finalize 0.0014    func 0.6881    
Accumulated time: func 1.3385    prepare 0.0028    bound 1.3323    transfer 0.0010    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1619    set_bounds 0.0018    solve 0.6881    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3211    set_bounds 0.0033    solve 1.3386    add 0.0044    
Sorting batched domains takes 0.0010695457458496094 seconds.
Current (lb-rhs): -1.0662581189535558e-05
6 domains visited
Cumulative time: 1.7598788738250732

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.17it/s]
kfsb choice: tensor([1, 0, 0, 2], device='cuda:0')
Filtering time: 0.050434112548828125
Previous best: tensor(-9.28444206e-06, device='cuda:0')
Previous worst: tensor(-1.06625812e-05, device='cuda:0')
New worst: tensor(-1.04392166e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 13] [/input, 133] [/input, 133] [/input.3, 104] 
****** iter [0] loss: 8.408910071011633e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.885561065748334e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.89572162728291e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.801317193894647e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.184080247185193e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 4.462869583221618e-06, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0027    bound 0.4987    transfer 0.0005    finalize 0.0020    func 0.5039    
Accumulated time: func 1.8425    prepare 0.0057    bound 1.8310    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1634    set_bounds 0.0022    solve 0.5040    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.4845    set_bounds 0.0055    solve 1.8426    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.4319560527801514


Properties batch 66, size 1
Remaining timeout: 503.2034273147583
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.60000086], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -4.599999904632568.

Properties batch 67, size 1
Remaining timeout: 503.09919476509094
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.597808361053467.

Properties batch 68, size 1
Remaining timeout: 502.9994065761566
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.54000092], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -5.539999961853027.

Properties batch 69, size 1
Remaining timeout: 502.8986587524414
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.537529468536377.

Properties batch 70, size 1
Remaining timeout: 502.7993230819702
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.23000097], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -5.219978332519531.

Properties batch 71, size 1
Remaining timeout: 502.6991219520569
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03550740]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0332646407186985
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03188068]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[5.66359997]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.65it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.0491485595703125
Previous best: tensor(-0.03187969, device='cuda:0')
Previous worst: tensor(-0.03187969, device='cuda:0')
New worst: tensor(-0.03118092, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 0.06228689104318619, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.03770848363637924, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.02273881994187832, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.014445166103541851, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.009633750654757023, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0066827149130403996, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00479784095659852, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0035606417804956436, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0027240354102104902, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.00214244332164526, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6489    transfer 0.0005    finalize 0.0012    func 0.6516    
Accumulated time: func 0.6516    prepare 0.0011    bound 0.6489    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00108 (1), -0.00106 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1605    set_bounds 0.0015    solve 0.6516    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1605    set_bounds 0.0015    solve 0.6516    add 0.0022    
Sorting batched domains takes 0.0010025501251220703 seconds.
Current (lb-rhs): -0.001077898545190692
2 domains visited
Cumulative time: 0.9056241512298584

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.64it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04917144775390625
Previous best: tensor(-0.00106254, device='cuda:0')
Previous worst: tensor(-0.00107790, device='cuda:0')
New worst: tensor(-0.00106446, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] [/input.3, 52] 
****** iter [0] loss: 0.004178233444690704, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0025368703063577414, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0015138395829126239, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0009580865153111517, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0006347970920614898, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0004382982151582837, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00031427922658622265, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00023311172844842076, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00017827757983468473, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.00014013837790116668, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6512    transfer 0.0005    finalize 0.0014    func 0.6548    
Accumulated time: func 1.3064    prepare 0.0029    bound 1.3001    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00003 (2), -0.00003 (2), -0.00003 (2), -0.00003 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1615    set_bounds 0.0018    solve 0.6549    add 0.0023    
Accumulated time: pickout 0.0039    decision 0.3220    set_bounds 0.0033    solve 1.3065    add 0.0045    
Sorting batched domains takes 0.0010755062103271484 seconds.
Current (lb-rhs): -3.487052890704945e-05
6 domains visited
Cumulative time: 1.72957444190979

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.23it/s]
kfsb choice: tensor([2, 2, 0, 2], device='cuda:0')
Filtering time: 0.05034756660461426
Previous best: tensor(-3.33859862e-05, device='cuda:0')
Previous worst: tensor(-3.48705289e-05, device='cuda:0')
New worst: tensor(-3.39737344e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 3] [/input.7, 3] [/input.3, 46] [/input.7, 3] 
****** iter [0] loss: 0.0002725654630921781, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00016238829994108528, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 9.770810720510781e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.158059841254726e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 4.059985076310113e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.795010368572548e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.0005094484076835e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.4818110685155261e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.1315638403175399e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 8.877770596882328e-06, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0029    bound 0.6554    transfer 0.0005    finalize 0.0020    func 0.6609    
Accumulated time: func 1.9673    prepare 0.0059    bound 1.9555    transfer 0.0016    finalize 0.0045    
Current worst splitting domains lb-rhs (depth):
-0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), 
length of domains: 8
Time: pickout 0.0020    decision 0.1630    set_bounds 0.0021    solve 0.6609    add 0.0031    
Accumulated time: pickout 0.0059    decision 0.4850    set_bounds 0.0055    solve 1.9674    add 0.0075    
Sorting batched domains takes 0.0016832351684570312 seconds.
Current (lb-rhs): -1.4764725619897945e-07
14 domains visited
Cumulative time: 2.5628151893615723

BaB round 4
batch: 8
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.72it/s]
kfsb choice: tensor([0, 0, 0, 0, 2, 1, 1, 1], device='cuda:0')
Filtering time: 0.051863670349121094
Previous best: tensor(-6.84573251e-08, device='cuda:0')
Previous worst: tensor(-1.47647256e-07, device='cuda:0')
New worst: tensor(-1.28121769e-07, device='cuda:0')
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 46] [/input.3, 46] [/input.3, 46] [/input.3, 46] [/input.7, 3] [/input.3, 46] [/input.7, 131] [/input.7, 3] 
****** iter [0] loss: 1.7229274817509577e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0051    bound 0.1243    transfer 0.0006    finalize 0.0036    func 0.1336    
Accumulated time: func 2.1009    prepare 0.0112    bound 2.0798    transfer 0.0021    finalize 0.0081    
length of domains: 0
Time: pickout 0.0022    decision 0.1656    set_bounds 0.0028    solve 0.1337    add 0.0002    
Accumulated time: pickout 0.0081    decision 0.6506    set_bounds 0.0082    solve 2.1011    add 0.0077    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
14 domains visited
Cumulative time: 2.867722749710083


Properties batch 72, size 1
Remaining timeout: 499.2512536048889
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.36000109], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -4.360000133514404.

Properties batch 73, size 1
Remaining timeout: 499.1464488506317
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.357735633850098.

Properties batch 74, size 1
Remaining timeout: 499.0465543270111
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.58000088], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.59602928]], device='cuda:0') need to verify.
torch allclose failed: norm 0.032761164009571075
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.59440851]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.72131538]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.69it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.049082279205322266
Previous best: tensor(-0.01440763, device='cuda:0')
Previous worst: tensor(-0.01440763, device='cuda:0')
New worst: tensor(-0.01408434, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] 
****** iter [0] loss: 9.187288284301758, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 9.176580429077148, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 9.170072555541992, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 9.166425704956055, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 9.16425895690918, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 9.162965774536133, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 9.162147521972656, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 9.161596298217773, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 9.16120719909668, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 9.160951614379883, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6938    transfer 0.0005    finalize 0.0012    func 0.6964    
Accumulated time: func 0.6964    prepare 0.0011    bound 0.6938    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00049 (1), -0.00046 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.6965    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.6965    add 0.0021    
Sorting batched domains takes 0.0010411739349365234 seconds.
Current (lb-rhs): -0.000492095947265625
2 domains visited
Cumulative time: 0.9489355087280273

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.59it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.04929804801940918
Previous best: tensor(-0.00045824, device='cuda:0')
Previous worst: tensor(-0.00049210, device='cuda:0')
New worst: tensor(-0.00048637, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input, 108] 
****** iter [0] loss: 18.321866989135742, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 18.321128845214844, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 18.32069969177246, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 18.320457458496094, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 18.320280075073242, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 18.320219039916992, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 18.320165634155273, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 18.32010841369629, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 18.320106506347656, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 18.320053100585938, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0019    bound 0.6518    transfer 0.0005    finalize 0.0015    func 0.6558    
Accumulated time: func 1.3522    prepare 0.0031    bound 1.3456    transfer 0.0010    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1609    set_bounds 0.0018    solve 0.6558    add 0.0024    
Accumulated time: pickout 0.0040    decision 0.3205    set_bounds 0.0033    solve 1.3523    add 0.0045    
Sorting batched domains takes 0.0010898113250732422 seconds.
Current (lb-rhs): -1.33514404296875e-05
6 domains visited
Cumulative time: 1.773308277130127

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.27it/s]
kfsb choice: tensor([0, 0, 0, 0], device='cuda:0')
Filtering time: 0.05019640922546387
Previous best: tensor(-1.19209290e-05, device='cuda:0')
Previous worst: tensor(-1.33514404e-05, device='cuda:0')
New worst: tensor(-1.28746033e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 108] [/input, 108] [/input.3, 242] [/input.3, 242] 
****** iter [0] loss: 36.64010238647461, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 36.640106201171875, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0030    bound 0.1897    transfer 0.0005    finalize 0.0021    func 0.1954    
Accumulated time: func 1.5476    prepare 0.0063    bound 1.5353    transfer 0.0016    finalize 0.0048    
length of domains: 0
Time: pickout 0.0020    decision 0.1627    set_bounds 0.0022    solve 0.1954    add 0.0001    
Accumulated time: pickout 0.0060    decision 0.4832    set_bounds 0.0055    solve 1.5477    add 0.0046    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.1361465454101562


Properties batch 75, size 1
Remaining timeout: 496.3335247039795
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00602124]], device='cuda:0') need to verify.
torch allclose failed: norm 0.04756803810596466
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00544296]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[9.13993645]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.66it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04914402961730957
Previous best: tensor(-0.00544196, device='cuda:0')
Previous worst: tensor(-0.00544196, device='cuda:0')
New worst: tensor(-0.00513093, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 0.010173514485359192, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.005879334174096584, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0034415889531373978, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0021168612875044346, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0013737757690250874, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0009326480794698, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0006580655463039875, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00048050156328827143, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00036221195477992296, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0002809184370562434, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6556    transfer 0.0005    finalize 0.0012    func 0.6583    
Accumulated time: func 0.6583    prepare 0.0011    bound 0.6556    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00014 (1), -0.00014 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1596    set_bounds 0.0015    solve 0.6584    add 0.0024    
Accumulated time: pickout 0.0020    decision 0.1596    set_bounds 0.0015    solve 0.6584    add 0.0024    
Sorting batched domains takes 0.0009949207305908203 seconds.
Current (lb-rhs): -0.00014040795213077217
2 domains visited
Cumulative time: 0.9113991260528564

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.46it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.04976987838745117
Previous best: tensor(-0.00013851, device='cuda:0')
Previous worst: tensor(-0.00014041, device='cuda:0')
New worst: tensor(-0.00012352, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 370] [/input.7, 370] 
****** iter [0] loss: 0.0004244821611791849, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00025653239572420716, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00013689088518731296, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 7.745028415229172e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 4.6625020331703126e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.9422408260870725e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.93091545952484e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.3130658771842718e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 9.217106708092615e-06, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.758884071838111e-06, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7028    transfer 0.0005    finalize 0.0015    func 0.7068    
Accumulated time: func 1.3651    prepare 0.0032    bound 1.3583    transfer 0.0011    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 3
Time: pickout 0.0020    decision 0.1621    set_bounds 0.0017    solve 0.7068    add 0.0022    
Accumulated time: pickout 0.0040    decision 0.3217    set_bounds 0.0032    solve 1.3652    add 0.0046    
Sorting batched domains takes 0.0010411739349365234 seconds.
Current (lb-rhs): -1.4054279517949908e-06
5 domains visited
Cumulative time: 1.7877116203308105

BaB round 3
batch: 3
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.51it/s]
kfsb choice: tensor([0, 0, 1], device='cuda:0')
Filtering time: 0.04957914352416992
Previous best: tensor(-2.79067081e-09, device='cuda:0')
Previous worst: tensor(-1.40542795e-06, device='cuda:0')
New worst: tensor(-1.04808748e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] [/input.3, 52] [/input.3, 52] 
****** iter [0] loss: 7.5957359513267875e-06, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0025    bound 0.1361    transfer 0.0006    finalize 0.0018    func 0.1409    
Accumulated time: func 1.5060    prepare 0.0059    bound 1.4944    transfer 0.0016    finalize 0.0044    
length of domains: 0
Time: pickout 0.0022    decision 0.1631    set_bounds 0.0020    solve 0.1410    add 0.0001    
Accumulated time: pickout 0.0062    decision 0.4847    set_bounds 0.0052    solve 1.5062    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 2.0963029861450195


Properties batch 76, size 1
Remaining timeout: 493.6508893966675
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.41000104], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -3.4100000858306885.

Properties batch 77, size 1
Remaining timeout: 493.5314106941223
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.407961130142212.

Properties batch 78, size 1
Remaining timeout: 493.4313790798187
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-8.81000137], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -8.8100004196167.

Properties batch 79, size 1
Remaining timeout: 493.3311972618103
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.80599594116211.

Properties batch 80, size 1
Remaining timeout: 493.23213052749634
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.67000103], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.68292999]], device='cuda:0') need to verify.
torch allclose failed: norm 0.1259494125843048
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.68162274]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.76645851]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.59it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.049343109130859375
Previous best: tensor(-0.01162171, device='cuda:0')
Previous worst: tensor(-0.01162171, device='cuda:0')
New worst: tensor(-0.01149964, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] 
****** iter [0] loss: 5.362966537475586, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.354137420654297, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 5.348631858825684, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 5.345479488372803, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 5.343638896942139, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 5.3425092697143555, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 5.341814041137695, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 5.3413519859313965, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.341032028198242, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.340806007385254, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7477    transfer 0.0005    finalize 0.0011    func 0.7503    
Accumulated time: func 0.7503    prepare 0.0011    bound 0.7477    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00040 (1), -0.00040 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1599    set_bounds 0.0016    solve 0.7504    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1599    set_bounds 0.0016    solve 0.7504    add 0.0021    
Sorting batched domains takes 0.0010268688201904297 seconds.
Current (lb-rhs): -0.0004024505615234375
2 domains visited
Cumulative time: 1.0031111240386963

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.67it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.049193382263183594
Previous best: tensor(-0.00040150, device='cuda:0')
Previous worst: tensor(-0.00040245, device='cuda:0')
New worst: tensor(-0.00039411, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] [/input.3, 253] 
****** iter [0] loss: 10.681495666503906, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 10.680906295776367, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 10.680543899536133, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 10.680344581604004, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 10.680227279663086, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 10.68014907836914, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 10.680110931396484, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 10.680072784423828, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 10.680072784423828, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 10.680036544799805, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7425    transfer 0.0005    finalize 0.0014    func 0.7460    
Accumulated time: func 1.4963    prepare 0.0029    bound 1.4901    transfer 0.0010    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1608    set_bounds 0.0018    solve 0.7461    add 0.0021    
Accumulated time: pickout 0.0039    decision 0.3208    set_bounds 0.0033    solve 1.4964    add 0.0042    
Sorting batched domains takes 0.0010502338409423828 seconds.
Current (lb-rhs): -8.821487426757812e-06
6 domains visited
Cumulative time: 1.9172945022583008

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.23it/s]
kfsb choice: tensor([0, 0, 0, 0], device='cuda:0')
Filtering time: 0.05032467842102051
Previous best: tensor(-7.62939453e-06, device='cuda:0')
Previous worst: tensor(-8.82148743e-06, device='cuda:0')
New worst: tensor(-8.34465027e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 227] [/input.3, 227] [/input, 108] [/input.3, 227] 
****** iter [0] loss: 21.360071182250977, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 21.360069274902344, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 21.360069274902344, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0025    bound 0.2897    transfer 0.0005    finalize 0.0020    func 0.2947    
Accumulated time: func 1.7910    prepare 0.0055    bound 1.7798    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1639    set_bounds 0.0023    solve 0.2948    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.4847    set_bounds 0.0056    solve 1.7912    add 0.0043    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.380664110183716


Properties batch 81, size 1
Remaining timeout: 490.2745966911316
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00072145]], device='cuda:0') need to verify.
torch allclose failed: norm 0.007552727125585079
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00062805]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[6.49343538]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.63it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04911613464355469
Previous best: tensor(-0.00062705, device='cuda:0')
Previous worst: tensor(-0.00062705, device='cuda:0')
New worst: tensor(-0.00020885, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 0.0003885515034198761, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0010    bound 0.1338    transfer 0.0005    finalize 0.0011    func 0.1365    
Accumulated time: func 0.1365    prepare 0.0011    bound 0.1338    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1598    set_bounds 0.0015    solve 0.1365    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1598    set_bounds 0.0015    solve 0.1365    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.3865065574645996


Properties batch 82, size 1
Remaining timeout: 489.3073842525482
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.21000099], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.22545576]], device='cuda:0') need to verify.
torch allclose failed: norm 0.03582681342959404
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.22390509]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.65291882]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.75it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.048937082290649414
Previous best: tensor(-0.01390409, device='cuda:0')
Previous worst: tensor(-0.01390409, device='cuda:0')
New worst: tensor(-0.01352882, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] 
****** iter [0] loss: 12.447036743164062, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 12.436399459838867, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 12.429798126220703, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 12.426284790039062, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.424182891845703, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 12.422913551330566, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 12.422077178955078, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 12.421540260314941, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 12.42119312286377, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 12.42094612121582, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7449    transfer 0.0005    finalize 0.0012    func 0.7476    
Accumulated time: func 0.7476    prepare 0.0011    bound 0.7449    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00047 (1), -0.00047 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7476    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7476    add 0.0021    
Sorting batched domains takes 0.0009829998016357422 seconds.
Current (lb-rhs): -0.00047397613525390625
2 domains visited
Cumulative time: 0.9995396137237549

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.0490419864654541
Previous best: tensor(-0.00046968, device='cuda:0')
Previous worst: tensor(-0.00047398, device='cuda:0')
New worst: tensor(-0.00046349, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 201] [/input.3, 201] 
****** iter [0] loss: 24.841848373413086, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 24.8410701751709, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 24.840654373168945, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 24.840421676635742, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 24.840253829956055, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 24.84020233154297, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 24.84014892578125, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 24.840099334716797, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 24.84009552001953, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 24.840049743652344, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7376    transfer 0.0005    finalize 0.0014    func 0.7412    
Accumulated time: func 1.4887    prepare 0.0029    bound 1.4825    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1608    set_bounds 0.0017    solve 0.7412    add 0.0020    
Accumulated time: pickout 0.0038    decision 0.3204    set_bounds 0.0032    solve 1.4888    add 0.0042    
Sorting batched domains takes 0.0010187625885009766 seconds.
Current (lb-rhs): -1.1444091796875e-05
6 domains visited
Cumulative time: 1.9086670875549316

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.29it/s]
kfsb choice: tensor([2, 1, 2, 1], device='cuda:0')
Filtering time: 0.05019545555114746
Previous best: tensor(-1.09672546e-05, device='cuda:0')
Previous worst: tensor(-1.14440918e-05, device='cuda:0')
New worst: tensor(-1.14440918e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] [/input, 108] [/input.3, 253] [/input, 108] 
****** iter [0] loss: 49.680084228515625, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 49.68008804321289, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0028    bound 0.2113    transfer 0.0005    finalize 0.0020    func 0.2165    
Accumulated time: func 1.7052    prepare 0.0058    bound 1.6938    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1626    set_bounds 0.0022    solve 0.2166    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4830    set_bounds 0.0054    solve 1.7054    add 0.0043    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.2924180030822754


Properties batch 83, size 1
Remaining timeout: 486.4355149269104
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01261524]], device='cuda:0') need to verify.
torch allclose failed: norm 0.002758514368906617
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01135086]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[10.84169006]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.70it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.048958778381347656
Previous best: tensor(-0.01134985, device='cuda:0')
Previous worst: tensor(-0.01134985, device='cuda:0')
New worst: tensor(-0.01108974, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] 
****** iter [0] loss: 0.02180149219930172, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.013051439076662064, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.007834162563085556, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.004998012911528349, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0033193505369126797, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0022929708939045668, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0016455261502414942, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0012209004489704967, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0009333601919934154, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0007333982503041625, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7416    transfer 0.0005    finalize 0.0011    func 0.7442    
Accumulated time: func 0.7442    prepare 0.0011    bound 0.7416    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00038 (1), -0.00035 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7443    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7443    add 0.0020    
Sorting batched domains takes 0.0010192394256591797 seconds.
Current (lb-rhs): -0.0003765642177313566
2 domains visited
Cumulative time: 0.9964311122894287

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.61it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.049214839935302734
Previous best: tensor(-0.00035483, device='cuda:0')
Previous worst: tensor(-0.00037656, device='cuda:0')
New worst: tensor(-0.00036689, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] [/input.3, 27] 
****** iter [0] loss: 0.0014167041517794132, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0008433995535597205, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0005147106712684035, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00032126481528393924, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.00020979308465030044, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00014432029274757951, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00010350015509175137, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 7.68410463933833e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.880582466488704e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.62470343336463e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7451    transfer 0.0005    finalize 0.0014    func 0.7487    
Accumulated time: func 1.4929    prepare 0.0028    bound 1.4867    transfer 0.0010    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1605    set_bounds 0.0018    solve 0.7487    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3200    set_bounds 0.0033    solve 1.4930    add 0.0044    
Sorting batched domains takes 0.0010464191436767578 seconds.
Current (lb-rhs): -1.0863455827347934e-05
6 domains visited
Cumulative time: 1.9131066799163818

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.45it/s]
kfsb choice: tensor([0, 0, 1, 0], device='cuda:0')
Filtering time: 0.04980325698852539
Previous best: tensor(-1.02952690e-05, device='cuda:0')
Previous worst: tensor(-1.08634558e-05, device='cuda:0')
New worst: tensor(-1.05474319e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 46] [/input.3, 46] [/input.3, 46] [/input.3, 46] 
****** iter [0] loss: 8.859643276082352e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.1243296184111387e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.081250179093331e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.9299252016935498e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.264301135961432e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 8.632614481030032e-06, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0022    bound 0.5174    transfer 0.0005    finalize 0.0019    func 0.5221    
Accumulated time: func 2.0150    prepare 0.0052    bound 2.0042    transfer 0.0015    finalize 0.0044    
length of domains: 0
Time: pickout 0.0020    decision 0.1622    set_bounds 0.0022    solve 0.5222    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4823    set_bounds 0.0055    solve 2.0152    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.6021103858947754


Properties batch 84, size 1
Remaining timeout: 483.2407612800598
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-11.27000141], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-11.36941814]], device='cuda:0') need to verify.
torch allclose failed: norm 0.029304221272468567
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-11.35921001]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.50073624]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.63it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.049257755279541016
Previous best: tensor(-0.08920860, device='cuda:0')
Previous worst: tensor(-0.08920860, device='cuda:0')
New worst: tensor(-0.08493042, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 114] 
****** iter [0] loss: 22.701231002807617, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 22.637983322143555, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 22.600078582763672, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 22.57840347290039, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 22.565658569335938, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 22.557828903198242, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 22.552845001220703, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 22.549633026123047, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 22.547388076782227, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 22.545854568481445, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7404    transfer 0.0005    finalize 0.0012    func 0.7431    
Accumulated time: func 0.7431    prepare 0.0011    bound 0.7404    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00308 (1), -0.00277 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1599    set_bounds 0.0015    solve 0.7432    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1599    set_bounds 0.0015    solve 0.7432    add 0.0023    
Sorting batched domains takes 0.0009868144989013672 seconds.
Current (lb-rhs): -0.0030803680419921875
2 domains visited
Cumulative time: 0.996161699295044

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.73it/s]
kfsb choice: tensor([1, 2], device='cuda:0')
Filtering time: 0.04898500442504883
Previous best: tensor(-0.00277138, device='cuda:0')
Previous worst: tensor(-0.00308037, device='cuda:0')
New worst: tensor(-0.00300694, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input.3, 253] 
****** iter [0] loss: 45.091163635253906, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 45.08671569824219, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 45.08404541015625, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 45.082733154296875, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 45.0816650390625, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 45.08123779296875, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 45.08081817626953, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 45.08061218261719, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 45.08060836791992, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 45.08039855957031, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7459    transfer 0.0005    finalize 0.0014    func 0.7499    
Accumulated time: func 1.4930    prepare 0.0033    bound 1.4863    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00010 (2), -0.00010 (2), -0.00010 (2), -0.00009 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1613    set_bounds 0.0017    solve 0.7499    add 0.0024    
Accumulated time: pickout 0.0039    decision 0.3211    set_bounds 0.0032    solve 1.4931    add 0.0046    
Sorting batched domains takes 0.0010409355163574219 seconds.
Current (lb-rhs): -0.0001049041748046875
6 domains visited
Cumulative time: 1.9147939682006836

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.34it/s]
kfsb choice: tensor([0, 1, 1, 0], device='cuda:0')
Filtering time: 0.05000710487365723
Previous best: tensor(-9.44137573e-05, device='cuda:0')
Previous worst: tensor(-0.00010490, device='cuda:0')
New worst: tensor(-0.00010204, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input.3, 227] [/input.3, 227] [/input, 108] 
****** iter [0] loss: 90.16077423095703, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 90.16039276123047, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 90.16038513183594, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0033    bound 0.2887    transfer 0.0005    finalize 0.0020    func 0.2946    
Accumulated time: func 1.7876    prepare 0.0067    bound 1.7750    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0020    decision 0.1640    set_bounds 0.0022    solve 0.2947    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.4851    set_bounds 0.0054    solve 1.7878    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.3780975341796875


Properties batch 85, size 1
Remaining timeout: 480.2825655937195
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5641794204711914.

Properties batch 86, size 1
Remaining timeout: 480.1805465221405
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.12000108], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.0018248956184834242.

Properties batch 87, size 1
Remaining timeout: 480.0810010433197
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5941157016641228e-07.

Properties batch 88, size 1
Remaining timeout: 479.9808945655823
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.42000103], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.45128942]], device='cuda:0') need to verify.
torch allclose failed: norm 0.02857222780585289
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.44787645]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[-0.07480049]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.71it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.049018144607543945
Previous best: tensor(-0.02787542, device='cuda:0')
Previous worst: tensor(-0.02787542, device='cuda:0')
New worst: tensor(-0.02686524, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 114] 
****** iter [0] loss: 6.892557144165039, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.871465682983398, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.859249114990234, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.852212429046631, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.84806489944458, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.845558166503906, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 6.843979835510254, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.842949390411377, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.842253684997559, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.841774940490723, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7281    transfer 0.0005    finalize 0.0012    func 0.7308    
Accumulated time: func 0.7308    prepare 0.0011    bound 0.7281    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00091 (1), -0.00086 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.7308    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.7308    add 0.0021    
Sorting batched domains takes 0.0009949207305908203 seconds.
Current (lb-rhs): -0.0009081363677978516
2 domains visited
Cumulative time: 0.9829368591308594

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.04888200759887695
Previous best: tensor(-0.00086474, device='cuda:0')
Previous worst: tensor(-0.00090814, device='cuda:0')
New worst: tensor(-0.00088882, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 227] [/input.3, 242] 
****** iter [0] loss: 13.683483123779297, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 13.682053565979004, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 13.68124008178711, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 13.680776596069336, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 13.680517196655273, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 13.680343627929688, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 13.680266380310059, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 13.680190086364746, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 13.680139541625977, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 13.68011474609375, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7377    transfer 0.0005    finalize 0.0015    func 0.7416    
Accumulated time: func 1.4724    prepare 0.0032    bound 1.4658    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00003 (2), -0.00003 (2), -0.00003 (2), -0.00003 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1607    set_bounds 0.0016    solve 0.7417    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3200    set_bounds 0.0031    solve 1.4725    add 0.0044    
Sorting batched domains takes 0.0010509490966796875 seconds.
Current (lb-rhs): -2.8133392333984375e-05
6 domains visited
Cumulative time: 1.8926599025726318

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.37it/s]
kfsb choice: tensor([0, 0, 0, 2], device='cuda:0')
Filtering time: 0.04991340637207031
Previous best: tensor(-2.67028809e-05, device='cuda:0')
Previous worst: tensor(-2.81333923e-05, device='cuda:0')
New worst: tensor(-2.74181366e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input.3, 242] [/input, 108] [/input.3, 253] 
****** iter [0] loss: 27.360218048095703, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 27.360126495361328, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 27.36008071899414, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 27.360042572021484, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 27.36003875732422, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 27.36003875732422, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0032    bound 0.5178    transfer 0.0005    finalize 0.0020    func 0.5236    
Accumulated time: func 1.9960    prepare 0.0066    bound 1.9835    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0020    decision 0.1619    set_bounds 0.0022    solve 0.5236    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4819    set_bounds 0.0053    solve 1.9962    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.582810878753662


Properties batch 89, size 1
Remaining timeout: 476.82129192352295
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5544456243515015.

Properties batch 90, size 1
Remaining timeout: 476.7194616794586
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.68000078], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.68896055]], device='cuda:0') need to verify.
torch allclose failed: norm 0.01605006493628025
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.68806696]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[4.35563660]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.62it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04917621612548828
Previous best: tensor(-0.00806618, device='cuda:0')
Previous worst: tensor(-0.00806618, device='cuda:0')
New worst: tensor(-0.00763273, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 11.375204086303711, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 11.368766784667969, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 11.365296363830566, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 11.363309860229492, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 11.362160682678223, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 11.361471176147461, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 11.361032485961914, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 11.360757827758789, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 11.36057186126709, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 11.360443115234375, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7437    transfer 0.0005    finalize 0.0011    func 0.7463    
Accumulated time: func 0.7463    prepare 0.0011    bound 0.7437    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00022 (1), -0.00022 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1597    set_bounds 0.0015    solve 0.7464    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1597    set_bounds 0.0015    solve 0.7464    add 0.0023    
Sorting batched domains takes 0.0009756088256835938 seconds.
Current (lb-rhs): -0.00022268295288085938
2 domains visited
Cumulative time: 0.998964786529541

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.92it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.04844188690185547
Previous best: tensor(-0.00021935, device='cuda:0')
Previous worst: tensor(-0.00022268, device='cuda:0')
New worst: tensor(-0.00022173, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 459] [/input.7, 459] 
****** iter [0] loss: 22.720806121826172, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 22.720462799072266, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 22.720266342163086, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 22.720165252685547, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 22.72010612487793, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 22.720073699951172, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 22.720043182373047, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 22.72003936767578, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 22.72002410888672, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 22.720020294189453, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7465    transfer 0.0005    finalize 0.0015    func 0.7505    
Accumulated time: func 1.4968    prepare 0.0032    bound 1.4902    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1592    set_bounds 0.0016    solve 0.7505    add 0.0024    
Accumulated time: pickout 0.0039    decision 0.3189    set_bounds 0.0031    solve 1.4969    add 0.0046    
Sorting batched domains takes 0.0010387897491455078 seconds.
Current (lb-rhs): -5.7220458984375e-06
6 domains visited
Cumulative time: 1.915980577468872

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.40it/s]
kfsb choice: tensor([0, 0, 2, 1], device='cuda:0')
Filtering time: 0.04988574981689453
Previous best: tensor(-3.33786011e-06, device='cuda:0')
Previous worst: tensor(-5.72204590e-06, device='cuda:0')
New worst: tensor(-6.19888306e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 131] [/input, 133] [/input.7, 121] 
****** iter [0] loss: 34.08002853393555, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 34.08001708984375, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 22.720012664794922, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 11.360004425048828, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0033    bound 0.3655    transfer 0.0005    finalize 0.0020    func 0.3713    
Accumulated time: func 1.8681    prepare 0.0066    bound 1.8558    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0019    decision 0.1622    set_bounds 0.0022    solve 0.3714    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4811    set_bounds 0.0053    solve 1.8683    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.454103946685791


Properties batch 91, size 1
Remaining timeout: 473.68918204307556
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01475168]], device='cuda:0') need to verify.
torch allclose failed: norm 0.03797440975904465
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01328668]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[8.31865978]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.81it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.048876285552978516
Previous best: tensor(-0.01328568, device='cuda:0')
Previous worst: tensor(-0.01328568, device='cuda:0')
New worst: tensor(-0.01269802, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 0.02523236908018589, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.015271100215613842, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.009156275540590286, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.005816282704472542, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.003857132513076067, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00265428121201694, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0018980822060257196, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0014031470054760575, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.001070621656253934, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0008396863704547286, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7435    transfer 0.0005    finalize 0.0011    func 0.7461    
Accumulated time: func 0.7461    prepare 0.0011    bound 0.7435    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00042 (1), -0.00042 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.7461    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.7461    add 0.0022    
Sorting batched domains takes 0.0009720325469970703 seconds.
Current (lb-rhs): -0.00042221101466566324
2 domains visited
Cumulative time: 0.9979116916656494

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.83it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04878950119018555
Previous best: tensor(-0.00041548, device='cuda:0')
Previous worst: tensor(-0.00042221, device='cuda:0')
New worst: tensor(-0.00041562, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input, 139] [/input.3, 16] 
****** iter [0] loss: 0.0016482319915667176, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0010123243555426598, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0006016687257215381, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0003737283404916525, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.00024326704442501068, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00016630579193588346, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00011852766328956932, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 8.771054854150862e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.692732858937234e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.249600508250296e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7421    transfer 0.0005    finalize 0.0015    func 0.7461    
Accumulated time: func 1.4922    prepare 0.0032    bound 1.4856    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1600    set_bounds 0.0017    solve 0.7461    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3194    set_bounds 0.0031    solve 1.4923    add 0.0044    
Sorting batched domains takes 0.0010254383087158203 seconds.
Current (lb-rhs): -1.2300566595513374e-05
6 domains visited
Cumulative time: 1.9112908840179443

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.36it/s]
kfsb choice: tensor([2, 2, 2, 0], device='cuda:0')
Filtering time: 0.05000734329223633
Previous best: tensor(-1.18538810e-05, device='cuda:0')
Previous worst: tensor(-1.23005666e-05, device='cuda:0')
New worst: tensor(-1.20619679e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 104] [/input.3, 46] [/input.3, 104] [/input, 139] 
****** iter [0] loss: 0.00010044740338344127, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.083555854274891e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.586419188650325e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.2038331735529937e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.4223505786503665e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 9.670889085100498e-06, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0036    bound 0.5168    transfer 0.0005    finalize 0.0021    func 0.5231    
Accumulated time: func 2.0152    prepare 0.0070    bound 2.0025    transfer 0.0014    finalize 0.0047    
length of domains: 0
Time: pickout 0.0020    decision 0.1629    set_bounds 0.0021    solve 0.5231    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4822    set_bounds 0.0052    solve 2.0154    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.6017351150512695


Properties batch 92, size 1
Remaining timeout: 470.50979828834534
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.70000076], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.71946859]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0026989285834133625
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.71748972]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.24166489]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.048941850662231445
Previous best: tensor(-0.01748896, device='cuda:0')
Previous worst: tensor(-0.01748896, device='cuda:0')
New worst: tensor(-0.01681709, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] 
****** iter [0] loss: 13.431191444396973, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 13.419258117675781, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 13.411258697509766, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 13.407026290893555, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 13.404638290405273, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 13.403188705444336, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 13.4022798538208, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 13.401689529418945, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 13.401287078857422, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 13.40101432800293, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7273    transfer 0.0005    finalize 0.0011    func 0.7299    
Accumulated time: func 0.7299    prepare 0.0011    bound 0.7273    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00055 (1), -0.00046 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7300    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7300    add 0.0021    
Sorting batched domains takes 0.0009911060333251953 seconds.
Current (lb-rhs): -0.000553131103515625
2 domains visited
Cumulative time: 0.9815788269042969

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.78it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04885506629943848
Previous best: tensor(-0.00045919, device='cuda:0')
Previous worst: tensor(-0.00055313, device='cuda:0')
New worst: tensor(-0.00052881, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] [/input.7, 149] 
****** iter [0] loss: 26.80176544189453, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 26.801067352294922, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 26.80062484741211, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 26.80038833618164, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 26.80023956298828, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 26.8001651763916, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 26.800127029418945, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 26.800094604492188, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 26.800058364868164, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 26.800060272216797, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7285    transfer 0.0005    finalize 0.0014    func 0.7320    
Accumulated time: func 1.4619    prepare 0.0028    bound 1.4558    transfer 0.0010    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1601    set_bounds 0.0017    solve 0.7320    add 0.0024    
Accumulated time: pickout 0.0038    decision 0.3191    set_bounds 0.0032    solve 1.4620    add 0.0044    
Sorting batched domains takes 0.0010356903076171875 seconds.
Current (lb-rhs): -1.7642974853515625e-05
6 domains visited
Cumulative time: 1.8811562061309814

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.46it/s]
kfsb choice: tensor([0, 0, 2, 0], device='cuda:0')
Filtering time: 0.04966115951538086
Previous best: tensor(-1.14440918e-05, device='cuda:0')
Previous worst: tensor(-1.76429749e-05, device='cuda:0')
New worst: tensor(-1.71661377e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input.3, 242] [/input.3, 52] [/input, 139] 
****** iter [0] loss: 53.60011291503906, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 53.60005187988281, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 53.60005187988281, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 53.60004425048828, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0030    bound 0.3547    transfer 0.0005    finalize 0.0020    func 0.3602    
Accumulated time: func 1.8221    prepare 0.0060    bound 1.8105    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1619    set_bounds 0.0020    solve 0.3603    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4810    set_bounds 0.0052    solve 1.8223    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.4077091217041016


Properties batch 93, size 1
Remaining timeout: 467.5237045288086
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00354098]], device='cuda:0') need to verify.
torch allclose failed: norm 0.08222614973783493
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00299997]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[12.85464668]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.79it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.048711538314819336
Previous best: tensor(-0.00299897, device='cuda:0')
Previous worst: tensor(-0.00299897, device='cuda:0')
New worst: tensor(-0.00252356, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 288] 
****** iter [0] loss: 0.004971986636519432, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0059269508346915245, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.001374074723571539, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0004836898297071457, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 8.007604628801346e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0010    bound 0.4358    transfer 0.0005    finalize 0.0011    func 0.4385    
Accumulated time: func 0.4385    prepare 0.0012    bound 0.4358    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.4385    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.4385    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6865661144256592


Properties batch 94, size 1
Remaining timeout: 466.25704526901245
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-14.01000118], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-14.06171989]], device='cuda:0') need to verify.
torch allclose failed: norm 0.02279752679169178
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-14.05652905]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[4.31937599]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.75it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.048920631408691406
Previous best: tensor(-0.04652786, device='cuda:0')
Previous worst: tensor(-0.04652786, device='cuda:0')
New worst: tensor(-0.04376221, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 28.10633659362793, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 28.074600219726562, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 28.052515029907227, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 28.039791107177734, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 28.03300666809082, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 28.028982162475586, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 28.02649688720703, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 28.02487564086914, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 28.02374839782715, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 28.022974014282227, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7460    transfer 0.0005    finalize 0.0012    func 0.7487    
Accumulated time: func 0.7487    prepare 0.0011    bound 0.7460    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00150 (1), -0.00147 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1592    set_bounds 0.0015    solve 0.7488    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1592    set_bounds 0.0015    solve 0.7488    add 0.0021    
Sorting batched domains takes 0.001012563705444336 seconds.
Current (lb-rhs): -0.0015039443969726562
2 domains visited
Cumulative time: 1.0003893375396729

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.93it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.0510096549987793
Previous best: tensor(-0.00146770, device='cuda:0')
Previous worst: tensor(-0.00150394, device='cuda:0')
New worst: tensor(-0.00147057, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 317] [/input.3, 16] 
****** iter [0] loss: 56.045719146728516, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 56.04349899291992, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 56.04210662841797, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 56.04133224487305, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 56.04081726074219, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 56.040565490722656, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 56.04045104980469, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 56.04033279418945, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 56.04021453857422, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 56.04021453857422, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0019    bound 0.7703    transfer 0.0005    finalize 0.0015    func 0.7743    
Accumulated time: func 1.5230    prepare 0.0032    bound 1.5163    transfer 0.0010    finalize 0.0027    
Current worst splitting domains lb-rhs (depth):
-0.00005 (2), -0.00005 (2), -0.00005 (2), -0.00005 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1673    set_bounds 0.0018    solve 0.7744    add 0.0024    
Accumulated time: pickout 0.0039    decision 0.3265    set_bounds 0.0033    solve 1.5232    add 0.0045    
Sorting batched domains takes 0.0011179447174072266 seconds.
Current (lb-rhs): -5.435943603515625e-05
6 domains visited
Cumulative time: 1.9498066902160645

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.48it/s]
kfsb choice: tensor([0, 0, 0, 2], device='cuda:0')
Filtering time: 0.0523228645324707
Previous best: tensor(-5.05447388e-05, device='cuda:0')
Previous worst: tensor(-5.43594360e-05, device='cuda:0')
New worst: tensor(-5.34057617e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 16] [/input, 139] [/input.7, 317] [/input.3, 253] 
****** iter [0] loss: 112.08041381835938, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 112.08023071289062, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 112.08020782470703, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 56.04010009765625, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0033    bound 0.3776    transfer 0.0005    finalize 0.0021    func 0.3836    
Accumulated time: func 1.9066    prepare 0.0066    bound 1.8939    transfer 0.0016    finalize 0.0048    
length of domains: 0
Time: pickout 0.0021    decision 0.1697    set_bounds 0.0023    solve 0.3836    add 0.0001    
Accumulated time: pickout 0.0060    decision 0.4963    set_bounds 0.0056    solve 1.9068    add 0.0046    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.5079691410064697


Properties batch 95, size 1
Remaining timeout: 463.1639440059662
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01317060]], device='cuda:0') need to verify.
torch allclose failed: norm 0.03750300034880638
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01182943]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[28.84577179]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.87it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.050995826721191406
Previous best: tensor(-0.01182843, device='cuda:0')
Previous worst: tensor(-0.01182843, device='cuda:0')
New worst: tensor(-0.01072389, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 0.021437473595142365, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.012217758223414421, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.006991527043282986, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.004124242812395096, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0025850688107311726, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0017041717655956745, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0011747695971280336, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0008396587800234556, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0006206098478287458, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0004717702977359295, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7586    transfer 0.0005    finalize 0.0012    func 0.7613    
Accumulated time: func 0.7613    prepare 0.0011    bound 0.7586    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00024 (1), -0.00023 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1655    set_bounds 0.0016    solve 0.7614    add 0.0023    
Accumulated time: pickout 0.0020    decision 0.1655    set_bounds 0.0016    solve 0.7614    add 0.0023    
Sorting batched domains takes 0.0010044574737548828 seconds.
Current (lb-rhs): -0.00023639017308596522
2 domains visited
Cumulative time: 1.0231456756591797

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.84it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.05107235908508301
Previous best: tensor(-0.00023338, device='cuda:0')
Previous worst: tensor(-0.00023639, device='cuda:0')
New worst: tensor(-0.00021634, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 459] 
****** iter [0] loss: 0.0005949559854343534, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00021663028746843338, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 9.43915219977498e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.984008799307048e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.6583187971264124e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 8.799004717729986e-06, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 4.4338376028463244e-06, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.9021390471607447e-06, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0, lr: 0.4253815112908927 pruning_in_iteration open status: None

all verified at 8th iter

Time: prepare 0.0021    bound 0.6726    transfer 0.0005    finalize 0.0015    func 0.6767    
Accumulated time: func 1.4380    prepare 0.0034    bound 1.4312    transfer 0.0010    finalize 0.0026    
length of domains: 0
Time: pickout 0.0020    decision 0.1667    set_bounds 0.0017    solve 0.6768    add 0.0001    
Accumulated time: pickout 0.0040    decision 0.3323    set_bounds 0.0032    solve 1.4381    add 0.0024    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.8706977367401123


Properties batch 96, size 1
Remaining timeout: 460.67675375938416
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.68000078], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.69973946]], device='cuda:0') need to verify.
torch allclose failed: norm 0.4310744106769562
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.69771242]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.12963390]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.86it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.05093193054199219
Previous best: tensor(-0.01771164, device='cuda:0')
Previous worst: tensor(-0.01771164, device='cuda:0')
New worst: tensor(-0.01662874, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] 
****** iter [0] loss: 13.391901016235352, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 13.380451202392578, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 13.371574401855469, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 13.367195129394531, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 13.364728927612305, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 13.363228797912598, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 13.362312316894531, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 13.361698150634766, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 13.361300468444824, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 13.361019134521484, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6843    transfer 0.0005    finalize 0.0011    func 0.6870    
Accumulated time: func 0.6870    prepare 0.0011    bound 0.6843    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00054 (1), -0.00048 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1654    set_bounds 0.0016    solve 0.6871    add 0.0021    
Accumulated time: pickout 0.0020    decision 0.1654    set_bounds 0.0016    solve 0.6871    add 0.0021    
Sorting batched domains takes 0.0009856224060058594 seconds.
Current (lb-rhs): -0.0005402565002441406
2 domains visited
Cumulative time: 0.948455810546875

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.78it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.04883146286010742
Previous best: tensor(-0.00047731, device='cuda:0')
Previous worst: tensor(-0.00054026, device='cuda:0')
New worst: tensor(-0.00052881, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 99] [/input.7, 193] 
****** iter [0] loss: 26.721914291381836, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 26.721149444580078, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 26.72068214416504, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 26.72040557861328, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 26.720260620117188, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 26.720190048217773, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 26.72011947631836, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 26.7200870513916, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 26.7200870513916, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 26.720056533813477, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7370    transfer 0.0005    finalize 0.0014    func 0.7405    
Accumulated time: func 1.4275    prepare 0.0029    bound 1.4213    transfer 0.0010    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1600    set_bounds 0.0017    solve 0.7405    add 0.0023    
Accumulated time: pickout 0.0039    decision 0.3255    set_bounds 0.0033    solve 1.4276    add 0.0043    
Sorting batched domains takes 0.0010268688201904297 seconds.
Current (lb-rhs): -1.52587890625e-05
6 domains visited
Cumulative time: 1.856344223022461

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.30it/s]
kfsb choice: tensor([1, 1, 0, 2], device='cuda:0')
Filtering time: 0.05006766319274902
Previous best: tensor(-1.19209290e-05, device='cuda:0')
Previous worst: tensor(-1.52587891e-05, device='cuda:0')
New worst: tensor(-1.47819519e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] [/input.3, 146] [/input.7, 99] [/input.3, 46] 
****** iter [0] loss: 53.44010543823242, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 53.44005584716797, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 53.4400520324707, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 33.400028228759766, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0027    bound 0.3659    transfer 0.0005    finalize 0.0020    func 0.3711    
Accumulated time: func 1.7986    prepare 0.0057    bound 1.7872    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1622    set_bounds 0.0022    solve 0.3711    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.4877    set_bounds 0.0055    solve 1.7987    add 0.0044    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.3942909240722656


Properties batch 97, size 1
Remaining timeout: 457.68322706222534
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.001503152772784233.

Properties batch 98, size 1
Remaining timeout: 457.58092045783997
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.26000118], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.27887249]], device='cuda:0') need to verify.
torch allclose failed: norm 0.019105618819594383
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.27697420]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.75878906]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.79it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04876852035522461
Previous best: tensor(-0.01697302, device='cuda:0')
Previous worst: tensor(-0.01697302, device='cuda:0')
New worst: tensor(-0.01592731, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] 
****** iter [0] loss: 12.551034927368164, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 12.54261589050293, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 12.531660079956055, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 12.52663803100586, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.524306297302246, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 12.522932052612305, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 12.522079467773438, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 12.521537780761719, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 12.521164894104004, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 12.520910263061523, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7347    transfer 0.0005    finalize 0.0011    func 0.7373    
Accumulated time: func 0.7373    prepare 0.0011    bound 0.7347    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00046 (1), -0.00045 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7374    add 0.0019    
Accumulated time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7374    add 0.0019    
Sorting batched domains takes 0.0009884834289550781 seconds.
Current (lb-rhs): -0.00045871734619140625
2 domains visited
Cumulative time: 0.9890792369842529

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.80it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.048958778381347656
Previous best: tensor(-0.00044870, device='cuda:0')
Previous worst: tensor(-0.00045872, device='cuda:0')
New worst: tensor(-0.00037098, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] [/input.7, 149] 
****** iter [0] loss: 25.04140853881836, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 25.04105567932129, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 25.040504455566406, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 25.040287017822266, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 25.040176391601562, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 25.040109634399414, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 25.040075302124023, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 25.040050506591797, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 25.040042877197266, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 25.040035247802734, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0017    bound 0.6858    transfer 0.0005    finalize 0.0014    func 0.6894    
Accumulated time: func 1.4267    prepare 0.0029    bound 1.4205    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1615    set_bounds 0.0017    solve 0.6895    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3205    set_bounds 0.0032    solve 1.4268    add 0.0042    
Sorting batched domains takes 0.001065969467163086 seconds.
Current (lb-rhs): -8.58306884765625e-06
6 domains visited
Cumulative time: 1.8474066257476807

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.28it/s]
kfsb choice: tensor([0, 0, 1, 0], device='cuda:0')
Filtering time: 0.05019998550415039
Previous best: tensor(-6.19888306e-06, device='cuda:0')
Previous worst: tensor(-8.58306885e-06, device='cuda:0')
New worst: tensor(-5.72204590e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 256] [/input.7, 256] [/input.7, 212] [/input.7, 256] 
****** iter [0] loss: 37.56003189086914, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 37.56002426147461, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 12.520002365112305, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 18.78000259399414, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.520002365112305, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0023    bound 0.4328    transfer 0.0005    finalize 0.0019    func 0.4375    
Accumulated time: func 1.8642    prepare 0.0053    bound 1.8532    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1624    set_bounds 0.0022    solve 0.4376    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4829    set_bounds 0.0054    solve 1.8644    add 0.0043    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.451951503753662


Properties batch 99, size 1
Remaining timeout: 454.5539975166321
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00324001]], device='cuda:0') need to verify.
torch allclose failed: norm 0.004165740683674812
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00285283]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[11.72437191]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04884934425354004
Previous best: tensor(-0.00285183, device='cuda:0')
Previous worst: tensor(-0.00285183, device='cuda:0')
New worst: tensor(-0.00242209, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 435] 
****** iter [0] loss: 0.004817347042262554, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.01130717620253563, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0026382231153547764, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0010289289057254791, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0005268759559839964, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00027903064619749784, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0001776351418811828, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00012279528891667724, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 7.979595102369785e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.0490092942491174e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7324    transfer 0.0005    finalize 0.0012    func 0.7351    
Accumulated time: func 0.7351    prepare 0.0011    bound 0.7324    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00003 (1), -0.00001 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.7351    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.7351    add 0.0021    
Sorting batched domains takes 0.0009758472442626953 seconds.
Current (lb-rhs): -3.3193711715284735e-05
2 domains visited
Cumulative time: 0.9865009784698486

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.75it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.04891490936279297
Previous best: tensor(-5.29638100e-06, device='cuda:0')
Previous worst: tensor(-3.31937117e-05, device='cuda:0')
New worst: tensor(-6.50500488e-06, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 131] 
****** iter [0] loss: 7.5051793828606606e-06, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 8.423387771472335e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0016    bound 0.2097    transfer 0.0005    finalize 0.0014    func 0.2132    
Accumulated time: func 0.9483    prepare 0.0028    bound 0.9421    transfer 0.0010    finalize 0.0025    
length of domains: 0
Time: pickout 0.0019    decision 0.1603    set_bounds 0.0018    solve 0.2133    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3192    set_bounds 0.0033    solve 0.9484    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.3640198707580566


Properties batch 100, size 1
Remaining timeout: 452.6019787788391
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.90000105], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-4.90119505]], device='cuda:0') need to verify.
torch allclose failed: norm 0.02325918897986412
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-4.90092468]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.04051375]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.048833370208740234
Previous best: tensor(-0.00092363, device='cuda:0')
Previous worst: tensor(-0.00092363, device='cuda:0')
New worst: tensor(-0.00056410, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 480] 
****** iter [0] loss: 9.800929069519043, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 9.802270889282227, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.900556564331055, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.900022983551025, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0010    bound 0.3573    transfer 0.0004    finalize 0.0012    func 0.3599    
Accumulated time: func 0.3599    prepare 0.0011    bound 0.3573    transfer 0.0004    finalize 0.0012    
length of domains: 0
Time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.3599    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.3599    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6086816787719727


Properties batch 101, size 1
Remaining timeout: 451.41513681411743
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00101250]], device='cuda:0') need to verify.
torch allclose failed: norm 0.008068833500146866
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00073304]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[6.81045914]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.62it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04922151565551758
Previous best: tensor(-0.00073204, device='cuda:0')
Previous worst: tensor(-0.00073204, device='cuda:0')
New worst: tensor(0.00017219, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0010    bound 0.0554    transfer 0.0004    finalize 0.0011    func 0.0579    
Accumulated time: func 0.0579    prepare 0.0011    bound 0.0554    transfer 0.0004    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1611    set_bounds 0.0015    solve 0.0579    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1611    set_bounds 0.0015    solve 0.0579    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.3085484504699707


Properties batch 102, size 1
Remaining timeout: 450.5285367965698
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.002021320164203644.

Properties batch 103, size 1
Remaining timeout: 450.42765498161316
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9083331892488786e-07.

Properties batch 104, size 1
Remaining timeout: 450.3288674354553
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.43000078], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-5.43108082]], device='cuda:0') need to verify.
torch allclose failed: norm 0.11535173654556274
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-5.43081141]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.22355270]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.65it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04914522171020508
Previous best: tensor(-0.00081062, device='cuda:0')
Previous worst: tensor(-0.00081062, device='cuda:0')
New worst: tensor(-0.00018549, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] 
****** iter [0] loss: 5.4301862716674805, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.436341285705566, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 5.430396556854248, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0010    bound 0.2861    transfer 0.0005    finalize 0.0011    func 0.2887    
Accumulated time: func 0.2887    prepare 0.0011    bound 0.2861    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.2888    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.2888    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.5374352931976318


Properties batch 105, size 1
Remaining timeout: 449.2168929576874
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00102843]], device='cuda:0') need to verify.
torch allclose failed: norm 0.013649728149175644
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00074178]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[7.39879227]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.78it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04883170127868652
Previous best: tensor(-0.00074078, device='cuda:0')
Previous worst: tensor(-0.00074078, device='cuda:0')
New worst: tensor(0.00131180, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 375] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0010    bound 0.0552    transfer 0.0004    finalize 0.0011    func 0.0578    
Accumulated time: func 0.0578    prepare 0.0011    bound 0.0552    transfer 0.0004    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.0578    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.0578    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.30600714683532715


Properties batch 106, size 1
Remaining timeout: 448.33397340774536
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.80000114], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -5.621687412261963.

Properties batch 107, size 1
Remaining timeout: 448.23346972465515
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04882722]], device='cuda:0') need to verify.
torch allclose failed: norm 0.012422707863152027
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04380602]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[6.20610476]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.78it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.048851966857910156
Previous best: tensor(-0.04380502, device='cuda:0')
Previous worst: tensor(-0.04380502, device='cuda:0')
New worst: tensor(-0.04189776, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 337] 
****** iter [0] loss: 0.08339983224868774, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.05051392316818237, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.03083275817334652, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.019575171172618866, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.012994234450161457, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00899704173207283, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.006470765918493271, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00480787456035614, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.003681276924908161, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0028971657156944275, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7476    transfer 0.0005    finalize 0.0012    func 0.7503    
Accumulated time: func 0.7503    prepare 0.0011    bound 0.7476    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00145 (1), -0.00144 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7504    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7504    add 0.0023    
Sorting batched domains takes 0.0009963512420654297 seconds.
Current (lb-rhs): -0.0014525295700877905
2 domains visited
Cumulative time: 1.0017368793487549

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.048919677734375
Previous best: tensor(-0.00144264, device='cuda:0')
Previous worst: tensor(-0.00145253, device='cuda:0')
New worst: tensor(-0.00142754, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] [/input.7, 149] 
****** iter [0] loss: 0.005575461313128471, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0034133950248360634, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00205409387126565, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.001293266424909234, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.000855835503898561, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0005914429202675819, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0004246875178068876, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.000315297074848786, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00024125273921526968, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.00018968296353705227, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7489    transfer 0.0005    finalize 0.0014    func 0.7524    
Accumulated time: func 1.5027    prepare 0.0028    bound 1.4965    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00005 (2), -0.00005 (2), -0.00005 (2), -0.00005 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1604    set_bounds 0.0017    solve 0.7525    add 0.0024    
Accumulated time: pickout 0.0038    decision 0.3194    set_bounds 0.0032    solve 1.5028    add 0.0047    
Sorting batched domains takes 0.0010242462158203125 seconds.
Current (lb-rhs): -4.778321454068646e-05
6 domains visited
Cumulative time: 1.9219889640808105

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.27it/s]
kfsb choice: tensor([0, 1, 1, 0], device='cuda:0')
Filtering time: 0.050132036209106445
Previous best: tensor(-4.54897163e-05, device='cuda:0')
Previous worst: tensor(-4.77832145e-05, device='cuda:0')
New worst: tensor(-4.73836917e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] [/input.3, 52] [/input.3, 27] [/input.3, 27] 
****** iter [0] loss: 0.0003698395157698542, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0002273304562550038, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0001347626675851643, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 8.481475379085168e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 5.608166247839108e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 3.860196375171654e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.767314072116278e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.05113465199247e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.5674979294999503e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.2315134881646372e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0031    bound 0.7469    transfer 0.0005    finalize 0.0020    func 0.7525    
Accumulated time: func 2.2553    prepare 0.0061    bound 2.2434    transfer 0.0015    finalize 0.0046    
Current worst splitting domains lb-rhs (depth):
-0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), 
length of domains: 8
Time: pickout 0.0020    decision 0.1625    set_bounds 0.0020    solve 0.7526    add 0.0029    
Accumulated time: pickout 0.0057    decision 0.4819    set_bounds 0.0052    solve 2.2554    add 0.0076    
Sorting batched domains takes 0.0016956329345703125 seconds.
Current (lb-rhs): -6.285703193498193e-07
14 domains visited
Cumulative time: 2.8460142612457275

BaB round 4
batch: 8
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.70it/s]
kfsb choice: tensor([1, 1, 1, 0, 0, 0, 0, 1], device='cuda:0')
Filtering time: 0.05178046226501465
Previous best: tensor(-4.52244763e-07, device='cuda:0')
Previous worst: tensor(-6.28570319e-07, device='cuda:0')
New worst: tensor(-6.02017167e-07, device='cuda:0')
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 46] [/input.3, 242] [/input.3, 52] [/input.3, 27] [/input.3, 52] [/input.3, 52] [/input.3, 52] [/input.3, 52] 
****** iter [0] loss: 2.371392838540487e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0049    bound 0.1367    transfer 0.0006    finalize 0.0034    func 0.1457    
Accumulated time: func 2.4009    prepare 0.0112    bound 2.3801    transfer 0.0021    finalize 0.0080    
length of domains: 0
Time: pickout 0.0021    decision 0.1645    set_bounds 0.0027    solve 0.1457    add 0.0001    
Accumulated time: pickout 0.0078    decision 0.6463    set_bounds 0.0079    solve 2.4011    add 0.0077    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
14 domains visited
Cumulative time: 3.1614675521850586


Properties batch 108, size 1
Remaining timeout: 444.49838757514954
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.32000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.32090843]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0875001773238182
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.32079661]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.49246645]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04896426200866699
Previous best: tensor(-0.00079560, device='cuda:0')
Previous worst: tensor(-0.00079560, device='cuda:0')
New worst: tensor(-0.00061488, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 2.641087055206299, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.6409246921539307, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.64024019241333, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.3200321197509766, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0010    bound 0.3506    transfer 0.0005    finalize 0.0011    func 0.3533    
Accumulated time: func 0.3533    prepare 0.0011    bound 0.3506    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.3533    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.3533    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6016025543212891


Properties batch 109, size 1
Remaining timeout: 443.3179249763489
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00090618]], device='cuda:0') need to verify.
torch allclose failed: norm 0.18066395819187164
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00079130]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.92624974]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.65it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.049130916595458984
Previous best: tensor(-0.00079030, device='cuda:0')
Previous worst: tensor(-0.00079030, device='cuda:0')
New worst: tensor(-0.00061399, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] 
****** iter [0] loss: 0.0010583382099866867, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0004635336808860302, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00010256865061819553, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.3440381735563278e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0010    bound 0.3585    transfer 0.0005    finalize 0.0011    func 0.3612    
Accumulated time: func 0.3612    prepare 0.0011    bound 0.3585    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1597    set_bounds 0.0015    solve 0.3612    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1597    set_bounds 0.0015    solve 0.3612    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.6105406284332275


Properties batch 110, size 1
Remaining timeout: 442.1279809474945
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-7.18000078], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-7.20045853]], device='cuda:0') need to verify.
torch allclose failed: norm 0.8255282640457153
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-7.19810772]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.00717449]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.33it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04983663558959961
Previous best: tensor(-0.01810694, device='cuda:0')
Previous worst: tensor(-0.01810694, device='cuda:0')
New worst: tensor(-0.01662350, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 14.391244888305664, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 14.376256942749023, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 14.368501663208008, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 14.364806175231934, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 14.36281967163086, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 14.361696243286133, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 14.361038208007812, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 14.360641479492188, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 14.360393524169922, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 14.360237121582031, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7110    transfer 0.0005    finalize 0.0012    func 0.7137    
Accumulated time: func 0.7137    prepare 0.0011    bound 0.7110    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00017 (1), -0.00007 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1607    set_bounds 0.0015    solve 0.7137    add 0.0021    
Accumulated time: pickout 0.0020    decision 0.1607    set_bounds 0.0015    solve 0.7137    add 0.0021    
Sorting batched domains takes 0.0009899139404296875 seconds.
Current (lb-rhs): -0.0001659393310546875
2 domains visited
Cumulative time: 0.9727389812469482

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.39it/s]
kfsb choice: tensor([2, 1], device='cuda:0')
Filtering time: 0.0497744083404541
Previous best: tensor(-6.96182251e-05, device='cuda:0')
Previous worst: tensor(-0.00016594, device='cuda:0')
New worst: tensor(-8.67843628e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 212] [/input.7, 130] 
****** iter [0] loss: 14.360130310058594, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0016    bound 0.1241    transfer 0.0005    finalize 0.0014    func 0.1276    
Accumulated time: func 0.8413    prepare 0.0029    bound 0.8351    transfer 0.0010    finalize 0.0026    
length of domains: 0
Time: pickout 0.0019    decision 0.1615    set_bounds 0.0018    solve 0.1277    add 0.0001    
Accumulated time: pickout 0.0039    decision 0.3222    set_bounds 0.0033    solve 0.8414    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.2660243511199951


Properties batch 111, size 1
Remaining timeout: 440.2837779521942
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.67969810962677.

Properties batch 112, size 1
Remaining timeout: 440.17561078071594
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.58000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.5165584087371826.

Properties batch 113, size 1
Remaining timeout: 440.07212948799133
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20879071950912476.

Properties batch 114, size 1
Remaining timeout: 439.97038412094116
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.34000111], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -3.314119577407837.

Properties batch 115, size 1
Remaining timeout: 439.86847257614136
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01329658]], device='cuda:0') need to verify.
torch allclose failed: norm 0.03948880359530449
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01193135]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.91992855]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.69it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04898977279663086
Previous best: tensor(-0.01193035, device='cuda:0')
Previous worst: tensor(-0.01193035, device='cuda:0')
New worst: tensor(-0.01169428, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 146] 
****** iter [0] loss: 0.022697094827890396, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.013411121442914009, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.008012166246771812, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.005052616819739342, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0033355276100337505, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0022990088909864426, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0016431589610874653, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0012139675673097372, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0009248134447261691, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0007240792037919164, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7151    transfer 0.0005    finalize 0.0012    func 0.7178    
Accumulated time: func 0.7178    prepare 0.0011    bound 0.7151    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00038 (1), -0.00034 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1593    set_bounds 0.0016    solve 0.7178    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1593    set_bounds 0.0016    solve 0.7178    add 0.0023    
Sorting batched domains takes 0.0009968280792236328 seconds.
Current (lb-rhs): -0.00037847680505365133
2 domains visited
Cumulative time: 0.9700636863708496

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.79it/s]
kfsb choice: tensor([0, 2], device='cuda:0')
Filtering time: 0.04887890815734863
Previous best: tensor(-0.00034360, device='cuda:0')
Previous worst: tensor(-0.00037848, device='cuda:0')
New worst: tensor(-0.00036593, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] [/input.3, 52] 
****** iter [0] loss: 0.0013923047808930278, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0008271040278486907, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00048629671800881624, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0003000207943841815, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.00019537263142410666, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00013283116277307272, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 9.404571756022051e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.899945583427325e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.227234942140058e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.0735521906754e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6532    transfer 0.0005    finalize 0.0014    func 0.6568    
Accumulated time: func 1.3745    prepare 0.0028    bound 1.3683    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1604    set_bounds 0.0018    solve 0.6568    add 0.0023    
Accumulated time: pickout 0.0039    decision 0.3197    set_bounds 0.0033    solve 1.3746    add 0.0046    
Sorting batched domains takes 0.001046895980834961 seconds.
Current (lb-rhs): -1.002226781565696e-05
6 domains visited
Cumulative time: 1.7946875095367432

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.34it/s]
kfsb choice: tensor([0, 2, 1, 0], device='cuda:0')
Filtering time: 0.050019264221191406
Previous best: tensor(-8.48785203e-06, device='cuda:0')
Previous worst: tensor(-1.00222678e-05, device='cuda:0')
New worst: tensor(-9.61137266e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] [/input.7, 8] [/input.7, 403] [/input.3, 27] 
****** iter [0] loss: 7.647807069588453e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.5469365431927145e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.5749675842234865e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.5665249520679936e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.0068642950500362e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0028    bound 0.4428    transfer 0.0005    finalize 0.0020    func 0.4482    
Accumulated time: func 1.8227    prepare 0.0058    bound 1.8111    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0021    decision 0.1628    set_bounds 0.0023    solve 0.4482    add 0.0001    
Accumulated time: pickout 0.0060    decision 0.4825    set_bounds 0.0056    solve 1.8228    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.4106132984161377


Properties batch 116, size 1
Remaining timeout: 436.881165266037
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-17.57000160], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -8.990358352661133.

Properties batch 117, size 1
Remaining timeout: 436.7792024612427
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9520549774169922.

Properties batch 118, size 1
Remaining timeout: 436.68077301979065
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.68000078], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -5.5845947265625.

Properties batch 119, size 1
Remaining timeout: 436.5823233127594
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9482440948486328.

Properties batch 120, size 1
Remaining timeout: 436.4838333129883
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.03000093], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.0299997329711914.

Properties batch 121, size 1
Remaining timeout: 436.3841760158539
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.028186559677124.

Properties batch 122, size 1
Remaining timeout: 436.2851963043213
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-17.26000023], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -17.155515670776367.

Properties batch 123, size 1
Remaining timeout: 436.1870176792145
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.009202590212225914.

Properties batch 124, size 1
Remaining timeout: 436.08882999420166
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-20.25000191], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -20.191207885742188.

Properties batch 125, size 1
Remaining timeout: 435.99107933044434
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09511554]], device='cuda:0') need to verify.
torch allclose failed: norm 0.1197071298956871
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08510420]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[22.58337402]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04895186424255371
Previous best: tensor(-0.08510320, device='cuda:0')
Previous worst: tensor(-0.08510320, device='cuda:0')
New worst: tensor(-0.08194686, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] 
****** iter [0] loss: 0.1618943214416504, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.09352598339319229, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.05780516192317009, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.036420758813619614, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.023914091289043427, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.01642547734081745, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.011762017384171486, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.008732018060982227, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.006681326776742935, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.005256551317870617, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6543    transfer 0.0005    finalize 0.0012    func 0.6570    
Accumulated time: func 0.6570    prepare 0.0011    bound 0.6543    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00269 (1), -0.00257 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1606    set_bounds 0.0015    solve 0.6570    add 0.0023    
Accumulated time: pickout 0.0020    decision 0.1606    set_bounds 0.0015    solve 0.6570    add 0.0023    
Sorting batched domains takes 0.0009987354278564453 seconds.
Current (lb-rhs): -0.0026877739001065493
2 domains visited
Cumulative time: 0.9106476306915283

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.76it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04898715019226074
Previous best: tensor(-0.00256678, device='cuda:0')
Previous worst: tensor(-0.00268777, device='cuda:0')
New worst: tensor(-0.00261305, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] [/input.7, 403] 
****** iter [0] loss: 0.010027107782661915, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.005929877050220966, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0035232575610280037, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.002199340844526887, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0014468897134065628, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0009926811326295137, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0007078305934555829, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0005225287168286741, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.000397662166506052, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0003110077523160726, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.6621    transfer 0.0005    finalize 0.0014    func 0.6661    
Accumulated time: func 1.3230    prepare 0.0032    bound 1.3164    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00008 (2), -0.00008 (2), -0.00008 (2), -0.00007 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1605    set_bounds 0.0017    solve 0.6661    add 0.0022    
Accumulated time: pickout 0.0040    decision 0.3211    set_bounds 0.0032    solve 1.3231    add 0.0045    
Sorting batched domains takes 0.0010304450988769531 seconds.
Current (lb-rhs): -8.028033334994689e-05
6 domains visited
Cumulative time: 1.7446181774139404

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.19it/s]
kfsb choice: tensor([2, 2, 1, 1], device='cuda:0')
Filtering time: 0.05052828788757324
Previous best: tensor(-7.31967812e-05, device='cuda:0')
Previous worst: tensor(-8.02803333e-05, device='cuda:0')
New worst: tensor(-7.43613418e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] [/input.7, 353] [/input.3, 52] [/input.7, 353] 
****** iter [0] loss: 0.0005092772771604359, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0003045900084543973, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.00017176850815303624, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00010392063268227503, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.679417856503278e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 4.518706919043325e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 3.1848179787630215e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.317433427379001e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.7387263142154552e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.1593395356612746e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0031    bound 0.7529    transfer 0.0006    finalize 0.0021    func 0.7587    
Accumulated time: func 2.0818    prepare 0.0065    bound 2.0693    transfer 0.0016    finalize 0.0047    
Current worst splitting domains lb-rhs (depth):
-0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), -0.00000 (3), 
length of domains: 6
Time: pickout 0.0020    decision 0.1658    set_bounds 0.0023    solve 0.7588    add 0.0024    
Accumulated time: pickout 0.0060    decision 0.4869    set_bounds 0.0055    solve 2.0819    add 0.0070    
Sorting batched domains takes 0.001176595687866211 seconds.
Current (lb-rhs): -1.0973093367283582e-06
12 domains visited
Cumulative time: 2.6775076389312744

BaB round 4
batch: 6
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.15it/s]
kfsb choice: tensor([1, 0, 2, 1, 2, 0], device='cuda:0')
Filtering time: 0.050730228424072266
Previous best: tensor(-7.46469937e-07, device='cuda:0')
Previous worst: tensor(-1.09730934e-06, device='cuda:0')
New worst: tensor(-9.93659683e-07, device='cuda:0')
Average branched neurons at iteration 4:  1.0000
splitting decisions: 
split level 0: [/input.3, 146] [/input, 65] [/input.7, 353] [/input.3, 146] [/input.7, 353] [/input, 65] 
****** iter [0] loss: 1.652159699006006e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 3.107891188847134e-06, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0045    bound 0.1908    transfer 0.0006    finalize 0.0027    func 0.1986    
Accumulated time: func 2.2803    prepare 0.0111    bound 2.2601    transfer 0.0021    finalize 0.0074    
length of domains: 0
Time: pickout 0.0021    decision 0.1656    set_bounds 0.0026    solve 0.1986    add 0.0001    
Accumulated time: pickout 0.0081    decision 0.6525    set_bounds 0.0080    solve 2.2805    add 0.0071    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 3.046940803527832


Properties batch 126, size 1
Remaining timeout: 432.37086153030396
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.24000120], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-6.24757147]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0007746321498416364
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-6.24682236]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[5.73197556]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.33it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04991936683654785
Previous best: tensor(-0.00682116, device='cuda:0')
Previous worst: tensor(-0.00682116, device='cuda:0')
New worst: tensor(-0.00624180, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] 
****** iter [0] loss: 12.489767074584961, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 12.485471725463867, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 12.483053207397461, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 12.481818199157715, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.481154441833496, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 12.480766296386719, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 12.480528831481934, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 12.48038101196289, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 12.4802827835083, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 12.480217933654785, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6558    transfer 0.0005    finalize 0.0012    func 0.6585    
Accumulated time: func 0.6585    prepare 0.0011    bound 0.6558    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00015 (1), -0.00006 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1624    set_bounds 0.0015    solve 0.6585    add 0.0021    
Accumulated time: pickout 0.0020    decision 0.1624    set_bounds 0.0015    solve 0.6585    add 0.0021    
Sorting batched domains takes 0.0009999275207519531 seconds.
Current (lb-rhs): -0.00015306472778320312
2 domains visited
Cumulative time: 0.913834810256958

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([1, 0], device='cuda:0')
Filtering time: 0.04886054992675781
Previous best: tensor(-6.24656677e-05, device='cuda:0')
Previous worst: tensor(-0.00015306, device='cuda:0')
New worst: tensor(-0.00012779, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] [/input.3, 27] 
****** iter [0] loss: 24.960357666015625, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 24.960206985473633, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 24.96009635925293, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 24.960044860839844, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.480024337768555, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 12.48001480102539, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 12.480010032653809, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 12.480005264282227, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 12.480002403259277, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 12.480002403259277, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7472    transfer 0.0005    finalize 0.0014    func 0.7511    
Accumulated time: func 1.4096    prepare 0.0032    bound 1.4030    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
0.00000 (2), 0.00000 (2), 
length of domains: 2
Time: pickout 0.0019    decision 0.1605    set_bounds 0.0016    solve 0.7512    add 0.0022    
Accumulated time: pickout 0.0039    decision 0.3229    set_bounds 0.0032    solve 1.4097    add 0.0043    
Sorting batched domains takes 0.0009791851043701172 seconds.
Current (lb-rhs): 0.0
4 domains visited
Cumulative time: 1.832690954208374

BaB round 3
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.79it/s]
kfsb choice: tensor([1, 0], device='cuda:0')
Filtering time: 0.048818349838256836
Previous best: tensor(0., device='cuda:0')
Previous worst: tensor(0., device='cuda:0')
New worst: tensor(4.76837158e-07, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 121] [/input.7, 121] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0020    bound 0.0557    transfer 0.0004    finalize 0.0016    func 0.0597    
Accumulated time: func 1.4693    prepare 0.0053    bound 1.4587    transfer 0.0014    finalize 0.0042    
length of domains: 0
Time: pickout 0.0019    decision 0.1604    set_bounds 0.0017    solve 0.0597    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.4833    set_bounds 0.0049    solve 1.4695    add 0.0044    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 2.0568153858184814


Properties batch 127, size 1
Remaining timeout: 429.7327802181244
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01970200]], device='cuda:0') need to verify.
torch allclose failed: norm 0.035291243344545364
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01774159]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[8.50638390]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.60it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.049216270446777344
Previous best: tensor(-0.01774059, device='cuda:0')
Previous worst: tensor(-0.01774059, device='cuda:0')
New worst: tensor(-0.01672662, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] 
****** iter [0] loss: 0.03339722752571106, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.020509006455540657, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.012319570407271385, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00770037854090333, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.005060059018433094, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0035098756197839975, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.002526453696191311, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0018746904097497463, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.001432945835404098, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0011264355853199959, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6541    transfer 0.0005    finalize 0.0012    func 0.6568    
Accumulated time: func 0.6568    prepare 0.0011    bound 0.6541    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00056 (1), -0.00056 (1), 
length of domains: 2
Time: pickout 0.0021    decision 0.1603    set_bounds 0.0015    solve 0.6568    add 0.0023    
Accumulated time: pickout 0.0021    decision 0.1603    set_bounds 0.0015    solve 0.6568    add 0.0023    
Sorting batched domains takes 0.001020669937133789 seconds.
Current (lb-rhs): -0.0005640564486384392
2 domains visited
Cumulative time: 0.9131693840026855

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.04890584945678711
Previous best: tensor(-0.00056038, device='cuda:0')
Previous worst: tensor(-0.00056406, device='cuda:0')
New worst: tensor(-0.00054324, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 3] [/input.7, 3] 
****** iter [0] loss: 0.0021568487863987684, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.001270705135539174, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0007775214617140591, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.00048235393478535116, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0003156767343170941, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00021691687288694084, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00015489684301428497, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00011460216774139553, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 8.751787390792742e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.868068157928064e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0017    bound 0.6613    transfer 0.0005    finalize 0.0015    func 0.6649    
Accumulated time: func 1.3217    prepare 0.0029    bound 1.3154    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00002 (2), -0.00002 (2), -0.00002 (2), -0.00002 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1606    set_bounds 0.0018    solve 0.6650    add 0.0024    
Accumulated time: pickout 0.0040    decision 0.3209    set_bounds 0.0033    solve 1.3218    add 0.0047    
Sorting batched domains takes 0.001112222671508789 seconds.
Current (lb-rhs): -1.6410973330494016e-05
6 domains visited
Cumulative time: 1.7465236186981201

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.37it/s]
kfsb choice: tensor([0, 2, 2, 1], device='cuda:0')
Filtering time: 0.05002474784851074
Previous best: tensor(-1.59218616e-05, device='cuda:0')
Previous worst: tensor(-1.64109733e-05, device='cuda:0')
New worst: tensor(-1.60601012e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 317] [/input.7, 287] [/input.7, 287] [/input.7, 287] 
****** iter [0] loss: 0.00013075378956273198, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 7.860574987716973e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.698414704762399e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.8746117095579393e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.8775770513457246e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.2870234058937058e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 9.14382326300256e-06, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0, lr: 0.4340627666233599 pruning_in_iteration open status: None

all verified at 7th iter

Time: prepare 0.0023    bound 0.5256    transfer 0.0005    finalize 0.0020    func 0.5305    
Accumulated time: func 1.8522    prepare 0.0053    bound 1.8410    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0020    decision 0.1627    set_bounds 0.0022    solve 0.5305    add 0.0001    
Accumulated time: pickout 0.0060    decision 0.4836    set_bounds 0.0055    solve 1.8523    add 0.0048    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.4443697929382324


Properties batch 128, size 1
Remaining timeout: 426.71366596221924
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 129, size 1
Remaining timeout: 426.6106119155884
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 130, size 1
Remaining timeout: 426.51101422309875
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 131, size 1
Remaining timeout: 426.41185665130615
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 132, size 1
Remaining timeout: 426.312703371048
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 133, size 1
Remaining timeout: 426.21354365348816
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0.

Properties batch 134, size 1
Remaining timeout: 426.11427092552185
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.84000099], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.84384859]], device='cuda:0') need to verify.
torch allclose failed: norm 0.060177166014909744
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.84344107]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.07352912]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.70it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04905438423156738
Previous best: tensor(-0.00344008, device='cuda:0')
Previous worst: tensor(-0.00344008, device='cuda:0')
New worst: tensor(-0.00336063, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] 
****** iter [0] loss: 1.6867101192474365, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.6839377880096436, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 1.6824073791503906, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.6814936399459839, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.6809742450714111, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.6806669235229492, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.6804747581481934, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.6803507804870605, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.6802668571472168, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.6802089214324951, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6611    transfer 0.0005    finalize 0.0012    func 0.6639    
Accumulated time: func 0.6639    prepare 0.0011    bound 0.6611    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00010 (1), -0.00010 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1596    set_bounds 0.0015    solve 0.6639    add 0.0023    
Accumulated time: pickout 0.0020    decision 0.1596    set_bounds 0.0015    solve 0.6639    add 0.0023    
Sorting batched domains takes 0.0010173320770263672 seconds.
Current (lb-rhs): -0.0001042485237121582
2 domains visited
Cumulative time: 0.9164588451385498

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([2, 1], device='cuda:0')
Filtering time: 0.04905247688293457
Previous best: tensor(-0.00010264, device='cuda:0')
Previous worst: tensor(-0.00010425, device='cuda:0')
New worst: tensor(-9.81092453e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 267] [/input.7, 267] 
****** iter [0] loss: 3.360391616821289, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 3.3602261543273926, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.3601369857788086, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.3600845336914062, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.3600544929504395, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 3.360037088394165, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 3.3600265979766846, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 3.360020160675049, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 3.360013723373413, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 3.360011100769043, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.6572    transfer 0.0005    finalize 0.0014    func 0.6612    
Accumulated time: func 1.3251    prepare 0.0033    bound 1.3183    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1608    set_bounds 0.0016    solve 0.6612    add 0.0023    
Accumulated time: pickout 0.0040    decision 0.3204    set_bounds 0.0032    solve 1.3252    add 0.0046    
Sorting batched domains takes 0.0010411739349365234 seconds.
Current (lb-rhs): -1.7881393432617188e-06
6 domains visited
Cumulative time: 1.7457857131958008

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.34it/s]
kfsb choice: tensor([2, 0, 1, 0], device='cuda:0')
Filtering time: 0.050018310546875
Previous best: tensor(-1.66893005e-06, device='cuda:0')
Previous worst: tensor(-1.78813934e-06, device='cuda:0')
New worst: tensor(-1.72853470e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input, 108] [/input.7, 131] [/input, 108] 
****** iter [0] loss: 6.720020294189453, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.720010280609131, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.720008850097656, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0034    bound 0.2581    transfer 0.0005    finalize 0.0021    func 0.2642    
Accumulated time: func 1.5893    prepare 0.0068    bound 1.5765    transfer 0.0016    finalize 0.0047    
length of domains: 0
Time: pickout 0.0021    decision 0.1628    set_bounds 0.0022    solve 0.2643    add 0.0001    
Accumulated time: pickout 0.0061    decision 0.4832    set_bounds 0.0053    solve 1.5894    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.177564859390259


Properties batch 135, size 1
Remaining timeout: 423.35816407203674
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.09390982240438461.

Properties batch 136, size 1
Remaining timeout: 423.2410683631897
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.37000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.34956830739974976.

Properties batch 137, size 1
Remaining timeout: 423.1432807445526
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00182529]], device='cuda:0') need to verify.
torch allclose failed: norm 1.1332745552062988
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00163328]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.39268097]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.13it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.05035257339477539
Previous best: tensor(-0.00163228, device='cuda:0')
Previous worst: tensor(-0.00163228, device='cuda:0')
New worst: tensor(-0.00158903, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 0.0031795597169548273, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0018876176327466965, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0011148934718221426, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0006937669822946191, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.000455946137662977, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00031223639962263405, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.00022179816733114421, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.00016285300080198795, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.00012335125938989222, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 9.61402547545731e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6641    transfer 0.0005    finalize 0.0012    func 0.6668    
Accumulated time: func 0.6668    prepare 0.0011    bound 0.6641    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00005 (1), -0.00005 (1), 
length of domains: 2
Time: pickout 0.0020    decision 0.1647    set_bounds 0.0016    solve 0.6669    add 0.0023    
Accumulated time: pickout 0.0020    decision 0.1647    set_bounds 0.0016    solve 0.6669    add 0.0023    
Sorting batched domains takes 0.000982522964477539 seconds.
Current (lb-rhs): -4.7498739149887115e-05
2 domains visited
Cumulative time: 0.9244930744171143

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.39it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04968976974487305
Previous best: tensor(-4.66415149e-05, device='cuda:0')
Previous worst: tensor(-4.74987391e-05, device='cuda:0')
New worst: tensor(-4.61552918e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 52] [/input.3, 52] 
****** iter [0] loss: 0.00018392270430922508, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00010546912380959839, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.189741543494165e-05, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.8174810470081866e-05, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.457460323057603e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.6527405023225583e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.156334656116087e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 8.390295988647267e-06, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.288623808359262e-06, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.855587121710414e-06, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6672    transfer 0.0005    finalize 0.0014    func 0.6708    
Accumulated time: func 1.3376    prepare 0.0029    bound 1.3313    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1611    set_bounds 0.0018    solve 0.6708    add 0.0025    
Accumulated time: pickout 0.0040    decision 0.3258    set_bounds 0.0033    solve 1.3377    add 0.0048    
Sorting batched domains takes 0.0010395050048828125 seconds.
Current (lb-rhs): -2.577857003416284e-07
6 domains visited
Cumulative time: 1.7641377449035645

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.12it/s]
kfsb choice: tensor([2, 1, 0, 2], device='cuda:0')
Filtering time: 0.05075430870056152
Previous best: tensor(-1.79755148e-07, device='cuda:0')
Previous worst: tensor(-2.57785700e-07, device='cuda:0')
New worst: tensor(-2.00730369e-07, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] [/input.7, 403] [/input.3, 46] [/input.7, 403] 
****** iter [0] loss: 9.179571861750446e-06, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.0, lr: 0.49 pruning_in_iteration open status: None

all verified at 1th iter

Time: prepare 0.0029    bound 0.1370    transfer 0.0005    finalize 0.0020    func 0.1425    
Accumulated time: func 1.4801    prepare 0.0060    bound 1.4683    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0020    decision 0.1645    set_bounds 0.0021    solve 0.1426    add 0.0001    
Accumulated time: pickout 0.0060    decision 0.4903    set_bounds 0.0054    solve 1.4803    add 0.0049    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.075725793838501


Properties batch 138, size 1
Remaining timeout: 420.4926517009735
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.10000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.09999958425760269.

Properties batch 139, size 1
Remaining timeout: 420.38432574272156
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.10000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.09903771430253983.

Properties batch 140, size 1
Remaining timeout: 420.26225423812866
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.19999970495700836.

Properties batch 141, size 1
Remaining timeout: 420.1327087879181
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.19883207976818085.

Properties batch 142, size 1
Remaining timeout: 420.01072812080383
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.1999996155500412.

Properties batch 143, size 1
Remaining timeout: 419.8951392173767
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.19884292781352997.

Properties batch 144, size 1
Remaining timeout: 419.7817659378052
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.25000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.24999967217445374.

Properties batch 145, size 1
Remaining timeout: 419.6704168319702
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.25000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24876195192337036.

Properties batch 146, size 1
Remaining timeout: 419.5599482059479
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.35000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.34999966621398926.

Properties batch 147, size 1
Remaining timeout: 419.4491157531738
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([0.11999900], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3489903211593628.

Properties batch 148, size 1
Remaining timeout: 419.3384761810303
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.40000105], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.399984359741211.

Properties batch 149, size 1
Remaining timeout: 419.2286739349365
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.40000105], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2423317432403564.

Properties batch 150, size 1
Remaining timeout: 419.12002396583557
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.93000102], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.9247000217437744.

Properties batch 151, size 1
Remaining timeout: 419.0137450695038
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.11000100], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11373313]], device='cuda:0') need to verify.
torch allclose failed: norm 0.48355773091316223
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11333209]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.98193085]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.64it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.049211740493774414
Previous best: tensor(-0.00333109, device='cuda:0')
Previous worst: tensor(-0.00333109, device='cuda:0')
New worst: tensor(-0.00319013, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 83] 
****** iter [0] loss: 0.22632192075252533, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.22386392951011658, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.22209887206554413, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.2212262898683548, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.22078433632850647, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.2205193042755127, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.2203557938337326, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.2202531397342682, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.22018733620643616, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.22014287114143372, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6487    transfer 0.0005    finalize 0.0011    func 0.6514    
Accumulated time: func 0.6514    prepare 0.0011    bound 0.6487    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00007 (1), -0.00007 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1594    set_bounds 0.0015    solve 0.6514    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1594    set_bounds 0.0015    solve 0.6514    add 0.0021    
Sorting batched domains takes 0.001031637191772461 seconds.
Current (lb-rhs): -7.348507642745972e-05
2 domains visited
Cumulative time: 0.9038617610931396

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.10it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.05034661293029785
Previous best: tensor(-6.73979521e-05, device='cuda:0')
Previous worst: tensor(-7.34850764e-05, device='cuda:0')
New worst: tensor(-6.94394112e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] [/input.3, 242] 
****** iter [0] loss: 0.44026708602905273, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.4401577115058899, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.44007420539855957, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.44003981351852417, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.4400227665901184, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.44001317024230957, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.44000762701034546, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.3300037086009979, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.0, lr: 0.4253815112908927 pruning_in_iteration open status: None

all verified at 8th iter

Time: prepare 0.0016    bound 0.5910    transfer 0.0005    finalize 0.0014    func 0.5945    
Accumulated time: func 1.2459    prepare 0.0029    bound 1.2398    transfer 0.0009    finalize 0.0025    
length of domains: 0
Time: pickout 0.0019    decision 0.1631    set_bounds 0.0017    solve 0.5946    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3225    set_bounds 0.0032    solve 1.2460    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.665562629699707


Properties batch 152, size 1
Remaining timeout: 416.76155614852905
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.53000104], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.3077118396759033.

Properties batch 153, size 1
Remaining timeout: 416.65332412719727
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.53000104], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.2760486602783203.

Properties batch 154, size 1
Remaining timeout: 416.5489480495453
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.47000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.37582331895828247.

Properties batch 155, size 1
Remaining timeout: 416.44434428215027
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.30000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.21289420127868652.

Properties batch 156, size 1
Remaining timeout: 416.34074902534485
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.77000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.7591364979743958.

Properties batch 157, size 1
Remaining timeout: 416.23719596862793
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.24000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.2122255563735962.

Properties batch 158, size 1
Remaining timeout: 416.13443183898926
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-10.21000099], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-10.29999161]], device='cuda:0') need to verify.
torch allclose failed: norm 0.02099551446735859
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-10.29085636]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[5.88329220]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.63it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.049241065979003906
Previous best: tensor(-0.08085537, device='cuda:0')
Previous worst: tensor(-0.08085537, device='cuda:0')
New worst: tensor(-0.07998085, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] 
****** iter [0] loss: 20.578811645507812, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 20.51820182800293, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 20.478832244873047, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 20.456336975097656, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 20.443572998046875, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 20.436107635498047, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 20.43144416809082, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 20.428447723388672, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 20.42644691467285, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 20.42505645751953, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0012    bound 0.6560    transfer 0.0005    finalize 0.0011    func 0.6588    
Accumulated time: func 0.6588    prepare 0.0013    bound 0.6560    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00254 (1), -0.00251 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1608    set_bounds 0.0015    solve 0.6589    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1608    set_bounds 0.0015    solve 0.6589    add 0.0022    
Sorting batched domains takes 0.0009789466857910156 seconds.
Current (lb-rhs): -0.0025424957275390625
2 domains visited
Cumulative time: 0.9150328636169434

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.40it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.051981210708618164
Previous best: tensor(-0.00251198, device='cuda:0')
Previous worst: tensor(-0.00254250, device='cuda:0')
New worst: tensor(-0.00247860, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 131] 
****** iter [0] loss: 40.84619140625, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 40.84413146972656, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 40.842254638671875, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 40.841278076171875, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 40.84077453613281, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 40.84051513671875, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 40.840354919433594, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 40.84026336669922, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 40.84019470214844, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 40.84014129638672, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.6540    transfer 0.0005    finalize 0.0014    func 0.6579    
Accumulated time: func 1.3168    prepare 0.0034    bound 1.3100    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00007 (2), -0.00006 (2), -0.00001 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1653    set_bounds 0.0016    solve 0.6580    add 0.0025    
Accumulated time: pickout 0.0038    decision 0.3261    set_bounds 0.0031    solve 1.3169    add 0.0047    
Sorting batched domains takes 0.001020669937133789 seconds.
Current (lb-rhs): -6.961822509765625e-05
6 domains visited
Cumulative time: 1.7456793785095215

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.44it/s]
kfsb choice: tensor([0, 0, 2, 2], device='cuda:0')
Filtering time: 0.049768924713134766
Previous best: tensor(-4.76837158e-06, device='cuda:0')
Previous worst: tensor(-6.96182251e-05, device='cuda:0')
New worst: tensor(-5.53131104e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 121] [/input.7, 121] [/input.7, 8] [/input.7, 8] 
****** iter [0] loss: 81.68019104003906, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 71.47019958496094, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 51.050086975097656, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 51.05003356933594, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 51.05003356933594, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 20.420013427734375, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0030    bound 0.4565    transfer 0.0006    finalize 0.0024    func 0.4625    
Accumulated time: func 1.7792    prepare 0.0066    bound 1.7665    transfer 0.0016    finalize 0.0049    
length of domains: 0
Time: pickout 0.0020    decision 0.1631    set_bounds 0.0021    solve 0.4625    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4892    set_bounds 0.0052    solve 1.7794    add 0.0048    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.375891923904419


Properties batch 159, size 1
Remaining timeout: 413.169310092926
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -4.879465103149414.

Properties batch 160, size 1
Remaining timeout: 413.0655972957611
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.20000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.2000000476837158.

Properties batch 161, size 1
Remaining timeout: 412.963915348053
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.60000098], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9626165628433228.

Properties batch 162, size 1
Remaining timeout: 412.8622305393219
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.0.

Properties batch 163, size 1
Remaining timeout: 412.7589945793152
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.25000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9536678791046143.

Properties batch 164, size 1
Remaining timeout: 412.6556804180145
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.50000095], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.50736284]], device='cuda:0') need to verify.
torch allclose failed: norm 0.00748922536149621
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.50653458]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.21743965]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 19.69it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.05387306213378906
Previous best: tensor(-0.00653362, device='cuda:0')
Previous worst: tensor(-0.00653362, device='cuda:0')
New worst: tensor(-0.00594854, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 146] 
****** iter [0] loss: 7.011704444885254, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 7.008128643035889, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 7.00327730178833, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 7.001710414886475, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 7.001011371612549, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 7.000601291656494, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 7.000357627868652, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 7.000212669372559, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 7.000122547149658, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 7.000067710876465, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6496    transfer 0.0005    finalize 0.0012    func 0.6522    
Accumulated time: func 0.6522    prepare 0.0011    bound 0.6496    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00005 (1), -0.00002 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1677    set_bounds 0.0016    solve 0.6523    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1677    set_bounds 0.0016    solve 0.6523    add 0.0020    
Sorting batched domains takes 0.0009965896606445312 seconds.
Current (lb-rhs): -4.8160552978515625e-05
2 domains visited
Cumulative time: 0.9143786430358887

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.81it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.048775672912597656
Previous best: tensor(-1.76429749e-05, device='cuda:0')
Previous worst: tensor(-4.81605530e-05, device='cuda:0')
New worst: tensor(-3.76701355e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 161] [/input.3, 27] 
****** iter [0] loss: 10.50008773803711, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 10.500018119812012, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0016    bound 0.1967    transfer 0.0005    finalize 0.0014    func 0.2001    
Accumulated time: func 0.8524    prepare 0.0029    bound 0.8462    transfer 0.0010    finalize 0.0025    
length of domains: 0
Time: pickout 0.0019    decision 0.1611    set_bounds 0.0017    solve 0.2002    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3288    set_bounds 0.0033    solve 0.8525    add 0.0021    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.279639720916748


Properties batch 165, size 1
Remaining timeout: 410.79022336006165
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.25000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.1993812322616577.

Properties batch 166, size 1
Remaining timeout: 410.6867632865906
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.75000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.75119531]], device='cuda:0') need to verify.
torch allclose failed: norm 0.08394214510917664
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.75105417]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.82008344]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.96it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.05120968818664551
Previous best: tensor(-0.00105315, device='cuda:0')
Previous worst: tensor(-0.00105315, device='cuda:0')
New worst: tensor(-0.00095659, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] 
****** iter [0] loss: 1.5013264417648315, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.5008212327957153, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.7503089904785156, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.7501170635223389, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.7500392198562622, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.7500017881393433, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0011    bound 0.4549    transfer 0.0005    finalize 0.0012    func 0.4576    
Accumulated time: func 0.4576    prepare 0.0012    bound 0.4549    transfer 0.0005    finalize 0.0012    
length of domains: 0
Time: pickout 0.0020    decision 0.1653    set_bounds 0.0016    solve 0.4577    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.1653    set_bounds 0.0016    solve 0.4577    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.714444637298584


Properties batch 167, size 1
Remaining timeout: 409.38521003723145
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.49926501512527466.

Properties batch 168, size 1
Remaining timeout: 409.28211760520935
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.758474349975586.

Properties batch 169, size 1
Remaining timeout: 409.1817042827606
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.24862277507781982.

Properties batch 170, size 1
Remaining timeout: 409.08079957962036
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.35000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35103998]], device='cuda:0') need to verify.
torch allclose failed: norm 0.04960888996720314
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35092708]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.25313881]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.43it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.05194258689880371
Previous best: tensor(-0.00092608, device='cuda:0')
Previous worst: tensor(-0.00092608, device='cuda:0')
New worst: tensor(-0.00085831, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 251] 
****** iter [0] loss: 0.7015838623046875, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.7010396122932434, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.7005355954170227, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.7002964019775391, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.7001776099205017, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.7001128792762756, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.7000749707221985, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.7000521421432495, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.7000374794006348, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.7000283598899841, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6516    transfer 0.0005    finalize 0.0011    func 0.6542    
Accumulated time: func 0.6542    prepare 0.0011    bound 0.6516    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00002 (1), -0.00001 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1635    set_bounds 0.0015    solve 0.6543    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1635    set_bounds 0.0015    solve 0.6543    add 0.0021    
Sorting batched domains takes 0.0009889602661132812 seconds.
Current (lb-rhs): -1.6748905181884766e-05
2 domains visited
Cumulative time: 0.9100918769836426

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.71it/s]
kfsb choice: tensor([0, 2], device='cuda:0')
Filtering time: 0.048882484436035156
Previous best: tensor(-9.59634781e-06, device='cuda:0')
Previous worst: tensor(-1.67489052e-05, device='cuda:0')
New worst: tensor(-1.52587891e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 161] [/input.3, 130] 
****** iter [0] loss: 1.4000496864318848, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.4000442028045654, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 1.4000182151794434, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.0500056743621826, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.3500010669231415, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0020    bound 0.4259    transfer 0.0005    finalize 0.0014    func 0.4298    
Accumulated time: func 1.0840    prepare 0.0033    bound 1.0775    transfer 0.0009    finalize 0.0026    
length of domains: 0
Time: pickout 0.0019    decision 0.1598    set_bounds 0.0016    solve 0.4299    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3233    set_bounds 0.0031    solve 1.0841    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.5036649703979492


Properties batch 171, size 1
Remaining timeout: 406.9891662597656
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.15000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.1497916877269745.

Properties batch 172, size 1
Remaining timeout: 406.8861894607544
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.3229435086250305.

Properties batch 173, size 1
Remaining timeout: 406.78594756126404
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.48384401202201843.

Properties batch 174, size 1
Remaining timeout: 406.6863911151886
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50005013]], device='cuda:0') need to verify.
torch allclose failed: norm 0.10031773895025253
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50001764]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.49201304]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.30it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.05013871192932129
Previous best: tensor(-1.66296959e-05, device='cuda:0')
Previous worst: tensor(-1.66296959e-05, device='cuda:0')
New worst: tensor(1.16825104e-05, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 251] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0010    bound 0.0571    transfer 0.0004    finalize 0.0012    func 0.0596    
Accumulated time: func 0.0596    prepare 0.0011    bound 0.0571    transfer 0.0004    finalize 0.0012    
length of domains: 0
Time: pickout 0.0019    decision 0.1616    set_bounds 0.0015    solve 0.0597    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1616    set_bounds 0.0015    solve 0.0597    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.3113985061645508


Properties batch 175, size 1
Remaining timeout: 405.79684495925903
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.25000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.24982595443725586.

Properties batch 176, size 1
Remaining timeout: 405.694949388504
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.75000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.749420404434204.

Properties batch 177, size 1
Remaining timeout: 405.595552444458
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.51147127]], device='cuda:0') need to verify.
torch allclose failed: norm 0.9224701523780823
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.51030666]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.01965213]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.32it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.050028085708618164
Previous best: tensor(-0.01030564, device='cuda:0')
Previous worst: tensor(-0.01030564, device='cuda:0')
New worst: tensor(-0.01004523, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 340] 
****** iter [0] loss: 1.0191800594329834, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.0118060111999512, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 1.0071306228637695, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.0044151544570923, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.00290846824646, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.0020051002502441, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.0014398097991943, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.0010662078857422, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.0008121728897095, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.0006351470947266, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7433    transfer 0.0005    finalize 0.0011    func 0.7459    
Accumulated time: func 0.7459    prepare 0.0011    bound 0.7433    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00033 (1), -0.00030 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1614    set_bounds 0.0015    solve 0.7459    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1614    set_bounds 0.0015    solve 0.7459    add 0.0021    
Sorting batched domains takes 0.0009763240814208984 seconds.
Current (lb-rhs): -0.00033485889434814453
2 domains visited
Cumulative time: 1.0012023448944092

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.35it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04980659484863281
Previous best: tensor(-0.00029826, device='cuda:0')
Previous worst: tensor(-0.00033486, device='cuda:0')
New worst: tensor(-0.00030345, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 131] 
****** iter [0] loss: 2.0011160373687744, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.0006418228149414, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.0003774166107178, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.000231981277466, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.000149965286255, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.0001020431518555, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.000072717666626, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.0000534057617188, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.0000410079956055, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 2.0000319480895996, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7442    transfer 0.0005    finalize 0.0014    func 0.7477    
Accumulated time: func 1.4936    prepare 0.0029    bound 1.4874    transfer 0.0009    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1632    set_bounds 0.0017    solve 0.7477    add 0.0022    
Accumulated time: pickout 0.0038    decision 0.3246    set_bounds 0.0032    solve 1.4937    add 0.0044    
Sorting batched domains takes 0.001024484634399414 seconds.
Current (lb-rhs): -8.285045623779297e-06
6 domains visited
Cumulative time: 1.9193994998931885

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 20.98it/s]
kfsb choice: tensor([2, 1, 0, 1], device='cuda:0')
Filtering time: 0.05094718933105469
Previous best: tensor(-5.96046448e-06, device='cuda:0')
Previous worst: tensor(-8.28504562e-06, device='cuda:0')
New worst: tensor(-8.04662704e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 76] [/input.3, 253] [/input.7, 121] [/input.7, 121] 
****** iter [0] loss: 4.000059127807617, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.000044822692871, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.000022888183594, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.500012159347534, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.5000057220458984, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0026    bound 0.4425    transfer 0.0005    finalize 0.0019    func 0.4475    
Accumulated time: func 1.9411    prepare 0.0056    bound 1.9299    transfer 0.0015    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1633    set_bounds 0.0023    solve 0.4476    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4879    set_bounds 0.0055    solve 1.9412    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.5349504947662354


Properties batch 178, size 1
Remaining timeout: 402.48420238494873
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.90000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.8968172073364258.

Properties batch 179, size 1
Remaining timeout: 402.38322377204895
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50545543]], device='cuda:0') need to verify.
torch allclose failed: norm 0.021279506385326385
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50490659]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.23215699]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.59it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04916262626647949
Previous best: tensor(-0.00490558, device='cuda:0')
Previous worst: tensor(-0.00490558, device='cuda:0')
New worst: tensor(-0.00451761, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] 
****** iter [0] loss: 1.0085220336914062, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.0052745342254639, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 1.00313401222229, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.0019805431365967, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.0012972354888916, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.0008809566497803, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.0006210803985596, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.0004549026489258, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.0003464221954346, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.0002720355987549, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7442    transfer 0.0005    finalize 0.0012    func 0.7469    
Accumulated time: func 0.7469    prepare 0.0011    bound 0.7442    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00015 (1), -0.00012 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1597    set_bounds 0.0018    solve 0.7470    add 0.0024    
Accumulated time: pickout 0.0019    decision 0.1597    set_bounds 0.0018    solve 0.7470    add 0.0024    
Sorting batched domains takes 0.0009667873382568359 seconds.
Current (lb-rhs): -0.00014895200729370117
2 domains visited
Cumulative time: 1.0012154579162598

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04876565933227539
Previous best: tensor(-0.00012106, device='cuda:0')
Previous worst: tensor(-0.00014895, device='cuda:0')
New worst: tensor(-0.00013423, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 131] [/input.7, 131] 
****** iter [0] loss: 2.0004687309265137, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.00028133392334, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.0001611709594727, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.00010085105896, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.0000662803649902, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.0000452995300293, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.0000321865081787, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.00002384185791, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.0000181198120117, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 2.000014066696167, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7428    transfer 0.0005    finalize 0.0014    func 0.7463    
Accumulated time: func 1.4933    prepare 0.0029    bound 1.4870    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1600    set_bounds 0.0017    solve 0.7464    add 0.0022    
Accumulated time: pickout 0.0038    decision 0.3197    set_bounds 0.0035    solve 1.4934    add 0.0046    
Sorting batched domains takes 0.001035928726196289 seconds.
Current (lb-rhs): -3.2186508178710938e-06
6 domains visited
Cumulative time: 1.9148380756378174

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.18it/s]
kfsb choice: tensor([0, 2, 2, 2], device='cuda:0')
Filtering time: 0.05041170120239258
Previous best: tensor(-2.08616257e-06, device='cuda:0')
Previous worst: tensor(-3.21865082e-06, device='cuda:0')
New worst: tensor(-3.03983688e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] [/input.7, 403] [/input.3, 253] [/input.3, 253] 
****** iter [0] loss: 4.000025749206543, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.000019073486328, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.0000078678131104, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0027    bound 0.2906    transfer 0.0005    finalize 0.0020    func 0.2958    
Accumulated time: func 1.7891    prepare 0.0057    bound 1.7776    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0020    decision 0.1659    set_bounds 0.0022    solve 0.2959    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4856    set_bounds 0.0057    solve 1.7893    add 0.0047    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.3810973167419434


Properties batch 180, size 1
Remaining timeout: 399.4242787361145
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.15000100], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15087771]], device='cuda:0') need to verify.
torch allclose failed: norm 0.04368743672966957
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15079176]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.23099849]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.11it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.05055499076843262
Previous best: tensor(-0.00079076, device='cuda:0')
Previous worst: tensor(-0.00079076, device='cuda:0')
New worst: tensor(-0.00075887, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 290] 
****** iter [0] loss: 0.30145856738090515, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.3008808195590973, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.30054470896720886, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.30034804344177246, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.30023273825645447, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.30016183853149414, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.3001166880130768, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.3000878393650055, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.3000677525997162, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.30005335807800293, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7610    transfer 0.0005    finalize 0.0011    func 0.7636    
Accumulated time: func 0.7636    prepare 0.0011    bound 0.7610    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00003 (1), -0.00002 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1652    set_bounds 0.0015    solve 0.7636    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1652    set_bounds 0.0015    solve 0.7636    add 0.0021    
Sorting batched domains takes 0.0010955333709716797 seconds.
Current (lb-rhs): -2.6598572731018066e-05
2 domains visited
Cumulative time: 1.023043155670166

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.90it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.048534393310546875
Previous best: tensor(-2.47508287e-05, device='cuda:0')
Previous worst: tensor(-2.65985727e-05, device='cuda:0')
New worst: tensor(-2.57343054e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 337] [/input.3, 27] 
****** iter [0] loss: 0.6000980138778687, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.6000610589981079, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.6000359058380127, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.6000252962112427, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.6000149250030518, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.6000097990036011, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.6000097393989563, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.45000383257865906, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.45000383257865906, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.4500037729740143, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0018    bound 0.7446    transfer 0.0005    finalize 0.0014    func 0.7483    
Accumulated time: func 1.5119    prepare 0.0031    bound 1.5055    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 3
Time: pickout 0.0021    decision 0.1598    set_bounds 0.0017    solve 0.7484    add 0.0029    
Accumulated time: pickout 0.0041    decision 0.3250    set_bounds 0.0032    solve 1.5120    add 0.0050    
Sorting batched domains takes 0.001314401626586914 seconds.
Current (lb-rhs): -2.8312206268310547e-07
5 domains visited
Cumulative time: 1.9396271705627441

BaB round 3
batch: 3
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.69it/s]
kfsb choice: tensor([2, 1, 1], device='cuda:0')
Filtering time: 0.04910111427307129
Previous best: tensor(-1.63912773e-07, device='cuda:0')
Previous worst: tensor(-2.83122063e-07, device='cuda:0')
New worst: tensor(-3.12924385e-07, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] [/input.3, 125] [/input.3, 125] 
****** iter [0] loss: 0.900007426738739, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.3000022768974304, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0025    bound 0.2110    transfer 0.0005    finalize 0.0018    func 0.2158    
Accumulated time: func 1.7277    prepare 0.0058    bound 1.7165    transfer 0.0014    finalize 0.0044    
length of domains: 0
Time: pickout 0.0019    decision 0.1613    set_bounds 0.0018    solve 0.2159    add 0.0001    
Accumulated time: pickout 0.0060    decision 0.4863    set_bounds 0.0050    solve 1.7278    add 0.0051    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 2.3209335803985596


Properties batch 181, size 1
Remaining timeout: 396.5244746208191
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.10000100], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10043191]], device='cuda:0') need to verify.
torch allclose failed: norm 0.030244871973991394
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10038631]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.38708636]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.81it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04870033264160156
Previous best: tensor(-0.00038531, device='cuda:0')
Previous worst: tensor(-0.00038531, device='cuda:0')
New worst: tensor(-0.00036886, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 238] 
****** iter [0] loss: 0.20073643326759338, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.2005293369293213, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.2002972513437271, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.20017492771148682, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.20011314749717712, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.20007678866386414, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.2000555396080017, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.20004162192344666, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.20003201067447662, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.20002520084381104, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7459    transfer 0.0005    finalize 0.0011    func 0.7485    
Accumulated time: func 0.7485    prepare 0.0011    bound 0.7459    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00001 (1), -0.00001 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.7485    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.7485    add 0.0021    
Sorting batched domains takes 0.0009827613830566406 seconds.
Current (lb-rhs): -1.16005539894104e-05
2 domains visited
Cumulative time: 0.9997463226318359

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.88it/s]
kfsb choice: tensor([2, 1], device='cuda:0')
Filtering time: 0.04857134819030762
Previous best: tensor(-1.15931034e-05, device='cuda:0')
Previous worst: tensor(-1.16005540e-05, device='cuda:0')
New worst: tensor(-1.12131238e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 21] [/input.7, 131] 
****** iter [0] loss: 0.40004634857177734, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.4000401496887207, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.4000202417373657, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.40001147985458374, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.4000071883201599, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.40000486373901367, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0016    bound 0.5135    transfer 0.0005    finalize 0.0014    func 0.5170    
Accumulated time: func 1.2654    prepare 0.0028    bound 1.2593    transfer 0.0009    finalize 0.0025    
length of domains: 0
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0017    solve 0.5170    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3185    set_bounds 0.0032    solve 1.2655    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.680351734161377


Properties batch 182, size 1
Remaining timeout: 394.2653069496155
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.90000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.8999998569488525.

Properties batch 183, size 1
Remaining timeout: 394.1628141403198
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.40000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8984930515289307.

Properties batch 184, size 1
Remaining timeout: 394.0631482601166
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.50000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.499999761581421.

Properties batch 185, size 1
Remaining timeout: 393.9629180431366
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.498203992843628.

Properties batch 186, size 1
Remaining timeout: 393.8636040687561
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.90000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.878824770450592.

Properties batch 187, size 1
Remaining timeout: 393.7637391090393
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.45000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.4257407784461975.

Properties batch 188, size 1
Remaining timeout: 393.6653296947479
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.35000101], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35024700]], device='cuda:0') need to verify.
torch allclose failed: norm 0.08890097588300705
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35021326]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.32862371]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.84it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04875659942626953
Previous best: tensor(-0.00021225, device='cuda:0')
Previous worst: tensor(-0.00021225, device='cuda:0')
New worst: tensor(-0.00019908, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input, 65] 
****** iter [0] loss: 0.7003958225250244, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.7002879977226257, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.7000725269317627, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0010    bound 0.2862    transfer 0.0005    finalize 0.0011    func 0.2888    
Accumulated time: func 0.2888    prepare 0.0011    bound 0.2862    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.2888    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.2888    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.5369217395782471


Properties batch 189, size 1
Remaining timeout: 392.5534875392914
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.15000100], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15018287]], device='cuda:0') need to verify.
torch allclose failed: norm 0.08440472930669785
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15015157]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.58108616]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.78it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04874563217163086
Previous best: tensor(-0.00015056, device='cuda:0')
Previous worst: tensor(-0.00015056, device='cuda:0')
New worst: tensor(-6.28679991e-05, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 99] 
****** iter [0] loss: 0.1500638723373413, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.1501781940460205, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.15005114674568176, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0, lr: 0.47059599999999996 pruning_in_iteration open status: None

all verified at 3th iter

Time: prepare 0.0010    bound 0.2841    transfer 0.0005    finalize 0.0011    func 0.2867    
Accumulated time: func 0.2867    prepare 0.0011    bound 0.2841    transfer 0.0005    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.2867    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.2867    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.5350120067596436


Properties batch 190, size 1
Remaining timeout: 391.4405357837677
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.80000103], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.80023491]], device='cuda:0') need to verify.
torch allclose failed: norm 0.008629132993519306
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.80015767]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.76070487]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.75it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.04899311065673828
Previous best: tensor(-0.00015664, device='cuda:0')
Previous worst: tensor(-0.00015664, device='cuda:0')
New worst: tensor(1.21593475e-05, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 480] 
****** iter [0] loss: 0.0, lr: 0.5 pruning_in_iteration open status: None

all verified at 0th iter

Time: prepare 0.0010    bound 0.0551    transfer 0.0004    finalize 0.0011    func 0.0576    
Accumulated time: func 0.0576    prepare 0.0011    bound 0.0551    transfer 0.0004    finalize 0.0011    
length of domains: 0
Time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.0576    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.0576    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.30617213249206543


Properties batch 191, size 1
Remaining timeout: 390.55656599998474
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.50000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.47626057267189026.

Properties batch 192, size 1
Remaining timeout: 390.4559643268585
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -3.9493064880371094.

Properties batch 193, size 1
Remaining timeout: 390.3577961921692
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.6315135955810547.

Properties batch 194, size 1
Remaining timeout: 390.25969219207764
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -3.9539990425109863.

Properties batch 195, size 1
Remaining timeout: 390.16100215911865
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.49238014221191406.

Properties batch 196, size 1
Remaining timeout: 390.0631537437439
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.58000112], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.5764479637145996.

Properties batch 197, size 1
Remaining timeout: 389.9649519920349
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.58000112], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.59384131]], device='cuda:0') need to verify.
torch allclose failed: norm 0.4639471769332886
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.59242296]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.48534107]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.73it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04889249801635742
Previous best: tensor(-0.01242185, device='cuda:0')
Previous worst: tensor(-0.01242185, device='cuda:0')
New worst: tensor(-0.01118851, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 99] 
****** iter [0] loss: 5.181758403778076, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 5.177934646606445, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 5.167654037475586, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 5.164445400238037, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 5.162782192230225, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 5.161829948425293, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 5.161275863647461, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 5.160930633544922, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.160690784454346, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.160521507263184, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7459    transfer 0.0005    finalize 0.0012    func 0.7485    
Accumulated time: func 0.7485    prepare 0.0011    bound 0.7459    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00030 (1), -0.00022 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.7486    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1591    set_bounds 0.0015    solve 0.7486    add 0.0021    
Sorting batched domains takes 0.001016378402709961 seconds.
Current (lb-rhs): -0.0002999305725097656
2 domains visited
Cumulative time: 0.9999127388000488

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.93it/s]
kfsb choice: tensor([1, 0], device='cuda:0')
Filtering time: 0.04846382141113281
Previous best: tensor(-0.00021935, device='cuda:0')
Previous worst: tensor(-0.00029993, device='cuda:0')
New worst: tensor(-0.00027704, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 369] [/input.7, 8] 
****** iter [0] loss: 10.320884704589844, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 10.320987701416016, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 10.320276260375977, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 10.320128440856934, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 10.320070266723633, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 10.320039749145508, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 7.740022659301758, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 5.160015106201172, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 5.16001033782959, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 5.160007476806641, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7462    transfer 0.0005    finalize 0.0015    func 0.7498    
Accumulated time: func 1.4983    prepare 0.0028    bound 1.4921    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00000 (2), -0.00000 (2), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0017    solve 0.7498    add 0.0020    
Accumulated time: pickout 0.0038    decision 0.3187    set_bounds 0.0032    solve 1.4984    add 0.0041    
Sorting batched domains takes 0.001009225845336914 seconds.
Current (lb-rhs): -2.86102294921875e-06
4 domains visited
Cumulative time: 1.9163460731506348

BaB round 3
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.78it/s]
kfsb choice: tensor([0, 1], device='cuda:0')
Filtering time: 0.048806190490722656
Previous best: tensor(-2.14576721e-06, device='cuda:0')
Previous worst: tensor(-2.86102295e-06, device='cuda:0')
New worst: tensor(-2.38418579e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 27] [/input.3, 52] 
****** iter [0] loss: 10.320011138916016, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 10.320033073425293, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0, lr: 0.48019999999999996 pruning_in_iteration open status: None

all verified at 2th iter

Time: prepare 0.0020    bound 0.2096    transfer 0.0005    finalize 0.0014    func 0.2135    
Accumulated time: func 1.7118    prepare 0.0049    bound 1.7017    transfer 0.0014    finalize 0.0040    
length of domains: 0
Time: pickout 0.0019    decision 0.1610    set_bounds 0.0017    solve 0.2135    add 0.0001    
Accumulated time: pickout 0.0057    decision 0.4797    set_bounds 0.0049    solve 1.7119    add 0.0042    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 2.294811248779297


Properties batch 198, size 1
Remaining timeout: 387.0923910140991
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-10.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -5.798134803771973.

Properties batch 199, size 1
Remaining timeout: 386.9904100894928
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-10.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9866914749145508.

Properties batch 200, size 1
Remaining timeout: 386.89033341407776
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.15000105], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.0779170989990234.

Properties batch 201, size 1
Remaining timeout: 386.77064871788025
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.15000105], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.3975703716278076.

Properties batch 202, size 1
Remaining timeout: 386.6718080043793
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.44000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.2318825721740723.

Properties batch 203, size 1
Remaining timeout: 386.5733597278595
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.44000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.418978214263916.

Properties batch 204, size 1
Remaining timeout: 386.4746341705322
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.60000098], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60681355]], device='cuda:0') need to verify.
torch allclose failed: norm 0.025562049821019173
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60611534]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[0.74596250]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.79it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04884004592895508
Previous best: tensor(-0.00611436, device='cuda:0')
Previous worst: tensor(-0.00611436, device='cuda:0')
New worst: tensor(-0.00585651, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 114] 
****** iter [0] loss: 1.211139440536499, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.2066506147384644, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 1.2040867805480957, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.2026007175445557, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 1.2017264366149902, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.2011909484863281, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 1.2008525133132935, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 1.2006288766860962, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 1.2004801034927368, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.2003775835037231, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7443    transfer 0.0005    finalize 0.0011    func 0.7470    
Accumulated time: func 0.7470    prepare 0.0011    bound 0.7443    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00020 (1), -0.00018 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.7470    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1589    set_bounds 0.0015    solve 0.7470    add 0.0021    
Sorting batched domains takes 0.0010187625885009766 seconds.
Current (lb-rhs): -0.00019657611846923828
2 domains visited
Cumulative time: 0.9984469413757324

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.90it/s]
kfsb choice: tensor([2, 0], device='cuda:0')
Filtering time: 0.048540592193603516
Previous best: tensor(-0.00017905, device='cuda:0')
Previous worst: tensor(-0.00019658, device='cuda:0')
New worst: tensor(-0.00018787, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 253] [/input.3, 253] 
****** iter [0] loss: 2.4006881713867188, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.4004006385803223, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.400247097015381, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.4001564979553223, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.400099039077759, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.4000697135925293, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.4000515937805176, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.400033473968506, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.400024890899658, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 2.400023937225342, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7263    transfer 0.0005    finalize 0.0014    func 0.7302    
Accumulated time: func 1.4771    prepare 0.0032    bound 1.4706    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1600    set_bounds 0.0016    solve 0.7302    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3189    set_bounds 0.0031    solve 1.4772    add 0.0045    
Sorting batched domains takes 0.0010437965393066406 seconds.
Current (lb-rhs): -5.841255187988281e-06
6 domains visited
Cumulative time: 1.8958494663238525

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.37it/s]
kfsb choice: tensor([0, 0, 1, 0], device='cuda:0')
Filtering time: 0.04989981651306152
Previous best: tensor(-4.41074371e-06, device='cuda:0')
Previous worst: tensor(-5.84125519e-06, device='cuda:0')
New worst: tensor(-5.84125519e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.3, 227] [/input, 108] [/input, 253] [/input, 108] 
****** iter [0] loss: 4.800045967102051, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.8000311851501465, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.800014495849609, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.800013542175293, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0036    bound 0.3651    transfer 0.0005    finalize 0.0022    func 0.3714    
Accumulated time: func 1.8485    prepare 0.0069    bound 1.8357    transfer 0.0014    finalize 0.0047    
length of domains: 0
Time: pickout 0.0020    decision 0.1619    set_bounds 0.0021    solve 0.3714    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4808    set_bounds 0.0052    solve 1.8487    add 0.0046    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.433695077896118


Properties batch 205, size 1
Remaining timeout: 383.46371603012085
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.60000098], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.594345211982727.

Properties batch 206, size 1
Remaining timeout: 383.3611934185028
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.77000093], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.7699999809265137.

Properties batch 207, size 1
Remaining timeout: 383.2615659236908
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.77000093], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.725365161895752.

Properties batch 208, size 1
Remaining timeout: 383.1623833179474
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.62000108], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.130906581878662.

Properties batch 209, size 1
Remaining timeout: 383.06410360336304
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.62000108], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.19844937324523926.

Properties batch 210, size 1
Remaining timeout: 382.9656891822815
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.18000102], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.180000066757202.

Properties batch 211, size 1
Remaining timeout: 382.86620235443115
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.18000102], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7936360836029053.

Properties batch 212, size 1
Remaining timeout: 382.76777839660645
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.29000092], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.234776496887207.

Properties batch 213, size 1
Remaining timeout: 382.6685633659363
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.29000092], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.1919069290161133.

Properties batch 214, size 1
Remaining timeout: 382.5694668292999
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.71000099], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.73065853]], device='cuda:0') need to verify.
torch allclose failed: norm 0.014285888522863388
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.72843194]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.68046522]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.72it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04902791976928711
Previous best: tensor(-0.01843095, device='cuda:0')
Previous worst: tensor(-0.01843095, device='cuda:0')
New worst: tensor(-0.01823425, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] 
****** iter [0] loss: 3.456317901611328, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 3.4413974285125732, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.433056116104126, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.428149938583374, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 3.4253242015838623, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 3.423642158508301, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 3.4225897789001465, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 3.4219090938568115, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 3.4214508533477783, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 3.421130418777466, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7454    transfer 0.0005    finalize 0.0011    func 0.7480    
Accumulated time: func 0.7480    prepare 0.0011    bound 0.7454    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00057 (1), -0.00056 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.7481    add 0.0023    
Accumulated time: pickout 0.0019    decision 0.1593    set_bounds 0.0015    solve 0.7481    add 0.0023    
Sorting batched domains takes 0.0009660720825195312 seconds.
Current (lb-rhs): -0.0005650520324707031
2 domains visited
Cumulative time: 0.9998748302459717

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.80it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.04873371124267578
Previous best: tensor(-0.00056338, device='cuda:0')
Previous worst: tensor(-0.00056505, device='cuda:0')
New worst: tensor(-0.00055814, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 16] [/input.3, 16] 
****** iter [0] loss: 6.84222412109375, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.8413286209106445, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.840778350830078, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.840475082397461, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.84030818939209, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.840210914611816, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 6.84014892578125, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.8401031494140625, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.840085029602051, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.840060710906982, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.6852    transfer 0.0005    finalize 0.0014    func 0.6887    
Accumulated time: func 1.4367    prepare 0.0028    bound 1.4306    transfer 0.0009    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1599    set_bounds 0.0017    solve 0.6887    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3192    set_bounds 0.0032    solve 1.4368    add 0.0045    
Sorting batched domains takes 0.0010235309600830078 seconds.
Current (lb-rhs): -1.430511474609375e-05
6 domains visited
Cumulative time: 1.855792760848999

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.33it/s]
kfsb choice: tensor([0, 2, 0, 1], device='cuda:0')
Filtering time: 0.04995846748352051
Previous best: tensor(-1.40666962e-05, device='cuda:0')
Previous worst: tensor(-1.43051147e-05, device='cuda:0')
New worst: tensor(-1.40666962e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input, 108] [/input.3, 253] [/input, 108] [/input, 108] 
****** iter [0] loss: 13.68011474609375, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 13.68006706237793, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 13.68004035949707, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 13.680021286010742, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 13.68001937866211, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 13.680017471313477, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0, lr: 0.4429211904319999 pruning_in_iteration open status: None

all verified at 6th iter

Time: prepare 0.0028    bound 0.5256    transfer 0.0005    finalize 0.0020    func 0.5309    
Accumulated time: func 1.9676    prepare 0.0058    bound 1.9562    transfer 0.0014    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1621    set_bounds 0.0021    solve 0.5310    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4813    set_bounds 0.0053    solve 1.9678    add 0.0046    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.553386926651001


Properties batch 215, size 1
Remaining timeout: 379.4398136138916
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.71000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.281179428100586.

Properties batch 216, size 1
Remaining timeout: 379.336389541626
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.00000095], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.04700565]], device='cuda:0') need to verify.
torch allclose failed: norm 0.0035719398874789476
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.04210281]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.47261333]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.69it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04909777641296387
Previous best: tensor(-0.04210186, device='cuda:0')
Previous worst: tensor(-0.04210186, device='cuda:0')
New worst: tensor(-0.04175615, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input, 108] 
****** iter [0] loss: 6.082889080047607, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.05007266998291, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.030521869659424, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.019379615783691, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.012918949127197, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.008971691131592, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 6.0064568519592285, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.0047926902771, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.003686428070068, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.0028886795043945, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7082    transfer 0.0005    finalize 0.0011    func 0.7108    
Accumulated time: func 0.7108    prepare 0.0011    bound 0.7082    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00145 (1), -0.00144 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7108    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7108    add 0.0020    
Sorting batched domains takes 0.0009729862213134766 seconds.
Current (lb-rhs): -0.0014476776123046875
2 domains visited
Cumulative time: 0.962867259979248

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.85it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04863309860229492
Previous best: tensor(-0.00143909, device='cuda:0')
Previous worst: tensor(-0.00144768, device='cuda:0')
New worst: tensor(-0.00145483, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 83] [/input.3, 83] 
****** iter [0] loss: 12.005735397338867, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 12.003478050231934, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 12.00210189819336, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 12.001321792602539, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 12.000907897949219, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 12.000638008117676, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 12.000439643859863, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 12.000307083129883, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 12.000246047973633, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 12.000181198120117, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0020    bound 0.7630    transfer 0.0005    finalize 0.0015    func 0.7669    
Accumulated time: func 1.4777    prepare 0.0032    bound 1.4712    transfer 0.0009    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00005 (2), -0.00004 (2), -0.00004 (2), -0.00004 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1594    set_bounds 0.0016    solve 0.7670    add 0.0023    
Accumulated time: pickout 0.0038    decision 0.3190    set_bounds 0.0031    solve 1.4778    add 0.0044    
Sorting batched domains takes 0.0010344982147216797 seconds.
Current (lb-rhs): -4.5299530029296875e-05
6 domains visited
Cumulative time: 1.8965322971343994

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.43it/s]
kfsb choice: tensor([0, 2, 2, 0], device='cuda:0')
Filtering time: 0.04983377456665039
Previous best: tensor(-4.38690186e-05, device='cuda:0')
Previous worst: tensor(-4.52995300e-05, device='cuda:0')
New worst: tensor(-4.48226929e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 135] [/input.3, 253] [/input.3, 242] [/input.7, 135] 
****** iter [0] loss: 24.000343322753906, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 24.00023078918457, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 24.00010871887207, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 24.000102996826172, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 24.000104904174805, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.0, lr: 0.4519603983999999 pruning_in_iteration open status: None

all verified at 5th iter

Time: prepare 0.0034    bound 0.4492    transfer 0.0005    finalize 0.0021    func 0.4552    
Accumulated time: func 1.9329    prepare 0.0067    bound 1.9204    transfer 0.0014    finalize 0.0047    
length of domains: 0
Time: pickout 0.0020    decision 0.1615    set_bounds 0.0021    solve 0.4553    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4805    set_bounds 0.0052    solve 1.9331    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.517808437347412


Properties batch 217, size 1
Remaining timeout: 376.24184012413025
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.527193069458008.

Properties batch 218, size 1
Remaining timeout: 376.1321976184845
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.34000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.340000033378601.

Properties batch 219, size 1
Remaining timeout: 376.0333659648895
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.34000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3373271226882935.

Properties batch 220, size 1
Remaining timeout: 375.93463587760925
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.11000109], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -3.0933539867401123.

Properties batch 221, size 1
Remaining timeout: 375.83573722839355
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.11000109], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.272369623184204.

Properties batch 222, size 1
Remaining timeout: 375.73686027526855
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.64000082], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.6123003959655762.

Properties batch 223, size 1
Remaining timeout: 375.6379075050354
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-5.64000082], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -3.883729934692383.

Properties batch 224, size 1
Remaining timeout: 375.53888750076294
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.00115228]], device='cuda:0') need to verify.
torch allclose failed: norm 0.019236834719777107
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.00101972]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[-0.27443367]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.74it/s]
kfsb choice: tensor([2], device='cuda:0')
Filtering time: 0.048822879791259766
Previous best: tensor(-0.00101876, device='cuda:0')
Previous worst: tensor(-0.00101876, device='cuda:0')
New worst: tensor(-0.00095785, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] 
****** iter [0] loss: 2.0018043518066406, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.0010738372802734, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.000648021697998, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.000342845916748, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.0001931190490723, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.0001235008239746, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.000086784362793, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.0000624656677246, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.0000455379486084, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 2.000032901763916, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7350    transfer 0.0005    finalize 0.0011    func 0.7376    
Accumulated time: func 0.7376    prepare 0.0011    bound 0.7350    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00002 (1), -0.00001 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1586    set_bounds 0.0015    solve 0.7377    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1586    set_bounds 0.0015    solve 0.7377    add 0.0021    
Sorting batched domains takes 0.000980377197265625 seconds.
Current (lb-rhs): -1.704692840576172e-05
2 domains visited
Cumulative time: 0.9886693954467773

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.76it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.04883742332458496
Previous best: tensor(-1.38282776e-05, device='cuda:0')
Previous worst: tensor(-1.70469284e-05, device='cuda:0')
New worst: tensor(-1.40666962e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 375] [/input.7, 375] 
****** iter [0] loss: 4.000035285949707, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.000032424926758, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 3.0000085830688477, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 1.0000011920928955, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0016    bound 0.3676    transfer 0.0005    finalize 0.0014    func 0.3711    
Accumulated time: func 1.1087    prepare 0.0028    bound 1.1026    transfer 0.0009    finalize 0.0025    
length of domains: 0
Time: pickout 0.0019    decision 0.1599    set_bounds 0.0017    solve 0.3712    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3185    set_bounds 0.0032    solve 1.1088    add 0.0022    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.5237486362457275


Properties batch 225, size 1
Remaining timeout: 373.4390993118286
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([0.39999899], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4001719057559967.

Properties batch 226, size 1
Remaining timeout: 373.3366446495056
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.80000103], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.7708523869514465.

Properties batch 227, size 1
Remaining timeout: 373.23652696609497
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([0.39999899], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4232739806175232.

Properties batch 228, size 1
Remaining timeout: 373.1370313167572
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.10000110], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.011885643005371.

Properties batch 229, size 1
Remaining timeout: 373.0379686355591
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.10000110], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.8770381212234497.

Properties batch 230, size 1
Remaining timeout: 372.93920636177063
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.80000091], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.1431005001068115.

Properties batch 231, size 1
Remaining timeout: 372.8403353691101
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.80000091], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.5042622089385986.

Properties batch 232, size 1
Remaining timeout: 372.74156403541565
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.20000076], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -4.199999809265137.

Properties batch 233, size 1
Remaining timeout: 372.64275097846985
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-4.20000076], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.197375297546387.

Properties batch 234, size 1
Remaining timeout: 372.54323744773865
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.0.

Properties batch 235, size 1
Remaining timeout: 372.44407391548157
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9981837272644043.

Properties batch 236, size 1
Remaining timeout: 372.3449728488922
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.24000096], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.25189614]], device='cuda:0') need to verify.
torch allclose failed: norm 0.04466749355196953
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.25071454]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[3.84388781]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.69it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.048937320709228516
Previous best: tensor(-0.01071358, device='cuda:0')
Previous worst: tensor(-0.01071358, device='cuda:0')
New worst: tensor(-0.01001072, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] 
****** iter [0] loss: 4.499595642089844, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.496145725250244, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.487630367279053, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.4842848777771, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 4.482709884643555, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 4.481810569763184, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 4.481295585632324, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 4.480959415435791, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 4.480731964111328, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.480571269989014, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7467    transfer 0.0005    finalize 0.0011    func 0.7493    
Accumulated time: func 0.7493    prepare 0.0011    bound 0.7467    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00030 (1), -0.00027 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1597    set_bounds 0.0015    solve 0.7494    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1597    set_bounds 0.0015    solve 0.7494    add 0.0020    
Sorting batched domains takes 0.0009756088256835938 seconds.
Current (lb-rhs): -0.0003008842468261719
2 domains visited
Cumulative time: 1.001457929611206

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.82it/s]
kfsb choice: tensor([1, 0], device='cuda:0')
Filtering time: 0.04874396324157715
Previous best: tensor(-0.00026846, device='cuda:0')
Previous worst: tensor(-0.00030088, device='cuda:0')
New worst: tensor(-0.00027752, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 149] [/input.7, 149] 
****** iter [0] loss: 8.960958480834961, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 8.960834503173828, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 8.960369110107422, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 8.960208892822266, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 8.960128784179688, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 8.960088729858398, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 8.960062980651855, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 8.960046768188477, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 8.960029602050781, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 8.960028648376465, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7503    transfer 0.0005    finalize 0.0014    func 0.7538    
Accumulated time: func 1.5031    prepare 0.0029    bound 1.4970    transfer 0.0009    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1599    set_bounds 0.0017    solve 0.7538    add 0.0024    
Accumulated time: pickout 0.0038    decision 0.3196    set_bounds 0.0032    solve 1.5032    add 0.0044    
Sorting batched domains takes 0.0010538101196289062 seconds.
Current (lb-rhs): -7.152557373046875e-06
6 domains visited
Cumulative time: 1.9226422309875488

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.37it/s]
kfsb choice: tensor([0, 1, 1, 1], device='cuda:0')
Filtering time: 0.04988598823547363
Previous best: tensor(-5.24520874e-06, device='cuda:0')
Previous worst: tensor(-7.15255737e-06, device='cuda:0')
New worst: tensor(-5.72204590e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 61] [/input.7, 21] [/input.7, 212] [/input.7, 369] 
****** iter [0] loss: 17.920047760009766, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 17.920042037963867, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 17.920026779174805, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.480006217956543, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0023    bound 0.3322    transfer 0.0005    finalize 0.0019    func 0.3369    
Accumulated time: func 1.8400    prepare 0.0053    bound 1.8292    transfer 0.0014    finalize 0.0044    
length of domains: 0
Time: pickout 0.0020    decision 0.1624    set_bounds 0.0022    solve 0.3370    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4821    set_bounds 0.0054    solve 1.8402    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.4265522956848145


Properties batch 237, size 1
Remaining timeout: 369.34284687042236
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.24000096], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.24452090]], device='cuda:0') need to verify.
torch allclose failed: norm 0.10994529724121094
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.24406195]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[5.75475216]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.77it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.048769235610961914
Previous best: tensor(-0.00406098, device='cuda:0')
Previous worst: tensor(-0.00406098, device='cuda:0')
New worst: tensor(-0.00358558, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 353] 
****** iter [0] loss: 4.487005233764648, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 4.488137245178223, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 4.482938766479492, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 4.4812822341918945, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 4.480955123901367, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 4.480698108673096, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 4.480501174926758, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 4.480343818664551, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 4.480231761932373, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 4.480173110961914, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7423    transfer 0.0005    finalize 0.0011    func 0.7449    
Accumulated time: func 0.7449    prepare 0.0011    bound 0.7423    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00011 (1), -0.00006 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7449    add 0.0022    
Accumulated time: pickout 0.0019    decision 0.1590    set_bounds 0.0015    solve 0.7449    add 0.0022    
Sorting batched domains takes 0.000982046127319336 seconds.
Current (lb-rhs): -0.00010943412780761719
2 domains visited
Cumulative time: 0.9966237545013428

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.84it/s]
kfsb choice: tensor([2, 2], device='cuda:0')
Filtering time: 0.048586368560791016
Previous best: tensor(-6.19888306e-05, device='cuda:0')
Previous worst: tensor(-0.00010943, device='cuda:0')
New worst: tensor(-0.00010490, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 135] [/input.7, 135] 
****** iter [0] loss: 8.960277557373047, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 8.960253715515137, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 8.960083961486816, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 8.960030555725098, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.720011234283447, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 2.2400028705596924, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.2400012016296387, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0, lr: 0.4340627666233599 pruning_in_iteration open status: None

all verified at 7th iter

Time: prepare 0.0016    bound 0.6006    transfer 0.0005    finalize 0.0014    func 0.6041    
Accumulated time: func 1.3490    prepare 0.0028    bound 1.3429    transfer 0.0010    finalize 0.0025    
length of domains: 0
Time: pickout 0.0020    decision 0.1598    set_bounds 0.0017    solve 0.6042    add 0.0001    
Accumulated time: pickout 0.0039    decision 0.3188    set_bounds 0.0032    solve 1.3491    add 0.0023    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 1.7646434307098389


Properties batch 238, size 1
Remaining timeout: 367.0003550052643
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.45000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.450000047683716.

Properties batch 239, size 1
Remaining timeout: 366.8978831768036
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4223456382751465.

Properties batch 240, size 1
Remaining timeout: 366.799108505249
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.10000098], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.9402719140052795.

Properties batch 241, size 1
Remaining timeout: 366.70023465156555
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00897744]], device='cuda:0') need to verify.
torch allclose failed: norm 0.027103431522846222
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00799487]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[1.03914773]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.70it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.04900646209716797
Previous best: tensor(-0.00799387, device='cuda:0')
Previous worst: tensor(-0.00799387, device='cuda:0')
New worst: tensor(-0.00776751, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] 
****** iter [0] loss: 0.013481155037879944, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.008767327293753624, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0051028430461883545, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0030216185841709375, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0019329743226990104, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 0.00130453088786453, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 0.0009204313391819596, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 0.0006751808105036616, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 0.000511650403495878, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 0.0003988492244388908, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7534    transfer 0.0005    finalize 0.0011    func 0.7560    
Accumulated time: func 0.7560    prepare 0.0011    bound 0.7534    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00023 (1), -0.00016 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7560    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.7560    add 0.0021    
Sorting batched domains takes 0.0009872913360595703 seconds.
Current (lb-rhs): -0.00023213725944515318
2 domains visited
Cumulative time: 1.0080885887145996

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.85it/s]
kfsb choice: tensor([1, 1], device='cuda:0')
Filtering time: 0.048633575439453125
Previous best: tensor(-0.00016471, device='cuda:0')
Previous worst: tensor(-0.00023214, device='cuda:0')
New worst: tensor(-0.00022319, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 130] [/input.7, 501] 
****** iter [0] loss: 0.0006913042161613703, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 0.00041139882523566484, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 0.0002364200772717595, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 0.0001420215266989544, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 9.004989988170564e-05, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 5.953661457169801e-05, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 4.126218118472025e-05, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.9700124287046492e-05, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.2126925614429638e-05, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 1.6972415323834866e-05, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0016    bound 0.7562    transfer 0.0005    finalize 0.0014    func 0.7597    
Accumulated time: func 1.5157    prepare 0.0028    bound 1.5096    transfer 0.0009    finalize 0.0025    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00000 (2), -0.00000 (2), -0.00000 (2), 
length of domains: 4
Time: pickout 0.0019    decision 0.1597    set_bounds 0.0017    solve 0.7598    add 0.0022    
Accumulated time: pickout 0.0038    decision 0.3192    set_bounds 0.0032    solve 1.5158    add 0.0043    
Sorting batched domains takes 0.0010676383972167969 seconds.
Current (lb-rhs): -5.290153694659239e-06
6 domains visited
Cumulative time: 1.9348607063293457

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.36it/s]
kfsb choice: tensor([1, 2, 0, 2], device='cuda:0')
Filtering time: 0.04985499382019043
Previous best: tensor(-1.02921365e-06, device='cuda:0')
Previous worst: tensor(-5.29015369e-06, device='cuda:0')
New worst: tensor(-4.90408229e-06, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 8] [/input.7, 501] [/input.3, 125] [/input.3, 242] 
****** iter [0] loss: 2.8309692424954847e-05, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 1.6536705516045913e-05, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 7.553700470452895e-06, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 3.398635499252123e-06, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0027    bound 0.3714    transfer 0.0005    finalize 0.0020    func 0.3765    
Accumulated time: func 1.8923    prepare 0.0057    bound 1.8810    transfer 0.0014    finalize 0.0045    
length of domains: 0
Time: pickout 0.0020    decision 0.1616    set_bounds 0.0021    solve 0.3766    add 0.0001    
Accumulated time: pickout 0.0058    decision 0.4808    set_bounds 0.0054    solve 1.8924    add 0.0044    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.477555274963379


Properties batch 242, size 1
Remaining timeout: 363.6478786468506
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.24000096], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.15202260017395.

Properties batch 243, size 1
Remaining timeout: 363.5457558631897
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.24000096], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.059175491333008.

Properties batch 244, size 1
Remaining timeout: 363.44784116744995
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.840463638305664.

Properties batch 245, size 1
Remaining timeout: 363.34851145744324
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.8993645906448364.

Properties batch 246, size 1
Remaining timeout: 363.2496032714844
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.42000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.4199996888637543.

Properties batch 247, size 1
Remaining timeout: 363.1504054069519
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.41884616017341614.

Properties batch 248, size 1
Remaining timeout: 363.05204677581787
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.10000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.09999959915876389.

Properties batch 249, size 1
Remaining timeout: 362.95294070243835
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.09920620173215866.

Properties batch 250, size 1
Remaining timeout: 362.8544816970825
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.25000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.24999962747097015.

Properties batch 251, size 1
Remaining timeout: 362.7564284801483
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24899107217788696.

Properties batch 252, size 1
Remaining timeout: 362.65818643569946
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.90000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.8999996185302734.

Properties batch 253, size 1
Remaining timeout: 362.55927324295044
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.90000099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8982803821563721.

Properties batch 254, size 1
Remaining timeout: 362.4617705345154
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.50000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.5.

Properties batch 255, size 1
Remaining timeout: 362.36320781707764
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.50000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8911411762237549.

Properties batch 256, size 1
Remaining timeout: 362.2643401622772
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.50000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.499999761581421.

Properties batch 257, size 1
Remaining timeout: 362.16583371162415
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4982777833938599.

Properties batch 258, size 1
Remaining timeout: 362.06662821769714
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.87000102], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.8699995875358582.

Properties batch 259, size 1
Remaining timeout: 361.9682810306549
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-9.99999997e-07], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8685550093650818.

Properties batch 260, size 1
Remaining timeout: 361.8699240684509
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-6.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -4.82310676574707.

Properties batch 261, size 1
Remaining timeout: 361.77180457115173
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.9056336879730225.

Properties batch 262, size 1
Remaining timeout: 361.6734194755554
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.25000095], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-3.26466036]], device='cuda:0') need to verify.
torch allclose failed: norm 0.04403857886791229
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-3.26319218]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[2.62230873]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.65it/s]
kfsb choice: tensor([1], device='cuda:0')
Filtering time: 0.0490877628326416
Previous best: tensor(-0.01319122, device='cuda:0')
Previous worst: tensor(-0.01319122, device='cuda:0')
New worst: tensor(-0.01229668, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 403] 
****** iter [0] loss: 6.5234761238098145, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 6.513578414916992, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 6.508062839508057, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.504918098449707, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 6.503216743469238, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 6.502190113067627, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 6.501574516296387, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 6.501165866851807, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 6.50089168548584, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 6.500709533691406, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.6492    transfer 0.0005    finalize 0.0012    func 0.6519    
Accumulated time: func 0.6519    prepare 0.0011    bound 0.6492    transfer 0.0005    finalize 0.0012    
Current worst splitting domains lb-rhs (depth):
-0.00040 (1), -0.00031 (1), 
length of domains: 2
Time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.6519    add 0.0021    
Accumulated time: pickout 0.0019    decision 0.1596    set_bounds 0.0015    solve 0.6519    add 0.0021    
Sorting batched domains takes 0.0009908676147460938 seconds.
Current (lb-rhs): -0.000400543212890625
2 domains visited
Cumulative time: 0.9040930271148682

BaB round 2
batch: 2
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.39it/s]
kfsb choice: tensor([0, 0], device='cuda:0')
Filtering time: 0.04971432685852051
Previous best: tensor(-0.00030708, device='cuda:0')
Previous worst: tensor(-0.00040054, device='cuda:0')
New worst: tensor(-0.00039005, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.7, 193] [/input.3, 83] 
****** iter [0] loss: 13.001291275024414, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 13.00091552734375, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 13.000494956970215, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 13.000271797180176, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 13.000181198120117, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 13.000120162963867, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 13.000085830688477, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 13.000064849853516, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 13.00004768371582, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 13.000038146972656, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0019    bound 0.7448    transfer 0.0005    finalize 0.0014    func 0.7487    
Accumulated time: func 1.4005    prepare 0.0031    bound 1.3940    transfer 0.0010    finalize 0.0026    
Current worst splitting domains lb-rhs (depth):
-0.00001 (2), -0.00001 (2), -0.00001 (2), -0.00001 (2), 
length of domains: 4
Time: pickout 0.0020    decision 0.1612    set_bounds 0.0018    solve 0.7487    add 0.0023    
Accumulated time: pickout 0.0039    decision 0.3207    set_bounds 0.0033    solve 1.4006    add 0.0044    
Sorting batched domains takes 0.0010287761688232422 seconds.
Current (lb-rhs): -1.1920928955078125e-05
6 domains visited
Cumulative time: 1.8214266300201416

BaB round 3
batch: 4
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.17it/s]
kfsb choice: tensor([2, 0, 2, 0], device='cuda:0')
Filtering time: 0.05038142204284668
Previous best: tensor(-5.24520874e-06, device='cuda:0')
Previous worst: tensor(-1.19209290e-05, device='cuda:0')
New worst: tensor(-1.14440918e-05, device='cuda:0')
Average branched neurons at iteration 3:  1.0000
splitting decisions: 
split level 0: [/input.7, 337] [/input.7, 99] [/input.3, 27] [/input.3, 146] 
****** iter [0] loss: 26.00006866455078, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 26.00004005432129, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 26.00004005432129, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 6.50000524520874, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0027    bound 0.3725    transfer 0.0005    finalize 0.0020    func 0.3778    
Accumulated time: func 1.7783    prepare 0.0060    bound 1.7665    transfer 0.0015    finalize 0.0046    
length of domains: 0
Time: pickout 0.0021    decision 0.1633    set_bounds 0.0023    solve 0.3778    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.4840    set_bounds 0.0055    solve 1.7785    add 0.0045    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6 domains visited
Cumulative time: 2.367293119430542


Properties batch 263, size 1
Remaining timeout: 358.7306077480316
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-1.25000095], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.25248790]], device='cuda:0') need to verify.
torch allclose failed: norm 0.09395618736743927
Model prediction is: tensor([ 0.00000000,  0.00000000,  0.00000000,  ..., -0.00013042,
        -0.00027345, -0.00087259], device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /98 start_node /294 with alignment adjustment
setting alpha for layer /100 start_node /294 with alignment adjustment
setting alpha for layer /102 start_node /294 with alignment adjustment
setting alpha for layer /114 start_node /294 with alignment adjustment
setting alpha for layer /177/sqr start_node /294 with alignment adjustment
setting alpha for layer /178/sqr start_node /294 with alignment adjustment
setting alpha for layer /259/sqr start_node /294 with alignment adjustment
setting alpha for layer /260/sqr start_node /294 with alignment adjustment
setting alpha for layer /263/sqr start_node /294 with alignment adjustment
setting alpha for layer /264/sqr start_node /294 with alignment adjustment
setting alpha for layer /283/sqr start_node /294 with alignment adjustment
setting alpha for layer /181 start_node /294 with alignment adjustment
setting alpha for layer /182 start_node /294 with alignment adjustment
setting alpha for layer /183 start_node /294 with alignment adjustment
all alpha initialized
true A is required, we do a full backward CROWN pass to obtain it
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.25217736]], device='cuda:0', grad_fn=<ViewBackward0>) tensor([[7.71894073]], device='cuda:0', grad_fn=<ViewBackward0>)
Intermediate layers: /input,/input.3,/input.7,/113,/172,/174,/176,/181,/179,/180,/189,/194,/198,/202,/160,/294
Keeping alphas for these layers: ['/294']
Keeping alphas for these layers: ['/294']
Node /98 input 0: size torch.Size([256]) unstable 65
Node /100 input 0: size torch.Size([256]) unstable 46
Node /102 input 0: size torch.Size([512]) unstable 235
Node /114 input 0: size torch.Size([438]) unstable 438
Node /179 input 0: size torch.Size([411]) unstable 411
Node /180 input 0: size torch.Size([411]) unstable 411
Node /181 input 0: size torch.Size([411]) unstable 411
Node /181 input 1: size torch.Size([411]) unstable 411
Node /182 input 0: size torch.Size([411]) unstable 411
Node /182 input 1: size torch.Size([411]) unstable 411
Node /183 input 0: size torch.Size([411]) unstable 411
Node /183 input 1: size torch.Size([411]) unstable 411
Node /177/sqr input 0: size torch.Size([411]) unstable 411
Node /178/sqr input 0: size torch.Size([411]) unstable 411
Node /259/sqr input 0: size torch.Size([411]) unstable 411
Node /260/sqr input 0: size torch.Size([411]) unstable 411
Node /263/sqr input 0: size torch.Size([411]) unstable 411
Node /264/sqr input 0: size torch.Size([411]) unstable 411
Node /283/sqr input 0: size torch.Size([300]) unstable 300
-----------------
# of unstable neurons: 6838
-----------------

BaB round 1
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.64it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04908156394958496
Previous best: tensor(-0.00217640, device='cuda:0')
Previous worst: tensor(-0.00217640, device='cuda:0')
New worst: tensor(-0.00179374, device='cuda:0')
Average branched neurons at iteration 1:  1.0000
splitting decisions: 
split level 0: [/input.7, 353] 
****** iter [0] loss: 2.5033364295959473, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.5092859268188477, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.5033931732177734, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.501176595687866, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 2.500741481781006, lr: 0.46118407999999994 pruning_in_iteration open status: None
****** iter [5] loss: 1.2504867315292358, lr: 0.4519603983999999 pruning_in_iteration open status: None
****** iter [6] loss: 2.5003981590270996, lr: 0.4429211904319999 pruning_in_iteration open status: None
****** iter [7] loss: 2.500317096710205, lr: 0.4340627666233599 pruning_in_iteration open status: None
****** iter [8] loss: 2.500234603881836, lr: 0.4253815112908927 pruning_in_iteration open status: None
****** iter [9] loss: 2.5001633167266846, lr: 0.41687388106507484 pruning_in_iteration open status: None

Time: prepare 0.0010    bound 0.7548    transfer 0.0005    finalize 0.0011    func 0.7575    
Accumulated time: func 0.7575    prepare 0.0011    bound 0.7548    transfer 0.0005    finalize 0.0011    
Current worst splitting domains lb-rhs (depth):
-0.00008 (1), 
length of domains: 1
Time: pickout 0.0019    decision 0.1592    set_bounds 0.0015    solve 0.7575    add 0.0020    
Accumulated time: pickout 0.0019    decision 0.1592    set_bounds 0.0015    solve 0.7575    add 0.0020    
Sorting batched domains takes 0.000978231430053711 seconds.
Current (lb-rhs): -7.867813110351562e-05
1 domains visited
Cumulative time: 1.0091931819915771

BaB round 2
batch: 1
Start filtering...
  0%|                                                                                                                 | 0/1 [00:00<?, ?it/s]100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 21.60it/s]
kfsb choice: tensor([0], device='cuda:0')
Filtering time: 0.04913902282714844
Previous best: tensor(-7.86781311e-05, device='cuda:0')
Previous worst: tensor(-7.86781311e-05, device='cuda:0')
New worst: tensor(-6.77108765e-05, device='cuda:0')
Average branched neurons at iteration 2:  1.0000
splitting decisions: 
split level 0: [/input.3, 242] 
****** iter [0] loss: 2.5001368522644043, lr: 0.5 pruning_in_iteration open status: None
****** iter [1] loss: 2.5002670288085938, lr: 0.49 pruning_in_iteration open status: None
****** iter [2] loss: 2.5001220703125, lr: 0.48019999999999996 pruning_in_iteration open status: None
****** iter [3] loss: 2.5000128746032715, lr: 0.47059599999999996 pruning_in_iteration open status: None
****** iter [4] loss: 0.0, lr: 0.46118407999999994 pruning_in_iteration open status: None

all verified at 4th iter

Time: prepare 0.0015    bound 0.3430    transfer 0.0005    finalize 0.0012    func 0.3461    
Accumulated time: func 1.1036    prepare 0.0027    bound 1.0978    transfer 0.0010    finalize 0.0023    
length of domains: 0
Time: pickout 0.0019    decision 0.1605    set_bounds 0.0016    solve 0.3462    add 0.0001    
Accumulated time: pickout 0.0038    decision 0.3197    set_bounds 0.0031    solve 1.1037    add 0.0021    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 1.5196220874786377


Properties batch 264, size 1
Remaining timeout: 356.63214135169983
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-3.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -2.3877272605895996.

Properties batch 265, size 1
Remaining timeout: 356.52930545806885
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-2.00000095], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -1.8145527839660645.

Properties batch 266, size 1
Remaining timeout: 356.4297921657562
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.02000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.019999228417873383.

Properties batch 267, size 1
Remaining timeout: 356.3296253681183
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.02000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.01937134936451912.

Properties batch 268, size 1
Remaining timeout: 356.2299909591675
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.17350100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.17349964380264282.

Properties batch 269, size 1
Remaining timeout: 356.1303367614746
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.17350100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.17246636748313904.

Properties batch 270, size 1
Remaining timeout: 356.0306513309479
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.12830099], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.12829925119876862.

Properties batch 271, size 1
Remaining timeout: 355.9318172931671
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.12800100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1268407553434372.

Properties batch 272, size 1
Remaining timeout: 355.833261013031
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.38000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.3799997568130493.

Properties batch 273, size 1
Remaining timeout: 355.7340350151062
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.38000101], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.37873101234436035.

Properties batch 274, size 1
Remaining timeout: 355.6351912021637
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.06000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound -0.059999603778123856.

Properties batch 275, size 1
Remaining timeout: 355.53567123413086
##### Instance 0 first 10 spec matrices: 
tensor([[[0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float64)
thresholds: tensor([-0.06000100], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05916007235646248.
Result: safe in 244.5644 seconds
############# Summary #############
Final verified acc: 100.0% (total 1 examples)
Problem instances count: 1 , total verified (safe/unsat): 1 , total falsified (unsafe/sat): 0 , timeout: 0
mean time for ALL instances (total 1):244.56197293457666, max time: 244.56441855430603
mean time for verified SAFE instances(total 1): 244.56441855430603, max time: 244.56441855430603
safe (total 1), index: [0]
